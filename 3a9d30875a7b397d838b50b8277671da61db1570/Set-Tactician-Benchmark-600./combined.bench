Coq.Init.Logic.Conjunction.proj1	600
Coq.Init.Logic.Conjunction.proj2	600
Coq.Init.Logic.Equivalence.iff_refl	600
Coq.Init.Logic.Equivalence.iff_trans	600
Coq.Init.Logic.Equivalence.iff_sym	600	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto).	0.067707	7
Coq.Init.Logic.and_iff_compat_l	600
Coq.Init.Logic.and_iff_compat_r	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: apply H; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: apply H0; only 1: assumption; only 1: assumption).	0.250160	42
Coq.Init.Logic.or_iff_compat_l	600
Coq.Init.Logic.or_iff_compat_r	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: left; only 1: apply H; only 1: assumption; only 1: right; only 1: assumption; only 1: intros ?; only 1: destruct H1; only 1: left; only 1: apply H0; only 1: assumption; only 1: right; only 1: assumption).	0.244662	44
Coq.Init.Logic.imp_iff_compat_l	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: apply H1; only 1: assumption; only 1: intros ?; only 1: intros ?; only 1: apply H0; only 1: apply H1; only 1: assumption).	0.180838	24
Coq.Init.Logic.imp_iff_compat_r	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: apply H0; only 1: assumption; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: apply H; only 1: assumption).	0.089766	24
Coq.Init.Logic.not_iff_compat	600
Coq.Init.Logic.neg_false	600
Coq.Init.Logic.and_cancel_l	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: apply H1; only 1: split; only 1: apply H; only 1: assumption; only 1: assumption; only 1: intros; only 1: apply H2; only 1: split; only 1: apply H0; only 1: assumption; only 1: assumption; only 1: apply and_iff_compat_l).	0.302660	46
Coq.Init.Logic.and_cancel_r	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: apply H1; only 1: split; only 1: assumption; only 1: apply H; only 1: assumption; only 1: intros; only 1: apply H2; only 1: split; only 1: assumption; only 1: apply H0; only 1: assumption; only 1: apply and_iff_compat_r).	0.261858	46
Coq.Init.Logic.and_comm	600	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: split; only 1: trivial; only 1: trivial; only 1: intros ?; only 1: destruct H; only 1: split; only 1: assumption; only 1: assumption).	0.082717	20
Coq.Init.Logic.and_assoc	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: split; only 1: assumption; only 1: split; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: destruct H0; only 1: split; only 1: split; only 1: assumption; only 1: assumption; only 1: assumption).	0.289867	42
Coq.Init.Logic.or_cancel_l	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: destruct H1; only 1: right; only 1: assumption; only 1: destruct H; only 1: assumption; only 1: assumption; only 1: assumption; only 1: intros; only 1: destruct H2; only 1: right; only 1: assumption; only 1: destruct H0; only 1: assumption; only 1: assumption; only 1: assumption; only 1: apply or_iff_compat_l).	0.314546	50
Coq.Init.Logic.or_cancel_r	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: destruct H1; only 1: left; only 1: assumption; only 1: assumption; only 1: destruct H; only 1: assumption; only 1: assumption; only 1: intros; only 1: destruct H2; only 1: left; only 1: assumption; only 1: assumption; only 1: destruct H0; only 1: assumption; only 1: assumption; only 1: apply or_iff_compat_r).	0.498125	50
Coq.Init.Logic.or_comm	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: right; only 1: assumption; only 1: left; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: right; only 1: assumption; only 1: left; only 1: assumption).	0.197547	22
Coq.Init.Logic.or_assoc	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: left; only 1: assumption; only 1: right; only 1: left; only 1: assumption; only 1: right; only 1: right; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: left; only 1: left; only 1: assumption; only 1: destruct H; only 1: left; only 1: right; only 1: assumption; only 1: right; only 1: assumption).	0.505427	48
Coq.Init.Logic.iff_and	600	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto).	0.173009	7
Coq.Init.Logic.iff_to_and	600	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto).	0.225546	20
Coq.Init.Logic.universal_quantification.inst	600
Coq.Init.Logic.universal_quantification.gen	600
Coq.Init.Logic.Logic_lemmas.absurd	600	0.0.0.0.0.0.0	synth with cache (only 1: unfold not; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: assumption).	0.119750	7
Coq.Init.Logic.Logic_lemmas.equality.eq_sym	600
Coq.Init.Logic.Logic_lemmas.equality.eq_trans	600
Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	600
Coq.Init.Logic.Logic_lemmas.equality.f_equal	600
Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	600
Coq.Init.Logic.Logic_lemmas.eq_sind_r	600
Coq.Init.Logic.Logic_lemmas.eq_ind_r	600
Coq.Init.Logic.Logic_lemmas.eq_rec_r	600
Coq.Init.Logic.Logic_lemmas.eq_rect_r	600
Coq.Init.Logic.equality_dep.f_equal_dep	600
Coq.Init.Logic.equality_dep2.f_equal_dep2	600
Coq.Init.Logic.rew_opp_r	600	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.078828	3
Coq.Init.Logic.rew_opp_l	600	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.076581	3
Coq.Init.Logic.f_equal2	600	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.078026	3
Coq.Init.Logic.f_equal3	600	0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.124120	4
Coq.Init.Logic.f_equal4	600	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.088802	5
Coq.Init.Logic.f_equal5	600	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.125772	6
Coq.Init.Logic.f_equal_compose	600
Coq.Init.Logic.eq_trans_refl_l	600
Coq.Init.Logic.eq_trans_refl_r	600
Coq.Init.Logic.eq_sym_involutive	600
Coq.Init.Logic.eq_trans_sym_inv_l	600
Coq.Init.Logic.eq_trans_sym_inv_r	600
Coq.Init.Logic.eq_trans_assoc	600
Coq.Init.Logic.rew_map	600
Coq.Init.Logic.eq_trans_map	600
Coq.Init.Logic.map_subst	600
Coq.Init.Logic.map_subst_map	600
Coq.Init.Logic.rew_swap	600
Coq.Init.Logic.rew_compose	600
Coq.Init.Logic.eq_id_comm_l	600
Coq.Init.Logic.eq_id_comm_r	600
Coq.Init.Logic.eq_refl_map_distr	600	0	synth with cache (only 1: reflexivity).	0.105521	1
Coq.Init.Logic.eq_trans_map_distr	600
Coq.Init.Logic.eq_sym_map_distr	600
Coq.Init.Logic.eq_trans_sym_distr	600
Coq.Init.Logic.eq_trans_rew_distr	600
Coq.Init.Logic.rew_const	600
Coq.Init.Logic.unique_existence	600
Coq.Init.Logic.forall_exists_unique_domain_coincide	600
Coq.Init.Logic.forall_exists_coincide_unique_domain	600
Coq.Init.Logic.exists_inhabited	600	0.0	synth with cache (only 1: destruct 1; only 1: auto).	0.082928	2
Coq.Init.Logic.inhabited_covariant	600
Coq.Init.Logic.eq_stepl	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- H0; only 1: exact H).	0.081969	8
Coq.Init.Logic.iff_stepl	600	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: auto; only 1: intros; only 1: auto).	0.139710	20
Coq.Init.Logic.ex.eq_ex_uncurried	600	0.0.0.0	synth with cache (only 1: destruct pq; only 1: destruct H; only 1: destruct x; only 1: reflexivity).	0.090087	4
Coq.Init.Logic.ex.rew_ex	600	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	0.129101	3
Coq.Init.Logic.ex2.eq_ex2_uncurried	600	0.0.0.0.0.0	synth with cache (only 1: destruct pq; only 1: destruct H0; only 1: destruct H; only 1: destruct x; only 1: simpl in *; only 1: reflexivity).	0.135673	6
Coq.Init.Logic.ex2.rew_ex2	600	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	0.095553	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	600
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	600
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	600
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	600
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	600
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	600
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	600
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	600
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	600
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	600
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	600
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	600
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	600
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	600
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	600
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	600
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	600
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	600
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	600
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	600
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	600
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	600
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	600
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	600
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	600
Coq.Arith.Le.le_n_0_eq	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: Nat.le_elim H; only 1: false_hyp H Nat.nlt_0_r; only 1: assumption).	1.251879	5
Coq.Arith.Le.le_elim_rel	600
Coq.Sets.Multiset.multiset_defs.meq_refl	600
Coq.Sets.Multiset.multiset_defs.meq_trans	600
Coq.Sets.Multiset.multiset_defs.meq_sym	600
Coq.Sets.Multiset.multiset_defs.munion_empty_left	600
Coq.Sets.Multiset.multiset_defs.munion_empty_right	600
Coq.Sets.Multiset.multiset_defs.munion_comm	600
Coq.Sets.Multiset.multiset_defs.munion_ass	600
Coq.Sets.Multiset.multiset_defs.meq_left	600
Coq.Sets.Multiset.multiset_defs.meq_right	600
Coq.Sets.Multiset.multiset_defs.munion_rotate	600
Coq.Sets.Multiset.multiset_defs.meq_congr	600
Coq.Sets.Multiset.multiset_defs.munion_perm_left	600
Coq.Sets.Multiset.multiset_defs.multiset_twist1	600
Coq.Sets.Multiset.multiset_defs.multiset_twist2	600
Coq.Sets.Multiset.multiset_defs.treesort_twist1	600
Coq.Sets.Multiset.multiset_defs.treesort_twist2	600
Coq.Sets.Multiset.multiset_defs.meq_singleton	600
Coq.Structures.OrdersAlt.Update_OT.lt_strorder	600
Coq.Structures.OrdersAlt.Update_OT.lt_compat	600
Coq.Structures.OrdersAlt.Update_OT.compare_spec	600
Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	600
Coq.Structures.OrdersAlt.Backport_OT.lt_trans	600
Coq.Structures.OrdersAlt.Backport_OT.compare	600
Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	600
Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	600
Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	600
Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	600
Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	600
Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	600
Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	600
Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	600
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	600
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	600
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	600
Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	600
Coq.ZArith.Zorder.Ztrichotomy_inf	600
Coq.ZArith.Zorder.Ztrichotomy	600	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_trichotomy).	2.924431	3
Coq.ZArith.Zorder.dec_Zne	600
Coq.ZArith.Zorder.dec_Zgt	600
Coq.ZArith.Zorder.dec_Zge	600
Coq.ZArith.Zorder.not_Zeq	600	0	synth with cache (only 1: apply Z.lt_gt_cases).	2.788334	1
Coq.ZArith.Zorder.Zle_not_lt	600	0	synth with cache (only 1: apply Z.le_ngt).	2.664945	1
Coq.ZArith.Zorder.Zlt_not_le	600	0	synth with cache (only 1: apply Z.lt_nge).	3.011752	1
Coq.ZArith.Zorder.Zle_not_gt	600	0	synth with cache (only 1: trivial).	2.674135	1
Coq.ZArith.Zorder.Zgt_not_le	600	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_nge).	2.705228	2
Coq.ZArith.Zorder.Znot_ge_lt	600	2.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).	2.676014	9
Coq.ZArith.Zorder.Znot_lt_ge	600	0	synth with cache (only 1: trivial).	3.962453	1
Coq.ZArith.Zorder.Znot_gt_le	600	0	synth with cache (only 1: trivial).	3.935696	1
Coq.ZArith.Zorder.Znot_le_gt	600	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).	4.103586	2
Coq.ZArith.Zorder.not_Zne	600
Coq.ZArith.Zorder.Zgt_asym	600	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_asymm).	3.969056	2
Coq.ZArith.Zorder.Zgt_irrefl	600	0.0.0.0	synth with cache (only 1: Z.swap_greater; only 1: rewrite <- Z.compare_lt_iff; only 1: rewrite Z.compare_refl; only 1: easy).	4.034522	4
Coq.ZArith.Zorder.Zle_lt_or_eq	600	0	synth with cache (only 1: apply Z.lt_eq_cases).	3.661203	1
Coq.ZArith.Zorder.Zgt_trans	600	0.0.0.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: transitivity m; only 1: easy; only 1: easy).	2.920113	5
Coq.ZArith.Zorder.Zle_gt_trans	600	0.0	synth with cache (only 1: Z.swap_greater; only 1: Z.order).	3.096999	2
Coq.ZArith.Zorder.Zgt_le_trans	600	0.0	synth with cache (only 1: Z.swap_greater; only 1: Z.order).	3.991127	2
Coq.ZArith.Zorder.Zge_trans	600	0.0	synth with cache (only 1: Z.swap_greater; only 1: Z.order).	4.034550	2
Coq.ZArith.Zorder.Zsucc_le_compat	600	0	synth with cache (only 1: apply Z.succ_le_mono).	3.311569	1
Coq.ZArith.Zorder.Zsucc_lt_compat	600	0	synth with cache (only 1: apply Z.succ_lt_mono).	4.184068	1
Coq.ZArith.Zorder.Zsucc_gt_compat	600	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	4.212263	2
Coq.ZArith.Zorder.Zsucc_gt_reg	600	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	3.568461	2
Coq.ZArith.Zorder.Zsucc_le_reg	600	0	synth with cache (only 1: apply Z.succ_le_mono).	4.088853	1
Coq.ZArith.Zorder.Zsucc_lt_reg	600	0	synth with cache (only 1: apply Z.succ_lt_mono).	3.759982	1
Coq.ZArith.Zorder.Zgt_succ	600	0.0.0.0.0	synth with cache (only 1: Z.swap_greater; only 1: rewrite Z.lt_succ_r; only 1: apply Z.lt_eq_cases; only 1: right; only 1: easy).	2.717120	5
Coq.ZArith.Zorder.Znot_le_succ	600	1.1.0.0	synth with cache (only 1: intros ?; only 1: Z.le_elim H; only 1: false_hyp H Z.nlt_succ_diag_l; only 1: false_hyp H Z.neq_succ_diag_l).	3.874352	6
Coq.ZArith.Zorder.Zgt_le_succ	600	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	4.009186	2
Coq.ZArith.Zorder.Zle_gt_succ	600	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	3.183041	2
Coq.ZArith.Zorder.Zle_lt_succ	600	0	synth with cache (only 1: apply Z.lt_succ_r).	2.586151	1
Coq.ZArith.Zorder.Zlt_le_succ	600	0	synth with cache (only 1: apply Z.le_succ_l).	3.015598	1
Coq.ZArith.Zorder.Zgt_succ_le	600	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	2.669096	2
Coq.ZArith.Zorder.Zlt_succ_le	600	0	synth with cache (only 1: apply Z.lt_succ_r).	3.460150	1
Coq.ZArith.Zorder.Zle_succ_gt	600	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	3.855658	2
Coq.ZArith.Zorder.Zle_succ_le	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.lt_le_incl; only 1: apply Z.le_succ_l; only 1: easy).	4.206618	4
Coq.ZArith.Zorder.Zgt_succ_pred	600	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_lt_pred).	4.654675	2
Coq.ZArith.Zorder.Zlt_succ_pred	600	0	synth with cache (only 1: apply Z.lt_succ_lt_pred).	3.627535	1
Coq.ZArith.Zorder.Zlt_0_le_0_pred	600	0	synth with cache (only 1: apply Z.lt_le_pred).	4.084608	1
Coq.ZArith.Zorder.Zgt_0_le_0_pred	600	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	4.117929	2
Coq.ZArith.Zorder.Zle_neg_pos	600	0	synth with cache (only 1: exact Pos2Z.neg_le_pos).	2.820612	1
Coq.ZArith.Zorder.Zgt_pos_0	600	0	synth with cache (only 1: easy).	3.252237	1
Coq.ZArith.Zorder.Zle_0_pos	600	0	synth with cache (only 1: exact Pos2Z.pos_is_nonneg).	3.142317	1
Coq.ZArith.Zorder.Zlt_neg_0	600	0	synth with cache (only 1: exact Pos2Z.neg_is_neg).	2.467813	1
Coq.ZArith.Zorder.Zle_0_nat	600
Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	600	0.0.0.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: apply Z.lt_eq_cases; only 1: apply Z.lt_succ_r; only 1: easy).	2.460280	5
Coq.ZArith.Zorder.Zplus_gt_compat_l	600	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	2.439741	2
Coq.ZArith.Zorder.Zplus_gt_compat_r	600	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	2.457134	2
Coq.ZArith.Zorder.Zplus_le_compat_l	600	0	synth with cache (only 1: apply Z.add_le_mono_l).	2.425419	1
Coq.ZArith.Zorder.Zplus_le_compat_r	600	0	synth with cache (only 1: apply Z.add_le_mono_r).	2.432034	1
Coq.ZArith.Zorder.Zplus_lt_compat_l	600	0	synth with cache (only 1: apply Z.add_lt_mono_l).	2.448097	1
Coq.ZArith.Zorder.Zplus_lt_compat_r	600	0	synth with cache (only 1: apply Z.add_lt_mono_r).	2.414430	1
Coq.ZArith.Zorder.Zplus_le_reg_l	600	0	synth with cache (only 1: apply Z.add_le_mono_l).	2.430678	1
Coq.ZArith.Zorder.Zplus_le_reg_r	600	0	synth with cache (only 1: apply Z.add_le_mono_r).	2.421410	1
Coq.ZArith.Zorder.Zplus_lt_reg_l	600	0	synth with cache (only 1: apply Z.add_lt_mono_l).	2.414577	1
Coq.ZArith.Zorder.Zplus_lt_reg_r	600	0	synth with cache (only 1: apply Z.add_lt_mono_r).	2.442425	1
Coq.ZArith.Zorder.Zplus_gt_reg_l	600	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	2.403402	2
Coq.ZArith.Zorder.Zplus_gt_reg_r	600	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	2.407627	2
Coq.ZArith.Zorder.Zmult_le_compat_r	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.mul_le_mono_nonneg_r; only 1: easy; only 1: easy).	2.425175	4
Coq.ZArith.Zorder.Zmult_le_compat_l	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.mul_le_mono_nonneg_l; only 1: easy; only 1: easy).	2.500860	4
Coq.ZArith.Zorder.Zmult_lt_compat_r	600	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_r).	2.521528	1
Coq.ZArith.Zorder.Zmult_gt_compat_r	600	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	2.768491	2
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	600	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	4.044687	2
Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	600	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	2.691722	2
Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	600	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).	2.761203	1
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	600	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	2.636662	2
Coq.ZArith.Zorder.Zmult_lt_compat_l	600	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_l).	2.585223	1
Coq.ZArith.Zorder.Zmult_gt_compat_l	600	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	2.643625	2
Coq.ZArith.Zorder.Zmult_ge_compat_r	600	0.0.0.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: apply Z.mul_le_mono_nonneg_r; only 1: easy; only 1: easy).	2.826098	5
Coq.ZArith.Zorder.Zmult_ge_compat_l	600	0.0.0.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: apply Z.mul_le_mono_nonneg_l; only 1: easy; only 1: easy).	4.098460	5
Coq.ZArith.Zorder.Zmult_ge_compat	600	0.0.0.0.0.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: apply Z.mul_le_mono_nonneg; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	3.998519	7
Coq.ZArith.Zorder.Zmult_le_compat	600	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.mul_le_mono_nonneg; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	2.568420	6
Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	600	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	2.522134	2
Coq.ZArith.Zorder.Zmult_lt_reg_r	600	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_r).	2.597788	1
Coq.ZArith.Zorder.Zmult_le_reg_r	600	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	2.522964	2
Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	600	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).	2.529149	1
Coq.ZArith.Zorder.Zmult_ge_reg_r	600	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	4.639911	2
Coq.ZArith.Zorder.Zmult_gt_reg_r	600	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	3.454493	2
Coq.ZArith.Zorder.Zmult_lt_compat	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: destruct H1; only 1: apply Z.mul_lt_mono_nonneg; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	4.605216	17
Coq.ZArith.Zorder.Zmult_lt_compat2	600
Coq.ZArith.Zorder.Zmult_gt_0_compat	600	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_pos).	2.690013	8
Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	600	0.0.0.0.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: apply Z.mul_nonneg_nonneg; only 1: easy; only 1: apply Z.lt_le_incl; only 1: easy).	2.627841	6
Coq.ZArith.Zorder.Zmult_le_0_reg_r	600	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_nonneg_cancel_r).	2.516367	2
Coq.ZArith.Zorder.Zmult_lt_0_reg_r	600	0	synth with cache (only 1: apply Z.mul_pos_cancel_r).	2.702597	1
Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	600	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	2.601334	2
Coq.ZArith.Zorder.Zmult_gt_0_reg_l	600	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_l).	2.533319	2
Coq.ZArith.Zorder.Zlt_square_simpl	600	0	synth with cache (only 1: apply Z.square_lt_simpl_nonneg).	2.575527	1
Coq.ZArith.Zorder.Zgt_square_simpl	600	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).	2.579587	2
Coq.ZArith.Zorder.Zeq_plus_swap	600	0	synth with cache (only 1: apply Z.add_move_r).	2.593391	1
Coq.ZArith.Zorder.Zlt_0_minus_lt	600	0	synth with cache (only 1: apply Z.lt_0_sub).	2.591318	1
Coq.ZArith.Zorder.Zle_0_minus_le	600	0	synth with cache (only 1: apply Z.le_0_sub).	2.459883	1
Coq.ZArith.Zorder.Zle_minus_le_0	600	0	synth with cache (only 1: apply Z.le_0_sub).	2.446619	1
Coq.Reals.SeqProp.growing_cv	600
Coq.Reals.SeqProp.decreasing_growing	600	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold Un_growing; only 1: unfold opp_seq; only 1: unfold Un_decreasing; only 1: intros; only 1: apply Ropp_le_contravar; only 1: apply H).	5.458469	7
Coq.Reals.SeqProp.decreasing_cv	600
Coq.Reals.SeqProp.ub_to_lub	600
Coq.Reals.SeqProp.lb_to_glb	600
Coq.Reals.SeqProp.maj_ss	600
Coq.Reals.SeqProp.min_ss	600
Coq.Reals.SeqProp.Wn_decreasing	600
Coq.Reals.SeqProp.Vn_growing	600
Coq.Reals.SeqProp.Vn_Un_Wn_order	600
Coq.Reals.SeqProp.min_maj	600
Coq.Reals.SeqProp.maj_min	600
Coq.Reals.SeqProp.cauchy_maj	600	0.0.0.0	synth with cache (only 1: intros; only 1: unfold has_ub; only 1: apply cauchy_bound; only 1: assumption).	4.608258	4
Coq.Reals.SeqProp.cauchy_opp	600
Coq.Reals.SeqProp.cauchy_min	600
Coq.Reals.SeqProp.maj_cv	600	0.1.0.0.0.0	synth with cache (only 1: intros; only 1: apply decreasing_cv; only 1: apply Wn_decreasing; only 1: apply maj_min; only 1: apply cauchy_min; only 1: assumption).	6.820338	8
Coq.Reals.SeqProp.min_cv	600	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply growing_cv; only 1: apply Vn_growing; only 1: apply min_maj; only 1: unfold has_ub; only 1: apply cauchy_bound; only 1: assumption).	4.638115	7
Coq.Reals.SeqProp.cond_eq	600
Coq.Reals.SeqProp.not_Rlt	600	0	synth with cache (only 1: eauto using Rnot_gt_ge with rorders).	4.551204	1
Coq.Reals.SeqProp.approx_maj	600
Coq.Reals.SeqProp.approx_min	600
Coq.Reals.SeqProp.UL_sequence	600
Coq.Reals.SeqProp.CV_plus	600
Coq.Reals.SeqProp.cv_cvabs	600
Coq.Reals.SeqProp.CV_Cauchy	600
Coq.Reals.SeqProp.maj_by_pos	600
Coq.Reals.SeqProp.CV_mult	600
Coq.Reals.SeqProp.tech9	600
Coq.Reals.SeqProp.tech13	600
Coq.Reals.SeqProp.growing_ineq	600
Coq.Reals.SeqProp.CV_opp	600
Coq.Reals.SeqProp.decreasing_ineq	600
Coq.Reals.SeqProp.CV_minus	600
Coq.Reals.SeqProp.cv_infty_cv_R0	600
Coq.Reals.SeqProp.decreasing_prop	600
Coq.Reals.SeqProp.cv_speed_pow_fact	600
Coq.nsatz.Nsatz.nsatz1.psos_r1b	600
Coq.nsatz.Nsatz.nsatz1.psos_r1	600
Coq.nsatz.Nsatz.nsatz1.nsatzR_diff	600
Coq.nsatz.Nsatz.nsatz1.P0Z_correct	600
Coq.nsatz.Nsatz.nsatz1.Rext	600
Coq.nsatz.Nsatz.nsatz1.Rset	600
Coq.nsatz.Nsatz.nsatz1.Rtheory	600
Coq.nsatz.Nsatz.nsatz1.PolZadd_correct	600
Coq.nsatz.Nsatz.nsatz1.PolZmul_correct	600
Coq.nsatz.Nsatz.nsatz1.R_power_theory	600
Coq.nsatz.Nsatz.nsatz1.norm_correct	600
Coq.nsatz.Nsatz.nsatz1.PolZeq_correct	600
Coq.nsatz.Nsatz.nsatz1.mult_l_correct	600
Coq.nsatz.Nsatz.nsatz1.compute_list_correct	600
Coq.nsatz.Nsatz.nsatz1.check_correct	600
Coq.nsatz.Nsatz.Rsth	600	0.0.2.0.0.0.0.3	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto with *; only 1: unfold Transitive; only 1: intros; only 1: subst; only 1: reflexivity).	4.570996	122
Coq.nsatz.Nsatz.Rri	600	0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: apply Rsth; only 1: unfold respectful; only 1: unfold Proper; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity; only 1: unfold respectful; only 1: unfold Proper; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity; only 1: unfold respectful; only 1: unfold Proper; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity; only 1: unfold respectful; only 1: unfold Proper; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: rewrite H; only 1: reflexivity; only 1: exact Rplus_0_l; only 1: exact Rplus_comm; only 1: symmetry; only 1: apply Rplus_assoc; only 1: exact Rmult_1_l; only 1: exact Rmult_1_r; only 1: symmetry; only 1: apply Rmult_assoc; only 1: exact Rmult_plus_distr_r; only 1: intros; only 1: apply Rmult_plus_distr_l; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: reflexivity; only 1: exact Rplus_opp_r).	4.623777	107
Coq.nsatz.Nsatz.R_one_zero	600	1	synth with cache (only 1: exact R1_neq_R0).	3.765866	3
Coq.nsatz.Nsatz.Rcri	600	0.0	synth with cache (only 1: red; only 1: exact Rmult_comm).	3.735051	2
Coq.nsatz.Nsatz.Rdi	600	0.0.0	synth with cache (only 1: constructor; only 1: exact Rmult_integral; only 1: exact R_one_zero).	3.729308	3
Coq.nsatz.Nsatz.Qri	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: apply Q_Setoid; only 1: apply Qplus_comp; only 1: apply Qmult_comp; only 1: apply Qminus_comp; only 1: apply Qopp_comp; only 1: exact Qplus_0_l; only 1: exact Qplus_comm; only 1: apply Qplus_assoc; only 1: exact Qmult_1_l; only 1: exact Qmult_1_r; only 1: apply Qmult_assoc; only 1: apply Qmult_plus_distr_l; only 1: intros; only 1: apply Qmult_plus_distr_r; only 1: reflexivity; only 1: exact Qplus_opp_r).	3.735277	41
Coq.nsatz.Nsatz.Q_one_zero	600	0.0	synth with cache (only 1: unfold Qeq; only 1: auto with qarith).	3.391110	2
Coq.nsatz.Nsatz.Qcri	600	0.0	synth with cache (only 1: red; only 1: exact Qmult_comm).	3.397797	2
Coq.nsatz.Nsatz.Qdi	600	0.0.0	synth with cache (only 1: constructor; only 1: exact Qmult_integral; only 1: exact Q_one_zero).	3.380592	3
Coq.nsatz.Nsatz.Z_one_zero	600	0	synth with cache (only 1: auto with *).	3.220984	1
Coq.nsatz.Nsatz.Zcri	600	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).	3.254499	2
Coq.nsatz.Nsatz.Zdi	600	0.0.0	synth with cache (only 1: constructor; only 1: exact Zmult_integral; only 1: exact Z_one_zero).	3.235622	3
Coq.setoid_ring.Rings_R.Rsth	600	0.0.2.0.0.0.0.3	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto with *; only 1: unfold Transitive; only 1: intros; only 1: subst; only 1: reflexivity).	6.481402	122
Coq.setoid_ring.Rings_R.Rri	600	0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: apply Rsth; only 1: unfold respectful; only 1: unfold Proper; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity; only 1: unfold respectful; only 1: unfold Proper; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity; only 1: unfold respectful; only 1: unfold Proper; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity; only 1: unfold respectful; only 1: unfold Proper; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: rewrite H; only 1: reflexivity; only 1: exact Rplus_0_l; only 1: exact Rplus_comm; only 1: symmetry; only 1: apply Rplus_assoc; only 1: exact Rmult_1_l; only 1: exact Rmult_1_r; only 1: symmetry; only 1: apply Rmult_assoc; only 1: exact Rmult_plus_distr_r; only 1: intros; only 1: apply Rmult_plus_distr_l; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: reflexivity; only 1: exact Rplus_opp_r).	6.650118	107
Coq.setoid_ring.Rings_R.Rcri	600	0.0	synth with cache (only 1: red; only 1: exact Rmult_comm).	5.880523	2
Coq.setoid_ring.Rings_R.R_one_zero	600	1	synth with cache (only 1: exact R1_neq_R0).	6.024938	3
Coq.setoid_ring.Rings_R.Rdi	600	0.0.0	synth with cache (only 1: constructor; only 1: exact Rmult_integral; only 1: exact R_one_zero).	5.866937	3
Coq.Reals.NewtonInt.FTCN_step1	600
Coq.Reals.NewtonInt.FTC_Newton	600	0.0.0	synth with cache (only 1: intros; only 1: unfold NewtonInt; only 1: reflexivity).	7.504792	3
Coq.Reals.NewtonInt.NewtonInt_P1	600
Coq.Reals.NewtonInt.NewtonInt_P2	600
Coq.Reals.NewtonInt.NewtonInt_P3	600	0.0.0.0.0.0.0	synth with cache (only 1: unfold Newton_integrable; only 1: intros; only 1: elim X; only 1: intros ?; only 1: intros ?; only 1: exists x; only 1: tauto).	7.403029	7
Coq.Reals.NewtonInt.NewtonInt_P4	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct pr; only 1: unfold NewtonInt; only 1: unfold NewtonInt_P3; only 1: simpl; only 1: ring).	7.559423	17
Coq.Reals.NewtonInt.NewtonInt_P5	600
Coq.Reals.NewtonInt.antiderivative_P1	600
Coq.Reals.NewtonInt.NewtonInt_P6	600
Coq.Reals.NewtonInt.antiderivative_P2	600
Coq.Reals.NewtonInt.antiderivative_P3	600
Coq.Reals.NewtonInt.antiderivative_P4	600
Coq.Reals.NewtonInt.NewtonInt_P7	600
Coq.Reals.NewtonInt.NewtonInt_P8	600
Coq.Reals.NewtonInt.NewtonInt_P9	600
Coq.Reals.Machin.atan_sub_correct	600
Coq.Reals.Machin.tech	600
Coq.Reals.Machin.Machin_2_3	600
Coq.Reals.Machin.Machin_4_5_239	600
Coq.Reals.Machin.Machin_2_3_7	600
Coq.Reals.Machin.PI_2_3_7_ineq	600
Coq.Reals.Ratan.Ropp_div	600	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Rdiv; only 1: ring).	7.334770	4
Coq.Reals.Ratan.pos_half_prf	600	2.0	synth with cache (only 1: apply Rinv_0_lt_compat; only 1: prove_sup).	7.257602	4
Coq.Reals.Ratan.Boule_half_to_interval	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Boule; only 1: unfold pos_half; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: apply Rabs_def2 in H; only 1: destruct H; only 1: split; only 1: lra; only 1: lra).	7.346623	18
Coq.Reals.Ratan.Boule_lt	600
Coq.Reals.Ratan.Un_cv_ext	600
Coq.Reals.Ratan.Alt_first_term_bound	600
Coq.Reals.Ratan.Alt_CVU	600
Coq.Reals.Ratan.pow2_ge_0	600
Coq.Reals.Ratan.pow2_abs	600
Coq.Reals.Ratan.derivable_pt_tan	600	0.0.1.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold derivable_pt; only 1: unfold tan; only 1: apply derivable_pt_div; only 1: reg; only 1: reg; only 1: apply Rgt_not_eq; only 1: unfold Rgt; only 1: apply cos_gt_0; only 1: rewrite <- Ropp_div; only 1: tauto; only 1: tauto).	6.718590	24
Coq.Reals.Ratan.derive_pt_tan	600
Coq.Reals.Ratan.derive_increasing_interv	600
Coq.Reals.Ratan.plus_Rsqr_gt_0	600
Coq.Reals.Ratan.PI2_lower_bound	600
Coq.Reals.Ratan.PI2_3_2	600
Coq.Reals.Ratan.PI2_1	600	0.0	synth with cache (only 1: pose proof PI2_3_2; only 1: lra).	5.641826	2
Coq.Reals.Ratan.tan_increasing	600
Coq.Reals.Ratan.tan_is_inj	600
Coq.Reals.Ratan.exists_atan_in_frame	600
Coq.Reals.Ratan.tan_1_gt_1	600
Coq.Reals.Ratan.frame_tan	600
Coq.Reals.Ratan.ub_opp	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite Ropp_div; only 1: apply Ropp_lt_contravar; only 1: assumption).	4.988425	5
Coq.Reals.Ratan.pos_opp_lt	600	0.0	synth with cache (only 1: intros; only 1: lra).	4.787401	2
Coq.Reals.Ratan.tech_opp_tan	600	0.0.0	synth with cache (only 1: intros; only 1: rewrite tan_neg; only 1: assumption).	4.794030	3
Coq.Reals.Ratan.pre_atan	600
Coq.Reals.Ratan.atan_bound	600	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold atan; only 1: destruct pre_atan; only 1: destruct a; only 1: clear H0; only 1: exact H).	4.683682	6
Coq.Reals.Ratan.atan_right_inv	600	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold atan; only 1: destruct pre_atan; only 1: destruct a; only 1: clear H; only 1: exact H0).	4.699342	6
Coq.Reals.Ratan.atan_opp	600
Coq.Reals.Ratan.derivable_pt_atan	600
Coq.Reals.Ratan.atan_increasing	600
Coq.Reals.Ratan.atan_0	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply tan_is_inj; only 1: apply atan_bound; only 1: pose proof PI_RGT_0; only 1: rewrite Ropp_div; only 1: split; only 1: lra; only 1: lra; only 1: rewrite atan_right_inv; only 1: rewrite tan_0; only 1: easy).	4.806159	18
Coq.Reals.Ratan.atan_1	600
Coq.Reals.Ratan.derive_pt_atan	600
Coq.Reals.Ratan.derivable_pt_lim_atan	600
Coq.Reals.Ratan.Ratan_seq_decreasing	600
Coq.Reals.Ratan.Ratan_seq_converging	600
Coq.Reals.Ratan.ps_atan_exists_01	600
Coq.Reals.Ratan.Ratan_seq_opp	600
Coq.Reals.Ratan.sum_Ratan_seq_opp	600
Coq.Reals.Ratan.ps_atan_exists_1	600
Coq.Reals.Ratan.in_int	600
Coq.Reals.Ratan.ps_atan0_0	600
Coq.Reals.Ratan.ps_atan_exists_1_opp	600
Coq.Reals.Ratan.ps_atan_opp	600
Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	600
Coq.Reals.Ratan.pow_lt_1_compat	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction 1; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: tauto; only 1: simpl; only 1: split; only 1: apply Rmult_le_pos; only 1: tauto; only 1: tauto; only 1: rewrite <- Rmult_1_r; only 1: apply Rmult_le_0_lt_compat; only 1: tauto; only 1: tauto; only 1: intuition; only 1: intuition).	4.901265	42
Coq.Reals.Ratan.Datan_seq_Rabs	600	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Datan_seq; only 1: rewrite pow_mult; only 1: rewrite pow_mult; only 1: rewrite pow2_abs; only 1: reflexivity).	4.602940	7
Coq.Reals.Ratan.Datan_seq_pos	600
Coq.Reals.Ratan.Datan_sum_eq	600
Coq.Reals.Ratan.Datan_seq_increasing	600
Coq.Reals.Ratan.Datan_seq_decreasing	600
Coq.Reals.Ratan.Datan_seq_CV_0	600
Coq.Reals.Ratan.Datan_lim	600
Coq.Reals.Ratan.Datan_CVU_prelim	600
Coq.Reals.Ratan.Datan_is_datan	600
Coq.Reals.Ratan.Ratan_CVU'	600
Coq.Reals.Ratan.Ratan_CVU	600
Coq.Reals.Ratan.Alt_PI_tg	600	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold PI_tg; only 1: unfold Ratan_seq; only 1: unfold Rdiv; only 1: rewrite pow1; only 1: rewrite Rmult_1_l; only 1: reflexivity).	3.500343	7
Coq.Reals.Ratan.Ratan_is_ps_atan	600
Coq.Reals.Ratan.Datan_continuity	600
Coq.Reals.Ratan.derivable_pt_lim_ps_atan	600
Coq.Reals.Ratan.derivable_pt_ps_atan	600
Coq.Reals.Ratan.ps_atan_continuity_pt_1	600
Coq.Reals.Ratan.Datan_eq_DatanSeq_interv	600
Coq.Reals.Ratan.atan_eq_ps_atan	600
Coq.Reals.Ratan.Alt_PI_eq	600
Coq.Reals.Ratan.PI_ineq	600	1.0.0	synth with cache (only 1: intros; only 1: rewrite <- Alt_PI_eq; only 1: apply Alt_PI_ineq).	3.591758	9
Coq.Reals.Ranalysis5.f_incr_implies_g_incr_interv	600
Coq.Reals.Ranalysis5.derivable_pt_id_interv	600
Coq.Reals.Ranalysis5.pr_nu_var2_interv	600
Coq.Reals.Ranalysis5.leftinv_is_rightinv	600
Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	600
Coq.Reals.Ranalysis5.IVT_interv_prelim0	600
Coq.Reals.Ranalysis5.IVT_interv_prelim1	600
Coq.Reals.Ranalysis5.IVT_interv	600
Coq.Reals.Ranalysis5.f_interv_is_interv	600
Coq.Reals.Ranalysis5.continuity_pt_recip_prelim	600
Coq.Reals.Ranalysis5.continuity_pt_recip_interv	600
Coq.Reals.Ranalysis5.derivable_pt_lim_recip_interv	600
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim0	600
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1	600
Coq.Reals.Ranalysis5.derivable_pt_recip_interv	600
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim0	600
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_0	600
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	600
Coq.Reals.Ranalysis5.derive_pt_recip_interv	600
Coq.Reals.Ranalysis5.ub_lt_2_pos	600	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: lra).	3.272383	6
Coq.Reals.Ranalysis5.mkposreal_lb_ub	600
Coq.Reals.Ranalysis5.derivable_pt_lim_CVU	600
Coq.Reals.RiemannInt.phi_sequence_prop	600
Coq.Reals.RiemannInt.RiemannInt_P1	600
Coq.Reals.RiemannInt.RiemannInt_P2	600
Coq.Reals.RiemannInt.RiemannInt_P3	600
Coq.Reals.RiemannInt.RiemannInt_exists	600
Coq.Reals.RiemannInt.RiemannInt_P4	600
Coq.Reals.RiemannInt.RinvN_pos	600	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Rinv_0_lt_compat; only 1: apply Rle_lt_0_plus_1; only 1: case n; only 1: simpl; only 1: auto with real; only 1: auto with arith real).	6.799566	7
Coq.Reals.RiemannInt.RinvN_cv	600
Coq.Reals.RiemannInt.Riemann_integrable_ext	600
Coq.Reals.RiemannInt.RiemannInt_P5	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold RiemannInt; only 1: destruct RiemannInt_exists; only 1: destruct RiemannInt_exists; only 1: eapply UL_sequence; only 1: apply u; only 1: apply RiemannInt_P4 with pr2 RinvN; only 1: apply RinvN_cv; only 1: apply RinvN_cv; only 1: assumption).	7.035996	18
Coq.Reals.RiemannInt.maxN	600
Coq.Reals.RiemannInt.Heine_cor1	600
Coq.Reals.RiemannInt.Heine_cor2	600
Coq.Reals.RiemannInt.SubEqui_P1	600
Coq.Reals.RiemannInt.SubEqui_P2	600
Coq.Reals.RiemannInt.SubEqui_P3	600
Coq.Reals.RiemannInt.SubEqui_P4	600
Coq.Reals.RiemannInt.SubEqui_P5	600	0.0.0	synth with cache (only 1: intros; only 1: unfold SubEqui; only 1: apply SubEqui_P3).	6.161832	3
Coq.Reals.RiemannInt.SubEqui_P6	600	0.0.0.0	synth with cache (only 1: intros; only 1: unfold SubEqui; only 1: apply SubEqui_P4; only 1: assumption).	6.185411	4
Coq.Reals.RiemannInt.SubEqui_P7	600
Coq.Reals.RiemannInt.SubEqui_P8	600
Coq.Reals.RiemannInt.SubEqui_P9	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply StepFun_P38; only 1: apply SubEqui_P7; only 1: apply SubEqui_P1; only 1: apply SubEqui_P2).	6.343207	5
Coq.Reals.RiemannInt.RiemannInt_P6	600
Coq.Reals.RiemannInt.RiemannInt_P7	600
Coq.Reals.RiemannInt.continuity_implies_RiemannInt	600
Coq.Reals.RiemannInt.RiemannInt_P8	600
Coq.Reals.RiemannInt.RiemannInt_P9	600
Coq.Reals.RiemannInt.RiemannInt_P10	600
Coq.Reals.RiemannInt.RiemannInt_P11	600
Coq.Reals.RiemannInt.RiemannInt_P12	600
Coq.Reals.RiemannInt.RiemannInt_P13	600
Coq.Reals.RiemannInt.RiemannInt_P14	600
Coq.Reals.RiemannInt.RiemannInt_P15	600
Coq.Reals.RiemannInt.RiemannInt_P16	600
Coq.Reals.RiemannInt.Rle_cv_lim	600
Coq.Reals.RiemannInt.RiemannInt_P17	600
Coq.Reals.RiemannInt.RiemannInt_P18	600
Coq.Reals.RiemannInt.RiemannInt_P19	600
Coq.Reals.RiemannInt.FTC_P1	600	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply continuity_implies_RiemannInt; only 1: assumption; only 1: intros; only 1: apply H0; only 1: elim H3; only 1: intros; only 1: split; only 1: assumption; only 1: apply Rle_trans with x; only 1: assumption; only 1: assumption).	5.315074	20
Coq.Reals.RiemannInt.RiemannInt_P20	600
Coq.Reals.RiemannInt.RiemannInt_P21	600
Coq.Reals.RiemannInt.RiemannInt_P22	600
Coq.Reals.RiemannInt.RiemannInt_P23	600
Coq.Reals.RiemannInt.RiemannInt_P24	600
Coq.Reals.RiemannInt.RiemannInt_P25	600
Coq.Reals.RiemannInt.RiemannInt_P26	600
Coq.Reals.RiemannInt.RiemannInt_P27	600
Coq.Reals.RiemannInt.RiemannInt_P28	600
Coq.Reals.RiemannInt.RiemannInt_P29	600
Coq.Reals.RiemannInt.RiemannInt_P30	600
Coq.Reals.RiemannInt.RiemannInt_P31	600
Coq.Reals.RiemannInt.RiemannInt_P32	600
Coq.Reals.RiemannInt.RiemannInt_P33	600
Coq.Reals.RiemannInt.FTC_Riemann	600
Coq.Reals.RiemannInt.RiemannInt_const_bound	600
Coq.Reals.RiemannInt.Riemann_integrable_scal	600
Coq.Reals.RiemannInt.Riemann_integrable_Ropp	600
Coq.Reals.RiemannInt_SF.IZN_var	600	0.1.0	synth with cache (only 1: intros; only 1: apply Z_of_nat_complete_inf; only 1: auto).	6.000896	4
Coq.Reals.RiemannInt_SF.Nzorn	600
Coq.Reals.RiemannInt_SF.StepFun_P1	600	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold subdivision_val; only 1: destruct projT2; only 1: apply a0).	6.534022	6
Coq.Reals.RiemannInt_SF.StepFun_P2	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold adapted_couple; only 1: intros; only 1: decompose [ and ] H; only 1: clear H; only 1: split; only 1: assumption; only 1: split; only 1: rewrite H2; only 1: unfold Rmin; only 1: case Rle_dec; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: apply Rle_antisym; only 1: auto with real; only 1: auto with real; only 1: split; only 1: rewrite H1; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: apply Rle_antisym; only 1: auto with real; only 1: auto with real; only 1: split; only 1: assumption; only 1: assumption).	8.000501	145
Coq.Reals.RiemannInt_SF.StepFun_P3	600
Coq.Reals.RiemannInt_SF.StepFun_P4	600
Coq.Reals.RiemannInt_SF.StepFun_P5	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct a0; only 1: destruct H0; only 1: destruct H1; only 1: destruct H2; only 1: exists x; only 1: split; only 1: assumption; only 1: split; only 1: rewrite H0; only 1: unfold Rmin; only 1: case Rle_dec; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: apply Rle_antisym; only 1: auto with real; only 1: auto with real; only 1: split; only 1: rewrite H1; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: apply Rle_antisym; only 1: auto with real; only 1: auto with real; only 1: split; only 1: assumption; only 1: assumption).	7.936761	139
Coq.Reals.RiemannInt_SF.StepFun_P6	600	0.0.0.0.0.0.0	synth with cache (only 1: unfold IsStepFun; only 1: intros; only 1: elim X; only 1: intros; only 1: apply existT with x; only 1: apply StepFun_P5; only 1: assumption).	6.353927	7
Coq.Reals.RiemannInt_SF.StepFun_P7	600
Coq.Reals.RiemannInt_SF.StepFun_P8	600
Coq.Reals.RiemannInt_SF.StepFun_P9	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold adapted_couple in H; only 1: decompose [ and ] H; only 1: clear H; only 1: induction l; only 1: simpl in H4; only 1: discriminate; only 1: induction l; only 1: simpl in H3; only 1: simpl in H2; only 1: generalize H3; only 1: generalize H2; only 1: unfold Rmin; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros; only 1: elim H0; only 1: rewrite <- H5; only 1: rewrite <- H7; only 1: reflexivity; only 1: intros; only 1: elim H0; only 1: rewrite <- H5; only 1: rewrite <- H7; only 1: reflexivity; only 1: simpl; only 1: apply le_n_S; only 1: apply le_n_S; only 1: apply Nat.le_0_l).	6.782621	53
Coq.Reals.RiemannInt_SF.StepFun_P10	600
Coq.Reals.RiemannInt_SF.StepFun_P11	600
Coq.Reals.RiemannInt_SF.StepFun_P12	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold adapted_couple_opt; only 1: unfold adapted_couple; only 1: intros; only 1: decompose [ and ] H; only 1: clear H; only 1: split; only 1: split; only 1: assumption; only 1: split; only 1: rewrite H0; only 1: unfold Rmin; only 1: case Rle_dec; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: apply Rle_antisym; only 1: auto with real; only 1: auto with real; only 1: split; only 1: rewrite H3; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: apply Rle_antisym; only 1: auto with real; only 1: auto with real; only 1: split; only 1: assumption; only 1: assumption; only 1: split; only 1: assumption; only 1: assumption).	6.952756	110
Coq.Reals.RiemannInt_SF.StepFun_P13	600
Coq.Reals.RiemannInt_SF.StepFun_P14	600
Coq.Reals.RiemannInt_SF.StepFun_P15	600
Coq.Reals.RiemannInt_SF.StepFun_P16	600
Coq.Reals.RiemannInt_SF.StepFun_P17	600
Coq.Reals.RiemannInt_SF.StepFun_P18	600
Coq.Reals.RiemannInt_SF.StepFun_P19	600	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction l1; only 1: simpl; only 1: ring; only 1: induction l1; only 1: simpl; only 1: ring; only 1: simpl; only 1: simpl in IHl1; only 1: rewrite IHl1; only 1: ring).	5.944721	19
Coq.Reals.RiemannInt_SF.StepFun_P20	600
Coq.Reals.RiemannInt_SF.StepFun_P21	600
Coq.Reals.RiemannInt_SF.StepFun_P22	600
Coq.Reals.RiemannInt_SF.StepFun_P23	600
Coq.Reals.RiemannInt_SF.StepFun_P24	600
Coq.Reals.RiemannInt_SF.StepFun_P25	600
Coq.Reals.RiemannInt_SF.StepFun_P26	600
Coq.Reals.RiemannInt_SF.StepFun_P27	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply StepFun_P26; only 1: apply StepFun_P23 with g; only 1: assumption; only 1: assumption; only 1: apply StepFun_P25 with f; only 1: assumption; only 1: assumption).	5.264157	24
Coq.Reals.RiemannInt_SF.StepFun_P28	600
Coq.Reals.RiemannInt_SF.StepFun_P29	600
Coq.Reals.RiemannInt_SF.StepFun_P30	600
Coq.Reals.RiemannInt_SF.StepFun_P31	600
Coq.Reals.RiemannInt_SF.StepFun_P32	600
Coq.Reals.RiemannInt_SF.StepFun_P33	600
Coq.Reals.RiemannInt_SF.StepFun_P34	600
Coq.Reals.RiemannInt_SF.StepFun_P35	600
Coq.Reals.RiemannInt_SF.StepFun_P36	600
Coq.Reals.RiemannInt_SF.StepFun_P37	600
Coq.Reals.RiemannInt_SF.StepFun_P38	600
Coq.Reals.RiemannInt_SF.StepFun_P39	600
Coq.Reals.RiemannInt_SF.StepFun_P40	600
Coq.Reals.RiemannInt_SF.StepFun_P41	600
Coq.Reals.RiemannInt_SF.StepFun_P42	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction l1; only 1: intros ?; only 1: simpl; only 1: ring; only 1: intros ?; only 1: destruct l1; only 1: simpl in H; only 1: simpl; only 1: destruct l2; only 1: simpl; only 1: ring; only 1: simpl; only 1: simpl in H; only 1: rewrite H; only 1: ring; only 1: simpl; only 1: rewrite Rplus_assoc; only 1: apply Rplus_eq_compat_l; only 1: apply IHl1; only 1: rewrite <- H; only 1: reflexivity).	4.774888	48
Coq.Reals.RiemannInt_SF.StepFun_P43	600
Coq.Reals.RiemannInt_SF.StepFun_P44	600
Coq.Reals.RiemannInt_SF.StepFun_P45	600
Coq.Reals.RiemannInt_SF.StepFun_P46	600
Coq.Reals.Ranalysis_reg.AppVar	600	0	synth with cache (only 1: exact R0).	5.880812	1
Coq.Reals.Rpower.P_Rmin	600	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rmin; only 1: case Rle_dec; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption).	5.963161	19
Coq.Reals.Rpower.exp_le_3	600
Coq.Reals.Rpower.exp_increasing	600
Coq.Reals.Rpower.exp_lt_inv	600
Coq.Reals.Rpower.exp_ineq1	600
Coq.Reals.Rpower.ln_exists1	600
Coq.Reals.Rpower.ln_exists	600
Coq.Reals.Rpower.exp_ln	600
Coq.Reals.Rpower.exp_inv	600
Coq.Reals.Rpower.exp_Ropp	600
Coq.Reals.Rpower.ln_increasing	600	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply exp_lt_inv; only 1: rewrite exp_ln; only 1: rewrite exp_ln; only 1: easy; only 1: apply Rlt_trans with x; only 1: easy; only 1: easy; only 1: easy).	6.593047	20
Coq.Reals.Rpower.ln_exp	600	1.0.0.0	synth with cache (only 1: intros ?; only 1: apply exp_inv; only 1: apply exp_ln; only 1: apply exp_pos).	6.372726	5
Coq.Reals.Rpower.ln_1	600	0.0.0	synth with cache (only 1: rewrite <- exp_0; only 1: rewrite ln_exp; only 1: easy).	6.401468	3
Coq.Reals.Rpower.ln_lt_inv	600
Coq.Reals.Rpower.ln_inv	600
Coq.Reals.Rpower.ln_mult	600	0.0.1.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply exp_inv; only 1: rewrite exp_plus; only 1: rewrite exp_ln; only 1: rewrite exp_ln; only 1: rewrite exp_ln; only 1: reflexivity; only 1: assumption; only 1: assumption; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: assumption).	6.634597	39
Coq.Reals.Rpower.ln_Rinv	600	0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply exp_inv; only 1: rewrite exp_ln; only 1: rewrite exp_Ropp; only 1: rewrite exp_ln; only 1: reflexivity; only 1: assumption; only 1: apply Rinv_0_lt_compat; only 1: assumption).	6.565079	22
Coq.Reals.Rpower.ln_continue	600
Coq.Reals.Rpower.Rpower_plus	600	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rpower; only 1: rewrite Rmult_plus_distr_r; only 1: rewrite exp_plus; only 1: auto).	6.387918	7
Coq.Reals.Rpower.Rpower_mult	600
Coq.Reals.Rpower.Rpower_O	600	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: unfold Rpower; only 1: rewrite Rmult_0_l; only 1: apply exp_0).	6.527394	6
Coq.Reals.Rpower.Rpower_1	600	0.1.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Rpower; only 1: rewrite Rmult_1_l; only 1: apply exp_ln; only 1: assumption).	6.651454	8
Coq.Reals.Rpower.Rpower_pow	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.2.0.0.0	synth with cache (only 1: intros ?; only 1: elim n; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: apply Rpower_O; only 1: auto; only 1: simpl; only 1: intros ?; only 1: case n0; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: apply Rpower_1; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Rpower_plus; only 1: rewrite H; only 1: rewrite Rpower_1; only 1: apply Rmult_comm; only 1: assumption; only 1: assumption).	6.972641	115
Coq.Reals.Rpower.Rpower_lt	600	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rpower; only 1: apply exp_increasing; only 1: apply Rmult_lt_compat_r; only 1: rewrite <- ln_1; only 1: apply ln_increasing; only 1: apply Rlt_0_1; only 1: apply H; only 1: apply H0).	6.561960	21
Coq.Reals.Rpower.Rpower_sqrt	600
Coq.Reals.Rpower.Rpower_Ropp	600	0.0.0.0.0	synth with cache (only 1: unfold Rpower; only 1: intros ?; only 1: intros ?; only 1: rewrite Ropp_mult_distr_l_reverse; only 1: apply exp_Ropp).	6.441028	5
Coq.Reals.Rpower.powerRZ_Rpower	600
Coq.Reals.Rpower.Rle_Rpower	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: case H0; only 1: intros ?; only 1: left; only 1: apply Rpower_lt; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: rewrite H1; only 1: right; only 1: reflexivity; only 1: intros ?; only 1: rewrite <- H; only 1: unfold Rpower; only 1: rewrite ln_1; only 1: rewrite Rmult_0_r; only 1: rewrite Rmult_0_r; only 1: apply Rle_refl).	6.804678	47
Coq.Reals.Rpower.ln_lt_2	600
Coq.Reals.Rpower.limit1_ext	600
Coq.Reals.Rpower.limit1_imp	600
Coq.Reals.Rpower.Rinv_Rdiv	600	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rdiv; only 1: rewrite Rinv_mult_distr; only 1: rewrite Rinv_involutive; only 1: apply Rmult_comm; only 1: assumption; only 1: assumption; only 1: apply Rinv_neq_0_compat; only 1: assumption).	6.500697	20
Coq.Reals.Rpower.Dln	600
Coq.Reals.Rpower.derivable_pt_lim_ln	600
Coq.Reals.Rpower.D_in_imp	600
Coq.Reals.Rpower.D_in_ext	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold D_in; only 1: rewrite H; only 1: auto).	6.040289	17
Coq.Reals.Rpower.Dpower	600
Coq.Reals.Rpower.derivable_pt_lim_power	600
Coq.Reals.Rpower.Rpower_mult_distr	600	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rpower; only 1: rewrite <- exp_plus; only 1: rewrite ln_mult; only 1: rewrite Rmult_plus_distr_l; only 1: auto; only 1: auto; only 1: auto).	6.023384	20
Coq.Reals.Rpower.Rlt_Rpower_l	600	0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: apply exp_increasing; only 1: apply Rmult_lt_compat_l; only 1: auto; only 1: apply ln_increasing; only 1: lra; only 1: lra).	6.015901	18
Coq.Reals.Rpower.Rle_Rpower_l	600	0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: destruct H0; only 1: destruct H1; only 1: apply Rlt_le; only 1: apply exp_increasing; only 1: apply Rmult_lt_compat_l; only 1: auto; only 1: apply ln_increasing; only 1: lra; only 1: lra; only 1: rewrite H1; only 1: apply Rle_refl; only 1: intros; only 1: rewrite <- H; only 1: rewrite Rpower_O; only 1: rewrite Rpower_O; only 1: apply Rle_refl; only 1: apply Rlt_le_trans with a; only 1: tauto; only 1: tauto; only 1: tauto).	6.474572	67
Coq.Reals.Rpower.arcsinh_sinh	600
Coq.Reals.Rpower.sinh_arcsinh	600
Coq.Reals.Rpower.derivable_pt_lim_arcsinh	600
Coq.Reals.Rpower.arcsinh_lt	600
Coq.Reals.Rpower.arcsinh_le	600	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: apply Rlt_le; only 1: apply arcsinh_lt; only 1: exact H; only 1: rewrite H; only 1: apply Rle_refl).	5.888630	17
Coq.Reals.Rpower.arcsinh_0	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold arcsinh; only 1: rewrite pow_ne_zero; only 1: rewrite Rplus_0_l; only 1: rewrite Rplus_0_l; only 1: rewrite sqrt_1; only 1: rewrite <- exp_0; only 1: rewrite ln_exp; only 1: easy; only 1: discriminate).	5.943084	17
Coq.Reals.Ranalysis4.derivable_pt_inv	600
Coq.Reals.Ranalysis4.pr_nu_var	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold derivable_pt; only 1: unfold derive_pt; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct pr1; only 1: intros ?; only 1: destruct pr2; only 1: intros ?; only 1: intropattern subst -> H; only 1: apply uniqueness_limite with g x; only 1: assumption; only 1: assumption).	5.929718	22
Coq.Reals.Ranalysis4.pr_nu_var2	600
Coq.Reals.Ranalysis4.derivable_inv	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold derivable; only 1: intros ?; only 1: apply derivable_pt_inv; only 1: apply H; only 1: apply H0).	5.889579	8
Coq.Reals.Ranalysis4.derive_pt_inv	600
Coq.Reals.Ranalysis4.Rabs_derive_1	600
Coq.Reals.Ranalysis4.Rabs_derive_2	600
Coq.Reals.Ranalysis4.Rderivable_pt_abs	600
Coq.Reals.Ranalysis4.Rcontinuity_abs	600
Coq.Reals.Ranalysis4.continuity_finite_sum	600
Coq.Reals.Ranalysis4.derivable_pt_lim_fs	600
Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	600
Coq.Reals.Ranalysis4.derivable_pt_finite_sum	600
Coq.Reals.Ranalysis4.derivable_finite_sum	600	1.0.0.0	synth with cache (only 1: intros; only 1: unfold derivable; only 1: intros ?; only 1: apply derivable_pt_finite_sum).	6.374750	6
Coq.Reals.Ranalysis4.derivable_pt_lim_cosh	600
Coq.Reals.Ranalysis4.derivable_pt_lim_sinh	600
Coq.Reals.Ranalysis4.derivable_pt_exp	600
Coq.Reals.Ranalysis4.derivable_pt_cosh	600
Coq.Reals.Ranalysis4.derivable_pt_sinh	600
Coq.Reals.Ranalysis4.derivable_exp	600	1.0	synth with cache (only 1: unfold derivable; only 1: apply derivable_pt_exp).	6.306510	5
Coq.Reals.Ranalysis4.derivable_cosh	600	1.0	synth with cache (only 1: unfold derivable; only 1: apply derivable_pt_cosh).	6.394235	5
Coq.Reals.Ranalysis4.derivable_sinh	600	1.0	synth with cache (only 1: unfold derivable; only 1: apply derivable_pt_sinh).	6.381055	5
Coq.Reals.Ranalysis4.derive_pt_exp	600	1.0.0	synth with cache (only 1: intros ?; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_exp).	6.423984	8
Coq.Reals.Ranalysis4.derive_pt_cosh	600	1.0.0	synth with cache (only 1: intros ?; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cosh).	6.435252	7
Coq.Reals.Ranalysis4.derive_pt_sinh	600	1.0.0	synth with cache (only 1: intros ?; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).	6.399833	7
Coq.Reals.Ranalysis4.sinh_lt	600
Coq.Reals.Exp_prop.E1_cvg	600	0.0.0.0.0.0.1.0.0	synth with cache (only 1: intros ?; only 1: unfold exp; only 1: case exist_exp; only 1: intros ?; only 1: unfold exp_in; only 1: unfold Un_cv; only 1: unfold infinite_sum; only 1: unfold E1; only 1: trivial).	5.713312	16
Coq.Reals.Exp_prop.exp_form	600
Coq.Reals.Exp_prop.div2_double	600	1.0	synth with cache (only 1: intros ?; only 1: apply Nat.div2_double).	5.862051	8
Coq.Reals.Exp_prop.div2_S_double	600	1.0	synth with cache (only 1: intros ?; only 1: apply Nat.div2_succ_double).	5.765427	8
Coq.Reals.Exp_prop.div2_not_R0	600
Coq.Reals.Exp_prop.Reste_E_maj	600
Coq.Reals.Exp_prop.maj_Reste_cv_R0	600
Coq.Reals.Exp_prop.Reste_E_cv	600
Coq.Reals.Exp_prop.exp_plus	600
Coq.Reals.Exp_prop.exp_pos_pos	600
Coq.Reals.Exp_prop.exp_pos	600
Coq.Reals.Exp_prop.derivable_pt_lim_exp_0	600
Coq.Reals.Exp_prop.derivable_pt_lim_exp	600
Coq.Reals.Rtrigo_reg.continuity_sin	600
Coq.Reals.Rtrigo_reg.CVN_R_sin	600
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	600
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	600
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	600
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	600
Coq.Reals.Rtrigo_reg.derivable_pt_sin	600
Coq.Reals.Rtrigo_reg.derivable_pt_cos	600
Coq.Reals.Rtrigo_reg.derivable_sin	600	0.1.0	synth with cache (only 1: unfold derivable; only 1: intros ?; only 1: apply derivable_pt_sin).	5.622878	6
Coq.Reals.Rtrigo_reg.derivable_cos	600	0.1.0	synth with cache (only 1: unfold derivable; only 1: intros ?; only 1: apply derivable_pt_cos).	5.698452	6
Coq.Reals.Rtrigo_reg.derive_pt_sin	600	1.0.0	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sin).	5.729909	9
Coq.Reals.Rtrigo_reg.derive_pt_cos	600	1.0.0	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cos).	5.653444	4
Coq.Reals.Rtrigo_calc.tan_PI	600	0.0.0.0.0	synth with cache (only 1: unfold tan; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: unfold Rdiv; only 1: apply Rmult_0_l).	5.886369	5
Coq.Reals.Rtrigo_calc.sin_3PI2	600
Coq.Reals.Rtrigo_calc.tan_2PI	600	0.0.0.0	synth with cache (only 1: unfold tan; only 1: rewrite sin_2PI; only 1: unfold Rdiv; only 1: apply Rmult_0_l).	5.925617	4
Coq.Reals.Rtrigo_calc.sin_cos_PI4	600
Coq.Reals.Rtrigo_calc.sin_PI3_cos_PI6	600
Coq.Reals.Rtrigo_calc.sin_PI6_cos_PI3	600
Coq.Reals.Rtrigo_calc.PI6_RGT_0	600	0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	5.976113	5
Coq.Reals.Rtrigo_calc.PI6_RLT_PI2	600	0.0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_compat_l; only 1: apply PI_RGT_0; only 1: apply Rinv_lt_contravar; only 1: prove_sup; only 1: prove_sup).	5.946585	6
Coq.Reals.Rtrigo_calc.sin_PI6	600
Coq.Reals.Rtrigo_calc.sqrt2_neq_0	600
Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	600
Coq.Reals.Rtrigo_calc.sqrt3_2_neq_0	600
Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	600
Coq.Reals.Rtrigo_calc.Rlt_sqrt3_0	600
Coq.Reals.Rtrigo_calc.PI4_RGT_0	600	0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	6.223069	5
Coq.Reals.Rtrigo_calc.cos_PI4	600
Coq.Reals.Rtrigo_calc.sin_PI4	600	1.0	synth with cache (only 1: rewrite sin_cos_PI4; only 1: apply cos_PI4).	6.361686	6
Coq.Reals.Rtrigo_calc.tan_PI4	600
Coq.Reals.Rtrigo_calc.cos_3PI4	600
Coq.Reals.Rtrigo_calc.sin_3PI4	600
Coq.Reals.Rtrigo_calc.cos_PI6	600
Coq.Reals.Rtrigo_calc.tan_PI6	600
Coq.Reals.Rtrigo_calc.sin_PI3	600	1.0	synth with cache (only 1: rewrite sin_PI3_cos_PI6; only 1: apply cos_PI6).	6.384231	7
Coq.Reals.Rtrigo_calc.cos_PI3	600	1.0	synth with cache (only 1: rewrite sin_PI6_cos_PI3; only 1: apply sin_PI6).	6.383775	3
Coq.Reals.Rtrigo_calc.tan_PI3	600	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold tan; only 1: rewrite sin_PI3; only 1: rewrite cos_PI3; only 1: unfold Rdiv; only 1: rewrite Rmult_1_l; only 1: rewrite Rinv_involutive; only 1: rewrite Rmult_assoc; only 1: rewrite <- Rinv_l_sym; only 1: apply Rmult_1_r; only 1: discrR; only 1: discrR).	6.480270	19
Coq.Reals.Rtrigo_calc.sin_2PI3	600
Coq.Reals.Rtrigo_calc.cos_2PI3	600
Coq.Reals.Rtrigo_calc.tan_2PI3	600	0.0.0.0	synth with cache (only 1: unfold tan; only 1: rewrite sin_2PI3; only 1: rewrite cos_2PI3; only 1: field).	5.867832	4
Coq.Reals.Rtrigo_calc.cos_5PI4	600
Coq.Reals.Rtrigo_calc.sin_5PI4	600
Coq.Reals.Rtrigo_calc.sin_cos5PI4	600	0.0.0	synth with cache (only 1: rewrite cos_5PI4; only 1: rewrite sin_5PI4; only 1: reflexivity).	5.928910	3
Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	600	2.0.0	synth with cache (only 1: apply Rmult_lt_0_compat; only 1: prove_sup0; only 1: apply PI2_RGT_0).	5.945682	16
Coq.Reals.Rtrigo_calc.Rgt_2PI_0	600	0.2.0	synth with cache (only 1: apply Rmult_lt_0_compat; only 1: prove_sup; only 1: apply PI_RGT_0).	5.830767	9
Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	600
Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	600
Coq.Reals.Rtrigo_calc.rad_deg	600
Coq.Reals.Rtrigo_calc.toRad_inj	600
Coq.Reals.Rtrigo_calc.deg_rad	600	0.0.0.0	synth with cache (only 1: intros ?; only 1: apply toRad_inj; only 1: rewrite rad_deg; only 1: reflexivity).	5.818835	4
Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	600	0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold sind; only 1: unfold cosd; only 1: apply sin2_cos2).	5.808216	4
Coq.Reals.Rtrigo_calc.sin_lb_ge_0	600
Coq.Reals.Rgeom.distance_refl	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold dist_euc; only 1: apply Rsqr_inj; only 1: apply sqrt_positivity; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: right; only 1: reflexivity; only 1: rewrite Rsqr_0; only 1: rewrite Rsqr_sqrt; only 1: unfold Rsqr; only 1: ring; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr).	6.514280	42
Coq.Reals.Rgeom.distance_symm	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold dist_euc; only 1: apply Rsqr_inj; only 1: apply sqrt_positivity; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: apply sqrt_positivity; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: rewrite Rsqr_sqrt; only 1: rewrite Rsqr_sqrt; only 1: unfold Rsqr; only 1: ring; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr).	6.661608	48
Coq.Reals.Rgeom.law_cosines	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold dist_euc; only 1: intros; only 1: rewrite Rsqr_sqrt; only 1: rewrite Rsqr_sqrt; only 1: rewrite Rsqr_sqrt; only 1: rewrite H; only 1: unfold Rsqr; only 1: ring; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr).	6.798091	41
Coq.Reals.Rgeom.triangle	600
Coq.Reals.Rgeom.translation_0	600	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: unfold xt; only 1: eauto with real; only 1: unfold yt; only 1: ring).	6.177446	7
Coq.Reals.Rgeom.isometric_translation	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: unfold xt; only 1: unfold yt; only 1: ring).	6.193675	5
Coq.Reals.Rgeom.rotation_0	600	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold xr; only 1: unfold yr; only 1: split; only 1: rewrite cos_0; only 1: rewrite sin_0; only 1: ring; only 1: rewrite cos_0; only 1: rewrite sin_0; only 1: ring).	5.892785	19
Coq.Reals.Rgeom.rotation_PI2	600	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold xr; only 1: unfold yr; only 1: split; only 1: rewrite cos_PI2; only 1: rewrite sin_PI2; only 1: ring; only 1: rewrite cos_PI2; only 1: rewrite sin_PI2; only 1: ring).	5.850312	19
Coq.Reals.Rgeom.isometric_rotation_0	600
Coq.Reals.Rgeom.isometric_rotation	600	0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold dist_euc; only 1: intros; only 1: apply Rsqr_inj; only 1: apply sqrt_positivity; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: apply sqrt_positivity; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: rewrite Rsqr_sqrt; only 1: rewrite Rsqr_sqrt; only 1: apply isometric_rotation_0; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr).	6.134642	48
Coq.Reals.Rgeom.isometric_rot_trans	600	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- isometric_rotation_0; only 1: apply isometric_translation).	5.743703	3
Coq.Reals.Rgeom.isometric_trans_rot	600	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- isometric_translation; only 1: apply isometric_rotation_0).	5.716746	3
Coq.Reals.Rtrigo1.CVN_R_cos	600
Coq.Reals.Rtrigo1.continuity_cos	600
Coq.Reals.Rtrigo1.sin_gt_cos_7_8	600
Coq.Reals.Rtrigo1.PI_2_aux	600
Coq.Reals.Rtrigo1.cos_pi2	600
Coq.Reals.Rtrigo1.pi2_int	600	0.0.0.0	synth with cache (only 1: unfold PI2; only 1: case PI_2_aux; only 1: simpl; only 1: tauto).	5.020153	4
Coq.Reals.Rtrigo1.cos_minus	600	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rminus; only 1: rewrite cos_plus; only 1: rewrite <- cos_sym; only 1: rewrite sin_antisym; only 1: ring).	4.950820	6
Coq.Reals.Rtrigo1.sin2_cos2	600	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold Rsqr; only 1: rewrite Rplus_comm; only 1: rewrite <- cos_minus; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: apply cos_0).	4.940657	7
Coq.Reals.Rtrigo1.cos2	600
Coq.Reals.Rtrigo1.sin2	600
Coq.Reals.Rtrigo1.cos_PI2	600
Coq.Reals.Rtrigo1.sin_pos_tech	600
Coq.Reals.Rtrigo1.sin_PI2	600
Coq.Reals.Rtrigo1.PI_RGT_0	600
Coq.Reals.Rtrigo1.PI_4	600
Coq.Reals.Rtrigo1.PI_neq0	600
Coq.Reals.Rtrigo1.cos_PI	600
Coq.Reals.Rtrigo1.sin_PI	600
Coq.Reals.Rtrigo1.sin_bound	600	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply pre_sin_bound; only 1: assumption; only 1: apply Rle_trans with (1 := H0) (2 := PI_4)).	4.888431	7
Coq.Reals.Rtrigo1.cos_bound	600
Coq.Reals.Rtrigo1.neg_cos	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite cos_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	4.885048	5
Coq.Reals.Rtrigo1.sin_cos	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite cos_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	4.883285	5
Coq.Reals.Rtrigo1.sin_plus	600
Coq.Reals.Rtrigo1.sin_minus	600	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rminus; only 1: rewrite sin_plus; only 1: rewrite <- cos_sym; only 1: rewrite sin_antisym; only 1: ring).	4.841443	6
Coq.Reals.Rtrigo1.tan_plus	600
Coq.Reals.Rtrigo1.sin_2a	600
Coq.Reals.Rtrigo1.cos_2a	600	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite double; only 1: apply cos_plus).	4.775561	3
Coq.Reals.Rtrigo1.cos_2a_cos	600
Coq.Reals.Rtrigo1.cos_2a_sin	600
Coq.Reals.Rtrigo1.tan_2a	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite double; only 1: rewrite double; only 1: rewrite double in H0; only 1: apply tan_plus; only 1: assumption; only 1: assumption; only 1: assumption; only 1: assumption).	4.803139	17
Coq.Reals.Rtrigo1.sin_neg	600	1	synth with cache (only 1: apply sin_antisym).	4.833969	9
Coq.Reals.Rtrigo1.cos_neg	600	1.0.0	synth with cache (only 1: intros ?; only 1: symmetry in  |- *; only 1: apply cos_sym).	4.825986	9
Coq.Reals.Rtrigo1.tan_0	600	0.0.0.0.0	synth with cache (only 1: unfold tan; only 1: rewrite sin_0; only 1: rewrite cos_0; only 1: unfold Rdiv; only 1: apply Rmult_0_l).	4.704900	5
Coq.Reals.Rtrigo1.tan_neg	600	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold tan; only 1: rewrite sin_neg; only 1: rewrite cos_neg; only 1: unfold Rdiv; only 1: apply Ropp_mult_distr_l_reverse).	4.750734	6
Coq.Reals.Rtrigo1.tan_minus	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rminus; only 1: rewrite tan_plus; only 1: rewrite tan_neg; only 1: unfold Rminus; only 1: rewrite <- Ropp_mult_distr_l_reverse; only 1: rewrite Rmult_opp_opp; only 1: reflexivity; only 1: assumption; only 1: rewrite cos_neg; only 1: assumption; only 1: assumption; only 1: rewrite tan_neg; only 1: unfold Rminus; only 1: rewrite <- Ropp_mult_distr_l_reverse; only 1: rewrite Rmult_opp_opp; only 1: assumption).	5.047037	41
Coq.Reals.Rtrigo1.cos_3PI2	600
Coq.Reals.Rtrigo1.sin_2PI	600	0.0.0	synth with cache (only 1: rewrite sin_2a; only 1: rewrite sin_PI; only 1: ring).	4.958500	3
Coq.Reals.Rtrigo1.cos_2PI	600	0.0.0.0	synth with cache (only 1: rewrite cos_2a; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	4.915002	4
Coq.Reals.Rtrigo1.neg_sin	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	4.968773	5
Coq.Reals.Rtrigo1.sin_PI_x	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite sin_minus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	4.974381	5
Coq.Reals.Rtrigo1.sin_period	600
Coq.Reals.Rtrigo1.cos_period	600
Coq.Reals.Rtrigo1.sin_shift	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite sin_minus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	4.663380	5
Coq.Reals.Rtrigo1.cos_shift	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite cos_minus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	4.672883	5
Coq.Reals.Rtrigo1.cos_sin	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite sin_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	4.627314	5
Coq.Reals.Rtrigo1.PI2_RGT_0	600	2.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup).	4.633948	7
Coq.Reals.Rtrigo1.SIN_bound	600
Coq.Reals.Rtrigo1.COS_bound	600	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- sin_shift; only 1: apply SIN_bound).	4.647032	3
Coq.Reals.Rtrigo1.cos_sin_0	600
Coq.Reals.Rtrigo1.cos_sin_0_var	600
Coq.Reals.Rtrigo1.sin_lb_gt_0	600
Coq.Reals.Rtrigo1.SIN	600
Coq.Reals.Rtrigo1.COS	600
Coq.Reals.Rtrigo1._PI2_RLT_0	600	0.0	synth with cache (only 1: pose proof PI_RGT_0; only 1: lra).	4.173892	2
Coq.Reals.Rtrigo1.PI4_RLT_PI2	600	0.0	synth with cache (only 1: pose proof PI_RGT_0; only 1: lra).	4.294417	2
Coq.Reals.Rtrigo1.PI2_Rlt_PI	600	0.0	synth with cache (only 1: pose proof PI_RGT_0; only 1: lra).	4.104225	2
Coq.Reals.Rtrigo1.sin_gt_0	600
Coq.Reals.Rtrigo1.cos_gt_0	600
Coq.Reals.Rtrigo1.sin_ge_0	600
Coq.Reals.Rtrigo1.cos_ge_0	600
Coq.Reals.Rtrigo1.sin_le_0	600
Coq.Reals.Rtrigo1.cos_le_0	600
Coq.Reals.Rtrigo1.sin_lt_0	600
Coq.Reals.Rtrigo1.sin_lt_0_var	600
Coq.Reals.Rtrigo1.cos_lt_0	600
Coq.Reals.Rtrigo1.tan_gt_0	600
Coq.Reals.Rtrigo1.tan_lt_0	600
Coq.Reals.Rtrigo1.cos_ge_0_3PI2	600
Coq.Reals.Rtrigo1.form1	600
Coq.Reals.Rtrigo1.form2	600
Coq.Reals.Rtrigo1.form3	600
Coq.Reals.Rtrigo1.form4	600
Coq.Reals.Rtrigo1.sin_increasing_0	600
Coq.Reals.Rtrigo1.sin_increasing_1	600
Coq.Reals.Rtrigo1.sin_decreasing_0	600
Coq.Reals.Rtrigo1.sin_decreasing_1	600
Coq.Reals.Rtrigo1.cos_increasing_0	600
Coq.Reals.Rtrigo1.cos_increasing_1	600
Coq.Reals.Rtrigo1.cos_decreasing_0	600
Coq.Reals.Rtrigo1.cos_decreasing_1	600
Coq.Reals.Rtrigo1.tan_diff	600	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold tan; only 1: rewrite sin_minus; only 1: field; only 1: split; only 1: easy; only 1: easy).	3.250566	7
Coq.Reals.Rtrigo1.tan_increasing_0	600
Coq.Reals.Rtrigo1.tan_increasing_1	600
Coq.Reals.Rtrigo1.sin_incr_0	600
Coq.Reals.Rtrigo1.sin_incr_1	600
Coq.Reals.Rtrigo1.sin_decr_0	600
Coq.Reals.Rtrigo1.sin_decr_1	600
Coq.Reals.Rtrigo1.cos_incr_0	600
Coq.Reals.Rtrigo1.cos_incr_1	600
Coq.Reals.Rtrigo1.cos_decr_0	600
Coq.Reals.Rtrigo1.cos_decr_1	600
Coq.Reals.Rtrigo1.tan_incr_0	600
Coq.Reals.Rtrigo1.tan_incr_1	600
Coq.Reals.Rtrigo1.sin_eq_0_1	600
Coq.Reals.Rtrigo1.sin_eq_0_0	600
Coq.Reals.Rtrigo1.cos_eq_0_0	600
Coq.Reals.Rtrigo1.cos_eq_0_1	600
Coq.Reals.Rtrigo1.sin_eq_O_2PI_0	600
Coq.Reals.Rtrigo1.sin_eq_O_2PI_1	600	0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H1; only 1: intropattern subst -> H1; only 1: clear H0; only 1: clear H; only 1: unfold sin; only 1: case exist_sin; only 1: intros; only 1: ring; only 1: destruct H1; only 1: intropattern subst -> H1; only 1: clear H0; only 1: clear H; only 1: rewrite sin_PI; only 1: easy; only 1: intropattern subst -> H1; only 1: clear H0; only 1: clear H; only 1: rewrite sin_2a; only 1: rewrite sin_PI; only 1: ring).	3.618797	48
Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	600
Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H1; only 1: intropattern subst -> H1; only 1: rewrite cos_PI2; only 1: easy; only 1: intropattern subst -> H1; only 1: rewrite cos_3PI2; only 1: easy).	3.319465	18
Coq.Reals.Cos_plus.Majxy_cv_R0	600
Coq.Reals.Cos_plus.reste1_maj	600
Coq.Reals.Cos_plus.reste2_maj	600
Coq.Reals.Cos_plus.reste1_cv_R0	600
Coq.Reals.Cos_plus.reste2_cv_R0	600
Coq.Reals.Cos_plus.reste_cv_R0	600
Coq.Reals.Cos_plus.cos_plus	600
Coq.Reals.Rtrigo_alt.pre_sin_bound	600
Coq.Reals.Rtrigo_alt.pre_cos_bound	600
Coq.Reals.Cos_rel.cos_plus_form	600
Coq.Reals.Cos_rel.pow_sqr	600
Coq.Reals.Cos_rel.A1_cvg	600
Coq.Reals.Cos_rel.C1_cvg	600
Coq.Reals.Cos_rel.B1_cvg	600
Coq.Reals.Sqrt_reg.sqrt_var_maj	600
Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	600
Coq.Reals.Sqrt_reg.sqrt_continuity_pt	600
Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	600
Coq.Reals.Sqrt_reg.derivable_pt_sqrt	600
Coq.Reals.Sqrt_reg.derive_pt_sqrt	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sqrt; only 1: assumption).	5.735467	4
Coq.Reals.Sqrt_reg.continuity_pt_sqrt	600
Coq.Reals.PSeries_reg.Boule_convex	600
Coq.Reals.PSeries_reg.boule_of_interval	600
Coq.Reals.PSeries_reg.boule_in_interval	600
Coq.Reals.PSeries_reg.Ball_in_inter	600
Coq.Reals.PSeries_reg.Boule_center	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct r; only 1: unfold Boule; only 1: unfold Rminus; only 1: simpl; only 1: rewrite Rplus_opp_r; only 1: rewrite Rabs_pos_eq; only 1: easy; only 1: apply Rle_refl).	5.867402	18
Coq.Reals.PSeries_reg.CVN_CVU	600
Coq.Reals.PSeries_reg.CVU_continuity	600
Coq.Reals.PSeries_reg.continuity_pt_finite_SF	600
Coq.Reals.PSeries_reg.SFL_continuity_pt	600
Coq.Reals.PSeries_reg.SFL_continuity	600
Coq.Reals.PSeries_reg.CVN_R_CVS	600
Coq.Reals.PSeries_reg.CVU_cv	600
Coq.Reals.PSeries_reg.CVU_ext_lim	600
Coq.Reals.PSeries_reg.CVU_derivable	600
Coq.Reals.Rtrigo_def.exp_cof_no_R0	600	1.0.0	synth with cache (only 1: intros ?; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	5.038995	6
Coq.Reals.Rtrigo_def.exist_exp	600
Coq.Reals.Rtrigo_def.pow_i	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply pow_ne_zero; only 1: intros ?; only 1: rewrite H0 in H; only 1: false_hyp H Nat.lt_irrefl).	5.093761	5
Coq.Reals.Rtrigo_def.exist_exp0	600
Coq.Reals.Rtrigo_def.exp_0	600
Coq.Reals.Rtrigo_def.cosh_0	600	0.0.0.0.0.0.0	synth with cache (only 1: unfold cosh; only 1: rewrite Ropp_0; only 1: rewrite exp_0; only 1: unfold Rdiv; only 1: rewrite <- Rinv_r_sym; only 1: easy; only 1: discrR).	5.150050	7
Coq.Reals.Rtrigo_def.sinh_0	600	0.0.0.0.0.0.0	synth with cache (only 1: unfold sinh; only 1: rewrite Ropp_0; only 1: rewrite exp_0; only 1: unfold Rminus; only 1: unfold Rdiv; only 1: rewrite Rplus_opp_r; only 1: apply Rmult_0_l).	5.139856	7
Coq.Reals.Rtrigo_def.simpl_cos_n	600
Coq.Reals.Rtrigo_def.archimed_cor1	600
Coq.Reals.Rtrigo_def.Alembert_cos	600
Coq.Reals.Rtrigo_def.cosn_no_R0	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold cos_n; only 1: unfold Rdiv; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	5.220624	8
Coq.Reals.Rtrigo_def.exist_cos	600
Coq.Reals.Rtrigo_def.simpl_sin_n	600
Coq.Reals.Rtrigo_def.Alembert_sin	600
Coq.Reals.Rtrigo_def.sin_no_R0	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold sin_n; only 1: unfold Rdiv; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	5.191742	8
Coq.Reals.Rtrigo_def.exist_sin	600
Coq.Reals.Rtrigo_def.cos_sym	600
Coq.Reals.Rtrigo_def.sin_antisym	600
Coq.Reals.Rtrigo_def.sin_0	600	0.0.0.0	synth with cache (only 1: unfold sin; only 1: case exist_sin; only 1: intros; only 1: ring).	5.162488	4
Coq.Reals.Rtrigo_def.exist_cos0	600
Coq.Reals.Rtrigo_def.cos_0	600
Coq.Reals.R_sqrt.sqrt_pos	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold sqrt; only 1: destruct Rcase_abs; only 1: apply Rle_refl; only 1: apply Rsqrt_positivity).	5.319895	5
Coq.Reals.R_sqrt.sqrt_positivity	600	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: unfold sqrt; only 1: destruct Rcase_abs; only 1: apply Rle_refl; only 1: apply Rsqrt_positivity).	5.329937	7
Coq.Reals.R_sqrt.sqrt_sqrt	600
Coq.Reals.R_sqrt.sqrt_0	600	0.0.0.0.0	synth with cache (only 1: apply Rsqr_eq_0; only 1: unfold Rsqr; only 1: apply sqrt_sqrt; only 1: right; only 1: easy).	5.296784	5
Coq.Reals.R_sqrt.sqrt_1	600	3.0.0.0.0.3.0.3.0.0.0	synth with cache (only 1: apply Rsqr_inj; only 1: apply sqrt_positivity; only 1: left; only 1: exact Rlt_0_1; only 1: left; only 1: exact Rlt_0_1; only 1: unfold Rsqr; only 1: rewrite sqrt_sqrt; only 1: ring; only 1: left; only 1: exact Rlt_0_1).	5.988682	107
Coq.Reals.R_sqrt.sqrt_eq_0	600
Coq.Reals.R_sqrt.sqrt_lem_0	600
Coq.Reals.R_sqrt.sqrt_lem_1	600
Coq.Reals.R_sqrt.sqrt_def	600	0.1.0	synth with cache (only 1: intros; only 1: apply sqrt_sqrt; only 1: assumption).	5.383417	6
Coq.Reals.R_sqrt.sqrt_square	600
Coq.Reals.R_sqrt.sqrt_Rsqr	600	0.1.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply sqrt_square; only 1: assumption).	5.463793	5
Coq.Reals.R_sqrt.sqrt_pow2	600	0.1.0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: apply sqrt_square; only 1: assumption).	5.378463	6
Coq.Reals.R_sqrt.sqrt_Rsqr_abs	600	1.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Rsqr_abs; only 1: apply sqrt_Rsqr; only 1: apply Rabs_pos).	5.434489	8
Coq.Reals.R_sqrt.Rsqr_sqrt	600	0.1.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Rsqr; only 1: apply sqrt_sqrt; only 1: assumption).	5.388857	8
Coq.Reals.R_sqrt.sqrt_mult_alt	600
Coq.Reals.R_sqrt.sqrt_mult	600	0.1.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H0; only 1: apply sqrt_mult_alt; only 1: easy).	5.614757	25
Coq.Reals.R_sqrt.sqrt_lt_R0	600	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rsqr_incrst_0; only 1: rewrite Rsqr_0; only 1: rewrite Rsqr_sqrt; only 1: assumption; only 1: red; only 1: auto with real; only 1: right; only 1: reflexivity; only 1: apply sqrt_positivity; only 1: red; only 1: auto with real).	5.678434	22
Coq.Reals.R_sqrt.Rlt_mult_inv_pos	600
Coq.Reals.R_sqrt.Rle_mult_inv_pos	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case H; only 1: intros; only 1: red; only 1: left; only 1: apply Rlt_mult_inv_pos; only 1: auto with real; only 1: auto with real; only 1: intros; only 1: rewrite <- H1; only 1: red; only 1: right; only 1: ring).	5.756510	44
Coq.Reals.R_sqrt.sqrt_div_alt	600
Coq.Reals.R_sqrt.sqrt_div	600	0.1.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: apply sqrt_div_alt; only 1: easy).	5.604226	27
Coq.Reals.R_sqrt.sqrt_lt_0_alt	600
Coq.Reals.R_sqrt.sqrt_lt_0	600	1.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H0; only 1: clear H; only 1: apply sqrt_lt_0_alt).	5.494328	9
Coq.Reals.R_sqrt.sqrt_lt_1_alt	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: apply Rsqr_incrst_0; only 1: rewrite Rsqr_sqrt; only 1: rewrite Rsqr_sqrt; only 1: exact H0; only 1: apply Rlt_le; only 1: apply Rle_lt_trans with x; only 1: easy; only 1: exact H0; only 1: easy; only 1: apply sqrt_pos; only 1: apply sqrt_pos).	5.631511	23
Coq.Reals.R_sqrt.sqrt_lt_1	600	0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H0; only 1: apply sqrt_lt_1_alt; only 1: split; only 1: easy; only 1: exact H1).	5.572130	29
Coq.Reals.R_sqrt.sqrt_le_0	600
Coq.Reals.R_sqrt.sqrt_le_1_alt	600
Coq.Reals.R_sqrt.sqrt_le_1	600	0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H0; only 1: clear H; only 1: apply sqrt_le_1_alt; only 1: assumption).	5.502177	19
Coq.Reals.R_sqrt.sqrt_inj	600
Coq.Reals.R_sqrt.sqrt_less_alt	600
Coq.Reals.R_sqrt.sqrt_less	600	1.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: apply sqrt_less_alt).	5.333245	6
Coq.Reals.R_sqrt.sqrt_more	600
Coq.Reals.R_sqrt.sqrt_cauchy	600
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	600
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_0	600
Coq.Reals.Ranalysis3.derivable_pt_lim_div	600
Coq.Reals.Ranalysis3.derivable_pt_div	600
Coq.Reals.Ranalysis3.derivable_div	600
Coq.Reals.Ranalysis3.derive_pt_div	600
Coq.Reals.MVT.MVT	600
Coq.Reals.MVT.MVT_cor1	600
Coq.Reals.MVT.MVT_cor2	600
Coq.Reals.MVT.MVT_cor3	600
Coq.Reals.MVT.Rolle	600
Coq.Reals.MVT.nonneg_derivative_1	600
Coq.Reals.MVT.nonpos_derivative_0	600
Coq.Reals.MVT.increasing_decreasing_opp	600
Coq.Reals.MVT.nonpos_derivative_1	600
Coq.Reals.MVT.positive_derivative	600
Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	600
Coq.Reals.MVT.negative_derivative	600
Coq.Reals.MVT.null_derivative_0	600
Coq.Reals.MVT.increasing_decreasing	600
Coq.Reals.MVT.null_derivative_1	600
Coq.Reals.MVT.derive_increasing_interv_ax	600
Coq.Reals.MVT.derive_increasing_interv	600
Coq.Reals.MVT.derive_increasing_interv_var	600
Coq.Reals.MVT.IAF	600
Coq.Reals.MVT.IAF_var	600
Coq.Reals.MVT.null_derivative_loc	600
Coq.Reals.MVT.antiderivative_Ucte	600
Coq.Reals.MVT.MVT_abs	600
Coq.Reals.Rsqrt_def.dicho_comp	600
Coq.Reals.Rsqrt_def.dicho_lb_growing	600
Coq.Reals.Rsqrt_def.dicho_up_decreasing	600
Coq.Reals.Rsqrt_def.dicho_lb_maj_y	600
Coq.Reals.Rsqrt_def.dicho_lb_maj	600
Coq.Reals.Rsqrt_def.dicho_up_min_x	600
Coq.Reals.Rsqrt_def.dicho_up_min	600
Coq.Reals.Rsqrt_def.dicho_lb_cv	600	0.1.0.1.0.0	synth with cache (only 1: intros; only 1: apply growing_cv; only 1: apply dicho_lb_growing; only 1: assumption; only 1: apply dicho_lb_maj; only 1: assumption).	5.422391	20
Coq.Reals.Rsqrt_def.dicho_up_cv	600	0.1.0.1.0.0	synth with cache (only 1: intros; only 1: apply decreasing_cv; only 1: apply dicho_up_decreasing; only 1: assumption; only 1: apply dicho_up_min; only 1: assumption).	5.451364	20
Coq.Reals.Rsqrt_def.dicho_lb_dicho_up	600
Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	600	0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold pow_2_n; only 1: apply pow_nonzero; only 1: discrR).	5.341511	4
Coq.Reals.Rsqrt_def.pow_2_n_growing	600
Coq.Reals.Rsqrt_def.pow_2_n_infty	600
Coq.Reals.Rsqrt_def.cv_dicho	600
Coq.Reals.Rsqrt_def.continuity_seq	600
Coq.Reals.Rsqrt_def.dicho_lb_car	600
Coq.Reals.Rsqrt_def.dicho_up_car	600
Coq.Reals.Rsqrt_def.cv_pow_half	600
Coq.Reals.Rsqrt_def.IVT	600
Coq.Reals.Rsqrt_def.IVT_cor	600
Coq.Reals.Rsqrt_def.Rsqrt_exists	600
Coq.Reals.Rsqrt_def.Rsqrt_positivity	600
Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	600
Coq.Reals.Rtrigo_fun.Alembert_exp	600
Coq.Reals.Rtopology.interior_P1	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold included; only 1: unfold interior; only 1: intros; only 1: unfold neighbourhood in H; only 1: elim H; only 1: intros; only 1: unfold included in H0; only 1: apply H0; only 1: unfold disc; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: rewrite Rabs_R0; only 1: apply cond_pos).	5.109091	22
Coq.Reals.Rtopology.interior_P2	600
Coq.Reals.Rtopology.adherence_P1	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold included; only 1: intros; only 1: unfold adherence; only 1: unfold point_adherent; only 1: intros; only 1: exists x; only 1: unfold intersection_domain; only 1: split; only 1: unfold neighbourhood in H0; only 1: elim H0; only 1: intros; only 1: unfold included in H1; only 1: apply H1; only 1: unfold disc; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: rewrite Rabs_R0; only 1: apply cond_pos; only 1: apply H).	5.393310	44
Coq.Reals.Rtopology.included_trans	600	0.0.0.0.0	synth with cache (only 1: unfold included; only 1: intros; only 1: apply H0; only 1: apply H; only 1: apply H1).	5.098087	5
Coq.Reals.Rtopology.interior_P3	600
Coq.Reals.Rtopology.complementary_P1	600	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: red; only 1: intros ?; only 1: elim H; only 1: intros; only 1: unfold intersection_domain in H0; only 1: unfold complementary in H0; only 1: elim H0; only 1: intros; only 1: elim H2; only 1: assumption).	5.140718	19
Coq.Reals.Rtopology.adherence_P2	600
Coq.Reals.Rtopology.adherence_P3	600
Coq.Reals.Rtopology.open_set_P1	600
Coq.Reals.Rtopology.closed_set_P1	600
Coq.Reals.Rtopology.neighbourhood_P1	600
Coq.Reals.Rtopology.open_set_P2	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold open_set; only 1: intros; only 1: unfold union_domain in H1; only 1: elim H1; only 1: intros ?; only 1: apply neighbourhood_P1 with D1; only 1: unfold included; only 1: unfold union_domain; only 1: tauto; only 1: apply H; only 1: assumption; only 1: intros ?; only 1: apply neighbourhood_P1 with D2; only 1: unfold included; only 1: unfold union_domain; only 1: tauto; only 1: apply H0; only 1: assumption).	5.459867	42
Coq.Reals.Rtopology.open_set_P3	600
Coq.Reals.Rtopology.open_set_P4	600	0.0.0	synth with cache (only 1: unfold open_set; only 1: intros; only 1: elim H).	5.026150	3
Coq.Reals.Rtopology.open_set_P5	600
Coq.Reals.Rtopology.disc_P1	600
Coq.Reals.Rtopology.continuity_P1	600
Coq.Reals.Rtopology.continuity_P2	600
Coq.Reals.Rtopology.continuity_P3	600
Coq.Reals.Rtopology.Rsepare	600
Coq.Reals.Rtopology.restriction_family	600	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: elim H; only 1: intros; only 1: unfold intersection_domain; only 1: elim H0; only 1: intros; only 1: split; only 1: apply cond_fam; only 1: exists x0; only 1: assumption; only 1: assumption).	5.401878	19
Coq.Reals.Rtopology.family_P1	600
Coq.Reals.Rtopology.open_set_P6	600
Coq.Reals.Rtopology.compact_P1	600
Coq.Reals.Rtopology.compact_P2	600
Coq.Reals.Rtopology.compact_EMP	600
Coq.Reals.Rtopology.compact_eqDom	600
Coq.Reals.Rtopology.compact_P3	600
Coq.Reals.Rtopology.compact_P4	600
Coq.Reals.Rtopology.compact_P5	600
Coq.Reals.Rtopology.compact_carac	600
Coq.Reals.Rtopology.continuity_compact	600
Coq.Reals.Rtopology.prolongement_C0	600
Coq.Reals.Rtopology.continuity_ab_maj	600
Coq.Reals.Rtopology.continuity_ab_min	600
Coq.Reals.Rtopology.ValAdh_un_exists	600
Coq.Reals.Rtopology.ValAdh_un_prop	600
Coq.Reals.Rtopology.adherence_P4	600
Coq.Reals.Rtopology.compact_P6	600
Coq.Reals.Rtopology.Bolzano_Weierstrass	600
Coq.Reals.Rtopology.is_lub_u	600
Coq.Reals.Rtopology.domain_P1	600
Coq.Reals.Rtopology.Heine	600
Coq.Reals.Ranalysis2.formule	600
Coq.Reals.Ranalysis2.maj_term1	600
Coq.Reals.Ranalysis2.maj_term2	600
Coq.Reals.Ranalysis2.maj_term3	600
Coq.Reals.Ranalysis2.maj_term4	600
Coq.Reals.Ranalysis2.D_x_no_cond	600	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold D_x; only 1: unfold no_cond; only 1: split; only 1: trivial; only 1: apply Rminus_not_eq; only 1: unfold Rminus; only 1: rewrite Ropp_plus_distr; only 1: rewrite <- Rplus_assoc; only 1: rewrite Rplus_opp_r; only 1: rewrite Rplus_0_l; only 1: apply Ropp_neq_0_compat; only 1: assumption).	5.068423	21
Coq.Reals.Ranalysis2.Rabs_4	600
Coq.Reals.Ranalysis2.Rlt_4	600
Coq.Reals.Ranalysis2.quadruple	600	0.0	synth with cache (only 1: intros ?; only 1: ring).	4.859868	2
Coq.Reals.Ranalysis2.quadruple_var	600	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- quadruple; only 1: unfold Rdiv; only 1: rewrite <- Rmult_assoc; only 1: rewrite Rinv_r_simpl_m; only 1: reflexivity; only 1: discrR).	4.931613	7
Coq.Reals.Ranalysis2.continuous_neq_0	600
Coq.Reals.SeqSeries.sum_maj1	600
Coq.Reals.SeqSeries.Rseries_CV_comp	600
Coq.Reals.SeqSeries.Cesaro	600
Coq.Reals.SeqSeries.Cesaro_1	600
Coq.Floats.FloatLemmas.shift_value	600	0	synth with cache (only 1: reflexivity).	5.011502	1
Coq.Floats.FloatLemmas.frexp_spec	600
Coq.Floats.FloatLemmas.ldexp_spec	600
Coq.Reals.Rprod.prod_SO_split	600
Coq.Reals.Rprod.prod_SO_pos	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N; only 1: simpl; only 1: apply H; only 1: trivial; only 1: simpl; only 1: apply Rmult_le_pos; only 1: apply IHN; only 1: intros; only 1: apply H; only 1: apply Nat.le_trans with N; only 1: assumption; only 1: apply Nat.le_succ_diag_r; only 1: apply H; only 1: apply le_n).	5.146852	23
Coq.Reals.Rprod.prod_SO_Rle	600
Coq.Reals.Rprod.fact_prodSO	600	0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite <- IHn; only 1: case n; only 1: auto with real; only 1: intros; only 1: rewrite plus_INR; only 1: rewrite mult_INR; only 1: ring).	5.296422	20
Coq.Reals.Rprod.le_n_2n	600
Coq.Reals.Rprod.RfactN_fact2N_factk	600
Coq.Reals.Rprod.INR_fact_lt_0	600	1.0.0	synth with cache (only 1: intros ?; only 1: apply lt_0_INR; only 1: apply lt_O_fact).	4.582943	8
Coq.Reals.Rprod.C_maj	600
Coq.Reals.Ranalysis1.continuity_pt_locally_ext	600
Coq.Reals.Ranalysis1.continuity_pt_plus	600	0.0.0.0.0.0.0	synth with cache (only 1: unfold continuity_pt; only 1: unfold plus_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_plus; only 1: assumption; only 1: assumption).	4.885462	7
Coq.Reals.Ranalysis1.continuity_pt_opp	600	0.0.0.0.0.0	synth with cache (only 1: unfold continuity_pt; only 1: unfold opp_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_Ropp; only 1: assumption).	4.985667	6
Coq.Reals.Ranalysis1.continuity_pt_minus	600	0.0.0.0.0.0.0	synth with cache (only 1: unfold continuity_pt; only 1: unfold minus_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_minus; only 1: assumption; only 1: assumption).	4.963276	7
Coq.Reals.Ranalysis1.continuity_pt_mult	600	0.0.0.0.0.0.0	synth with cache (only 1: unfold continuity_pt; only 1: unfold mult_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_mul; only 1: assumption; only 1: assumption).	4.937336	7
Coq.Reals.Ranalysis1.continuity_pt_const	600
Coq.Reals.Ranalysis1.continuity_pt_scal	600
Coq.Reals.Ranalysis1.continuity_pt_inv	600
Coq.Reals.Ranalysis1.div_eq_inv	600	0.0	synth with cache (only 1: intros; only 1: reflexivity).	4.876654	2
Coq.Reals.Ranalysis1.continuity_pt_div	600	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite div_eq_inv; only 1: apply continuity_pt_mult; only 1: assumption; only 1: apply continuity_pt_inv; only 1: assumption; only 1: assumption).	4.906030	7
Coq.Reals.Ranalysis1.continuity_pt_comp	600
Coq.Reals.Ranalysis1.continuity_plus	600
Coq.Reals.Ranalysis1.continuity_opp	600
Coq.Reals.Ranalysis1.continuity_minus	600
Coq.Reals.Ranalysis1.continuity_mult	600
Coq.Reals.Ranalysis1.continuity_const	600
Coq.Reals.Ranalysis1.continuity_scal	600
Coq.Reals.Ranalysis1.continuity_inv	600
Coq.Reals.Ranalysis1.continuity_div	600
Coq.Reals.Ranalysis1.continuity_comp	600
Coq.Reals.Ranalysis1.uniqueness_step1	600
Coq.Reals.Ranalysis1.uniqueness_step2	600
Coq.Reals.Ranalysis1.uniqueness_step3	600
Coq.Reals.Ranalysis1.uniqueness_limite	600
Coq.Reals.Ranalysis1.derive_pt_eq	600
Coq.Reals.Ranalysis1.derive_pt_eq_0	600
Coq.Reals.Ranalysis1.derive_pt_eq_1	600
Coq.Reals.Ranalysis1.derive_pt_D_in	600
Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	600
Coq.Reals.Ranalysis1.derivable_pt_lim_ext	600
Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	600
Coq.Reals.Ranalysis1.derivable_derive	600
Coq.Reals.Ranalysis1.derivable_continuous_pt	600
Coq.Reals.Ranalysis1.derivable_continuous	600
Coq.Reals.Ranalysis1.derivable_pt_lim_plus	600
Coq.Reals.Ranalysis1.derivable_pt_lim_opp	600
Coq.Reals.Ranalysis1.derivable_pt_lim_minus	600
Coq.Reals.Ranalysis1.derivable_pt_lim_mult	600
Coq.Reals.Ranalysis1.derivable_pt_lim_const	600
Coq.Reals.Ranalysis1.derivable_pt_lim_scal	600
Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	600
Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	600
Coq.Reals.Ranalysis1.derivable_pt_lim_id	600
Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	600
Coq.Reals.Ranalysis1.derivable_pt_lim_comp	600
Coq.Reals.Ranalysis1.derivable_pt_plus	600
Coq.Reals.Ranalysis1.derivable_pt_opp	600
Coq.Reals.Ranalysis1.derivable_pt_minus	600
Coq.Reals.Ranalysis1.derivable_pt_mult	600
Coq.Reals.Ranalysis1.derivable_pt_const	600
Coq.Reals.Ranalysis1.derivable_pt_scal	600
Coq.Reals.Ranalysis1.derivable_pt_id	600
Coq.Reals.Ranalysis1.derivable_pt_Rsqr	600
Coq.Reals.Ranalysis1.derivable_pt_comp	600
Coq.Reals.Ranalysis1.derivable_plus	600
Coq.Reals.Ranalysis1.derivable_opp	600
Coq.Reals.Ranalysis1.derivable_minus	600
Coq.Reals.Ranalysis1.derivable_mult	600
Coq.Reals.Ranalysis1.derivable_const	600	1.0.0	synth with cache (only 1: unfold derivable; only 1: intros; only 1: apply derivable_pt_const).	5.037774	5
Coq.Reals.Ranalysis1.derivable_scal	600
Coq.Reals.Ranalysis1.derivable_id	600	0.1.0	synth with cache (only 1: unfold derivable; only 1: intros ?; only 1: apply derivable_pt_id).	4.974006	6
Coq.Reals.Ranalysis1.derivable_Rsqr	600	0.1.0	synth with cache (only 1: unfold derivable; only 1: intros ?; only 1: apply derivable_pt_Rsqr).	4.960267	6
Coq.Reals.Ranalysis1.derivable_comp	600
Coq.Reals.Ranalysis1.derive_pt_plus	600
Coq.Reals.Ranalysis1.derive_pt_opp	600
Coq.Reals.Ranalysis1.derive_pt_minus	600
Coq.Reals.Ranalysis1.derive_pt_mult	600
Coq.Reals.Ranalysis1.derive_pt_const	600	1.0.0	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_const).	4.456031	7
Coq.Reals.Ranalysis1.derive_pt_scal	600
Coq.Reals.Ranalysis1.derive_pt_id	600	1.0.0	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_id).	4.471949	7
Coq.Reals.Ranalysis1.derive_pt_Rsqr	600	1.0.0	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).	4.481755	8
Coq.Reals.Ranalysis1.derive_pt_comp	600
Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	600
Coq.Reals.Ranalysis1.derivable_pt_lim_pow	600
Coq.Reals.Ranalysis1.derivable_pt_pow	600
Coq.Reals.Ranalysis1.derivable_pow	600	1.0.0.0	synth with cache (only 1: intros ?; only 1: unfold derivable; only 1: intros ?; only 1: apply derivable_pt_pow).	4.895961	6
Coq.Reals.Ranalysis1.derive_pt_pow	600	0.0.0	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_pow).	4.907777	3
Coq.Reals.Ranalysis1.pr_nu	600
Coq.Reals.Ranalysis1.deriv_maximum	600
Coq.Reals.Ranalysis1.deriv_minimum	600
Coq.Reals.Ranalysis1.deriv_constant2	600
Coq.Reals.Ranalysis1.nonneg_derivative_0	600
Coq.Reals.Cauchy_prod.sum_N_predN	600
Coq.Reals.Cauchy_prod.sum_plus	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N; only 1: simpl; only 1: ring; only 1: rewrite tech5; only 1: rewrite tech5; only 1: rewrite tech5; only 1: rewrite IHN; only 1: ring).	5.180451	29
Coq.Reals.Cauchy_prod.cauchy_finite	600
Coq.Reals.Binomial.pascal_step1	600
Coq.Reals.Binomial.pascal_step2	600
Coq.Reals.Binomial.pascal_step3	600
Coq.Reals.Binomial.pascal	600
Coq.Reals.Binomial.binomial	600
Coq.Reals.Rsigma.Sigma.sigma_split	600
Coq.Reals.Rsigma.Sigma.sigma_diff	600
Coq.Reals.Rsigma.Sigma.sigma_diff_neg	600
Coq.Reals.Rsigma.Sigma.sigma_first	600
Coq.Reals.Rsigma.Sigma.sigma_last	600
Coq.Reals.Rsigma.Sigma.sigma_eq_arg	600
Coq.Reals.Rderiv.cont_deriv	600
Coq.Reals.Rderiv.Dconst	600
Coq.Reals.Rderiv.Dx	600
Coq.Reals.Rderiv.Dadd	600
Coq.Reals.Rderiv.Dmult	600
Coq.Reals.Rderiv.Dmult_const	600
Coq.Reals.Rderiv.Dopp	600
Coq.Reals.Rderiv.Dminus	600
Coq.Reals.Rderiv.Dx_pow_n	600
Coq.Reals.Rderiv.Dcomp	600
Coq.Reals.Rderiv.D_pow_n	600
Coq.Reals.Alembert.Alembert_C1	600
Coq.Reals.Alembert.Alembert_C2	600
Coq.Reals.Alembert.AlembertC3_step1	600
Coq.Reals.Alembert.AlembertC3_step2	600
Coq.Reals.Alembert.Alembert_C3	600
Coq.Reals.Alembert.Alembert_C4	600
Coq.Reals.Alembert.Alembert_C5	600
Coq.Reals.Alembert.Alembert_C6	600
Coq.Reals.AltSeries.CV_ALT_step0	600
Coq.Reals.AltSeries.CV_ALT_step1	600
Coq.Reals.AltSeries.CV_ALT_step2	600
Coq.Reals.AltSeries.CV_ALT_step3	600
Coq.Reals.AltSeries.CV_ALT_step4	600
Coq.Reals.AltSeries.CV_ALT	600
Coq.Reals.AltSeries.alternated_series	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply CV_ALT; only 1: assumption; only 1: unfold positivity_seq; only 1: apply decreasing_ineq; only 1: assumption; only 1: assumption; only 1: assumption).	4.988401	8
Coq.Reals.AltSeries.alternated_series_ineq	600
Coq.Reals.AltSeries.PI_tg_pos	600
Coq.Reals.AltSeries.PI_tg_decreasing	600
Coq.Reals.AltSeries.PI_tg_cv	600
Coq.Reals.AltSeries.exist_PI	600	1.1.0	synth with cache (only 1: apply alternated_series; only 1: apply PI_tg_decreasing; only 1: apply PI_tg_cv).	4.995680	9
Coq.Reals.AltSeries.Alt_PI_ineq	600
Coq.Reals.AltSeries.Alt_PI_RGT_0	600
Coq.Reals.Rlimit.eps2_Rgt_R0	600
Coq.Reals.Rlimit.eps2	600	0.0.0	synth with cache (only 1: intros ?; only 1: apply eq_sym; only 1: apply double_var).	4.815446	3
Coq.Reals.Rlimit.eps4	600	0.0	synth with cache (only 1: intros ?; only 1: field).	4.857155	2
Coq.Reals.Rlimit.Rlt_eps2_eps	600	0.0	synth with cache (only 1: intros; only 1: lra).	4.977234	2
Coq.Reals.Rlimit.Rlt_eps4_eps	600	0.0	synth with cache (only 1: intros; only 1: lra).	5.018584	2
Coq.Reals.Rlimit.prop_eps	600
Coq.Reals.Rlimit.mul_factor_wd	600
Coq.Reals.Rlimit.mul_factor_gt	600
Coq.Reals.Rlimit.mul_factor_gt_f	600
Coq.Reals.Rlimit.tech_limit	600
Coq.Reals.Rlimit.tech_limit_contr	600
Coq.Reals.Rlimit.lim_x	600	0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: unfold limit1_in; only 1: unfold limit_in; only 1: simpl; only 1: intros; only 1: split with eps; only 1: split; only 1: auto; only 1: intros; only 1: elim H0; only 1: intros; only 1: auto).	5.175230	20
Coq.Reals.Rlimit.limit_plus	600
Coq.Reals.Rlimit.limit_Ropp	600
Coq.Reals.Rlimit.limit_minus	600
Coq.Reals.Rlimit.limit_free	600
Coq.Reals.Rlimit.limit_mul	600
Coq.Reals.Rlimit.single_limit	600
Coq.Reals.Rlimit.limit_comp	600
Coq.Reals.Rlimit.limit_inv	600
Coq.micromega.Fourier_util.Rlt_mult_inv_pos	600
Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	600	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite Rplus_comm; only 1: apply Rle_lt_0_plus_1; only 1: red; only 1: auto with real).	4.944491	6
Coq.micromega.Fourier_util.Rle_zero_pos_plus1	600
Coq.micromega.Fourier_util.Rle_mult_inv_pos	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case H; only 1: intros; only 1: red; only 1: left; only 1: apply Rlt_mult_inv_pos; only 1: auto with real; only 1: auto with real; only 1: intros; only 1: rewrite <- H1; only 1: red; only 1: right; only 1: ring).	5.278834	44
Coq.Reals.PartSum.tech1	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N; only 1: simpl; only 1: apply H; only 1: apply le_n; only 1: simpl; only 1: apply Rplus_lt_0_compat; only 1: apply IHN; only 1: intros; only 1: apply H; only 1: apply le_S; only 1: assumption; only 1: apply H; only 1: apply le_n).	5.035851	22
Coq.Reals.PartSum.tech2	600
Coq.Reals.PartSum.tech3	600
Coq.Reals.PartSum.tech4	600
Coq.Reals.PartSum.tech5	600	0.0	synth with cache (only 1: intros; only 1: reflexivity).	4.969590	2
Coq.Reals.PartSum.tech6	600
Coq.Reals.PartSum.tech7	600
Coq.Reals.PartSum.tech11	600
Coq.Reals.PartSum.tech12	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Pser; only 1: unfold infinite_sum; only 1: unfold Un_cv in H; only 1: assumption).	4.996332	5
Coq.Reals.PartSum.scal_sum	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N; only 1: simpl; only 1: ring; only 1: rewrite tech5; only 1: rewrite tech5; only 1: rewrite Rmult_plus_distr_l; only 1: rewrite <- IHN; only 1: ring).	5.058325	17
Coq.Reals.PartSum.decomp_sum	600
Coq.Reals.PartSum.plus_sum	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N; only 1: simpl; only 1: ring; only 1: rewrite tech5; only 1: rewrite tech5; only 1: rewrite tech5; only 1: rewrite IHN; only 1: ring).	5.242878	29
Coq.Reals.PartSum.sum_eq	600
Coq.Reals.PartSum.uniqueness_sum	600
Coq.Reals.PartSum.minus_sum	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N; only 1: simpl; only 1: ring; only 1: rewrite tech5; only 1: rewrite tech5; only 1: rewrite tech5; only 1: rewrite IHN; only 1: ring).	5.218201	17
Coq.Reals.PartSum.sum_decomposition	600
Coq.Reals.PartSum.sum_Rle	600
Coq.Reals.PartSum.Rsum_abs	600
Coq.Reals.PartSum.sum_cte	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N; only 1: simpl; only 1: ring; only 1: rewrite tech5; only 1: rewrite IHN; only 1: rewrite S_INR; only 1: rewrite S_INR; only 1: rewrite S_INR; only 1: ring).	5.126035	18
Coq.Reals.PartSum.sum_growing	600
Coq.Reals.PartSum.Rabs_triang_gen	600
Coq.Reals.PartSum.cond_pos_sum	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N; only 1: simpl; only 1: apply H; only 1: rewrite tech5; only 1: apply Rplus_le_le_0_compat; only 1: apply IHN; only 1: apply H).	4.995729	8
Coq.Reals.PartSum.cauchy_abs	600
Coq.Reals.PartSum.cv_cauchy_1	600
Coq.Reals.PartSum.cv_cauchy_2	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply R_complete; only 1: unfold Cauchy_crit_series in H; only 1: exact H).	4.469852	4
Coq.Reals.PartSum.sum_eq_R0	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N; only 1: simpl; only 1: apply H; only 1: apply le_n; only 1: rewrite tech5; only 1: rewrite IHN; only 1: rewrite Rplus_0_l; only 1: apply H; only 1: apply le_n; only 1: intros; only 1: apply H; only 1: apply Nat.le_trans with N; only 1: assumption; only 1: apply Nat.le_succ_diag_r).	5.139150	23
Coq.Reals.PartSum.sum_incr	600
Coq.Reals.PartSum.sum_cv_maj	600
Coq.Reals.Rcomplete.R_complete	600
Coq.micromega.RMicromega.Rsrt	600
Coq.micromega.RMicromega.Rsor	600
Coq.micromega.RMicromega.Rinv_1	600	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Rinv_1; only 1: rewrite Rmult_comm; only 1: apply Rquot1; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_1; only 1: apply ConstructiveCauchyRealsMult.CReal_mult_1_l).	3.512926	7
Coq.micromega.RMicromega.Qeq_true	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply Qeq_eqR; only 1: apply Qeq_bool_eq; only 1: auto).	3.522587	4
Coq.micromega.RMicromega.Qeq_false	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Qeq_bool_neq in H; only 1: contradict H; only 1: apply eqR_Qeq; only 1: easy).	3.526539	5
Coq.micromega.RMicromega.Qle_true	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply Qle_Rle; only 1: apply Qle_bool_imp_le; only 1: easy).	3.515860	4
Coq.micromega.RMicromega.Q2R_0	600	0	synth with cache (only 1: apply Rmult_0_l).	3.446217	1
Coq.micromega.RMicromega.Q2R_1	600	0.0	synth with cache (only 1: compute; only 1: apply Rinv_1).	3.489275	2
Coq.micromega.RMicromega.Q2R_inv_ext	600
Coq.micromega.RMicromega.QSORaddon	600	1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1.1.0.0	synth with cache (only 1: constructor; only 1: constructor; only 1: apply Q2R_0; only 1: apply Q2R_1; only 1: unfold Qplus; only 1: unfold Q2R; only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: unfold Qden; only 1: unfold Qnum; only 1: simpl_mult; only 1: rewrite plus_IZR; only 1: rewrite mult_IZR; only 1: rewrite mult_IZR; only 1: rewrite mult_IZR; only 1: field; only 1: auto; only 1: unfold Qminus; only 1: intros; only 1: rewrite Q2R_plus; only 1: rewrite Q2R_opp; only 1: auto; only 1: unfold Qmult; only 1: unfold Q2R; only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: unfold Qden; only 1: unfold Qnum; only 1: simpl_mult; only 1: rewrite mult_IZR; only 1: rewrite mult_IZR; only 1: field; only 1: auto; only 1: unfold Qopp; only 1: unfold Q2R; only 1: intros ?; only 1: destruct x; only 1: unfold Qden; only 1: unfold Qnum; only 1: rewrite Ropp_Ropp_IZR; only 1: field; only 1: auto; only 1: intros; only 1: apply Qeq_eqR; only 1: apply Qeq_bool_eq; only 1: auto; only 1: apply R_power_theory; only 1: intros; only 1: apply Qeq_bool_neq in H; only 1: contradict H; only 1: apply eqR_Qeq; only 1: easy; only 1: apply Qle_true).	5.110346	227
Coq.micromega.RMicromega.is_neg_true	600
Coq.micromega.RMicromega.is_neg_false	600
Coq.micromega.RMicromega.Q2R_m_Proper	600	1	synth with cache (only 1: exact Qeq_eqR).	3.494592	9
Coq.micromega.RMicromega.Q2R_pow_pos	600
Coq.micromega.RMicromega.Q2R_pow_N	600
Coq.micromega.RMicromega.Qmult_integral	600	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct q; only 1: intros ?; only 1: destruct r; only 1: unfold Qeq; only 1: unfold Qmult; only 1: simpl; only 1: rewrite <- Z.mul_eq_0; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: easy).	3.709281	22
Coq.micromega.RMicromega.Qpower_positive_eq_zero	600
Coq.micromega.RMicromega.Qpower_positive_zero	600
Coq.micromega.RMicromega.Q2RpowerRZ	600
Coq.micromega.RMicromega.Qpower0	600	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct z; only 1: intros ?; only 1: elim H; only 1: reflexivity; only 1: intros ?; only 1: simpl; only 1: apply Qpower_positive_zero; only 1: intros ?; only 1: simpl; only 1: rewrite Qpower_positive_zero; only 1: reflexivity).	3.583440	21
Coq.micromega.RMicromega.Q_of_RcstR	600
Coq.micromega.RMicromega.Reval_formula_compat	600	0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Reval_formula; only 1: destruct f; only 1: unfold Reval_formula'; only 1: unfold Reval_expr; only 1: split; only 1: destruct Fop; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply Rge_le; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: destruct Fop; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply Rle_ge; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	4.185994	82
Coq.micromega.RMicromega.Reval_nformula_dec	600
Coq.micromega.RMicromega.RWeakChecker_sound	600
Coq.micromega.RMicromega.RTautoChecker_sound	600
Coq.Reals.Runcountable.in_holed_interval_dec	600
Coq.Reals.Runcountable.middle_in_interval	600
Coq.Reals.Runcountable.point_in_holed_interval_works	600
Coq.Reals.Runcountable.first_in_holed_interval	600
Coq.Reals.Runcountable.first_in_holed_interval_works	600
Coq.Reals.Runcountable.split_couple_eq	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: injection H; only 1: intros; only 1: split; only 1: subst; only 1: reflexivity; only 1: subst; only 1: reflexivity).	3.613647	8
Coq.Reals.Runcountable.first_two_in_interval_works	600
Coq.Reals.Runcountable.tearing_sequences	600
Coq.Reals.Runcountable.tearing_sequences_projsig	600	0.0.0.0.0	synth with cache (only 1: simpl; only 1: destruct tearing_sequences; only 1: destruct x; only 1: simpl; only 1: reflexivity).	3.688735	5
Coq.Reals.Runcountable.tearing_sequences_inc_dec	600
Coq.Reals.Runcountable.split_lt_succ	600
Coq.Reals.Runcountable.increase_seq_transit	600
Coq.Reals.Runcountable.decrease_seq_transit	600
Coq.Reals.Runcountable.tearing_sequences_ordered_forall	600
Coq.Reals.Runcountable.torn_number	600
Coq.Reals.Runcountable.torn_number_above_first_sequence	600
Coq.Reals.Runcountable.torn_number_below_second_sequence	600
Coq.Reals.Runcountable.limit_index_above_all_indices	600
Coq.Reals.Runcountable.first_indices_increasing	600
Coq.Reals.Runcountable.R_uncountable	600
Coq.Reals.RList.MaxRlist_P1	600
Coq.Reals.RList.MinRlist_P1	600
Coq.Reals.RList.AbsList_P1	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction l; only 1: elim H; only 1: simpl; only 1: simpl in H; only 1: elim H; only 1: intros ?; only 1: left; only 1: rewrite H0; only 1: reflexivity; only 1: intros ?; only 1: right; only 1: apply IHl; only 1: assumption).	5.133620	22
Coq.Reals.RList.MinRlist_P2	600
Coq.Reals.RList.AbsList_P2	600
Coq.Reals.RList.MaxRlist_P2	600
Coq.Reals.RList.pos_Rl_P1	600
Coq.Reals.RList.pos_Rl_P2	600
Coq.Reals.RList.Rlist_P1	600
Coq.Reals.RList.RList_P0	600	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction l; only 1: left; only 1: reflexivity; only 1: simpl; only 1: case Rle_dec; only 1: intros ?; only 1: right; only 1: reflexivity; only 1: intros ?; only 1: left; only 1: reflexivity).	5.117528	20
Coq.Reals.RList.RList_P1	600
Coq.Reals.RList.RList_P2	600
Coq.Reals.RList.RList_P3	600
Coq.Reals.RList.RList_P4	600
Coq.Reals.RList.RList_P5	600
Coq.Reals.RList.RList_P6	600
Coq.Reals.RList.RList_P7	600
Coq.Reals.RList.RList_P8	600
Coq.Reals.RList.RList_P9	600
Coq.Reals.RList.RList_P10	600	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: case Rle_dec; only 1: intros ?; only 1: simpl; only 1: rewrite IHl; only 1: reflexivity; only 1: intros ?; only 1: reflexivity).	5.034108	19
Coq.Reals.RList.RList_P11	600
Coq.Reals.RList.RList_P12	600
Coq.Reals.RList.RList_P13	600
Coq.Reals.RList.RList_P14	600
Coq.Reals.RList.RList_P15	600
Coq.Reals.RList.RList_P16	600
Coq.Reals.RList.RList_P17	600
Coq.Reals.RList.RList_P18	600
Coq.Reals.RList.RList_P19	600	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction l; only 1: elim H; only 1: reflexivity; only 1: exists r; only 1: exists l; only 1: reflexivity).	4.858415	7
Coq.Reals.RList.RList_P20	600
Coq.Reals.RList.RList_P21	600	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	4.878106	3
Coq.Reals.RList.RList_P22	600
Coq.Reals.RList.RList_P23	600
Coq.Reals.RList.RList_P24	600
Coq.Reals.RList.RList_P25	600
Coq.Reals.RList.RList_P26	600
Coq.Reals.RList.RList_P27	600
Coq.Reals.RList.RList_P28	600
Coq.Reals.RList.RList_P29	600
Coq.Reals.Rseries.sequence.EUn_noempty	600
Coq.Reals.Rseries.sequence.Un_in_EUn	600
Coq.Reals.Rseries.sequence.Un_bound_imp	600
Coq.Reals.Rseries.sequence.growing_prop	600
Coq.Reals.Rseries.sequence.Un_cv_crit_lub	600
Coq.Reals.Rseries.sequence.Un_cv_crit	600
Coq.Reals.Rseries.sequence.finite_greater	600
Coq.Reals.Rseries.sequence.cauchy_bound	600
Coq.Reals.Rseries.GP_infinite	600
Coq.Reals.Rseries.CV_shift	600
Coq.Reals.Rseries.CV_shift'	600
Coq.Reals.Rseries.Un_growing_shift	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H).	4.777345	5
Coq.Reals.Rminmax.Rmax_l	600	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: intros ?; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption).	4.859968	7
Coq.Reals.Rminmax.Rmax_r	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	4.827946	4
Coq.Reals.Rminmax.Rmin_l	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	4.817217	4
Coq.Reals.Rminmax.Rmin_r	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	4.877736	4
Coq.Reals.Rminmax.R.plus_max_distr_l	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply max_monotone; only 1: intros ?; only 1: intros ?; only 1: apply Rplus_le_compat_l).	4.979625	5
Coq.Reals.Rminmax.R.plus_max_distr_r	600
Coq.Reals.Rminmax.R.plus_min_distr_l	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply min_monotone; only 1: intros ?; only 1: intros ?; only 1: apply Rplus_le_compat_l).	5.001950	5
Coq.Reals.Rminmax.R.plus_min_distr_r	600
Coq.Reals.Rminmax.R.opp_max_distr	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rmax_case_strong; only 1: intros ?; only 1: rewrite Rmin_left; only 1: easy; only 1: elim H; only 1: auto with real; only 1: auto with real; only 1: intros ?; only 1: rewrite Rmin_right; only 1: easy; only 1: apply Rge_le; only 1: apply Ropp_le_ge_contravar; only 1: assumption).	5.225291	32
Coq.Reals.Rminmax.R.opp_min_distr	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: rewrite Rmax_left; only 1: easy; only 1: apply Rge_le; only 1: apply Ropp_le_ge_contravar; only 1: assumption; only 1: intros ?; only 1: rewrite Rmax_right; only 1: easy; only 1: elim H; only 1: auto with real; only 1: auto with real).	5.268522	32
Coq.Reals.Rminmax.R.minus_max_distr_l	600	0.0.0.0	synth with cache (only 1: unfold Rminus; only 1: intros; only 1: rewrite opp_min_distr; only 1: apply plus_max_distr_l).	4.995945	4
Coq.Reals.Rminmax.R.minus_max_distr_r	600	0.0.0	synth with cache (only 1: unfold Rminus; only 1: intros; only 1: apply plus_max_distr_r).	4.958233	3
Coq.Reals.Rminmax.R.minus_min_distr_l	600	0.0.0.0	synth with cache (only 1: unfold Rminus; only 1: intros; only 1: rewrite opp_max_distr; only 1: apply plus_min_distr_l).	4.843599	4
Coq.Reals.Rminmax.R.minus_min_distr_r	600	0.0.0	synth with cache (only 1: unfold Rminus; only 1: intros; only 1: apply plus_min_distr_r).	4.851874	3
Coq.Reals.Rfunctions.INR_fact_neq_0	600
Coq.Reals.Rfunctions.fact_simpl	600	0.0	synth with cache (only 1: intros ?; only 1: reflexivity).	3.916635	2
Coq.Reals.Rfunctions.simpl_fact	600	1.1.1.0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Rinv_involutive; only 1: unfold fact at 1; only 1: fold fact; only 1: rewrite mult_INR; only 1: rewrite Rinv_mult_distr; only 1: rewrite Rmult_assoc; only 1: rewrite Rinv_l; only 1: apply Rmult_ne; only 1: apply INR_fact_neq_0; only 1: apply not_0_INR; only 1: apply Nat.neq_succ_0; only 1: apply INR_fact_neq_0; only 1: apply INR_fact_neq_0).	4.432393	70
Coq.Reals.Rfunctions.pow_O	600	0	synth with cache (only 1: reflexivity).	3.928670	1
Coq.Reals.Rfunctions.pow_1	600	0.0.0.0.0.0.0	synth with cache (only 1: simpl; only 1: intros ?; only 1: rewrite Rmult_comm; only 1: apply Rquot1; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_1; only 1: apply ConstructiveCauchyRealsMult.CReal_mult_1_l).	3.877826	7
Coq.Reals.Rfunctions.pow_add	600	0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: auto with real).	4.304090	34
Coq.Reals.Rfunctions.Rpow_mult_distr	600	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction n; only 1: field; only 1: simpl; only 1: rewrite Rmult_assoc; only 1: rewrite Rmult_assoc; only 1: apply Rmult_eq_compat_l; only 1: rewrite IHn; only 1: field).	3.754938	19
Coq.Reals.Rfunctions.pow_nonzero	600
Coq.Reals.Rfunctions.pow_RN_plus	600	0.0.0.0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Rmult_assoc; only 1: rewrite <- H; only 1: auto; only 1: auto).	3.903322	35
Coq.Reals.Rfunctions.pow_lt	600
Coq.Reals.Rfunctions.Rlt_pow_R1	600
Coq.Reals.Rfunctions.Rlt_pow	600
Coq.Reals.Rfunctions.tech_pow_Rmult	600
Coq.Reals.Rfunctions.tech_pow_Rplus	600
Coq.Reals.Rfunctions.poly	600
Coq.Reals.Rfunctions.Power_monotonic	600
Coq.Reals.Rfunctions.RPow_abs	600
Coq.Reals.Rfunctions.Pow_x_infinity	600
Coq.Reals.Rfunctions.pow_ne_zero	600
Coq.Reals.Rfunctions.Rinv_pow	600	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: elim n; only 1: simpl; only 1: apply Rinv_1; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: rewrite Rinv_mult_distr; only 1: rewrite H0; only 1: reflexivity; only 1: assumption; only 1: apply pow_nonzero; only 1: assumption).	4.160385	21
Coq.Reals.Rfunctions.pow_lt_1_zero	600
Coq.Reals.Rfunctions.pow_R1	600
Coq.Reals.Rfunctions.pow_Rsqr	600
Coq.Reals.Rfunctions.pow_le	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction n; only 1: simpl; only 1: left; only 1: auto with real; only 1: simpl; only 1: apply Rmult_le_pos; only 1: assumption; only 1: assumption).	3.759984	17
Coq.Reals.Rfunctions.pow_1_even	600
Coq.Reals.Rfunctions.pow_1_odd	600
Coq.Reals.Rfunctions.pow_1_abs	600
Coq.Reals.Rfunctions.pow_mult	600
Coq.Reals.Rfunctions.pow_incr	600
Coq.Reals.Rfunctions.pow_R1_Rle	600
Coq.Reals.Rfunctions.Rle_pow	600
Coq.Reals.Rfunctions.pow1	600	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: rewrite Rmult_1_r; only 1: reflexivity).	3.643919	7
Coq.Reals.Rfunctions.pow_Rabs	600
Coq.Reals.Rfunctions.pow_maj_Rabs	600
Coq.Reals.Rfunctions.Rsqr_pow2	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: reflexivity).	3.614917	5
Coq.Reals.Rfunctions.PowerRZ.Z_compl.intP	600
Coq.Reals.Rfunctions.PowerRZ.Zpower_NR0	600
Coq.Reals.Rfunctions.PowerRZ.powerRZ_O	600
Coq.Reals.Rfunctions.PowerRZ.powerRZ_1	600
Coq.Reals.Rfunctions.PowerRZ.powerRZ_NOR	600
Coq.Reals.Rfunctions.PowerRZ.powerRZ_pos_sub	600
Coq.Reals.Rfunctions.PowerRZ.powerRZ_add	600
Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ	600
Coq.Reals.Rfunctions.PowerRZ.Zpower_pos_powerRZ	600
Coq.Reals.Rfunctions.PowerRZ.powerRZ_lt	600
Coq.Reals.Rfunctions.PowerRZ.powerRZ_le	600
Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ_absolu	600
Coq.Reals.Rfunctions.PowerRZ.powerRZ_R1	600
Coq.Reals.Rfunctions.PowerRZ.pow_powerRZ	600
Coq.Reals.Rfunctions.PowerRZ.powerRZ_ind	600
Coq.Reals.Rfunctions.PowerRZ.powerRZ_inv	600
Coq.Reals.Rfunctions.PowerRZ.powerRZ_neg	600
Coq.Reals.Rfunctions.PowerRZ.powerRZ_mult_distr	600
Coq.Reals.Rfunctions.GP_finite	600
Coq.Reals.Rfunctions.sum_f_R0_triangle	600
Coq.Reals.Rfunctions.R_dist_pos	600
Coq.Reals.Rfunctions.R_dist_sym	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold R_dist; only 1: intros; only 1: unfold Rabs; only 1: destruct Rcase_abs; only 1: destruct Rcase_abs; only 1: apply Rminus_lt in r; only 1: apply Rlt_asym in r; only 1: apply Rminus_lt in r0; only 1: contradiction; only 1: rewrite Ropp_minus_distr; only 1: trivial; only 1: destruct Rcase_abs; only 1: rewrite Ropp_minus_distr; only 1: trivial; only 1: destruct r; only 1: destruct r0; only 1: apply Ropp_lt_gt_0_contravar in H; only 1: rewrite Ropp_minus_distr in H; only 1: apply Rlt_asym in H0; only 1: contradiction; only 1: apply Rminus_diag_uniq in H0; only 1: intropattern subst -> H0; only 1: trivial; only 1: destruct r0; only 1: apply Rminus_diag_uniq in H; only 1: intropattern subst -> H; only 1: trivial; only 1: apply Rminus_diag_uniq in H0; only 1: intropattern subst -> H0; only 1: trivial).	3.659662	67
Coq.Reals.Rfunctions.R_dist_refl	600
Coq.Reals.Rfunctions.R_dist_eq	600	1.1.0.0.0	synth with cache (only 1: unfold R_dist; only 1: intros; only 1: split_Rabs; only 1: ring; only 1: ring).	3.220346	13
Coq.Reals.Rfunctions.R_dist_tri	600
Coq.Reals.Rfunctions.R_dist_plus	600
Coq.Reals.Rfunctions.R_dist_mult_l	600	0.0.0.0.0.0.0	synth with cache (only 1: unfold R_dist; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- Rmult_minus_distr_l; only 1: rewrite Rabs_mult; only 1: reflexivity).	3.183695	7
Coq.Reals.ROrderedType.Req_dec	600
Coq.Reals.ROrderedType.Reqb_eq	600
Coq.Reals.ROrderedType.Rcompare_spec	600
Coq.Reals.ROrderedType.R_as_OT.lt_strorder	600	0.0.0	synth with cache (only 1: split; only 1: exact Rlt_irrefl; only 1: exact Rlt_trans).	4.751823	3
Coq.Reals.ROrderedType.R_as_OT.lt_compat	600	0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: subst; only 1: auto).	4.773814	7
Coq.Reals.ROrderedType.R_as_OT.le_lteq	600	0.0	synth with cache (only 1: unfold Rle; only 1: auto with *).	4.536940	2
Coq.Reals.ArithProp.minus_neq_O	600	0.0.0.0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H using Nat.lt_ind_rel; only 1: clear n i H; only 1: Morphisms.solve_proper; only 1: clear n i H; only 1: intros ?; only 1: rewrite Nat.sub_0_r; only 1: apply Nat.neq_succ_0; only 1: clear n i H; only 1: intros; only 1: rewrite Nat.sub_succ; only 1: easy).	4.532931	59
Coq.Reals.ArithProp.le_minusni_n	600
Coq.Reals.ArithProp.lt_minus_O_lt	600
Coq.Reals.ArithProp.even_odd_cor	600
Coq.Reals.ArithProp.le_double	600
Coq.Reals.ArithProp.euclidian_division	600
Coq.Reals.ArithProp.tech8	600
Coq.Reals.R_sqr.Rsqr_neg	600
Coq.Reals.R_sqr.Rsqr_mult	600	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	3.581694	2
Coq.Reals.R_sqr.Rsqr_plus	600	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	3.684162	2
Coq.Reals.R_sqr.Rsqr_minus	600	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	3.648726	2
Coq.Reals.R_sqr.Rsqr_neg_minus	600	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	3.644954	2
Coq.Reals.R_sqr.Rsqr_1	600	0.1	synth with cache (only 1: unfold Rsqr; only 1: auto with real).	3.663619	3
Coq.Reals.R_sqr.Rsqr_gt_0_0	600
Coq.Reals.R_sqr.Rsqr_pos_lt	600
Coq.Reals.R_sqr.Rsqr_div	600	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: unfold Rdiv; only 1: rewrite Rinv_mult_distr; only 1: rewrite Rmult_assoc; only 1: rewrite Rmult_assoc; only 1: apply Rmult_eq_compat_l; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_assoc; only 1: apply Rmult_eq_compat_l; only 1: reflexivity; only 1: assumption; only 1: assumption).	3.792823	21
Coq.Reals.R_sqr.Rsqr_eq_0	600
Coq.Reals.R_sqr.Rsqr_minus_plus	600	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	3.958991	2
Coq.Reals.R_sqr.Rsqr_plus_minus	600	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	3.996402	2
Coq.Reals.R_sqr.Rsqr_incr_0	600
Coq.Reals.R_sqr.Rsqr_incr_0_var	600
Coq.Reals.R_sqr.Rsqr_incr_1	600	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply Rmult_le_compat; only 1: assumption; only 1: assumption; only 1: assumption; only 1: assumption).	4.034040	7
Coq.Reals.R_sqr.Rsqr_incrst_0	600
Coq.Reals.R_sqr.Rsqr_incrst_1	600	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply Rmult_le_0_lt_compat; only 1: assumption; only 1: assumption; only 1: assumption; only 1: assumption).	4.007530	7
Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	600
Coq.Reals.R_sqr.Rsqr_neg_pos_le_1	600
Coq.Reals.R_sqr.neg_pos_Rsqr_le	600
Coq.Reals.R_sqr.Rsqr_abs	600	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold Rabs; only 1: case Rcase_abs; only 1: intros ?; only 1: apply Rsqr_neg; only 1: intros ?; only 1: reflexivity).	3.917871	7
Coq.Reals.R_sqr.Rsqr_le_abs_0	600	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rsqr_incr_0; only 1: rewrite <- Rsqr_abs; only 1: rewrite <- Rsqr_abs; only 1: assumption; only 1: apply Rabs_pos; only 1: apply Rabs_pos).	3.980859	7
Coq.Reals.R_sqr.Rsqr_le_abs_1	600
Coq.Reals.R_sqr.Rsqr_lt_abs_0	600	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rsqr_incrst_0; only 1: rewrite <- Rsqr_abs; only 1: rewrite <- Rsqr_abs; only 1: assumption; only 1: apply Rabs_pos; only 1: apply Rabs_pos).	3.959480	7
Coq.Reals.R_sqr.Rsqr_lt_abs_1	600
Coq.Reals.R_sqr.Rsqr_inj	600
Coq.Reals.R_sqr.Rsqr_eq_abs_0	600
Coq.Reals.R_sqr.Rsqr_eq_asb_1	600
Coq.Reals.R_sqr.triangle_rectangle	600
Coq.Reals.R_sqr.triangle_rectangle_lt	600
Coq.Reals.R_sqr.triangle_rectangle_le	600
Coq.Reals.R_sqr.Rsqr_inv	600	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: rewrite Rinv_mult_distr; only 1: reflexivity; only 1: trivial; only 1: trivial).	3.967556	6
Coq.Reals.R_sqr.canonical_Rsqr	600	0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: field; only 1: apply a).	4.009686	4
Coq.Reals.R_sqr.Rsqr_eq	600
Coq.Reals.Rbasic_fun.Rmin_case	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rmin; only 1: case Rle_dec; only 1: auto; only 1: auto).	4.038831	21
Coq.Reals.Rbasic_fun.Rmin_case_strong	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rmin; only 1: destruct Rle_dec; only 1: auto with real; only 1: auto with real).	4.137564	21
Coq.Reals.Rbasic_fun.Rmin_Rgt_l	600
Coq.Reals.Rbasic_fun.Rmin_Rgt_r	600	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case Rle_dec; only 1: elim H; only 1: clear H; only 1: intros; only 1: assumption; only 1: elim H; only 1: clear H; only 1: intros; only 1: assumption).	4.044486	19
Coq.Reals.Rbasic_fun.Rmin_Rgt	600
Coq.Reals.Rbasic_fun.Rmin_l	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case Rle_dec; only 1: intros ?; only 1: right; only 1: reflexivity; only 1: intros ?; only 1: auto with real).	4.062391	8
Coq.Reals.Rbasic_fun.Rmin_r	600	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case Rle_dec; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: auto with real).	4.084552	7
Coq.Reals.Rbasic_fun.Rmin_left	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	3.891235	4
Coq.Reals.Rbasic_fun.Rmin_right	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	3.909406	4
Coq.Reals.Rbasic_fun.Rle_min_compat_r	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl).	4.135939	22
Coq.Reals.Rbasic_fun.Rle_min_compat_l	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl).	4.044777	22
Coq.Reals.Rbasic_fun.Rmin_comm	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case Rle_dec; only 1: case Rle_dec; only 1: intros; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption; only 1: intros; only 1: reflexivity; only 1: case Rle_dec; only 1: intros; only 1: reflexivity; only 1: intros; only 1: apply Rle_antisym; only 1: auto with real; only 1: auto with real).	4.316721	41
Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_Rgt_r; only 1: split; only 1: apply cond_pos; only 1: apply cond_pos).	3.933432	5
Coq.Reals.Rbasic_fun.Rmin_pos	600	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case Rle_dec; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption).	3.882287	7
Coq.Reals.Rbasic_fun.Rmin_glb	600	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case Rle_dec; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption).	4.108070	7
Coq.Reals.Rbasic_fun.Rmin_glb_lt	600	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case Rle_dec; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption).	3.911518	7
Coq.Reals.Rbasic_fun.Rmax_case	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rmax; only 1: case Rle_dec; only 1: auto; only 1: auto).	4.284865	21
Coq.Reals.Rbasic_fun.Rmax_case_strong	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rmax; only 1: case Rle_dec; only 1: auto with real; only 1: auto with real).	4.075900	21
Coq.Reals.Rbasic_fun.Rmax_Rle	600
Coq.Reals.Rbasic_fun.Rmax_comm	600	0.0.0.0.1.0.0.0.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Rmax; only 1: case Rle_dec; only 1: case Rle_dec; only 1: intros ?; only 1: intros ?; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption; only 1: auto; only 1: case Rle_dec; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: apply Rle_antisym; only 1: auto with real; only 1: auto with real).	4.338669	55
Coq.Reals.Rbasic_fun.Rmax_l	600	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: auto with real).	3.983327	7
Coq.Reals.Rbasic_fun.Rmax_r	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: right; only 1: reflexivity; only 1: intros ?; only 1: auto with real).	3.864748	8
Coq.Reals.Rbasic_fun.Rmax_left	600	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: intros ?; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption).	3.997573	7
Coq.Reals.Rbasic_fun.Rmax_right	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	3.892378	4
Coq.Reals.Rbasic_fun.Rle_max_compat_r	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: intros ?; only 1: apply Rmax_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: apply Rmax_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl).	4.217839	22
Coq.Reals.Rbasic_fun.Rle_max_compat_l	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: intros ?; only 1: apply Rmax_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: apply Rmax_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl).	4.089932	22
Coq.Reals.Rbasic_fun.RmaxRmult	600
Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	600	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: apply cond_neg; only 1: intros ?; only 1: apply cond_neg).	3.987188	7
Coq.Reals.Rbasic_fun.Rmax_lub	600	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption).	4.090207	7
Coq.Reals.Rbasic_fun.Rmax_lub_lt	600	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption).	3.967655	7
Coq.Reals.Rbasic_fun.Rmax_Rlt	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: intros ?; only 1: split; only 1: apply Rle_lt_trans with y; only 1: assumption; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: intros ?; only 1: split; only 1: assumption; only 1: apply Rlt_trans with x; only 1: apply Rnot_le_gt; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption).	5.207563	164
Coq.Reals.Rbasic_fun.Rmax_neg	600	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption).	3.911188	7
Coq.Reals.Rbasic_fun.Rcase_abs	600
Coq.Reals.Rbasic_fun.Rabs_R0	600
Coq.Reals.Rbasic_fun.Rabs_R1	600
Coq.Reals.Rbasic_fun.Rabs_no_R0	600	0.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rabs; only 1: case Rcase_abs; only 1: intros ?; only 1: apply Ropp_neq_0_compat; only 1: auto; only 1: intros ?; only 1: auto).	3.855531	16
Coq.Reals.Rbasic_fun.Rabs_left	600
Coq.Reals.Rbasic_fun.Rabs_right	600
Coq.Reals.Rbasic_fun.Rabs_left1	600	0.0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: case H; only 1: intros ?; only 1: apply Rabs_left; only 1: auto; only 1: intros ?; only 1: rewrite H0; only 1: rewrite Rabs_right; only 1: auto with real; only 1: auto with real).	4.032098	20
Coq.Reals.Rbasic_fun.Rabs_pos	600
Coq.Reals.Rbasic_fun.Rle_abs	600	0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold Rabs; only 1: case Rcase_abs; only 1: intros; only 1: apply Rminus_le; only 1: rewrite <- Rplus_0_r; only 1: unfold Rminus; only 1: rewrite Ropp_involutive; only 1: auto with real; only 1: intros; only 1: auto with real).	4.173359	30
Coq.Reals.Rbasic_fun.Rabs_le	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Rabs; only 1: case Rcase_abs; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: clear H0; only 1: clear r; only 1: apply Ropp_le_cancel; only 1: rewrite Ropp_involutive; only 1: exact H; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: clear H; only 1: clear r; only 1: assumption).	4.075920	42
Coq.Reals.Rbasic_fun.Rabs_pos_eq	600
Coq.Reals.Rbasic_fun.Rabs_Rabsolu	600	1.0.0	synth with cache (only 1: intros ?; only 1: apply Rabs_pos_eq; only 1: apply Rabs_pos).	3.791072	6
Coq.Reals.Rbasic_fun.Rabs_pos_lt	600
Coq.Reals.Rbasic_fun.Rabs_minus_sym	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rabs; only 1: destruct Rcase_abs; only 1: destruct Rcase_abs; only 1: apply Rminus_lt in r; only 1: apply Rlt_asym in r; only 1: apply Rminus_lt in r0; only 1: contradiction; only 1: rewrite Ropp_minus_distr; only 1: trivial; only 1: destruct Rcase_abs; only 1: rewrite Ropp_minus_distr; only 1: trivial; only 1: destruct r; only 1: destruct r0; only 1: apply Ropp_lt_gt_0_contravar in H; only 1: rewrite Ropp_minus_distr in H; only 1: apply Rlt_asym in H0; only 1: contradiction; only 1: apply Rminus_diag_uniq in H0; only 1: intropattern subst -> H0; only 1: trivial; only 1: destruct r0; only 1: apply Rminus_diag_uniq in H; only 1: intropattern subst -> H; only 1: trivial; only 1: apply Rminus_diag_uniq in H0; only 1: intropattern subst -> H0; only 1: trivial).	4.274480	66
Coq.Reals.Rbasic_fun.Rabs_mult	600
Coq.Reals.Rbasic_fun.Rabs_Rinv	600
Coq.Reals.Rbasic_fun.Rabs_Ropp	600
Coq.Reals.Rbasic_fun.Rabs_triang	600
Coq.Reals.Rbasic_fun.Rabs_triang_inv	600
Coq.Reals.Rbasic_fun.Rabs_triang_inv2	600
Coq.Reals.Rbasic_fun.Rabs_def1	600
Coq.Reals.Rbasic_fun.Rabs_def2	600
Coq.Reals.Rbasic_fun.RmaxAbs	600
Coq.Reals.Rbasic_fun.Rabs_Zabs	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: case z; only 1: unfold BinIntDef.Z.abs; only 1: apply Rabs_R0; only 1: unfold BinIntDef.Z.abs; only 1: intros ?; only 1: apply Rabs_pos_eq; only 1: apply IZR_le; only 1: easy; only 1: unfold BinIntDef.Z.abs; only 1: unfold IZR at 1; only 1: intros ?; only 1: rewrite Rabs_Ropp; only 1: apply Rabs_pos_eq; only 1: apply IZR_le; only 1: easy).	3.719417	24
Coq.Reals.Rbasic_fun.abs_IZR	600	0.0.0	synth with cache (only 1: intros; only 1: rewrite Rabs_Zabs; only 1: easy).	3.704767	3
Coq.Reals.Rbasic_fun.Ropp_Rmax	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rmax_case_strong; only 1: intros ?; only 1: rewrite Rmin_left; only 1: easy; only 1: elim H; only 1: auto with real; only 1: auto with real; only 1: intros ?; only 1: rewrite Rmin_right; only 1: easy; only 1: apply Rge_le; only 1: apply Ropp_le_ge_contravar; only 1: assumption).	3.720363	30
Coq.Reals.Rbasic_fun.Ropp_Rmin	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: rewrite Rmax_left; only 1: easy; only 1: apply Rge_le; only 1: apply Ropp_le_ge_contravar; only 1: assumption; only 1: intros ?; only 1: rewrite Rmax_right; only 1: easy; only 1: elim H; only 1: auto with real; only 1: auto with real).	3.966935	30
Coq.Reals.Rbasic_fun.Rmax_assoc	600
Coq.Reals.Rbasic_fun.Rminmax	600
Coq.Reals.Rbasic_fun.Rmin_assoc	600
Coq.QArith.Qreals.IZR_nz	600	0.0.0	synth with cache (only 1: intros; only 1: apply not_0_IZR; only 1: easy).	3.833337	3
Coq.QArith.Qreals.eqR_Qeq	600
Coq.QArith.Qreals.Qeq_eqR	600
Coq.QArith.Qreals.Rle_Qle	600
Coq.QArith.Qreals.Qle_Rle	600
Coq.QArith.Qreals.Rlt_Qlt	600
Coq.QArith.Qreals.Qlt_Rlt	600
Coq.QArith.Qreals.Q2R_plus	600	0.0.0.0.0.0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: unfold Qplus; only 1: unfold Q2R; only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: unfold Qden; only 1: unfold Qnum; only 1: simpl_mult; only 1: rewrite plus_IZR; only 1: rewrite mult_IZR; only 1: rewrite mult_IZR; only 1: rewrite mult_IZR; only 1: field; only 1: auto).	3.769266	32
Coq.QArith.Qreals.Q2R_mult	600	0.0.0.0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: unfold Qmult; only 1: unfold Q2R; only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: unfold Qden; only 1: unfold Qnum; only 1: simpl_mult; only 1: rewrite mult_IZR; only 1: rewrite mult_IZR; only 1: field; only 1: auto).	3.713932	30
Coq.QArith.Qreals.Q2R_opp	600	0.0.0.0.0.0.0.1.0	synth with cache (only 1: unfold Qopp; only 1: unfold Q2R; only 1: intros ?; only 1: destruct x; only 1: unfold Qden; only 1: unfold Qnum; only 1: rewrite Ropp_Ropp_IZR; only 1: field; only 1: auto).	3.609980	26
Coq.QArith.Qreals.Q2R_minus	600	0.0.0.0.0	synth with cache (only 1: unfold Qminus; only 1: intros; only 1: rewrite Q2R_plus; only 1: rewrite Q2R_opp; only 1: auto).	3.577743	5
Coq.QArith.Qreals.Q2R_inv	600
Coq.QArith.Qreals.Q2R_div	600	0.0.0.0.0.0.0	synth with cache (only 1: unfold Qdiv; only 1: unfold Rdiv; only 1: intros; only 1: rewrite Q2R_mult; only 1: rewrite Q2R_inv; only 1: auto; only 1: auto).	3.504135	7
Coq.Reals.R_Ifp.tech_up	600
Coq.Reals.R_Ifp.up_tech	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply tech_up with (1 := H0); only 1: rewrite plus_IZR; only 1: apply Rplus_le_compat_r; only 1: easy).	3.824309	5
Coq.Reals.R_Ifp.fp_R0	600
Coq.Reals.R_Ifp.for_base_fp	600
Coq.Reals.R_Ifp.base_fp	600
Coq.Reals.R_Ifp.base_Int_part	600
Coq.Reals.R_Ifp.Int_part_INR	600
Coq.Reals.R_Ifp.fp_nat	600
Coq.Reals.R_Ifp.R0_fp_O	600	0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: rewrite <- H0 in H; only 1: generalize fp_R0; only 1: intros ?; only 1: auto with zarith real).	3.886772	6
Coq.Reals.R_Ifp.Rminus_Int_part1	600
Coq.Reals.R_Ifp.Rminus_Int_part2	600
Coq.Reals.R_Ifp.Rminus_fp1	600
Coq.Reals.R_Ifp.Rminus_fp2	600
Coq.Reals.R_Ifp.plus_Int_part1	600
Coq.Reals.R_Ifp.plus_Int_part2	600
Coq.Reals.R_Ifp.plus_frac_part1	600
Coq.Reals.R_Ifp.plus_frac_part2	600
Coq.Reals.DiscrR.Rlt_R0_R2	600
Coq.Reals.DiscrR.IZR_eq	600	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	4.601264	3
Coq.Reals.Rlogic.Arithmetical_dec.sig_forall_dec	600
Coq.Reals.Rlogic.not_not_archimedean	600
Coq.Reals.Rlogic.sig_not_dec	600
Coq.Reals.RIneq.Rle_refl	600	0.0.0	synth with cache (only 1: intros ?; only 1: right; only 1: reflexivity).	3.537603	3
Coq.Reals.RIneq.Rge_refl	600	0.0.0	synth with cache (only 1: intros ?; only 1: right; only 1: reflexivity).	3.504938	3
Coq.Reals.RIneq.Rlt_irrefl	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: eapply Rlt_asym; only 1: eauto; only 1: auto).	3.632525	5
Coq.Reals.RIneq.Rgt_irrefl	600	0	synth with cache (only 1: exact Rlt_irrefl).	3.499883	1
Coq.Reals.RIneq.Rlt_not_eq	600	0.0.0.1.0.0.0.0.0	synth with cache (only 1: red; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst -> H0; only 1: eapply Rlt_asym; only 1: eauto; only 1: auto).	3.725664	19
Coq.Reals.RIneq.Rgt_not_eq	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply not_eq_sym; only 1: apply Rlt_not_eq; only 1: auto with real).	3.506474	4
Coq.Reals.RIneq.Rlt_dichotomy_converse	600	0.0.0.0.0	synth with cache (only 1: intuition; only 1: apply Rlt_not_eq in H1; only 1: eauto; only 1: apply Rgt_not_eq in H1; only 1: eauto).	3.657449	5
Coq.Reals.RIneq.Req_dec	600
Coq.Reals.RIneq.Rtotal_order	600
Coq.Reals.RIneq.Rdichotomy	600
Coq.Reals.RIneq.Rlt_le	600	0.0.0	synth with cache (only 1: intros; only 1: red; only 1: tauto).	3.568564	3
Coq.Reals.RIneq.Rgt_ge	600	0.0.0	synth with cache (only 1: intros; only 1: red; only 1: tauto).	3.618982	3
Coq.Reals.RIneq.Rle_ge	600	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).	3.557445	5
Coq.Reals.RIneq.Rge_le	600	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).	3.608102	5
Coq.Reals.RIneq.Rlt_gt	600	0	synth with cache (only 1: trivial).	3.612479	1
Coq.Reals.RIneq.Rgt_lt	600	0	synth with cache (only 1: trivial).	3.574272	1
Coq.Reals.RIneq.Rnot_le_lt	600
Coq.Reals.RIneq.Rnot_ge_gt	600	0.0.0.0	synth with cache (only 1: intros; only 1: red; only 1: apply Rnot_le_lt; only 1: auto with real).	3.632720	4
Coq.Reals.RIneq.Rnot_le_gt	600	0.0.0.0	synth with cache (only 1: intros; only 1: red; only 1: apply Rnot_le_lt; only 1: auto with real).	3.689054	4
Coq.Reals.RIneq.Rnot_ge_lt	600	0.0.0	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: auto with real).	3.505846	3
Coq.Reals.RIneq.Rnot_lt_le	600
Coq.Reals.RIneq.Rnot_gt_le	600
Coq.Reals.RIneq.Rnot_gt_ge	600
Coq.Reals.RIneq.Rnot_lt_ge	600	0	synth with cache (only 1: eauto using Rnot_gt_ge with rorders).	3.527624	1
Coq.Reals.RIneq.Rlt_not_le	600	0.0.0.0	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: unfold not; only 1: intuition eauto  3).	3.616858	4
Coq.Reals.RIneq.Rgt_not_le	600	0	synth with cache (only 1: exact Rlt_not_le).	3.813350	1
Coq.Reals.RIneq.Rlt_not_ge	600
Coq.Reals.RIneq.Rgt_not_ge	600	0	synth with cache (only 1: exact Rlt_not_ge).	3.823702	1
Coq.Reals.RIneq.Rle_not_lt	600
Coq.Reals.RIneq.Rge_not_lt	600	0.0.0	synth with cache (only 1: intros; only 1: apply Rle_not_lt; only 1: auto with real).	3.806047	3
Coq.Reals.RIneq.Rle_not_gt	600	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rle_not_lt).	3.910488	3
Coq.Reals.RIneq.Rge_not_gt	600	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rge_not_lt).	3.842977	3
Coq.Reals.RIneq.Req_le	600	0.0	synth with cache (only 1: unfold Rle; only 1: tauto).	3.911273	2
Coq.Reals.RIneq.Req_ge	600	0.0	synth with cache (only 1: unfold Rge; only 1: tauto).	3.946465	2
Coq.Reals.RIneq.Req_le_sym	600	0.0	synth with cache (only 1: unfold Rle; only 1: auto).	3.953002	2
Coq.Reals.RIneq.Req_ge_sym	600	0.0	synth with cache (only 1: unfold Rge; only 1: auto).	3.907841	2
Coq.Reals.RIneq.Rgt_asym	600	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rlt_asym).	3.942887	3
Coq.Reals.RIneq.Rle_antisym	600
Coq.Reals.RIneq.Rge_antisym	600	0	synth with cache (only 1: auto with real).	3.797021	1
Coq.Reals.RIneq.Rle_le_eq	600	0	synth with cache (only 1: intuition).	3.974650	1
Coq.Reals.RIneq.Rge_ge_eq	600	0	synth with cache (only 1: intuition).	3.789305	1
Coq.Reals.RIneq.Rlt_eq_compat	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros; only 1: replace r1 with r2; only 1: replace r3 with r4; only 1: assumption).	3.894713	8
Coq.Reals.RIneq.Rgt_eq_compat	600	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: red; only 1: apply Rlt_eq_compat with (r2 := r4) (r4 := r2); only 1: auto; only 1: auto; only 1: auto).	3.962312	6
Coq.Reals.RIneq.Rle_trans	600
Coq.Reals.RIneq.Rge_trans	600	0	synth with cache (only 1: eauto using Rle_trans with rorders).	3.769642	1
Coq.Reals.RIneq.Rgt_trans	600	0	synth with cache (only 1: eauto using Rlt_trans with rorders).	3.870989	1
Coq.Reals.RIneq.Rle_lt_trans	600	0.0.0	synth with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	3.778905	3
Coq.Reals.RIneq.Rlt_le_trans	600	0.0.0	synth with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	3.880600	3
Coq.Reals.RIneq.Rge_gt_trans	600	0	synth with cache (only 1: eauto using Rlt_le_trans with rorders).	3.865045	1
Coq.Reals.RIneq.Rgt_ge_trans	600	0	synth with cache (only 1: eauto using Rle_lt_trans with rorders).	3.769880	1
Coq.Reals.RIneq.Rlt_dec	600
Coq.Reals.RIneq.Rle_dec	600
Coq.Reals.RIneq.Rgt_dec	600	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rlt_dec).	3.747223	3
Coq.Reals.RIneq.Rge_dec	600
Coq.Reals.RIneq.Rlt_le_dec	600
Coq.Reals.RIneq.Rgt_ge_dec	600
Coq.Reals.RIneq.Rle_lt_dec	600
Coq.Reals.RIneq.Rge_gt_dec	600
Coq.Reals.RIneq.Rlt_or_le	600
Coq.Reals.RIneq.Rgt_or_ge	600
Coq.Reals.RIneq.Rle_or_lt	600
Coq.Reals.RIneq.Rge_or_gt	600
Coq.Reals.RIneq.Rle_lt_or_eq_dec	600
Coq.Reals.RIneq.inser_trans_R	600
Coq.Reals.RIneq.Rplus_0_r	600	0.0	synth with cache (only 1: intros ?; only 1: ring).	3.851861	2
Coq.Reals.RIneq.Rplus_ne	600	0.0.0.0.0.0	synth with cache (only 1: split; only 1: ring; only 1: apply Rquot1; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_0; only 1: apply CReal_plus_0_l).	3.837666	6
Coq.Reals.RIneq.Rplus_opp_l	600	0.0	synth with cache (only 1: intros ?; only 1: ring).	3.820659	2
Coq.Reals.RIneq.Rplus_opp_r_uniq	600
Coq.Reals.RIneq.Rplus_eq_compat_l	600	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply f_equal).	3.552728	4
Coq.Reals.RIneq.Rplus_eq_compat_r	600
Coq.Reals.RIneq.Rplus_eq_reg_l	600
Coq.Reals.RIneq.Rplus_eq_reg_r	600
Coq.Reals.RIneq.Rplus_0_r_uniq	600
Coq.Reals.RIneq.Rplus_eq_0_l	600
Coq.Reals.RIneq.Rplus_eq_R0	600	0.1.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: apply Rplus_eq_0_l with r2; only 1: auto with real; only 1: auto with real; only 1: auto with real; only 1: apply Rplus_eq_0_l with r1; only 1: auto with real; only 1: auto with real; only 1: rewrite Rplus_comm; only 1: auto with real).	3.672757	21
Coq.Reals.RIneq.Rinv_r	600	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: trivial).	3.637772	3
Coq.Reals.RIneq.Rinv_l_sym	600	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: trivial).	3.657177	3
Coq.Reals.RIneq.Rinv_r_sym	600	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: trivial).	3.686664	3
Coq.Reals.RIneq.Rmult_0_r	600	0.0	synth with cache (only 1: intros ?; only 1: ring).	3.635603	2
Coq.Reals.RIneq.Rmult_0_l	600	0.0	synth with cache (only 1: intros ?; only 1: ring).	3.514473	2
Coq.Reals.RIneq.Rmult_ne	600	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: split; only 1: rewrite Rmult_comm; only 1: apply Rquot1; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_1; only 1: apply CReal_mult_1_l; only 1: apply Rquot1; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_1; only 1: apply CReal_mult_1_l).	3.775657	19
Coq.Reals.RIneq.Rmult_1_r	600	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Rmult_comm; only 1: apply Rquot1; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_1; only 1: apply CReal_mult_1_l).	3.586303	6
Coq.Reals.RIneq.Rmult_eq_compat_l	600	0	synth with cache (only 1: auto with real).	3.544012	1
Coq.Reals.RIneq.Rmult_eq_compat_r	600
Coq.Reals.RIneq.Rmult_eq_reg_l	600
Coq.Reals.RIneq.Rmult_eq_reg_r	600
Coq.Reals.RIneq.Rmult_integral	600
Coq.Reals.RIneq.Rmult_eq_0_compat	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: rewrite H; only 1: auto with real; only 1: rewrite H; only 1: auto with real).	3.681902	8
Coq.Reals.RIneq.Rmult_eq_0_compat_r	600	0	synth with cache (only 1: auto with real).	3.520897	1
Coq.Reals.RIneq.Rmult_eq_0_compat_l	600	0	synth with cache (only 1: auto with real).	3.524841	1
Coq.Reals.RIneq.Rmult_neq_0_reg	600	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: red; only 1: intros ?; only 1: apply H; only 1: auto with real; only 1: red; only 1: intros ?; only 1: apply H; only 1: auto with real).	3.745701	20
Coq.Reals.RIneq.Rmult_integral_contrapositive	600
Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	600	0	synth with cache (only 1: auto using Rmult_integral_contrapositive).	3.606336	1
Coq.Reals.RIneq.Rmult_plus_distr_r	600	1.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: ring).	3.566675	10
Coq.Reals.RIneq.Rsqr_0	600	0.0	synth with cache (only 1: unfold Rsqr; only 1: auto with real).	3.517877	2
Coq.Reals.RIneq.Rsqr_0_uniq	600
Coq.Reals.RIneq.Ropp_eq_compat	600	0	synth with cache (only 1: auto with real).	3.506564	1
Coq.Reals.RIneq.Ropp_0	600	0	synth with cache (only 1: ring).	3.625141	1
Coq.Reals.RIneq.Ropp_eq_0_compat	600	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: auto with real).	3.655961	3
Coq.Reals.RIneq.Ropp_involutive	600	0.0	synth with cache (only 1: intros ?; only 1: ring).	3.490934	2
Coq.Reals.RIneq.Ropp_neq_0_compat	600
Coq.Reals.RIneq.Ropp_plus_distr	600	0.0	synth with cache (only 1: intros; only 1: ring).	3.551484	2
Coq.Reals.RIneq.Ropp_mult_distr_l	600	0.0	synth with cache (only 1: intros; only 1: ring).	3.603640	2
Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	600	0.0	synth with cache (only 1: intros; only 1: ring).	3.657446	2
Coq.Reals.RIneq.Rmult_opp_opp	600	0.0	synth with cache (only 1: intros; only 1: ring).	3.647167	2
Coq.Reals.RIneq.Ropp_mult_distr_r	600	0.0	synth with cache (only 1: intros; only 1: ring).	3.686799	2
Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	600	0.0	synth with cache (only 1: intros; only 1: ring).	3.637152	2
Coq.Reals.RIneq.Rminus_0_r	600	0.0	synth with cache (only 1: intros ?; only 1: ring).	3.605979	2
Coq.Reals.RIneq.Rminus_0_l	600	0.0	synth with cache (only 1: intros ?; only 1: ring).	3.683096	2
Coq.Reals.RIneq.Ropp_minus_distr	600	0.0	synth with cache (only 1: intros; only 1: ring).	3.543583	2
Coq.Reals.RIneq.Ropp_minus_distr'	600	0.0	synth with cache (only 1: intros; only 1: ring).	3.639595	2
Coq.Reals.RIneq.Rminus_diag_eq	600	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: ring).	3.590840	3
Coq.Reals.RIneq.Rminus_diag_uniq	600
Coq.Reals.RIneq.Rminus_diag_uniq_sym	600
Coq.Reals.RIneq.Rplus_minus	600	0.0	synth with cache (only 1: intros; only 1: ring).	3.631738	2
Coq.Reals.RIneq.Rminus_eq_contra	600	0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: auto with real).	3.557258	7
Coq.Reals.RIneq.Rminus_not_eq	600	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: apply Rminus_diag_eq; only 1: auto).	3.730574	5
Coq.Reals.RIneq.Rminus_not_eq_right	600	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: rewrite H0; only 1: ring).	3.580621	5
Coq.Reals.RIneq.Rmult_minus_distr_l	600	0.0	synth with cache (only 1: intros; only 1: ring).	3.926242	2
Coq.Reals.RIneq.Rinv_1	600	0	synth with cache (only 1: field).	3.807566	1
Coq.Reals.RIneq.Rinv_neq_0_compat	600
Coq.Reals.RIneq.Rinv_involutive	600	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: trivial).	3.880779	3
Coq.Reals.RIneq.Rinv_mult_distr	600	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: auto).	3.877125	3
Coq.Reals.RIneq.Ropp_inv_permute	600	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: trivial).	3.848381	3
Coq.Reals.RIneq.Rinv_r_simpl_r	600
Coq.Reals.RIneq.Rinv_r_simpl_l	600
Coq.Reals.RIneq.Rinv_r_simpl_m	600
Coq.Reals.RIneq.Rinv_mult_simpl	600
Coq.Reals.RIneq.Rplus_gt_compat_l	600	0	synth with cache (only 1: eauto using Rplus_lt_compat_l with rorders).	3.820693	1
Coq.Reals.RIneq.Rplus_lt_compat_r	600
Coq.Reals.RIneq.Rplus_gt_compat_r	600	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Rplus_lt_compat_r).	3.846938	4
Coq.Reals.RIneq.Rplus_le_compat_l	600
Coq.Reals.RIneq.Rplus_ge_compat_l	600
Coq.Reals.RIneq.Rplus_le_compat_r	600
Coq.Reals.RIneq.Rplus_ge_compat_r	600	0	synth with cache (only 1: auto using Rplus_le_compat_r with rorders).	3.844695	1
Coq.Reals.RIneq.Rplus_lt_compat	600
Coq.Reals.RIneq.Rplus_le_compat	600
Coq.Reals.RIneq.Rplus_gt_compat	600	0	synth with cache (only 1: auto using Rplus_lt_compat with rorders).	3.752455	1
Coq.Reals.RIneq.Rplus_ge_compat	600	0	synth with cache (only 1: auto using Rplus_le_compat with rorders).	3.801475	1
Coq.Reals.RIneq.Rplus_lt_le_compat	600
Coq.Reals.RIneq.Rplus_le_lt_compat	600
Coq.Reals.RIneq.Rplus_gt_ge_compat	600	0	synth with cache (only 1: auto using Rplus_lt_le_compat with rorders).	3.802977	1
Coq.Reals.RIneq.Rplus_ge_gt_compat	600	0	synth with cache (only 1: auto using Rplus_le_lt_compat with rorders).	3.792195	1
Coq.Reals.RIneq.Rplus_lt_0_compat	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros; only 1: apply Rlt_trans with r1; only 1: assumption; only 1: pattern r1 at 1; only 1: rewrite <- Rplus_0_r; only 1: apply Rplus_lt_compat_l; only 1: assumption).	3.891891	17
Coq.Reals.RIneq.Rplus_le_lt_0_compat	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros; only 1: apply Rle_lt_trans with r1; only 1: assumption; only 1: pattern r1 at 1; only 1: rewrite <- Rplus_0_r; only 1: apply Rplus_lt_compat_l; only 1: assumption).	3.901960	19
Coq.Reals.RIneq.Rplus_lt_le_0_compat	600	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros; only 1: rewrite <- Rplus_comm; only 1: apply Rplus_le_lt_0_compat; only 1: assumption; only 1: assumption).	3.854530	7
Coq.Reals.RIneq.Rplus_le_le_0_compat	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros; only 1: apply Rle_trans with r1; only 1: assumption; only 1: pattern r1 at 1; only 1: rewrite <- Rplus_0_r; only 1: apply Rplus_le_compat_l; only 1: assumption).	3.895111	17
Coq.Reals.RIneq.sum_inequa_Rle_lt	600
Coq.Reals.RIneq.Rplus_lt_reg_l	600
Coq.Reals.RIneq.Rplus_lt_reg_r	600
Coq.Reals.RIneq.Rplus_le_reg_l	600
Coq.Reals.RIneq.Rplus_le_reg_r	600
Coq.Reals.RIneq.Rplus_gt_reg_l	600
Coq.Reals.RIneq.Rplus_ge_reg_l	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rle_ge; only 1: apply Rplus_le_reg_l with r; only 1: auto with real).	3.479089	4
Coq.Reals.RIneq.Rplus_le_reg_pos_r	600
Coq.Reals.RIneq.Rplus_lt_reg_pos_r	600
Coq.Reals.RIneq.Rplus_ge_reg_neg_r	600
Coq.Reals.RIneq.Rplus_gt_reg_neg_r	600
Coq.Reals.RIneq.Ropp_gt_lt_contravar	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp; only 1: rewrite Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: unfold Rgt in H; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	3.612082	18
Coq.Reals.RIneq.Ropp_lt_gt_contravar	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rgt; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp; only 1: rewrite Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	3.652129	18
Coq.Reals.RIneq.Ropp_lt_contravar	600	0	synth with cache (only 1: auto with real).	3.457453	1
Coq.Reals.RIneq.Ropp_gt_contravar	600	0	synth with cache (only 1: auto with real).	3.500533	1
Coq.Reals.RIneq.Ropp_le_ge_contravar	600	0.0.0.0.0.0.0	synth with cache (only 1: unfold Rge; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: auto with real; only 1: auto with real).	3.443645	7
Coq.Reals.RIneq.Ropp_ge_le_contravar	600	0.0.0.0.0.0.0	synth with cache (only 1: unfold Rle; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: auto with real; only 1: auto with real).	3.419911	7
Coq.Reals.RIneq.Ropp_le_contravar	600	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto with real; only 1: auto with real).	3.417818	6
Coq.Reals.RIneq.Ropp_ge_contravar	600	0	synth with cache (only 1: auto using Ropp_le_contravar with real).	3.446405	1
Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	600
Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	600
Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	600	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Ropp_0; only 1: auto with real).	3.448398	3
Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	600	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Ropp_0; only 1: auto with real).	3.454018	3
Coq.Reals.RIneq.Ropp_0_le_ge_contravar	600
Coq.Reals.RIneq.Ropp_0_ge_le_contravar	600
Coq.Reals.RIneq.Ropp_lt_cancel	600
Coq.Reals.RIneq.Ropp_gt_cancel	600	0	synth with cache (only 1: auto using Ropp_lt_cancel with rorders).	3.406971	1
Coq.Reals.RIneq.Ropp_le_cancel	600
Coq.Reals.RIneq.Ropp_ge_cancel	600	0	synth with cache (only 1: auto using Ropp_le_cancel with rorders).	3.431021	1
Coq.Reals.RIneq.Rmult_lt_compat_r	600
Coq.Reals.RIneq.Rmult_gt_compat_r	600	0	synth with cache (only 1: eauto using Rmult_lt_compat_r with rorders).	3.424728	1
Coq.Reals.RIneq.Rmult_gt_compat_l	600	0	synth with cache (only 1: eauto using Rmult_lt_compat_l with rorders).	3.365638	1
Coq.Reals.RIneq.Rmult_le_compat_l	600	0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: destruct H0; only 1: unfold Rle; only 1: auto with real; only 1: unfold Rle; only 1: auto with real; only 1: destruct H0; only 1: unfold Rle; only 1: right; only 1: rewrite <- H; only 1: rewrite Rmult_0_l; only 1: rewrite Rmult_0_l; only 1: reflexivity; only 1: unfold Rle; only 1: auto with real).	3.820224	46
Coq.Reals.RIneq.Rmult_le_compat_r	600
Coq.Reals.RIneq.Rmult_ge_compat_l	600	0	synth with cache (only 1: eauto using Rmult_le_compat_l with rorders).	3.456751	1
Coq.Reals.RIneq.Rmult_ge_compat_r	600	0	synth with cache (only 1: eauto using Rmult_le_compat_r with rorders).	3.479221	1
Coq.Reals.RIneq.Rmult_le_compat	600
Coq.Reals.RIneq.Rmult_ge_compat	600
Coq.Reals.RIneq.Rmult_gt_0_lt_compat	600
Coq.Reals.RIneq.Rmult_le_0_lt_compat	600
Coq.Reals.RIneq.Rmult_lt_0_compat	600
Coq.Reals.RIneq.Rmult_le_compat_neg_l	600
Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	600	1.0.0	synth with cache (only 1: intros; only 1: apply Rle_ge; only 1: auto with real).	3.285617	4
Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	600
Coq.Reals.RIneq.Rmult_lt_reg_l	600
Coq.Reals.RIneq.Rmult_lt_reg_r	600
Coq.Reals.RIneq.Rmult_gt_reg_l	600	1	synth with cache (only 1: eauto using Rmult_lt_reg_l with rorders).	3.344931	7
Coq.Reals.RIneq.Rmult_le_reg_l	600
Coq.Reals.RIneq.Rmult_le_reg_r	600
Coq.Reals.RIneq.Rlt_minus	600
Coq.Reals.RIneq.Rgt_minus	600
Coq.Reals.RIneq.Rlt_Rminus	600	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rgt_minus).	3.095899	3
Coq.Reals.RIneq.Rle_minus	600	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: unfold Rle; only 1: auto with real; only 1: unfold Rle; only 1: auto with real).	3.063197	5
Coq.Reals.RIneq.Rge_minus	600	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: auto using Rgt_minus, Rgt_ge; only 1: right; only 1: rewrite H; only 1: ring).	3.086693	5
Coq.Reals.RIneq.Rminus_lt	600
Coq.Reals.RIneq.Rminus_gt	600
Coq.Reals.RIneq.Rminus_gt_0_lt	600	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rminus_gt).	3.165623	3
Coq.Reals.RIneq.Rminus_le	600
Coq.Reals.RIneq.Rminus_ge	600
Coq.Reals.RIneq.tech_Rplus	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply not_eq_sym; only 1: apply Rlt_not_eq; only 1: apply Rle_lt_trans with r; only 1: assumption; only 1: pattern r at 1; only 1: rewrite <- Rplus_0_r; only 1: apply Rplus_lt_compat_l; only 1: assumption).	3.265187	19
Coq.Reals.RIneq.Rle_0_sqr	600
Coq.Reals.RIneq.Rlt_0_sqr	600
Coq.Reals.RIneq.Rplus_sqr_eq_0_l	600
Coq.Reals.RIneq.Rplus_sqr_eq_0	600	0.1.0.0.1.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: apply Rplus_sqr_eq_0_l with r2; only 1: auto with real; only 1: apply Rplus_sqr_eq_0_l with r1; only 1: rewrite Rplus_comm; only 1: auto with real).	3.281504	28
Coq.Reals.RIneq.Rlt_0_1	600
Coq.Reals.RIneq.Rle_0_1	600	3.0	synth with cache (only 1: left; only 1: exact Rlt_0_1).	3.042123	15
Coq.Reals.RIneq.Rinv_0_lt_compat	600
Coq.Reals.RIneq.Rinv_lt_0_compat	600
Coq.Reals.RIneq.Rinv_lt_contravar	600
Coq.Reals.RIneq.Rinv_1_lt_contravar	600
Coq.Reals.RIneq.Rle_lt_0_plus_1	600
Coq.Reals.RIneq.Rlt_plus_1	600
Coq.Reals.RIneq.tech_Rgt_minus	600
Coq.Reals.RIneq.S_INR	600	0.0.0.0	synth with cache (only 1: intros ?; only 1: case n; only 1: auto with real; only 1: auto with real).	2.935029	4
Coq.Reals.RIneq.S_O_plus_INR	600	0.0.1.0.0.0	synth with cache (only 1: intros ?; only 1: simpl; only 1: case n; only 1: auto with real; only 1: intros; only 1: auto with real).	2.984384	13
Coq.Reals.RIneq.plus_INR	600
Coq.Reals.RIneq.minus_INR	600
Coq.Reals.RIneq.mult_INR	600	0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: induction n; only 1: simpl; only 1: auto with real; only 1: rewrite S_INR; only 1: simpl; only 1: rewrite plus_INR; only 1: rewrite IHn; only 1: ring).	2.995861	18
Coq.Reals.RIneq.pow_INR	600	0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: easy; only 1: simpl; only 1: rewrite mult_INR; only 1: rewrite IHn; only 1: easy).	2.899964	6
Coq.Reals.RIneq.lt_0_INR	600	0.1.0.1.0	synth with cache (only 1: simple induction 1; only 1: auto with real; only 1: intros; only 1: rewrite S_INR; only 1: auto with real).	2.898022	12
Coq.Reals.RIneq.lt_INR	600
Coq.Reals.RIneq.lt_1_INR	600	0	synth with cache (only 1: apply lt_INR).	2.911815	1
Coq.Reals.RIneq.pos_INR_nat_of_P	600	3.0.0	synth with cache (only 1: intros ?; only 1: apply lt_0_INR; only 1: apply Pos2Nat.is_pos).	2.982712	11
Coq.Reals.RIneq.pos_INR	600
Coq.Reals.RIneq.INR_lt	600
Coq.Reals.RIneq.le_INR	600
Coq.Reals.RIneq.INR_not_0	600	0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: rewrite H0; only 1: trivial).	2.930577	7
Coq.Reals.RIneq.not_0_INR	600
Coq.Reals.RIneq.not_INR	600
Coq.Reals.RIneq.INR_eq	600
Coq.Reals.RIneq.INR_le	600
Coq.Reals.RIneq.not_1_INR	600	0.0	synth with cache (only 1: intros ?; only 1: apply not_INR).	2.874901	2
Coq.Reals.RIneq.IZN	600	1.0	synth with cache (only 1: intros ?; only 1: apply Z_of_nat_complete).	2.889825	4
Coq.Reals.RIneq.INR_IPR	600
Coq.Reals.RIneq.INR_IZR_INZ	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct n; only 1: easy; only 1: simpl BinIntDef.Z.of_nat; only 1: unfold IZR; only 1: rewrite <- INR_IPR; only 1: rewrite SuccNat2Pos.id_succ; only 1: easy).	2.975184	8
Coq.Reals.RIneq.plus_IZR_NEG_POS	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: rewrite Z.pos_sub_spec; only 1: case Pos.compare_spec; only 1: intros ?; only 1: unfold IZR; only 1: subst; only 1: ring; only 1: intros ?; only 1: unfold IZR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_sub; only 1: rewrite minus_INR; only 1: ring; only 1: apply Nat.lt_le_incl; only 1: apply Pos2Nat.inj_lt; only 1: trivial; only 1: trivial; only 1: intros ?; only 1: unfold IZR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_sub; only 1: rewrite minus_INR; only 1: ring; only 1: apply Nat.lt_le_incl; only 1: apply Pos2Nat.inj_lt; only 1: trivial; only 1: trivial).	3.736913	95
Coq.Reals.RIneq.plus_IZR	600	0.0.0.0.0.0.0.2.0.0.2.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.1.0.0.1.1.1.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct n; only 1: intros ?; only 1: destruct m; only 1: auto with real; only 1: auto with real; only 1: auto with real; only 1: intros ?; only 1: destruct m; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_add; only 1: apply plus_INR; only 1: simpl; only 1: rewrite Z.pos_sub_spec; only 1: case Pos.compare_spec; only 1: intros ?; only 1: unfold IZR; only 1: subst; only 1: ring; only 1: intros ?; only 1: unfold IZR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_sub; only 1: rewrite minus_INR; only 1: ring; only 1: apply Nat.lt_le_incl; only 1: apply Pos2Nat.inj_lt; only 1: trivial; only 1: trivial; only 1: intros ?; only 1: unfold IZR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_sub; only 1: rewrite minus_INR; only 1: ring; only 1: apply Nat.lt_le_incl; only 1: apply Pos2Nat.inj_lt; only 1: trivial; only 1: trivial; only 1: intros ?; only 1: destruct m; only 1: auto with real; only 1: rewrite Z.add_comm; only 1: rewrite Rplus_comm; only 1: apply plus_IZR_NEG_POS; only 1: simpl; only 1: unfold IZR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_add; only 1: rewrite plus_INR; only 1: apply Ropp_plus_distr).	5.917313	457
Coq.Reals.RIneq.mult_IZR	600	0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: case n; only 1: case m; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: case m; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: intros ?; only 1: intros ?; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite mult_INR; only 1: ring; only 1: simpl; only 1: unfold IZR; only 1: intros ?; only 1: intros ?; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite mult_INR; only 1: ring; only 1: case m; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: intros ?; only 1: intros ?; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite mult_INR; only 1: ring; only 1: simpl; only 1: unfold IZR; only 1: intros ?; only 1: intros ?; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite mult_INR; only 1: ring).	4.745193	242
Coq.Reals.RIneq.pow_IZR	600	0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite Zpower_pos_nat; only 1: rewrite SuccNat2Pos.id_succ; only 1: unfold Zpower_nat; only 1: simpl; only 1: rewrite mult_IZR; only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite mult_IZR; only 1: ring [ IHn ]).	2.845808	39
Coq.Reals.RIneq.succ_IZR	600	0.0.0	synth with cache (only 1: intros ?; only 1: unfold BinIntDef.Z.succ; only 1: apply plus_IZR).	2.477754	3
Coq.Reals.RIneq.opp_IZR	600	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct n; only 1: unfold IZR; only 1: simpl; only 1: auto with real; only 1: unfold IZR; only 1: simpl; only 1: auto with real; only 1: unfold IZR; only 1: simpl; only 1: auto with real).	2.708188	19
Coq.Reals.RIneq.minus_IZR	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold BinIntDef.Z.sub; only 1: unfold Rminus; only 1: rewrite <- opp_IZR; only 1: apply plus_IZR).	2.491372	5
Coq.Reals.RIneq.Z_R_minus	600	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Rminus; only 1: unfold BinIntDef.Z.sub; only 1: rewrite <- Ropp_Ropp_IZR; only 1: symmetry; only 1: apply plus_IZR).	2.470537	7
Coq.Reals.RIneq.lt_0_IZR	600
Coq.Reals.RIneq.lt_IZR	600
Coq.Reals.RIneq.eq_IZR_R0	600
Coq.Reals.RIneq.eq_IZR	600
Coq.Reals.RIneq.not_0_IZR	600	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: red; only 1: intros ?; only 1: case H; only 1: apply eq_IZR; only 1: auto).	2.491327	7
Coq.Reals.RIneq.le_0_IZR	600
Coq.Reals.RIneq.le_IZR	600
Coq.Reals.RIneq.le_IZR_R1	600	0.0	synth with cache (only 1: intros ?; only 1: apply le_IZR).	2.475301	2
Coq.Reals.RIneq.IZR_ge	600
Coq.Reals.RIneq.IZR_le	600
Coq.Reals.RIneq.IZR_lt	600
Coq.Reals.RIneq.IZR_neq	600	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: red; only 1: intros ?; only 1: elim H; only 1: apply eq_IZR; only 1: assumption).	2.466920	6
Coq.Reals.RIneq.one_IZR_lt1	600
Coq.Reals.RIneq.one_IZR_r_R1	600
Coq.Reals.RIneq.single_z_r_R1	600	0.0.1.0	synth with cache (only 1: intros; only 1: apply one_IZR_r_R1 with r; only 1: auto; only 1: auto).	2.499209	9
Coq.Reals.RIneq.tech_single_z_r_R1	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H1; only 1: destruct H1; only 1: destruct H2; only 1: apply H1; only 1: apply single_z_r_R1 with r; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	2.633028	22
Coq.Reals.RIneq.Rmult_le_pos	600
Coq.Reals.RIneq.Rinv_le_contravar	600	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: apply Rlt_le; only 1: apply Rinv_lt_contravar with (2 := H0); only 1: apply Rmult_lt_0_compat with (1 := H); only 1: apply Rlt_trans with x; only 1: easy; only 1: easy; only 1: rewrite H0; only 1: apply Rle_refl).	2.592258	21
Coq.Reals.RIneq.Rle_Rinv	600	1.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H0; only 1: apply Rinv_le_contravar with (1 := H)).	2.555708	9
Coq.Reals.RIneq.Ropp_div	600	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Rdiv; only 1: ring).	2.452424	4
Coq.Reals.RIneq.double	600	0.0	synth with cache (only 1: intros ?; only 1: ring).	2.465311	2
Coq.Reals.RIneq.double_var	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- double; only 1: unfold Rdiv; only 1: rewrite <- Rmult_assoc; only 1: symmetry; only 1: apply Rinv_r_simpl_m; only 1: apply not_0_IZR; only 1: easy).	2.503674	8
Coq.Reals.RIneq.R_rm	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0	synth with cache (only 1: constructor; only 1: easy; only 1: easy; only 1: exact plus_IZR; only 1: intros; only 1: unfold BinIntDef.Z.sub; only 1: unfold Rminus; only 1: rewrite <- opp_IZR; only 1: apply plus_IZR; only 1: exact mult_IZR; only 1: intros ?; only 1: destruct x; only 1: unfold IZR; only 1: simpl; only 1: auto with real; only 1: unfold IZR; only 1: simpl; only 1: auto with real; only 1: unfold IZR; only 1: simpl; only 1: auto with real; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply f_equal; only 1: apply Zeq_bool_eq; only 1: auto).	3.885726	190
Coq.Reals.RIneq.Zeq_bool_IZR	600	0.1.0.0	synth with cache (only 1: intros ?; only 1: apply Zeq_is_eq_bool; only 1: apply eq_IZR; only 1: auto with zarith real).	2.508698	5
Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	600
Coq.Reals.RIneq.le_epsilon	600
Coq.Reals.RIneq.completeness_weak	600
Coq.Reals.RIneq.Rdiv_lt_0_compat	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: apply Rinv_0_lt_compat; only 1: assumption).	2.467000	5
Coq.Reals.RIneq.Rdiv_plus_distr	600	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Rmult_plus_distr_r).	2.466184	4
Coq.Reals.RIneq.Rdiv_minus_distr	600	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rminus; only 1: unfold Rdiv; only 1: rewrite Rmult_plus_distr_r; only 1: ring).	2.497411	7
Coq.Reals.RIneq.Req_EM_T	600
Coq.setoid_ring.RealField.RTheory	600
Coq.setoid_ring.RealField.Rfield	600	1.0.1.1.0	synth with cache (only 1: constructor; only 1: exact RTheory; only 1: exact R1_neq_R0; only 1: reflexivity; only 1: exact Rinv_l).	4.303358	79
Coq.setoid_ring.RealField.Rlt_n_Sn	600
Coq.setoid_ring.RealField.Rlt_0_2	600
Coq.setoid_ring.RealField.Rgen_phiPOS	600
Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	600
Coq.setoid_ring.RealField.Rdef_pow_add	600
Coq.setoid_ring.RealField.R_power_theory	600
Coq.Reals.Raxioms.Rrepr_0	600	0.0.0.1	synth with cache (only 1: unfold IZR; only 1: rewrite R0_def; only 1: rewrite Rquot2; only 1: reflexivity).	3.838966	5
Coq.Reals.Raxioms.Rrepr_1	600	1.0.0.0.1	synth with cache (only 1: unfold IZR; only 1: unfold IPR; only 1: rewrite R1_def; only 1: rewrite Rquot2; only 1: reflexivity).	4.029378	17
Coq.Reals.Raxioms.Rrepr_plus	600	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rplus_def; only 1: rewrite Rquot2; only 1: reflexivity).	3.844617	4
Coq.Reals.Raxioms.Rrepr_opp	600	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Ropp_def; only 1: rewrite Rquot2; only 1: reflexivity).	3.898018	4
Coq.Reals.Raxioms.Rrepr_minus	600	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rminus; only 1: unfold CReal_minus; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_opp; only 1: reflexivity).	3.865973	6
Coq.Reals.Raxioms.Rrepr_mult	600	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rmult_def; only 1: rewrite Rquot2; only 1: reflexivity).	3.978894	4
Coq.Reals.Raxioms.Rrepr_inv	600
Coq.Reals.Raxioms.Rrepr_le	600
Coq.Reals.Raxioms.Rrepr_appart	600
Coq.Reals.Raxioms.Rappart_repr	600
Coq.Reals.Raxioms.Rplus_comm	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_plus; only 1: apply CReal_plus_comm).	3.917551	5
Coq.Reals.Raxioms.Rplus_assoc	600	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_plus; only 1: apply CReal_plus_assoc).	3.917649	7
Coq.Reals.Raxioms.Rplus_opp_r	600	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_opp; only 1: rewrite Rrepr_0; only 1: apply CReal_plus_opp_r).	3.923989	6
Coq.Reals.Raxioms.Rplus_0_l	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_0; only 1: apply CReal_plus_0_l).	3.458674	5
Coq.Reals.Raxioms.Rmult_comm	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_mult; only 1: apply CReal_mult_comm).	3.538860	5
Coq.Reals.Raxioms.Rmult_assoc	600	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_mult; only 1: apply CReal_mult_assoc).	3.576982	7
Coq.Reals.Raxioms.Rinv_l	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite RinvImpl.Rinv_def; only 1: destruct Req_appart_dec; only 1: contradiction; only 1: apply Rquot1; only 1: rewrite Rrepr_mult; only 1: rewrite Rquot2; only 1: rewrite Rrepr_1; only 1: apply CReal_inv_l).	3.591633	17
Coq.Reals.Raxioms.Rmult_1_l	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_1; only 1: apply CReal_mult_1_l).	3.533619	5
Coq.Reals.Raxioms.R1_neq_R0	600
Coq.Reals.Raxioms.Rmult_plus_distr_l	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_mult; only 1: apply CReal_mult_plus_distr_l).	3.598223	8
Coq.Reals.Raxioms.Rlt_asym	600
Coq.Reals.Raxioms.Rlt_trans	600
Coq.Reals.Raxioms.Rplus_lt_compat_l	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rlt_def in H; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_plus; only 1: apply CRealLtForget; only 1: apply CReal_plus_lt_compat_l; only 1: apply CRealLtEpsilon; only 1: exact H).	3.756817	17
Coq.Reals.Raxioms.Rmult_lt_compat_l	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rlt_def in H; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_mult; only 1: apply CRealLtForget; only 1: apply CReal_mult_lt_compat_l; only 1: rewrite <- Rquot2; only 1: unfold IZR in H; only 1: rewrite R0_def in H; only 1: apply CRealLtEpsilon; only 1: exact H; only 1: rewrite Rlt_def in H0; only 1: apply CRealLtEpsilon; only 1: exact H0).	3.757633	23
Coq.Reals.Raxioms.Rrepr_INR	600
Coq.Reals.Raxioms.Rrepr_IPR2	600
Coq.Reals.Raxioms.Rrepr_IPR	600
Coq.Reals.Raxioms.Rrepr_IZR	600
Coq.Reals.Raxioms.archimed	600
Coq.Reals.Raxioms.completeness	600
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_dec	600
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_epsilon	600
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_not_epsilon	600
Coq.Reals.ConstructiveRealsLUB.DDlow_below_up	600
Coq.Reals.ConstructiveRealsLUB.DDcut_limit_fix	600
Coq.Reals.ConstructiveRealsLUB.DDcut_limit	600
Coq.Reals.ConstructiveRealsLUB.glb_dec_Q	600
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_glb	600
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_closed	600
Coq.Reals.ConstructiveRealsLUB.sig_lub	600
Coq.Reals.ConstructiveRealsLUB.CR_sig_lub	600
Coq.Reals.Rdefinitions.total_order_T	600
Coq.Reals.Rdefinitions.Req_appart_dec	600
Coq.Reals.Rdefinitions.Rrepr_appart_0	600	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply CRealLtDisjunctEpsilon; only 1: destruct H; only 1: left; only 1: rewrite Rlt_def in H; only 1: rewrite R0_def in H; only 1: rewrite Rquot2 in H; only 1: exact H; only 1: right; only 1: rewrite Rlt_def in H; only 1: rewrite R0_def in H; only 1: rewrite Rquot2 in H; only 1: exact H).	4.034422	21
Coq.Reals.Rdefinitions.up	600
Coq.setoid_ring.Rings_Z.Zcri	600	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).	3.052076	2
Coq.setoid_ring.Rings_Z.Z_one_zero	600	0	synth with cache (only 1: auto with *).	3.057077	1
Coq.setoid_ring.Rings_Z.Zdi	600	0.0.0	synth with cache (only 1: constructor; only 1: exact Zmult_integral; only 1: exact Z_one_zero).	3.046636	3
Coq.setoid_ring.Rings_Q.Qri	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: apply Q_Setoid; only 1: apply Qplus_comp; only 1: apply Qmult_comp; only 1: apply Qminus_comp; only 1: apply Qopp_comp; only 1: exact Qplus_0_l; only 1: exact Qplus_comm; only 1: apply Qplus_assoc; only 1: exact Qmult_1_l; only 1: exact Qmult_1_r; only 1: apply Qmult_assoc; only 1: apply Qmult_plus_distr_l; only 1: intros; only 1: apply Qmult_plus_distr_r; only 1: reflexivity; only 1: exact Qplus_opp_r).	4.070936	41
Coq.setoid_ring.Rings_Q.Qcri	600	0.0	synth with cache (only 1: red; only 1: exact Qmult_comm).	3.711513	2
Coq.setoid_ring.Rings_Q.Q_one_zero	600	0.0	synth with cache (only 1: unfold Qeq; only 1: auto with qarith).	3.622532	2
Coq.setoid_ring.Rings_Q.Qdi	600	0.0.0	synth with cache (only 1: constructor; only 1: exact Qmult_integral; only 1: exact Q_one_zero).	3.677577	3
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_increasing_inv	600
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_unique	600
Coq.Reals.ConstructiveRealsMorphisms.Endomorph_id	600
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_proper	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: apply CRmorph_increasing_inv in H0; only 1: destruct H; only 1: contradiction; only 1: intros ?; only 1: apply CRmorph_increasing_inv in H0; only 1: destruct H; only 1: contradiction).	3.628902	17
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_compose	600
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le	600	0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: apply CRmorph_increasing_inv in H0; only 1: contradiction).	3.543533	4
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le_inv	600
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_zero	600
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_one	600
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_opp	600
Coq.Reals.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	600
Coq.Reals.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	600
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus_rat	600
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus	600
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos	600
Coq.Reals.ConstructiveRealsMorphisms.NatOfZ	600
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_int	600
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_inv	600
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_rat	600
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	600
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	600
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult	600
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct app; only 1: left; only 1: apply CRmorph_increasing; only 1: exact c; only 1: right; only 1: apply CRmorph_increasing; only 1: exact c).	3.345227	8
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart_zero	600
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_inv	600
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph	600
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_rat	600
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Ql	600
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Qr	600
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing	600
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphism	600
Coq.Reals.ConstructiveRealsMorphisms.RightBound	600
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv	600
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_rat	600
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing_Qr	600
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing	600
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphismInv	600
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_surject	600
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inject	600
Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply and_hprop; only 1: apply forall_hprop; only 1: intros ?; only 1: apply forall_hprop; only 1: intros ?; only 1: apply impl_hprop; only 1: apply impl_hprop; only 1: intros ?; only 1: intros ?; only 1: apply eq_proofs_unicity_on; only 1: intros ?; only 1: destruct f; only 1: destruct y; only 1: left; only 1: reflexivity; only 1: right; only 1: discriminate; only 1: destruct y; only 1: right; only 1: discriminate; only 1: left; only 1: reflexivity; only 1: apply and_hprop; only 1: apply not_hprop; only 1: apply and_hprop; only 1: apply not_hprop; only 1: apply forall_hprop; only 1: intros ?; only 1: apply impl_hprop; only 1: apply not_hprop).	3.928072	55
Coq.Reals.ClassicalDedekindReals.lowerCutBelow	600
Coq.Reals.ClassicalDedekindReals.lowerCutAbove	600
Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	600
Coq.Reals.ClassicalDedekindReals.DRealQlim	600
Coq.Reals.ClassicalDedekindReals.DRealAbstr	600
Coq.Reals.ClassicalDedekindReals.UpperAboveLower	600
Coq.Reals.ClassicalDedekindReals.DRealRepr	600
Coq.Reals.ClassicalDedekindReals.Rle_antisym	600
Coq.Reals.ClassicalDedekindReals.lowerUpper	600
Coq.Reals.ClassicalDedekindReals.DRealOpen	600
Coq.Reals.ClassicalDedekindReals.DRealReprQ	600
Coq.Reals.ClassicalDedekindReals.DRealReprQup	600
Coq.Reals.ClassicalDedekindReals.DRealQuot1	600
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	600	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct x; only 1: unfold DRealAbstr in H; only 1: unfold proj1_sig in H; only 1: destruct sig_forall_dec; only 1: discriminate; only 1: apply q1).	2.870739	7
Coq.Reals.ClassicalDedekindReals.DRealQuot2	600
Coq.setoid_ring.Integral_domain.integral_domain.integral_domain_minus_one_zero	600
Coq.setoid_ring.Integral_domain.integral_domain.pow_not_zero	600
Coq.setoid_ring.Integral_domain.integral_domain.Rintegral_domain_pow	600
Coq.Reals.ConstructiveRcomplete.CReal_absSmall	600
Coq.Reals.ConstructiveRcomplete.Un_cv_mod_eq	600
Coq.Reals.ConstructiveRcomplete.Rfloor	600
Coq.Reals.ConstructiveRcomplete.FQ_dense	600
Coq.Reals.ConstructiveRcomplete.RQ_limit	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply FQ_dense; only 1: rewrite <- CReal_plus_0_r; only 1: rewrite CReal_plus_assoc; only 1: apply CReal_plus_lt_compat_l; only 1: rewrite CReal_plus_0_l; only 1: apply inject_Q_lt; only 1: reflexivity).	2.852018	17
Coq.Reals.ConstructiveRcomplete.Rdiag_cauchy_sequence	600
Coq.Reals.ConstructiveRcomplete.doubleLeCovariant	600	0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: rewrite <- H; only 1: rewrite <- H0; only 1: apply H2; only 1: rewrite <- H0; only 1: rewrite <- H1; only 1: apply H2).	2.430052	7
Coq.Reals.ConstructiveRcomplete.CReal_cv_self	600
Coq.Reals.ConstructiveRcomplete.Un_cv_extens	600
Coq.Reals.ConstructiveRcomplete.R_has_all_rational_limits	600
Coq.Reals.ConstructiveRcomplete.Rcauchy_complete	600
Coq.Reals.ConstructiveRcomplete.CRealImplem	600
Coq.setoid_ring.Cring.cring.cring_eq_ext	600
Coq.setoid_ring.Cring.cring.cring_almost_ring_theory	600
Coq.setoid_ring.Cring.cring.cring_morph	600
Coq.setoid_ring.Cring.cring.cring_power_theory	600
Coq.setoid_ring.Cring.cring.cring_div_theory	600
Coq.setoid_ring.Cring.Zcri	600	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).	2.408434	2
Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	600
Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: constructor; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0).	12.964769	924
Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	600
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold eqb31; only 1: intros ?; only 1: intros ?; only 1: rewrite spec_compare; only 1: split; only 1: case Z.compare_spec; only 1: intuition; only 1: apply Int31_canonic; only 1: auto; only 1: easy; only 1: easy; only 1: intros ?; only 1: intropattern subst -> H; only 1: rewrite Z.compare_refl; only 1: easy).	4.744018	23
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	600	0	synth with cache (only 1: apply eqb31_eq).	4.457955	1
Coq.Numbers.Cyclic.Int31.Ring31.TestRing.test	600
Coq.Floats.FloatAxioms.Prim2SF_inj	600	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- SF2Prim_Prim2SF; only 1: symmetry; only 1: rewrite <- SF2Prim_Prim2SF; only 1: rewrite H; only 1: easy).	4.347315	6
Coq.Floats.FloatAxioms.SF2Prim_inj	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Prim2SF_SF2Prim; only 1: symmetry; only 1: rewrite <- Prim2SF_SF2Prim; only 1: rewrite H; only 1: reflexivity; only 1: assumption; only 1: assumption).	4.304779	8
Coq.setoid_ring.Ncring_tac.Zeqb_ok	600
Coq.setoid_ring.Ncring_tac.comm	600
Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: constructor; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0).	13.027482	924
Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	600
Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	600	0	synth with cache (only 1: apply eqb_spec).	4.407396	1
Coq.Numbers.Cyclic.Int63.Ring63.TestRing.test	600
Coq.Reals.ConstructiveCauchyRealsMult.BoundFromZero	600
Coq.Reals.ConstructiveCauchyRealsMult.QCauchySeq_bounded	600
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_cauchy	600
Coq.Reals.ConstructiveCauchyRealsMult.linear_max	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite max_l; only 1: rewrite Pos2Nat.inj_mul; only 1: apply Nat.mul_le_mono_nonneg; only 1: apply Nat.le_0_l; only 1: apply Nat.le_refl; only 1: apply Nat.le_0_l; only 1: apply H; only 1: apply Nat.le_refl).	3.716469	17
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult	600
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_unfold	600
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc_bounded_r	600
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc	600
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_comm	600
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_proper_l	600
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat	600
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	600
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	600
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_l	600
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRingExt	600
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRing	600
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	600	0	synth with cache (only 1: apply CReal_isRingExt).	3.163364	1
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_T	600	0	synth with cache (only 1: apply CReal_isRingExt).	3.232979	1
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	600
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_T	600	0	synth with cache (only 1: apply CReal_isRingExt).	3.592160	1
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold CReal_minus; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity).	2.905110	5
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_T	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold CReal_minus; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity).	2.921043	19
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_l	600	0.0	synth with cache (only 1: intros ?; only 1: ring).	2.790276	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_r	600	0.0	synth with cache (only 1: intros ?; only 1: ring).	2.764297	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_r	600	0.0	synth with cache (only 1: intros ?; only 1: ring).	2.790920	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	600	0.0	synth with cache (only 1: intros; only 1: ring).	2.789121	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	600	0.0	synth with cache (only 1: intros; only 1: ring).	2.826631	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	600
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	600
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	600
Coq.Reals.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	600
Coq.Reals.ConstructiveCauchyRealsMult.CRealArchimedean	600
Coq.Reals.ConstructiveCauchyRealsMult.Rup_pos	600
Coq.Reals.ConstructiveCauchyRealsMult.CRealLtDisjunctEpsilon	600
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftReal	600
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftEqual	600
Coq.Reals.ConstructiveCauchyRealsMult.CRealNegShift	600
Coq.Reals.ConstructiveCauchyRealsMult.CRealPosShift	600
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_neg	600
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_pos	600
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv	600
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	600
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift	600
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift_eq	600
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_l	600
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_r	600	0.1.0.0	synth with cache (only 1: intros; only 1: rewrite CReal_mult_comm; only 1: rewrite CReal_inv_l; only 1: reflexivity).	2.436902	10
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_1	600	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- CReal_mult_1_l; only 1: rewrite CReal_inv_r; only 1: reflexivity).	2.350435	4
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	600
Coq.Reals.ConstructiveCauchyRealsMult.Rinv_eq_compat	600
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	600
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	600
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	600
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	600	0.1.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	2.365313	6
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	600	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	2.300457	3
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	600
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: apply CReal_mult_lt_reg_l in H1; only 1: contradiction; only 1: apply H).	2.354066	5
Coq.Reals.ConstructiveCauchyRealsMult.CReal_invQ	600
Coq.Reals.ConstructiveCauchyRealsMult.CRealQ_dense	600
Coq.Reals.ConstructiveCauchyRealsMult.inject_Q_mult	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: destruct H; only 1: simpl in q0; only 1: destruct QCauchySeq_bounded; only 1: destruct QCauchySeq_bounded; only 1: simpl in q0; only 1: ring_simplify in q0; only 1: discriminate q0; only 1: intros ?; only 1: destruct H; only 1: simpl in q0; only 1: destruct QCauchySeq_bounded; only 1: destruct QCauchySeq_bounded; only 1: simpl in q0; only 1: ring_simplify in q0; only 1: discriminate q0).	3.080439	41
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_eq0	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_not_eq0	600	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H0 in H; only 1: simpl in *; only 1: discriminate).	4.127100	6
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakl_shiftr	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakr_shiftl	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_zero	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_or_twice_plus_one	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S_tail	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_n_0	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_size	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_above_size	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S_tail	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_n_0	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_size	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_above_size	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstr_firstl	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstl_firstr	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_predsize_0_firstl	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_propagates	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_firstl	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_sneakl	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_twice	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_eqn	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_converges	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_eqn	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_aux_equiv	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_equiv	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incrbis_aux_equiv	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn1	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn2	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice_plus_one_firstl	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phibis_aux_equiv	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn1	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn2	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_firstl	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_plus_one_firstl	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_pos	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_bounded	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_nonneg	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_bounded	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_lowerbound	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_lowerbound	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_zero	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_size	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_le	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_firstr	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_length	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.l2i_i2l	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakr	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakl	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_l2i	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_nshiftl	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_i2l	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice_plus_one	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_shiftr	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incrbis	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incr	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_twice_plus_one	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_firstr	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_inv	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double_plus_one	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_incr	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi_aux	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_bounded	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_spec	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_positive_p2ibis	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_positive	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_firstl	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_plus_one_firstl	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2i_p2ibis	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_phi_inv_positive	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_spec	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice_plus_one	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_incr	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_negative	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.wB_pos	600	0	synth with cache (only 1: auto with zarith).	3.787023	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_zdigits	600	0	synth with cache (only 1: reflexivity).	3.737835	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_more_than_1_digit	600	0	synth with cache (only 1: reflexivity).	3.713086	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_0	600	0	synth with cache (only 1: reflexivity).	3.755491	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_1	600	0	synth with cache (only 1: reflexivity).	3.749235	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_m1	600	0	synth with cache (only 1: reflexivity).	3.678292	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_compare	600	0	synth with cache (only 1: reflexivity).	3.769959	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_c	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ_c	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry_c	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add	600	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	3.190395	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry	600	0.0.0.0.0	synth with cache (only 1: unfold add31; only 1: intros; only 1: rewrite phi_phi_inv; only 1: rewrite phi_phi_inv; only 1: apply Zplus_mod_idemp_l).	3.260082	5
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_c	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry_c	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub	600	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	2.857525	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry	600	0.0.0.0.0	synth with cache (only 1: unfold sub31; only 1: intros; only 1: rewrite phi_phi_inv; only 1: rewrite phi_phi_inv; only 1: apply Zminus_mod_idemp_l).	2.868304	5
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_c	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp	600	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	2.804016	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_carry	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred_c	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi2_phi_inv2	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul_c	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul	600	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	2.834810	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_square_c	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div21	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mod	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_gcd	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_gcd	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter_int31_iter_nat	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.addmuldiv31_equiv	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_mul_div	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.shift_unshift_mod_2	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pos_mod	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head00	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.head031_equiv	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_nz	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head0	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail00	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.tail031_equiv	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail0	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.quotient_by_2	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main_trick	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_init	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_true	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_false	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_def	600	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold sqrt31_step; only 1: case div31; only 1: intros; only 1: simpl; only 1: case compare31; only 1: auto; only 1: auto; only 1: auto).	2.857800	8
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div31_phi	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_correct	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter31_sqrt_correct	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_def	600	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold sqrt312_step; only 1: case div3121; only 1: intros; only 1: simpl; only 1: case compare31; only 1: auto; only 1: auto; only 1: auto).	2.924803	8
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_lower_bound	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div312_phi	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_correct	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter312_sqrt_correct	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt2	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_eq0	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_is_even	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.log2_phi_bounded	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lor	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_land	600
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lxor	600
Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite is_zero_spec; only 1: intros ?; only 1: rewrite H; only 1: trivial).	4.499771	5
Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	600
Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	600
Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	600
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	600
Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	600
Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	600
Coq.Numbers.Cyclic.Int63.Cyclic63.P	600	0	synth with cache (only 1: tauto).	4.173753	1
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	600
Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	600
Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_non_negative	600
Coq.FSets.FMapFullAVL.AvlProofs.Elt.avl_node	600
Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_0	600
Coq.FSets.FMapFullAVL.AvlProofs.Elt.empty_avl	600
Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_avl	600
Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_height	600
Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_avl	600
Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_1	600
Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_2	600
Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl_1	600
Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl	600
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl_1	600
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl	600
Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl_1	600
Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl	600
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl_1	600
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl	600
Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl_1	600
Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl	600
Coq.FSets.FMapFullAVL.AvlProofs.Elt.concat_avl	600
Coq.FSets.FMapFullAVL.AvlProofs.Elt.split_avl	600
Coq.FSets.FMapFullAVL.AvlProofs.Map.map_height	600
Coq.FSets.FMapFullAVL.AvlProofs.Map.map_avl	600
Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_height	600
Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_avl	600
Coq.FSets.FMapFullAVL.AvlProofs.Map_option.map_option_avl	600
Coq.FSets.FMapFullAVL.AvlProofs.Map2_opt.map2_opt_avl	600
Coq.FSets.FMapFullAVL.AvlProofs.Map2.map2_avl	600
Coq.FSets.FMapFullAVL.IntMake.Elt.MapsTo_1	600
Coq.FSets.FMapFullAVL.IntMake.Elt.mem_1	600
Coq.FSets.FMapFullAVL.IntMake.Elt.mem_2	600
Coq.FSets.FMapFullAVL.IntMake.Elt.empty_1	600
Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_1	600
Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_2	600
Coq.FSets.FMapFullAVL.IntMake.Elt.add_1	600
Coq.FSets.FMapFullAVL.IntMake.Elt.add_2	600
Coq.FSets.FMapFullAVL.IntMake.Elt.add_3	600
Coq.FSets.FMapFullAVL.IntMake.Elt.remove_1	600
Coq.FSets.FMapFullAVL.IntMake.Elt.remove_2	600
Coq.FSets.FMapFullAVL.IntMake.Elt.remove_3	600
Coq.FSets.FMapFullAVL.IntMake.Elt.find_1	600
Coq.FSets.FMapFullAVL.IntMake.Elt.find_2	600
Coq.FSets.FMapFullAVL.IntMake.Elt.fold_1	600
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_1	600
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_2	600
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3	600
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3w	600
Coq.FSets.FMapFullAVL.IntMake.Elt.cardinal_1	600
Coq.FSets.FMapFullAVL.IntMake.Elt.Equivb_Equivb	600
Coq.FSets.FMapFullAVL.IntMake.Elt.equal_1	600
Coq.FSets.FMapFullAVL.IntMake.Elt.equal_2	600
Coq.FSets.FMapFullAVL.IntMake.map_1	600
Coq.FSets.FMapFullAVL.IntMake.map_2	600
Coq.FSets.FMapFullAVL.IntMake.mapi_1	600
Coq.FSets.FMapFullAVL.IntMake.mapi_2	600
Coq.FSets.FMapFullAVL.IntMake.map2_1	600
Coq.FSets.FMapFullAVL.IntMake.map2_2	600
Coq.FSets.FMapFullAVL.IntMake_ord.cons_cardinal_e	600
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_tcc	600
Coq.FSets.FMapFullAVL.IntMake_ord.cons_Cmp	600
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_Cmp	600
Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	600
Coq.FSets.FMapFullAVL.IntMake_ord.compare	600
Coq.FSets.FMapFullAVL.IntMake_ord.eq_seq	600
Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	600
Coq.FSets.FMapFullAVL.IntMake_ord.eq_1	600
Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	600
Coq.FSets.FMapFullAVL.IntMake_ord.eq_refl	600
Coq.FSets.FMapFullAVL.IntMake_ord.eq_sym	600
Coq.FSets.FMapFullAVL.IntMake_ord.eq_trans	600
Coq.FSets.FMapFullAVL.IntMake_ord.lt_trans	600
Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	600
Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	600
Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	600	0	synth with cache (only 1: apply to_Z_rec_bounded).	4.027024	1
Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	600	0.0	synth with cache (only 1: apply Z.div_lt_upper_bound; only 1: Z.order').	4.049583	2
Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	600
Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	600
Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	600	0.0.0	synth with cache (only 1: intros ?; only 1: apply Z.lt_gt; only 1: Z.order_pos).	4.540245	3
Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	600	0.0	synth with cache (only 1: intros ?; only 1: Z.order_nz).	4.450124	2
Coq.Numbers.Cyclic.Int63.Int63.wB_diff_0	600
Coq.Numbers.Cyclic.Int63.Int63.wB_pos	600	0	synth with cache (only 1: reflexivity).	4.491776	1
Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	600	0	synth with cache (only 1: reflexivity).	4.416449	1
Coq.Numbers.Cyclic.Int63.Int63.to_Z_1	600	0	synth with cache (only 1: reflexivity).	4.410571	1
Coq.Numbers.Cyclic.Int63.Int63.can_inj	600
Coq.Numbers.Cyclic.Int63.Int63.to_Z_inj	600
Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	600	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: rewrite eqb_refl; only 1: trivial).	4.519978	6
Coq.Numbers.Cyclic.Int63.Int63.eqb_spec	600	0.0.0.0.0.0	synth with cache (only 1: split; only 1: auto using eqb_correct, eqb_complete; only 1: intros ?; only 1: rewrite H; only 1: rewrite eqb_refl; only 1: trivial).	4.501809	6
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_spec	600	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- not_true_iff_false; only 1: rewrite eqb_spec; only 1: split; only 1: trivial; only 1: trivial).	4.513155	6
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	600	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite eqb_false_spec; only 1: trivial).	4.385106	4
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_correct	600	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite eqb_false_spec; only 1: trivial).	4.520882	4
Coq.Numbers.Cyclic.Int63.Int63.eq_dec	600
Coq.Numbers.Cyclic.Int63.Int63.cast_refl	600
Coq.Numbers.Cyclic.Int63.Int63.cast_diff	600
Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	600
Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	600
Coq.Numbers.Cyclic.Int63.Int63.eqbP	600	0.1.0.0.0	synth with cache (only 1: apply iff_reflect; only 1: rewrite eqb_spec; only 1: split; only 1: apply to_Z_inj; only 1: apply f_equal).	4.484198	6
Coq.Numbers.Cyclic.Int63.Int63.ltbP	600	0.0.0	synth with cache (only 1: apply iff_reflect; only 1: symmetry; only 1: apply ltb_spec).	4.521796	3
Coq.Numbers.Cyclic.Int63.Int63.lebP	600	0.0.0	synth with cache (only 1: apply iff_reflect; only 1: symmetry; only 1: apply leb_spec).	4.474286	3
Coq.Numbers.Cyclic.Int63.Int63.compare_spec	600	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite compare_def_spec; only 1: unfold compare_def; only 1: case ltbP; only 1: auto using Z.compare_lt_iff; only 1: intros ?; only 1: case eqbP; only 1: symmetry; only 1: apply Z.compare_eq_iff; only 1: easy; only 1: intros ?; only 1: symmetry; only 1: apply Z.compare_gt_iff; only 1: lia).	4.614479	21
Coq.Numbers.Cyclic.Int63.Int63.is_zero_spec	600	0	synth with cache (only 1: apply eqb_spec).	4.445317	1
Coq.Numbers.Cyclic.Int63.Int63.diveucl_spec	600	0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite diveucl_def_spec; only 1: unfold diveucl_def; only 1: rewrite div_spec; only 1: rewrite mod_spec; only 1: unfold BinIntDef.Z.div; only 1: unfold BinIntDef.Z.modulo; only 1: destruct BinIntDef.Z.div_eucl; only 1: trivial).	4.580925	8
Coq.Numbers.Cyclic.Int63.Int63.addc_spec	600
Coq.Numbers.Cyclic.Int63.Int63.succ_spec	600	0	synth with cache (only 1: apply add_spec).	4.396572	1
Coq.Numbers.Cyclic.Int63.Int63.succc_spec	600	0	synth with cache (only 1: apply addc_spec).	4.464665	1
Coq.Numbers.Cyclic.Int63.Int63.addcarry_spec	600	0.0.0.0.0	synth with cache (only 1: unfold addcarry; only 1: rewrite add_spec; only 1: rewrite add_spec; only 1: rewrite Zplus_mod_idemp_l; only 1: trivial).	4.457873	5
Coq.Numbers.Cyclic.Int63.Int63.addcarryc_spec	600
Coq.Numbers.Cyclic.Int63.Int63.subc_spec	600
Coq.Numbers.Cyclic.Int63.Int63.pred_spec	600	0	synth with cache (only 1: apply sub_spec).	4.530239	1
Coq.Numbers.Cyclic.Int63.Int63.predc_spec	600	0	synth with cache (only 1: apply subc_spec).	4.406955	1
Coq.Numbers.Cyclic.Int63.Int63.oppc_spec	600	0.0.0.0	synth with cache (only 1: unfold oppc; only 1: rewrite subc_spec; only 1: rewrite to_Z_0; only 1: trivial).	4.531259	4
Coq.Numbers.Cyclic.Int63.Int63.opp_spec	600	0.0.0.0	synth with cache (only 1: unfold opp; only 1: rewrite sub_spec; only 1: rewrite to_Z_0; only 1: trivial).	4.496621	4
Coq.Numbers.Cyclic.Int63.Int63.oppcarry_spec	600
Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	600	0.0.0.0.0	synth with cache (only 1: unfold subcarry; only 1: rewrite sub_spec; only 1: rewrite sub_spec; only 1: rewrite Zminus_mod_idemp_l; only 1: trivial).	4.523982	5
Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	600
Coq.Numbers.Cyclic.Int63.Int63.to_Z_gcd	600
Coq.Numbers.Cyclic.Int63.Int63.gcd_spec	600
Coq.Numbers.Cyclic.Int63.Int63.head00_spec	600
Coq.Numbers.Cyclic.Int63.Int63.tail00_spec	600
Coq.Numbers.Cyclic.Int63.Int63.eqm_mod	600
Coq.Numbers.Cyclic.Int63.Int63.eqm_sub	600	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold eqm; only 1: rewrite Zminus_mod; only 1: rewrite H; only 1: rewrite Z.sub_diag; only 1: reflexivity).	4.340251	6
Coq.Numbers.Cyclic.Int63.Int63.eqmE	600
Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	600
Coq.Numbers.Cyclic.Int63.Int63.int_eqm	600	0.0.0.0	synth with cache (only 1: unfold eqm; only 1: intros ?; only 1: intropattern subst -> H; only 1: reflexivity).	4.473105	4
Coq.Numbers.Cyclic.Int63.Int63.eqmI	600	0.0.1.0.0.0	synth with cache (only 1: unfold eqm; only 1: rewrite Zmod_small; only 1: rewrite Zmod_small; only 1: apply to_Z_inj; only 1: apply to_Z_bounded; only 1: apply to_Z_bounded).	4.513364	13
Coq.Numbers.Cyclic.Int63.Int63.add_assoc	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite add_spec; only 1: rewrite add_spec; only 1: rewrite add_spec; only 1: rewrite add_spec; only 1: rewrite Zplus_mod_idemp_l; only 1: rewrite Zplus_mod_idemp_r; only 1: rewrite Z.add_assoc; only 1: auto).	4.431974	17
Coq.Numbers.Cyclic.Int63.Int63.add_comm	600	0.0.0.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite add_spec; only 1: rewrite add_spec; only 1: rewrite Z.add_comm; only 1: auto).	4.507362	5
Coq.Numbers.Cyclic.Int63.Int63.add_le_r	600
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_l	600
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_r	600
Coq.Numbers.Cyclic.Int63.Int63.lsr0	600	0.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: reflexivity).	4.409110	3
Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	600	1.0.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: rewrite Zdiv_1_r; only 1: auto).	4.529344	5
Coq.Numbers.Cyclic.Int63.Int63.lsr_1	600
Coq.Numbers.Cyclic.Int63.Int63.lsr_add	600
Coq.Numbers.Cyclic.Int63.Int63.lsl0	600
Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	600	0.0.0.0.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite lsl_spec; only 1: rewrite to_Z_0; only 1: rewrite Z.mul_1_r; only 1: apply Zmod_small; only 1: apply to_Z_bounded).	4.078481	6
Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	600
Coq.Numbers.Cyclic.Int63.Int63.lsr_M_r	600
Coq.Numbers.Cyclic.Int63.Int63.bit_0_spec	600
Coq.Numbers.Cyclic.Int63.Int63.bit_split	600
Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	600	0.0.0.0.0	synth with cache (only 1: unfold bit; only 1: rewrite lsr_add; only 1: case Int63.leb; only 1: auto; only 1: auto).	4.120646	5
Coq.Numbers.Cyclic.Int63.Int63.bit_b2i	600	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: case b; only 1: unfold bit; only 1: simpl b2i; only 1: rewrite lsr_1; only 1: case Int63.eqb; only 1: auto; only 1: auto; only 1: unfold bit; only 1: simpl b2i; only 1: rewrite lsr0; only 1: rewrite lsl0; only 1: rewrite andb_false_r; only 1: auto).	4.124602	21
Coq.Numbers.Cyclic.Int63.Int63.bit_1	600	0.0.0.0.0.0.0	synth with cache (only 1: unfold bit; only 1: rewrite lsr_1; only 1: case Int63.eqb; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	4.041626	7
Coq.Numbers.Cyclic.Int63.Int63.to_Z_split	600
Coq.Numbers.Cyclic.Int63.Int63.bit_M	600	0.0.0.0	synth with cache (only 1: unfold bit; only 1: rewrite lsr_M_r; only 1: auto; only 1: auto).	3.975685	4
Coq.Numbers.Cyclic.Int63.Int63.bit_half	600
Coq.Numbers.Cyclic.Int63.Int63.bit_ext	600
Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	600
Coq.Numbers.Cyclic.Int63.Int63.lor_lsr	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite lor_spec; only 1: rewrite bit_lsr; only 1: rewrite bit_lsr; only 1: rewrite bit_lsr; only 1: rewrite lor_spec; only 1: case Int63.leb; only 1: auto; only 1: auto).	3.643169	18
Coq.Numbers.Cyclic.Int63.Int63.lor_le	600
Coq.Numbers.Cyclic.Int63.Int63.bit_0	600	0.0.0	synth with cache (only 1: unfold bit; only 1: rewrite lsr0; only 1: auto).	3.387213	3
Coq.Numbers.Cyclic.Int63.Int63.bit_add_or	600
Coq.Numbers.Cyclic.Int63.Int63.addmuldiv_spec	600
Coq.Numbers.Cyclic.Int63.Int63.is_even_bit	600
Coq.Numbers.Cyclic.Int63.Int63.is_even_spec	600
Coq.Numbers.Cyclic.Int63.Int63.is_even_0	600	0	synth with cache (only 1: apply @eq_refl).	2.613334	1
Coq.Numbers.Cyclic.Int63.Int63.is_even_lsl_1	600	0.0.0	synth with cache (only 1: rewrite is_even_bit; only 1: rewrite bit_lsl; only 1: auto).	2.680081	3
Coq.Numbers.Cyclic.Int63.Int63.quotient_by_2	600
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main_trick	600
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main	600
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_false	600
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	600
Coq.Numbers.Cyclic.Int63.Int63.sqrt_step_correct	600
Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	600
Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	600
Coq.Numbers.Cyclic.Int63.Int63.sqrt_spec	600
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_def	600	0.0.0.0.0.0.0	synth with cache (only 1: unfold sqrt2_step; only 1: case diveucl_21; only 1: intros; only 1: simpl; only 1: case addc; only 1: trivial; only 1: trivial).	2.723661	7
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_lower_bound	600
Coq.Numbers.Cyclic.Int63.Int63.diveucl_21_spec_aux	600
Coq.Numbers.Cyclic.Int63.Int63.div2_phi	600
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_correct	600
Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	600
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_spec	600
Coq.Numbers.Cyclic.Int63.Int63.of_pos_rec_spec	600
Coq.Numbers.Cyclic.Int63.Int63.is_int	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: intros ?; only 1: destruct H; only 1: clear H; only 1: simpl; only 1: unfold of_pos; only 1: rewrite of_pos_rec_spec; only 1: symmetry; only 1: apply Z.mod_small; only 1: split; only 1: lia; only 1: exact H0; only 1: lia; only 1: lia).	2.808233	23
Coq.Numbers.Cyclic.Int63.Int63.of_Z_spec	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: unfold of_pos; only 1: rewrite of_pos_rec_spec; only 1: easy; only 1: lia; only 1: simpl; only 1: unfold of_pos; only 1: rewrite opp_spec; only 1: rewrite of_pos_rec_spec; only 1: fold wB; only 1: rewrite <- Z.sub_0_l; only 1: rewrite Zminus_mod_idemp_r; only 1: easy; only 1: lia).	2.942773	24
Coq.Numbers.Cyclic.Int63.Int63.negbE	600	0.0.0	synth with cache (only 1: intros ?; only 1: intropattern subst -> H; only 1: apply negb_involutive).	2.685335	3
Coq.Numbers.Cyclic.Int63.Int63.Z_oddE	600	0.0.0.0	synth with cache (only 1: rewrite Zmod_odd; only 1: case BinIntDef.Z.odd; only 1: reflexivity; only 1: reflexivity).	2.839059	4
Coq.Numbers.Cyclic.Int63.Int63.Z_evenE	600	0.0.0.0	synth with cache (only 1: rewrite Zmod_even; only 1: case BinIntDef.Z.even; only 1: reflexivity; only 1: reflexivity).	2.769331	4
Coq.Numbers.Cyclic.Int63.Int63.is_zeroE	600
Coq.Numbers.Cyclic.Int63.Int63.bitE	600
Coq.Numbers.Cyclic.Int63.Int63.lt_pow_lt_log	600
Coq.Numbers.Cyclic.Int63.Int63.land_spec'	600
Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	600
Coq.Numbers.Cyclic.Int63.Int63.lxor_spec'	600
Coq.Numbers.Cyclic.Int63.Int63.landC	600	0.0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite land_spec; only 1: rewrite land_spec; only 1: rewrite andb_comm; only 1: auto).	2.647924	6
Coq.Numbers.Cyclic.Int63.Int63.landA	600	0.0.0.0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite land_spec; only 1: rewrite land_spec; only 1: rewrite land_spec; only 1: rewrite land_spec; only 1: rewrite andb_assoc; only 1: auto).	2.659704	8
Coq.Numbers.Cyclic.Int63.Int63.land0	600	0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite land_spec; only 1: rewrite bit_0; only 1: auto).	2.763026	5
Coq.Numbers.Cyclic.Int63.Int63.land0_r	600	0.0.0.0.0.0	synth with cache (only 1: rewrite landC; only 1: apply bit_ext; only 1: intros ?; only 1: rewrite land_spec; only 1: rewrite bit_0; only 1: auto).	2.615241	6
Coq.Numbers.Cyclic.Int63.Int63.lorC	600	0.0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite lor_spec; only 1: rewrite lor_spec; only 1: rewrite orb_comm; only 1: auto).	2.682691	6
Coq.Numbers.Cyclic.Int63.Int63.lorA	600	0.0.0.0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite lor_spec; only 1: rewrite lor_spec; only 1: rewrite lor_spec; only 1: rewrite lor_spec; only 1: rewrite orb_assoc; only 1: auto).	2.774801	8
Coq.Numbers.Cyclic.Int63.Int63.lor0	600	0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite lor_spec; only 1: rewrite bit_0; only 1: auto).	2.737381	5
Coq.Numbers.Cyclic.Int63.Int63.lor0_r	600	0.0.0.0.0.0	synth with cache (only 1: rewrite lorC; only 1: apply bit_ext; only 1: intros ?; only 1: rewrite lor_spec; only 1: rewrite bit_0; only 1: auto).	2.778136	6
Coq.Numbers.Cyclic.Int63.Int63.lxorC	600	0.0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite lxor_spec; only 1: rewrite lxor_spec; only 1: rewrite xorb_comm; only 1: auto).	2.806568	6
Coq.Numbers.Cyclic.Int63.Int63.lxorA	600	0.0.0.0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite lxor_spec; only 1: rewrite lxor_spec; only 1: rewrite lxor_spec; only 1: rewrite lxor_spec; only 1: rewrite xorb_assoc_reverse; only 1: auto).	2.686757	8
Coq.Numbers.Cyclic.Int63.Int63.lxor0	600	0.0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite lxor_spec; only 1: rewrite bit_0; only 1: rewrite xorb_false_l; only 1: auto).	2.814696	6
Coq.Numbers.Cyclic.Int63.Int63.lxor0_r	600	0.0.0.0.0.0.0	synth with cache (only 1: rewrite lxorC; only 1: apply bit_ext; only 1: intros ?; only 1: rewrite lxor_spec; only 1: rewrite bit_0; only 1: rewrite xorb_false_l; only 1: auto).	2.741611	7
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	600
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_1	600
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_0	600
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	600
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.succ_mod_wB	600
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	600
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	600
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_succ	600
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	600
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.two_succ	600
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B0	600
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.BS	600
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.Zbounded_induction	600
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B_holds	600
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.bi_induction	600
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_0_l	600
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_succ_l	600
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_0_r	600
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	600
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	600
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_succ_l	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_more_than_1_digit	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.wB_pos	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_1	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_2	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_of_pos	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_zdigits	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_0	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_1	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_Bm1	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_compare	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_eq0	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_c	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_carry	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zmod_equal	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ_c	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_c	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry_c	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred_c	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_c	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry_c	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul_c	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_square_c	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div_gt	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo_gt	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zgcd_bound	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd_gt	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div21	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_mul_div	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pos_mod	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_is_even	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt2	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.two_p_power2	600	0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold two_p; only 1: destruct x; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply two_power_pos_correct; only 1: simpl; only 1: auto).	4.172222	18
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head00	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head0	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_pos	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_bounded	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail00	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail0	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lor	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_land	600
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lxor	600
Coq.btauto.Reflect.Translation.poly_of_formula_eval_compat	600
Coq.btauto.Reflect.Translation.poly_of_formula_valid_compat	600
Coq.btauto.Reflect.Translation.poly_of_formula_sound	600
Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound	600
Coq.btauto.Reflect.Completeness.list_nth_base	600	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold list_nth; only 1: rewrite Pos.peano_rect_base; only 1: reflexivity).	4.551187	6
Coq.btauto.Reflect.Completeness.list_nth_succ	600	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold list_nth; only 1: rewrite Pos.peano_rect_succ; only 1: reflexivity).	4.619449	6
Coq.btauto.Reflect.Completeness.list_nth_nil	600
Coq.btauto.Reflect.Completeness.make_last_nth_1	600
Coq.btauto.Reflect.Completeness.make_last_nth_2	600
Coq.btauto.Reflect.Completeness.list_replace_nth_1	600
Coq.btauto.Reflect.Completeness.list_replace_nth_2	600
Coq.btauto.Reflect.Completeness.boolean_witness_nonzero	600
Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound_alt	600
Coq.setoid_ring.Ncring_initial.Zsth	600	0	synth with cache (only 1: exact Z.eq_equiv).	2.145309	1
Coq.setoid_ring.Ncring_initial.Zr	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: apply Zsth; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper; only 1: apply Zsth; only 1: exact Z.add_comm; only 1: exact Z.add_assoc; only 1: exact Z.mul_1_l; only 1: exact Z.mul_1_r; only 1: exact Z.mul_assoc; only 1: exact Z.mul_add_distr_r; only 1: intros; only 1: apply Z.mul_add_distr_l; only 1: solve_proper; only 1: exact Z.sub_diag).	3.024289	41
Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_gen	600
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_Psucc	600
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_add	600
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_mult	600
Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_genZ	600
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_Zeqb_ok	600
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ1_add_pos_neg	600
Coq.setoid_ring.Ncring_initial.ZMORPHISM.match_compOpp	600
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_add	600
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_opp	600
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_mul	600
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_ext	600
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_morph	600
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WO	600
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_OW	600
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WW	600
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_pos_correct	600
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_Z_correct	600
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_0_l	600
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	600
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_assoc	600
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_1_l	600
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_comm	600
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_assoc	600
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_add_distr_r	600
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_r	600
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	600
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.CyclicRing	600
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	600
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	600
Coq.btauto.Algebra.Decidable_sound	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply -> @Decidable_spec; only 1: assumption).	4.403602	5
Coq.btauto.Algebra.Decidable_complete	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply <- @Decidable_spec; only 1: assumption).	4.491458	5
Coq.btauto.Algebra.Decidable_sound_alt	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: destruct Decidable_witness; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto).	4.568985	17
Coq.btauto.Algebra.Decidable_complete_alt	600	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: intros ?; only 1: simpl in *; only 1: intuition congruence).	4.534550	7
Coq.btauto.Algebra.Computational.Decidable_PosEq_obligation_1	600	1	synth with cache (only 1: apply Pos.eqb_eq).	4.509622	3
Coq.btauto.Algebra.Computational.Decidable_PosLt_obligation_1	600	1	synth with cache (only 1: apply Pos.ltb_lt).	4.501576	3
Coq.btauto.Algebra.Computational.Decidable_PosLe_obligation_1	600	1	synth with cache (only 1: apply Pos.leb_le).	4.385669	3
Coq.btauto.Algebra.Computational.Decidable_eq_poly_obligation_1	600
Coq.btauto.Algebra.Computational.Decidable_null_obligation_3	600	0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: destruct p; only 1: destruct b; only 1: discriminate; only 1: constructor; only 1: discriminate; only 1: inversion 1; only 1: trivial).	4.135523	8
Coq.btauto.Algebra.Computational.Decidable_valid_obligation_1	600
Coq.btauto.Algebra.Validity.valid_le_compat	600
Coq.btauto.Algebra.Validity.linear_le_compat	600
Coq.btauto.Algebra.Validity.linear_valid_incl	600
Coq.btauto.Algebra.Evaluation.eval_null_zero	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: reflexivity).	4.268729	5
Coq.btauto.Algebra.Evaluation.eval_extensional_eq_compat	600
Coq.btauto.Algebra.Evaluation.eval_suffix_compat	600
Coq.btauto.Algebra.Algebra.poly_add_compat	600
Coq.btauto.Algebra.Algebra.poly_mul_cst_compat	600
Coq.btauto.Algebra.Algebra.poly_mul_mon_compat	600
Coq.btauto.Algebra.Algebra.poly_mul_compat	600
Coq.btauto.Algebra.Algebra.poly_add_valid_compat	600
Coq.btauto.Algebra.Algebra.poly_mul_cst_valid_compat	600
Coq.btauto.Algebra.Algebra.poly_mul_mon_null_compat	600	1.1.0.0.1.0.1.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: induction p; only 1: simpl; only 1: case_decide; only 1: inversion 1; only 1: intuition; only 1: inversion 1; only 1: simpl; only 1: case_decide; only 1: inversion 1; only 1: inversion 1).	5.264607	179
Coq.btauto.Algebra.Algebra.poly_mul_mon_valid_compat	600
Coq.btauto.Algebra.Algebra.poly_mul_valid_compat	600
Coq.btauto.Algebra.Algebra.poly_add_linear_compat	600
Coq.btauto.Algebra.Reduce.reduce_aux_eval_compat	600
Coq.btauto.Algebra.Reduce.reduce_eval_compat	600
Coq.btauto.Algebra.Reduce.reduce_aux_le_compat	600
Coq.btauto.Algebra.Reduce.linear_reduce_aux	600
Coq.btauto.Algebra.Reduce.linear_reduce	600
Coq.QArith.Qpower.Qpower_positive_1	600
Coq.QArith.Qpower.Qpower_1	600	0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros ?; only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite Qpower_positive_1; only 1: reflexivity; only 1: simpl; only 1: rewrite Qpower_positive_1; only 1: reflexivity).	4.240554	27
Coq.QArith.Qpower.Qpower_positive_0	600
Coq.QArith.Qpower.Qpower_0	600	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct n; only 1: intros ?; only 1: elim H; only 1: reflexivity; only 1: intros ?; only 1: simpl; only 1: rewrite Qpower_positive_0; only 1: reflexivity; only 1: intros ?; only 1: simpl; only 1: rewrite Qpower_positive_0; only 1: reflexivity).	4.592049	22
Coq.QArith.Qpower.Qpower_not_0_positive	600
Coq.QArith.Qpower.Qpower_pos_positive	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction n; only 1: simpl; only 1: apply Qmult_le_0_compat; only 1: assumption; only 1: apply Qmult_le_0_compat; only 1: assumption; only 1: assumption; only 1: simpl; only 1: apply Qmult_le_0_compat; only 1: assumption; only 1: assumption; only 1: simpl; only 1: assumption).	4.538485	24
Coq.QArith.Qpower.Qpower_pos	600	0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct n; only 1: intros ?; only 1: simpl; only 1: discriminate; only 1: intros ?; only 1: simpl; only 1: induction p0; only 1: simpl; only 1: apply Qmult_le_0_compat; only 1: assumption; only 1: apply Qmult_le_0_compat; only 1: assumption; only 1: assumption; only 1: simpl; only 1: apply Qmult_le_0_compat; only 1: assumption; only 1: assumption; only 1: simpl; only 1: assumption; only 1: intros ?; only 1: simpl; only 1: apply Qinv_le_0_compat; only 1: apply Qpower_pos_positive; only 1: assumption).	4.949989	62
Coq.QArith.Qpower.Qmult_power_positive	600
Coq.QArith.Qpower.Qmult_power	600	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite Qmult_power_positive; only 1: reflexivity; only 1: simpl; only 1: rewrite Qmult_power_positive; only 1: rewrite Qinv_mult_distr; only 1: reflexivity).	4.553966	21
Coq.QArith.Qpower.Qinv_power_positive	600
Coq.QArith.Qpower.Qinv_power	600	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite Qinv_power_positive; only 1: reflexivity; only 1: simpl; only 1: rewrite Qinv_power_positive; only 1: reflexivity).	4.496956	19
Coq.QArith.Qpower.Qdiv_power	600	0.0.0.0.0.0.0	synth with cache (only 1: unfold Qdiv; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Qmult_power; only 1: rewrite Qinv_power; only 1: reflexivity).	4.334826	7
Coq.QArith.Qpower.Qinv_power_n	600	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite Qmake_Qdiv; only 1: rewrite Qdiv_power; only 1: rewrite Qpower_1; only 1: unfold Qdiv; only 1: ring).	4.328292	7
Coq.QArith.Qpower.Qpower_plus_positive	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Qpower_positive; only 1: apply pow_pos_add; only 1: apply Q_Setoid; only 1: apply Qmult_comp; only 1: apply Qmult_assoc).	4.464131	8
Coq.QArith.Qpower.Qpower_opp	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: symmetry; only 1: apply Qinv_involutive).	4.439744	18
Coq.QArith.Qpower.Qpower_minus_positive	600
Coq.QArith.Qpower.Qpower_plus	600	0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct n; only 1: intros ?; only 1: destruct m; only 1: intros ?; only 1: simpl; only 1: ring; only 1: intros ?; only 1: simpl; only 1: ring; only 1: intros ?; only 1: simpl; only 1: ring; only 1: intros ?; only 1: destruct m; only 1: intros ?; only 1: simpl; only 1: ring; only 1: intros ?; only 1: simpl; only 1: rewrite Qpower_plus_positive; only 1: reflexivity; only 1: intros ?; only 1: simpl; only 1: rewrite Z.pos_sub_spec; only 1: case Pos.compare_spec; only 1: intros ?; only 1: simpl; only 1: subst; only 1: field; only 1: apply Qpower_not_0_positive; only 1: assumption; only 1: intros ?; only 1: simpl; only 1: rewrite Qpower_minus_positive; only 1: field; only 1: split; only 1: apply Qpower_not_0_positive; only 1: assumption; only 1: apply Qpower_not_0_positive; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: simpl; only 1: rewrite Qpower_minus_positive; only 1: field; only 1: apply Qpower_not_0_positive; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct m; only 1: intros ?; only 1: simpl; only 1: ring; only 1: intros ?; only 1: simpl; only 1: rewrite Z.pos_sub_spec; only 1: case Pos.compare_spec; only 1: intros ?; only 1: simpl; only 1: subst; only 1: field; only 1: apply Qpower_not_0_positive; only 1: assumption; only 1: intros ?; only 1: simpl; only 1: rewrite Qpower_minus_positive; only 1: field; only 1: split; only 1: apply Qpower_not_0_positive; only 1: assumption; only 1: apply Qpower_not_0_positive; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: simpl; only 1: rewrite Qpower_minus_positive; only 1: field; only 1: apply Qpower_not_0_positive; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: simpl; only 1: rewrite Qpower_plus_positive; only 1: apply Qinv_mult_distr).	9.610910	530
Coq.QArith.Qpower.Qpower_plus'	600
Coq.QArith.Qpower.Qpower_mult_positive	600	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction n using Pos.peano_ind; only 1: reflexivity; only 1: rewrite Pos.mul_succ_l; only 1: rewrite <- Pos.add_1_l; only 1: rewrite Qpower_plus_positive; only 1: rewrite Qpower_plus_positive; only 1: rewrite IHn; only 1: rewrite Qmult_power_positive; only 1: reflexivity).	4.230775	20
Coq.QArith.Qpower.Qpower_mult	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct n; only 1: intros ?; only 1: destruct m; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite Qpower_positive_1; only 1: reflexivity; only 1: simpl; only 1: rewrite Qpower_positive_1; only 1: reflexivity; only 1: intros ?; only 1: destruct m; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: induction p using Pos.peano_ind; only 1: reflexivity; only 1: rewrite Pos.mul_succ_l; only 1: rewrite <- Pos.add_1_l; only 1: rewrite Qpower_plus_positive; only 1: rewrite Qpower_plus_positive; only 1: rewrite IHp; only 1: rewrite Qmult_power_positive; only 1: reflexivity; only 1: simpl; only 1: rewrite Qpower_mult_positive; only 1: reflexivity; only 1: intros ?; only 1: destruct m; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite Qpower_mult_positive; only 1: rewrite Qinv_power_positive; only 1: reflexivity; only 1: simpl; only 1: rewrite Qpower_mult_positive; only 1: rewrite Qinv_power_positive; only 1: rewrite Qinv_involutive; only 1: reflexivity).	5.445808	99
Coq.QArith.Qpower.Zpower_Qpower	600
Coq.QArith.Qpower.Qsqr_nonneg	600
Coq.QArith.Qpower.Qpower_decomp	600	0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: induction p; only 1: simpl Qpower_positive; only 1: rewrite IHp; only 1: unfold Qmult; only 1: unfold Qnum; only 1: unfold Qden; only 1: f_equal; only 1: rewrite <- Z.pow_twice_r; only 1: rewrite <- Z.pow_succ_r; only 1: easy; only 1: easy; only 1: apply Pos2Z.inj; only 1: rewrite Pos2Z.inj_mul; only 1: rewrite Pos2Z.inj_mul; only 1: rewrite Pos2Z.inj_pow; only 1: rewrite Pos2Z.inj_pow; only 1: rewrite <- Z.pow_twice_r; only 1: rewrite <- Z.pow_succ_r; only 1: easy; only 1: easy; only 1: simpl Qpower_positive; only 1: rewrite IHp; only 1: unfold Qmult; only 1: unfold Qnum; only 1: unfold Qden; only 1: f_equal; only 1: rewrite <- Z.pow_twice_r; only 1: easy; only 1: apply Pos2Z.inj; only 1: rewrite Pos2Z.inj_mul; only 1: rewrite Pos2Z.inj_pow; only 1: rewrite Pos2Z.inj_pow; only 1: rewrite <- Z.pow_twice_r; only 1: easy; only 1: simpl Qpower_positive; only 1: rewrite Z.pow_1_r; only 1: rewrite Pos.pow_1_r; only 1: easy).	5.328562	100
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_eq	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_1	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_2	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_1	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_2	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.empty_mem	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_equal_empty	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_1	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_2	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_1	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_2	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_1	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_2	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_equal_add	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_mem	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_mem	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_mem	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_3	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_4	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_refl	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_sym	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_trans	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_equal	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_cardinal	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_refl	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_antisym	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_trans	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_equal	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_3	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_4	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_3	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_equal	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_3	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_equal	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_remove	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_add	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_cardinal	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_1	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_2	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_3	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_sym	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_equal	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_1	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_2	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_assoc	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_union_singleton	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_add	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_1	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_2	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_3	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_sym	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_equal	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_1	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_2	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_assoc	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_1	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_2	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_1	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_2	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_1	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_2	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_3	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset_equal	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_inter_singleton	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_empty	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_all	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.set_rec	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exclusive_set	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_empty	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_equal	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_add	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.add_fold	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_1	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_2	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_union	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_1	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_cardinal	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_cardinal	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.Comp'	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_mem	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_filter	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.exists_filter	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_1	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_2	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_1	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_2	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_1	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_2	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.union_filter	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_union	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_1	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_2	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_3	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_4	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_exists	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.Comp'	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_1	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_2	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_3	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_4	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_plus	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_filter	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.fold_compat	600
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_compat	600
Coq.ZArith.Zquot.Zquot_0_r	600	0.0.0.0	synth with cache (only 1: destruct a; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	3.969791	4
Coq.ZArith.Zquot.Zrem_0_r	600	0.0.0.0	synth with cache (only 1: destruct a; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	3.929635	4
Coq.ZArith.Zquot.Zrem_0_l	600	0.0.0.0	synth with cache (only 1: destruct a; only 1: reflexivity; only 1: easy; only 1: easy).	4.016571	4
Coq.ZArith.Zquot.Zquot_0_l	600	0.0.0.0	synth with cache (only 1: destruct a; only 1: reflexivity; only 1: easy; only 1: easy).	3.978866	4
Coq.ZArith.Zquot.Z_rem_same	600
Coq.ZArith.Zquot.Z_rem_mult	600	0.0.0.0.0.0.0	synth with cache (only 1: zero_or_not b; only 1: rewrite Z.rem_eq; only 1: rewrite Z.quot_mul; only 1: rewrite Z.mul_comm; only 1: apply Z.sub_diag; only 1: easy; only 1: easy).	3.977293	7
Coq.ZArith.Zquot.Zquot_opp_l	600	0.1.0	synth with cache (only 1: zero_or_not b; only 1: apply Z.quot_opp_l; only 1: easy).	4.037758	4
Coq.ZArith.Zquot.Zquot_opp_r	600	0.1.0	synth with cache (only 1: zero_or_not b; only 1: apply Z.quot_opp_r; only 1: easy).	4.040250	4
Coq.ZArith.Zquot.Zrem_opp_l	600	1	synth with cache (only 1: apply Z.rem_opp_l').	4.040085	9
Coq.ZArith.Zquot.Zrem_opp_r	600	1	synth with cache (only 1: apply Z.rem_opp_r').	4.064497	9
Coq.ZArith.Zquot.Zquot_opp_opp	600	0.0.0.0.0.0.0	synth with cache (only 1: zero_or_not b; only 1: rewrite Z.quot_opp_r; only 1: rewrite Z.quot_opp_l; only 1: rewrite Z.opp_involutive; only 1: easy; only 1: easy; only 1: easy).	4.040175	7
Coq.ZArith.Zquot.Zrem_opp_opp	600	0.1.0.0.0	synth with cache (only 1: zero_or_not b; only 1: rewrite Z.rem_opp_r; only 1: clear H; only 1: apply Z.rem_opp_l'; only 1: easy).	4.132247	10
Coq.ZArith.Zquot.Zrem_sgn	600
Coq.ZArith.Zquot.Zrem_sgn2	600	0.1.1.0	synth with cache (only 1: zero_or_not b; only 1: apply Z.square_nonneg; only 1: apply Z.rem_sign_mul; only 1: easy).	4.162914	11
Coq.ZArith.Zquot.Zrem_lt_pos	600
Coq.ZArith.Zquot.Zrem_lt_neg	600
Coq.ZArith.Zquot.Zrem_lt_pos_pos	600	0.0.1.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Z.rem_bound_pos; only 1: easy; only 1: easy).	4.138914	11
Coq.ZArith.Zquot.Zrem_lt_pos_neg	600
Coq.ZArith.Zquot.Zrem_lt_neg_pos	600
Coq.ZArith.Zquot.Zrem_lt_neg_neg	600
Coq.ZArith.Zquot.Remainder_equiv	600
Coq.ZArith.Zquot.Zquot_mod_unique_full	600
Coq.ZArith.Zquot.Zquot_unique_full	600
Coq.ZArith.Zquot.Zrem_unique_full	600
Coq.ZArith.Zquot.Z_quot_pos	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.quot_pos; only 1: lia; only 1: lia).	4.288569	5
Coq.ZArith.Zquot.Z_quot_lt	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.quot_lt; only 1: lia; only 1: lia).	4.424908	4
Coq.ZArith.Zquot.Z_quot_monotone	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not c; only 1: apply Z.quot_le_mono; only 1: lia; only 1: lia).	4.501498	5
Coq.ZArith.Zquot.Z_mult_quot_le	600	0.0.1.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mul_quot_le; only 1: auto with zarith; only 1: auto with zarith).	4.628723	11
Coq.ZArith.Zquot.Z_mult_quot_ge	600	0.0.1.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mul_quot_ge; only 1: auto with zarith; only 1: Z.order).	4.483043	11
Coq.ZArith.Zquot.Z_quot_exact_full	600	0.0.0.0.0.1	synth with cache (only 1: zero_or_not b; only 1: rewrite Z.rem_eq; only 1: rewrite Z.sub_move_r; only 1: Z.nzsimpl; only 1: tauto; only 1: easy).	4.688565	13
Coq.ZArith.Zquot.Zrem_le	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.rem_le; only 1: lia; only 1: lia).	4.456597	5
Coq.ZArith.Zquot.Zquot_le_upper_bound	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Z.mul_comm; only 1: apply Z.quot_le_upper_bound).	4.463042	5
Coq.ZArith.Zquot.Zquot_lt_upper_bound	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Z.mul_comm; only 1: apply Z.quot_lt_upper_bound).	4.461007	5
Coq.ZArith.Zquot.Zquot_le_lower_bound	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Z.mul_comm; only 1: apply Z.quot_le_lower_bound).	4.442265	5
Coq.ZArith.Zquot.Zquot_sgn	600
Coq.ZArith.Zquot.Z_rem_plus	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not c; only 1: apply Z.rem_add; only 1: auto with zarith; only 1: auto with zarith).	4.491502	5
Coq.ZArith.Zquot.Z_quot_plus	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.quot_add; only 1: auto with zarith; only 1: auto with zarith).	4.515924	4
Coq.ZArith.Zquot.Z_quot_plus_l	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.quot_add_l; only 1: auto with zarith; only 1: auto with zarith).	4.532666	4
Coq.ZArith.Zquot.Zquot_mult_cancel_r	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.quot_mul_cancel_r; only 1: auto; only 1: auto).	4.318119	5
Coq.ZArith.Zquot.Zquot_mult_cancel_l	600
Coq.ZArith.Zquot.Zmult_rem_distr_l	600
Coq.ZArith.Zquot.Zmult_rem_distr_r	600
Coq.ZArith.Zquot.Zrem_rem	600	0.1.0.0	synth with cache (only 1: intros; only 1: zero_or_not n; only 1: apply Z.rem_rem; only 1: easy).	4.431323	10
Coq.ZArith.Zquot.Zmult_rem	600	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not n; only 1: rewrite Z.mul_rem_idemp_l; only 1: rewrite Z.mul_rem_idemp_r; only 1: easy; only 1: easy; only 1: easy).	4.402334	7
Coq.ZArith.Zquot.Zplus_rem	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not n; only 1: apply Z.add_rem; only 1: auto; only 1: auto).	4.329275	5
Coq.ZArith.Zquot.Zplus_rem_idemp_l	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not n; only 1: apply Z.add_rem_idemp_l; only 1: auto; only 1: auto).	4.270041	5
Coq.ZArith.Zquot.Zplus_rem_idemp_r	600	0.1.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not n; only 1: apply Z.add_rem_idemp_r; only 1: auto; only 1: rewrite Z.mul_comm; only 1: auto).	4.440788	7
Coq.ZArith.Zquot.Zmult_rem_idemp_l	600	0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not n; only 1: apply Z.mul_rem_idemp_l; only 1: easy).	4.409949	4
Coq.ZArith.Zquot.Zmult_rem_idemp_r	600	0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not n; only 1: apply Z.mul_rem_idemp_r; only 1: easy).	4.428363	4
Coq.ZArith.Zquot.Zquot_Zquot	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: rewrite Z.mul_comm; only 1: zero_or_not c; only 1: rewrite Z.mul_comm; only 1: apply Z.quot_quot; only 1: Z.order; only 1: easy).	4.368259	8
Coq.ZArith.Zquot.Zquot_mult_le	600	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.quot_mul_le; only 1: auto; only 1: apply Z.le_neq; only 1: auto; only 1: auto).	4.458820	15
Coq.ZArith.Zquot.Zrem_divides	600	0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: firstorder; only 1: rewrite Z.rem_divide; only 1: split; only 1: intros ?; only 1: destruct H0; only 1: exists x; only 1: subst; only 1: auto with zarith; only 1: intros ?; only 1: destruct H0; only 1: exists x; only 1: subst; only 1: auto with zarith; only 1: easy).	4.662785	38
Coq.ZArith.Zquot.Zquot2_odd_remainder	600	1.1.0.0.1.1.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct a; only 1: simpl; only 1: left; only 1: simpl; only 1: auto with zarith; only 1: left; only 1: destruct p; only 1: simpl; only 1: lia; only 1: simpl; only 1: lia; only 1: simpl; only 1: lia; only 1: right; only 1: destruct p; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: split; only 1: easy; only 1: easy).	5.845399	142
Coq.ZArith.Zquot.Zrem_odd	600
Coq.ZArith.Zquot.Zrem_even	600	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Zrem_odd; only 1: rewrite Zodd_even_bool; only 1: destruct BinIntDef.Z.even; only 1: easy; only 1: easy).	4.226190	6
Coq.ZArith.Zquot.Zeven_rem	600	0.0.0.1.0.0.0.1.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Zrem_even; only 1: destruct a; only 1: trivial; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	4.577288	32
Coq.ZArith.Zquot.Zodd_rem	600	0.0.0.1.0.0.0.1.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Zrem_odd; only 1: destruct a; only 1: trivial; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	4.525452	32
Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Zdiv_mod_unique with b; only 1: apply Zrem_lt_pos; only 1: easy; only 1: Z.order; only 1: rewrite Z.abs_eq; only 1: apply Z_mod_lt; only 1: lia; only 1: Z.order; only 1: rewrite <- Z_div_mod_eq; only 1: symmetry; only 1: apply Z.quot_rem; only 1: Z.order; only 1: lia).	4.618993	22
Coq.ZArith.Zquot.Zquot_Zdiv_pos	600
Coq.ZArith.Zquot.Zrem_Zmod_pos	600
Coq.ZArith.Zquot.Zrem_Zmod_zero	600	0.0.0.1.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Z.mod_divide; only 1: rewrite Z.rem_divide; only 1: easy; only 1: easy; only 1: easy).	4.695270	28
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_sym	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Qabs_Qminus; only 1: apply H; only 1: assumption; only 1: assumption).	3.400310	18
Coq.Reals.ConstructiveCauchyReals.factorDenom	600	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: destruct a; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	3.334926	7
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_trans	600
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_sym	600	0.1.0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: exists x; only 1: apply QSeqEquiv_sym; only 1: apply H).	3.419720	10
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_trans	600
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_cau_r	600
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_inc	600
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_max	600
Coq.Reals.ConstructiveCauchyReals.standard_modulus	600
Coq.Reals.ConstructiveCauchyReals.CRealLtEpsilon	600
Coq.Reals.ConstructiveCauchyReals.CRealLtForget	600	0.0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: exists x0; only 1: apply q).	3.404127	4
Coq.Reals.ConstructiveCauchyReals.CRealLt_lpo_dec	600
Coq.Reals.ConstructiveCauchyReals.CRealLe_not_lt	600
Coq.Reals.ConstructiveCauchyReals.CRealEq_diff	600
Coq.Reals.ConstructiveCauchyReals.CRealEq_modindep	600
Coq.Reals.ConstructiveCauchyReals.CRealLt_aboveSig	600
Coq.Reals.ConstructiveCauchyReals.CRealLt_above	600
Coq.Reals.ConstructiveCauchyReals.CRealLt_above_same	600
Coq.Reals.ConstructiveCauchyReals.CRealLt_asym	600
Coq.Reals.ConstructiveCauchyReals.CRealLt_irrefl	600
Coq.Reals.ConstructiveCauchyReals.CRealLe_refl	600
Coq.Reals.ConstructiveCauchyReals.CRealEq_refl	600	1.1.0.0	synth with cache (only 1: intros; only 1: split; only 1: apply CRealLe_refl; only 1: apply CRealLe_refl).	3.252782	9
Coq.Reals.ConstructiveCauchyReals.CRealEq_sym	600	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: split; only 1: intros ?; only 1: contradiction; only 1: intros ?; only 1: contradiction).	3.238886	7
Coq.Reals.ConstructiveCauchyReals.CRealLt_dec	600
Coq.Reals.ConstructiveCauchyReals.CReal_le_lt_trans	600
Coq.Reals.ConstructiveCauchyReals.CReal_lt_le_trans	600
Coq.Reals.ConstructiveCauchyReals.CReal_le_trans	600
Coq.Reals.ConstructiveCauchyReals.CReal_lt_trans	600
Coq.Reals.ConstructiveCauchyReals.CRealEq_trans	600
Coq.Reals.ConstructiveCauchyReals.CRealEq_relT	600	0.0.0.0	synth with cache (only 1: split; only 1: exact CRealEq_refl; only 1: exact CRealEq_sym; only 1: exact CRealEq_trans).	2.245761	4
Coq.Reals.ConstructiveCauchyReals.CRealLt_morph	600
Coq.Reals.ConstructiveCauchyReals.CRealGt_morph	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply CRealLt_morph; only 1: assumption; only 1: assumption).	2.321783	17
Coq.Reals.ConstructiveCauchyReals.CReal_appart_morph	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: destruct H1; only 1: left; only 1: rewrite <- H0; only 1: rewrite <- H; only 1: exact c; only 1: right; only 1: rewrite <- H0; only 1: rewrite <- H; only 1: exact c; only 1: intros; only 1: destruct H1; only 1: left; only 1: rewrite H0; only 1: rewrite H; only 1: exact c; only 1: right; only 1: rewrite H0; only 1: rewrite H; only 1: exact c).	3.600333	46
Coq.Reals.ConstructiveCauchyReals.CRealLtProp_morph_Proper	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: apply CRealLtForget; only 1: apply CRealLtEpsilon in H1; only 1: rewrite <- H0; only 1: rewrite <- H; only 1: exact H1; only 1: intros ?; only 1: apply CRealLtForget; only 1: apply CRealLtEpsilon in H1; only 1: rewrite H0; only 1: rewrite H; only 1: exact H1).	3.028186	43
Coq.Reals.ConstructiveCauchyReals.CRealLe_morph_Proper	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: intros ?; only 1: unfold CRealLe in H1; only 1: rewrite <- H0 in H2; only 1: rewrite <- H in H2; only 1: contradiction; only 1: intros ?; only 1: intros ?; only 1: unfold CRealLe in H1; only 1: rewrite H0 in H2; only 1: rewrite H in H2; only 1: contradiction).	2.841666	22
Coq.Reals.ConstructiveCauchyReals.CRealGe_morph_Proper	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold CRealGe; only 1: apply CRealLe_morph; only 1: assumption; only 1: assumption).	2.393896	5
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_l	600
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_r	600
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_l	600
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_r	600
Coq.Reals.ConstructiveCauchyReals.ConstCauchy	600	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Qminus; only 1: rewrite Qplus_opp_r; only 1: unfold Qlt; only 1: simpl; only 1: unfold Z.lt; only 1: auto).	2.457129	20
Coq.Reals.ConstructiveCauchyReals.inject_Q	600
Coq.Reals.ConstructiveCauchyReals.CRealLt_0_1	600
Coq.Reals.ConstructiveCauchyReals.CReal_injectQPos	600
Coq.Reals.ConstructiveCauchyReals.CRealLtQ	600
Coq.Reals.ConstructiveCauchyReals.CRealLtQopp	600
Coq.Reals.ConstructiveCauchyReals.inject_Q_compare	600
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_Proper	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: destruct H0; only 1: simpl in q; only 1: rewrite H in q; only 1: unfold Qminus in q; only 1: rewrite Qplus_opp_r in q; only 1: discriminate q; only 1: intros ?; only 1: destruct H0; only 1: simpl in q; only 1: rewrite H in q; only 1: unfold Qminus in q; only 1: rewrite Qplus_opp_r in q; only 1: discriminate q).	2.584212	23
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_T	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: destruct H0; only 1: simpl in q; only 1: rewrite H in q; only 1: unfold Qminus in q; only 1: rewrite Qplus_opp_r in q; only 1: discriminate q; only 1: intros ?; only 1: destruct H0; only 1: simpl in q; only 1: rewrite H in q; only 1: unfold Qminus in q; only 1: rewrite Qplus_opp_r in q; only 1: discriminate q).	2.602274	23
Coq.Reals.ConstructiveCauchyReals.CReal_plus_cauchy	600
Coq.Reals.ConstructiveCauchyReals.CReal_plus	600
Coq.Reals.ConstructiveCauchyReals.CReal_plus_nth	600	0.0.0.0	synth with cache (only 1: intros; only 1: destruct x; only 1: destruct y; only 1: reflexivity).	2.391667	4
Coq.Reals.ConstructiveCauchyReals.CReal_plus_unfold	600
Coq.Reals.ConstructiveCauchyReals.CReal_opp	600
Coq.Reals.ConstructiveCauchyReals.belowMultiple	600
Coq.Reals.ConstructiveCauchyReals.CReal_plus_assoc	600
Coq.Reals.ConstructiveCauchyReals.CReal_plus_comm	600
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_l	600
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_r	600	1.0.0	synth with cache (only 1: intros ?; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_0_l).	2.382405	4
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_l	600
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_r	600
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_l	600
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_r	600
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_l	600	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: apply H; only 1: clear H; only 1: apply CReal_plus_lt_compat_l; only 1: exact H0).	2.404492	6
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_r	600	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: apply H; only 1: clear H; only 1: apply CReal_plus_lt_compat_r; only 1: exact H0).	2.397386	6
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat_l	600	0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: apply CReal_plus_lt_reg_l in H0; only 1: contradiction).	2.352202	4
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_lt_compat	600
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat	600
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_r	600
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_l	600	1.0.0	synth with cache (only 1: intros ?; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_opp_r).	2.479449	9
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_r	600
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_l	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: apply CReal_plus_lt_reg_l in H0; only 1: destruct H; only 1: contradiction; only 1: intros ?; only 1: apply CReal_plus_lt_reg_l in H0; only 1: destruct H; only 1: contradiction).	2.545295	23
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_Proper	600
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_T	600	0.0.2.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply CReal_plus_morph; only 1: assumption; only 1: assumption).	2.719589	51
Coq.Reals.ConstructiveCauchyReals.CReal_plus_eq_reg_l	600
Coq.Reals.ConstructiveCauchyReals.CReal_opp_0	600
Coq.Reals.ConstructiveCauchyReals.CReal_opp_plus_distr	600
Coq.Reals.ConstructiveCauchyReals.CReal_opp_involutive	600
Coq.Reals.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	600
Coq.Reals.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	600
Coq.Reals.ConstructiveCauchyReals.inject_Q_plus	600	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: destruct H; only 1: simpl in q0; only 1: ring_simplify in q0; only 1: discriminate; only 1: intros ?; only 1: destruct H; only 1: simpl in q0; only 1: ring_simplify in q0; only 1: discriminate).	2.482417	19
Coq.Reals.ConstructiveCauchyReals.inject_Q_one	600	1	synth with cache (only 1: reflexivity).	2.448893	10
Coq.Reals.ConstructiveCauchyReals.inject_Q_lt	600
Coq.Reals.ConstructiveCauchyReals.opp_inject_Q	600	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: destruct H; only 1: simpl in q0; only 1: ring_simplify in q0; only 1: discriminate; only 1: intros ?; only 1: destruct H; only 1: simpl in q0; only 1: ring_simplify in q0; only 1: discriminate).	2.616200	19
Coq.Reals.ConstructiveCauchyReals.lt_inject_Q	600
Coq.Reals.ConstructiveCauchyReals.le_inject_Q	600
Coq.Reals.ConstructiveCauchyReals.inject_Q_le	600
Coq.Reals.ConstructiveCauchyReals.inject_Z_plus	600
Coq.Reals.ConstructiveCauchyReals.opp_inject_Z	600
Coq.ZArith.Zgcd_alt.Zgcdn_pos	600
Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	600	1.0	synth with cache (only 1: intros; only 1: apply Zgcdn_pos).	4.303281	3
Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	600
Coq.ZArith.Zgcd_alt.fibonacci_pos	600
Coq.ZArith.Zgcd_alt.fibonacci_incr	600
Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	600
Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	600
Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	600
Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	600	0.0.0.0	synth with cache (only 1: destruct a; only 1: easy; only 1: easy; only 1: easy).	4.041433	4
Coq.ZArith.Zgcd_alt.Zgcdn_opp	600	0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	4.227557	30
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	600
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	600
Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	600	0.0.0.0	synth with cache (only 1: unfold Zgcd_alt; only 1: intros; only 1: apply Zgcdn_is_gcd; only 1: auto).	4.050609	4
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.In_In	600
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Subset_Included	600
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	600
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	600
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	600
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	600
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.union_Union	600
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.inter_Intersection	600
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.add_Add	600
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Add_Add	600
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.remove_Subtract	600
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	600
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	600
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Ens_to_MSet	600
Coq.ZArith.Zpow_facts.Zpower_pos_1_l	600
Coq.ZArith.Zpow_facts.Zpower_pos_0_l	600
Coq.ZArith.Zpow_facts.Zpower_pos_pos	600
Coq.ZArith.Zpow_facts.Zpower_le_monotone	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.pow_le_mono_r; only 1: easy; only 1: easy).	4.267111	4
Coq.ZArith.Zpow_facts.Zpower_lt_monotone	600
Coq.ZArith.Zpow_facts.Zpower_gt_1	600	0	synth with cache (only 1: apply Z.pow_gt_1).	4.326964	1
Coq.ZArith.Zpow_facts.Zmult_power	600	1.0	synth with cache (only 1: intros; only 1: apply Z.pow_mul_l).	4.524284	9
Coq.ZArith.Zpow_facts.Zpower_le_monotone3	600	0.0.0	synth with cache (only 1: intros; only 1: apply Z.pow_le_mono_l; only 1: easy).	4.319801	3
Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	600
Coq.ZArith.Zpow_facts.Zpower2_lt_lin	600	0.1.0.0	synth with cache (only 1: intros; only 1: apply Z.pow_gt_lin_r; only 1: reflexivity; only 1: auto).	4.410358	5
Coq.ZArith.Zpow_facts.Zpower2_le_lin	600	0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Z.lt_le_incl; only 1: apply Z.pow_gt_lin_r; only 1: reflexivity; only 1: auto).	4.417681	6
Coq.ZArith.Zpow_facts.Zpower2_Psize	600
Coq.ZArith.Zpow_facts.Zpower_mod	600
Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	600
Coq.ZArith.Zpow_facts.Zpow_mod_correct	600	0.0.0.2.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Zpow_mod_pos_correct; only 1: auto with zarith; only 1: simpl; only 1: trivial).	4.668917	45
Coq.ZArith.Zpow_facts.Zpower_divide	600
Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	600	0.0.0.0.1.0.0.0.0.1.0.0.1.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: pattern i; only 1: apply natlike_ind; only 1: simpl; only 1: apply rel_prime_sym; only 1: apply rel_prime_1; only 1: clear i H; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Z.pow_succ_r; only 1: apply rel_prime_mult; only 1: auto; only 1: auto; only 1: auto; only 1: auto with zarith).	4.767848	70
Coq.ZArith.Zpow_facts.rel_prime_Zpower	600	0.1.0.0.1.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply rel_prime_Zpower_r; only 1: trivial; only 1: apply rel_prime_sym; only 1: apply rel_prime_Zpower_r; only 1: trivial; only 1: apply rel_prime_sym; only 1: easy).	4.439070	30
Coq.ZArith.Zpow_facts.prime_power_prime	600
Coq.ZArith.Zpow_facts.Zdivide_power_2	600
Coq.ZArith.Zwf.wf_proof.Zwf_well_founded	600
Coq.ZArith.Zwf.wf_proof_up.Zwf_up_well_founded	600
Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.binary_value	600
Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.two_compl_value	600
Coq.ZArith.Zdigits.ENCODING_VALUE.Zmod2_twice	600
Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_binary	600
Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_two_compl	600
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_Sn	600	0.0	synth with cache (only 1: intros; only 1: auto).	4.039287	2
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn	600
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_pos	600
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.two_compl_value_Sn	600	0.0	synth with cache (only 1: intros; only 1: auto).	3.927606	2
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn	600
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn_z	600	0.0	synth with cache (only 1: intros; only 1: auto).	4.032654	2
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_div2_value	600
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Pdiv2	600
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zdiv2_two_power_nat	600
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn_z	600	0.0	synth with cache (only 1: intros; only 1: auto).	4.085461	2
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zeven_bit_value	600
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zodd_bit_value	600
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zge_minus_two_power_nat_S	600
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zlt_two_power_nat_S	600
Coq.ZArith.Zdigits.COHERENT_VALUE.binary_to_Z_to_binary	600
Coq.ZArith.Zdigits.COHERENT_VALUE.two_compl_to_Z_to_two_compl	600
Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_binary_to_Z	600
Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_two_compl_to_Z	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_eq	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_1	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_2	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_1	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_2	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.empty_mem	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_equal_empty	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_1	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_2	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_1	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_2	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_1	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_2	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_equal_add	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_mem	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_mem	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_mem	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_3	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_4	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_refl	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_sym	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_trans	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_equal	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_cardinal	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_refl	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_antisym	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_trans	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_equal	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_3	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_4	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_3	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_equal	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_3	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_equal	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_remove	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_add	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_cardinal	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_1	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_2	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_3	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_sym	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_equal	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_1	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_2	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_assoc	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_union_singleton	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_add	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_1	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_2	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_3	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_sym	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_equal	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_1	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_2	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_assoc	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_1	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_2	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_1	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_2	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_1	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_2	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_3	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset_equal	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_inter_singleton	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_empty	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_all	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.exclusive_set	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_empty	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_equal	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_add	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.add_fold	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_1	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_2	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_union	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_1	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_2	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_1	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_cardinal	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.Comp'	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_mem	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_filter	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.exists_filter	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_1	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_2	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_1	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_2	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_1	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_2	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.union_filter	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_union	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_1	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_2	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_3	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_4	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_exists	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.Comp'	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_1	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_2	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_3	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_4	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_plus	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_filter	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.fold_compat	600
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_compat	600
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	600
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Subset_Included	600
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	600
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	600
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	600
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	600
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	600
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.inter_Intersection	600
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.add_Add	600
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Add_Add	600
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	600
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	600
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	600
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Ens_to_FSet	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_In	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_MapsTo	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_alt	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_1	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_1	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_node_iff	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_leaf	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_leaf	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_node	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_node	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_left	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_right	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_left	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_right	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_not_in	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_trans	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_not_in	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_trans	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_bst	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_1	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_1	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_2	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_1	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_2	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_1	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_2	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_iff	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.in_find	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_iff	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.not_find_iff	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_find	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_mapsto_equiv	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_equiv	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_bst	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_in	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_bst	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_in	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_mapsto	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_find	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_in	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_bst	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_1	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_2	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_3	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_find	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_in	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_mapsto	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_bst	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_gt_tree	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_find	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_in	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_mapsto	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_bst	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_in	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_bst	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_1	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_2	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_3	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_in	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_bst	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_find	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_1	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_2	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_3	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_bst	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_lt_tree	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_gt_tree	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_find	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_in	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_bst	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_find	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_mapsto	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_mapsto	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_in	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_sort	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_sort	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_nodup	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_cardinal	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_cardinal	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_app	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_node	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv_aux	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_1	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.flatten_e_elements	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_1	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_IfEq	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_end_IfEq	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_more_IfEq	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_cont_IfEq	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_IfEq	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.Equivb_elements	600
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_Equivb	600
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_1	600
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_2	600
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_bst	600
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_1	600
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_2	600
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_bst	600
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_2	600
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_bst	600
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_find	600
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_2	600
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_bst	600
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_1	600
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_bst	600
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_1	600
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_2	600
Coq.FSets.FMapAVL.IntMake.Elt.MapsTo_1	600
Coq.FSets.FMapAVL.IntMake.Elt.mem_1	600
Coq.FSets.FMapAVL.IntMake.Elt.mem_2	600
Coq.FSets.FMapAVL.IntMake.Elt.empty_1	600
Coq.FSets.FMapAVL.IntMake.Elt.is_empty_1	600
Coq.FSets.FMapAVL.IntMake.Elt.is_empty_2	600
Coq.FSets.FMapAVL.IntMake.Elt.add_1	600
Coq.FSets.FMapAVL.IntMake.Elt.add_2	600
Coq.FSets.FMapAVL.IntMake.Elt.add_3	600
Coq.FSets.FMapAVL.IntMake.Elt.remove_1	600
Coq.FSets.FMapAVL.IntMake.Elt.remove_2	600
Coq.FSets.FMapAVL.IntMake.Elt.remove_3	600
Coq.FSets.FMapAVL.IntMake.Elt.find_1	600
Coq.FSets.FMapAVL.IntMake.Elt.find_2	600
Coq.FSets.FMapAVL.IntMake.Elt.fold_1	600
Coq.FSets.FMapAVL.IntMake.Elt.elements_1	600
Coq.FSets.FMapAVL.IntMake.Elt.elements_2	600
Coq.FSets.FMapAVL.IntMake.Elt.elements_3	600
Coq.FSets.FMapAVL.IntMake.Elt.elements_3w	600
Coq.FSets.FMapAVL.IntMake.Elt.cardinal_1	600
Coq.FSets.FMapAVL.IntMake.Elt.Equivb_Equivb	600
Coq.FSets.FMapAVL.IntMake.Elt.equal_1	600
Coq.FSets.FMapAVL.IntMake.Elt.equal_2	600
Coq.FSets.FMapAVL.IntMake.map_1	600
Coq.FSets.FMapAVL.IntMake.map_2	600
Coq.FSets.FMapAVL.IntMake.mapi_1	600
Coq.FSets.FMapAVL.IntMake.mapi_2	600
Coq.FSets.FMapAVL.IntMake.map2_1	600
Coq.FSets.FMapAVL.IntMake.map2_2	600
Coq.FSets.FMapAVL.IntMake_ord.cons_Cmp	600
Coq.FSets.FMapAVL.IntMake_ord.compare_end_Cmp	600
Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	600
Coq.FSets.FMapAVL.IntMake_ord.compare_cont_Cmp	600
Coq.FSets.FMapAVL.IntMake_ord.compare_Cmp	600
Coq.FSets.FMapAVL.IntMake_ord.compare	600
Coq.FSets.FMapAVL.IntMake_ord.eq_seq	600
Coq.FSets.FMapAVL.IntMake_ord.lt_slt	600
Coq.FSets.FMapAVL.IntMake_ord.eq_1	600
Coq.FSets.FMapAVL.IntMake_ord.eq_2	600
Coq.FSets.FMapAVL.IntMake_ord.eq_refl	600
Coq.FSets.FMapAVL.IntMake_ord.eq_sym	600
Coq.FSets.FMapAVL.IntMake_ord.eq_trans	600
Coq.FSets.FMapAVL.IntMake_ord.lt_trans	600
Coq.FSets.FMapAVL.IntMake_ord.lt_not_eq	600
Coq.FSets.FSetProperties.WProperties_fun.In_dec	600
Coq.FSets.FSetProperties.WProperties_fun.Add_Equal	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_refl	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_sym	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_trans	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_refl	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_trans	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_antisym	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_equal	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_empty	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_remove_3	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_diff	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_3	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_2	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.in_subset	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.double_inclusion	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_1	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_2	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_equal	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_add	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_equal	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Equal_remove	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_remove	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_add	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.singleton_equal_add	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_singleton_empty	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_sym	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_equal	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_1	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_2	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_assoc	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_union_singleton	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_add	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_1	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_2	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_1	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_2	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_3	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_4	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_5	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_1	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_2	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.not_in_union	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_sym	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_equal	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_1	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_2	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_assoc	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_1	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_2	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_1	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_2	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_1	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_2	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_1	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_2	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_3	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_1	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_2	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset_equal	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_diff_singleton	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_empty	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_all	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_add	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_remove	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Add	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Equal	600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add_2	600
Coq.FSets.FSetProperties.WProperties_fun.elements_Empty	600
Coq.FSets.FSetProperties.WProperties_fun.elements_empty	600
Coq.FSets.FSetProperties.WProperties_fun.of_list_1	600
Coq.FSets.FSetProperties.WProperties_fun.of_list_2	600
Coq.FSets.FSetProperties.WProperties_fun.of_list_3	600
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_spec_right	600
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec	600
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_bis	600
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_nodep	600
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_weak	600
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rel	600
Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction	600
Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction_bis	600
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_identity	600
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_0	600
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1	600
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_2	600
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1b	600
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_commutes	600
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_init	600
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_equal	600
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_empty	600
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_add	600
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.add_fold	600
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_1	600
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_2	600
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union_inter	600
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_diff_inter	600
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union	600
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_plus	600
Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	600
Coq.FSets.FSetProperties.WProperties_fun.cardinal_0	600
Coq.FSets.FSetProperties.WProperties_fun.cardinal_1	600
Coq.FSets.FSetProperties.WProperties_fun.cardinal_2	600
Coq.FSets.FSetProperties.WProperties_fun.cardinal_Empty	600
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	600
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2	600
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2b	600
Coq.FSets.FSetProperties.WProperties_fun.Equal_cardinal	600
Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	600
Coq.FSets.FSetProperties.WProperties_fun.empty_cardinal	600
Coq.FSets.FSetProperties.WProperties_fun.singleton_cardinal	600
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_cardinal	600
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	600
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	600
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal_lt	600
Coq.FSets.FSetProperties.WProperties_fun.union_inter_cardinal	600
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	600
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	600
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_1	600
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_2	600
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_1	600
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_2	600
Coq.FSets.FSetProperties.OrdProperties.sort_equivlistA_eqlistA	600
Coq.FSets.FSetProperties.OrdProperties.gtb_1	600
Coq.FSets.FSetProperties.OrdProperties.leb_1	600
Coq.FSets.FSetProperties.OrdProperties.gtb_compat	600
Coq.FSets.FSetProperties.OrdProperties.leb_compat	600
Coq.FSets.FSetProperties.OrdProperties.elements_split	600
Coq.FSets.FSetProperties.OrdProperties.elements_Add	600
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	600
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Below	600
Coq.FSets.FSetProperties.OrdProperties.set_induction_max	600
Coq.FSets.FSetProperties.OrdProperties.set_induction_min	600
Coq.FSets.FSetProperties.OrdProperties.fold_3	600
Coq.FSets.FSetProperties.OrdProperties.fold_4	600
Coq.FSets.FSetProperties.OrdProperties.FoldOpt.fold_equal	600
Coq.FSets.FSetProperties.OrdProperties.FoldOpt.add_fold	600
Coq.FSets.FSetProperties.OrdProperties.FoldOpt.remove_fold_2	600
Coq.FSets.FSetProperties.OrdProperties.choose_equal	600
Coq.QArith.Qcabs.Qred_abs	600	0.0.0.1.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: destruct Qnum; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct BinPosDef.Pos.ggcd; only 1: destruct p1; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct BinPosDef.Pos.ggcd; only 1: destruct p1; only 1: simpl; only 1: auto).	3.594001	34
Coq.QArith.Qcabs.Qcabs_canon	600	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Qred_abs; only 1: rewrite H; only 1: easy).	3.219518	4
Coq.QArith.Qcabs.Qcabs_case	600
Coq.QArith.Qcabs.Qcabs_pos	600
Coq.QArith.Qcabs.Qcabs_neg	600
Coq.QArith.Qcabs.Qcabs_nonneg	600	1	synth with cache (only 1: apply Qabs_nonneg).	3.189154	2
Coq.QArith.Qcabs.Qcabs_opp	600
Coq.QArith.Qcabs.Qcabs_triangle	600	0.0.0.0	synth with cache (only 1: Qc_unfolds; only 1: case Qred_abs; only 1: rewrite Qred_le; only 1: apply Qabs_triangle).	3.208958	4
Coq.QArith.Qcabs.Qcabs_Qcmult	600
Coq.QArith.Qcabs.Qcabs_Qcminus	600
Coq.QArith.Qcabs.Qcle_Qcabs	600	0	synth with cache (only 1: apply Qle_Qabs).	3.175827	1
Coq.QArith.Qcabs.Qcabs_triangle_reverse	600
Coq.QArith.Qcabs.Qcabs_Qcle_condition	600
Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	600
Coq.QArith.Qcabs.Qcabs_null	600
Coq.micromega.ZMicromega.eq_le_iff	600	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros; only 1: subst; only 1: compute; only 1: intuition congruence; only 1: intros; only 1: destruct H; only 1: apply Z.le_antisymm; only 1: auto; only 1: auto).	3.681103	19
Coq.micromega.ZMicromega.lt_le_iff	600
Coq.micromega.ZMicromega.le_0_iff	600	0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: apply Zle_minus_le_0; only 1: trivial; only 1: intros; only 1: apply Zle_0_minus_le; only 1: auto).	3.642390	7
Coq.micromega.ZMicromega.le_neg	600
Coq.micromega.ZMicromega.eq_cnf	600
Coq.micromega.ZMicromega.Zsor	600	2.0.0.1.0.0.0.0.0.0.0.1.0.0.0.3.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: constructor; only 1: apply Zsth; only 1: intros; only 1: subst; only 1: easy; only 1: intros; only 1: subst; only 1: easy; only 1: intros; only 1: Morphisms.f_equiv; only 1: easy; only 1: red; only 1: intuition Z.Private_Tac.order; only 1: intros; only 1: subst; only 1: easy; only 1: constructor; only 1: exact Z.add_0_l; only 1: intros ?; only 1: intros ?; only 1: destruct x; only 1: destruct y; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct y; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite Pos.add_comm; only 1: easy; only 1: simpl; only 1: trivial; only 1: destruct y; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite Pos.add_comm; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: nzinduct x; only 1: trivial; only 1: intros ?; only 1: Z.nzsimpl; only 1: rewrite Z.succ_inj_wd; only 1: easy; only 1: intros ?; only 1: destruct x; only 1: easy; only 1: easy; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: nzinduct x; only 1: Z.nzsimpl; only 1: easy; only 1: intros ?; only 1: Z.nzsimpl; only 1: rewrite Z.add_cancel_r; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: nzinduct x; only 1: Z.nzsimpl; only 1: easy; only 1: intros ?; only 1: Z.nzsimpl; only 1: rewrite Z.mul_add_distr_r; only 1: rewrite Z.add_cancel_r; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct z; only 1: rewrite Z.Private_BootStrap.mul_0_r; only 1: rewrite Z.Private_BootStrap.mul_0_r; only 1: rewrite Z.Private_BootStrap.mul_0_r; only 1: easy; only 1: apply Z.Private_BootStrap.mul_add_distr_pos; only 1: apply Z.Private_BootStrap.opp_inj; only 1: rewrite Z.Private_BootStrap.opp_add_distr; only 1: rewrite <- Z.Private_BootStrap.mul_opp_r; only 1: rewrite <- Z.Private_BootStrap.mul_opp_r; only 1: rewrite <- Z.Private_BootStrap.mul_opp_r; only 1: apply Z.Private_BootStrap.mul_add_distr_pos; only 1: trivial; only 1: intros ?; only 1: destruct x; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite Z.pos_sub_spec; only 1: rewrite Pos.compare_refl; only 1: easy; only 1: simpl; only 1: rewrite Z.pos_sub_spec; only 1: rewrite Pos.compare_refl; only 1: easy; only 1: intros ?; only 1: apply Z.lt_eq_cases; only 1: right; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: apply Z.le_antisymm; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Z.le_trans; only 1: intuition Z.order; only 1: intros ?; only 1: intros ?; only 1: apply Z.lt_trichotomy; only 1: intros; only 1: rewrite <- Z.add_le_mono_l; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Z.mul_pos_pos; only 1: easy; only 1: easy; only 1: discriminate).	38.196506	2452
Coq.micromega.ZMicromega.ZSORaddon	600	0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: constructor; only 1: trivial; only 1: easy; only 1: intros; only 1: easy; only 1: intros; only 1: reflexivity; only 1: intros; only 1: easy; only 1: intros; only 1: easy; only 1: intros; only 1: apply Zeq_bool_eq; only 1: auto; only 1: constructor; only 1: reflexivity; only 1: intros ?; only 1: intros ?; only 1: apply Zeq_bool_neq; only 1: apply Zle_bool_imp_le).	4.021219	46
Coq.micromega.ZMicromega.ZNpower	600
Coq.micromega.ZMicromega.Zeval_expr_compat	600
Coq.micromega.ZMicromega.Zeval_formula_compat'	600
Coq.micromega.ZMicromega.Zeval_nformula_dec	600
Coq.micromega.ZMicromega.ZWeakChecker_sound	600
Coq.micromega.ZMicromega.eval_pol_sub	600
Coq.micromega.ZMicromega.eval_pol_add	600
Coq.micromega.ZMicromega.eval_pol_mul	600
Coq.micromega.ZMicromega.eval_pol_norm	600
Coq.micromega.ZMicromega.Zunsat_sound	600
Coq.micromega.ZMicromega.xnnormalise_correct	600
Coq.micromega.ZMicromega.eval_pol_Pc	600	0	synth with cache (only 1: reflexivity).	3.748027	1
Coq.micromega.ZMicromega.xnormalise_correct	600
Coq.micromega.ZMicromega.cnf_of_list_correct	600
Coq.micromega.ZMicromega.normalise_correct	600
Coq.micromega.ZMicromega.xnegate_correct	600
Coq.micromega.ZMicromega.negate_correct	600
Coq.micromega.ZMicromega.Zdivide_ceiling	600
Coq.micromega.ZMicromega.narrow_interval_lower_bound	600
Coq.micromega.ZMicromega.isZ0_0	600
Coq.micromega.ZMicromega.isZ0_n0	600
Coq.micromega.ZMicromega.Zdiv_pol_correct	600
Coq.micromega.ZMicromega.Zgcd_pol_ge	600
Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction H; only 1: constructor; only 1: apply Z.divide_trans with (1 := H0); only 1: assumption; only 1: constructor; only 1: auto; only 1: constructor; only 1: auto; only 1: auto).	3.581382	18
Coq.micromega.ZMicromega.Zdivide_pol_one	600
Coq.micromega.ZMicromega.Zgcd_minus	600
Coq.micromega.ZMicromega.Zdivide_pol_sub	600
Coq.micromega.ZMicromega.Zdivide_pol_sub_0	600
Coq.micromega.ZMicromega.Zgcd_pol_div	600
Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	600
Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	600
Coq.micromega.ZMicromega.pos_le_add	600
Coq.micromega.ZMicromega.max_var_le	600
Coq.micromega.ZMicromega.max_var_correct	600
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux	600
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux'	600
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_correct_aux	600
Coq.micromega.ZMicromega.max_var_nformalae_correct	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply max_var_nformulae_correct_aux).	3.338724	5
Coq.micromega.ZMicromega.in_bdepth	600
Coq.micromega.ZMicromega.eval_Psatz_sound	600
Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	600
Coq.micromega.ZMicromega.cutting_plane_sound	600
Coq.micromega.ZMicromega.genCuttingPlaneNone	600
Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	600	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite xnnormalise_correct; only 1: simpl; only 1: auto).	3.203830	4
Coq.micromega.ZMicromega.eval_nformula_bound_var	600	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite xnnormalise_correct; only 1: simpl; only 1: auto).	3.195620	4
Coq.micromega.ZMicromega.agree_env_subset	600
Coq.micromega.ZMicromega.agree_env_jump	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold agree_env; only 1: intros ?; only 1: intros; only 1: unfold Env.jump; only 1: apply H; only 1: apply Pos.add_le_mono_r; only 1: auto).	3.163903	8
Coq.micromega.ZMicromega.agree_env_tail	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Env.tail; only 1: apply agree_env_jump; only 1: rewrite <- Pos.add_1_r in H; only 1: apply H).	3.174670	5
Coq.micromega.ZMicromega.max_var_acc	600
Coq.micromega.ZMicromega.agree_env_eval_nformula	600
Coq.micromega.ZMicromega.agree_env_eval_nformulae	600
Coq.micromega.ZMicromega.eq_true_iff_eq	600
Coq.micromega.ZMicromega.ZChecker_sound	600
Coq.micromega.ZMicromega.ZTautoChecker_sound	600
Coq.setoid_ring.Ncring_polynom.MakeRingPol.cO	600
Coq.setoid_ring.Ncring_polynom.MakeRingPol.cI	600
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Peq_ok	600
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi0	600
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi1	600
Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkPX_ok	600
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddCl_ok	600
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_aux_ok	600
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_ok	600
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Popp_ok	600
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddXPX	600
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok2	600
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Padd_ok	600
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok	600
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psub_ok	600
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pmul_ok	600
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psquare_ok	600
Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkX_ok	600
Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_pos_ok	600
Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_N_ok	600
Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	600
Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	600
Coq.setoid_ring.Ncring_polynom.MakeRingPol.norm_subst_ok	600
Coq.setoid_ring.Ncring_polynom.MakeRingPol.ring_correct	600
Coq.MSets.MSetProperties.WPropertiesOn.In_dec	600
Coq.MSets.MSetProperties.WPropertiesOn.Add_Equal	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_refl	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_sym	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_trans	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_refl	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_trans	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_antisym	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_equal	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_empty	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_remove_3	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_diff	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_3	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_2	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.in_subset	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.double_inclusion	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_1	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_2	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_equal	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_add	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_equal	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Equal_remove	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_remove	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_add	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.singleton_equal_add	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_singleton_empty	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_sym	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_equal	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_1	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_2	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_assoc	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_union_singleton	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_add	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_1	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_2	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_1	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_2	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_3	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_4	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_5	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_1	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_2	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.not_in_union	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_sym	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_equal	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_1	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_2	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_assoc	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_1	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_2	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_1	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_2	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_1	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_2	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_1	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_2	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_3	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_1	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_2	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset_equal	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_diff_singleton	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_empty	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_all	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_add	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_remove	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Add	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Equal	600
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add_2	600
Coq.MSets.MSetProperties.WPropertiesOn.elements_Empty	600
Coq.MSets.MSetProperties.WPropertiesOn.elements_empty	600
Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	600
Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	600
Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	600
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_spec_right	600
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec	600
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_bis	600
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_nodep	600
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_weak	600
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rel	600
Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction	600
Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction_bis	600
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_identity	600
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_0	600
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1	600
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_2	600
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1b	600
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_commutes	600
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_init	600
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_equal	600
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_empty	600
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_add	600
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.add_fold	600
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_1	600
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_2	600
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union_inter	600
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_diff_inter	600
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union	600
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_plus	600
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	600
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_0	600
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_1	600
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	600
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_Empty	600
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_1	600
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	600
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2b	600
Coq.MSets.MSetProperties.WPropertiesOn.Equal_cardinal	600
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	600
Coq.MSets.MSetProperties.WPropertiesOn.empty_cardinal	600
Coq.MSets.MSetProperties.WPropertiesOn.singleton_cardinal	600
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_cardinal	600
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal	600
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal	600
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	600
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	600
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_inter	600
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	600
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_1	600
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_2	600
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_1	600
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_2	600
Coq.MSets.MSetProperties.OrdProperties.sort_equivlistA_eqlistA	600
Coq.MSets.MSetProperties.OrdProperties.gtb_1	600
Coq.MSets.MSetProperties.OrdProperties.leb_1	600
Coq.MSets.MSetProperties.OrdProperties.gtb_compat	600
Coq.MSets.MSetProperties.OrdProperties.leb_compat	600
Coq.MSets.MSetProperties.OrdProperties.elements_split	600
Coq.MSets.MSetProperties.OrdProperties.elements_Add	600
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	600
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	600
Coq.MSets.MSetProperties.OrdProperties.set_induction_max	600
Coq.MSets.MSetProperties.OrdProperties.set_induction_min	600
Coq.MSets.MSetProperties.OrdProperties.fold_3	600
Coq.MSets.MSetProperties.OrdProperties.fold_4	600
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.fold_equal	600
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.add_fold	600
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.remove_fold_2	600
Coq.MSets.MSetProperties.OrdProperties.choose_equal	600
Coq.micromega.QMicromega.Qsor	600
Coq.micromega.QMicromega.QSORaddon	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0	synth with cache (only 1: constructor; only 1: constructor; only 1: reflexivity; only 1: reflexivity; only 1: intros; only 1: reflexivity; only 1: intros; only 1: reflexivity; only 1: intros; only 1: reflexivity; only 1: intros; only 1: reflexivity; only 1: intros; only 1: apply Qeq_bool_eq; only 1: auto; only 1: constructor; only 1: reflexivity; only 1: intros ?; only 1: intros ?; only 1: rewrite <- Qeq_bool_iff; only 1: intros ?; only 1: intropattern subst -> H; only 1: easy; only 1: apply Qle_bool_imp_le).	4.678414	72
Coq.micromega.QMicromega.Qeval_expr_simpl	600
Coq.micromega.QMicromega.QNpower	600
Coq.micromega.QMicromega.Qeval_expr_compat	600
Coq.micromega.QMicromega.Qeval_formula_compat	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Qeval_formula; only 1: destruct f; only 1: rewrite Qeval_expr_compat; only 1: rewrite Qeval_expr_compat; only 1: unfold Qeval_formula'; only 1: unfold Qeval_expr'; only 1: split; only 1: destruct Fop; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: destruct Fop; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	4.904665	90
Coq.micromega.QMicromega.Qeval_nformula_dec	600
Coq.micromega.QMicromega.QWeakChecker_sound	600
Coq.micromega.QMicromega.QTautoChecker_sound	600
Coq.QArith.Qabs.Qabs_case	600
Coq.QArith.Qabs.Qabs_wd_Proper	600
Coq.QArith.Qabs.Qabs_pos	600
Coq.QArith.Qabs.Qabs_neg	600
Coq.QArith.Qabs.Qabs_nonneg	600	0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Qabs_case; only 1: auto; only 1: apply Qopp_le_compat).	3.307672	4
Coq.QArith.Qabs.Zabs_Qabs	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct n; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	3.242687	5
Coq.QArith.Qabs.Qabs_opp	600
Coq.QArith.Qabs.Qabs_triangle	600
Coq.QArith.Qabs.Qabs_Qmult	600	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct a; only 1: intros ?; only 1: destruct b; only 1: simpl; only 1: rewrite Z.abs_mul; only 1: reflexivity).	3.295439	7
Coq.QArith.Qabs.Qabs_Qinv	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct q; only 1: simpl; only 1: unfold Qinv; only 1: case_eq Qnum; only 1: intros; only 1: simpl in *; only 1: apply Qeq_refl; only 1: intros; only 1: simpl in *; only 1: apply Qeq_refl; only 1: intros; only 1: simpl in *; only 1: apply Qeq_refl).	3.511380	22
Coq.QArith.Qabs.Qabs_Qminus	600	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Qminus; only 1: unfold Qopp; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: rewrite <- Z.abs_opp; only 1: f_equal; only 1: f_equal; only 1: ring).	3.477864	8
Coq.QArith.Qabs.Qle_Qabs	600
Coq.QArith.Qabs.Qabs_triangle_reverse	600
Coq.QArith.Qabs.Qabs_Qle_condition	600
Coq.QArith.Qabs.Qabs_diff_Qle_condition	600
Coq.Reals.ConstructiveReals.CRlt_asym	600
Coq.Reals.ConstructiveReals.CRlt_proper	600
Coq.Reals.ConstructiveReals.CRle_refl	600
Coq.Reals.ConstructiveReals.CRle_lt_trans	600
Coq.Reals.ConstructiveReals.CRlt_le_trans	600
Coq.Reals.ConstructiveReals.CRle_trans	600
Coq.Reals.ConstructiveReals.CRlt_trans	600
Coq.Reals.ConstructiveReals.CRlt_trans_flip	600
Coq.Reals.ConstructiveReals.CReq_refl	600	0.0.0	synth with cache (only 1: split; only 1: apply CRle_refl; only 1: apply CRle_refl).	3.309852	3
Coq.Reals.ConstructiveReals.CReq_sym	600	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: split; only 1: intros ?; only 1: contradiction; only 1: intros ?; only 1: contradiction).	3.351650	7
Coq.Reals.ConstructiveReals.CReq_trans	600
Coq.Reals.ConstructiveReals.CR_setoid	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: apply CReq_refl; only 1: intros ?; only 1: intros ?; only 1: apply CReq_sym; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply CReq_trans).	3.478825	18
Coq.Reals.ConstructiveReals.CRplus_0_r	600
Coq.Reals.ConstructiveReals.CRmult_1_r	600
Coq.Reals.ConstructiveReals.CRplus_opp_l	600
Coq.Reals.ConstructiveReals.CRplus_lt_compat_r	600
Coq.Reals.ConstructiveReals.CRplus_lt_reg_r	600
Coq.Reals.ConstructiveReals.CRplus_le_compat_l	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: apply CRplus_lt_reg_l in H0; only 1: apply H; only 1: exact H0).	3.419041	5
Coq.Reals.ConstructiveReals.CRplus_le_compat_r	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: apply CRplus_lt_reg_r in H0; only 1: apply H; only 1: exact H0).	3.338164	5
Coq.Reals.ConstructiveReals.CRplus_le_reg_l	600	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: apply H; only 1: clear H; only 1: apply CRplus_lt_compat_l; only 1: exact H0).	3.359766	6
Coq.Reals.ConstructiveReals.CRplus_le_reg_r	600	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: apply H; only 1: clear H; only 1: apply CRplus_lt_compat_r; only 1: exact H0).	3.425479	6
Coq.Reals.ConstructiveReals.CRplus_lt_le_compat	600
Coq.Reals.ConstructiveReals.CRplus_eq_reg_l	600
Coq.Reals.ConstructiveReals.CRplus_eq_reg_r	600
Coq.Reals.ConstructiveReals.CRopp_involutive	600
Coq.Reals.ConstructiveReals.CRopp_gt_lt_contravar	600
Coq.Reals.ConstructiveReals.CRopp_lt_cancel	600
Coq.Reals.ConstructiveReals.CRopp_plus_distr	600
Coq.Reals.ConstructiveReals.CRmult_plus_distr_l	600
Coq.Reals.ConstructiveReals.CRzero_double	600
Coq.Reals.ConstructiveReals.CRmult_0_r	600
Coq.Reals.ConstructiveReals.CRopp_mult_distr_r	600
Coq.Reals.ConstructiveReals.CRopp_mult_distr_l	600
Coq.Reals.ConstructiveReals.CRmult_lt_compat_r	600
Coq.Reals.ConstructiveReals.CRinv_r	600
Coq.Reals.ConstructiveReals.CRmult_lt_reg_r	600
Coq.Reals.ConstructiveReals.CRmult_lt_reg_l	600
Coq.Reals.ConstructiveReals.CRmult_le_compat_l	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: apply CRmult_lt_reg_l in H1; only 1: contradiction; only 1: exact H).	3.597930	5
Coq.Reals.ConstructiveReals.CRmult_le_compat_r	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: apply CRmult_lt_reg_r in H1; only 1: contradiction; only 1: exact H).	3.555732	5
Coq.Reals.ConstructiveReals.CRmult_eq_reg_r	600
Coq.Reals.ConstructiveReals.CR_of_Q_proper	600
Coq.Reals.ConstructiveReals.CR_of_Q_zero	600
Coq.Reals.ConstructiveReals.CR_of_Q_opp	600
Coq.Reals.ConstructiveReals.CR_of_Q_le	600
Coq.Reals.ConstructiveReals.CR_of_Q_pos	600
Coq.Reals.ConstructiveReals.CR_cv_above_rat	600
Coq.Reals.ConstructiveReals.CR_cv_below_rat	600
Coq.Reals.ConstructiveReals.CR_cv_const	600
Coq.QArith.Qcanon.Qred_identity	600
Coq.QArith.Qcanon.Qred_identity2	600
Coq.QArith.Qcanon.Qred_iff	600	0.0.1.0.0.1.0	synth with cache (only 1: split; only 1: intros; only 1: apply Qred_identity2; only 1: auto; only 1: intros; only 1: apply Qred_identity; only 1: auto).	3.508430	38
Coq.QArith.Qcanon.Qc_is_canon	600
Coq.QArith.Qcanon.Qc_decomp	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply Qc_is_canon; only 1: rewrite H; only 1: easy).	3.248825	4
Coq.QArith.Qcanon.Qred_involutive	600	0.0.0	synth with cache (only 1: intros; only 1: apply Qred_complete; only 1: apply Qred_correct).	3.292973	3
Coq.QArith.Qcanon.Q2Qc_eq_iff	600
Coq.QArith.Qcanon.Qceq_alt	600	0.0.0.1.0.0.0.0	synth with cache (only 1: unfold Qccompare; only 1: intros; only 1: rewrite <- Qeq_alt; only 1: split; only 1: intros ?; only 1: intropattern subst <- H; only 1: easy; only 1: auto).	3.306608	16
Coq.QArith.Qcanon.Qclt_alt	600
Coq.QArith.Qcanon.Qcgt_alt	600
Coq.QArith.Qcanon.Qcle_alt	600
Coq.QArith.Qcanon.Qcge_alt	600
Coq.QArith.Qcanon.Qc_eq_dec	600
Coq.QArith.Qcanon.Q_apart_0_1	600	0.0.0	synth with cache (only 1: unfold Q2Qc; only 1: intros ?; only 1: discriminate H).	3.242598	3
Coq.QArith.Qcanon.Qcplus_assoc	600
Coq.QArith.Qcanon.Qcplus_0_l	600	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qplus_0_l).	3.213319	3
Coq.QArith.Qcanon.Qcplus_0_r	600	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qplus_0_r).	3.212220	3
Coq.QArith.Qcanon.Qcplus_comm	600	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qplus_comm).	3.245414	3
Coq.QArith.Qcanon.Qcopp_involutive	600	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qopp_involutive).	3.287100	3
Coq.QArith.Qcanon.Qcplus_opp_r	600	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qplus_opp_r).	3.293335	3
Coq.QArith.Qcanon.Qcmult_assoc	600	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qmult_assoc).	3.185059	3
Coq.QArith.Qcanon.Qcmult_0_l	600	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: split).	3.490512	3
Coq.QArith.Qcanon.Qcmult_0_r	600	0.0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: split).	3.359004	4
Coq.QArith.Qcanon.Qcmult_1_l	600	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qmult_1_l).	3.456410	3
Coq.QArith.Qcanon.Qcmult_1_r	600	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qmult_1_r).	3.422214	3
Coq.QArith.Qcanon.Qcmult_comm	600	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qmult_comm).	3.359458	3
Coq.QArith.Qcanon.Qcmult_plus_distr_r	600	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qmult_plus_distr_r).	3.348869	3
Coq.QArith.Qcanon.Qcmult_plus_distr_l	600	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qmult_plus_distr_l).	3.390721	3
Coq.QArith.Qcanon.Qcmult_integral	600
Coq.QArith.Qcanon.Qcmult_integral_l	600
Coq.QArith.Qcanon.Qcmult_inv_r	600	0.0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qmult_inv_r; only 1: auto).	3.403421	4
Coq.QArith.Qcanon.Qcmult_inv_l	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Qcmult_comm; only 1: qc; only 1: apply Qmult_inv_r; only 1: auto).	3.407642	5
Coq.QArith.Qcanon.Qcinv_mult_distr	600	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qinv_mult_distr).	3.401220	3
Coq.QArith.Qcanon.Qcdiv_mult_l	600	0.1.0.0.0.0	synth with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_inv_r; only 1: apply Qcmult_1_r; only 1: auto).	3.360305	7
Coq.QArith.Qcanon.Qcmult_div_r	600	0.1.0.0.0.0.0.0	synth with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite Qcmult_assoc; only 1: rewrite Qcmult_comm; only 1: rewrite Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_l; only 1: auto).	3.572469	17
Coq.QArith.Qcanon.Qcle_refl	600	1.0.0	synth with cache (only 1: unfold Qcle; only 1: intros; only 1: apply Qle_refl).	3.437444	4
Coq.QArith.Qcanon.Qcle_antisym	600	0.0.0.1.0.0	synth with cache (only 1: unfold Qcle; only 1: intros; only 1: apply Qc_is_canon; only 1: apply Qle_antisym; only 1: auto; only 1: auto).	3.543185	13
Coq.QArith.Qcanon.Qcle_trans	600
Coq.QArith.Qcanon.Qclt_not_eq	600
Coq.QArith.Qcanon.Qclt_le_weak	600	0.0.0.0.0	synth with cache (only 1: unfold Qcle; only 1: unfold Qclt; only 1: intros; only 1: apply Qlt_le_weak; only 1: auto).	3.439162	5
Coq.QArith.Qcanon.Qcle_lt_trans	600
Coq.QArith.Qcanon.Qclt_le_trans	600
Coq.QArith.Qcanon.Qclt_trans	600
Coq.QArith.Qcanon.Qcnot_lt_le	600	0.0.0.0.0	synth with cache (only 1: unfold Qcle; only 1: unfold Qclt; only 1: intros; only 1: apply Qnot_lt_le; only 1: auto).	3.423485	5
Coq.QArith.Qcanon.Qcnot_le_lt	600	0.0.0.0.0	synth with cache (only 1: unfold Qcle; only 1: unfold Qclt; only 1: intros; only 1: apply Qnot_le_lt; only 1: auto).	3.402676	5
Coq.QArith.Qcanon.Qclt_not_le	600	0.0.0.0.0	synth with cache (only 1: unfold Qcle; only 1: unfold Qclt; only 1: intros; only 1: apply Qlt_not_le; only 1: auto).	3.382816	5
Coq.QArith.Qcanon.Qcle_not_lt	600	0.0.0.0.0	synth with cache (only 1: unfold Qcle; only 1: unfold Qclt; only 1: intros; only 1: apply Qle_not_lt; only 1: auto).	3.402363	5
Coq.QArith.Qcanon.Qcle_lt_or_eq	600
Coq.QArith.Qcanon.Qc_dec	600
Coq.QArith.Qcanon.Qclt_le_dec	600	0.0.0.0	synth with cache (only 1: unfold Qclt; only 1: unfold Qcle; only 1: intros; only 1: apply Qlt_le_dec).	3.434633	4
Coq.QArith.Qcanon.Qcopp_le_compat	600	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Qcle; only 1: unfold Qcopp; only 1: intros; only 1: simpl in *; only 1: rewrite Qred_correct; only 1: rewrite Qred_correct; only 1: apply Qopp_le_compat; only 1: auto).	3.478752	8
Coq.QArith.Qcanon.Qcle_minus_iff	600	0.0.0.0.0.1.0	synth with cache (only 1: unfold Qcle; only 1: intros; only 1: simpl in *; only 1: rewrite Qred_correct; only 1: rewrite Qred_correct; only 1: rewrite Qred_correct; only 1: apply Qle_minus_iff).	3.521286	13
Coq.QArith.Qcanon.Qclt_minus_iff	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Qclt; only 1: unfold Qcplus; only 1: unfold Qcopp; only 1: intros; only 1: simpl in *; only 1: rewrite Qred_correct; only 1: rewrite Qred_correct; only 1: rewrite Qred_correct; only 1: apply Qlt_minus_iff).	3.579476	17
Coq.QArith.Qcanon.Qcplus_le_compat	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Qcplus; only 1: unfold Qcle; only 1: intros; only 1: simpl in *; only 1: rewrite Qred_correct; only 1: rewrite Qred_correct; only 1: apply Qplus_le_compat; only 1: auto; only 1: auto).	3.670101	17
Coq.QArith.Qcanon.Qcmult_le_compat_r	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Qcmult; only 1: unfold Qcle; only 1: intros; only 1: simpl in *; only 1: rewrite Qred_correct; only 1: rewrite Qred_correct; only 1: apply Qmult_le_compat_r; only 1: auto; only 1: auto).	3.626623	17
Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	600
Coq.QArith.Qcanon.Qcmult_lt_compat_r	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Qcmult; only 1: unfold Qclt; only 1: intros; only 1: simpl in *; only 1: rewrite Qred_correct in *; only 1: rewrite Qred_correct in *; only 1: eapply Qmult_lt_compat_r; only 1: eauto; only 1: eauto).	3.444213	17
Coq.QArith.Qcanon.Qcpower_1	600
Coq.QArith.Qcanon.Qcpower_0	600
Coq.QArith.Qcanon.Qcpower_pos	600
Coq.QArith.Qcanon.Qc_eq_bool_correct	600	0.0.0.2.1.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Qc_eq_bool; only 1: case Qc_eq_dec; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: clear n; only 1: inversion H).	3.550552	39
Coq.QArith.Qcanon.Qcrt	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: intros; only 1: qc; only 1: apply Qplus_0_l; only 1: intros; only 1: qc; only 1: apply Qplus_comm; only 1: intros; only 1: qc; only 1: apply Qplus_assoc; only 1: intros; only 1: qc; only 1: apply Qmult_1_l; only 1: intros; only 1: qc; only 1: apply Qmult_comm; only 1: intros; only 1: qc; only 1: apply Qmult_assoc; only 1: intros; only 1: qc; only 1: apply Qmult_plus_distr_l; only 1: reflexivity; only 1: intros; only 1: qc; only 1: apply Qplus_opp_r).	3.913787	50
Coq.QArith.Qcanon.Qcft	600	1.0.0.0.0.1.0	synth with cache (only 1: constructor; only 1: exact Qcrt; only 1: unfold Q2Qc; only 1: intros ?; only 1: discriminate H; only 1: reflexivity; only 1: exact Qcmult_inv_l).	3.535485	37
Coq.QArith.Qcanon.test_field	600	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: auto).	3.233247	3
Coq.QArith.Qround.Qopp_lt_compat	600	0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct p; only 1: intros ?; only 1: destruct q; only 1: unfold Qlt; only 1: simpl; only 1: rewrite Z.mul_opp_l; only 1: rewrite Z.mul_opp_l; only 1: apply Z.opp_lt_mono).	3.226998	17
Coq.QArith.Qround.Qfloor_Z	600	0.1.0.0	synth with cache (only 1: intros ?; only 1: simpl; only 1: zero_or_not z; only 1: apply Z.div_1_r).	3.279686	10
Coq.QArith.Qround.Qceiling_Z	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold Qceiling; only 1: simpl; only 1: rewrite Z.div_1_r; only 1: apply Z.opp_involutive).	3.142027	5
Coq.QArith.Qround.Qfloor_le	600
Coq.QArith.Qround.Qle_ceiling	600
Coq.QArith.Qround.Qle_floor_ceiling	600	0	synth with cache (only 1: eauto with qarith).	3.246194	1
Coq.QArith.Qround.Qlt_floor	600
Coq.QArith.Qround.Qceiling_lt	600
Coq.QArith.Qround.Qfloor_resp_le	600
Coq.QArith.Qround.Qceiling_resp_le	600	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Qceiling; only 1: rewrite <- Z.opp_le_mono; only 1: auto with qarith).	3.120257	6
Coq.QArith.Qround.Qfloor_comp_Proper	600	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Z.le_antisymm; only 1: auto with *; only 1: symmetry in H; only 1: auto with *).	3.327933	7
Coq.QArith.Qround.Qceiling_comp_Proper	600	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Z.le_antisymm; only 1: auto with *; only 1: symmetry in H; only 1: auto with *).	3.329125	7
Coq.QArith.Qround.Zdiv_Qdiv	600
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_push	600
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_pull	600
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.eq_refl_iff	600
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_In	600
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_eq	600
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_1	600
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_2	600
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_1	600
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_2	600
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	600
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_add_In	600
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_Subset_add_remove	600
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	600
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	600
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_conj	600
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	600
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_set_ops_1	600
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.eq_chain_test	600
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	600
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_1	600
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_2	600
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_baydemir	600
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_push	600
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_pull	600
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.eq_refl_iff	600
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_In	600
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_eq	600
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_1	600
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_2	600
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_1	600
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_2	600
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_In_singleton	600
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	600
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_Subset_add_remove	600
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_disjunction	600
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_disj	600
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	600
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	600
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	600
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.eq_chain_test	600
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_too_complex	600
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_1	600
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	600
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_baydemir	600
Coq.FSets.FMapFacts.WFacts_fun.eq_bool_alt	600	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	3.453420	5
Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	600	0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: subst; only 1: split; only 1: auto; only 1: auto; only 1: intros; only 1: destruct o; only 1: destruct o'; only 1: rewrite H; only 1: auto; only 1: symmetry; only 1: rewrite <- H; only 1: auto; only 1: destruct o'; only 1: rewrite H; only 1: auto; only 1: auto).	4.301031	90
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_fun	600
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_iff	600
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.MapsTo_iff	600
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mem_in_iff	600
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_mem_in_iff	600
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_dec	600
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.find_mapsto_iff	600
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_find_in_iff	600
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.in_find_iff	600
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.equal_iff	600
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_mapsto_iff	600
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_in_iff	600
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.is_empty_iff	600
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_mapsto_iff	600
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_in_iff	600
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_mapsto_iff	600
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_in_iff	600
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_mapsto_iff	600
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_in_iff	600
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_mapsto_iff	600
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_in_iff	600
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_mapsto_iff	600
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_in_iff	600
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_mapsto_iff	600
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_in_iff	600
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_in_iff	600
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_inv	600
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_1bis	600
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_mapsto_iff	600
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_find_b	600
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_b	600
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.find_o	600
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_o	600
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_a	600
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_o	600
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_o	600
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_o	600
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_b	600
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_b	600
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_b	600
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_o	600
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_o	600
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_o	600
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_b	600
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_b	600
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_b	600
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_o	600
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_b	600
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_b	600
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_o	600
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map2_1bis	600
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_o	600
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_b	600
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_mapsto_iff	600
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equiv	600
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Cmp.Equiv_Equivb	600
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb	600
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb_eqdec	600
Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	600
Coq.FSets.FMapFacts.WFacts_fun.Equal_sym	600
Coq.FSets.FMapFacts.WFacts_fun.Equal_trans	600
Coq.FSets.FMapFacts.WFacts_fun.Equal_ST	600
Coq.FSets.FMapFacts.WFacts_fun.In_m_Proper	600
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_m_Proper	600
Coq.FSets.FMapFacts.WFacts_fun.Empty_m_Proper	600
Coq.FSets.FMapFacts.WFacts_fun.is_empty_m_Proper	600
Coq.FSets.FMapFacts.WFacts_fun.mem_m_Proper	600
Coq.FSets.FMapFacts.WFacts_fun.find_m_Proper	600
Coq.FSets.FMapFacts.WFacts_fun.add_m_Proper	600
Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	600
Coq.FSets.FMapFacts.WFacts_fun.map_m_Proper	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.eqk_equiv	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.eqke_equiv	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.InA_eqke_eqk	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.NoDupA_eqk_eqke	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.findA_rev	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_Empty	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_empty	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1b	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_2	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_3	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_spec_right	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_bis	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_nodep	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_weak	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rel	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction_bis	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_identity	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_init	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Empty	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_commutes	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal2	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Add	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_add	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_fold	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_Empty	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.Equal_cardinal	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_1	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_2	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_1	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2b	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.filter_iff	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.for_all_iff	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.exists_iff	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_alt	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_1	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_2	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_Partition	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_In	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_sym	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_sym	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Empty	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Add	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_fold	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_cardinal	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_partition	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_mapsto_iff	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_dec	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_in_iff	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_mapsto_iff	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_in_iff	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_mapsto_iff	600
Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_in_iff	600
Coq.FSets.FMapFacts.WProperties_fun.cardinal_m_Proper	600
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	600
Coq.FSets.FMapFacts.WProperties_fun.Partition_m_Proper	600
Coq.FSets.FMapFacts.WProperties_fun.update_m_Proper	600
Coq.FSets.FMapFacts.WProperties_fun.restrict_m_Proper	600
Coq.FSets.FMapFacts.WProperties_fun.diff_m_Proper	600
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.sort_equivlistA_eqlistA	600
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_1	600
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_1	600
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_compat	600
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_compat	600
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_split	600
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add	600
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Above	600
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Below	600
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Equal_eqlistA	600
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Above	600
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_MapsTo	600
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Empty	600
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Below	600
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_MapsTo	600
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Empty	600
Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_max	600
Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_min	600
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Equal	600
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Above	600
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Below	600
Coq.FSets.FMapPositive.append_assoc_0	600
Coq.FSets.FMapPositive.append_assoc_1	600
Coq.FSets.FMapPositive.append_neutral_r	600
Coq.FSets.FMapPositive.append_neutral_l	600	0.0	synth with cache (only 1: simpl; only 1: reflexivity).	3.496223	2
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gempty	600
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gss	600
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gleaf	600
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gso	600
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.rleaf	600
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.grs	600
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gro	600
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_correct	600
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_correct	600
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xfind_left	600
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ii	600
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_io	600
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oo	600
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oi	600
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ih	600
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oh	600
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_hi	600
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ho	600
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.find_xfind_h	600
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_complete	600
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_complete	600
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.cardinal_1	600
Coq.FSets.FMapPositive.PositiveMap.A.mem_find	600
Coq.FSets.FMapPositive.PositiveMap.A.Empty_alt	600
Coq.FSets.FMapPositive.PositiveMap.A.Empty_Node	600
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_1	600
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_2	600
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.MapsTo_1	600
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_1	600
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_2	600
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.empty_1	600
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_1	600
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_2	600
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_1	600
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_2	600
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_3	600
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_1	600
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_2	600
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_3	600
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_1	600
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_2	600
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_1	600
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_2	600
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_sort	600
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3	600
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3w	600
Coq.FSets.FMapPositive.PositiveMap.xgmapi	600
Coq.FSets.FMapPositive.PositiveMap.gmapi	600
Coq.FSets.FMapPositive.PositiveMap.mapi_1	600
Coq.FSets.FMapPositive.PositiveMap.mapi_2	600
Coq.FSets.FMapPositive.PositiveMap.map_1	600
Coq.FSets.FMapPositive.PositiveMap.map_2	600	0.0.0.0	synth with cache (only 1: intros; only 1: unfold map in *; only 1: eapply mapi_2; only 1: eauto).	3.684680	4
Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_l	600
Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_r	600
Coq.FSets.FMapPositive.PositiveMap.map2.gmap2	600
Coq.FSets.FMapPositive.PositiveMap.map2_1	600
Coq.FSets.FMapPositive.PositiveMap.map2_2	600
Coq.FSets.FMapPositive.PositiveMap.Fold.xfoldi_1	600
Coq.FSets.FMapPositive.PositiveMap.fold_1	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold fold; only 1: unfold elements; only 1: rewrite xfoldi_1; only 1: reflexivity).	3.747289	5
Coq.FSets.FMapPositive.PositiveMap.equal_1	600
Coq.FSets.FMapPositive.PositiveMap.equal_2	600
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsspec	600	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct PositiveOrderedTypeBits.eq_dec; only 1: intropattern subst -> e; only 1: apply gss; only 1: apply gso; only 1: auto).	3.689735	6
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	600
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.xmap2_lr	600
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.map2_commut	600
Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	600
Coq.FSets.FSetCompat.Backport_Sets.compare	600
Coq.FSets.FSetCompat.Update_WSets.In_compat	600
Coq.FSets.FSetCompat.Update_WSets.Spec.mem_spec	600
Coq.FSets.FSetCompat.Update_WSets.Spec.equal_spec	600
Coq.FSets.FSetCompat.Update_WSets.Spec.subset_spec	600
Coq.FSets.FSetCompat.Update_WSets.Spec.is_empty_spec	600
Coq.FSets.FSetCompat.Update_WSets.Spec.add_spec	600
Coq.FSets.FSetCompat.Update_WSets.Spec.remove_spec	600
Coq.FSets.FSetCompat.Update_WSets.Spec.singleton_spec	600
Coq.FSets.FSetCompat.Update_WSets.Spec.elements_spec1	600
Coq.FSets.FSetCompat.Update_WSets.Spec.for_all_spec	600
Coq.FSets.FSetCompat.Update_WSets.Spec.exists_spec	600
Coq.FSets.FSetCompat.Update_Sets.lt_strorder	600
Coq.FSets.FSetCompat.Update_Sets.lt_compat	600
Coq.FSets.FSetCompat.Update_Sets.compare_spec	600
Coq.Numbers.DecimalZ.of_to	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct z; only 1: simpl; only 1: trivial; only 1: simpl; only 1: unfold BinIntDef.Z.of_uint; only 1: rewrite DecimalPos.Unsigned.of_to; only 1: reflexivity; only 1: simpl; only 1: unfold BinIntDef.Z.of_uint; only 1: rewrite DecimalPos.Unsigned.of_to; only 1: destruct p; only 1: auto; only 1: auto; only 1: auto).	3.935071	22
Coq.Numbers.DecimalZ.to_of	600
Coq.Numbers.DecimalZ.to_int_inj	600
Coq.Numbers.DecimalZ.to_int_surj	600
Coq.Numbers.DecimalZ.of_int_norm	600
Coq.Numbers.DecimalZ.of_inj	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- to_of; only 1: rewrite <- to_of; only 1: f_equal; only 1: easy).	3.812282	5
Coq.Numbers.DecimalZ.of_iff	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- to_of; only 1: rewrite <- to_of; only 1: f_equal; only 1: easy; only 1: intros ?; only 1: rewrite <- of_int_norm; only 1: rewrite H; only 1: apply of_int_norm).	3.976898	18
Coq.micromega.ZifyBool.Z_of_bool_bound	600
Coq.micromega.ZifyBool.Z_eqb_isZero	600
Coq.micromega.ZifyBool.Z_leb_sub	600
Coq.micromega.ZifyBool.Z_ltb_leb	600
Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Nat.eqb_compare; only 1: rewrite Z.eqb_compare; only 1: rewrite Nat2Z.inj_compare; only 1: reflexivity).	3.032210	5
Coq.micromega.ZifyBool.Z_of_nat_leb_iff	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Nat.leb_compare; only 1: rewrite Z.leb_compare; only 1: rewrite Nat2Z.inj_compare; only 1: reflexivity).	3.011293	5
Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Nat.ltb_compare; only 1: rewrite Z.ltb_compare; only 1: rewrite Nat2Z.inj_compare; only 1: reflexivity).	3.112708	5
Coq.micromega.ZifyBool.Z_eqb_ZSpec_ok	600
Coq.micromega.ZifyBool.leZeroSpec_ok	600
Coq.micromega.ZifyComparison.Z_of_comparison_bound	600
Coq.micromega.ZifyComparison.Zcompare_spec	600
Coq.Classes.DecidableClass.Decidable_sound	600
Coq.Classes.DecidableClass.Decidable_complete	600
Coq.Classes.DecidableClass.Decidable_sound_alt	600
Coq.Classes.DecidableClass.Decidable_complete_alt	600
Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	600	0	synth with cache (only 1: apply eqb_true_iff).	3.109471	1
Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	600	1	synth with cache (only 1: apply Nat.eqb_eq).	3.181571	3
Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	600	1	synth with cache (only 1: apply Nat.leb_le).	3.167492	3
Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	600	1	synth with cache (only 1: apply Z.eqb_eq).	3.218932	9
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.In_1	600
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_1	600
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_2	600
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_1	600
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_2	600
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_1	600
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_2	600
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_1	600
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_2	600
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_1	600
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_2	600
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_3	600
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_1	600
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_2	600
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_3	600
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_1	600
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_2	600
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_1	600
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_2	600
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_3	600
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_1	600
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_2	600
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_3	600
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_1	600
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_2	600
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_3	600
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_1	600
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_2	600
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_3	600
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_1	600
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_2	600
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_1	600
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_2	600
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_1	600
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_2	600
Coq.MSets.MSetFacts.WFactsOn.IffSpec.In_eq_iff	600
Coq.MSets.MSetFacts.WFactsOn.IffSpec.mem_iff	600
Coq.MSets.MSetFacts.WFactsOn.IffSpec.not_mem_iff	600
Coq.MSets.MSetFacts.WFactsOn.IffSpec.equal_iff	600
Coq.MSets.MSetFacts.WFactsOn.IffSpec.subset_iff	600
Coq.MSets.MSetFacts.WFactsOn.IffSpec.empty_iff	600
Coq.MSets.MSetFacts.WFactsOn.IffSpec.is_empty_iff	600
Coq.MSets.MSetFacts.WFactsOn.IffSpec.singleton_iff	600
Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_iff	600
Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_neq_iff	600
Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_iff	600
Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_neq_iff	600
Coq.MSets.MSetFacts.WFactsOn.IffSpec.for_all_iff	600
Coq.MSets.MSetFacts.WFactsOn.IffSpec.exists_iff	600
Coq.MSets.MSetFacts.WFactsOn.IffSpec.elements_iff	600
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.mem_b	600
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.empty_b	600
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_b	600
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_neq_b	600
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_b	600
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_neq_b	600
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.singleton_b	600
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.union_b	600
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.inter_b	600
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.diff_b	600
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.elements_b	600
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.filter_b	600
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.for_all_b	600
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.exists_b	600
Coq.MSets.MSetFacts.WFactsOn.In_m	600
Coq.MSets.MSetFacts.WFactsOn.Empty_m	600
Coq.MSets.MSetFacts.WFactsOn.is_empty_m	600
Coq.MSets.MSetFacts.WFactsOn.mem_m	600
Coq.MSets.MSetFacts.WFactsOn.singleton_m	600
Coq.MSets.MSetFacts.WFactsOn.add_m	600
Coq.MSets.MSetFacts.WFactsOn.remove_m	600
Coq.MSets.MSetFacts.WFactsOn.union_m	600
Coq.MSets.MSetFacts.WFactsOn.inter_m	600
Coq.MSets.MSetFacts.WFactsOn.diff_m	600
Coq.MSets.MSetFacts.WFactsOn.Subset_m	600
Coq.MSets.MSetFacts.WFactsOn.subset_m	600
Coq.MSets.MSetFacts.WFactsOn.equal_m	600
Coq.MSets.MSetFacts.WFactsOn.SubsetSetoid	600
Coq.MSets.MSetFacts.WFactsOn.In_s_m	600
Coq.MSets.MSetFacts.WFactsOn.Empty_s_m	600
Coq.MSets.MSetFacts.WFactsOn.add_s_m	600
Coq.MSets.MSetFacts.WFactsOn.remove_s_m	600
Coq.MSets.MSetFacts.WFactsOn.union_s_m	600
Coq.MSets.MSetFacts.WFactsOn.inter_s_m	600
Coq.MSets.MSetFacts.WFactsOn.diff_s_m	600
Coq.MSets.MSetFacts.WFactsOn.filter_equal	600
Coq.MSets.MSetFacts.WFactsOn.filter_subset	600
Coq.MSets.MSetFacts.WFactsOn.filter_ext	600
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.In_eq_iff	600
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.mem_iff	600
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.not_mem_iff	600
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.equal_iff	600
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.subset_iff	600
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.empty_iff	600
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.is_empty_iff	600
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.singleton_iff	600
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_iff	600
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_neq_iff	600
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_iff	600
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_neq_iff	600
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.union_iff	600
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.inter_iff	600
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.diff_iff	600
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.filter_iff	600
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.for_all_iff	600
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.exists_iff	600
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.elements_iff	600
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.mem_b	600
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.empty_b	600
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_b	600
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_neq_b	600
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_b	600
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_neq_b	600
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.singleton_b	600
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.union_b	600
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.inter_b	600
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.diff_b	600
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.elements_b	600
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.filter_b	600
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.for_all_b	600
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.exists_b	600
Coq.FSets.FSetFacts.WFacts_fun.E_ST	600
Coq.FSets.FSetFacts.WFacts_fun.Equal_ST	600
Coq.FSets.FSetFacts.WFacts_fun.In_m	600
Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	600
Coq.FSets.FSetFacts.WFacts_fun.Empty_m	600
Coq.FSets.FSetFacts.WFacts_fun.mem_m	600
Coq.FSets.FSetFacts.WFacts_fun.singleton_m	600
Coq.FSets.FSetFacts.WFacts_fun.add_m	600
Coq.FSets.FSetFacts.WFacts_fun.remove_m	600
Coq.FSets.FSetFacts.WFacts_fun.union_m	600
Coq.FSets.FSetFacts.WFacts_fun.inter_m	600
Coq.FSets.FSetFacts.WFacts_fun.diff_m	600
Coq.FSets.FSetFacts.WFacts_fun.Subset_m	600
Coq.FSets.FSetFacts.WFacts_fun.subset_m	600
Coq.FSets.FSetFacts.WFacts_fun.equal_m	600
Coq.FSets.FSetFacts.WFacts_fun.Subset_refl	600
Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	600
Coq.FSets.FSetFacts.WFacts_fun.In_s_m	600
Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	600
Coq.FSets.FSetFacts.WFacts_fun.add_s_m_Proper	600
Coq.FSets.FSetFacts.WFacts_fun.remove_s_m_Proper	600
Coq.FSets.FSetFacts.WFacts_fun.union_s_m_Proper	600
Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	600
Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	600
Coq.FSets.FSetFacts.WFacts_fun.filter_equal	600
Coq.FSets.FSetFacts.WFacts_fun.filter_ext	600
Coq.FSets.FSetFacts.WFacts_fun.filter_subset	600
Coq.Sorting.PermutEq.Perm.multiplicity_In	600
Coq.Sorting.PermutEq.Perm.multiplicity_In_O	600
Coq.Sorting.PermutEq.Perm.multiplicity_In_S	600
Coq.Sorting.PermutEq.Perm.multiplicity_NoDup	600
Coq.Sorting.PermutEq.Perm.NoDup_permut	600
Coq.Sorting.PermutEq.Perm.permut_In_In	600
Coq.Sorting.PermutEq.Perm.permut_cons_In	600
Coq.Sorting.PermutEq.Perm.permut_nil	600
Coq.Sorting.PermutEq.Perm.permutation_Permutation	600
Coq.Sorting.PermutEq.Perm.permut_length_1	600
Coq.Sorting.PermutEq.Perm.permut_length_2	600
Coq.Sorting.PermutEq.Perm.permut_length	600
Coq.Sorting.PermutEq.Perm.permutation_map	600
Coq.QArith.Qreduction.Qred_correct	600
Coq.QArith.Qreduction.Qred_complete	600
Coq.QArith.Qreduction.Qred_eq_iff	600
Coq.QArith.Qreduction.Qred_comp_Proper	600	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Qred_correct; only 1: rewrite Qred_correct; only 1: easy).	3.049365	4
Coq.QArith.Qreduction.Qplus'_correct	600	0.0.0	synth with cache (only 1: intros; only 1: unfold Qplus'; only 1: apply Qred_correct).	3.010249	3
Coq.QArith.Qreduction.Qmult'_correct	600	0.0.0	synth with cache (only 1: intros; only 1: unfold Qmult'; only 1: apply Qred_correct).	3.025669	3
Coq.QArith.Qreduction.Qminus'_correct	600	0.0.0	synth with cache (only 1: intros; only 1: unfold Qminus'; only 1: apply Qred_correct).	3.022596	3
Coq.QArith.Qreduction.Qplus'_comp_Proper	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Qplus'; only 1: rewrite H; only 1: rewrite H0; only 1: auto with qarith).	2.987109	5
Coq.QArith.Qreduction.Qmult'_comp_Proper	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Qmult'; only 1: rewrite H; only 1: rewrite H0; only 1: auto with qarith).	3.087293	5
Coq.QArith.Qreduction.Qminus'_comp_Proper	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Qminus'; only 1: rewrite H; only 1: rewrite H0; only 1: auto with qarith).	3.054339	5
Coq.QArith.Qreduction.Qred_opp	600	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct q; only 1: unfold Qred; only 1: simpl; only 1: rewrite Z.ggcd_opp; only 1: case BinIntDef.Z.ggcd; only 1: intros ?; only 1: intros ?; only 1: destruct p; only 1: simpl; only 1: unfold Qopp; only 1: auto).	3.237737	20
Coq.QArith.Qreduction.Qred_compare	600	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Qcompare_comp; only 1: apply Qeq_sym; only 1: apply Qred_correct; only 1: apply Qeq_sym; only 1: apply Qred_correct).	2.994062	7
Coq.QArith.Qreduction.Qred_le	600	0.0.0.0	synth with cache (only 1: rewrite Qle_alt; only 1: rewrite Qle_alt; only 1: rewrite <- Qred_compare; only 1: easy).	3.053266	4
Coq.QArith.Qreduction.Qred_lt	600	0.0.0.0	synth with cache (only 1: rewrite Qlt_alt; only 1: rewrite Qlt_alt; only 1: rewrite <- Qred_compare; only 1: easy).	3.125521	4
Coq.micromega.ZCoeff.InitialMorphism.req_refl	600
Coq.micromega.ZCoeff.InitialMorphism.req_sym	600
Coq.micromega.ZCoeff.InitialMorphism.req_trans	600
Coq.micromega.ZCoeff.InitialMorphism.rplus_morph_Proper	600
Coq.micromega.ZCoeff.InitialMorphism.rtimes_morph_Proper	600
Coq.micromega.ZCoeff.InitialMorphism.ropp_morph_Proper	600
Coq.micromega.ZCoeff.InitialMorphism.rle_morph_Proper	600
Coq.micromega.ZCoeff.InitialMorphism.rlt_morph_Proper	600
Coq.micromega.ZCoeff.InitialMorphism.rminus_morph_Proper	600
Coq.micromega.ZCoeff.InitialMorphism.ring_ops_wd	600
Coq.micromega.ZCoeff.InitialMorphism.Zring_morph	600
Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_pos	600
Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_succ	600
Coq.micromega.ZCoeff.InitialMorphism.clt_pos_morph	600
Coq.micromega.ZCoeff.InitialMorphism.clt_morph	600
Coq.micromega.ZCoeff.InitialMorphism.Zcleb_morph	600
Coq.micromega.ZCoeff.InitialMorphism.Zcneqb_morph	600
Coq.Numbers.DecimalN.Unsigned.of_to	600	0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Unsigned.of_to).	3.587450	3
Coq.Numbers.DecimalN.Unsigned.to_of	600
Coq.Numbers.DecimalN.Unsigned.to_uint_inj	600
Coq.Numbers.DecimalN.Unsigned.to_uint_surj	600
Coq.Numbers.DecimalN.Unsigned.of_uint_norm	600	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	3.715457	20
Coq.Numbers.DecimalN.Unsigned.of_inj	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- to_of; only 1: rewrite <- to_of; only 1: f_equal; only 1: easy).	3.654828	5
Coq.Numbers.DecimalN.Unsigned.of_iff	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- to_of; only 1: rewrite <- to_of; only 1: f_equal; only 1: easy; only 1: intros ?; only 1: rewrite <- of_uint_norm; only 1: rewrite H; only 1: apply of_uint_norm).	3.823061	18
Coq.Numbers.DecimalN.Signed.of_to	600	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold BinNatDef.N.to_int; only 1: unfold BinNatDef.N.of_int; only 1: unfold norm; only 1: f_equal; only 1: rewrite Unsigned.of_uint_norm; only 1: destruct n; only 1: reflexivity; only 1: apply DecimalPos.Unsigned.of_to).	3.801812	8
Coq.Numbers.DecimalN.Signed.to_of	600
Coq.Numbers.DecimalN.Signed.to_int_inj	600
Coq.Numbers.DecimalN.Signed.to_int_pos_surj	600
Coq.Numbers.DecimalN.Signed.of_int_norm	600	0.0.0	synth with cache (only 1: unfold BinNatDef.N.of_int; only 1: rewrite norm_invol; only 1: easy).	3.508411	3
Coq.Numbers.DecimalN.Signed.of_inj_pos	600
Coq.FSets.FSetPositive.PositiveSet.In_1	600
Coq.FSets.FSetPositive.PositiveSet.eq_refl	600	0.0.0	synth with cache (only 1: unfold eq; only 1: unfold Equal; only 1: reflexivity).	3.327925	3
Coq.FSets.FSetPositive.PositiveSet.eq_sym	600	0.0.0.0.0	synth with cache (only 1: unfold eq; only 1: unfold Equal; only 1: intros; only 1: symmetry; only 1: trivial).	3.393317	5
Coq.FSets.FSetPositive.PositiveSet.eq_trans	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold eq; only 1: unfold Equal; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: trivial).	3.529878	18
Coq.FSets.FSetPositive.PositiveSet.mem_1	600	0.0	synth with cache (only 1: unfold In; only 1: trivial).	3.328451	2
Coq.FSets.FSetPositive.PositiveSet.mem_2	600	0.0	synth with cache (only 1: unfold In; only 1: trivial).	3.448562	2
Coq.FSets.FSetPositive.PositiveSet.mem_Leaf	600
Coq.FSets.FSetPositive.PositiveSet.empty_1	600	0.0.0.0.0	synth with cache (only 1: unfold Empty; only 1: unfold In; only 1: intros ?; only 1: rewrite mem_Leaf; only 1: discriminate).	3.442817	5
Coq.FSets.FSetPositive.PositiveSet.mem_node	600	0.0.0.0.0.1.1.1.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case o; only 1: trivial; only 1: destruct l; only 1: destruct r; only 1: destruct x; only 1: easy; only 1: easy; only 1: easy; only 1: trivial; only 1: trivial).	3.712024	49
Coq.FSets.FSetPositive.PositiveSet.is_empty_spec	600
Coq.FSets.FSetPositive.PositiveSet.is_empty_1	600	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite is_empty_spec; only 1: trivial).	3.360568	3
Coq.FSets.FSetPositive.PositiveSet.is_empty_2	600	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite is_empty_spec; only 1: trivial).	3.359746	3
Coq.FSets.FSetPositive.PositiveSet.subset_Leaf_s	600
Coq.FSets.FSetPositive.PositiveSet.subset_spec	600
Coq.FSets.FSetPositive.PositiveSet.subset_1	600	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply -> subset_spec).	3.579396	3
Coq.FSets.FSetPositive.PositiveSet.subset_2	600	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply <- subset_spec).	3.632656	3
Coq.FSets.FSetPositive.PositiveSet.equal_subset	600
Coq.FSets.FSetPositive.PositiveSet.equal_spec	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- subset_spec; only 1: rewrite <- subset_spec; only 1: unfold Equal; only 1: unfold Subset; only 1: firstorder).	3.652608	8
Coq.FSets.FSetPositive.PositiveSet.equal_1	600	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply -> equal_spec).	3.681091	3
Coq.FSets.FSetPositive.PositiveSet.equal_2	600	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply <- equal_spec).	3.610935	3
Coq.FSets.FSetPositive.PositiveSet.eq_dec	600
Coq.FSets.FSetPositive.PositiveSet.lex_Opp	600	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst -> H; only 1: intros ?; only 1: intropattern subst -> H; only 1: case u'; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	3.925925	40
Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct b; only 1: intros ?; only 1: destruct b'; only 1: reflexivity; only 1: reflexivity; only 1: intros ?; only 1: destruct b'; only 1: reflexivity; only 1: reflexivity).	3.668823	18
Coq.FSets.FSetPositive.PositiveSet.compare_inv	600
Coq.FSets.FSetPositive.PositiveSet.lex_Eq	600	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct u; only 1: intuition discriminate; only 1: intuition discriminate; only 1: intuition discriminate).	3.612060	6
Coq.FSets.FSetPositive.PositiveSet.compare_bool_Eq	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct b1; only 1: intros ?; only 1: destruct b2; only 1: intuition discriminate; only 1: intuition discriminate; only 1: intros ?; only 1: destruct b2; only 1: intuition discriminate; only 1: intuition discriminate).	3.751985	18
Coq.FSets.FSetPositive.PositiveSet.compare_equal	600
Coq.FSets.FSetPositive.PositiveSet.compare_gt	600	0.1.0.0.1.0.0.0.0.0	synth with cache (only 1: unfold lt; only 1: intros ?; only 1: intros ?; only 1: rewrite compare_inv; only 1: case compare_fun; only 1: intros; only 1: discriminate; only 1: trivial; only 1: intros; only 1: discriminate).	3.872622	30
Coq.FSets.FSetPositive.PositiveSet.compare_eq	600	0.0.0.0.0	synth with cache (only 1: unfold eq; only 1: intros ?; only 1: intros ?; only 1: rewrite compare_equal; only 1: apply <- equal_spec).	3.563184	5
Coq.FSets.FSetPositive.PositiveSet.compare	600
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_cxe	600
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xce	600
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lxl	600
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_gxg	600
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xll	600
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xgg	600
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lex	600
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_bool	600
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_Leaf	600	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite compare_inv; only 1: simpl; only 1: case is_empty; only 1: reflexivity; only 1: reflexivity).	3.350423	6
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_empty_x	600
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_empty	600
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_fun	600
Coq.FSets.FSetPositive.PositiveSet.lt_trans	600
Coq.FSets.FSetPositive.PositiveSet.lt_not_eq	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold lt; only 1: unfold eq; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite equal_spec in H0; only 1: rewrite <- compare_equal in H0; only 1: congruence).	3.456948	17
Coq.FSets.FSetPositive.PositiveSet.add_spec	600
Coq.FSets.FSetPositive.PositiveSet.add_1	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: left; only 1: assumption).	3.431472	4
Coq.FSets.FSetPositive.PositiveSet.add_2	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: right; only 1: assumption).	3.373300	4
Coq.FSets.FSetPositive.PositiveSet.add_3	600	0.0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_spec; only 1: intros ?; only 1: destruct H0; only 1: intropattern subst -> H0; only 1: elim H; only 1: trivial; only 1: trivial).	3.553236	20
Coq.FSets.FSetPositive.PositiveSet.remove_spec	600
Coq.FSets.FSetPositive.PositiveSet.remove_1	600	0.0.0	synth with cache (only 1: intros; only 1: rewrite remove_spec; only 1: tauto).	3.402880	3
Coq.FSets.FSetPositive.PositiveSet.remove_2	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite remove_spec; only 1: split; only 1: assumption; only 1: trivial).	3.365217	5
Coq.FSets.FSetPositive.PositiveSet.remove_3	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite remove_spec; only 1: tauto).	3.666777	5
Coq.FSets.FSetPositive.PositiveSet.singleton_1	600	0.0.0.0.0.0.0	synth with cache (only 1: unfold singleton; only 1: intros ?; only 1: intros ?; only 1: rewrite add_spec; only 1: unfold In; only 1: rewrite mem_Leaf; only 1: intuition discriminate).	3.679206	7
Coq.FSets.FSetPositive.PositiveSet.singleton_2	600	0.0.0.0	synth with cache (only 1: unfold singleton; only 1: intros; only 1: apply add_1; only 1: assumption).	3.694354	4
Coq.FSets.FSetPositive.PositiveSet.union_spec	600
Coq.FSets.FSetPositive.PositiveSet.union_1	600	0.0.0	synth with cache (only 1: intros; only 1: apply -> union_spec; only 1: assumption).	3.645321	3
Coq.FSets.FSetPositive.PositiveSet.union_2	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply <- union_spec; only 1: left; only 1: assumption).	3.605428	4
Coq.FSets.FSetPositive.PositiveSet.union_3	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply <- union_spec; only 1: right; only 1: assumption).	3.622503	4
Coq.FSets.FSetPositive.PositiveSet.inter_spec	600
Coq.FSets.FSetPositive.PositiveSet.inter_1	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite inter_spec; only 1: tauto).	3.704351	5
Coq.FSets.FSetPositive.PositiveSet.inter_2	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite inter_spec; only 1: tauto).	3.692207	5
Coq.FSets.FSetPositive.PositiveSet.inter_3	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite inter_spec; only 1: split; only 1: assumption; only 1: assumption).	3.702685	5
Coq.FSets.FSetPositive.PositiveSet.diff_spec	600
Coq.FSets.FSetPositive.PositiveSet.diff_1	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite diff_spec; only 1: tauto).	3.402654	5
Coq.FSets.FSetPositive.PositiveSet.diff_2	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite diff_spec; only 1: tauto).	3.430122	5
Coq.FSets.FSetPositive.PositiveSet.diff_3	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite diff_spec; only 1: split; only 1: assumption; only 1: assumption).	3.426748	5
Coq.FSets.FSetPositive.PositiveSet.fold_1	600
Coq.FSets.FSetPositive.PositiveSet.cardinal_1	600
Coq.FSets.FSetPositive.PositiveSet.xfilter_spec	600
Coq.FSets.FSetPositive.PositiveSet.filter_1	600	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold filter; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: rewrite xfilter_spec; only 1: tauto).	3.389815	8
Coq.FSets.FSetPositive.PositiveSet.filter_2	600	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold filter; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: rewrite xfilter_spec; only 1: tauto).	3.425125	8
Coq.FSets.FSetPositive.PositiveSet.filter_3	600	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold filter; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: rewrite xfilter_spec; only 1: tauto).	3.428106	8
Coq.FSets.FSetPositive.PositiveSet.xforall_spec	600
Coq.FSets.FSetPositive.PositiveSet.for_all_1	600	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: unfold for_all; only 1: rewrite xforall_spec; only 1: trivial).	3.383523	7
Coq.FSets.FSetPositive.PositiveSet.for_all_2	600	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: unfold for_all; only 1: rewrite xforall_spec; only 1: trivial).	3.487398	7
Coq.FSets.FSetPositive.PositiveSet.xexists_spec	600
Coq.FSets.FSetPositive.PositiveSet.exists_1	600	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: unfold exists_; only 1: rewrite xexists_spec; only 1: trivial).	3.390524	7
Coq.FSets.FSetPositive.PositiveSet.exists_2	600	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: unfold exists_; only 1: rewrite xexists_spec; only 1: trivial).	3.478196	7
Coq.FSets.FSetPositive.PositiveSet.partition_filter	600
Coq.FSets.FSetPositive.PositiveSet.partition_1	600	0.0.0	synth with cache (only 1: intros; only 1: rewrite partition_filter; only 1: apply eq_refl).	3.430006	3
Coq.FSets.FSetPositive.PositiveSet.partition_2	600	0.0.0	synth with cache (only 1: intros; only 1: rewrite partition_filter; only 1: apply eq_refl).	3.426064	3
Coq.FSets.FSetPositive.PositiveSet.xelements_spec	600
Coq.FSets.FSetPositive.PositiveSet.elements_1	600	0.0.0.0.0.0.0	synth with cache (only 1: unfold elements; only 1: unfold In; only 1: intros; only 1: rewrite xelements_spec; only 1: right; only 1: exists x; only 1: auto).	3.748447	7
Coq.FSets.FSetPositive.PositiveSet.elements_2	600	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold elements; only 1: unfold In; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite xelements_spec in H; only 1: destruct H; only 1: inversion_clear H; only 1: destruct H; only 1: destruct H; only 1: rewrite H; only 1: assumption).	3.778537	20
Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	600
Coq.FSets.FSetPositive.PositiveSet.elements_3	600
Coq.FSets.FSetPositive.PositiveSet.elements_3w	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply SortA_NoDupA with PositiveOrderedTypeBits.lt; only 1: constructor; only 1: intros ?; only 1: apply PositiveOrderedTypeBits.eq_refl; only 1: intros ?; only 1: apply PositiveOrderedTypeBits.eq_sym; only 1: intros ?; only 1: apply PositiveOrderedTypeBits.eq_trans; only 1: constructor; only 1: intros ?; only 1: intros ?; only 1: apply PositiveOrderedTypeBits.lt_not_eq in H; only 1: apply H; only 1: reflexivity; only 1: intros ?; only 1: apply PositiveOrderedTypeBits.lt_trans; only 1: solve_proper; only 1: apply elements_3).	4.003162	43
Coq.FSets.FSetPositive.PositiveSet.choose_1	600
Coq.FSets.FSetPositive.PositiveSet.choose_2	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Empty; only 1: unfold In; only 1: intros ?; only 1: intros ?; only 1: induction s; only 1: intros ?; only 1: apply empty_1; only 1: destruct b; only 1: discriminate; only 1: simpl in H; only 1: destruct choose; only 1: discriminate; only 1: destruct choose; only 1: discriminate; only 1: intros ?; only 1: destruct a; only 1: apply IHs2; only 1: reflexivity; only 1: apply IHs1; only 1: reflexivity; only 1: discriminate).	4.003507	45
Coq.FSets.FSetPositive.PositiveSet.choose_empty	600
Coq.FSets.FSetPositive.PositiveSet.choose_3'	600
Coq.FSets.FSetPositive.PositiveSet.choose_3	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply choose_3' in H1; only 1: congruence).	3.812435	17
Coq.FSets.FSetPositive.PositiveSet.min_elt_1	600
Coq.FSets.FSetPositive.PositiveSet.min_elt_3	600
Coq.FSets.FSetPositive.PositiveSet.min_elt_2	600
Coq.FSets.FSetPositive.PositiveSet.max_elt_1	600
Coq.FSets.FSetPositive.PositiveSet.max_elt_3	600
Coq.FSets.FSetPositive.PositiveSet.max_elt_2	600
Coq.Sorting.Heap.defs.leA_Tree_Leaf	600
Coq.Sorting.Heap.defs.leA_Tree_Node	600
Coq.Sorting.Heap.defs.invert_heap	600
Coq.Sorting.Heap.defs.is_heap_rect	600
Coq.Sorting.Heap.defs.is_heap_rec	600
Coq.Sorting.Heap.defs.low_trans	600
Coq.Sorting.Heap.defs.Equivalence_instance_0	600
Coq.Sorting.Heap.defs.Proper_instance_0	600
Coq.Sorting.Heap.defs.merge	600
Coq.Sorting.Heap.defs.insert	600
Coq.Sorting.Heap.defs.list_to_heap	600
Coq.Sorting.Heap.defs.heap_to_list	600
Coq.Sorting.Heap.defs.treesort	600
Coq.Logic.WKL.is_path_from_characterization	600
Coq.Logic.WKL.is_path_from_restrict	600	0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.1.0.0.0.0	synth with cache (only 1: intros *; only 1: intros ?; only 1: intros ?; only 1: induction H0 in n, H, H0 |- *; only 1: apply le_n_0_eq in H; only 1: intropattern subst <- H; only 1: apply here; only 1: assumption; only 1: destruct n; only 1: apply here; only 1: assumption; only 1: apply next_left; only 1: auto using le_S_n; only 1: auto using le_S_n; only 1: destruct n; only 1: apply here; only 1: assumption; only 1: apply next_right; only 1: auto using le_S_n; only 1: auto using le_S_n).	3.493918	76
Coq.Logic.WKL.inductively_barred_at_monotone	600
Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	600
Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	600
Coq.Logic.WKL.find_left_path	600
Coq.Logic.WKL.Y_unique	600
Coq.Logic.WKL.Y_approx	600
Coq.Logic.WKL.PreWeakKonigsLemma	600
Coq.Logic.WKL.inductively_barred_at_decidable	600
Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	600
Coq.Logic.WKL.WeakKonigsLemma	600	0.0.1.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply inductively_barred_at_is_path_from_decidable in H; only 1: apply PreWeakKonigsLemma; only 1: assumption; only 1: assumption).	3.150934	15
Coq.Sorting.PermutSetoid.Permut.list_contents_app	600
Coq.Sorting.PermutSetoid.Permut.permut_refl	600
Coq.Sorting.PermutSetoid.Permut.permut_sym	600
Coq.Sorting.PermutSetoid.Permut.permut_trans	600
Coq.Sorting.PermutSetoid.Permut.permut_cons_eq	600
Coq.Sorting.PermutSetoid.Permut.permut_cons	600
Coq.Sorting.PermutSetoid.Permut.permut_app	600
Coq.Sorting.PermutSetoid.Permut.permut_add_inside_eq	600
Coq.Sorting.PermutSetoid.Permut.permut_add_inside	600
Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside_eq	600
Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside	600
Coq.Sorting.PermutSetoid.Permut.permut_middle	600
Coq.Sorting.PermutSetoid.Permut.permut_sym_app	600
Coq.Sorting.PermutSetoid.Permut.permut_rev	600
Coq.Sorting.PermutSetoid.Permut.permut_conv_inv	600
Coq.Sorting.PermutSetoid.Permut.permut_app_inv1	600
Coq.Sorting.PermutSetoid.Permut.if_eqA_then	600
Coq.Sorting.PermutSetoid.Permut.permut_app_inv2	600
Coq.Sorting.PermutSetoid.Permut.permut_remove_hd_eq	600
Coq.Sorting.PermutSetoid.Permut.permut_remove_hd	600
Coq.Sorting.PermutSetoid.Permut.if_eqA_else	600
Coq.Sorting.PermutSetoid.Permut.if_eqA_refl	600
Coq.Sorting.PermutSetoid.Permut.if_eqA	600
Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_l	600
Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_r	600
Coq.Sorting.PermutSetoid.Permut.multiplicity_eqA	600
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA	600
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_O	600
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_S	600
Coq.Sorting.PermutSetoid.Permut.multiplicity_NoDupA	600
Coq.Sorting.PermutSetoid.Permut.permut_InA_InA	600
Coq.Sorting.PermutSetoid.Permut.permut_cons_InA	600
Coq.Sorting.PermutSetoid.Permut.permut_nil	600
Coq.Sorting.PermutSetoid.Permut.permut_length_1	600
Coq.Sorting.PermutSetoid.Permut.permut_length_2	600
Coq.Sorting.PermutSetoid.Permut.permut_length	600
Coq.Sorting.PermutSetoid.Permut.NoDupA_equivlistA_permut	600
Coq.Sorting.PermutSetoid.Permut_map.permut_map	600
Coq.Sorting.PermutSetoid.Permut_permut.Permutation_impl_permutation	600
Coq.Sorting.PermutSetoid.Permut_permut.permut_eqA	600
Coq.Sorting.PermutSetoid.Permut_permut.permutation_Permutation	600
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	600
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_sym	600
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	600
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_dec	600
Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	600
Coq.ZArith.Znumtheory.Zdivide_opp_r	600	1	synth with cache (only 1: apply Z.divide_opp_r).	3.334297	4
Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	600	1	synth with cache (only 1: apply Z.divide_opp_r).	3.252882	4
Coq.ZArith.Znumtheory.Zdivide_opp_l	600	1	synth with cache (only 1: apply Z.divide_opp_l).	3.223613	4
Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	600	1	synth with cache (only 1: apply Z.divide_opp_l).	3.285415	4
Coq.ZArith.Znumtheory.Zdivide_Zabs_l	600	0	synth with cache (only 1: apply Z.divide_abs_l).	3.227031	1
Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	600	0	synth with cache (only 1: apply Z.divide_abs_l).	3.253529	1
Coq.ZArith.Znumtheory.Zmult_one	600	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.eq_mul_1_nonneg).	3.298976	2
Coq.ZArith.Znumtheory.Zdivide_bounds	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- Z.divide_abs_l in H; only 1: rewrite <- Z.divide_abs_r in H; only 1: apply Z.abs_pos in H0; only 1: apply Z.divide_pos_le; only 1: easy; only 1: easy).	3.268377	8
Coq.ZArith.Znumtheory.Zmod_divide	600	0	synth with cache (only 1: apply Z.mod_divide).	3.238961	1
Coq.ZArith.Znumtheory.Zdivide_mod	600	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: intropattern subst -> H; only 1: apply Z_mod_mult).	3.302208	6
Coq.ZArith.Znumtheory.Zdivide_dec	600
Coq.ZArith.Znumtheory.Z_lt_neq	600	0	synth with cache (only 1: auto using Z.lt_neq, Z.neq_sym).	3.298300	1
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	600
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.divide_div_mul_exact; only 1: apply @Z_lt_neq; only 1: easy; only 1: auto with zarith).	3.369101	5
Coq.ZArith.Znumtheory.Zdivide_le	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.divide_pos_le; only 1: easy; only 1: easy).	3.284698	4
Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	600
Coq.ZArith.Znumtheory.Zmod_div_mod	600
Coq.ZArith.Znumtheory.Zmod_divide_minus	600
Coq.ZArith.Znumtheory.Zdivide_mod_minus	600
Coq.ZArith.Znumtheory.Zis_gcd_sym	600	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	3.311386	5
Coq.ZArith.Znumtheory.Zis_gcd_0	600	0.0.0.0.1.0	synth with cache (only 1: constructor; only 1: auto with zarith; only 1: exists 0; only 1: Z.nzsimpl; only 1: easy; only 1: auto with zarith).	3.354289	13
Coq.ZArith.Znumtheory.Zis_gcd_1	600	0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: exists a; only 1: Z.nzsimpl; only 1: easy; only 1: trivial using Z.divide_1_l, Z.le_0_1; only 1: auto with zarith).	3.373092	6
Coq.ZArith.Znumtheory.Zis_gcd_refl	600	0.1.1.0	synth with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).	3.237386	11
Coq.ZArith.Znumtheory.Zis_gcd_minus	600	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	3.173068	5
Coq.ZArith.Znumtheory.Zis_gcd_opp	600	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	3.292357	5
Coq.ZArith.Znumtheory.Zis_gcd_0_abs	600	0.0.0.0.0.0.0	synth with cache (only 1: apply Zabs_ind; only 1: intros; only 1: apply Zis_gcd_sym; only 1: apply Zis_gcd_0; only 1: intros; only 1: apply Zis_gcd_opp; only 1: apply Zis_gcd_0).	3.272164	7
Coq.ZArith.Znumtheory.Zis_gcd_unique	600
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	600
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	600
Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid_rec	600
Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid	600
Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	600
Coq.ZArith.Znumtheory.Zis_gcd_bezout	600
Coq.ZArith.Znumtheory.Zis_gcd_mult	600
Coq.ZArith.Znumtheory.rel_prime_bezout	600
Coq.ZArith.Znumtheory.bezout_rel_prime	600	0.0.1.0.0.0.0	synth with cache (only 1: simple induction 1; only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: intros; only 1: rewrite <- H0; only 1: auto with zarith).	2.890011	15
Coq.ZArith.Znumtheory.Gauss	600
Coq.ZArith.Znumtheory.rel_prime_mult	600
Coq.ZArith.Znumtheory.rel_prime_cross_prod	600
Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	600
Coq.ZArith.Znumtheory.rel_prime_sym	600	0.0.1.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red; only 1: apply Zis_gcd_sym; only 1: auto with zarith).	2.661466	13
Coq.ZArith.Znumtheory.rel_prime_div	600
Coq.ZArith.Znumtheory.rel_prime_1	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: red; only 1: apply Zis_gcd_intro; only 1: trivial using Z.divide_1_l, Z.le_0_1; only 1: exists n; only 1: Z.nzsimpl; only 1: easy; only 1: trivial using Z.divide_1_l, Z.le_0_1).	2.625429	8
Coq.ZArith.Znumtheory.not_rel_prime_0	600
Coq.ZArith.Znumtheory.rel_prime_mod	600
Coq.ZArith.Znumtheory.rel_prime_mod_rev	600
Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	600
Coq.ZArith.Znumtheory.prime_divisors	600
Coq.ZArith.Znumtheory.prime_rel_prime	600
Coq.ZArith.Znumtheory.rel_prime_le_prime	600
Coq.ZArith.Znumtheory.prime_mult	600
Coq.ZArith.Znumtheory.not_prime_0	600
Coq.ZArith.Znumtheory.not_prime_1	600
Coq.ZArith.Znumtheory.prime_2	600
Coq.ZArith.Znumtheory.prime_3	600
Coq.ZArith.Znumtheory.prime_ge_2	600
Coq.ZArith.Znumtheory.Z_0_1_more	600
Coq.ZArith.Znumtheory.prime_alt	600
Coq.ZArith.Znumtheory.square_not_prime	600
Coq.ZArith.Znumtheory.prime_div_prime	600
Coq.ZArith.Znumtheory.Zgcd_is_gcd	600	0.1.1.0	synth with cache (only 1: constructor; only 1: apply Z.gcd_divide_l; only 1: apply Z.gcd_divide_r; only 1: apply Z.gcd_greatest).	2.398306	15
Coq.ZArith.Znumtheory.Zgcd_spec	600
Coq.ZArith.Znumtheory.Zdivide_Zgcd	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.gcd_greatest; only 1: trivial; only 1: easy).	2.253572	4
Coq.ZArith.Znumtheory.Zis_gcd_gcd	600
Coq.ZArith.Znumtheory.Zgcd_div_swap0	600
Coq.ZArith.Znumtheory.Zgcd_div_swap	600
Coq.ZArith.Znumtheory.Zgcd_ass	600	1.0	synth with cache (only 1: symmetry; only 1: apply Z.gcd_assoc).	2.312549	9
Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	600
Coq.ZArith.Znumtheory.rel_prime_dec	600
Coq.ZArith.Znumtheory.prime_dec_aux	600
Coq.ZArith.Znumtheory.prime_dec	600
Coq.ZArith.Znumtheory.not_prime_divide	600
Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	4.138516	47
Coq.Numbers.DecimalPos.Unsigned.of_lu_revapp	600
Coq.Numbers.DecimalPos.Unsigned.Nadd_simpl	600	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	3.376434	3
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_eqn	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: destruct d; only 1: simpl; only 1: destruct 1; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	3.882069	59
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_rev	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert acc; only 1: induction d; only 1: intros; only 1: simpl usize; only 1: simpl; only 1: rewrite Pos.mul_1_r; only 1: auto; only 1: intros; only 1: simpl usize; only 1: rewrite N.pow_succ_r'; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: rewrite of_uint_acc_eqn; only 1: simpl tl; only 1: simpl hd; only 1: rewrite IHd; only 1: rewrite Nadd_simpl; only 1: ring; only 1: easy; only 1: intros; only 1: simpl usize; only 1: rewrite N.pow_succ_r'; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: rewrite of_uint_acc_eqn; only 1: simpl tl; only 1: simpl hd; only 1: rewrite IHd; only 1: rewrite Nadd_simpl; only 1: ring; only 1: easy; only 1: intros; only 1: simpl usize; only 1: rewrite N.pow_succ_r'; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: rewrite of_uint_acc_eqn; only 1: simpl tl; only 1: simpl hd; only 1: rewrite IHd; only 1: rewrite Nadd_simpl; only 1: ring; only 1: easy; only 1: intros; only 1: simpl usize; only 1: rewrite N.pow_succ_r'; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: rewrite of_uint_acc_eqn; only 1: simpl tl; only 1: simpl hd; only 1: rewrite IHd; only 1: rewrite Nadd_simpl; only 1: ring; only 1: easy; only 1: intros; only 1: simpl usize; only 1: rewrite N.pow_succ_r'; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: rewrite of_uint_acc_eqn; only 1: simpl tl; only 1: simpl hd; only 1: rewrite IHd; only 1: rewrite Nadd_simpl; only 1: ring; only 1: easy; only 1: intros; only 1: simpl usize; only 1: rewrite N.pow_succ_r'; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: rewrite of_uint_acc_eqn; only 1: simpl tl; only 1: simpl hd; only 1: rewrite IHd; only 1: rewrite Nadd_simpl; only 1: ring; only 1: easy; only 1: intros; only 1: simpl usize; only 1: rewrite N.pow_succ_r'; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: rewrite of_uint_acc_eqn; only 1: simpl tl; only 1: simpl hd; only 1: rewrite IHd; only 1: rewrite Nadd_simpl; only 1: ring; only 1: easy; only 1: intros; only 1: simpl usize; only 1: rewrite N.pow_succ_r'; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: rewrite of_uint_acc_eqn; only 1: simpl tl; only 1: simpl hd; only 1: rewrite IHd; only 1: rewrite Nadd_simpl; only 1: ring; only 1: easy; only 1: intros; only 1: simpl usize; only 1: rewrite N.pow_succ_r'; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: rewrite of_uint_acc_eqn; only 1: simpl tl; only 1: simpl hd; only 1: rewrite IHd; only 1: rewrite Nadd_simpl; only 1: ring; only 1: easy; only 1: intros; only 1: simpl usize; only 1: rewrite N.pow_succ_r'; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: rewrite of_uint_acc_eqn; only 1: simpl tl; only 1: simpl hd; only 1: rewrite IHd; only 1: rewrite Nadd_simpl; only 1: ring; only 1: easy).	8.006373	395
Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	600	0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: induction d; only 1: simpl; only 1: trivial; only 1: simpl; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: rewrite IHd; only 1: ring; only 1: simpl; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: apply of_uint_acc_rev; only 1: simpl; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: apply of_uint_acc_rev; only 1: simpl; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: apply of_uint_acc_rev; only 1: simpl; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: apply of_uint_acc_rev; only 1: simpl; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: apply of_uint_acc_rev; only 1: simpl; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: apply of_uint_acc_rev; only 1: simpl; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: apply of_uint_acc_rev; only 1: simpl; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: apply of_uint_acc_rev; only 1: simpl; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: apply of_uint_acc_rev).	7.376226	480
Coq.Numbers.DecimalPos.Unsigned.of_lu_rev	600	0.0.0	synth with cache (only 1: rewrite of_uint_alt; only 1: rewrite rev_rev; only 1: easy).	3.638907	3
Coq.Numbers.DecimalPos.Unsigned.of_lu_double_gen	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite N.double_spec; only 1: rewrite N.succ_double_spec; only 1: induction d; only 1: simpl Little.double; only 1: simpl Little.succ_double; only 1: simpl_of_lu; only 1: split; only 1: reflexivity; only 1: reflexivity; only 1: destruct IHd; only 1: simpl Little.double; only 1: simpl Little.succ_double; only 1: simpl_of_lu; only 1: rewrite H; only 1: simpl_of_lu; only 1: simpl_of_lu; only 1: rewrite H; only 1: split; only 1: ring; only 1: ring; only 1: destruct IHd; only 1: simpl Little.double; only 1: simpl Little.succ_double; only 1: simpl_of_lu; only 1: rewrite H; only 1: simpl_of_lu; only 1: simpl_of_lu; only 1: rewrite H; only 1: split; only 1: ring; only 1: ring; only 1: destruct IHd; only 1: simpl Little.double; only 1: simpl Little.succ_double; only 1: simpl_of_lu; only 1: rewrite H; only 1: simpl_of_lu; only 1: simpl_of_lu; only 1: rewrite H; only 1: split; only 1: ring; only 1: ring; only 1: destruct IHd; only 1: simpl Little.double; only 1: simpl Little.succ_double; only 1: simpl_of_lu; only 1: rewrite H; only 1: simpl_of_lu; only 1: simpl_of_lu; only 1: rewrite H; only 1: split; only 1: ring; only 1: ring; only 1: destruct IHd; only 1: simpl Little.double; only 1: simpl Little.succ_double; only 1: simpl_of_lu; only 1: rewrite H; only 1: simpl_of_lu; only 1: simpl_of_lu; only 1: rewrite H; only 1: split; only 1: ring; only 1: ring; only 1: destruct IHd; only 1: simpl Little.double; only 1: simpl Little.succ_double; only 1: simpl_of_lu; only 1: rewrite H0; only 1: simpl_of_lu; only 1: simpl_of_lu; only 1: rewrite H0; only 1: split; only 1: ring; only 1: ring; only 1: destruct IHd; only 1: simpl Little.double; only 1: simpl Little.succ_double; only 1: simpl_of_lu; only 1: rewrite H0; only 1: simpl_of_lu; only 1: simpl_of_lu; only 1: rewrite H0; only 1: split; only 1: ring; only 1: ring; only 1: destruct IHd; only 1: simpl Little.double; only 1: simpl Little.succ_double; only 1: simpl_of_lu; only 1: rewrite H0; only 1: simpl_of_lu; only 1: simpl_of_lu; only 1: rewrite H0; only 1: split; only 1: ring; only 1: ring; only 1: destruct IHd; only 1: simpl Little.double; only 1: simpl Little.succ_double; only 1: simpl_of_lu; only 1: rewrite H0; only 1: simpl_of_lu; only 1: simpl_of_lu; only 1: rewrite H0; only 1: split; only 1: ring; only 1: ring; only 1: destruct IHd; only 1: simpl Little.double; only 1: simpl Little.succ_double; only 1: simpl_of_lu; only 1: rewrite H0; only 1: simpl_of_lu; only 1: simpl_of_lu; only 1: rewrite H0; only 1: split; only 1: ring; only 1: ring).	6.422442	239
Coq.Numbers.DecimalPos.Unsigned.of_lu_double	600	0	synth with cache (only 1: apply of_lu_double_gen).	3.389588	1
Coq.Numbers.DecimalPos.Unsigned.of_lu_succ_double	600	0	synth with cache (only 1: apply of_lu_double_gen).	3.384367	1
Coq.Numbers.DecimalPos.Unsigned.of_to	600	0.0.0.0.1.0.0.0.1.0.0.0.0	synth with cache (only 1: unfold BinPosDef.Pos.to_uint; only 1: rewrite of_lu_rev; only 1: induction p; only 1: simpl; only 1: rewrite of_lu_succ_double; only 1: rewrite IHp; only 1: easy; only 1: simpl; only 1: rewrite of_lu_double; only 1: rewrite IHp; only 1: easy; only 1: simpl; only 1: trivial).	3.603850	33
Coq.Numbers.DecimalPos.Unsigned.succ_double_alt	600	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	3.562850	20
Coq.Numbers.DecimalPos.Unsigned.double_succ	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto using succ_double_alt; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto using succ_double_alt).	3.823497	49
Coq.Numbers.DecimalPos.Unsigned.to_lu_succ	600	0.0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: induction p; only 1: simpl; only 1: rewrite IHp; only 1: auto using succ_double_alt, double_succ; only 1: simpl; only 1: auto using succ_double_alt, double_succ; only 1: simpl; only 1: f_equal).	3.591537	31
Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	600	0	synth with cache (only 1: reflexivity).	3.366540	1
Coq.Numbers.DecimalPos.Unsigned.nat_iter_0	600	0	synth with cache (only 1: reflexivity).	3.331820	1
Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	600
Coq.Numbers.DecimalPos.Unsigned.of_lu_0	600	1.0.0.1.0.0.1.0.0.1.0.0.1.0.0.1.0.0.1.0.0.1.0.0.1.0.0.1.0.0.1.0.0.1.0.0.1.0.0.1.0.0.1.0.0.1.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: split; only 1: trivial; only 1: trivial; only 1: simpl_of_lu; only 1: split; only 1: rewrite N.add_0_l; only 1: intros ?; only 1: apply N.eq_mul_0_r in H; only 1: rewrite IHd in H; only 1: simpl; only 1: rewrite H; only 1: easy; only 1: easy; only 1: simpl; only 1: destruct nztail; only 1: destruct IHd; only 1: intropattern subst -> H0; only 1: clear H; only 1: easy; only 1: clear H; only 1: easy; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: simpl_of_lu; only 1: split; only 1: intros ?; only 1: apply N.eq_add_0 in H; only 1: easy; only 1: discriminate; only 1: simpl_of_lu; only 1: split; only 1: intros ?; only 1: apply N.eq_add_0 in H; only 1: easy; only 1: discriminate; only 1: simpl_of_lu; only 1: split; only 1: intros ?; only 1: apply N.eq_add_0 in H; only 1: easy; only 1: discriminate; only 1: simpl_of_lu; only 1: split; only 1: intros ?; only 1: apply N.eq_add_0 in H; only 1: easy; only 1: discriminate; only 1: simpl_of_lu; only 1: split; only 1: intros ?; only 1: apply N.eq_add_0 in H; only 1: easy; only 1: discriminate; only 1: simpl_of_lu; only 1: split; only 1: intros ?; only 1: apply N.eq_add_0 in H; only 1: easy; only 1: discriminate; only 1: simpl_of_lu; only 1: split; only 1: intros ?; only 1: apply N.eq_add_0 in H; only 1: easy; only 1: discriminate; only 1: simpl_of_lu; only 1: split; only 1: intros ?; only 1: apply N.eq_add_0 in H; only 1: easy; only 1: discriminate; only 1: simpl_of_lu; only 1: split; only 1: intros ?; only 1: apply N.eq_add_0 in H; only 1: easy; only 1: discriminate).	13.986344	1362
Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	600
Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	600
Coq.Numbers.DecimalPos.Unsigned.to_of_lu	600
Coq.Numbers.DecimalPos.Unsigned.to_of	600
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	600
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonnil	600
Coq.Numbers.DecimalPos.Unsigned.to_uint_inj	600
Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	600
Coq.Numbers.DecimalPos.Unsigned.of_uint_norm	600	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	3.478843	20
Coq.Numbers.DecimalPos.Unsigned.of_inj	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- to_of; only 1: rewrite <- to_of; only 1: f_equal; only 1: easy).	3.302749	5
Coq.Numbers.DecimalPos.Unsigned.of_iff	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- to_of; only 1: rewrite <- to_of; only 1: f_equal; only 1: easy; only 1: intros ?; only 1: rewrite <- of_uint_norm; only 1: rewrite H; only 1: apply of_uint_norm).	3.387775	18
Coq.Numbers.DecimalPos.Signed.of_to	600	0.1.0.0	synth with cache (only 1: unfold BinPosDef.Pos.to_int; only 1: unfold BinPosDef.Pos.of_int; only 1: rewrite Unsigned.of_to; only 1: easy).	3.312062	5
Coq.Numbers.DecimalPos.Signed.to_of	600	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold BinPosDef.Pos.of_int; only 1: destruct d; only 1: simpl norm; only 1: rewrite <- Unsigned.to_of; only 1: destruct BinPosDef.Pos.of_uint; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: injection H as; only 1: intropattern subst <- H; only 1: easy; only 1: intros ?; only 1: discriminate H).	3.511041	21
Coq.Numbers.DecimalPos.Signed.to_int_inj	600
Coq.Numbers.DecimalPos.Signed.to_int_pos_surj	600
Coq.Numbers.DecimalPos.Signed.of_int_norm	600
Coq.Numbers.DecimalPos.Signed.of_inj_pos	600
Coq.QArith.Qfield.Qsrt	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: intros ?; only 1: destruct x; only 1: unfold Qeq; only 1: unfold Qplus; only 1: simpl; only 1: ring; only 1: intros ?; only 1: destruct x; only 1: unfold Qeq; only 1: unfold Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: ring; only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: intros ?; only 1: destruct z; only 1: unfold Qeq; only 1: unfold Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring; only 1: intros ?; only 1: red; only 1: simpl; only 1: destruct Qnum; only 1: auto; only 1: auto; only 1: auto; only 1: intros; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring; only 1: intros; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_assoc; only 1: ring; only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: intros ?; only 1: destruct z; only 1: unfold Qeq; only 1: unfold Qmult; only 1: unfold Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring; only 1: reflexivity; only 1: red; only 1: simpl; only 1: intros ?; only 1: ring).	4.777780	126
Coq.QArith.Qfield.Qsft	600	0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: constructor; only 1: exact Qsrt; only 1: unfold Qeq; only 1: auto with qarith; only 1: reflexivity; only 1: intros ?; only 1: intros ?; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: exact H).	4.289586	77
Coq.QArith.Qfield.Qpower_theory	600	0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: intros ?; only 1: intros ?; only 1: destruct n; only 1: reflexivity; only 1: reflexivity).	3.212552	6
Coq.QArith.Qfield.Examples.ex1	600	1	synth with cache (only 1: exact Qmult_plus_distr_l).	3.231929	9
Coq.QArith.Qfield.Examples.ex2	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: unfold Qeq; only 1: unfold Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: ring).	3.175769	8
Coq.QArith.Qfield.Examples.ex3	600
Coq.QArith.Qfield.Examples.ex4	600
Coq.QArith.Qfield.Examples.ex5	600
Coq.QArith.Qfield.Examples.ex6	600
Coq.QArith.Qfield.Examples.ex7	600
Coq.QArith.Qfield.Examples.ex8	600
Coq.QArith.Qfield.Examples.ex9	600
Coq.QArith.Qfield.Examples.ex10	600
Coq.QArith.Qfield.Qopp_plus	600	0.0	synth with cache (only 1: intros; only 1: ring).	3.087819	2
Coq.QArith.Qfield.Qopp_opp	600	0.0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).	3.123866	4
Coq.micromega.RingMicromega.Micromega.rplus_morph_Proper	600
Coq.micromega.RingMicromega.Micromega.rtimes_morph_Proper	600
Coq.micromega.RingMicromega.Micromega.ropp_morph_Proper	600
Coq.micromega.RingMicromega.Micromega.rle_morph_Proper	600
Coq.micromega.RingMicromega.Micromega.rlt_morph_Proper	600
Coq.micromega.RingMicromega.Micromega.rminus_morph_Proper	600
Coq.micromega.RingMicromega.Micromega.cleb_sound	600
Coq.micromega.RingMicromega.Micromega.cneqb_sound	600
Coq.micromega.RingMicromega.Micromega.cltb_sound	600
Coq.micromega.RingMicromega.Micromega.OpMult_sound	600
Coq.micromega.RingMicromega.Micromega.OpAdd_sound	600
Coq.micromega.RingMicromega.Micromega.pexpr_times_nformula_correct	600
Coq.micromega.RingMicromega.Micromega.nformula_times_nformula_correct	600
Coq.micromega.RingMicromega.Micromega.nformula_plus_nformula_correct	600
Coq.micromega.RingMicromega.Micromega.eval_Psatz_Sound	600
Coq.micromega.RingMicromega.Micromega.ge_bool_cases	600
Coq.micromega.RingMicromega.Micromega.extract_hyps_app	600
Coq.micromega.RingMicromega.Micromega.nhyps_of_psatz_correct	600
Coq.micromega.RingMicromega.Micromega.check_inconsistent_sound	600
Coq.micromega.RingMicromega.Micromega.checker_nf_sound	600
Coq.micromega.RingMicromega.Micromega.eval_pol_sub	600
Coq.micromega.RingMicromega.Micromega.eval_pol_add	600
Coq.micromega.RingMicromega.Micromega.eval_pol_mul	600
Coq.micromega.RingMicromega.Micromega.eval_pol_opp	600
Coq.micromega.RingMicromega.Micromega.eval_pol_norm	600
Coq.micromega.RingMicromega.Micromega.normalise_sound	600
Coq.micromega.RingMicromega.Micromega.negate_correct	600
Coq.micromega.RingMicromega.Micromega.cnf_of_list_correct	600
Coq.micromega.RingMicromega.Micromega.eq0_cnf	600
Coq.micromega.RingMicromega.Micromega.xnormalise_correct	600
Coq.micromega.RingMicromega.Micromega.xnegate_correct	600
Coq.micromega.RingMicromega.Micromega.cnf_normalise_correct	600
Coq.micromega.RingMicromega.Micromega.cnf_negate_correct	600
Coq.micromega.RingMicromega.Micromega.eval_nformula_dec	600
Coq.micromega.RingMicromega.Micromega.xdenorm_correct	600
Coq.micromega.RingMicromega.Micromega.denorm_correct	600
Coq.micromega.RingMicromega.Micromega.eval_pexprSC	600
Coq.micromega.RingMicromega.Micromega.eval_formulaSC	600
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_trans	600	0.0.0.0.0	synth with cache (only 1: unfold lt; only 1: intros; only 1: apply Nat.lt_trans with y; only 1: auto; only 1: auto).	3.622026	5
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_not_eq	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold lt; only 1: unfold eq; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst -> H0; only 1: revert H; only 1: apply Nat.lt_irrefl).	3.806152	17
Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	600
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_trans	600	3	synth with cache (only 1: exact Z.lt_trans).	4.268088	29
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_not_eq	600	0	synth with cache (only 1: Z.order).	3.660996	1
Coq.Structures.OrderedTypeEx.Z_as_OT.compare	600
Coq.Structures.OrderedTypeEx.Positive_as_OT.lt_not_eq	600	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: contradict H; only 1: rewrite H; only 1: apply Pos.lt_irrefl).	3.720858	6
Coq.Structures.OrderedTypeEx.Positive_as_OT.compare	600
Coq.Structures.OrderedTypeEx.N_as_OT.compare	600
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_refl	600
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_sym	600
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_trans	600
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_trans	600
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_not_eq	600
Coq.Structures.OrderedTypeEx.PairOrderedType.compare	600
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	600
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_trans	600
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_trans	600	0	synth with cache (only 1: exact bits_lt_trans).	3.417100	1
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_antirefl	600
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_not_eq	600
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.compare	600
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.eq_dec	600
Coq.Structures.OrderedTypeEx.String_as_OT.nat_of_ascii_inverse	600
Coq.Structures.OrderedTypeEx.String_as_OT.lts_tail_unique	600
Coq.Structures.OrderedTypeEx.String_as_OT.lt_trans	600
Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	600
Coq.Structures.OrderedTypeEx.String_as_OT.compare	600
Coq.QArith.Qminmax.Q.plus_max_distr_l	600
Coq.QArith.Qminmax.Q.plus_max_distr_r	600
Coq.QArith.Qminmax.Q.plus_min_distr_l	600	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply min_monotone; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: auto with qarith; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Qplus_le_compat; only 1: q_order; only 1: auto).	3.317893	21
Coq.QArith.Qminmax.Q.plus_min_distr_r	600
Coq.NArith.Ndist.Nplength_infty	600
Coq.NArith.Ndist.Nplength_zeros	600
Coq.NArith.Ndist.Nplength_one	600
Coq.NArith.Ndist.Nplength_first_one	600
Coq.NArith.Ndist.ni_min_idemp	600
Coq.NArith.Ndist.ni_min_comm	600
Coq.NArith.Ndist.ni_min_assoc	600
Coq.NArith.Ndist.ni_min_O_l	600
Coq.NArith.Ndist.ni_min_O_r	600	0.0.0	synth with cache (only 1: intros; only 1: rewrite ni_min_comm; only 1: apply ni_min_O_l).	3.459228	3
Coq.NArith.Ndist.ni_min_inf_l	600	0	synth with cache (only 1: trivial).	3.486306	1
Coq.NArith.Ndist.ni_min_inf_r	600
Coq.NArith.Ndist.ni_le_refl	600	0	synth with cache (only 1: exact ni_min_idemp).	3.505486	1
Coq.NArith.Ndist.ni_le_antisym	600	0.0.0.0.0.0.0	synth with cache (only 1: unfold ni_le; only 1: intros ?; only 1: intros ?; only 1: rewrite ni_min_comm; only 1: intros ?; only 1: rewrite H; only 1: trivial).	3.614216	7
Coq.NArith.Ndist.ni_le_trans	600	0.0.0.0.0.0	synth with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite <- H; only 1: rewrite ni_min_assoc; only 1: rewrite H0; only 1: reflexivity).	3.571182	6
Coq.NArith.Ndist.ni_le_min_1	600
Coq.NArith.Ndist.ni_le_min_2	600	0.0.0.0.0	synth with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).	3.546939	5
Coq.NArith.Ndist.ni_min_case	600
Coq.NArith.Ndist.ni_le_total	600
Coq.NArith.Ndist.ni_le_min_induc	600
Coq.NArith.Ndist.le_ni_le	600	0.0.0.0.0.0.0	synth with cache (only 1: intros *; only 1: intros ?; only 1: unfold ni_le; only 1: unfold ni_min; only 1: rewrite Peano.min_l; only 1: reflexivity; only 1: trivial).	3.576050	7
Coq.NArith.Ndist.ni_le_le	600	0.0.0.0.0	synth with cache (only 1: unfold ni_le; only 1: unfold ni_min; only 1: intros; only 1: inversion H; only 1: apply le_min_r).	3.593492	5
Coq.NArith.Ndist.Nplength_lb	600
Coq.NArith.Ndist.Nplength_ub	600
Coq.NArith.Ndist.Npdist_eq_1	600	0.0.0.0	synth with cache (only 1: intros; only 1: unfold Npdist; only 1: rewrite N.lxor_nilpotent; only 1: reflexivity).	3.681973	4
Coq.NArith.Ndist.Npdist_eq_2	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply N.lxor_eq; only 1: apply Nplength_infty; only 1: exact H).	3.642359	4
Coq.NArith.Ndist.Npdist_comm	600	0.0.0.0	synth with cache (only 1: unfold Npdist; only 1: intros; only 1: rewrite N.lxor_comm; only 1: reflexivity).	3.655232	4
Coq.NArith.Ndist.Nplength_ultra_1	600
Coq.NArith.Ndist.Nplength_ultra	600
Coq.NArith.Ndist.Npdist_ultra	600
Coq.NArith.Ndec.Peqb_complete	600	0	synth with cache (only 1: apply Pos.eqb_eq).	3.151546	1
Coq.NArith.Ndec.Peqb_Pcompare	600	0.0	synth with cache (only 1: rewrite Pos.compare_eq_iff; only 1: apply Pos.eqb_eq).	3.189732	2
Coq.NArith.Ndec.Pcompare_Peqb	600	0.0	synth with cache (only 1: rewrite Pos.eqb_eq; only 1: apply Pos.compare_eq_iff).	3.519707	2
Coq.NArith.Ndec.Neqb_Ncompare	600	0.0.0	synth with cache (only 1: rewrite N.compare_eq_iff; only 1: rewrite <- N.eqb_eq; only 1: easy).	3.359520	3
Coq.NArith.Ndec.Ncompare_Neqb	600	0.0	synth with cache (only 1: rewrite N.eqb_eq; only 1: apply N.compare_eq_iff).	3.453904	2
Coq.NArith.Ndec.Neqb_complete	600	0.0	synth with cache (only 1: rewrite <- N.eqb_eq; only 1: easy).	3.403074	2
Coq.NArith.Ndec.Nxor_eq_true	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply N.lxor_eq in H; only 1: subst; only 1: apply N.eqb_eq; only 1: easy).	3.492689	5
Coq.NArith.Ndec.Nxor_eq_false	600
Coq.NArith.Ndec.Nodd_not_double	600	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: eqb2eq; only 1: intros ?; only 1: intropattern subst <- H0; only 1: unfold Nodd in *; only 1: rewrite Ndouble_bit0 in *; only 1: easy).	3.494952	7
Coq.NArith.Ndec.Nnot_div2_not_double	600	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: eqb2eq; only 1: contradict H; only 1: subst; only 1: destruct a0; only 1: easy; only 1: easy).	3.449717	7
Coq.NArith.Ndec.Neven_not_double_plus_one	600	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: eqb2eq; only 1: intros ?; only 1: intropattern subst <- H0; only 1: unfold Neven in *; only 1: rewrite Ndouble_plus_one_bit0 in *; only 1: easy).	3.516756	7
Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	600	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: eqb2eq; only 1: contradict H; only 1: subst; only 1: destruct a0; only 1: easy; only 1: easy).	3.513425	7
Coq.NArith.Ndec.Nbit0_neq	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: eqb2eq; only 1: intros ?; only 1: intropattern subst <- H1; only 1: easy).	3.529873	5
Coq.NArith.Ndec.Ndiv2_eq	600	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: eqb2eq; only 1: rewrite N.div2_div; only 1: rewrite N.div2_div; only 1: rewrite H; only 1: easy).	3.458867	6
Coq.NArith.Ndec.Ndiv2_neq	600	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: eqb2eq; only 1: contradict H; only 1: rewrite N.div2_div; only 1: rewrite N.div2_div; only 1: rewrite H; only 1: easy).	3.502574	7
Coq.NArith.Ndec.Ndiv2_bit_eq	600
Coq.NArith.Ndec.Ndiv2_bit_neq	600	0.0.1.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: eqb2eq; only 1: contradict H; only 1: apply Ndiv2_bit_eq; only 1: easy; only 1: easy).	3.567722	15
Coq.NArith.Ndec.Nneq_elim	600
Coq.NArith.Ndec.Ndouble_or_double_plus_un	600
Coq.NArith.Ndec.Nleb_alt	600	0.0.0.0.0.0	synth with cache (only 1: unfold Nleb; only 1: rewrite eq_iff_eq_true; only 1: rewrite N.leb_le; only 1: rewrite leb_compare; only 1: rewrite <- N2Nat.inj_compare; only 1: reflexivity).	3.495716	6
Coq.NArith.Ndec.Nleb_Nle	600	1.0	synth with cache (only 1: rewrite Nleb_alt; only 1: apply N.leb_le).	3.536514	4
Coq.NArith.Ndec.Nleb_refl	600	0.0.0.0	synth with cache (only 1: rewrite Nleb_Nle; only 1: apply N.lt_eq_cases; only 1: right; only 1: easy).	3.440540	4
Coq.NArith.Ndec.Nleb_antisym	600	2.0.0	synth with cache (only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: apply N.le_antisymm).	3.598695	16
Coq.NArith.Ndec.Nleb_trans	600	3.0.0.0	synth with cache (only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: apply N.le_trans).	4.873159	67
Coq.NArith.Ndec.Nleb_ltb_trans	600
Coq.NArith.Ndec.Nltb_leb_trans	600
Coq.NArith.Ndec.Nltb_trans	600
Coq.NArith.Ndec.Nltb_leb_weak	600	0.0.0.0.0.0	synth with cache (only 1: unfold Nleb; only 1: intros; only 1: apply leb_correct; only 1: apply Nat.lt_le_incl; only 1: apply leb_complete_conv; only 1: assumption).	3.471779	6
Coq.NArith.Ndec.Nleb_double_mono	600	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Nleb; only 1: intros; only 1: rewrite N2Nat.inj_double; only 1: rewrite N2Nat.inj_double; only 1: apply leb_correct; only 1: apply mult_le_compat_l; only 1: apply leb_complete; only 1: easy).	3.458793	8
Coq.NArith.Ndec.Nleb_double_plus_one_mono	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Nleb; only 1: intros; only 1: rewrite N2Nat.inj_succ_double; only 1: rewrite N2Nat.inj_succ_double; only 1: apply leb_correct; only 1: apply le_n_S; only 1: apply mult_le_compat_l; only 1: apply leb_complete; only 1: easy).	3.590721	18
Coq.NArith.Ndec.Nleb_double_mono_conv	600
Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	600
Coq.NArith.Ndec.Nltb_double_mono	600
Coq.NArith.Ndec.Nltb_double_plus_one_mono	600
Coq.NArith.Ndec.Nltb_double_mono_conv	600
Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	600
Coq.NArith.Ndec.Nltb_Ncompare	600	0.0.0.0	synth with cache (only 1: rewrite N.compare_nle_iff; only 1: rewrite <- Nleb_Nle; only 1: rewrite not_true_iff_false; only 1: easy).	3.439862	4
Coq.NArith.Ndec.Ncompare_Gt_Nltb	600	0	synth with cache (only 1: apply <- Nltb_Ncompare).	3.420903	1
Coq.NArith.Ndec.Ncompare_Lt_Nltb	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Nltb_Ncompare; only 1: rewrite N.compare_antisym; only 1: rewrite H; only 1: auto).	3.472864	5
Coq.NArith.Ndec.Nmin_le_1	600	0.0	synth with cache (only 1: rewrite Nleb_Nle; only 1: N.solve_min).	3.459583	2
Coq.NArith.Ndec.Nmin_le_2	600	0.0	synth with cache (only 1: rewrite Nleb_Nle; only 1: N.solve_min).	3.445295	2
Coq.NArith.Ndec.Nmin_le_3	600	0.0.0	synth with cache (only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: apply N.min_glb_l).	3.473480	3
Coq.NArith.Ndec.Nmin_le_4	600	0.0.0	synth with cache (only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: apply N.min_glb_r).	3.186000	3
Coq.NArith.Ndec.Nmin_le_5	600	0.0.0.0	synth with cache (only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: apply N.min_glb).	3.185334	4
Coq.NArith.Ndec.Nmin_lt_3	600	0.0.0.0.0.0	synth with cache (only 1: rewrite <- not_true_iff_false; only 1: rewrite <- not_true_iff_false; only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).	3.315656	6
Coq.NArith.Ndec.Nmin_lt_4	600	0.0.0.0.0.0	synth with cache (only 1: rewrite <- not_true_iff_false; only 1: rewrite <- not_true_iff_false; only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).	3.272967	6
Coq.Logic.SetoidChoice.setoid_choice	600	0.0.0.0.0.0	synth with cache (only 1: apply setoid_functional_choice_first_characterization; only 1: split; only 1: exact choice; only 1: split; only 1: exact extensional_function_representative; only 1: exact classic).	3.070554	6
Coq.Logic.SetoidChoice.representative_choice	600	0.0	synth with cache (only 1: apply setoid_fun_choice_imp_repr_fun_choice; only 1: exact setoid_choice).	2.987929	2
Coq.Logic.ClassicalDescription.excluded_middle_informative	600
Coq.Logic.ClassicalDescription.classical_definite_description	600
Coq.Logic.ClassicalDescription.dependent_unique_choice	600
Coq.Logic.ClassicalDescription.unique_choice	600
Coq.NArith.NArith.TestOrder.test	600	2.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply N.le_antisymm).	3.346650	16
Coq.omega.PreOmega.Z.mod_0_r_ext	600	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: subst; only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	3.037751	6
Coq.omega.PreOmega.Z.div_0_r_ext	600	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: subst; only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	3.035053	6
Coq.omega.PreOmega.Z.rem_0_r_ext	600	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: subst; only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	2.955590	6
Coq.omega.PreOmega.Z.quot_0_r_ext	600	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: subst; only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	3.036666	6
Coq.omega.PreOmega.Z.rem_bound_pos_pos	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.rem_bound_pos; only 1: assumption; only 1: assumption).	2.941037	4
Coq.omega.PreOmega.Z.rem_bound_neg_pos	600	0.0.0.0.0.0	synth with cache (only 1: rewrite <- Z.rem_opp_r'; only 1: intros; only 1: apply Z.rem_bound_pos; only 1: assumption; only 1: rewrite Z.opp_pos_neg; only 1: assumption).	2.986356	6
Coq.omega.PreOmega.Z.rem_bound_pos_neg	600
Coq.omega.PreOmega.Z.rem_bound_neg_neg	600
Coq.Logic.ClassicalEpsilon.constructive_definite_description	600	0.0.0	synth with cache (only 1: intros; only 1: apply constructive_indefinite_description; only 1: firstorder).	2.950168	3
Coq.Logic.ClassicalEpsilon.excluded_middle_informative	600
Coq.Logic.ClassicalEpsilon.classical_indefinite_description	600
Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	600	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold epsilon; only 1: unfold classical_indefinite_description; only 1: destruct excluded_middle_informative; only 1: trivial; only 1: destruct n; only 1: trivial).	3.029498	7
Coq.Logic.ClassicalEpsilon.choice	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.radd_ext_Proper	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_ext_Proper	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_ext_Proper	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_ext_Proper	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_ext_Proper	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ceqb_spec	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEequiv_eq	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEeval_ext	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_l	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_r	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_simpl	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_ext	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_reg_l	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.field_is_integral_domain	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_neq_0	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_r_r	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv1	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2b	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv5	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv3b	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv6	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4b	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7b	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_nz	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv8	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.cross_product_eq	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_ext	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_N_ext	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_0	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_1	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_cst	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_l	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_add_r	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_r	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_nz	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_div	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEadd_ext	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsub_ext	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEmul_ext	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEopp_ext	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_ext	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_l	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_r	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_0_r	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_r	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_l	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_add_r	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_l	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_r	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_nz	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.if_true	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: destruct b; only 1: split; only 1: trivial; only 1: trivial; only 1: split; only 1: trivial; only 1: trivial; only 1: destruct b; only 1: split; only 1: trivial; only 1: trivial; only 1: split; only 1: trivial; only 1: trivial).	3.046757	23
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_semi_ok	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_spec	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEadd_ok	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEsub_ok	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEopp_ok	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEpow_ok	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEmul_ok	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsimp_ok	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_l	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_r	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_app	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.absurd_PCond_bottom	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Z_pos_sub_gt	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.pos_sub_gt; only 1: apply Pos.gt_lt; only 1: easy).	2.166621	4
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.default_isIn_ok	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.isIn_ok	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok1	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_l	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_r	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_l	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_r	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Pcond_Fnorm	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_FEeval_PEeval	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_crossproduct	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_ok	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_correct	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_pow_correct	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_correct	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_correct	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_correct	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_aux_ok	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_in_correct	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_in_correct	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_impl.fcons_ok	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons_fcons_inv	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons0_fcons_inv	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons00_fcons_inv	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.ceqb_spec'	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons1_fcons_inv	600
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons2_fcons_inv	600
Coq.setoid_ring.Field_theory.Complete.radd_ext3_Proper	600
Coq.setoid_ring.Field_theory.Complete.rmul_ext3_Proper	600
Coq.setoid_ring.Field_theory.Complete.ropp_ext3_Proper	600
Coq.setoid_ring.Field_theory.Complete.AlmostField.add_inj_r	600
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiPOS_inj	600
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_inj	600
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_complete	600
Coq.setoid_ring.Field_theory.Complete.Field.ring_S_inj	600
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiPOS_discr_sgn	600
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_inj	600
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_complete	600
Coq.ZArith.Zdiv.Z_div_mod_POS	600
Coq.ZArith.Zdiv.Z_div_mod	600
Coq.ZArith.Zdiv.Remainder_equiv	600
Coq.ZArith.Zdiv.Z_div_mod_full	600
Coq.ZArith.Zdiv.Z_mod_remainder	600
Coq.ZArith.Zdiv.Z_div_mod_eq	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Z.div_mod; only 1: intros ?; only 1: intropattern subst -> H0; only 1: easy).	2.962014	5
Coq.ZArith.Zdiv.Zmod_eq_full	600	0.1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Z.mul_comm; only 1: rewrite <- Z.add_move_l; only 1: symmetry; only 1: apply Z.div_mod; only 1: easy).	2.931766	7
Coq.ZArith.Zdiv.Zmod_eq	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Zmod_eq_full; only 1: intros ?; only 1: intropattern subst -> H0; only 1: easy).	2.915552	5
Coq.ZArith.Zdiv.Zdiv_eucl_exist	600
Coq.ZArith.Zdiv.Zdiv_mod_unique	600
Coq.ZArith.Zdiv.Zdiv_unique	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.div_unique with r; only 1: auto; only 1: auto).	3.121473	4
Coq.ZArith.Zdiv.Zmod_unique	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.mod_unique with q; only 1: auto; only 1: auto).	3.179474	4
Coq.ZArith.Zdiv.Zmod_0_l	600
Coq.ZArith.Zdiv.Zmod_0_r	600
Coq.ZArith.Zdiv.Zdiv_0_l	600
Coq.ZArith.Zdiv.Zdiv_0_r	600
Coq.ZArith.Zdiv.Zmod_1_r	600	0.0.0.0.2.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Z.mod_eq; only 1: rewrite Z.div_1_r; only 1: Z.nzsimpl; only 1: rewrite Z.sub_diag; only 1: easy; only 1: intros ?; only 1: symmetry in H; only 1: revert H; only 1: apply Z.lt_neq; only 1: apply Z.lt_0_1).	3.573018	44
Coq.ZArith.Zdiv.Zdiv_1_r	600	0.1.0	synth with cache (only 1: intros; only 1: zero_or_not a; only 1: apply Z.div_1_r).	3.229949	10
Coq.ZArith.Zdiv.Z_mod_same_full	600	2.1.0.0	synth with cache (only 1: intros; only 1: zero_or_not a; only 1: apply Z.mod_same; only 1: easy).	3.528582	25
Coq.ZArith.Zdiv.Z_mod_mult	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: rewrite Z.mod_eq; only 1: rewrite Z.div_mul; only 1: rewrite Z.mul_comm; only 1: apply Z.sub_diag; only 1: easy; only 1: easy).	3.244773	8
Coq.ZArith.Zdiv.Z_div_pos	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.div_pos; only 1: auto using Z.gt_lt; only 1: auto using Z.gt_lt).	3.135739	4
Coq.ZArith.Zdiv.Z_div_ge0	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.le_ge; only 1: apply Z_div_pos; only 1: auto using Z.ge_le; only 1: auto using Z.ge_le).	3.170681	5
Coq.ZArith.Zdiv.Z_div_lt	600
Coq.ZArith.Zdiv.Z_div_ge	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.le_ge; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).	3.196598	5
Coq.ZArith.Zdiv.Z_div_le	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt; only 1: auto using Z.gt_lt).	3.213436	4
Coq.ZArith.Zdiv.Z_mult_div_ge	600	0.0.0	synth with cache (only 1: intros; only 1: apply Z.mul_div_le; only 1: auto using Z.gt_lt).	3.172006	3
Coq.ZArith.Zdiv.Z_mult_div_ge_neg	600	0.1.0.0	synth with cache (only 1: intros; only 1: apply Z.le_ge; only 1: apply Z.mul_div_ge; only 1: easy).	3.208173	10
Coq.ZArith.Zdiv.Z_div_exact_full_1	600	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: zero_or_not b; only 1: rewrite Z.div_exact; only 1: auto; only 1: easy).	3.150446	6
Coq.ZArith.Zdiv.Z_div_exact_full_2	600	0.0.1.0	synth with cache (only 1: intros; only 1: rewrite Z.div_exact; only 1: easy; only 1: Z.order).	3.142912	5
Coq.ZArith.Zdiv.Zmod_le	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.mod_le; only 1: assumption; only 1: assumption).	3.225918	4
Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Z.mul_comm; only 1: apply Z.div_lt_upper_bound).	3.220647	5
Coq.ZArith.Zdiv.Zdiv_le_upper_bound	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Z.mul_comm; only 1: apply Z.div_le_upper_bound).	3.148218	5
Coq.ZArith.Zdiv.Zdiv_le_lower_bound	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Z.mul_comm; only 1: apply Z.div_le_lower_bound).	3.179714	5
Coq.ZArith.Zdiv.Zdiv_le_compat_l	600
Coq.ZArith.Zdiv.Zdiv_sgn	600
Coq.ZArith.Zdiv.Z_mod_plus_full	600	0.1.0.0	synth with cache (only 1: intros; only 1: zero_or_not c; only 1: apply Z.mod_add; only 1: easy).	3.043360	6
Coq.ZArith.Zdiv.Zdiv_opp_opp	600	0.1.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.div_opp_opp; only 1: easy).	2.872137	6
Coq.ZArith.Zdiv.Zmod_opp_opp	600	0.1.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_opp; only 1: easy).	3.039591	6
Coq.ZArith.Zdiv.Z_mod_zero_opp_full	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: auto; only 1: auto).	2.991132	5
Coq.ZArith.Zdiv.Z_mod_nz_opp_full	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_nz; only 1: auto; only 1: auto).	2.991894	5
Coq.ZArith.Zdiv.Z_mod_zero_opp_r	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_r_z; only 1: auto; only 1: auto).	3.013572	5
Coq.ZArith.Zdiv.Z_mod_nz_opp_r	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_r_nz; only 1: auto; only 1: auto).	3.052662	5
Coq.ZArith.Zdiv.Z_div_zero_opp_full	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.div_opp_l_z; only 1: auto; only 1: auto).	3.052500	5
Coq.ZArith.Zdiv.Z_div_nz_opp_full	600	1.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: zero_or_not b; only 1: easy; only 1: intros ?; only 1: auto using Z.div_opp_l_nz).	3.080201	8
Coq.ZArith.Zdiv.Z_div_zero_opp_r	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.div_opp_r_z; only 1: auto; only 1: auto).	3.054116	5
Coq.ZArith.Zdiv.Z_div_nz_opp_r	600	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: zero_or_not b; only 1: easy; only 1: intros; only 1: rewrite Z.div_opp_r_nz; only 1: auto; only 1: Z.order; only 1: trivial).	3.174804	17
Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.div_mul_cancel_r; only 1: auto; only 1: auto).	3.066056	5
Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	600
Coq.ZArith.Zdiv.Zmult_mod_distr_l	600
Coq.ZArith.Zdiv.Zmult_mod_distr_r	600
Coq.ZArith.Zdiv.Zmod_mod	600	0.1.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not n; only 1: rewrite Z.mod_small_iff; only 1: auto using Z.mod_bound_or; only 1: easy).	3.128603	6
Coq.ZArith.Zdiv.Zmult_mod	600	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not n; only 1: rewrite Z.mul_mod_idemp_l; only 1: rewrite Z.mul_mod_idemp_r; only 1: easy; only 1: easy; only 1: easy).	3.026388	7
Coq.ZArith.Zdiv.Zplus_mod	600	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not n; only 1: rewrite Z.add_mod_idemp_l; only 1: rewrite Z.add_mod_idemp_r; only 1: easy; only 1: easy; only 1: easy).	3.093148	7
Coq.ZArith.Zdiv.Zminus_mod	600
Coq.ZArith.Zdiv.Zplus_mod_idemp_l	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Zplus_mod; only 1: rewrite Zmod_mod; only 1: rewrite <- Zplus_mod; only 1: auto).	2.982024	5
Coq.ZArith.Zdiv.Zplus_mod_idemp_r	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Zplus_mod; only 1: rewrite Zmod_mod; only 1: rewrite <- Zplus_mod; only 1: auto).	2.927374	5
Coq.ZArith.Zdiv.Zminus_mod_idemp_l	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Zminus_mod; only 1: rewrite Zmod_mod; only 1: rewrite <- Zminus_mod; only 1: auto).	2.953284	5
Coq.ZArith.Zdiv.Zminus_mod_idemp_r	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Zminus_mod; only 1: rewrite Zmod_mod; only 1: rewrite <- Zminus_mod; only 1: auto).	2.919882	5
Coq.ZArith.Zdiv.Zmult_mod_idemp_l	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Zmult_mod; only 1: rewrite Zmod_mod; only 1: rewrite <- Zmult_mod; only 1: auto).	2.940719	5
Coq.ZArith.Zdiv.Zmult_mod_idemp_r	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Zmult_mod; only 1: rewrite Zmod_mod; only 1: rewrite <- Zmult_mod; only 1: auto).	2.937994	5
Coq.ZArith.Zdiv.EqualityModulo.eqm_refl	600
Coq.ZArith.Zdiv.EqualityModulo.eqm_sym	600
Coq.ZArith.Zdiv.EqualityModulo.eqm_trans	600
Coq.ZArith.Zdiv.EqualityModulo.eqm_setoid	600
Coq.ZArith.Zdiv.EqualityModulo.Zplus_eqm	600
Coq.ZArith.Zdiv.EqualityModulo.Zminus_eqm	600
Coq.ZArith.Zdiv.EqualityModulo.Zmult_eqm	600
Coq.ZArith.Zdiv.EqualityModulo.Zopp_eqm	600
Coq.ZArith.Zdiv.EqualityModulo.Zmod_eqm	600
Coq.ZArith.Zdiv.Zdiv_Zdiv	600	0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: rewrite Z.mul_comm; only 1: zero_or_not c; only 1: rewrite Z.mul_comm; only 1: apply Z.div_div; only 1: auto; only 1: apply Z.le_neq; only 1: auto).	3.101356	18
Coq.ZArith.Zdiv.Zmod_div	600	0.1.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: zero_or_not b; only 1: rewrite Z.div_small_iff; only 1: auto using Z.mod_bound_or; only 1: easy).	2.967195	7
Coq.ZArith.Zdiv.Zdiv_mult_le	600	0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: rewrite Z.mul_0_r; only 1: easy; only 1: apply Z.div_mul_le; only 1: auto; only 1: apply Z.le_neq; only 1: auto; only 1: auto).	3.116278	18
Coq.ZArith.Zdiv.Zmod_divides	600	0.0.0.0.0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: rewrite Z.mod_divide; only 1: split; only 1: intros ?; only 1: destruct H0; only 1: exists x; only 1: subst; only 1: auto with zarith; only 1: intros ?; only 1: destruct H0; only 1: exists x; only 1: subst; only 1: auto with zarith; only 1: easy).	3.191661	35
Coq.ZArith.Zdiv.Zmod_odd	600	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- Z.bit0_odd; only 1: rewrite <- Z.bit0_mod; only 1: easy).	2.943556	4
Coq.ZArith.Zdiv.Zmod_even	600	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Zmod_odd; only 1: rewrite Zodd_even_bool; only 1: destruct BinIntDef.Z.even; only 1: easy; only 1: easy).	2.968494	6
Coq.ZArith.Zdiv.Zodd_mod	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Zmod_odd; only 1: destruct BinIntDef.Z.odd; only 1: easy; only 1: easy).	2.977171	5
Coq.ZArith.Zdiv.Zeven_mod	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Zmod_even; only 1: destruct BinIntDef.Z.even; only 1: easy; only 1: easy).	2.962673	5
Coq.ZArith.Zdiv.Z_mod_same	600	0.0	synth with cache (only 1: intros; only 1: apply Z_mod_same_full).	3.013584	2
Coq.ZArith.Zdiv.Z_div_same	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Z_div_same_full; only 1: intros ?; only 1: intropattern subst -> H0; only 1: easy).	3.017686	5
Coq.ZArith.Zdiv.Z_div_plus	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Z_div_plus_full; only 1: intros ?; only 1: intropattern subst -> H0; only 1: easy).	2.952212	5
Coq.ZArith.Zdiv.Z_div_mult	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Z_div_mult_full; only 1: intros ?; only 1: intropattern subst -> H0; only 1: easy).	2.898133	5
Coq.ZArith.Zdiv.Z_mod_plus	600	0.0	synth with cache (only 1: intros; only 1: apply Z_mod_plus_full).	2.956874	2
Coq.ZArith.Zdiv.Z_div_exact_1	600	0.0.0	synth with cache (only 1: intros; only 1: apply Z_div_exact_full_1; only 1: auto with zarith).	3.046218	3
Coq.ZArith.Zdiv.Z_div_exact_2	600	0.0.0.1.0.0	synth with cache (only 1: intros; only 1: apply Z_div_exact_full_2; only 1: intros ?; only 1: intropattern subst -> H1; only 1: easy; only 1: auto).	3.075973	13
Coq.ZArith.Zdiv.Z_mod_zero_opp	600	0.0.0	synth with cache (only 1: intros; only 1: apply Z_mod_zero_opp_full; only 1: auto).	2.967320	3
Coq.ZArith.Zdiv.Zmod_POS_correct	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction a; only 1: simpl; only 1: rewrite IHa; only 1: destruct BinIntDef.Z.pos_div_eucl; only 1: simpl; only 1: case Z.ltb_spec; only 1: reflexivity; only 1: reflexivity; only 1: simpl; only 1: rewrite IHa; only 1: destruct BinIntDef.Z.pos_div_eucl; only 1: simpl; only 1: case Z.ltb_spec; only 1: reflexivity; only 1: reflexivity; only 1: simpl; only 1: case Z.leb_spec; only 1: trivial; only 1: trivial).	3.538185	43
Coq.ZArith.Zdiv.Zmod'_correct	600
Coq.ZArith.Zdiv.Zdiv_eucl_extended	600
Coq.ZArith.Zdiv.div_Zdiv	600
Coq.ZArith.Zdiv.mod_Zmod	600
Coq.QArith.QOrderedType.Q_as_OT.lt_strorder	600	0.0.0	synth with cache (only 1: split; only 1: exact Qlt_irrefl; only 1: exact Qlt_trans).	2.985764	3
Coq.QArith.QOrderedType.Q_as_OT.lt_compat	600	1	synth with cache (only 1: auto with *).	3.085818	10
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.prop_ext	600
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.proof_irrel	600
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.guarded_rel_choice	600
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.AC_bool_subset_to_bool	600
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.pred_ext_and_rel_choice_imp_EM	600
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a1'	600
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a2'	600
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.projT1_injective	600
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.decide	600
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec	600
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec'	600
Coq.Logic.Diaconescu.ExtensionalEpsilon_imp_EM.extensional_epsilon_imp_EM	600
Coq.Logic.Epsilon.constructive_indefinite_description	600	0.0	synth with cache (only 1: apply epsilon_imp_constructive_indefinite_description; only 1: exact epsilon_statement).	2.961687	2
Coq.Logic.Epsilon.small_drinkers'_paradox	600	0.0	synth with cache (only 1: apply epsilon_imp_small_drinker; only 1: exact epsilon_statement).	2.894658	2
Coq.Logic.Epsilon.iota_statement	600	0.0.0.0	synth with cache (only 1: intros; only 1: destruct epsilon_statement with (P := P); only 1: firstorder; only 1: firstorder).	2.954422	4
Coq.Logic.Epsilon.constructive_definite_description	600	0.1	synth with cache (only 1: apply iota_imp_constructive_definite_description; only 1: exact iota_statement).	2.940280	3
Coq.Logic.IndefiniteDescription.constructive_definite_description	600	0.0.0	synth with cache (only 1: intros; only 1: apply constructive_indefinite_description; only 1: firstorder).	2.975732	3
Coq.Logic.IndefiniteDescription.functional_choice	600	0.0	synth with cache (only 1: apply constructive_indefinite_descr_fun_choice; only 1: exact constructive_indefinite_description).	2.996038	2
Coq.Logic.ClassicalChoice.singleton_choice	600
Coq.Logic.ClassicalChoice.choice	600
Coq.NArith.Ndigits.Ptestbit_Pbit	600
Coq.NArith.Ndigits.Ntestbit_Nbit	600
Coq.NArith.Ndigits.Pbit_Ptestbit	600	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Ptestbit_Pbit; only 1: rewrite N2Nat.id; only 1: trivial).	3.328027	4
Coq.NArith.Ndigits.Nbit_Ntestbit	600
Coq.NArith.Ndigits.Nshiftr_nat_S	600	0	synth with cache (only 1: reflexivity).	3.394955	1
Coq.NArith.Ndigits.Nshiftl_nat_S	600	0	synth with cache (only 1: reflexivity).	3.349865	1
Coq.NArith.Ndigits.Nshiftr_nat_equiv	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct n; only 1: simpl; only 1: easy; only 1: simpl; only 1: symmetry; only 1: apply Pos2Nat.inj_iter).	3.473570	8
Coq.NArith.Ndigits.Nshiftr_equiv_nat	600	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Nshiftr_nat_equiv; only 1: rewrite Nat2N.id; only 1: easy).	3.392483	4
Coq.NArith.Ndigits.Nshiftl_nat_equiv	600	0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct a; only 1: intros ?; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: unfold BinNatDef.N.shiftl_nat; only 1: induction BinPosDef.Pos.to_nat; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite IHn; only 1: easy; only 1: intros ?; only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: unfold BinNatDef.N.shiftl_nat; only 1: rewrite <- Pos2Nat.inj_iter; only 1: symmetry; only 1: apply Pos.iter_swap_gen; only 1: easy).	4.054002	68
Coq.NArith.Ndigits.Nshiftl_equiv_nat	600	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Nshiftl_nat_equiv; only 1: rewrite Nat2N.id; only 1: easy).	3.411459	4
Coq.NArith.Ndigits.Nshiftr_nat_spec	600
Coq.NArith.Ndigits.Nshiftl_nat_spec_high	600
Coq.NArith.Ndigits.Nshiftl_nat_spec_low	600
Coq.NArith.Ndigits.Pshiftl_nat_0	600	0	synth with cache (only 1: reflexivity).	3.387694	1
Coq.NArith.Ndigits.Pshiftl_nat_S	600	0	synth with cache (only 1: reflexivity).	3.382964	1
Coq.NArith.Ndigits.Pshiftl_nat_N	600
Coq.NArith.Ndigits.Pshiftl_nat_plus	600
Coq.NArith.Ndigits.Pxor_semantics	600	0.0.0.0	synth with cache (only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ptestbit_Pbit; only 1: rewrite <- Ptestbit_Pbit; only 1: apply N.pos_lxor_spec).	3.427427	4
Coq.NArith.Ndigits.Nxor_semantics	600	0.0.0.0	synth with cache (only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ntestbit_Nbit; only 1: apply N.lxor_spec).	3.398386	4
Coq.NArith.Ndigits.Por_semantics	600	0.0.0.0	synth with cache (only 1: rewrite <- Ptestbit_Pbit; only 1: rewrite <- Ptestbit_Pbit; only 1: rewrite <- Ptestbit_Pbit; only 1: apply N.pos_lor_spec).	3.484090	4
Coq.NArith.Ndigits.Nor_semantics	600	0.0.0.0	synth with cache (only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ntestbit_Nbit; only 1: apply N.lor_spec).	3.465135	4
Coq.NArith.Ndigits.Pand_semantics	600	0.0.0.0	synth with cache (only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ptestbit_Pbit; only 1: rewrite <- Ptestbit_Pbit; only 1: apply N.pos_land_spec).	3.462780	4
Coq.NArith.Ndigits.Nand_semantics	600	0.0.0.0	synth with cache (only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ntestbit_Nbit; only 1: apply N.land_spec).	3.462384	4
Coq.NArith.Ndigits.Pdiff_semantics	600	0.0.0.0	synth with cache (only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ptestbit_Pbit; only 1: rewrite <- Ptestbit_Pbit; only 1: apply N.pos_ldiff_spec).	3.470932	4
Coq.NArith.Ndigits.Ndiff_semantics	600	0.0.0.0	synth with cache (only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ntestbit_Nbit; only 1: apply N.ldiff_spec).	3.409051	4
Coq.NArith.Ndigits.Pbit_faithful_0	600
Coq.NArith.Ndigits.Pbit_faithful	600
Coq.NArith.Ndigits.Nbit_faithful	600
Coq.NArith.Ndigits.Nbit_faithful_iff	600	0.0.0.0.0	synth with cache (only 1: split; only 1: apply Nbit_faithful; only 1: intros; only 1: subst; only 1: easy).	3.298334	5
Coq.NArith.Ndigits.Nbit0_correct	600
Coq.NArith.Ndigits.Ndouble_bit0	600
Coq.NArith.Ndigits.Ndouble_plus_one_bit0	600
Coq.NArith.Ndigits.Ndiv2_double	600
Coq.NArith.Ndigits.Ndiv2_double_plus_one	600
Coq.NArith.Ndigits.Ndiv2_correct	600
Coq.NArith.Ndigits.Nxor_bit0	600	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Nbit0_correct; only 1: rewrite Nxor_semantics; only 1: rewrite Nbit0_correct; only 1: rewrite Nbit0_correct; only 1: easy).	3.295547	6
Coq.NArith.Ndigits.Nxor_div2	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Nbit_faithful; only 1: unfold eqf; only 1: intros ?; only 1: rewrite Nxor_semantics; only 1: rewrite Ndiv2_correct; only 1: rewrite Nxor_semantics; only 1: rewrite Ndiv2_correct; only 1: rewrite Ndiv2_correct; only 1: reflexivity).	3.426361	18
Coq.NArith.Ndigits.Nneg_bit0	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- xorb_true_l; only 1: rewrite <- H; only 1: rewrite Nxor_bit0; only 1: rewrite xorb_assoc_reverse; only 1: rewrite xorb_nilpotent; only 1: rewrite xorb_false_r; only 1: reflexivity).	3.305080	8
Coq.NArith.Ndigits.Nneg_bit0_1	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: reflexivity).	3.239113	4
Coq.NArith.Ndigits.Nneg_bit0_2	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: reflexivity).	3.235755	4
Coq.NArith.Ndigits.Nsame_bit0	600
Coq.NArith.Ndigits.Nbit0_less	600
Coq.NArith.Ndigits.Nbit0_gt	600
Coq.NArith.Ndigits.Nless_not_refl	600	0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold Nless; only 1: rewrite N.lxor_nilpotent; only 1: trivial).	3.269469	4
Coq.NArith.Ndigits.Nless_def_1	600
Coq.NArith.Ndigits.Nless_def_2	600
Coq.NArith.Ndigits.Nless_def_3	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nbit0_less; only 1: apply Ndouble_bit0; only 1: apply Ndouble_plus_one_bit0).	3.258722	4
Coq.NArith.Ndigits.Nless_def_4	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nbit0_gt; only 1: apply Ndouble_plus_one_bit0; only 1: apply Ndouble_bit0).	3.237505	4
Coq.NArith.Ndigits.Nless_z	600
Coq.NArith.Ndigits.N0_less_1	600
Coq.NArith.Ndigits.N0_less_2	600
Coq.NArith.Ndigits.Nless_trans	600
Coq.NArith.Ndigits.Nless_total	600
Coq.NArith.Ndigits.Bv2N_N2Bv	600
Coq.NArith.Ndigits.Bv2N_Nsize	600
Coq.NArith.Ndigits.Bv2N_Nsize_1	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: apply @VectorDef.rectS; only 1: intros; only 1: simpl; only 1: destruct a; only 1: compute; only 1: split; only 1: intros ?; only 1: easy; only 1: trivial; only 1: compute; only 1: split; only 1: intros ?; only 1: inversion H; only 1: Nat.order'; only 1: intros; only 1: simpl; only 1: destruct a; only 1: destruct @Bv2N; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct @Bv2N; only 1: simpl; only 1: intuition; only 1: discriminate; only 1: discriminate; only 1: simpl; only 1: intuition).	4.065161	95
Coq.NArith.Ndigits.Bv2N_upper_bound	600
Coq.NArith.Ndigits.ByteV2N_upper_bound	600	0.0.0	synth with cache (only 1: unfold ByteV2N; only 1: unfold compose; only 1: apply Bv2N_upper_bound).	3.187129	3
Coq.NArith.Ndigits.N2Bv_N2Bv_gen	600
Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	600
Coq.NArith.Ndigits.N2Bv_Bv2N	600
Coq.NArith.Ndigits.Nbit0_Blow	600	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply @VectorDef.caseS; only 1: intros; only 1: unfold Blow; only 1: simpl; only 1: destruct @Bv2N; only 1: simpl; only 1: destruct h; only 1: auto; only 1: auto; only 1: simpl; only 1: destruct h; only 1: auto; only 1: auto).	3.439612	21
Coq.NArith.Ndigits.Bnth_Nbit	600
Coq.NArith.Ndigits.Nbit_Nsize	600
Coq.NArith.Ndigits.Nbit_Bth	600
Coq.NArith.Ndigits.Nxor_BVxor	600
Coq.NArith.Ndigits.Nand_BVand	600
Coq.NArith.Ndigits.N2Bv_sized_Nsize	600
Coq.NArith.Ndigits.N2Bv_sized_Bv2N	600
Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	600
Coq.ZArith.Zpower.Zpower_nat_0_r	600	0	synth with cache (only 1: reflexivity).	2.982530	1
Coq.ZArith.Zpower.Zpower_nat_succ_r	600	0	synth with cache (only 1: reflexivity).	3.047212	1
Coq.ZArith.Zpower.Zpower_nat_is_exp	600
Coq.ZArith.Zpower.Zpower_pos_nat	600	0	synth with cache (only 1: apply Pos2Nat.inj_iter).	2.987043	1
Coq.ZArith.Zpower.Zpower_nat_Z	600	0.0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: rewrite Zpower_nat_succ_r; only 1: rewrite Nat2Z.inj_succ; only 1: rewrite Z.pow_succ_r; only 1: f_equal; only 1: easy; only 1: apply Nat2Z.is_nonneg).	3.083244	8
Coq.ZArith.Zpower.Zpower_nat_Zpower	600	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Zpower_nat_Z; only 1: rewrite Zabs2Nat.id_abs; only 1: rewrite Z.abs_eq; only 1: easy; only 1: trivial).	3.077316	6
Coq.ZArith.Zpower.Zpower_pos_is_exp	600
Coq.ZArith.Zpower.Zpower_exp	600	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.pow_add_r).	3.200685	9
Coq.ZArith.Zpower.Powers_of_2.shift_nat_equiv	600
Coq.ZArith.Zpower.Powers_of_2.shift_pos_equiv	600
Coq.ZArith.Zpower.Powers_of_2.shift_equiv	600
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_equiv	600
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_equiv	600
Coq.ZArith.Zpower.Powers_of_2.two_p_equiv	600
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_S	600
Coq.ZArith.Zpower.Powers_of_2.shift_nat_plus	600
Coq.ZArith.Zpower.Powers_of_2.shift_nat_correct	600
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_correct	600
Coq.ZArith.Zpower.Powers_of_2.shift_pos_nat	600
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_nat	600
Coq.ZArith.Zpower.Powers_of_2.shift_pos_correct	600
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_correct	600
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_is_exp	600
Coq.ZArith.Zpower.Powers_of_2.two_p_is_exp	600
Coq.ZArith.Zpower.Powers_of_2.two_p_gt_ZERO	600
Coq.ZArith.Zpower.Powers_of_2.two_p_S	600
Coq.ZArith.Zpower.Powers_of_2.two_p_pred	600
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct1	600
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct2	600
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct	600
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_ok	600
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_shiftr	600
Coq.Numbers.DecimalString.uint_of_char_spec	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct c; only 1: destruct b; only 1: destruct b0; only 1: destruct b1; only 1: destruct b2; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: injection H as; only 1: intropattern subst <- H; only 1: intuition; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b2; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: injection H as; only 1: intropattern subst <- H; only 1: intuition; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b1; only 1: destruct b2; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: injection H as; only 1: intropattern subst <- H; only 1: intuition; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b2; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: injection H as; only 1: intropattern subst <- H; only 1: intuition; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: injection H as; only 1: intropattern subst <- H; only 1: intuition; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b0; only 1: destruct b1; only 1: destruct b2; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: injection H as; only 1: intropattern subst <- H; only 1: intuition; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b2; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: injection H as; only 1: intropattern subst <- H; only 1: intuition; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b1; only 1: destruct b2; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: injection H as; only 1: intropattern subst <- H; only 1: intuition; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b2; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: injection H as; only 1: intropattern subst <- H; only 1: intuition; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: injection H as; only 1: intropattern subst <- H; only 1: intuition; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H).	40.119498	1804
Coq.Numbers.DecimalString.NilEmpty.usu	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: induction d; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHd; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHd; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHd; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHd; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHd; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHd; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHd; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHd; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHd; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHd; only 1: simpl; only 1: auto).	4.103504	112
Coq.Numbers.DecimalString.NilEmpty.sus	600
Coq.Numbers.DecimalString.NilEmpty.isi	600
Coq.Numbers.DecimalString.NilEmpty.sis	600
Coq.Numbers.DecimalString.NilZero.uint_of_string_nonnil	600
Coq.Numbers.DecimalString.NilZero.sus	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct s; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: apply NilEmpty.sus in H; only 1: destruct d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	3.619903	41
Coq.Numbers.DecimalString.NilZero.usu	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct d; only 1: destruct 1; only 1: easy; only 1: intros ?; only 1: clear H; only 1: apply NilEmpty.usu; only 1: intros ?; only 1: clear H; only 1: apply NilEmpty.usu; only 1: intros ?; only 1: clear H; only 1: apply NilEmpty.usu; only 1: intros ?; only 1: clear H; only 1: apply NilEmpty.usu; only 1: intros ?; only 1: clear H; only 1: apply NilEmpty.usu; only 1: intros ?; only 1: clear H; only 1: apply NilEmpty.usu; only 1: intros ?; only 1: clear H; only 1: apply NilEmpty.usu; only 1: intros ?; only 1: clear H; only 1: apply NilEmpty.usu; only 1: intros ?; only 1: clear H; only 1: apply NilEmpty.usu; only 1: intros ?; only 1: clear H; only 1: apply NilEmpty.usu).	4.017907	89
Coq.Numbers.DecimalString.NilZero.usu_nil	600	0	synth with cache (only 1: reflexivity).	3.016725	1
Coq.Numbers.DecimalString.NilZero.usu_gen	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct d; only 1: right; only 1: reflexivity; only 1: left; only 1: apply NilEmpty.usu; only 1: left; only 1: apply NilEmpty.usu; only 1: left; only 1: apply NilEmpty.usu; only 1: left; only 1: apply NilEmpty.usu; only 1: left; only 1: apply NilEmpty.usu; only 1: left; only 1: apply NilEmpty.usu; only 1: left; only 1: apply NilEmpty.usu; only 1: left; only 1: apply NilEmpty.usu; only 1: left; only 1: apply NilEmpty.usu; only 1: left; only 1: apply NilEmpty.usu).	3.431916	47
Coq.Numbers.DecimalString.NilZero.isi	600
Coq.Numbers.DecimalString.NilZero.isi_posnil	600	0	synth with cache (only 1: reflexivity).	3.117367	1
Coq.Numbers.DecimalString.NilZero.isi_negnil	600	0	synth with cache (only 1: reflexivity).	2.991544	1
Coq.Numbers.DecimalString.NilZero.sis	600
Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	600
Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	600
Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	600
Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	600
Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	600
Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	600
Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	600
Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	600
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	600
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	600
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	600
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	600
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	600
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	600
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	600
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	600
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	600	0	synth with cache (only 1: intuition auto using omniscient_fun_choice_imp_small_drinker, omniscient_fun_choice_imp_fun_choice, fun_choice_and_small_drinker_imp_omniscient_fun_choice).	0.210599	1
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	600
Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	600	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct X with (P := P); only 1: destruct H; only 1: red in H; only 1: auto; only 1: exists x; only 1: apply p; only 1: assumption).	0.379756	19
Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct X with (P := P); only 1: destruct H; only 1: auto; only 1: exists x; only 1: apply p; only 1: assumption).	0.306314	18
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply X; only 1: apply H; only 1: assumption).	0.221314	8
Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	600
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	600	0	synth with cache (only 1: intuition auto using epsilon_imp_constructive_indefinite_description, constructive_indefinite_description_and_small_drinker_imp_epsilon, epsilon_imp_small_drinker).	0.209477	1
Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	600
Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	600
Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	600
Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	600
Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	600
Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	600
Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	600
Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	600	0	synth with cache (only 1: intuition auto using non_dep_dep_functional_rel_reification, dep_non_dep_functional_rel_reification).	1.036800	1
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	600
Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	600
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	600
Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	600
Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	600
Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	600
Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	600
Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	600
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	600
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	600
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	600
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	600	0.0.0	synth with cache (only 1: intros ?; only 1: apply representative_boolean_partition_imp_excluded_middle; only 1: apply H).	3.138125	3
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	600
Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: easy; only 1: apply @eq_equivalence; only 1: intros *; only 1: intros ?; only 1: intros ?; only 1: intropattern subst <- H4; only 1: firstorder; only 1: easy).	3.512624	41
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	600
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	600	1.1.0	synth with cache (only 1: split; only 1: auto using gen_setoid_fun_choice_imp_setoid_fun_choice, setoid_fun_choice_imp_gen_setoid_fun_choice; only 1: auto using gen_setoid_fun_choice_imp_setoid_fun_choice, setoid_fun_choice_imp_gen_setoid_fun_choice).	3.309771	12
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	600
Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	600
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	600	1.1.0	synth with cache (only 1: split; only 1: auto using simple_setoid_fun_choice_imp_setoid_fun_choice, setoid_fun_choice_imp_simple_setoid_fun_choice; only 1: auto using simple_setoid_fun_choice_imp_setoid_fun_choice, setoid_fun_choice_imp_simple_setoid_fun_choice).	3.092346	10
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	600
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	600	0.1.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply fun_choice_imp_functional_rel_reification; only 1: apply setoid_fun_choice_imp_fun_choice; only 1: easy).	2.933687	8
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: firstorder; only 1: firstorder; only 1: firstorder).	3.057376	8
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	600
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	600	0.1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: apply functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice; only 1: easy; only 1: easy; only 1: intros; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply setoid_fun_choice_imp_functional_rel_reification; only 1: easy; only 1: apply setoid_fun_choice_imp_repr_fun_choice; only 1: easy).	3.083682	26
Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	600
Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: destruct H; only 1: destruct H0; only 1: apply functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice; only 1: intros ?; only 1: intros ?; only 1: apply fun_choice_imp_functional_rel_reification; only 1: apply H; only 1: apply fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice; only 1: easy; only 1: easy; only 1: easy; only 1: intros ?; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply setoid_fun_choice_imp_fun_choice; only 1: easy; only 1: split; only 1: apply repr_fun_choice_imp_ext_function_repr; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: firstorder; only 1: firstorder; only 1: firstorder; only 1: apply repr_fun_choice_imp_excluded_middle; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: firstorder; only 1: firstorder; only 1: firstorder).	3.601230	91
Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	600
Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	600	0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: destruct H; only 1: destruct H0; only 1: apply functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice; only 1: intros ?; only 1: intros ?; only 1: apply fun_choice_imp_functional_rel_reification; only 1: easy; only 1: apply fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice; only 1: easy; only 1: easy; only 1: easy; only 1: intros ?; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply setoid_fun_choice_imp_fun_choice; only 1: easy; only 1: split; only 1: apply repr_fun_choice_imp_ext_pred_repr; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: firstorder; only 1: firstorder; only 1: firstorder; only 1: red; only 1: apply proof_irrelevance_cci; only 1: apply repr_fun_choice_imp_excluded_middle; only 1: apply setoid_fun_choice_imp_repr_fun_choice; only 1: easy).	2.982619	90
Coq.QArith.QArith_base.inject_Z_injective	600	0.0.0.0.0	synth with cache (only 1: unfold Qeq; only 1: simpl; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: easy).	2.970475	5
Coq.QArith.QArith_base.Qeq_alt	600	0.0	synth with cache (only 1: symmetry; only 1: apply Z.compare_eq_iff).	2.974380	2
Coq.QArith.QArith_base.Qlt_alt	600	0	synth with cache (only 1: reflexivity).	2.932739	1
Coq.QArith.QArith_base.Qgt_alt	600	0.0	synth with cache (only 1: symmetry; only 1: apply Z.gt_lt_iff).	2.917736	2
Coq.QArith.QArith_base.Qle_alt	600	0	synth with cache (only 1: reflexivity).	2.942902	1
Coq.QArith.QArith_base.Qge_alt	600	0.0	synth with cache (only 1: symmetry; only 1: apply Z.ge_le_iff).	2.948762	2
Coq.QArith.QArith_base.Qcompare_antisym	600	0.0	synth with cache (only 1: symmetry; only 1: apply Z.compare_antisym).	3.013459	2
Coq.QArith.QArith_base.Qcompare_spec	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Qeq; only 1: unfold Qlt; only 1: unfold Qcompare; only 1: case Z.compare_spec; only 1: constructor; only 1: easy; only 1: constructor; only 1: easy; only 1: constructor; only 1: easy).	3.104500	18
Coq.QArith.QArith_base.Qeq_refl	600	0	synth with cache (only 1: reflexivity).	2.976754	1
Coq.QArith.QArith_base.Qeq_sym	600	0	synth with cache (only 1: auto with qarith).	2.968801	1
Coq.QArith.QArith_base.Qeq_trans	600
Coq.QArith.QArith_base.Q_Setoid	600	1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: red; only 1: reflexivity; only 1: red; only 1: auto with *; only 1: red; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Qeq_trans).	3.066296	23
Coq.QArith.QArith_base.Qeq_dec	600	0	synth with cache (only 1: apply Z.eq_dec).	3.042712	1
Coq.QArith.QArith_base.Qeq_bool_iff	600	0.0	synth with cache (only 1: symmetry; only 1: apply Zeq_is_eq_bool).	2.904793	2
Coq.QArith.QArith_base.Qeq_bool_eq	600	0	synth with cache (only 1: apply Qeq_bool_iff).	2.986920	1
Coq.QArith.QArith_base.Qeq_eq_bool	600	0	synth with cache (only 1: apply Qeq_bool_iff).	2.943454	1
Coq.QArith.QArith_base.Qeq_bool_neq	600	0.0.0.0	synth with cache (only 1: rewrite <- Qeq_bool_iff; only 1: intros ?; only 1: intropattern subst -> H; only 1: easy).	2.985204	4
Coq.QArith.QArith_base.Qle_bool_iff	600	0.0	synth with cache (only 1: symmetry; only 1: apply Zle_is_le_bool).	2.933147	2
Coq.QArith.QArith_base.Qle_bool_imp_le	600	0	synth with cache (only 1: apply Qle_bool_iff).	2.858538	1
Coq.QArith.QArith_base.Qnot_eq_sym	600	0	synth with cache (only 1: auto with qarith).	2.937872	1
Coq.QArith.QArith_base.Qeq_bool_comm	600	0.0.0.0.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite Qeq_bool_iff; only 1: rewrite Qeq_bool_iff; only 1: symmetry; only 1: easy).	2.845100	5
Coq.QArith.QArith_base.Qeq_bool_refl	600	0.0	synth with cache (only 1: rewrite Qeq_bool_iff; only 1: auto with qarith).	2.919389	2
Coq.QArith.QArith_base.Qeq_bool_sym	600	0.0.0	synth with cache (only 1: rewrite Qeq_bool_iff; only 1: rewrite Qeq_bool_iff; only 1: auto with qarith).	2.880863	3
Coq.QArith.QArith_base.Qeq_bool_trans	600	1.0.0.0	synth with cache (only 1: rewrite Qeq_bool_iff; only 1: rewrite Qeq_bool_iff; only 1: rewrite Qeq_bool_iff; only 1: apply Qeq_trans).	3.013536	8
Coq.QArith.QArith_base.Qmake_Qdiv	600
Coq.QArith.QArith_base.Qplus_comp	600
Coq.QArith.QArith_base.Qopp_comp	600
Coq.QArith.QArith_base.Qminus_comp	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Qminus; only 1: rewrite H; only 1: rewrite H0; only 1: auto with qarith).	2.957468	18
Coq.QArith.QArith_base.Qmult_comp	600
Coq.QArith.QArith_base.Qinv_comp	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: unfold Qeq; only 1: unfold Qinv; only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: intros ?; only 1: simpl in *; only 1: destruct Qnum1; only 1: simpl in *; only 1: apply Z.mul_eq_0 in H; only 1: destruct H; only 1: subst; only 1: easy; only 1: easy; only 1: simpl in *; only 1: destruct Qnum0; only 1: simpl in *; only 1: discriminate; only 1: simpl in *; only 1: rewrite Pos.mul_comm; only 1: rewrite <- H; only 1: rewrite Pos.mul_comm; only 1: easy; only 1: simpl in *; only 1: discriminate; only 1: simpl in *; only 1: destruct Qnum0; only 1: simpl in *; only 1: discriminate; only 1: simpl in *; only 1: discriminate; only 1: simpl in *; only 1: rewrite Pos.mul_comm; only 1: rewrite <- H; only 1: rewrite Pos.mul_comm; only 1: easy).	3.961063	97
Coq.QArith.QArith_base.Qdiv_comp	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Qdiv; only 1: rewrite H; only 1: rewrite H0; only 1: auto with qarith).	3.307523	18
Coq.QArith.QArith_base.Qcompare_comp	600
Coq.QArith.QArith_base.Qle_comp	600	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Qle_alt; only 1: rewrite Qle_alt; only 1: rewrite H; only 1: rewrite H0; only 1: auto with *).	3.119629	24
Coq.QArith.QArith_base.Qlt_compat	600	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Qlt_alt; only 1: rewrite Qlt_alt; only 1: rewrite H; only 1: rewrite H0; only 1: auto with *).	3.127437	21
Coq.QArith.QArith_base.Qeqb_comp	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply eq_true_iff_eq; only 1: rewrite Qeq_bool_iff; only 1: rewrite Qeq_bool_iff; only 1: rewrite H; only 1: rewrite H0; only 1: split; only 1: auto with qarith; only 1: auto with qarith).	3.192594	22
Coq.QArith.QArith_base.Qleb_comp	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply eq_true_iff_eq; only 1: rewrite Qle_bool_iff; only 1: rewrite Qle_bool_iff; only 1: rewrite Qle_alt; only 1: rewrite Qle_alt; only 1: rewrite H; only 1: rewrite H0; only 1: auto with *).	3.121898	22
Coq.QArith.QArith_base.Q_apart_0_1	600	0.0	synth with cache (only 1: unfold Qeq; only 1: auto with qarith).	2.915670	2
Coq.QArith.QArith_base.Qplus_assoc	600	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: intros ?; only 1: destruct z; only 1: unfold Qeq; only 1: unfold Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	3.150366	19
Coq.QArith.QArith_base.Qplus_0_l	600	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: unfold Qeq; only 1: unfold Qplus; only 1: simpl; only 1: ring).	2.921823	6
Coq.QArith.QArith_base.Qplus_0_r	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: unfold Qeq; only 1: unfold Qplus; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).	2.949522	8
Coq.QArith.QArith_base.Qplus_comm	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: unfold Qeq; only 1: unfold Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: ring).	2.939694	8
Coq.QArith.QArith_base.Qopp_involutive	600	0.0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).	2.907417	4
Coq.QArith.QArith_base.Qplus_opp_r	600	0.0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: intros ?; only 1: ring).	2.929877	4
Coq.QArith.QArith_base.Qplus_inj_r	600
Coq.QArith.QArith_base.Qplus_inj_l	600
Coq.QArith.QArith_base.Qmult_assoc	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_assoc; only 1: ring).	2.963638	5
Coq.QArith.QArith_base.Qmult_0_l	600	0.0.0	synth with cache (only 1: intros; only 1: compute; only 1: reflexivity).	2.867280	3
Coq.QArith.QArith_base.Qmult_0_r	600	0.0.0.0	synth with cache (only 1: intros; only 1: red; only 1: simpl; only 1: ring).	2.839533	4
Coq.QArith.QArith_base.Qmult_1_l	600	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: red; only 1: simpl; only 1: destruct Qnum; only 1: auto; only 1: auto; only 1: auto).	2.904256	7
Coq.QArith.QArith_base.Qmult_1_r	600
Coq.QArith.QArith_base.Qmult_comm	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	3.002238	5
Coq.QArith.QArith_base.Qmult_plus_distr_r	600	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: intros ?; only 1: destruct z; only 1: unfold Qeq; only 1: unfold Qmult; only 1: unfold Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	3.136778	20
Coq.QArith.QArith_base.Qmult_plus_distr_l	600	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: intros ?; only 1: destruct z; only 1: unfold Qeq; only 1: unfold Qmult; only 1: unfold Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	3.245173	20
Coq.QArith.QArith_base.Qmult_integral	600	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: unfold Qeq; only 1: unfold Qmult; only 1: simpl; only 1: rewrite <- Z.mul_eq_0; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: easy).	3.118606	22
Coq.QArith.QArith_base.Qmult_integral_l	600	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: unfold Qeq; only 1: unfold Qmult; only 1: simpl; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_eq_0; only 1: intuition).	3.095618	20
Coq.QArith.QArith_base.inject_Z_plus	600	0.0.0.0.0	synth with cache (only 1: unfold Qplus; only 1: unfold inject_Z; only 1: simpl; only 1: f_equal; only 1: ring).	2.954572	5
Coq.QArith.QArith_base.inject_Z_mult	600	0	synth with cache (only 1: reflexivity).	2.868786	1
Coq.QArith.QArith_base.inject_Z_opp	600	0	synth with cache (only 1: reflexivity).	2.945616	1
Coq.QArith.QArith_base.Qinv_involutive	600	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct q; only 1: destruct Qnum0; only 1: red; only 1: simpl; only 1: easy; only 1: red; only 1: simpl; only 1: reflexivity; only 1: red; only 1: simpl; only 1: reflexivity).	3.040731	20
Coq.QArith.QArith_base.Qmult_inv_r	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: unfold Qeq; only 1: unfold Qmult; only 1: case Qnum0; only 1: simpl; only 1: intros; only 1: simpl_mult; only 1: elim H; only 1: auto; only 1: simpl; only 1: intros; only 1: simpl_mult; only 1: ring; only 1: simpl; only 1: intros; only 1: simpl_mult; only 1: ring).	3.403550	53
Coq.QArith.QArith_base.Qinv_mult_distr	600	0.0.0.0.0.0.1.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct p; only 1: intros ?; only 1: destruct q; only 1: unfold Qeq; only 1: unfold Qinv; only 1: unfold Qmult; only 1: simpl; only 1: destruct Qnum0; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct Qnum1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct Qnum1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	3.842534	75
Coq.QArith.QArith_base.Qdiv_mult_l	600	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Qdiv; only 1: rewrite <- Qmult_assoc; only 1: rewrite Qmult_inv_r; only 1: apply Qmult_1_r; only 1: auto).	3.000181	6
Coq.QArith.QArith_base.Qmult_div_r	600
Coq.QArith.QArith_base.Qinv_plus_distr	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	3.071260	5
Coq.QArith.QArith_base.Qinv_minus_distr	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	3.037231	5
Coq.QArith.QArith_base.Qmult_inj_r	600
Coq.QArith.QArith_base.Qmult_inj_l	600
Coq.QArith.QArith_base.Qle_refl	600	1	synth with cache (only 1: auto with *).	2.924517	2
Coq.QArith.QArith_base.Qle_antisym	600	0	synth with cache (only 1: apply Z.le_antisymm).	2.839841	1
Coq.QArith.QArith_base.Qle_trans	600
Coq.QArith.QArith_base.Qlt_irrefl	600	0	synth with cache (only 1: apply Z.lt_irrefl).	2.846133	1
Coq.QArith.QArith_base.Qlt_not_eq	600	0	synth with cache (only 1: apply Z.lt_neq).	2.917181	1
Coq.QArith.QArith_base.Zle_Qle	600	0.0.0.0.0	synth with cache (only 1: unfold Qle; only 1: simpl; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: easy).	2.856215	5
Coq.QArith.QArith_base.Zlt_Qlt	600	0.0.0.0.0	synth with cache (only 1: unfold Qlt; only 1: simpl; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: easy).	2.988359	5
Coq.QArith.QArith_base.Qle_lteq	600	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite Qeq_alt; only 1: rewrite Qle_alt; only 1: rewrite Qlt_alt; only 1: destruct Qcompare; only 1: intuition; only 1: discriminate; only 1: discriminate; only 1: intuition; only 1: discriminate; only 1: discriminate; only 1: intuition; only 1: discriminate; only 1: discriminate).	3.392770	21
Coq.QArith.QArith_base.Qlt_le_weak	600	0	synth with cache (only 1: apply Z.lt_le_incl).	3.030231	1
Coq.QArith.QArith_base.Qle_lt_trans	600
Coq.QArith.QArith_base.Qlt_le_trans	600
Coq.QArith.QArith_base.Qlt_trans	600	0.0.1.0.0	synth with cache (only 1: intros; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: auto).	2.878311	6
Coq.QArith.QArith_base.Qnot_lt_le	600	0	synth with cache (only 1: apply Z.nlt_ge).	2.893312	1
Coq.QArith.QArith_base.Qnot_le_lt	600	0	synth with cache (only 1: apply Z.nle_gt).	2.838552	1
Coq.QArith.QArith_base.Qlt_not_le	600	0	synth with cache (only 1: apply Z.lt_nge).	2.885001	1
Coq.QArith.QArith_base.Qle_not_lt	600	0	synth with cache (only 1: apply Z.le_ngt).	2.862352	1
Coq.QArith.QArith_base.Qle_lt_or_eq	600	0.0.0.0.0.0	synth with cache (only 1: unfold Qle; only 1: unfold Qlt; only 1: unfold Qeq; only 1: intros; only 1: apply Z.lt_eq_cases; only 1: easy).	2.822519	6
Coq.QArith.QArith_base.Q_dec	600
Coq.QArith.QArith_base.Qlt_le_dec	600
Coq.QArith.QArith_base.Qarchimedean	600
Coq.QArith.QArith_base.Qopp_le_compat	600	0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct p; only 1: intros ?; only 1: destruct q; only 1: unfold Qle; only 1: simpl; only 1: rewrite Z.mul_opp_l; only 1: rewrite Z.mul_opp_l; only 1: rewrite <- Z.opp_le_mono; only 1: easy).	2.965367	18
Coq.QArith.QArith_base.Qle_minus_iff	600	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct p; only 1: intros ?; only 1: destruct q; only 1: unfold Qle; only 1: simpl; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_opp_l; only 1: rewrite <- Z.le_sub_le_add_r; only 1: rewrite Z.opp_involutive; only 1: reflexivity).	3.004330	19
Coq.QArith.QArith_base.Qlt_minus_iff	600	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct p; only 1: intros ?; only 1: destruct q; only 1: unfold Qlt; only 1: simpl; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_opp_l; only 1: rewrite <- Z.lt_sub_lt_add_r; only 1: rewrite Z.opp_involutive; only 1: reflexivity).	2.950447	19
Coq.QArith.QArith_base.Qplus_le_compat	600
Coq.QArith.QArith_base.Qplus_lt_le_compat	600
Coq.QArith.QArith_base.Qplus_le_l	600
Coq.QArith.QArith_base.Qplus_le_r	600
Coq.QArith.QArith_base.Qplus_lt_l	600
Coq.QArith.QArith_base.Qplus_lt_r	600
Coq.QArith.QArith_base.Qmult_le_compat_r	600
Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	600
Coq.QArith.QArith_base.Qmult_le_r	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: apply Qmult_lt_0_le_reg_r with z; only 1: easy; only 1: easy; only 1: intros ?; only 1: apply Qmult_le_compat_r; only 1: auto with qarith; only 1: auto with qarith).	3.025907	17
Coq.QArith.QArith_base.Qmult_le_l	600
Coq.QArith.QArith_base.Qmult_lt_compat_r	600
Coq.QArith.QArith_base.Qmult_lt_r	600
Coq.QArith.QArith_base.Qmult_lt_l	600
Coq.QArith.QArith_base.Qmult_le_0_compat	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Qle in *; only 1: simpl in *; only 1: rewrite Z.mul_1_r in *; only 1: auto with *).	2.928010	8
Coq.QArith.QArith_base.Qinv_le_0_compat	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct a; only 1: destruct Qnum0; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption).	2.905104	17
Coq.QArith.QArith_base.Qle_shift_div_l	600
Coq.QArith.QArith_base.Qle_shift_inv_l	600
Coq.QArith.QArith_base.Qle_shift_div_r	600
Coq.QArith.QArith_base.Qle_shift_inv_r	600
Coq.QArith.QArith_base.Qinv_lt_0_compat	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct a; only 1: destruct Qnum0; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption).	2.900615	17
Coq.QArith.QArith_base.Qlt_shift_div_l	600
Coq.QArith.QArith_base.Qlt_shift_inv_l	600
Coq.QArith.QArith_base.Qlt_shift_div_r	600
Coq.QArith.QArith_base.Qlt_shift_inv_r	600
Coq.QArith.QArith_base.Qinv_lt_contravar	600
Coq.QArith.QArith_base.Qpower_positive_comp	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- H0; only 1: clear y0 H0; only 1: unfold Qpower_positive; only 1: induction x0; only 1: simpl; only 1: rewrite IHx0; only 1: rewrite H; only 1: reflexivity; only 1: simpl; only 1: rewrite IHx0; only 1: reflexivity; only 1: simpl; only 1: easy).	2.991928	44
Coq.QArith.QArith_base.Qpower_comp	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- H0; only 1: clear y0 H0; only 1: destruct x0; only 1: simpl; only 1: auto with *; only 1: simpl; only 1: unfold Qpower_positive; only 1: induction p; only 1: simpl; only 1: rewrite IHp; only 1: rewrite H; only 1: reflexivity; only 1: simpl; only 1: rewrite IHp; only 1: reflexivity; only 1: simpl; only 1: easy; only 1: simpl; only 1: rewrite H; only 1: auto with *).	3.016102	52
Coq.Strings.BinaryString.Raw.to_N_of_pos	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity).	3.518046	42
Coq.Strings.BinaryString.to_N_of_N	600	0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Raw.to_N_of_pos).	3.278475	3
Coq.Strings.BinaryString.Z_of_of_Z	600	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: cbv[of_Z to_Z]; only 1: destruct z; only 1: cbn; only 1: trivial; only 1: cbn; only 1: rewrite Raw.to_N_of_pos; only 1: cbn; only 1: trivial; only 1: cbn; only 1: rewrite Raw.to_N_of_pos; only 1: cbn; only 1: trivial).	3.482237	20
Coq.Strings.BinaryString.to_nat_of_nat	600	1.0.0.0.0.0.0	synth with cache (only 1: cbv[to_nat of_nat]; only 1: rewrite to_N_of_N; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply Pnat.SuccNat2Pos.id_succ).	3.322473	8
Coq.Strings.BinaryString.to_pos_of_pos	600
Coq.Strings.HexString.Raw.to_N_of_pos	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity).	7.210585	420
Coq.Strings.HexString.to_N_of_N	600	0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Raw.to_N_of_pos).	3.234682	3
Coq.Strings.HexString.to_Z_of_Z	600	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: cbv[of_Z to_Z]; only 1: destruct z; only 1: cbn; only 1: trivial; only 1: cbn; only 1: rewrite Raw.to_N_of_pos; only 1: cbn; only 1: trivial; only 1: cbn; only 1: rewrite Raw.to_N_of_pos; only 1: cbn; only 1: trivial).	3.564730	20
Coq.Strings.HexString.to_nat_of_nat	600	1.0.0.0.0.0.0	synth with cache (only 1: cbv[to_nat of_nat]; only 1: rewrite to_N_of_N; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply Pnat.SuccNat2Pos.id_succ).	3.289415	8
Coq.Strings.HexString.to_pos_of_pos	600
Coq.Strings.OctalString.Raw.to_N_of_pos	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity).	5.031292	204
Coq.Strings.OctalString.to_N_of_N	600	0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Raw.to_N_of_pos).	3.176288	3
Coq.Strings.OctalString.to_Z_of_Z	600	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: cbv[of_Z to_Z]; only 1: destruct z; only 1: cbn; only 1: trivial; only 1: cbn; only 1: rewrite Raw.to_N_of_pos; only 1: cbn; only 1: trivial; only 1: cbn; only 1: rewrite Raw.to_N_of_pos; only 1: cbn; only 1: trivial).	3.413829	20
Coq.Strings.OctalString.to_nat_of_nat	600	1.0.0.0.0.0.0	synth with cache (only 1: cbv[to_nat of_nat]; only 1: rewrite to_N_of_N; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply Pnat.SuccNat2Pos.id_succ).	3.270919	8
Coq.Strings.OctalString.to_pos_of_pos	600
Coq.Numbers.DecimalNat.Unsigned.to_lu_succ	600	0	synth with cache (only 1: reflexivity).	2.769874	1
Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	600	0.0.0.0.0.0	synth with cache (only 1: revert d; only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	2.782150	6
Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	600	0.0.1.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite IHn; only 1: rewrite <- to_little_uint_succ; only 1: easy).	2.984500	15
Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	600	1.0.0.0	synth with cache (only 1: unfold Init.Nat.to_uint; only 1: f_equal; only 1: symmetry; only 1: apply to_lu_equiv).	2.829880	9
Coq.Numbers.DecimalNat.Unsigned.of_lu_eqn	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: simpl; only 1: auto; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	3.352146	47
Coq.Numbers.DecimalNat.Unsigned.of_lu_succ	600
Coq.Numbers.DecimalNat.Unsigned.of_to_lu	600	0.0.1.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite of_lu_succ; only 1: f_equal; only 1: easy).	2.959850	15
Coq.Numbers.DecimalNat.Unsigned.of_lu_revapp	600
Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	600	0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: revert n; only 1: induction d; only 1: intros; only 1: simpl Init.Nat.of_uint_acc; only 1: simpl usize; only 1: simpl; only 1: Nat.nzsimpl; only 1: easy; only 1: intros; only 1: simpl Init.Nat.of_uint_acc; only 1: rewrite Nat.tail_mul_spec; only 1: rewrite IHd; only 1: simpl usize; only 1: rewrite Nat.pow_succ_r'; only 1: unfold rev at 2; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: ring; only 1: intros; only 1: simpl Init.Nat.of_uint_acc; only 1: rewrite Nat.tail_mul_spec; only 1: rewrite IHd; only 1: simpl usize; only 1: rewrite Nat.pow_succ_r'; only 1: unfold rev at 2; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: ring; only 1: intros; only 1: simpl Init.Nat.of_uint_acc; only 1: rewrite Nat.tail_mul_spec; only 1: rewrite IHd; only 1: simpl usize; only 1: rewrite Nat.pow_succ_r'; only 1: unfold rev at 2; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: ring; only 1: intros; only 1: simpl Init.Nat.of_uint_acc; only 1: rewrite Nat.tail_mul_spec; only 1: rewrite IHd; only 1: simpl usize; only 1: rewrite Nat.pow_succ_r'; only 1: unfold rev at 2; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: ring; only 1: intros; only 1: simpl Init.Nat.of_uint_acc; only 1: rewrite Nat.tail_mul_spec; only 1: rewrite IHd; only 1: simpl usize; only 1: rewrite Nat.pow_succ_r'; only 1: unfold rev at 2; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: ring; only 1: intros; only 1: simpl Init.Nat.of_uint_acc; only 1: rewrite Nat.tail_mul_spec; only 1: rewrite IHd; only 1: simpl usize; only 1: rewrite Nat.pow_succ_r'; only 1: unfold rev at 2; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: ring; only 1: intros; only 1: simpl Init.Nat.of_uint_acc; only 1: rewrite Nat.tail_mul_spec; only 1: rewrite IHd; only 1: simpl usize; only 1: rewrite Nat.pow_succ_r'; only 1: unfold rev at 2; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: ring; only 1: intros; only 1: simpl Init.Nat.of_uint_acc; only 1: rewrite Nat.tail_mul_spec; only 1: rewrite IHd; only 1: simpl usize; only 1: rewrite Nat.pow_succ_r'; only 1: unfold rev at 2; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: ring; only 1: intros; only 1: simpl Init.Nat.of_uint_acc; only 1: rewrite Nat.tail_mul_spec; only 1: rewrite IHd; only 1: simpl usize; only 1: rewrite Nat.pow_succ_r'; only 1: unfold rev at 2; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: ring; only 1: intros; only 1: simpl Init.Nat.of_uint_acc; only 1: rewrite Nat.tail_mul_spec; only 1: rewrite IHd; only 1: simpl usize; only 1: rewrite Nat.pow_succ_r'; only 1: unfold rev at 2; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: ring).	14.986151	904
Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	600	0.0.0	synth with cache (only 1: unfold Init.Nat.of_uint; only 1: rewrite of_uint_acc_spec; only 1: easy).	2.954360	3
Coq.Numbers.DecimalNat.Unsigned.of_to	600	1.0.0.0	synth with cache (only 1: rewrite to_uint_alt; only 1: rewrite of_uint_alt; only 1: rewrite rev_rev; only 1: apply of_to_lu).	2.967500	9
Coq.Numbers.DecimalNat.Unsigned.to_lu_tenfold	600
Coq.Numbers.DecimalNat.Unsigned.of_lu_0	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: easy; only 1: simpl_of_lu; only 1: rewrite Nat.add_0_l; only 1: split; only 1: intros ?; only 1: apply Nat.eq_mul_0_r in H; only 1: rewrite IHd in H; only 1: simpl; only 1: rewrite H; only 1: easy; only 1: auto; only 1: intros ?; only 1: simpl in H; only 1: destruct nztail; only 1: destruct IHd; only 1: intropattern subst -> H1; only 1: clear H0; only 1: easy; only 1: clear H0; only 1: easy; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: simpl_of_lu; only 1: easy; only 1: simpl_of_lu; only 1: easy; only 1: simpl_of_lu; only 1: easy; only 1: simpl_of_lu; only 1: easy; only 1: simpl_of_lu; only 1: easy; only 1: simpl_of_lu; only 1: easy; only 1: simpl_of_lu; only 1: easy; only 1: simpl_of_lu; only 1: easy; only 1: simpl_of_lu; only 1: easy).	4.131572	126
Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	600
Coq.Numbers.DecimalNat.Unsigned.to_of_lu	600
Coq.Numbers.DecimalNat.Unsigned.to_of	600	1.0.0.0	synth with cache (only 1: rewrite to_uint_alt; only 1: rewrite of_uint_alt; only 1: rewrite to_of_lu; only 1: apply rev_lnorm_rev).	2.588892	7
Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	600
Coq.Numbers.DecimalNat.Unsigned.to_uint_surj	600
Coq.Numbers.DecimalNat.Unsigned.of_uint_norm	600	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Init.Nat.of_uint; only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	2.669378	21
Coq.Numbers.DecimalNat.Unsigned.of_inj	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- to_of; only 1: rewrite <- to_of; only 1: f_equal; only 1: easy).	2.626505	5
Coq.Numbers.DecimalNat.Unsigned.of_iff	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- to_of; only 1: rewrite <- to_of; only 1: f_equal; only 1: easy; only 1: intros ?; only 1: rewrite <- of_uint_norm; only 1: rewrite H; only 1: apply of_uint_norm).	2.735259	18
Coq.Numbers.DecimalNat.Signed.of_to	600	1.0.0.0.0.0	synth with cache (only 1: unfold Init.Nat.to_int; only 1: unfold Init.Nat.of_int; only 1: unfold norm; only 1: f_equal; only 1: rewrite Unsigned.of_uint_norm; only 1: apply Unsigned.of_to).	2.564249	9
Coq.Numbers.DecimalNat.Signed.to_of	600
Coq.Numbers.DecimalNat.Signed.to_int_inj	600
Coq.Numbers.DecimalNat.Signed.to_int_pos_surj	600
Coq.Numbers.DecimalNat.Signed.of_int_norm	600	0.0.0	synth with cache (only 1: unfold Init.Nat.of_int; only 1: rewrite norm_invol; only 1: easy).	2.582573	3
Coq.Numbers.DecimalNat.Signed.of_inj_pos	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Init.Nat.of_int; only 1: simpl; only 1: intros ?; only 1: injection H as; only 1: apply Unsigned.of_inj; only 1: rewrite <- Unsigned.of_uint_norm; only 1: rewrite H; only 1: rewrite Unsigned.of_uint_norm; only 1: easy).	2.656290	17
Coq.micromega.ZifyInst.PropAnd	600	0.0	synth with cache (only 1: constructor; only 1: tauto).	3.000783	2
Coq.micromega.ZifyInst.PropOr	600	0.0	synth with cache (only 1: constructor; only 1: tauto).	3.020179	2
Coq.micromega.ZifyInst.PropArrow	600	0.0.0	synth with cache (only 1: constructor; only 1: intros; only 1: tauto).	2.964539	3
Coq.micromega.ZifyInst.PropIff	600	0.0.0	synth with cache (only 1: constructor; only 1: intros; only 1: tauto).	3.011608	3
Coq.micromega.ZifyInst.PropNot	600	0.0.0.0	synth with cache (only 1: constructor; only 1: intros; only 1: apply imp_iff_compat_r; only 1: assumption).	3.025934	4
Coq.micromega.ZifyInst.of_nat_to_nat_eq	600
Coq.micromega.ZifyInst.z_max_spec	600
Coq.micromega.ZifyInst.z_min_spec	600
Coq.ZArith.Zcomplements.floor_gt0	600	0	synth with cache (only 1: reflexivity).	2.988139	1
Coq.ZArith.Zcomplements.floor_ok	600
Coq.ZArith.Zcomplements.Z_lt_abs_rec	600
Coq.ZArith.Zcomplements.Z_lt_abs_induction	600
Coq.ZArith.Zcomplements.Zcase_sign	600	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct n; only 1: apply H; only 1: easy; only 1: apply H0; only 1: easy; only 1: apply H1; only 1: easy).	3.289966	20
Coq.ZArith.Zcomplements.sqr_pos	600	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.square_nonneg).	3.129631	3
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_correct	600
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil	600
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_cons	600
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil_inv	600
Coq.micromega.Ztac.eq_incl	600	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: easy).	2.990903	3
Coq.micromega.Ztac.elim_concl_eq	600
Coq.micromega.Ztac.elim_concl_le	600
Coq.micromega.Ztac.elim_concl_lt	600
Coq.micromega.Ztac.Zlt_le_add_1	600	0	synth with cache (only 1: exact Zlt_le_succ).	2.983158	1
Coq.micromega.Ztac.add_le	600	1.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: Z.order_pos).	3.104314	9
Coq.micromega.Ztac.mul_le	600	0.0.1.0	synth with cache (only 1: intros; only 1: apply Z.mul_nonneg_nonneg; only 1: easy; only 1: easy).	2.985928	5
Coq.Strings.String.string_dec	600	0.0	synth with cache (only 1: decide equality; only 1: apply ascii_dec).	3.201668	2
Coq.Strings.String.eqb_spec	600
Coq.Strings.String.eqb_refl	600
Coq.Strings.String.eqb_sym	600	0	synth with cache (only 1: t_eqb).	3.233035	1
Coq.Strings.String.eqb_eq	600	0	synth with cache (only 1: t_eqb).	3.282577	1
Coq.Strings.String.eqb_neq	600	0	synth with cache (only 1: t_eqb).	3.159142	1
Coq.Strings.String.eqb_compat	600	0	synth with cache (only 1: t_eqb).	3.245597	1
Coq.Strings.String.get_correct	600
Coq.Strings.String.append_correct1	600	0.1.0.0.2.1.0.0.0.0.0.1.0.0.0.0.1.0.0.0	synth with cache (only 1: intros ?; only 1: elim s1; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: inversion H; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case n; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: apply lt_S_n; only 1: auto).	4.157107	123
Coq.Strings.String.append_correct2	600
Coq.Strings.String.substring_correct1	600	0.0.0.0.0.0.2.0.2.0.0.1.0.0.0.0.0.1.0.0.0.1.0.0.2.0.0.0.0.1.0.0.0.0.0.0.0.0.2.0.1.0.0.0	synth with cache (only 1: intros ?; only 1: elim s; only 1: simpl; only 1: intros ?; only 1: case n; only 1: intros ?; only 1: case m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case n; only 1: intros ?; only 1: case m; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: inversion H0; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: case p; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: apply lt_S_n; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- plus_Snm_nSm; only 1: simpl; only 1: auto).	6.750666	443
Coq.Strings.String.substring_correct2	600	1.0.2.0.0.2.0.2.0.0.1.0.0.0.0.2.0.0.0.0.1.0.0.0.0.0.0.0.0.2.0.1.0.0.0	synth with cache (only 1: intros ?; only 1: elim s; only 1: simpl; only 1: intros ?; only 1: case n; only 1: intros ?; only 1: case m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case n; only 1: intros ?; only 1: case m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: case p; only 1: intros ?; only 1: inversion H0; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: apply le_S_n; only 1: auto; only 1: auto).	5.925383	418
Coq.Strings.String.prefix_correct	600
Coq.Strings.String.index_correct1	600
Coq.Strings.String.index_correct2	600
Coq.Strings.String.index_correct3	600
Coq.Strings.String.index_correct4	600
Coq.Strings.String.string_of_list_ascii_of_string	600	0.0.0.0.0	synth with cache (only 1: induction s; only 1: reflexivity; only 1: cbn; only 1: apply f_equal; only 1: apply IHs).	3.322567	5
Coq.Strings.String.list_ascii_of_string_of_list_ascii	600	0.0.0.0.0	synth with cache (only 1: induction s; only 1: reflexivity; only 1: cbn; only 1: apply f_equal; only 1: apply IHs).	3.249229	5
Coq.Strings.String.string_of_list_byte_of_string	600
Coq.Strings.String.list_byte_of_string_of_list_byte	600	0.0.0.0.0.0.0.0	synth with cache (only 1: cbv[string_of_list_byte list_byte_of_string]; only 1: erewrite list_ascii_of_string_of_list_ascii; only 1: erewrite List.map_map; only 1: erewrite List.map_ext; only 1: erewrite List.map_id; only 1: reflexivity; only 1: intros ?; only 1: apply byte_of_ascii_of_byte).	3.262060	8
Coq.Classes.SetoidDec.unit_eqdec_obligation_1	600	0.0.0	synth with cache (only 1: destruct x; only 1: destruct y; only 1: reflexivity).	2.867931	3
Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	600
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.linear_search_smallest	600
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.epsilon_smallest	600
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_implies_acc	600
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc	600
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc_ex	600
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.acc_implies_P_eventually	600
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.constructive_indefinite_ground_description_nat_Acc	600
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.P'_decidable	600
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_indefinite_ground_description	600
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_definite_ground_description	600
Coq.Bool.Zerob.zerob_true_intro	600
Coq.Bool.Zerob.zerob_true_elim	600
Coq.Bool.Zerob.zerob_false_intro	600
Coq.Bool.Zerob.zerob_false_elim	600
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_add_opp	600
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	600
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pair_wd	600
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	600
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_wd	600
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	600
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_wd	600
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	600
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_comm	600
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_wd	600
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.Induction.bi_induction	600
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_succ	600
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	600
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.one_succ	600
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	600
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	600
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_succ	600
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_0_l	600
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_succ_l	600
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_0_r	600
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_succ_r	600
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_0_l	600
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	600
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_eq_cases	600
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_irrefl	600
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_succ_r	600
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_l	600
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_r	600
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_l	600
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_r	600
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_nge	600
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_wd	600
Coq.setoid_ring.Ncring.Ring.pow_pos_comm	600
Coq.setoid_ring.Ncring.Ring.pow_pos_succ	600
Coq.setoid_ring.Ncring.Ring.pow_pos_add	600
Coq.setoid_ring.Ncring.Ring.pow_N_pow_N	600
Coq.setoid_ring.Ncring.Ring.ring_mul_0_l	600
Coq.setoid_ring.Ncring.Ring.ring_mul_0_r	600
Coq.setoid_ring.Ncring.Ring.ring_opp_mul_l	600
Coq.setoid_ring.Ncring.Ring.ring_opp_mul_r	600
Coq.setoid_ring.Ncring.Ring.ring_opp_add	600
Coq.setoid_ring.Ncring.Ring.ring_opp_opp	600
Coq.setoid_ring.Ncring.Ring.ring_sub_ext	600
Coq.setoid_ring.Ncring.Ring.ring_add_0_r	600
Coq.setoid_ring.Ncring.Ring.ring_add_assoc1	600
Coq.setoid_ring.Ncring.Ring.ring_add_assoc2	600
Coq.setoid_ring.Ncring.Ring.ring_opp_zero	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rplus_morph_Proper	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rtimes_morph_Proper	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.ropp_morph_Proper	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rle_morph_Proper	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rlt_morph_Proper	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rminus_morph_Proper	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rneq_symm	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_l	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_r	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_r	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_comm	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_l	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_comm	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rminus_eq_0	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_cancel_l	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_em	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_dne	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_eq	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_trans	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_trans	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_le_trans	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_gt_cases	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_neq	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_ngt	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_nge	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_l	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_r	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_l	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_r	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_le_mono	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_lt_mono	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_pos	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_nonneg	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_pos	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_nonneg	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_le_minus	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_minus	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_lt_mono	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_pos_neg	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_nonneg_nonneg	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_pos_neg	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neg_neg	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_square_nonneg	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neq_0	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_neg_pos	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_0_1	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_succ_r	600
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_succ	600
Coq.setoid_ring.ArithRing.natSRth	600	1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: reflexivity; only 1: intros ?; only 1: intros ?; only 1: nzinduct n; only 1: PeanoNat.Nat.nzsimpl; only 1: easy; only 1: intros ?; only 1: PeanoNat.Nat.nzsimpl; only 1: rewrite PeanoNat.Nat.succ_inj_wd; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: nzinduct n; only 1: PeanoNat.Nat.nzsimpl; only 1: easy; only 1: intros ?; only 1: PeanoNat.Nat.nzsimpl; only 1: rewrite PeanoNat.Nat.succ_inj_wd; only 1: easy; only 1: intros ?; only 1: PeanoNat.Nat.nzsimpl'; only 1: easy; only 1: exact PeanoNat.Nat.mul_0_l; only 1: intros ?; only 1: intros ?; only 1: nzinduct n; only 1: PeanoNat.Nat.nzsimpl; only 1: auto; only 1: intros ?; only 1: PeanoNat.Nat.nzsimpl; only 1: rewrite PeanoNat.Nat.add_cancel_r; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: nzinduct n; only 1: PeanoNat.Nat.nzsimpl; only 1: easy; only 1: intros ?; only 1: PeanoNat.Nat.nzsimpl; only 1: rewrite PeanoNat.Nat.mul_add_distr_r; only 1: rewrite PeanoNat.Nat.add_cancel_r; only 1: easy; only 1: exact PeanoNat.Nat.mul_add_distr_r).	5.335824	121
Coq.setoid_ring.ArithRing.nat_morph_N	600	0.0.0.0.0.1.1.1.0.0.0	synth with cache (only 1: constructor; only 1: trivial; only 1: trivial; only 1: exact N2Nat.inj_add; only 1: exact N2Nat.inj_mul; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply N.eqb_eq in H; only 1: subst; only 1: easy).	2.961919	38
Coq.setoid_ring.Ring.BoolTheory	600
Coq.setoid_ring.Ring.bool_eq_ok	600
Coq.setoid_ring.InitialRing.Zth	600	0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: exact Z.add_0_l; only 1: intros ?; only 1: intros ?; only 1: destruct x; only 1: destruct y; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct y; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite Pos.add_comm; only 1: easy; only 1: simpl; only 1: trivial; only 1: destruct y; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite Pos.add_comm; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: nzinduct x; only 1: trivial; only 1: intros ?; only 1: Z.nzsimpl; only 1: rewrite Z.succ_inj_wd; only 1: easy; only 1: intros ?; only 1: destruct x; only 1: easy; only 1: easy; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: nzinduct x; only 1: Z.nzsimpl; only 1: easy; only 1: intros ?; only 1: Z.nzsimpl; only 1: rewrite Z.add_cancel_r; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: nzinduct x; only 1: Z.nzsimpl; only 1: easy; only 1: intros ?; only 1: Z.nzsimpl; only 1: rewrite Z.mul_add_distr_r; only 1: rewrite Z.add_cancel_r; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct z; only 1: rewrite Z.Private_BootStrap.mul_0_r; only 1: rewrite Z.Private_BootStrap.mul_0_r; only 1: rewrite Z.Private_BootStrap.mul_0_r; only 1: easy; only 1: apply Z.Private_BootStrap.mul_add_distr_pos; only 1: apply Z.Private_BootStrap.opp_inj; only 1: rewrite Z.Private_BootStrap.opp_add_distr; only 1: rewrite <- Z.Private_BootStrap.mul_opp_r; only 1: rewrite <- Z.Private_BootStrap.mul_opp_r; only 1: rewrite <- Z.Private_BootStrap.mul_opp_r; only 1: apply Z.Private_BootStrap.mul_add_distr_pos; only 1: trivial; only 1: intros ?; only 1: rewrite Z.add_opp_r; only 1: rewrite Z.sub_diag; only 1: easy).	8.198791	412
Coq.setoid_ring.InitialRing.ZMORPHISM.radd_ext3_Proper	600
Coq.setoid_ring.InitialRing.ZMORPHISM.rmul_ext3_Proper	600
Coq.setoid_ring.InitialRing.ZMORPHISM.ropp_ext3_Proper	600
Coq.setoid_ring.InitialRing.ZMORPHISM.get_signZ_th	600
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.rsub_ext3_Proper	600
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.same_gen	600
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_Psucc	600
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_add	600
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_mult	600
Coq.setoid_ring.InitialRing.ZMORPHISM.rsub_ext4_Proper	600
Coq.setoid_ring.InitialRing.ZMORPHISM.same_genZ	600
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_Zeqb_ok	600
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ1_pos_sub	600
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_add	600
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_mul	600
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_ext	600
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_morph	600
Coq.setoid_ring.InitialRing.Nth	600	1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: exact N.add_0_l; only 1: intros ?; only 1: intros ?; only 1: nzinduct n; only 1: N.nzsimpl; only 1: easy; only 1: intros ?; only 1: N.nzsimpl; only 1: rewrite N.succ_inj_wd; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: nzinduct n; only 1: N.nzsimpl; only 1: easy; only 1: intros ?; only 1: N.nzsimpl; only 1: rewrite N.succ_inj_wd; only 1: easy; only 1: intros ?; only 1: N.nzsimpl'; only 1: easy; only 1: exact N.mul_0_l; only 1: intros ?; only 1: intros ?; only 1: nzinduct n; only 1: N.nzsimpl; only 1: easy; only 1: intros ?; only 1: N.nzsimpl; only 1: rewrite N.add_cancel_r; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: nzinduct n; only 1: N.nzsimpl; only 1: easy; only 1: intros ?; only 1: N.nzsimpl; only 1: rewrite N.mul_add_distr_r; only 1: rewrite N.add_cancel_r; only 1: easy; only 1: exact N.mul_add_distr_r).	5.120345	122
Coq.setoid_ring.InitialRing.Neqb_ok	600
Coq.setoid_ring.InitialRing.NMORPHISM.radd_ext4_Proper	600
Coq.setoid_ring.InitialRing.NMORPHISM.rmul_ext4_Proper	600
Coq.setoid_ring.InitialRing.NMORPHISM.same_genN	600
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_add	600
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_mult	600
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_sub	600
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_morph	600
Coq.setoid_ring.InitialRing.NWORDMORPHISM.radd_ext5_Proper	600
Coq.setoid_ring.InitialRing.NWORDMORPHISM.rmul_ext5_Proper	600
Coq.setoid_ring.InitialRing.NWORDMORPHISM.ropp_ext5_Proper	600
Coq.setoid_ring.InitialRing.NWORDMORPHISM.rsub_ext7_Proper	600
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword0_ok	600
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_cons	600
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_Nwcons	600
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_ok	600
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwadd_ok	600
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwopp_ok	600
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwscal_ok	600
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwmul_ok	600
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_morph	600
Coq.setoid_ring.InitialRing.GEN_DIV.radd_ext_Proper	600
Coq.setoid_ring.InitialRing.GEN_DIV.rmul_ext_Proper	600
Coq.setoid_ring.InitialRing.GEN_DIV.ropp_ext_Proper	600
Coq.setoid_ring.InitialRing.GEN_DIV.rsub_ext_Proper	600
Coq.setoid_ring.InitialRing.GEN_DIV.triv_div_th	600
Coq.setoid_ring.InitialRing.GEN_DIV.Ztriv_div_th	600
Coq.setoid_ring.InitialRing.GEN_DIV.Ntriv_div_th	600
Coq.MSets.MSetRBT.MakeRaw.singleton_spec	600
Coq.MSets.MSetRBT.MakeRaw.singleton_ok	600
Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	600
Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	600
Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	600
Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	600
Coq.MSets.MSetRBT.MakeRaw.rmatch	600
Coq.MSets.MSetRBT.MakeRaw.rrmatch	600
Coq.MSets.MSetRBT.MakeRaw.rrmatch'	600
Coq.MSets.MSetRBT.MakeRaw.lbal_match	600
Coq.MSets.MSetRBT.MakeRaw.rbal_match	600
Coq.MSets.MSetRBT.MakeRaw.rbal'_match	600
Coq.MSets.MSetRBT.MakeRaw.lbalS_match	600
Coq.MSets.MSetRBT.MakeRaw.rbalS_match	600
Coq.MSets.MSetRBT.MakeRaw.lbal_spec	600
Coq.MSets.MSetRBT.MakeRaw.lbal_ok	600
Coq.MSets.MSetRBT.MakeRaw.rbal_spec	600
Coq.MSets.MSetRBT.MakeRaw.rbal_ok	600
Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	600
Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	600
Coq.MSets.MSetRBT.MakeRaw.ins_spec	600
Coq.MSets.MSetRBT.MakeRaw.ins_ok	600
Coq.MSets.MSetRBT.MakeRaw.add_spec'	600
Coq.MSets.MSetRBT.MakeRaw.add_spec	600
Coq.MSets.MSetRBT.MakeRaw.add_ok	600
Coq.MSets.MSetRBT.MakeRaw.lbalS_spec	600
Coq.MSets.MSetRBT.MakeRaw.lbalS_ok	600
Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	600
Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	600
Coq.MSets.MSetRBT.MakeRaw.append_rr_match	600
Coq.MSets.MSetRBT.MakeRaw.append_bb_match	600
Coq.MSets.MSetRBT.MakeRaw.append_spec	600
Coq.MSets.MSetRBT.MakeRaw.append_ok	600
Coq.MSets.MSetRBT.MakeRaw.del_spec	600
Coq.MSets.MSetRBT.MakeRaw.del_ok	600
Coq.MSets.MSetRBT.MakeRaw.remove_spec	600
Coq.MSets.MSetRBT.MakeRaw.remove_ok	600
Coq.MSets.MSetRBT.MakeRaw.delmin_spec	600
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec1	600
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec2	600
Coq.MSets.MSetRBT.MakeRaw.remove_min_ok	600
Coq.MSets.MSetRBT.MakeRaw.treeify_zero_spec	600
Coq.MSets.MSetRBT.MakeRaw.treeify_one_spec	600
Coq.MSets.MSetRBT.MakeRaw.treeify_cont_spec	600
Coq.MSets.MSetRBT.MakeRaw.treeify_aux_spec	600
Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	600
Coq.MSets.MSetRBT.MakeRaw.plength_spec	600
Coq.MSets.MSetRBT.MakeRaw.treeify_elements	600
Coq.MSets.MSetRBT.MakeRaw.treeify_spec	600
Coq.MSets.MSetRBT.MakeRaw.treeify_ok	600
Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	600
Coq.MSets.MSetRBT.MakeRaw.filter_elements	600
Coq.MSets.MSetRBT.MakeRaw.filter_spec	600
Coq.MSets.MSetRBT.MakeRaw.filter_ok	600
Coq.MSets.MSetRBT.MakeRaw.partition_aux_spec	600
Coq.MSets.MSetRBT.MakeRaw.partition_spec	600
Coq.MSets.MSetRBT.MakeRaw.partition_spec1	600
Coq.MSets.MSetRBT.MakeRaw.partition_spec2	600
Coq.MSets.MSetRBT.MakeRaw.partition_ok1	600
Coq.MSets.MSetRBT.MakeRaw.partition_ok2	600
Coq.MSets.MSetRBT.MakeRaw.INV_init	600
Coq.MSets.MSetRBT.MakeRaw.INV_sym	600
Coq.MSets.MSetRBT.MakeRaw.INV_drop	600
Coq.MSets.MSetRBT.MakeRaw.INV_eq	600
Coq.MSets.MSetRBT.MakeRaw.INV_lt	600
Coq.MSets.MSetRBT.MakeRaw.INV_rev	600
Coq.MSets.MSetRBT.MakeRaw.union_list_ok	600
Coq.MSets.MSetRBT.MakeRaw.linear_union_ok	600
Coq.MSets.MSetRBT.MakeRaw.fold_add_ok	600
Coq.MSets.MSetRBT.MakeRaw.union_ok	600
Coq.MSets.MSetRBT.MakeRaw.union_list_spec	600
Coq.MSets.MSetRBT.MakeRaw.linear_union_spec	600
Coq.MSets.MSetRBT.MakeRaw.fold_add_spec	600
Coq.MSets.MSetRBT.MakeRaw.union_spec'	600
Coq.MSets.MSetRBT.MakeRaw.union_spec	600
Coq.MSets.MSetRBT.MakeRaw.inter_list_ok	600
Coq.MSets.MSetRBT.MakeRaw.linear_inter_ok	600
Coq.MSets.MSetRBT.MakeRaw.inter_ok	600
Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	600
Coq.MSets.MSetRBT.MakeRaw.linear_inter_spec	600
Coq.MSets.MSetRBT.MakeRaw.mem_proper	600
Coq.MSets.MSetRBT.MakeRaw.inter_spec	600
Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	600
Coq.MSets.MSetRBT.MakeRaw.diff_inter_ok	600
Coq.MSets.MSetRBT.MakeRaw.fold_remove_ok	600
Coq.MSets.MSetRBT.MakeRaw.diff_ok	600
Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	600
Coq.MSets.MSetRBT.MakeRaw.linear_diff_spec	600
Coq.MSets.MSetRBT.MakeRaw.fold_remove_spec	600
Coq.MSets.MSetRBT.MakeRaw.diff_spec	600
Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	600
Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	600
Coq.MSets.MSetRBT.BalanceProps.arb_nr_rb	600
Coq.MSets.MSetRBT.BalanceProps.rb_maxdepth	600
Coq.MSets.MSetRBT.BalanceProps.rb_mindepth	600
Coq.MSets.MSetRBT.BalanceProps.maxdepth_upperbound	600
Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	600
Coq.MSets.MSetRBT.BalanceProps.singleton_rb	600
Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	600
Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	600
Coq.MSets.MSetRBT.BalanceProps.lbal_rb	600
Coq.MSets.MSetRBT.BalanceProps.rbal_rb	600
Coq.MSets.MSetRBT.BalanceProps.rbal'_rb	600
Coq.MSets.MSetRBT.BalanceProps.lbalS_rb	600
Coq.MSets.MSetRBT.BalanceProps.lbalS_arb	600
Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	600
Coq.MSets.MSetRBT.BalanceProps.rbalS_arb	600
Coq.MSets.MSetRBT.BalanceProps.ifred_notred	600
Coq.MSets.MSetRBT.BalanceProps.ifred_or	600
Coq.MSets.MSetRBT.BalanceProps.ins_rr_rb	600
Coq.MSets.MSetRBT.BalanceProps.ins_arb	600
Coq.MSets.MSetRBT.BalanceProps.add_rb	600
Coq.MSets.MSetRBT.BalanceProps.append_arb_rb	600
Coq.MSets.MSetRBT.BalanceProps.del_arb	600
Coq.MSets.MSetRBT.BalanceProps.remove_rb	600
Coq.MSets.MSetRBT.BalanceProps.treeify_zero_rb	600
Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	600
Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	600
Coq.MSets.MSetRBT.BalanceProps.treeify_aux_rb	600
Coq.MSets.MSetRBT.BalanceProps.treeify_rb	600
Coq.MSets.MSetRBT.BalanceProps.filter_rb	600
Coq.MSets.MSetRBT.BalanceProps.partition_rb1	600
Coq.MSets.MSetRBT.BalanceProps.partition_rb2	600
Coq.MSets.MSetRBT.BalanceProps.fold_add_rb	600
Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	600
Coq.MSets.MSetRBT.BalanceProps.union_rb	600
Coq.MSets.MSetRBT.BalanceProps.inter_rb	600
Coq.MSets.MSetRBT.BalanceProps.diff_rb	600
Coq.MSets.MSetRBT.Make.remove_min_spec1	600
Coq.MSets.MSetRBT.Make.remove_min_spec2	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.radd_ext_Proper	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.rmul_ext_Proper	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.ropp_ext_Proper	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.rsub_ext_Proper	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pequiv_eq	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_ext	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pinj_ext	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.PX_ext	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.jump_add'	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_ok	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_spec	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi0	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi1	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ok	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ext	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.pow_pos_add	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.ceqb_spec	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ok	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ext	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddC_ok	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.PsubC_ok	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_aux_ok	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_ok	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.Popp_ok	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddX_ok	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.Padd_ok	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_opp	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_ok	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulI_ok	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pmul_ok	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkZmon_ok	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.zmon_pred_ok	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkVmon_ok	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.Mcphi_ok	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.Mphi_ok	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.POneSubst_ok	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst1_ok	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst_ok	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL1_ok	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL_ok	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubstL_ok	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkX_ok	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_pos_ok	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_N_ok	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.mon_of_pol_ok	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.interp_PElist_ok	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.norm_subst_ok	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_correct	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_rec_ok	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult1_ok	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmultm1_ok	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.r_list_pow_rev	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_pos_ok	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_ok	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkadd_mult_ok	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_pow_list_ok	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_mult_dev_ok	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mult_dev_ok	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.Pphi_avoid_ok	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.local_mkpow_ok	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_pow_ok	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_pow_correct	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkmult_pow_ok	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkpow_ok	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkopp_pow_ok	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_dev_ok	600
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_correct	600
Coq.MSets.MSetPositive.PositiveSet.In_compat	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	2.597178	17
Coq.MSets.MSetPositive.PositiveSet.eq_equiv	600	0	synth with cache (only 1: firstorder).	2.429231	1
Coq.MSets.MSetPositive.PositiveSet.mem_spec	600	0.0	synth with cache (only 1: unfold In; only 1: intuition).	2.471624	2
Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	600
Coq.MSets.MSetPositive.PositiveSet.empty_spec	600	0.0.0.0.0	synth with cache (only 1: unfold Empty; only 1: unfold In; only 1: intros ?; only 1: rewrite mem_Leaf; only 1: discriminate).	2.414041	5
Coq.MSets.MSetPositive.PositiveSet.mem_node	600	0.0.0.0.0.1.1.1.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case o; only 1: trivial; only 1: destruct l; only 1: destruct r; only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: trivial; only 1: trivial).	2.746153	49
Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	600
Coq.MSets.MSetPositive.PositiveSet.subset_Leaf_s	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply empty_spec in H; only 1: elim H).	2.394340	5
Coq.MSets.MSetPositive.PositiveSet.subset_spec	600
Coq.MSets.MSetPositive.PositiveSet.equal_subset	600
Coq.MSets.MSetPositive.PositiveSet.equal_spec	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite subset_spec; only 1: rewrite subset_spec; only 1: unfold Equal; only 1: unfold Subset; only 1: firstorder).	2.380288	8
Coq.MSets.MSetPositive.PositiveSet.eq_dec	600
Coq.MSets.MSetPositive.PositiveSet.lex_Opp	600	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst -> H; only 1: intros ?; only 1: intropattern subst -> H; only 1: case u'; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	2.650500	40
Coq.MSets.MSetPositive.PositiveSet.compare_bool_inv	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct b; only 1: intros ?; only 1: destruct b'; only 1: reflexivity; only 1: reflexivity; only 1: intros ?; only 1: destruct b'; only 1: reflexivity; only 1: reflexivity).	2.430977	18
Coq.MSets.MSetPositive.PositiveSet.compare_inv	600
Coq.MSets.MSetPositive.PositiveSet.lex_Eq	600	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct u; only 1: intuition discriminate; only 1: intuition discriminate; only 1: intuition discriminate).	2.334433	6
Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct b1; only 1: intros ?; only 1: destruct b2; only 1: intuition discriminate; only 1: intuition discriminate; only 1: intros ?; only 1: destruct b2; only 1: intuition discriminate; only 1: intuition discriminate).	2.361269	18
Coq.MSets.MSetPositive.PositiveSet.compare_equal	600
Coq.MSets.MSetPositive.PositiveSet.compare_gt	600	0.1.0.0.1.0.0.0.0.0	synth with cache (only 1: unfold lt; only 1: intros ?; only 1: intros ?; only 1: rewrite compare_inv; only 1: case compare; only 1: intros; only 1: discriminate; only 1: trivial; only 1: intros; only 1: discriminate).	2.349091	30
Coq.MSets.MSetPositive.PositiveSet.compare_eq	600	0.0.0.0.0.0	synth with cache (only 1: unfold eq; only 1: intros ?; only 1: intros ?; only 1: rewrite compare_equal; only 1: rewrite equal_spec; only 1: trivial).	2.114713	6
Coq.MSets.MSetPositive.PositiveSet.compare_spec	600
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_cxe	600
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xce	600
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lxl	600
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_gxg	600
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xll	600
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xgg	600
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lex	600
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare_bool	600
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_Leaf	600	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite compare_inv; only 1: simpl; only 1: case is_empty; only 1: reflexivity; only 1: reflexivity).	2.052577	6
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_empty_x	600
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_empty	600
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare	600
Coq.MSets.MSetPositive.PositiveSet.lt_strorder	600
Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	600
Coq.MSets.MSetPositive.PositiveSet.compare_compat	600	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: rewrite compare_inv; only 1: rewrite H0; only 1: rewrite <- compare_inv; only 1: reflexivity).	2.215194	19
Coq.MSets.MSetPositive.PositiveSet.lt_compat	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold lt; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	2.246222	18
Coq.MSets.MSetPositive.PositiveSet.add_spec	600
Coq.MSets.MSetPositive.PositiveSet.remove_spec	600
Coq.MSets.MSetPositive.PositiveSet.singleton_spec	600	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold singleton; only 1: intros ?; only 1: intros ?; only 1: rewrite add_spec; only 1: intuition; only 1: unfold In in *; only 1: rewrite mem_Leaf in *; only 1: discriminate).	2.127424	8
Coq.MSets.MSetPositive.PositiveSet.union_spec	600
Coq.MSets.MSetPositive.PositiveSet.inter_spec	600
Coq.MSets.MSetPositive.PositiveSet.diff_spec	600
Coq.MSets.MSetPositive.PositiveSet.fold_spec	600
Coq.MSets.MSetPositive.PositiveSet.cardinal_spec	600
Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	600
Coq.MSets.MSetPositive.PositiveSet.filter_spec	600	0.0	synth with cache (only 1: intros; only 1: apply xfilter_spec).	2.069012	2
Coq.MSets.MSetPositive.PositiveSet.xforall_spec	600
Coq.MSets.MSetPositive.PositiveSet.for_all_spec	600	0.0	synth with cache (only 1: intros; only 1: apply xforall_spec).	2.052340	2
Coq.MSets.MSetPositive.PositiveSet.xexists_spec	600
Coq.MSets.MSetPositive.PositiveSet.exists_spec	600	0.0	synth with cache (only 1: intros; only 1: apply xexists_spec).	2.068100	2
Coq.MSets.MSetPositive.PositiveSet.partition_filter	600
Coq.MSets.MSetPositive.PositiveSet.partition_spec1	600	0.0.0	synth with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).	2.138655	3
Coq.MSets.MSetPositive.PositiveSet.partition_spec2	600	0.0.0	synth with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).	2.119950	3
Coq.MSets.MSetPositive.PositiveSet.xelements_spec	600
Coq.MSets.MSetPositive.PositiveSet.elements_spec1	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold elements; only 1: intros; only 1: rewrite xelements_spec; only 1: split; only 1: intros ?; only 1: destruct H; only 1: inversion H; only 1: destruct H; only 1: destruct H; only 1: simpl in *; only 1: congruence; only 1: intros ?; only 1: right; only 1: exists x; only 1: auto).	2.268594	23
Coq.MSets.MSetPositive.PositiveSet.lt_rev_append	600
Coq.MSets.MSetPositive.PositiveSet.elements_spec2	600
Coq.MSets.MSetPositive.PositiveSet.elements_spec2w	600	1.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply SortA_NoDupA with PositiveOrderedTypeBits.lt; only 1: auto with *; only 1: auto with *; only 1: auto with *; only 1: apply elements_spec2).	2.090179	7
Coq.MSets.MSetPositive.PositiveSet.choose_spec1	600
Coq.MSets.MSetPositive.PositiveSet.choose_spec2	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Empty; only 1: unfold In; only 1: intros ?; only 1: intros ?; only 1: induction s; only 1: intros ?; only 1: apply empty_spec; only 1: destruct b; only 1: discriminate; only 1: simpl in H; only 1: destruct choose; only 1: discriminate; only 1: destruct choose; only 1: discriminate; only 1: intros ?; only 1: destruct a; only 1: apply IHs2; only 1: reflexivity; only 1: apply IHs1; only 1: reflexivity; only 1: discriminate).	2.460452	45
Coq.MSets.MSetPositive.PositiveSet.choose_empty	600
Coq.MSets.MSetPositive.PositiveSet.choose_spec3'	600
Coq.MSets.MSetPositive.PositiveSet.choose_spec3	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply choose_spec3' in H1; only 1: congruence).	2.263268	17
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec1	600
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec3	600
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec2	600
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec1	600
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec3	600
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec2	600
Coq.micromega.EnvRing.MakeRingPol.radd_ext_Proper	600
Coq.micromega.EnvRing.MakeRingPol.rmul_ext_Proper	600
Coq.micromega.EnvRing.MakeRingPol.ropp_ext_Proper	600
Coq.micromega.EnvRing.MakeRingPol.rsub_ext_Proper	600
Coq.micromega.EnvRing.MakeRingPol.Peq_ok	600
Coq.micromega.EnvRing.MakeRingPol.Peq_spec	600
Coq.micromega.EnvRing.MakeRingPol.Pphi0	600
Coq.micromega.EnvRing.MakeRingPol.Pphi1	600
Coq.micromega.EnvRing.MakeRingPol.env_morph	600
Coq.micromega.EnvRing.MakeRingPol.Pjump_add	600
Coq.micromega.EnvRing.MakeRingPol.Pjump_xO_tail	600
Coq.micromega.EnvRing.MakeRingPol.Pjump_pred_double	600
Coq.micromega.EnvRing.MakeRingPol.mkPinj_ok	600
Coq.micromega.EnvRing.MakeRingPol.pow_pos_add	600
Coq.micromega.EnvRing.MakeRingPol.ceqb_spec	600
Coq.micromega.EnvRing.MakeRingPol.mkPX_ok	600
Coq.micromega.EnvRing.MakeRingPol.PaddC_ok	600
Coq.micromega.EnvRing.MakeRingPol.PsubC_ok	600
Coq.micromega.EnvRing.MakeRingPol.PmulC_aux_ok	600
Coq.micromega.EnvRing.MakeRingPol.PmulC_ok	600
Coq.micromega.EnvRing.MakeRingPol.Popp_ok	600
Coq.micromega.EnvRing.MakeRingPol.PaddX_ok	600
Coq.micromega.EnvRing.MakeRingPol.Padd_ok	600
Coq.micromega.EnvRing.MakeRingPol.PsubX_ok	600
Coq.micromega.EnvRing.MakeRingPol.Psub_ok	600
Coq.micromega.EnvRing.MakeRingPol.PmulI_ok	600
Coq.micromega.EnvRing.MakeRingPol.Pmul_ok	600
Coq.micromega.EnvRing.MakeRingPol.Psquare_ok	600
Coq.micromega.EnvRing.MakeRingPol.Mphi_morph	600
Coq.micromega.EnvRing.MakeRingPol.Mjump_xO_tail	600
Coq.micromega.EnvRing.MakeRingPol.Mjump_pred_double	600
Coq.micromega.EnvRing.MakeRingPol.Mjump_add	600
Coq.micromega.EnvRing.MakeRingPol.mkZmon_ok	600
Coq.micromega.EnvRing.MakeRingPol.zmon_pred_ok	600
Coq.micromega.EnvRing.MakeRingPol.mkVmon_ok	600
Coq.micromega.EnvRing.MakeRingPol.Mphi_ok	600
Coq.micromega.EnvRing.MakeRingPol.POneSubst_ok	600
Coq.micromega.EnvRing.MakeRingPol.PNSubst1_ok	600
Coq.micromega.EnvRing.MakeRingPol.PNSubst_ok	600
Coq.micromega.EnvRing.MakeRingPol.PSubstL1_ok	600
Coq.micromega.EnvRing.MakeRingPol.PSubstL_ok	600
Coq.micromega.EnvRing.MakeRingPol.PNSubstL_ok	600
Coq.micromega.EnvRing.MakeRingPol.mkX_ok	600
Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_pos_ok	600
Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_N_ok	600
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	600
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	600
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	600
Coq.ZArith.Zabs.Zabs_ind	600	0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Z.abs_case_strong; only 1: Z.swap_greater; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: subst; only 1: easy; only 1: Z.swap_greater; only 1: trivial; only 1: Z.swap_greater; only 1: trivial).	2.798305	29
Coq.ZArith.Zabs.Zabs_intro	600
Coq.ZArith.Zabs.Zabs_dec	600
Coq.ZArith.Zabs.Zabs_spec	600	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.abs_spec).	2.349440	3
Coq.ZArith.Zabs.Zsgn_spec	600	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.sgn_spec).	2.387774	3
Coq.ZArith.Zabs.Zabs_nat_le	600	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: apply Zabs2Nat.inj_le; only 1: easy; only 1: Z.order; only 1: easy).	2.682064	6
Coq.ZArith.Zabs.Zabs_nat_lt	600	0.0.1.0.1.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: apply Zabs2Nat.inj_lt; only 1: easy; only 1: transitivity n; only 1: easy; only 1: apply Z.lt_le_incl; only 1: easy; only 1: easy).	2.776493	28
Coq.ZArith.Wf_Z.Z_of_nat_complete	600
Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	600
Coq.ZArith.Wf_Z.Z_of_nat_prop	600
Coq.ZArith.Wf_Z.Z_of_nat_set	600
Coq.ZArith.Wf_Z.natlike_ind	600
Coq.ZArith.Wf_Z.natlike_rec	600
Coq.ZArith.Wf_Z.Efficient_Rec.R_wf	600
Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec2	600
Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec3	600
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_rec	600
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_ind	600
Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_rec	600
Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_induction	600
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_rec	600
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_ind	600
Coq.ZArith.Zbool.Zle_cases	600	0.0.1.0	synth with cache (only 1: case Z.leb_spec; only 1: easy; only 1: Z.swap_greater; only 1: easy).	2.765263	5
Coq.ZArith.Zbool.Zlt_cases	600	0.0.1.0	synth with cache (only 1: case Z.ltb_spec; only 1: easy; only 1: Z.swap_greater; only 1: easy).	2.781588	5
Coq.ZArith.Zbool.Zge_cases	600	1.0.0.0.0	synth with cache (only 1: rewrite Z.geb_leb; only 1: case Z.leb_spec; only 1: Z.swap_greater; only 1: easy; only 1: easy).	2.723281	6
Coq.ZArith.Zbool.Zgt_cases	600	1.0.0.0.0	synth with cache (only 1: rewrite Z.gtb_ltb; only 1: case Z.ltb_spec; only 1: Z.swap_greater; only 1: easy; only 1: easy).	2.775730	6
Coq.ZArith.Zbool.Zle_bool_imp_le	600	0	synth with cache (only 1: apply Z.leb_le).	2.630342	1
Coq.ZArith.Zbool.Zle_imp_le_bool	600	0	synth with cache (only 1: apply Z.leb_le).	2.747473	1
Coq.ZArith.Zbool.Zle_bool_antisym	600	2.0.0	synth with cache (only 1: rewrite Z.leb_le; only 1: rewrite Z.leb_le; only 1: apply Z.le_antisymm).	2.870504	16
Coq.ZArith.Zbool.Zle_bool_trans	600	3.0.0.0	synth with cache (only 1: rewrite Z.leb_le; only 1: rewrite Z.leb_le; only 1: rewrite Z.leb_le; only 1: apply Z.le_trans).	4.056562	70
Coq.ZArith.Zbool.Zle_bool_total	600
Coq.ZArith.Zbool.Zle_bool_plus_mono	600	1.0.0.0	synth with cache (only 1: rewrite Z.leb_le; only 1: rewrite Z.leb_le; only 1: rewrite Z.leb_le; only 1: apply Z.add_le_mono).	2.755122	7
Coq.ZArith.Zbool.Zone_pos	600	0	synth with cache (only 1: reflexivity).	2.671534	1
Coq.ZArith.Zbool.Zone_min_pos	600	0.0.0	synth with cache (only 1: rewrite Z.leb_le; only 1: rewrite Z.leb_gt; only 1: apply Z.le_succ_l).	2.672117	3
Coq.ZArith.Zbool.Zle_is_le_bool	600	1.0	synth with cache (only 1: symmetry; only 1: apply Z.leb_le).	2.646125	4
Coq.ZArith.Zbool.Zge_is_le_bool	600	0.0.0	synth with cache (only 1: Z.swap_greater; only 1: symmetry; only 1: apply Z.leb_le).	2.711466	3
Coq.ZArith.Zbool.Zlt_is_lt_bool	600	1.0	synth with cache (only 1: symmetry; only 1: apply Z.ltb_lt).	2.703442	4
Coq.ZArith.Zbool.Zgt_is_gt_bool	600	0.0.0.0	synth with cache (only 1: Z.swap_greater; only 1: rewrite Z.gtb_ltb; only 1: symmetry; only 1: apply Z.ltb_lt).	2.724541	4
Coq.ZArith.Zbool.Zlt_is_le_bool	600	0.0	synth with cache (only 1: rewrite Z.leb_le; only 1: apply Z.lt_le_pred).	2.597822	2
Coq.ZArith.Zbool.Zgt_is_le_bool	600	0.0.0	synth with cache (only 1: Z.swap_greater; only 1: rewrite Z.leb_le; only 1: apply Z.lt_le_pred).	2.717120	3
Coq.ZArith.Zbool.Zeq_is_eq_bool	600	0.0.0.0.0.0	synth with cache (only 1: unfold Zeq_bool; only 1: rewrite <- Z.compare_eq_iff; only 1: destruct BinIntDef.Z.compare; only 1: easy; only 1: easy; only 1: easy).	2.694120	6
Coq.ZArith.Zbool.Zeq_bool_eq	600	0	synth with cache (only 1: apply Zeq_is_eq_bool).	2.677818	1
Coq.ZArith.Zbool.Zeq_bool_neq	600
Coq.ZArith.Zbool.Zeq_bool_if	600
Coq.MSets.MSetAVL.MakeRaw.singleton_spec	600
Coq.MSets.MSetAVL.MakeRaw.singleton_ok	600
Coq.MSets.MSetAVL.MakeRaw.create_spec	600
Coq.MSets.MSetAVL.MakeRaw.create_ok	600
Coq.MSets.MSetAVL.MakeRaw.bal_spec	600
Coq.MSets.MSetAVL.MakeRaw.bal_ok	600
Coq.MSets.MSetAVL.MakeRaw.add_spec'	600
Coq.MSets.MSetAVL.MakeRaw.add_spec	600
Coq.MSets.MSetAVL.MakeRaw.add_ok	600
Coq.MSets.MSetAVL.MakeRaw.join_spec	600
Coq.MSets.MSetAVL.MakeRaw.join_ok	600
Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	600
Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	600
Coq.MSets.MSetAVL.MakeRaw.remove_min_gt_tree	600
Coq.MSets.MSetAVL.MakeRaw.merge_spec	600
Coq.MSets.MSetAVL.MakeRaw.merge_ok	600
Coq.MSets.MSetAVL.MakeRaw.remove_spec	600
Coq.MSets.MSetAVL.MakeRaw.remove_ok	600
Coq.MSets.MSetAVL.MakeRaw.concat_spec	600
Coq.MSets.MSetAVL.MakeRaw.concat_ok	600
Coq.MSets.MSetAVL.MakeRaw.split_spec1	600
Coq.MSets.MSetAVL.MakeRaw.split_spec2	600
Coq.MSets.MSetAVL.MakeRaw.split_spec3	600
Coq.MSets.MSetAVL.MakeRaw.split_ok	600
Coq.MSets.MSetAVL.MakeRaw.split_ok1	600
Coq.MSets.MSetAVL.MakeRaw.split_ok2	600
Coq.MSets.MSetAVL.MakeRaw.inter_spec_ok	600
Coq.MSets.MSetAVL.MakeRaw.inter_spec	600
Coq.MSets.MSetAVL.MakeRaw.inter_ok	600
Coq.MSets.MSetAVL.MakeRaw.diff_spec_ok	600
Coq.MSets.MSetAVL.MakeRaw.diff_spec	600
Coq.MSets.MSetAVL.MakeRaw.diff_ok	600
Coq.MSets.MSetAVL.MakeRaw.union_spec	600
Coq.MSets.MSetAVL.MakeRaw.union_ok	600
Coq.MSets.MSetAVL.MakeRaw.filter_spec	600
Coq.MSets.MSetAVL.MakeRaw.filter_weak_spec	600
Coq.MSets.MSetAVL.MakeRaw.filter_ok	600
Coq.MSets.MSetAVL.MakeRaw.partition_spec1'	600
Coq.MSets.MSetAVL.MakeRaw.partition_spec2'	600
Coq.MSets.MSetAVL.MakeRaw.partition_spec1	600
Coq.MSets.MSetAVL.MakeRaw.partition_spec2	600
Coq.MSets.MSetAVL.MakeRaw.partition_ok1	600
Coq.MSets.MSetAVL.MakeRaw.partition_ok2	600
Coq.ZArith.Zmisc.iter_nat_of_Z	600	0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case n; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: unfold BinIntDef.Z.iter; only 1: unfold BinIntDef.Z.abs_nat; only 1: apply Pos2Nat.inj_iter; only 1: intros ?; only 1: intros ?; only 1: case H; only 1: trivial).	2.985756	55
Coq.ZArith.ZArith_dec.Dcompare_inf	600
Coq.ZArith.ZArith_dec.Zcompare_rect	600	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct BinIntDef.Z.compare; only 1: auto; only 1: auto; only 1: auto).	2.684124	7
Coq.ZArith.ZArith_dec.Zcompare_rec	600	0	synth with cache (only 1: apply Zcompare_rect).	2.682723	1
Coq.ZArith.ZArith_dec.decidability.Z_lt_dec	600
Coq.ZArith.ZArith_dec.decidability.Z_le_dec	600
Coq.ZArith.ZArith_dec.decidability.Z_gt_dec	600
Coq.ZArith.ZArith_dec.decidability.Z_ge_dec	600
Coq.ZArith.ZArith_dec.decidability.Z_lt_ge_dec	600
Coq.ZArith.ZArith_dec.decidability.Z_lt_le_dec	600
Coq.ZArith.ZArith_dec.decidability.Z_le_gt_dec	600
Coq.ZArith.ZArith_dec.decidability.Z_gt_le_dec	600
Coq.ZArith.ZArith_dec.decidability.Z_ge_lt_dec	600
Coq.ZArith.ZArith_dec.decidability.Z_le_lt_eq_dec	600
Coq.ZArith.ZArith_dec.Zlt_cotrans	600
Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	600
Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	600
Coq.ZArith.ZArith_dec.not_Zeq_inf	600
Coq.ZArith.ZArith_dec.Z_dec	600
Coq.ZArith.ZArith_dec.Z_dec'	600
Coq.ZArith.ZArith_dec.Z_zerop	600
Coq.ZArith.Zmax.Zmax_spec	600
Coq.ZArith.Zmax.Zmax_left	600	0.0.0.0.0.0.0.0	synth with cache (only 1: Z.swap_greater; only 1: unfold Z.le; only 1: unfold BinIntDef.Z.max; only 1: rewrite Z.compare_antisym; only 1: case BinIntDef.Z.compare; only 1: intuition; only 1: intuition; only 1: intuition).	2.882021	8
Coq.ZArith.Zmax.Zpos_max_1	600	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	2.740520	4
Coq.ZArith.Zmin.Zmin_spec	600
Coq.ZArith.Zmin.Zmin_irreducible	600
Coq.ZArith.Zmin.Zmin_le_prime_inf	600	0.0.0	synth with cache (only 1: apply Z.min_case; only 1: auto; only 1: auto).	2.775135	3
Coq.ZArith.Zmin.Zpos_min_1	600	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	2.705468	4
Coq.Strings.Ascii.ascii_dec	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: decide equality; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec).	1.924044	17
Coq.Strings.Ascii.eqb_spec	600
Coq.Strings.Ascii.eqb_refl	600
Coq.Strings.Ascii.eqb_sym	600	0	synth with cache (only 1: t_eqb).	1.764434	1
Coq.Strings.Ascii.eqb_eq	600	0	synth with cache (only 1: t_eqb).	1.760170	1
Coq.Strings.Ascii.eqb_neq	600	0	synth with cache (only 1: t_eqb).	1.885576	1
Coq.Strings.Ascii.eqb_compat	600	0	synth with cache (only 1: t_eqb).	1.744889	1
Coq.Strings.Ascii.ascii_N_embedding	600
Coq.Strings.Ascii.N_ascii_embedding	600
Coq.Strings.Ascii.N_ascii_bounded	600
Coq.Strings.Ascii.ascii_nat_embedding	600
Coq.Strings.Ascii.nat_ascii_embedding	600
Coq.Strings.Ascii.nat_ascii_bounded	600
Coq.Strings.Ascii.ascii_of_byte_of_ascii	600
Coq.Strings.Ascii.byte_of_ascii_of_byte	600
Coq.Strings.Ascii.ascii_of_byte_via_N	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	8.263148	761
Coq.Strings.Ascii.ascii_of_byte_via_nat	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	7.996821	761
Coq.Strings.Ascii.byte_of_ascii_via_N	600
Coq.Strings.Ascii.byte_of_ascii_via_nat	600
Coq.ZArith.auxiliary.Zne_left	600	0.0.0	synth with cache (only 1: unfold Zne; only 1: rewrite <- Z.sub_move_0_r; only 1: easy).	2.399982	3
Coq.ZArith.auxiliary.Zegal_left	600	0	synth with cache (only 1: apply Z.sub_move_0_r).	2.352659	1
Coq.ZArith.auxiliary.Zle_left	600	0	synth with cache (only 1: apply Z.le_0_sub).	2.355434	1
Coq.ZArith.auxiliary.Zle_left_rev	600	0	synth with cache (only 1: apply Z.le_0_sub).	2.392536	1
Coq.ZArith.auxiliary.Zlt_left_rev	600	0	synth with cache (only 1: apply Z.lt_0_sub).	2.368889	1
Coq.ZArith.auxiliary.Zlt_left_lt	600	0	synth with cache (only 1: apply Z.lt_0_sub).	2.368040	1
Coq.ZArith.auxiliary.Zlt_left	600
Coq.ZArith.auxiliary.Zge_left	600	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_0_sub).	2.569158	2
Coq.ZArith.auxiliary.Zgt_left	600	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Zlt_left).	2.626348	2
Coq.ZArith.auxiliary.Zgt_left_gt	600	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	2.597659	2
Coq.ZArith.auxiliary.Zgt_left_rev	600	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	2.412469	2
Coq.ZArith.auxiliary.Zle_mult_approx	600	0.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order_pos).	2.675975	3
Coq.ZArith.auxiliary.Zmult_le_approx	600
Coq.omega.OmegaLemmas.Zred_factor0	600	0.0	synth with cache (only 1: Z.nzsimpl; only 1: easy).	2.527828	2
Coq.omega.OmegaLemmas.Zred_factor1	600	1.0	synth with cache (only 1: rewrite Z.mul_comm; only 1: apply Z.add_diag).	2.705973	3
Coq.omega.OmegaLemmas.Zred_factor2	600	0.0.0	synth with cache (only 1: rewrite Z.mul_add_distr_l; only 1: Z.nzsimpl; only 1: easy).	2.787878	3
Coq.omega.OmegaLemmas.Zred_factor3	600	0.0	synth with cache (only 1: Z.nzsimpl; only 1: easy).	2.792013	2
Coq.omega.OmegaLemmas.Zred_factor4	600	1.0.0.0.0.0	synth with cache (only 1: symmetry; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: apply Z.mul_add_distr_l).	2.642319	9
Coq.omega.OmegaLemmas.Zred_factor5	600	0.0	synth with cache (only 1: Z.nzsimpl; only 1: easy).	2.615051	2
Coq.omega.OmegaLemmas.Zred_factor6	600	0.0	synth with cache (only 1: Z.nzsimpl; only 1: easy).	2.606668	2
Coq.omega.OmegaLemmas.new_var	600	0.0.0	synth with cache (only 1: intros ?; only 1: exists x; only 1: easy).	2.579536	3
Coq.omega.OmegaLemmas.OMEGA1	600	0.0.0	synth with cache (only 1: intros ?; only 1: intropattern subst -> H; only 1: easy).	2.521875	3
Coq.omega.OmegaLemmas.OMEGA2	600	0.0.1.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Z.add_nonneg_nonneg; only 1: easy; only 1: easy).	2.573019	6
Coq.omega.OmegaLemmas.OMEGA3	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intropattern subst -> H0; only 1: intros ?; only 1: apply Z.mul_eq_0 in H0; only 1: destruct H0; only 1: subst; only 1: easy; only 1: subst; only 1: easy).	2.614848	18
Coq.omega.OmegaLemmas.OMEGA4	600
Coq.omega.OmegaLemmas.OMEGA5	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intropattern subst -> H; only 1: intros ?; only 1: intropattern subst -> H; only 1: easy).	2.553873	5
Coq.omega.OmegaLemmas.OMEGA6	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intropattern subst -> H0; only 1: Z.nzsimpl; only 1: trivial).	2.585640	5
Coq.omega.OmegaLemmas.OMEGA7	600	0.0.0	synth with cache (only 1: intros; only 1: Z.swap_greater; only 1: Z.order_pos).	2.556058	3
Coq.omega.OmegaLemmas.OMEGA8	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- Z.opp_nonpos_nonneg in H0; only 1: Z.order).	2.589002	5
Coq.omega.OmegaLemmas.OMEGA9	600	0.0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: rewrite Z.add_opp_diag_l; only 1: easy).	2.503547	4
Coq.omega.OmegaLemmas.OMEGA10	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite Z.mul_add_distr_r; only 1: rewrite Z.mul_add_distr_r; only 1: rewrite Z.mul_add_distr_l; only 1: rewrite Z.mul_assoc; only 1: rewrite Z.mul_assoc; only 1: rewrite <- Z.add_assoc; only 1: rewrite <- Z.add_assoc; only 1: f_equal; only 1: apply Z.add_shuffle3).	2.657152	17
Coq.omega.OmegaLemmas.OMEGA11	600	0.0.0.0	synth with cache (only 1: rewrite Z.mul_add_distr_r; only 1: rewrite Z.mul_assoc; only 1: rewrite Z.add_assoc; only 1: easy).	2.578746	4
Coq.omega.OmegaLemmas.OMEGA12	600	0.0.0	synth with cache (only 1: rewrite Z.mul_add_distr_r; only 1: rewrite Z.mul_assoc; only 1: apply Z.add_shuffle3).	2.520955	3
Coq.omega.OmegaLemmas.OMEGA13	600	0.0.0.0.0.0	synth with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l; only 1: rewrite <- Pos2Z.opp_neg; only 1: rewrite Z.add_opp_diag_r; only 1: Z.nzsimpl; only 1: easy).	2.612869	6
Coq.omega.OmegaLemmas.OMEGA14	600	0.0.0.0.0.0	synth with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l; only 1: rewrite <- Pos2Z.opp_neg; only 1: rewrite Z.add_opp_diag_r; only 1: Z.nzsimpl; only 1: easy).	2.628565	6
Coq.omega.OmegaLemmas.OMEGA15	600	0.0.0.0	synth with cache (only 1: rewrite Z.mul_add_distr_r; only 1: rewrite Z.mul_add_distr_l; only 1: rewrite Z.mul_assoc; only 1: apply Z.add_shuffle1).	2.549241	4
Coq.omega.OmegaLemmas.OMEGA16	600	0.0.0	synth with cache (only 1: rewrite Z.mul_add_distr_r; only 1: rewrite Z.mul_assoc; only 1: easy).	2.560534	3
Coq.omega.OmegaLemmas.OMEGA17	600	0.0.0.0.0.0.0	synth with cache (only 1: unfold Zne; only 1: unfold not; only 1: intros ?; only 1: intros ?; only 1: subst; only 1: Z.nzsimpl; only 1: easy).	2.607088	7
Coq.omega.OmegaLemmas.OMEGA18	600	0.0.0.0.0	synth with cache (only 1: unfold Zne; only 1: unfold not; only 1: intros; only 1: subst; only 1: auto).	2.499576	5
Coq.omega.OmegaLemmas.OMEGA19	600
Coq.omega.OmegaLemmas.OMEGA20	600	0.0.0.0.0.0.0	synth with cache (only 1: unfold Zne; only 1: unfold not; only 1: intros ?; only 1: intros ?; only 1: subst; only 1: Z.nzsimpl; only 1: easy).	2.542669	7
Coq.omega.OmegaLemmas.intro_Z	600
Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	600
Coq.Structures.OrdersEx.PairOrderedType.lt_compat	600
Coq.Structures.OrdersEx.PairOrderedType.compare_spec	600
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	600
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_trans	600
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_compat	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	2.819599	17
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	600	0.0.0	synth with cache (only 1: split; only 1: exact bits_lt_antirefl; only 1: exact bits_lt_trans).	2.697467	3
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.compare_spec	600
Coq.Strings.Byte.byte_dec_lb	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: subst y; only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	7.943670	763
Coq.Strings.Byte.byte_dec_bl	600
Coq.Strings.Byte.eqb_false	600
Coq.Strings.Byte.nat.of_to_nat	600
Coq.Strings.Byte.nat.to_of_nat	600
Coq.Strings.Byte.nat.to_of_nat_iff	600
Coq.Strings.Byte.nat.to_of_nat_option_map	600
Coq.Strings.Byte.nat.to_nat_bounded	600
Coq.Strings.Byte.nat.of_nat_None_iff	600
Coq.Strings.Byte.N.of_to_N	600
Coq.Strings.Byte.N.to_of_N	600
Coq.Strings.Byte.N.to_of_N_iff	600
Coq.Strings.Byte.N.to_of_N_option_map	600
Coq.Strings.Byte.N.to_N_bounded	600
Coq.Strings.Byte.N.of_N_None_iff	600
Coq.Strings.Byte.N.to_N_via_nat	600
Coq.Strings.Byte.N.to_nat_via_N	600
Coq.Strings.Byte.N.of_N_via_nat	600
Coq.Strings.Byte.N.of_nat_via_N	600
Coq.ZArith.Znat.nat_N_Z	600	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	2.599884	3
Coq.ZArith.Znat.N_nat_Z	600
Coq.ZArith.Znat.positive_nat_Z	600
Coq.ZArith.Znat.positive_N_Z	600	0	synth with cache (only 1: reflexivity).	2.617903	1
Coq.ZArith.Znat.positive_N_nat	600	0	synth with cache (only 1: reflexivity).	2.623999	1
Coq.ZArith.Znat.positive_nat_N	600
Coq.ZArith.Znat.Z_N_nat	600	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	2.698304	4
Coq.ZArith.Znat.Z_nat_N	600	0.0.4.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply positive_nat_N; only 1: simpl; only 1: trivial).	2.738838	35
Coq.ZArith.Znat.Zabs_N_nat	600	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	2.659215	4
Coq.ZArith.Znat.Zabs_nat_N	600	4.0.4.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply positive_nat_N; only 1: simpl; only 1: apply positive_nat_N).	2.941312	77
Coq.ZArith.Znat.N2Z.id	600	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	2.589892	3
Coq.ZArith.Znat.N2Z.inj	600	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: destruct m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	2.760966	19
Coq.ZArith.Znat.N2Z.inj_iff	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: destruct m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: intros; only 1: f_equal; only 1: easy).	2.726097	26
Coq.ZArith.Znat.N2Z.is_nonneg	600	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	2.573987	3
Coq.ZArith.Znat.N2Z.inj_0	600	0	synth with cache (only 1: reflexivity).	2.528966	1
Coq.ZArith.Znat.N2Z.inj_pos	600	0	synth with cache (only 1: reflexivity).	2.543171	1
Coq.ZArith.Znat.N2Z.inj_compare	600	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy).	2.585891	7
Coq.ZArith.Znat.N2Z.inj_le	600	0.0.0	synth with cache (only 1: unfold Z.le; only 1: rewrite inj_compare; only 1: easy).	2.591530	3
Coq.ZArith.Znat.N2Z.inj_lt	600	0.0.0	synth with cache (only 1: unfold Z.lt; only 1: rewrite inj_compare; only 1: easy).	2.577544	3
Coq.ZArith.Znat.N2Z.inj_ge	600	0.0.0	synth with cache (only 1: unfold Z.ge; only 1: rewrite inj_compare; only 1: easy).	2.634783	3
Coq.ZArith.Znat.N2Z.inj_gt	600	0.0.0	synth with cache (only 1: unfold Z.gt; only 1: rewrite inj_compare; only 1: easy).	2.573130	3
Coq.ZArith.Znat.N2Z.inj_abs_N	600	0.0.0.0	synth with cache (only 1: destruct z; only 1: easy; only 1: easy; only 1: easy).	2.547965	4
Coq.ZArith.Znat.N2Z.inj_add	600	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy).	2.558532	7
Coq.ZArith.Znat.N2Z.inj_mul	600	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy).	2.607714	7
Coq.ZArith.Znat.N2Z.inj_sub_max	600	0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite Z.pos_sub_spec; only 1: rewrite Pos.compare_sub_mask; only 1: unfold BinPosDef.Pos.sub; only 1: destruct BinPosDef.Pos.sub_mask; only 1: easy; only 1: easy; only 1: easy).	2.805169	40
Coq.ZArith.Znat.N2Z.inj_sub	600	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite inj_sub_max; only 1: unfold N.le in H; only 1: rewrite N.compare_antisym in H; only 1: rewrite <- inj_compare in H; only 1: rewrite Z.compare_sub in H; only 1: destruct BinIntDef.Z.sub; only 1: trivial; only 1: trivial; only 1: destruct H; only 1: easy).	2.671814	20
Coq.ZArith.Znat.N2Z.inj_succ	600	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: rewrite Pos.add_1_r; only 1: easy).	2.472062	5
Coq.ZArith.Znat.N2Z.inj_pred_max	600	0.0.0.0	synth with cache (only 1: unfold BinIntDef.Z.pred; only 1: rewrite N.pred_sub; only 1: rewrite inj_sub_max; only 1: easy).	2.506985	4
Coq.ZArith.Znat.N2Z.inj_pred	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold BinIntDef.Z.pred; only 1: rewrite N.pred_sub; only 1: rewrite inj_sub; only 1: trivial; only 1: rewrite N.one_succ; only 1: rewrite N.le_succ_l; only 1: easy).	2.547702	8
Coq.ZArith.Znat.N2Z.inj_min	600	0.0.0.0.0.0.0	synth with cache (only 1: unfold BinIntDef.Z.min; only 1: unfold BinNatDef.N.min; only 1: rewrite inj_compare; only 1: case BinNatDef.N.compare; only 1: easy; only 1: easy; only 1: easy).	2.587242	7
Coq.ZArith.Znat.N2Z.inj_max	600	1.0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold BinIntDef.Z.max; only 1: unfold BinNatDef.N.max; only 1: rewrite inj_compare; only 1: case N.compare_spec; only 1: intros; only 1: subst; only 1: trivial; only 1: intros; only 1: trivial; only 1: intros; only 1: trivial).	2.678458	21
Coq.ZArith.Znat.N2Z.inj_div	600
Coq.ZArith.Znat.N2Z.inj_mod	600
Coq.ZArith.Znat.N2Z.inj_quot	600	1.1.0.1.0.0.0.0.0	synth with cache (only 1: destruct m; only 1: destruct n; only 1: easy; only 1: easy; only 1: rewrite Z.quot_div_nonneg; only 1: rewrite inj_div; only 1: trivial; only 1: apply is_nonneg; only 1: easy).	2.644192	29
Coq.ZArith.Znat.N2Z.inj_rem	600	1.1.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct m; only 1: destruct n; only 1: easy; only 1: easy; only 1: rewrite Z.rem_mod_nonneg; only 1: rewrite inj_mod; only 1: trivial; only 1: easy; only 1: apply is_nonneg; only 1: easy).	2.604523	20
Coq.ZArith.Znat.N2Z.inj_div2	600	0.0.0.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	2.541326	13
Coq.ZArith.Znat.N2Z.inj_quot2	600	0.0.0.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	2.514558	13
Coq.ZArith.Znat.N2Z.inj_pow	600	1.0.0.0.0.1.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: trivial; only 1: rewrite Z.pow_0_l; only 1: easy; only 1: easy; only 1: destruct m; only 1: trivial; only 1: apply Pos2Z.inj_pow).	2.654422	27
Coq.ZArith.Znat.N2Z.inj_testbit	600	1	synth with cache (only 1: apply Z.testbit_of_N).	2.588364	9
Coq.ZArith.Znat.Z2N.id	600	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy).	2.560044	5
Coq.ZArith.Znat.Z2N.inj	600
Coq.ZArith.Znat.Z2N.inj_iff	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: apply inj; only 1: easy; only 1: easy; only 1: intros; only 1: subst; only 1: easy).	2.624554	8
Coq.ZArith.Znat.Z2N.inj_0	600	0	synth with cache (only 1: reflexivity).	2.488617	1
Coq.ZArith.Znat.Z2N.inj_pos	600	0	synth with cache (only 1: reflexivity).	2.545390	1
Coq.ZArith.Znat.Z2N.inj_neg	600	0	synth with cache (only 1: reflexivity).	2.504097	1
Coq.ZArith.Znat.Z2N.inj_add	600	0.0.1.0.0.0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: destruct 2; only 1: easy; only 1: destruct m; only 1: trivial; only 1: destruct 1; only 1: easy; only 1: trivial).	2.802445	38
Coq.ZArith.Znat.Z2N.inj_mul	600	0.1.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy).	2.691387	23
Coq.ZArith.Znat.Z2N.inj_succ	600	0.0.0.0.0.0	synth with cache (only 1: unfold BinIntDef.Z.succ; only 1: intros; only 1: rewrite inj_add; only 1: apply N.add_1_r; only 1: auto; only 1: Z.order').	2.607609	6
Coq.ZArith.Znat.Z2N.inj_sub	600	0.1.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1.0.0.0.1.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy; only 1: destruct m; only 1: trivial; only 1: intros ?; only 1: clear H; only 1: simpl; only 1: rewrite Z.pos_sub_spec; only 1: rewrite Pos.compare_sub_mask; only 1: unfold BinPosDef.Pos.sub; only 1: destruct BinPosDef.Pos.sub_mask; only 1: easy; only 1: easy; only 1: easy; only 1: destruct 1; only 1: easy; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy).	3.127264	84
Coq.ZArith.Znat.Z2N.inj_pred	600
Coq.ZArith.Znat.Z2N.inj_compare	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- N2Z.inj_compare; only 1: rewrite id; only 1: rewrite id; only 1: easy; only 1: easy; only 1: easy).	2.546240	8
Coq.ZArith.Znat.Z2N.inj_le	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Z.le; only 1: unfold N.le; only 1: rewrite inj_compare; only 1: easy; only 1: easy; only 1: easy).	2.482970	8
Coq.ZArith.Znat.Z2N.inj_lt	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Z.lt; only 1: unfold N.lt; only 1: rewrite inj_compare; only 1: easy; only 1: easy; only 1: easy).	2.582956	8
Coq.ZArith.Znat.Z2N.inj_min	600	0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: unfold BinIntDef.Z.min; only 1: unfold BinNatDef.N.min; only 1: simpl; only 1: case BinPosDef.Pos.compare; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: unfold BinIntDef.Z.min; only 1: unfold BinNatDef.N.min; only 1: simpl; only 1: case BinPosDef.Pos.compare; only 1: easy; only 1: easy; only 1: easy).	3.323678	116
Coq.ZArith.Znat.Z2N.inj_max	600	0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: unfold BinIntDef.Z.max; only 1: unfold BinNatDef.N.max; only 1: simpl; only 1: case Pos.compare_spec; only 1: intros; only 1: subst; only 1: reflexivity; only 1: intros; only 1: trivial; only 1: intros; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: unfold BinIntDef.Z.max; only 1: unfold BinNatDef.N.max; only 1: simpl; only 1: case BinPosDef.Pos.compare; only 1: easy; only 1: easy; only 1: easy).	3.512664	152
Coq.ZArith.Znat.Z2N.inj_div	600
Coq.ZArith.Znat.Z2N.inj_mod	600	0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: destruct m; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: clear; only 1: simpl; only 1: rewrite <- N2Z.id; only 1: f_equal; only 1: rewrite N2Z.inj_mod; only 1: easy; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: easy; only 1: destruct m; only 1: trivial; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: easy).	3.788315	163
Coq.ZArith.Znat.Z2N.inj_quot	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct m; only 1: destruct n; only 1: easy; only 1: easy; only 1: easy; only 1: intros; only 1: rewrite Z.quot_div_nonneg; only 1: rewrite inj_div; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: destruct 2; only 1: easy).	2.654058	23
Coq.ZArith.Znat.Z2N.inj_rem	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct m; only 1: destruct n; only 1: easy; only 1: easy; only 1: easy; only 1: intros; only 1: rewrite Z.rem_mod_nonneg; only 1: rewrite inj_mod; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: destruct 2; only 1: easy).	2.666906	23
Coq.ZArith.Znat.Z2N.inj_div2	600	0.0.0.0.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: trivial).	2.610550	14
Coq.ZArith.Znat.Z2N.inj_quot2	600	0.0.0.1.0.0.0.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	2.662679	27
Coq.ZArith.Znat.Z2N.inj_pow	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct m; only 1: trivial; only 1: intros; only 1: rewrite <- N2Z.id; only 1: rewrite N2Z.inj_pow; only 1: rewrite id; only 1: easy; only 1: easy; only 1: destruct 2; only 1: easy).	2.863727	18
Coq.ZArith.Znat.Z2N.inj_testbit	600	1	synth with cache (only 1: apply Z.testbit_of_N').	2.778162	9
Coq.ZArith.Znat.Zabs2N.abs_N_spec	600	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	2.712227	4
Coq.ZArith.Znat.Zabs2N.abs_N_nonneg	600	0.1.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy).	2.777147	6
Coq.ZArith.Znat.Zabs2N.id_abs	600	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	2.769013	4
Coq.ZArith.Znat.Zabs2N.id	600	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	2.714243	3
Coq.ZArith.Znat.Zabs2N.inj_0	600	0	synth with cache (only 1: reflexivity).	2.755869	1
Coq.ZArith.Znat.Zabs2N.inj_pos	600	0	synth with cache (only 1: reflexivity).	2.720528	1
Coq.ZArith.Znat.Zabs2N.inj_neg	600	0	synth with cache (only 1: reflexivity).	2.762125	1
Coq.ZArith.Znat.Zabs2N.inj_opp	600	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	2.732015	4
Coq.ZArith.Znat.Zabs2N.inj_succ	600	0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: rewrite abs_N_nonneg; only 1: rewrite abs_N_nonneg; only 1: apply Z2N.inj_succ; only 1: auto; only 1: auto; only 1: apply Z.le_le_succ_r; only 1: auto).	2.851130	15
Coq.ZArith.Znat.Zabs2N.inj_add	600	0.0.1.0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite abs_N_nonneg; only 1: rewrite abs_N_nonneg; only 1: rewrite abs_N_nonneg; only 1: apply Z2N.inj_add; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: apply Z.add_nonneg_nonneg; only 1: easy; only 1: easy).	3.060245	32
Coq.ZArith.Znat.Zabs2N.inj_mul	600	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy).	2.853554	21
Coq.ZArith.Znat.Zabs2N.inj_sub	600	0.1.1.0.0.1.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: rewrite abs_N_nonneg; only 1: rewrite abs_N_nonneg; only 1: rewrite abs_N_nonneg; only 1: apply Z2N.inj_sub; only 1: trivial; only 1: trivial; only 1: Z.order; only 1: apply Z.le_0_sub; only 1: easy).	2.901363	32
Coq.ZArith.Znat.Zabs2N.inj_pred	600	0.2.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite abs_N_nonneg; only 1: rewrite abs_N_nonneg; only 1: apply Z2N.inj_pred; only 1: Z.order; only 1: apply Z.lt_succ_r; only 1: rewrite Z.succ_pred; only 1: Z.order).	2.908209	19
Coq.ZArith.Znat.Zabs2N.inj_compare	600	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite abs_N_nonneg; only 1: rewrite abs_N_nonneg; only 1: rewrite <- N2Z.inj_compare; only 1: rewrite Z2N.id; only 1: rewrite Z2N.id; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	3.031410	21
Coq.ZArith.Znat.Zabs2N.inj_le	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Z.le; only 1: unfold N.le; only 1: rewrite inj_compare; only 1: easy; only 1: easy; only 1: easy).	2.776988	8
Coq.ZArith.Znat.Zabs2N.inj_lt	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Z.lt; only 1: unfold N.lt; only 1: rewrite inj_compare; only 1: easy; only 1: easy; only 1: easy).	2.826721	8
Coq.ZArith.Znat.Zabs2N.inj_min	600	0.0.1.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite abs_N_nonneg; only 1: rewrite abs_N_nonneg; only 1: rewrite abs_N_nonneg; only 1: apply Z2N.inj_min; only 1: easy; only 1: easy; only 1: apply Z.min_glb; only 1: easy; only 1: easy).	2.999305	29
Coq.ZArith.Znat.Zabs2N.inj_max	600	1.0.1.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite abs_N_nonneg; only 1: rewrite abs_N_nonneg; only 1: rewrite abs_N_nonneg; only 1: apply Z2N.inj_max; only 1: easy; only 1: easy; only 1: transitivity n; only 1: easy; only 1: apply Z.le_max_l).	2.932861	30
Coq.ZArith.Znat.Zabs2N.inj_quot	600
Coq.ZArith.Znat.Zabs2N.inj_rem	600
Coq.ZArith.Znat.Zabs2N.inj_pow	600	0.1.0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite abs_N_spec; only 1: rewrite Z.abs_pow; only 1: rewrite Z2N.inj_pow; only 1: rewrite <- abs_N_spec; only 1: f_equal; only 1: symmetry; only 1: apply abs_N_nonneg; only 1: trivial; only 1: apply Z.abs_nonneg; only 1: trivial).	2.872567	31
Coq.ZArith.Znat.Zabs2N.inj_succ_abs	600	0.2.0.0.2.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite Pos.add_1_r; only 1: easy; only 1: simpl; only 1: rewrite Pos.add_1_r; only 1: easy).	2.753987	41
Coq.ZArith.Znat.Zabs2N.inj_add_abs	600	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy).	2.722311	21
Coq.ZArith.Znat.Zabs2N.inj_mul_abs	600	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy).	2.699497	21
Coq.ZArith.Znat.Nat2Z.inj_0	600	0	synth with cache (only 1: reflexivity).	2.545162	1
Coq.ZArith.Znat.Nat2Z.inj_succ	600	0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: apply Pos2Z.inj_succ).	2.560664	4
Coq.ZArith.Znat.Nat2Z.is_nonneg	600	1.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: apply Z.le_refl; only 1: simpl; only 1: easy).	2.576521	6
Coq.ZArith.Znat.Nat2Z.id	600	0.1.0.0.0	synth with cache (only 1: rewrite <- nat_N_Z; only 1: rewrite <- Z_N_nat; only 1: rewrite N2Z.id; only 1: rewrite Nat2N.id; only 1: easy).	2.626587	10
Coq.ZArith.Znat.Nat2Z.inj	600
Coq.ZArith.Znat.Nat2Z.inj_iff	600	0.0.0.1.0	synth with cache (only 1: split; only 1: apply inj; only 1: intros; only 1: f_equal; only 1: easy).	2.645835	13
Coq.ZArith.Znat.Nat2Z.inj_compare	600	0.0.0.0.0	synth with cache (only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite N2Z.inj_compare; only 1: rewrite <- Nat2N.inj_compare; only 1: easy).	2.555077	5
Coq.ZArith.Znat.Nat2Z.inj_le	600	1.0.0.0	synth with cache (only 1: unfold Z.le; only 1: rewrite inj_compare; only 1: symmetry; only 1: apply Nat.compare_le_iff).	2.663716	6
Coq.ZArith.Znat.Nat2Z.inj_lt	600	1.0.0.0	synth with cache (only 1: unfold Z.lt; only 1: rewrite inj_compare; only 1: symmetry; only 1: apply Nat.compare_lt_iff).	2.559319	6
Coq.ZArith.Znat.Nat2Z.inj_ge	600	0.0.0.0	synth with cache (only 1: unfold Z.ge; only 1: rewrite inj_compare; only 1: symmetry; only 1: apply Nat.compare_ge_iff).	2.529097	4
Coq.ZArith.Znat.Nat2Z.inj_gt	600	0.0.0.0	synth with cache (only 1: unfold Z.gt; only 1: rewrite inj_compare; only 1: symmetry; only 1: apply Nat.compare_gt_iff).	2.547635	4
Coq.ZArith.Znat.Nat2Z.inj_abs_nat	600	0.0.0.0.0.1	synth with cache (only 1: rewrite <- Zabs_N_nat; only 1: rewrite N_nat_Z; only 1: destruct z; only 1: easy; only 1: easy; only 1: easy).	2.717178	26
Coq.ZArith.Znat.Nat2Z.inj_add	600	0.0.0.0.0.0	synth with cache (only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite Nat2N.inj_add; only 1: rewrite N2Z.inj_add; only 1: easy).	2.606948	6
Coq.ZArith.Znat.Nat2Z.inj_mul	600	0.0.0.0.0.0	synth with cache (only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite Nat2N.inj_mul; only 1: rewrite N2Z.inj_mul; only 1: easy).	2.572329	6
Coq.ZArith.Znat.Nat2Z.inj_sub_max	600	0.0.0.0.0.0	synth with cache (only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite Nat2N.inj_sub; only 1: rewrite N2Z.inj_sub_max; only 1: easy).	2.570033	6
Coq.ZArith.Znat.Nat2Z.inj_sub	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite nat_compare_le; only 1: rewrite Nat2N.inj_compare; only 1: intros; only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite Nat2N.inj_sub; only 1: rewrite N2Z.inj_sub; only 1: easy; only 1: easy).	2.713477	18
Coq.ZArith.Znat.Nat2Z.inj_pred_max	600	0.0.0.0.0	synth with cache (only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite Nat2N.inj_pred; only 1: rewrite N2Z.inj_pred_max; only 1: easy).	2.622301	5
Coq.ZArith.Znat.Nat2Z.inj_pred	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite nat_compare_lt; only 1: rewrite Nat2N.inj_compare; only 1: intros; only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite Nat2N.inj_pred; only 1: rewrite N2Z.inj_pred; only 1: easy; only 1: easy).	2.700706	17
Coq.ZArith.Znat.Nat2Z.inj_min	600	0.0.0.0.0.0	synth with cache (only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite Nat2N.inj_min; only 1: rewrite N2Z.inj_min; only 1: easy).	2.639783	6
Coq.ZArith.Znat.Nat2Z.inj_max	600	0.0.0.0.0.0	synth with cache (only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite Nat2N.inj_max; only 1: rewrite N2Z.inj_max; only 1: easy).	2.636026	6
Coq.ZArith.Znat.Z2Nat.id	600	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Z_N_nat; only 1: rewrite <- nat_N_Z; only 1: rewrite N2Nat.id; only 1: rewrite Z2N.id; only 1: Z.order'; only 1: auto).	2.591227	7
Coq.ZArith.Znat.Z2Nat.inj	600
Coq.ZArith.Znat.Z2Nat.inj_iff	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: apply inj; only 1: easy; only 1: easy; only 1: intros; only 1: subst; only 1: easy).	2.616954	8
Coq.ZArith.Znat.Z2Nat.inj_0	600	0	synth with cache (only 1: reflexivity).	2.560694	1
Coq.ZArith.Znat.Z2Nat.inj_pos	600	0	synth with cache (only 1: reflexivity).	2.589494	1
Coq.ZArith.Znat.Z2Nat.inj_neg	600	0	synth with cache (only 1: reflexivity).	2.539430	1
Coq.ZArith.Znat.Z2Nat.inj_add	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite Z2N.inj_add; only 1: rewrite N2Nat.inj_add; only 1: easy; only 1: easy; only 1: easy).	2.746766	17
Coq.ZArith.Znat.Z2Nat.inj_mul	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite Z2N.inj_mul; only 1: rewrite N2Nat.inj_mul; only 1: easy; only 1: easy; only 1: easy).	2.707533	17
Coq.ZArith.Znat.Z2Nat.inj_succ	600	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite Z2N.inj_succ; only 1: rewrite N2Nat.inj_succ; only 1: easy; only 1: auto).	2.648382	7
Coq.ZArith.Znat.Z2Nat.inj_sub	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite Z2N.inj_sub; only 1: rewrite N2Nat.inj_sub; only 1: easy; only 1: trivial).	2.591208	8
Coq.ZArith.Znat.Z2Nat.inj_pred	600	0.0.0.0.0	synth with cache (only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite Z2N.inj_pred; only 1: rewrite N2Nat.inj_pred; only 1: easy).	2.631271	5
Coq.ZArith.Znat.Z2Nat.inj_compare	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- Nat2Z.inj_compare; only 1: rewrite id; only 1: rewrite id; only 1: easy; only 1: easy; only 1: easy).	2.566411	8
Coq.ZArith.Znat.Z2Nat.inj_le	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Z.le; only 1: rewrite nat_compare_le; only 1: rewrite inj_compare; only 1: easy; only 1: easy; only 1: easy).	2.645950	8
Coq.ZArith.Znat.Z2Nat.inj_lt	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Z.lt; only 1: rewrite nat_compare_lt; only 1: rewrite inj_compare; only 1: easy; only 1: easy; only 1: easy).	2.660477	8
Coq.ZArith.Znat.Z2Nat.inj_min	600	0.0.0.0.0.0	synth with cache (only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite Z2N.inj_min; only 1: rewrite N2Nat.inj_min; only 1: easy).	2.657925	6
Coq.ZArith.Znat.Z2Nat.inj_max	600	0.0.0.0.0.0	synth with cache (only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite Z2N.inj_max; only 1: rewrite N2Nat.inj_max; only 1: easy).	2.602762	6
Coq.ZArith.Znat.Zabs2Nat.abs_nat_spec	600	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	2.581579	4
Coq.ZArith.Znat.Zabs2Nat.abs_nat_nonneg	600	0.1.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy).	2.541900	6
Coq.ZArith.Znat.Zabs2Nat.id_abs	600	0.0.0.0.0.1	synth with cache (only 1: rewrite <- Zabs_N_nat; only 1: rewrite N_nat_Z; only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	2.759747	26
Coq.ZArith.Znat.Zabs2Nat.id	600	0.1.0.0.0	synth with cache (only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- nat_N_Z; only 1: rewrite Zabs2N.id; only 1: rewrite Nat2N.id; only 1: easy).	2.653031	10
Coq.ZArith.Znat.Zabs2Nat.inj_0	600	0	synth with cache (only 1: reflexivity).	2.594669	1
Coq.ZArith.Znat.Zabs2Nat.inj_pos	600	0	synth with cache (only 1: reflexivity).	2.556655	1
Coq.ZArith.Znat.Zabs2Nat.inj_neg	600	0	synth with cache (only 1: reflexivity).	2.595231	1
Coq.ZArith.Znat.Zabs2Nat.inj_succ	600	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite Zabs2N.inj_succ; only 1: rewrite N2Nat.inj_succ; only 1: easy; only 1: auto).	2.604123	7
Coq.ZArith.Znat.Zabs2Nat.inj_add	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite Zabs2N.inj_add; only 1: rewrite N2Nat.inj_add; only 1: easy; only 1: easy; only 1: easy).	2.654715	17
Coq.ZArith.Znat.Zabs2Nat.inj_mul	600	2.0.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: revert p0; only 1: induction p using Pos.peano_ind; only 1: simpl; only 1: intros; only 1: trivial; only 1: intros; only 1: rewrite Pos.mul_succ_l; only 1: rewrite Pos2Nat.inj_add; only 1: rewrite IHp; only 1: rewrite Pos2Nat.inj_succ; only 1: easy; only 1: simpl; only 1: revert p0; only 1: induction p using Pos.peano_ind; only 1: simpl; only 1: intros; only 1: trivial; only 1: intros; only 1: rewrite Pos.mul_succ_l; only 1: rewrite Pos2Nat.inj_add; only 1: rewrite IHp; only 1: rewrite Pos2Nat.inj_succ; only 1: easy; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: revert p0; only 1: induction p using Pos.peano_ind; only 1: simpl; only 1: intros; only 1: trivial; only 1: intros; only 1: rewrite Pos.mul_succ_l; only 1: rewrite Pos2Nat.inj_add; only 1: rewrite IHp; only 1: rewrite Pos2Nat.inj_succ; only 1: easy; only 1: simpl; only 1: apply Pos2Nat.inj_mul).	4.913084	300
Coq.ZArith.Znat.Zabs2Nat.inj_sub	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite Zabs2N.inj_sub; only 1: rewrite N2Nat.inj_sub; only 1: easy; only 1: easy).	2.674416	8
Coq.ZArith.Znat.Zabs2Nat.inj_pred	600	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite Zabs2N.inj_pred; only 1: rewrite N2Nat.inj_pred; only 1: easy; only 1: Z.order).	2.599790	7
Coq.ZArith.Znat.Zabs2Nat.inj_compare	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- N2Nat.inj_compare; only 1: rewrite Zabs2N.abs_N_nonneg; only 1: rewrite Zabs2N.abs_N_nonneg; only 1: rewrite <- N2Z.inj_compare; only 1: rewrite Z2N.id; only 1: rewrite Z2N.id; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	2.818126	25
Coq.ZArith.Znat.Zabs2Nat.inj_le	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Z.le; only 1: rewrite nat_compare_le; only 1: rewrite inj_compare; only 1: easy; only 1: easy; only 1: easy).	2.616038	8
Coq.ZArith.Znat.Zabs2Nat.inj_lt	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Z.lt; only 1: rewrite nat_compare_lt; only 1: rewrite inj_compare; only 1: easy; only 1: easy; only 1: easy).	2.586539	8
Coq.ZArith.Znat.Zabs2Nat.inj_min	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite Zabs2N.inj_min; only 1: rewrite N2Nat.inj_min; only 1: easy; only 1: easy; only 1: easy).	2.660134	17
Coq.ZArith.Znat.Zabs2Nat.inj_max	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite Zabs2N.inj_max; only 1: rewrite N2Nat.inj_max; only 1: easy; only 1: easy; only 1: easy).	2.707645	17
Coq.ZArith.Znat.Zabs2Nat.inj_succ_abs	600	0.0.0.0.0	synth with cache (only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite Zabs2N.inj_succ_abs; only 1: rewrite N2Nat.inj_succ; only 1: easy).	2.548199	5
Coq.ZArith.Znat.Zabs2Nat.inj_add_abs	600	0.0.0.0.0.0	synth with cache (only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite Zabs2N.inj_add_abs; only 1: rewrite N2Nat.inj_add; only 1: easy).	2.580666	6
Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	600	0.0.0.0.0.0	synth with cache (only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite Zabs2N.inj_mul_abs; only 1: rewrite N2Nat.inj_mul; only 1: easy).	2.542081	6
Coq.ZArith.Znat.inj_neq	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: apply Nat2Z.inj; only 1: easy).	2.611425	5
Coq.ZArith.Znat.inj_minus2	600	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite not_le_minus_0; only 1: auto with arith; only 1: auto with arith).	2.578821	4
Coq.ZArith.Zeuclid.ZEuclid.mod_wd	600	0	synth with cache (only 1: congruence).	2.717726	1
Coq.ZArith.Zeuclid.ZEuclid.div_wd	600	0	synth with cache (only 1: congruence).	2.657305	1
Coq.ZArith.Zeuclid.ZEuclid.div_mod	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold div; only 1: unfold modulo; only 1: rewrite Z.mul_assoc; only 1: rewrite Z.sgn_abs; only 1: apply Z.div_mod; only 1: destruct b; only 1: easy; only 1: easy; only 1: easy).	2.849977	18
Coq.ZArith.Zeuclid.ZEuclid.mod_always_pos	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold modulo; only 1: apply Z.mod_pos_bound; only 1: apply Z.abs_pos; only 1: easy).	2.727835	5
Coq.ZArith.Zeuclid.ZEuclid.mod_bound_pos	600
Coq.Numbers.Integer.Binary.ZBinary.TestOrder.test	600	2.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply BinInt.Z.le_antisymm).	2.831552	16
Coq.ZArith.Int.MoreInt.eqb_eq	600
Coq.ZArith.Int.MoreInt.eqb_neq	600
Coq.ZArith.Int.MoreInt.ltb_lt	600
Coq.ZArith.Int.MoreInt.ltb_nlt	600
Coq.ZArith.Int.MoreInt.leb_le	600
Coq.ZArith.Int.MoreInt.leb_nle	600
Coq.ZArith.Int.MoreInt.norm_ei_correct	600
Coq.ZArith.Int.MoreInt.norm_ez_correct	600
Coq.ZArith.Int.MoreInt.norm_ep_correct	600
Coq.ZArith.Int.MoreInt.norm_ep_correct2	600
Coq.ZArith.Int.Z_as_Int.gt_le_dec	600
Coq.ZArith.Int.Z_as_Int.ge_lt_dec	600
Coq.ZArith.Int.Z_as_Int.i2z_eq	600	0	synth with cache (only 1: trivial).	2.370790	1
Coq.ZArith.Int.Z_as_Int.i2z_0	600	0	synth with cache (only 1: reflexivity).	2.329895	1
Coq.ZArith.Int.Z_as_Int.i2z_1	600	0	synth with cache (only 1: reflexivity).	2.366199	1
Coq.ZArith.Int.Z_as_Int.i2z_2	600	0	synth with cache (only 1: reflexivity).	2.395436	1
Coq.ZArith.Int.Z_as_Int.i2z_3	600	0	synth with cache (only 1: reflexivity).	2.369639	1
Coq.ZArith.Int.Z_as_Int.i2z_add	600	0	synth with cache (only 1: reflexivity).	2.283805	1
Coq.ZArith.Int.Z_as_Int.i2z_opp	600	0	synth with cache (only 1: reflexivity).	2.392487	1
Coq.ZArith.Int.Z_as_Int.i2z_sub	600	0	synth with cache (only 1: reflexivity).	2.353154	1
Coq.ZArith.Int.Z_as_Int.i2z_mul	600	0	synth with cache (only 1: reflexivity).	2.381684	1
Coq.ZArith.Int.Z_as_Int.i2z_max	600	0	synth with cache (only 1: reflexivity).	2.388535	1
Coq.ZArith.Int.Z_as_Int.i2z_eqb	600	0	synth with cache (only 1: reflexivity).	2.386785	1
Coq.ZArith.Int.Z_as_Int.i2z_leb	600	0	synth with cache (only 1: reflexivity).	2.326758	1
Coq.ZArith.Int.Z_as_Int.i2z_ltb	600	0	synth with cache (only 1: reflexivity).	2.395086	1
Coq.MSets.MSetList.MakeRaw.ForNotations.inf_iff	600
Coq.MSets.MSetList.MakeRaw.ForNotations.isok_iff	600
Coq.MSets.MSetList.MakeRaw.ForNotations.isok_Ok	600
Coq.MSets.MSetList.MakeRaw.ForNotations.mem_spec	600
Coq.MSets.MSetList.MakeRaw.ForNotations.add_inf	600
Coq.MSets.MSetList.MakeRaw.ForNotations.add_ok	600
Coq.MSets.MSetList.MakeRaw.ForNotations.add_spec	600
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_inf	600
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_ok	600
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_spec	600
Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_ok	600
Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_spec	600
Coq.MSets.MSetList.MakeRaw.ForNotations.union_inf	600
Coq.MSets.MSetList.MakeRaw.ForNotations.union_ok	600
Coq.MSets.MSetList.MakeRaw.ForNotations.union_spec	600
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_inf	600
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_ok	600
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_spec	600
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_inf	600
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_ok	600
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_spec	600
Coq.MSets.MSetList.MakeRaw.ForNotations.equal_spec	600
Coq.MSets.MSetList.MakeRaw.ForNotations.subset_spec	600
Coq.MSets.MSetList.MakeRaw.ForNotations.empty_ok	600
Coq.MSets.MSetList.MakeRaw.ForNotations.empty_spec	600
Coq.MSets.MSetList.MakeRaw.ForNotations.is_empty_spec	600
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec1	600
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2	600
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2w	600
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec1	600
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec2	600
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec3	600
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec1	600
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec2	600
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec3	600
Coq.MSets.MSetList.MakeRaw.ForNotations.choose_spec3	600
Coq.MSets.MSetList.MakeRaw.ForNotations.fold_spec	600
Coq.MSets.MSetList.MakeRaw.ForNotations.cardinal_spec	600
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_inf	600
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_ok	600
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_spec	600
Coq.MSets.MSetList.MakeRaw.ForNotations.for_all_spec	600
Coq.MSets.MSetList.MakeRaw.ForNotations.exists_spec	600
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf1	600
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf2	600
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok1	600
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok2	600
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec1	600
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec2	600
Coq.MSets.MSetList.MakeRaw.In_compat	600
Coq.MSets.MSetList.MakeRaw.lt_strorder	600
Coq.MSets.MSetList.MakeRaw.lt_compat	600
Coq.MSets.MSetList.MakeRaw.compare_spec_aux	600
Coq.MSets.MSetList.MakeRaw.compare_spec	600
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	600
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	600
Coq.ZArith.Zeven.Zeven_equiv	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite <- Z.even_spec; only 1: destruct z; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	2.916459	42
Coq.ZArith.Zeven.Zodd_equiv	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite <- Z.odd_spec; only 1: destruct z; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	2.788336	42
Coq.ZArith.Zeven.Zeven_bool_iff	600	0.0.0	synth with cache (only 1: rewrite Z.even_spec; only 1: rewrite Zeven_equiv; only 1: easy).	2.589703	3
Coq.ZArith.Zeven.Zodd_bool_iff	600	0.0.0	synth with cache (only 1: rewrite Z.odd_spec; only 1: rewrite Zodd_equiv; only 1: easy).	2.505251	3
Coq.ZArith.Zeven.Zodd_even_bool	600	0.0.0	synth with cache (only 1: symmetry; only 1: rewrite <- Z.negb_odd; only 1: apply Bool.negb_involutive).	2.573986	3
Coq.ZArith.Zeven.Zeven_odd_bool	600	1.0	synth with cache (only 1: symmetry; only 1: apply Z.negb_odd).	2.569972	3
Coq.ZArith.Zeven.Zeven_odd_dec	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: left; only 1: auto; only 1: destruct p; only 1: simpl; only 1: right; only 1: auto; only 1: simpl; only 1: left; only 1: auto; only 1: simpl; only 1: right; only 1: auto; only 1: destruct p; only 1: simpl; only 1: right; only 1: auto; only 1: simpl; only 1: left; only 1: auto; only 1: simpl; only 1: right; only 1: auto).	2.973448	48
Coq.ZArith.Zeven.Zeven_dec	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: left; only 1: auto; only 1: destruct p; only 1: simpl; only 1: right; only 1: easy; only 1: simpl; only 1: left; only 1: auto; only 1: simpl; only 1: right; only 1: auto; only 1: destruct p; only 1: simpl; only 1: right; only 1: easy; only 1: simpl; only 1: left; only 1: auto; only 1: simpl; only 1: right; only 1: auto).	2.823164	48
Coq.ZArith.Zeven.Zodd_dec	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: right; only 1: auto; only 1: destruct p; only 1: simpl; only 1: left; only 1: auto; only 1: simpl; only 1: right; only 1: easy; only 1: simpl; only 1: left; only 1: auto; only 1: destruct p; only 1: simpl; only 1: left; only 1: auto; only 1: simpl; only 1: right; only 1: easy; only 1: simpl; only 1: left; only 1: auto).	2.938113	48
Coq.ZArith.Zeven.Zeven_not_Zodd	600
Coq.ZArith.Zeven.Zodd_not_Zeven	600	0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct BinIntDef.Z.odd; only 1: intuition; only 1: intuition).	2.588695	5
Coq.ZArith.Zeven.Zeven_Sn	600	0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite Z.even_succ; only 1: easy).	2.552514	3
Coq.ZArith.Zeven.Zodd_Sn	600	0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite Z.odd_succ; only 1: easy).	2.494571	3
Coq.ZArith.Zeven.Zeven_pred	600	0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite Z.even_pred; only 1: easy).	2.594061	3
Coq.ZArith.Zeven.Zodd_pred	600	0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite Z.odd_pred; only 1: easy).	2.518914	3
Coq.ZArith.Zeven.Zeven_div2	600	0.0.0.0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: rewrite Bool.negb_true_iff; only 1: intros ?; only 1: rewrite Zdiv2_odd_eqn  at 1; only 1: rewrite H; only 1: rewrite Z.add_0_r; only 1: easy).	2.580642	8
Coq.ZArith.Zeven.Zodd_div2	600	0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: intros ?; only 1: destruct n as [| [| | ]| [| | ]]; simpl; try easy; only 1: rewrite Pos.pred_double_succ; only 1: easy).	2.547819	5
Coq.ZArith.Zeven.Zquot2_odd_eqn	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	2.815424	18
Coq.ZArith.Zeven.Zeven_quot2	600	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Zeven_bool_iff in H; only 1: rewrite Zquot2_odd_eqn  at 1; only 1: rewrite Zodd_even_bool; only 1: rewrite H; only 1: rewrite Z.add_0_r; only 1: easy).	2.474550	7
Coq.ZArith.Zeven.Zodd_quot2	600	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Zodd_bool_iff in H0; only 1: rewrite Zquot2_odd_eqn  at 1; only 1: rewrite H0; only 1: f_equal; only 1: destruct n; only 1: destruct H; only 1: easy; only 1: easy; only 1: destruct H; only 1: easy).	2.571752	20
Coq.ZArith.Zeven.Zodd_quot2_neg	600	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Zodd_bool_iff in H0; only 1: rewrite Zquot2_odd_eqn  at 1; only 1: rewrite H0; only 1: unfold BinIntDef.Z.sub; only 1: f_equal; only 1: destruct n; only 1: destruct H; only 1: easy; only 1: destruct H; only 1: easy; only 1: easy).	2.671823	21
Coq.ZArith.Zeven.Zquot2_opp	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	2.536626	18
Coq.ZArith.Zeven.Zquot2_quot	600
Coq.ZArith.Zeven.Z_modulo_2	600
Coq.ZArith.Zeven.Zsplit2	600
Coq.ZArith.Zeven.Zeven_ex	600
Coq.ZArith.Zeven.Zodd_ex	600
Coq.ZArith.Zeven.Zeven_2p	600	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	2.479262	4
Coq.ZArith.Zeven.Zodd_2p_plus_1	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	2.578475	18
Coq.ZArith.Zeven.Zeven_plus_Zodd	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: rewrite Bool.negb_true_iff; only 1: intros ?; only 1: intros ?; only 1: rewrite Z.odd_add; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	2.604942	17
Coq.ZArith.Zeven.Zeven_plus_Zeven	600	0.0.0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: intros ?; only 1: intros ?; only 1: rewrite Z.even_add; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	2.462435	7
Coq.ZArith.Zeven.Zodd_plus_Zeven	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Z.add_comm; only 1: apply Zeven_plus_Zodd; only 1: easy; only 1: easy).	2.466722	5
Coq.ZArith.Zeven.Zodd_plus_Zodd	600	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_even; only 1: rewrite <- Z.negb_even; only 1: rewrite Bool.negb_true_iff; only 1: rewrite Bool.negb_true_iff; only 1: intros ?; only 1: intros ?; only 1: rewrite Z.even_add; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	2.931825	19
Coq.ZArith.Zeven.Zeven_mult_Zeven_l	600	0.0.0.1.0	synth with cache (only 1: boolify_even_odd; only 1: intros ?; only 1: rewrite Z.even_mul; only 1: rewrite H; only 1: easy).	2.929877	19
Coq.ZArith.Zeven.Zeven_mult_Zeven_r	600	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Z.mul_comm; only 1: apply Zeven_mult_Zeven_l; only 1: easy).	2.746458	4
Coq.ZArith.Zeven.Zodd_mult_Zodd	600	0.0.0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: intros ?; only 1: intros ?; only 1: rewrite Z.odd_mul; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	2.796385	7
Coq.ZArith.Zpow_alt.Piter_mul_acc	600
Coq.ZArith.Zpow_alt.Piter_op_square	600
Coq.ZArith.Zpow_alt.Zpower_equiv	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: destruct b; only 1: trivial; only 1: unfold Zpower_alt; only 1: unfold BinIntDef.Z.pow; only 1: unfold BinIntDef.Z.pow_pos; only 1: revert a; only 1: induction p; only 1: simpl; only 1: intros; only 1: f_equal; only 1: rewrite Piter_mul_acc; only 1: rewrite Piter_op_square; only 1: rewrite IHp; only 1: easy; only 1: intros; only 1: symmetry; only 1: apply Z.mul_assoc; only 1: simpl; only 1: intros; only 1: rewrite Piter_mul_acc; only 1: rewrite Piter_op_square; only 1: rewrite IHp; only 1: easy; only 1: intros; only 1: symmetry; only 1: apply Z.mul_assoc; only 1: simpl; only 1: intros; only 1: Z.nzsimpl; only 1: easy; only 1: trivial).	3.048553	66
Coq.ZArith.Zpow_alt.Zpower_alt_0_r	600	0	synth with cache (only 1: reflexivity).	2.626384	1
Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct b; only 1: intros ?; only 1: simpl; only 1: Z.nzsimpl; only 1: easy; only 1: intros ?; only 1: simpl; only 1: rewrite Pos.add_1_r; only 1: rewrite Pos.iter_op_succ; only 1: easy; only 1: apply Z.mul_assoc; only 1: intros ?; only 1: simpl; only 1: elim H; only 1: easy).	2.802343	23
Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	600	0.0.0.0	synth with cache (only 1: destruct b; only 1: easy; only 1: easy; only 1: easy).	2.605590	4
Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	600	0.0.0	synth with cache (only 1: rewrite Zpower_equiv; only 1: rewrite Pos2Z.inj_pow; only 1: easy).	2.557655	3
Coq.ZArith.Zcompare.Zcompare_Gt_trans	600
Coq.ZArith.Zcompare.Zcompare_opp	600	0.0	synth with cache (only 1: symmetry; only 1: apply Z.compare_opp).	2.525878	2
Coq.ZArith.Zcompare.Zcompare_Gt_spec	600	0.0.0.0.0.0.0	synth with cache (only 1: rewrite Z.compare_sub; only 1: unfold BinIntDef.Z.sub; only 1: destruct BinIntDef.Z.add; only 1: discriminate; only 1: exists p; only 1: easy; only 1: discriminate).	2.585497	7
Coq.ZArith.Zcompare.Zcompare_plus_compat	600	0	synth with cache (only 1: apply Z.add_compare_mono_l).	2.516795	1
Coq.ZArith.Zcompare.Zplus_compare_compat	600
Coq.ZArith.Zcompare.Zcompare_succ_Gt	600	0.0.0.0.0	synth with cache (only 1: apply Z.lt_gt; only 1: rewrite Z.lt_succ_r; only 1: apply Z.lt_eq_cases; only 1: right; only 1: easy).	2.575379	5
Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	600
Coq.ZArith.Zcompare.Zcompare_succ_compat	600	0.0.0	synth with cache (only 1: rewrite <- Z.add_1_l; only 1: rewrite <- Z.add_1_l; only 1: apply Z.add_compare_mono_l).	2.620994	3
Coq.ZArith.Zcompare.Zcompare_mult_compat	600	0.1.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct n; only 1: intros ?; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: intros ?; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos.mul_compare_mono_l; only 1: simpl; only 1: trivial; only 1: intros ?; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite Pos.mul_compare_mono_l; only 1: easy).	3.357442	91
Coq.ZArith.Zcompare.Zmult_compare_compat_l	600	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct p; only 1: discriminate; only 1: symmetry; only 1: apply Zcompare_mult_compat; only 1: discriminate).	2.671875	6
Coq.ZArith.Zcompare.Zmult_compare_compat_r	600
Coq.ZArith.Zcompare.Zcompare_elim	600	0.1.0.0.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: Z.swap_greater; only 1: easy).	2.675052	7
Coq.ZArith.Zcompare.Zcompare_eq_case	600	0.0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: rewrite Z.compare_refl; only 1: easy).	2.584968	4
Coq.ZArith.Zcompare.Zle_compare	600	1.0.0.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: Z.order).	2.580434	6
Coq.ZArith.Zcompare.Zlt_compare	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: easy).	2.584482	5
Coq.ZArith.Zcompare.Zge_compare	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: easy; only 1: easy; only 1: easy).	2.632927	5
Coq.ZArith.Zcompare.Zgt_compare	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: easy).	2.603347	5
Coq.micromega.Env.S.jump_add	600
Coq.micromega.Env.S.jump_simpl	600
Coq.micromega.Env.S.jump_tl	600
Coq.micromega.Env.S.jump_succ	600
Coq.micromega.Env.S.jump_pred_double	600
Coq.micromega.Env.S.nth_spec	600
Coq.micromega.Env.S.nth_jump	600
Coq.micromega.Env.S.nth_pred_double	600
Coq.ZArith.Zpow_def.Zpower_theory	600
Coq.MSets.MSetGenTree.Props.ltb_tree_iff	600
Coq.MSets.MSetGenTree.Props.gtb_tree_iff	600
Coq.MSets.MSetGenTree.Props.isok_iff	600
Coq.MSets.MSetGenTree.Props.isok_Ok	600
Coq.MSets.MSetGenTree.Props.In_1	600
Coq.MSets.MSetGenTree.Props.In_compat	600
Coq.MSets.MSetGenTree.Props.In_node_iff	600
Coq.MSets.MSetGenTree.Props.In_leaf_iff	600
Coq.MSets.MSetGenTree.Props.lt_leaf	600
Coq.MSets.MSetGenTree.Props.gt_leaf	600
Coq.MSets.MSetGenTree.Props.lt_tree_node	600
Coq.MSets.MSetGenTree.Props.gt_tree_node	600
Coq.MSets.MSetGenTree.Props.lt_tree_not_in	600
Coq.MSets.MSetGenTree.Props.lt_tree_trans	600
Coq.MSets.MSetGenTree.Props.gt_tree_not_in	600
Coq.MSets.MSetGenTree.Props.gt_tree_trans	600
Coq.MSets.MSetGenTree.Props.lt_tree_compat	600
Coq.MSets.MSetGenTree.Props.gt_tree_compat	600
Coq.MSets.MSetGenTree.Props.empty_spec	600
Coq.MSets.MSetGenTree.Props.empty_ok	600
Coq.MSets.MSetGenTree.Props.is_empty_spec	600
Coq.MSets.MSetGenTree.Props.mem_spec	600
Coq.MSets.MSetGenTree.Props.min_elt_spec1	600
Coq.MSets.MSetGenTree.Props.min_elt_spec2	600
Coq.MSets.MSetGenTree.Props.min_elt_spec3	600
Coq.MSets.MSetGenTree.Props.max_elt_spec1	600
Coq.MSets.MSetGenTree.Props.max_elt_spec2	600
Coq.MSets.MSetGenTree.Props.max_elt_spec3	600
Coq.MSets.MSetGenTree.Props.choose_spec1	600
Coq.MSets.MSetGenTree.Props.choose_spec2	600
Coq.MSets.MSetGenTree.Props.choose_spec3	600
Coq.MSets.MSetGenTree.Props.elements_spec1'	600
Coq.MSets.MSetGenTree.Props.elements_spec1	600
Coq.MSets.MSetGenTree.Props.elements_spec2'	600
Coq.MSets.MSetGenTree.Props.elements_spec2	600
Coq.MSets.MSetGenTree.Props.elements_spec2w	600
Coq.MSets.MSetGenTree.Props.elements_aux_cardinal	600
Coq.MSets.MSetGenTree.Props.elements_cardinal	600
Coq.MSets.MSetGenTree.Props.elements_app	600
Coq.MSets.MSetGenTree.Props.elements_node	600
Coq.MSets.MSetGenTree.Props.rev_elements_app	600
Coq.MSets.MSetGenTree.Props.rev_elements_node	600
Coq.MSets.MSetGenTree.Props.rev_elements_rev	600
Coq.MSets.MSetGenTree.Props.sorted_app_inv	600
Coq.MSets.MSetGenTree.Props.elements_sort_ok	600
Coq.MSets.MSetGenTree.Props.for_all_spec	600
Coq.MSets.MSetGenTree.Props.exists_spec	600
Coq.MSets.MSetGenTree.Props.fold_spec'	600
Coq.MSets.MSetGenTree.Props.fold_spec	600
Coq.MSets.MSetGenTree.Props.subsetl_spec	600
Coq.MSets.MSetGenTree.Props.subsetr_spec	600
Coq.MSets.MSetGenTree.Props.subset_spec	600
Coq.MSets.MSetGenTree.Props.eq_equiv	600
Coq.MSets.MSetGenTree.Props.eq_Leq	600
Coq.MSets.MSetGenTree.Props.lt_strorder	600
Coq.MSets.MSetGenTree.Props.lt_compat	600
Coq.MSets.MSetGenTree.Props.flatten_e_elements	600
Coq.MSets.MSetGenTree.Props.cons_1	600
Coq.MSets.MSetGenTree.Props.compare_end_Cmp	600
Coq.MSets.MSetGenTree.Props.compare_more_Cmp	600
Coq.MSets.MSetGenTree.Props.compare_cont_Cmp	600
Coq.MSets.MSetGenTree.Props.compare_Cmp	600
Coq.MSets.MSetGenTree.Props.compare_spec	600
Coq.MSets.MSetGenTree.Props.equal_spec	600
Coq.MSets.MSetGenTree.Props.mindepth_maxdepth	600
Coq.MSets.MSetGenTree.Props.maxdepth_cardinal	600
Coq.MSets.MSetGenTree.Props.mindepth_cardinal	600
Coq.MSets.MSetGenTree.Props.maxdepth_log_cardinal	600
Coq.MSets.MSetGenTree.Props.mindepth_log_cardinal	600
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.In_compat	600
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.mem_spec	600
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_iff	600
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_Ok	600
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_spec	600
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_ok	600
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_spec	600
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_ok	600
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_ok	600
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_spec	600
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_ok	600
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_spec	600
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.is_empty_spec	600
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec1	600
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec2w	600
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.fold_spec	600
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_ok	600
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_spec	600
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_ok	600
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_spec	600
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_ok	600
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_spec	600
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.subset_spec	600
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.equal_spec	600
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec1	600
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec2	600
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.cardinal_spec	600
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec'	600
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec	600
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_ok	600
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.for_all_spec	600
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.exists_spec	600
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec1	600
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec2	600
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1'	600
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2'	600
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1	600
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2	600
Coq.FSets.FMapList.Raw.Elt.empty_1	600
Coq.FSets.FMapList.Raw.Elt.empty_sorted	600
Coq.FSets.FMapList.Raw.Elt.is_empty_1	600
Coq.FSets.FMapList.Raw.Elt.is_empty_2	600
Coq.FSets.FMapList.Raw.Elt.mem_1	600
Coq.FSets.FMapList.Raw.Elt.mem_2	600
Coq.FSets.FMapList.Raw.Elt.find_2	600
Coq.FSets.FMapList.Raw.Elt.find_1	600
Coq.FSets.FMapList.Raw.Elt.add_1	600
Coq.FSets.FMapList.Raw.Elt.add_2	600
Coq.FSets.FMapList.Raw.Elt.add_3	600
Coq.FSets.FMapList.Raw.Elt.add_Inf	600
Coq.FSets.FMapList.Raw.Elt.add_sorted	600
Coq.FSets.FMapList.Raw.Elt.remove_1	600
Coq.FSets.FMapList.Raw.Elt.remove_2	600
Coq.FSets.FMapList.Raw.Elt.remove_3	600
Coq.FSets.FMapList.Raw.Elt.remove_Inf	600
Coq.FSets.FMapList.Raw.Elt.remove_sorted	600
Coq.FSets.FMapList.Raw.Elt.elements_1	600
Coq.FSets.FMapList.Raw.Elt.elements_2	600
Coq.FSets.FMapList.Raw.Elt.elements_3	600
Coq.FSets.FMapList.Raw.Elt.elements_3w	600
Coq.FSets.FMapList.Raw.Elt.fold_1	600
Coq.FSets.FMapList.Raw.Elt.equal_1	600
Coq.FSets.FMapList.Raw.Elt.equal_2	600
Coq.FSets.FMapList.Raw.Elt.equal_cons	600
Coq.FSets.FMapList.Raw.Elt2.map_1	600
Coq.FSets.FMapList.Raw.Elt2.map_2	600
Coq.FSets.FMapList.Raw.Elt2.map_lelistA	600
Coq.FSets.FMapList.Raw.Elt2.map_sorted	600
Coq.FSets.FMapList.Raw.Elt2.mapi_1	600
Coq.FSets.FMapList.Raw.Elt2.mapi_2	600
Coq.FSets.FMapList.Raw.Elt2.mapi_lelistA	600
Coq.FSets.FMapList.Raw.Elt2.mapi_sorted	600
Coq.FSets.FMapList.Raw.Elt3.map2_alt_equiv	600
Coq.FSets.FMapList.Raw.Elt3.combine_lelistA	600
Coq.FSets.FMapList.Raw.Elt3.combine_sorted	600
Coq.FSets.FMapList.Raw.Elt3.map2_sorted	600
Coq.FSets.FMapList.Raw.Elt3.combine_1	600
Coq.FSets.FMapList.Raw.Elt3.map2_0	600
Coq.FSets.FMapList.Raw.Elt3.map2_1	600
Coq.FSets.FMapList.Raw.Elt3.map2_2	600
Coq.FSets.FMapList.Make.Elt.MapsTo_1	600
Coq.FSets.FMapList.Make.Elt.mem_1	600
Coq.FSets.FMapList.Make.Elt.mem_2	600
Coq.FSets.FMapList.Make.Elt.empty_1	600
Coq.FSets.FMapList.Make.Elt.is_empty_1	600
Coq.FSets.FMapList.Make.Elt.is_empty_2	600
Coq.FSets.FMapList.Make.Elt.add_1	600
Coq.FSets.FMapList.Make.Elt.add_2	600
Coq.FSets.FMapList.Make.Elt.add_3	600
Coq.FSets.FMapList.Make.Elt.remove_1	600
Coq.FSets.FMapList.Make.Elt.remove_2	600
Coq.FSets.FMapList.Make.Elt.remove_3	600
Coq.FSets.FMapList.Make.Elt.find_1	600
Coq.FSets.FMapList.Make.Elt.find_2	600
Coq.FSets.FMapList.Make.Elt.elements_1	600
Coq.FSets.FMapList.Make.Elt.elements_2	600
Coq.FSets.FMapList.Make.Elt.elements_3	600
Coq.FSets.FMapList.Make.Elt.elements_3w	600
Coq.FSets.FMapList.Make.Elt.cardinal_1	600
Coq.FSets.FMapList.Make.Elt.fold_1	600
Coq.FSets.FMapList.Make.Elt.equal_1	600
Coq.FSets.FMapList.Make.Elt.equal_2	600
Coq.FSets.FMapList.Make.map_1	600
Coq.FSets.FMapList.Make.map_2	600
Coq.FSets.FMapList.Make.mapi_1	600
Coq.FSets.FMapList.Make.mapi_2	600
Coq.FSets.FMapList.Make.map2_1	600
Coq.FSets.FMapList.Make.map2_2	600
Coq.FSets.FMapList.Make_ord.eq_equal	600
Coq.FSets.FMapList.Make_ord.eq_1	600
Coq.FSets.FMapList.Make_ord.eq_2	600
Coq.FSets.FMapList.Make_ord.eq_refl	600
Coq.FSets.FMapList.Make_ord.eq_sym	600
Coq.FSets.FMapList.Make_ord.eq_trans	600
Coq.FSets.FMapList.Make_ord.lt_trans	600
Coq.FSets.FMapList.Make_ord.lt_not_eq	600
Coq.FSets.FMapList.Make_ord.compare	600
Coq.ZArith.BinInt.Z.eq_dec	600	0.0.0	synth with cache (only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	1.913410	3
Coq.ZArith.BinInt.Z.pos_sub_spec	600
Coq.ZArith.BinInt.Z.pos_sub_discr	600	0.0.0.0.1.0.0.0.0.1.0.0.0	synth with cache (only 1: rewrite pos_sub_spec; only 1: case Pos.compare_spec; only 1: auto; only 1: intros; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.sub_add; only 1: easy; only 1: trivial; only 1: intros; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.sub_add; only 1: easy; only 1: trivial).	2.005148	45
Coq.ZArith.BinInt.Z.pos_sub_diag	600	0.0.0	synth with cache (only 1: rewrite pos_sub_spec; only 1: rewrite Pos.compare_refl; only 1: easy).	1.813809	3
Coq.ZArith.BinInt.Z.pos_sub_lt	600	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite pos_sub_spec; only 1: rewrite H; only 1: easy).	1.821443	4
Coq.ZArith.BinInt.Z.pos_sub_gt	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite pos_sub_spec; only 1: rewrite Pos.compare_antisym; only 1: rewrite H; only 1: easy).	1.711399	5
Coq.ZArith.BinInt.Z.pos_sub_opp	600
Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	600	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	1.765868	4
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	600	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	1.661924	4
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	600	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	1.739235	4
Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	600	0.1.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite Pos.add_comm; only 1: easy; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite Pos.add_comm; only 1: easy).	2.284311	72
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	600	0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: simpl; only 1: trivial using pos_sub_opp).	2.011337	49
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: intros ?; only 1: easy; only 1: simpl; only 1: intros ?; only 1: destr_eq H; only 1: simpl; only 1: intros ?; only 1: destr_eq H; only 1: destruct m; only 1: simpl; only 1: intros ?; only 1: destr_eq H; only 1: simpl; only 1: intros ?; only 1: destr_eq H; only 1: f_equal; only 1: easy; only 1: simpl; only 1: intros ?; only 1: destr_eq H; only 1: destruct m; only 1: simpl; only 1: intros ?; only 1: destr_eq H; only 1: simpl; only 1: intros ?; only 1: destr_eq H; only 1: simpl; only 1: intros ?; only 1: destr_eq H; only 1: f_equal; only 1: easy).	2.315680	95
Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	600
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	600	0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.1.0.0.1.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: simpl; only 1: rewrite Pos.add_assoc; only 1: easy; only 1: simpl; only 1: symmetry; only 1: apply pos_sub_add; only 1: destruct m; only 1: simpl; only 1: symmetry; only 1: apply add_0_r; only 1: simpl; only 1: rewrite <- pos_sub_add; only 1: rewrite add_comm; only 1: rewrite <- pos_sub_add; only 1: rewrite Pos.add_comm; only 1: easy; only 1: simpl; only 1: apply opp_inj; only 1: rewrite opp_add_distr; only 1: rewrite pos_sub_opp; only 1: rewrite pos_sub_opp; only 1: rewrite add_comm; only 1: rewrite Pos.add_comm; only 1: apply pos_sub_add).	3.233792	205
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	600	0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: apply add_assoc_pos; only 1: apply opp_inj; only 1: rewrite opp_add_distr; only 1: rewrite opp_add_distr; only 1: rewrite opp_add_distr; only 1: rewrite opp_add_distr; only 1: simpl; only 1: apply add_assoc_pos).	2.191062	64
Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	600	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite pos_sub_spec; only 1: rewrite Pos.compare_refl; only 1: easy; only 1: simpl; only 1: rewrite pos_sub_spec; only 1: rewrite Pos.compare_refl; only 1: easy).	1.858554	19
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	600	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy).	1.843493	21
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	600	0.1.0.0.0.0.1.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1.0.0.0.0.1.0.0.0.0.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite Pos.mul_add_distr_r; only 1: easy; only 1: simpl; only 1: rewrite pos_sub_spec; only 1: rewrite pos_sub_spec; only 1: rewrite Pos.mul_compare_mono_r; only 1: case Pos.compare_spec; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_sub_distr_r; only 1: easy; only 1: easy; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_sub_distr_r; only 1: easy; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite pos_sub_spec; only 1: rewrite pos_sub_spec; only 1: rewrite Pos.mul_compare_mono_r; only 1: case Pos.compare_spec; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_sub_distr_r; only 1: easy; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_sub_distr_r; only 1: easy; only 1: easy; only 1: simpl; only 1: rewrite Pos.mul_add_distr_r; only 1: easy).	3.774842	311
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	600	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: rewrite mul_0_r; only 1: rewrite mul_0_r; only 1: rewrite mul_0_r; only 1: easy; only 1: apply mul_add_distr_pos; only 1: apply opp_inj; only 1: rewrite opp_add_distr; only 1: rewrite <- mul_opp_r; only 1: rewrite <- mul_opp_r; only 1: rewrite <- mul_opp_r; only 1: apply mul_add_distr_pos).	1.848708	20
Coq.ZArith.BinInt.Z.one_succ	600	0	synth with cache (only 1: reflexivity).	1.755365	1
Coq.ZArith.BinInt.Z.two_succ	600	0	synth with cache (only 1: reflexivity).	1.771811	1
Coq.ZArith.BinInt.Z.add_0_l	600	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	1.763531	4
Coq.ZArith.BinInt.Z.add_succ_l	600
Coq.ZArith.BinInt.Z.opp_0	600	0	synth with cache (only 1: reflexivity).	1.645145	1
Coq.ZArith.BinInt.Z.opp_succ	600	0.0.0	synth with cache (only 1: unfold BinIntDef.Z.succ; only 1: unfold BinIntDef.Z.pred; only 1: apply opp_add_distr).	1.660164	3
Coq.ZArith.BinInt.Z.succ_pred	600	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold BinIntDef.Z.succ; only 1: unfold BinIntDef.Z.pred; only 1: rewrite <- add_assoc; only 1: rewrite add_opp_diag_r; only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	1.713733	8
Coq.ZArith.BinInt.Z.pred_succ	600	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold BinIntDef.Z.succ; only 1: unfold BinIntDef.Z.pred; only 1: rewrite <- add_assoc; only 1: rewrite add_opp_diag_r; only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	1.744090	8
Coq.ZArith.BinInt.Z.sub_0_r	600	0	synth with cache (only 1: apply add_0_r).	1.772347	1
Coq.ZArith.BinInt.Z.sub_succ_r	600	0.0.0.0.0.0	synth with cache (only 1: unfold BinIntDef.Z.sub; only 1: unfold BinIntDef.Z.succ; only 1: unfold BinIntDef.Z.pred; only 1: rewrite opp_add_distr; only 1: rewrite add_assoc; only 1: easy).	1.691329	6
Coq.ZArith.BinInt.Z.mul_0_l	600	0	synth with cache (only 1: reflexivity).	1.685768	1
Coq.ZArith.BinInt.Z.mul_succ_l	600	0.0.0.0	synth with cache (only 1: unfold BinIntDef.Z.succ; only 1: rewrite mul_add_distr_r; only 1: rewrite mul_1_l; only 1: easy).	1.672426	4
Coq.ZArith.BinInt.Z.eqb_eq	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: destruct m; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: rewrite Pos.eqb_eq; only 1: split; only 1: intros; only 1: f_equal; only 1: easy; only 1: injection 1; only 1: easy; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: destruct m; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: rewrite Pos.eqb_eq; only 1: split; only 1: intros; only 1: f_equal; only 1: easy; only 1: injection 1; only 1: easy).	2.452262	104
Coq.ZArith.BinInt.Z.ltb_lt	600
Coq.ZArith.BinInt.Z.leb_le	600
Coq.ZArith.BinInt.Z.compare_eq_iff	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: destruct m; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: simpl; only 1: rewrite Pos.compare_eq_iff; only 1: split; only 1: intros; only 1: f_equal; only 1: easy; only 1: injection 1; only 1: easy; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: destruct m; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: simpl; only 1: rewrite CompOpp_iff; only 1: rewrite Pos.compare_eq_iff; only 1: split; only 1: intros; only 1: f_equal; only 1: easy; only 1: injection 1; only 1: easy).	2.557779	105
Coq.ZArith.BinInt.Z.compare_sub	600	0.0.0.0.0.1.0.0.0.2.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.2.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite pos_sub_spec; only 1: case Pos.compare_spec; only 1: trivial; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Pos.compare_antisym; only 1: rewrite pos_sub_spec; only 1: case Pos.compare_spec; only 1: trivial; only 1: trivial; only 1: trivial).	2.636525	175
Coq.ZArith.BinInt.Z.compare_antisym	600	0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.2.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: unfold BinPosDef.Pos.compare; only 1: rewrite Pos.compare_cont_antisym; only 1: easy; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Pos.compare_antisym; only 1: rewrite <- Pos.compare_antisym; only 1: rewrite <- Pos.compare_antisym; only 1: easy).	2.711306	129
Coq.ZArith.BinInt.Z.compare_lt_iff	600	0	synth with cache (only 1: reflexivity).	1.739080	1
Coq.ZArith.BinInt.Z.compare_le_iff	600	0	synth with cache (only 1: reflexivity).	1.709010	1
Coq.ZArith.BinInt.Z.lt_succ_r	600
Coq.ZArith.BinInt.Z.max_l	600	0.0.0.0.0.0.0	synth with cache (only 1: unfold le; only 1: unfold BinIntDef.Z.max; only 1: rewrite compare_antisym; only 1: case BinIntDef.Z.compare; only 1: intuition; only 1: intuition; only 1: intuition).	1.811853	7
Coq.ZArith.BinInt.Z.max_r	600	0.0.0.0.0.0	synth with cache (only 1: unfold le; only 1: unfold BinIntDef.Z.max; only 1: case compare_spec; only 1: intuition; only 1: intuition; only 1: intuition).	1.773356	6
Coq.ZArith.BinInt.Z.min_l	600	0.0.0.0.0.0	synth with cache (only 1: unfold le; only 1: unfold BinIntDef.Z.min; only 1: case compare_spec; only 1: intuition; only 1: intuition; only 1: intuition).	1.837383	6
Coq.ZArith.BinInt.Z.min_r	600	0.0.0.0.0.0.0	synth with cache (only 1: unfold le; only 1: unfold BinIntDef.Z.min; only 1: rewrite compare_antisym; only 1: case compare_spec; only 1: intuition; only 1: intuition; only 1: intuition).	1.834533	7
Coq.ZArith.BinInt.Z.peano_ind	600
Coq.ZArith.BinInt.Z.bi_induction	600
Coq.ZArith.BinInt.Z.abs_eq	600	0.1.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy).	2.110881	6
Coq.ZArith.BinInt.Z.abs_neq	600	0.0.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct 1; only 1: easy; only 1: trivial).	2.122876	6
Coq.ZArith.BinInt.Z.sgn_null	600	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: easy).	2.035032	3
Coq.ZArith.BinInt.Z.sgn_pos	600	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	2.086605	4
Coq.ZArith.BinInt.Z.sgn_neg	600	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	2.150249	4
Coq.ZArith.BinInt.Z.pow_0_r	600	0	synth with cache (only 1: reflexivity).	2.079747	1
Coq.ZArith.BinInt.Z.pow_succ_r	600	0.0.0.0.0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct m; only 1: intros ?; only 1: clear H; only 1: simpl; only 1: trivial; only 1: intros ?; only 1: clear H; only 1: simpl; only 1: unfold BinIntDef.Z.pow_pos; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.iter_add; only 1: easy; only 1: destruct 1; only 1: easy).	2.302725	36
Coq.ZArith.BinInt.Z.pow_neg_r	600	0.0.0.0	synth with cache (only 1: destruct m; only 1: easy; only 1: easy; only 1: easy).	2.116875	4
Coq.ZArith.BinInt.Z.pow_pos_fold	600	0	synth with cache (only 1: reflexivity).	2.103829	1
Coq.ZArith.BinInt.Z.square_spec	600	1.0.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: rewrite Pos.square_xI; only 1: simpl; only 1: rewrite IHp; only 1: easy; only 1: rewrite Pos.square_xO; only 1: simpl; only 1: rewrite IHp; only 1: easy; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec).	2.296910	62
Coq.ZArith.BinInt.Z.sqrtrem_spec	600
Coq.ZArith.BinInt.Z.sqrt_spec	600	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: split; only 1: easy; only 1: split; only 1: unfold BinIntDef.Z.sqrt; only 1: intros ?; only 1: clear H; only 1: simpl BinIntDef.Z.succ; only 1: rewrite Pos.add_1_r; only 1: apply Pos.sqrt_spec; only 1: destruct 1; only 1: easy).	2.231336	20
Coq.ZArith.BinInt.Z.sqrt_neg	600	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	2.118060	4
Coq.ZArith.BinInt.Z.sqrtrem_sqrt	600	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: unfold BinIntDef.Z.sqrtrem; only 1: unfold BinIntDef.Z.sqrt; only 1: unfold BinPosDef.Pos.sqrt; only 1: destruct BinPosDef.Pos.sqrtrem; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy; only 1: reflexivity).	2.206434	19
Coq.ZArith.BinInt.Z.log2_spec	600
Coq.ZArith.BinInt.Z.log2_nonpos	600	0.0.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct 1; only 1: easy; only 1: trivial).	2.131835	6
Coq.ZArith.BinInt.Z.even_spec	600
Coq.ZArith.BinInt.Z.odd_spec	600
Coq.ZArith.BinInt.Z.double_spec	600	0	synth with cache (only 1: reflexivity).	2.094544	1
Coq.ZArith.BinInt.Z.succ_double_spec	600	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	2.138933	4
Coq.ZArith.BinInt.Z.pred_double_spec	600	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	2.157257	4
Coq.ZArith.BinInt.Z.pos_div_eucl_eq	600
Coq.ZArith.BinInt.Z.div_eucl_eq	600
Coq.ZArith.BinInt.Z.div_mod	600
Coq.ZArith.BinInt.Z.pos_div_eucl_bound	600
Coq.ZArith.BinInt.Z.mod_pos_bound	600
Coq.ZArith.BinInt.Z.mod_neg_bound	600
Coq.ZArith.BinInt.Z.quotrem_eq	600
Coq.ZArith.BinInt.Z.quot_rem'	600
Coq.ZArith.BinInt.Z.quot_rem	600	1.0.0	synth with cache (only 1: intros ?; only 1: clear H; only 1: apply quot_rem').	2.017848	5
Coq.ZArith.BinInt.Z.rem_bound_pos	600
Coq.ZArith.BinInt.Z.rem_opp_l'	600	0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: destruct b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: destruct b; only 1: trivial; only 1: unfold BinIntDef.Z.rem; only 1: simpl; only 1: destruct BinNatDef.N.pos_div_eucl; only 1: destruct n0; only 1: easy; only 1: easy; only 1: unfold BinIntDef.Z.rem; only 1: simpl; only 1: destruct BinNatDef.N.pos_div_eucl; only 1: destruct n0; only 1: easy; only 1: easy; only 1: destruct b; only 1: trivial; only 1: unfold BinIntDef.Z.rem; only 1: simpl; only 1: destruct BinNatDef.N.pos_div_eucl; only 1: destruct n0; only 1: easy; only 1: easy; only 1: unfold BinIntDef.Z.rem; only 1: simpl; only 1: destruct BinNatDef.N.pos_div_eucl; only 1: destruct n0; only 1: easy; only 1: easy).	2.948429	132
Coq.ZArith.BinInt.Z.rem_opp_r'	600	0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: destruct b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: destruct b; only 1: trivial; only 1: unfold BinIntDef.Z.rem; only 1: simpl; only 1: destruct BinNatDef.N.pos_div_eucl; only 1: destruct n0; only 1: easy; only 1: easy; only 1: unfold BinIntDef.Z.rem; only 1: simpl; only 1: destruct BinNatDef.N.pos_div_eucl; only 1: destruct n0; only 1: easy; only 1: easy; only 1: destruct b; only 1: trivial; only 1: unfold BinIntDef.Z.rem; only 1: simpl; only 1: destruct BinNatDef.N.pos_div_eucl; only 1: destruct n0; only 1: easy; only 1: easy; only 1: unfold BinIntDef.Z.rem; only 1: simpl; only 1: destruct BinNatDef.N.pos_div_eucl; only 1: destruct n0; only 1: easy; only 1: easy).	2.965824	132
Coq.ZArith.BinInt.Z.rem_opp_l	600	1.0.0	synth with cache (only 1: intros ?; only 1: clear H; only 1: apply rem_opp_l').	2.180785	9
Coq.ZArith.BinInt.Z.rem_opp_r	600	1.0.0	synth with cache (only 1: intros ?; only 1: clear H; only 1: apply rem_opp_r').	2.258300	9
Coq.ZArith.BinInt.Z.divide_Zpos	600
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	600
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	600
Coq.ZArith.BinInt.Z.ggcd_gcd	600
Coq.ZArith.BinInt.Z.ggcd_correct_divisors	600
Coq.ZArith.BinInt.Z.gcd_divide_l	600
Coq.ZArith.BinInt.Z.gcd_divide_r	600
Coq.ZArith.BinInt.Z.gcd_greatest	600
Coq.ZArith.BinInt.Z.gcd_nonneg	600	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: destruct b; only 1: easy; only 1: easy; only 1: easy; only 1: destruct b; only 1: easy; only 1: easy; only 1: easy; only 1: destruct b; only 1: easy; only 1: easy; only 1: easy).	2.464450	21
Coq.ZArith.BinInt.Z.ggcd_opp	600	0.0.1.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: destruct b; only 1: unfold BinIntDef.Z.ggcd; only 1: unfold BinIntDef.Z.opp; only 1: auto; only 1: unfold BinIntDef.Z.ggcd; only 1: unfold BinIntDef.Z.opp; only 1: auto; only 1: unfold BinIntDef.Z.ggcd; only 1: unfold BinIntDef.Z.opp; only 1: auto; only 1: destruct b; only 1: unfold BinIntDef.Z.ggcd; only 1: unfold BinIntDef.Z.opp; only 1: auto; only 1: unfold BinIntDef.Z.ggcd; only 1: unfold BinIntDef.Z.opp; only 1: destruct BinPosDef.Pos.ggcd; only 1: destruct p2; only 1: auto; only 1: unfold BinIntDef.Z.ggcd; only 1: unfold BinIntDef.Z.opp; only 1: destruct BinPosDef.Pos.ggcd; only 1: destruct p2; only 1: auto; only 1: destruct b; only 1: unfold BinIntDef.Z.ggcd; only 1: unfold BinIntDef.Z.opp; only 1: auto; only 1: unfold BinIntDef.Z.ggcd; only 1: unfold BinIntDef.Z.opp; only 1: destruct BinPosDef.Pos.ggcd; only 1: destruct p2; only 1: auto; only 1: unfold BinIntDef.Z.ggcd; only 1: unfold BinIntDef.Z.opp; only 1: destruct BinPosDef.Pos.ggcd; only 1: destruct p2; only 1: auto).	3.554885	166
Coq.ZArith.BinInt.Z.testbit_of_N	600	0.0.0.0.0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: destruct n; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial; only 1: destruct n; only 1: simpl; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: trivial).	2.355441	36
Coq.ZArith.BinInt.Z.testbit_of_N'	600	0.1.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- testbit_of_N; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: destruct H; only 1: easy).	2.190562	17
Coq.ZArith.BinInt.Z.testbit_Zpos	600	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- testbit_of_N'; only 1: easy; only 1: easy).	2.158496	4
Coq.ZArith.BinInt.Z.testbit_Zneg	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- testbit_of_N'; only 1: destruct n; only 1: unfold BinIntDef.Z.testbit; only 1: destruct a; only 1: easy; only 1: destruct a; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: destruct BinPosDef.Pos.pred_N; only 1: easy; only 1: easy; only 1: destruct H; only 1: easy; only 1: easy).	2.423500	42
Coq.ZArith.BinInt.Z.div2_spec	600	0	synth with cache (only 1: reflexivity).	2.195489	1
Coq.ZArith.BinInt.Z.testbit_0_l	600	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	2.130157	4
Coq.ZArith.BinInt.Z.testbit_neg_r	600	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	2.129282	4
Coq.ZArith.BinInt.Z.testbit_odd_0	600	0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: easy; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	2.132158	7
Coq.ZArith.BinInt.Z.testbit_even_0	600	0.0.0.0	synth with cache (only 1: destruct a; only 1: easy; only 1: easy; only 1: easy).	2.126678	4
Coq.ZArith.BinInt.Z.testbit_odd_succ	600	0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.2.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: intros ?; only 1: clear H; only 1: destruct a; only 1: simpl; only 1: easy; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: reflexivity; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: reflexivity; only 1: intros ?; only 1: clear H; only 1: unfold BinIntDef.Z.testbit; only 1: simpl; only 1: destruct a; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite Pos.add_1_r; only 1: f_equal; only 1: apply Pos.pred_N_succ; only 1: destruct p0; only 1: simpl; only 1: rewrite Pos.add_1_r; only 1: rewrite Pos.pred_N_succ; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: rewrite Pos.add_1_r; only 1: rewrite Pos.pred_N_succ; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: trivial; only 1: destruct 1; only 1: easy).	4.442453	287
Coq.ZArith.BinInt.Z.testbit_even_succ	600	0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.2.1.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: intros ?; only 1: clear H; only 1: destruct a; only 1: simpl; only 1: easy; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: reflexivity; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: reflexivity; only 1: intros ?; only 1: clear H; only 1: unfold BinIntDef.Z.testbit; only 1: simpl; only 1: destruct a; only 1: trivial; only 1: simpl; only 1: rewrite Pos.add_1_r; only 1: f_equal; only 1: apply Pos.pred_N_succ; only 1: destruct p0; only 1: simpl; only 1: rewrite Pos.add_1_r; only 1: rewrite Pos.pred_N_succ; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: rewrite Pos.add_1_r; only 1: rewrite Pos.pred_N_succ; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: trivial; only 1: destruct 1; only 1: easy).	4.098174	284
Coq.ZArith.BinInt.Z.shiftr_spec_aux	600
Coq.ZArith.BinInt.Z.shiftl_spec_low	600
Coq.ZArith.BinInt.Z.shiftl_spec_high	600
Coq.ZArith.BinInt.Z.shiftr_spec	600
Coq.ZArith.BinInt.Z.lor_spec	600
Coq.ZArith.BinInt.Z.land_spec	600
Coq.ZArith.BinInt.Z.ldiff_spec	600
Coq.ZArith.BinInt.Z.lxor_spec	600
Coq.ZArith.BinInt.Z.gt_lt_iff	600	0.0.0.0.0	synth with cache (only 1: unfold lt; only 1: unfold gt; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy).	2.535661	5
Coq.ZArith.BinInt.Z.gt_lt	600	0	synth with cache (only 1: apply gt_lt_iff).	2.495868	1
Coq.ZArith.BinInt.Z.lt_gt	600	0	synth with cache (only 1: apply gt_lt_iff).	2.462657	1
Coq.ZArith.BinInt.Z.ge_le_iff	600	0.0.0.0.0	synth with cache (only 1: unfold le; only 1: unfold ge; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy).	2.490997	5
Coq.ZArith.BinInt.Z.ge_le	600	0	synth with cache (only 1: apply ge_le_iff).	2.505432	1
Coq.ZArith.BinInt.Z.le_ge	600	0	synth with cache (only 1: apply ge_le_iff).	2.471205	1
Coq.ZArith.BinInt.Z.gtb_ltb	600	0.0.0.0.0.0.0	synth with cache (only 1: unfold BinIntDef.Z.gtb; only 1: unfold BinIntDef.Z.ltb; only 1: rewrite compare_antisym; only 1: case BinIntDef.Z.compare; only 1: easy; only 1: easy; only 1: easy).	2.579533	7
Coq.ZArith.BinInt.Z.geb_leb	600	0.0.0.0.0.0.0	synth with cache (only 1: unfold BinIntDef.Z.geb; only 1: unfold BinIntDef.Z.leb; only 1: rewrite compare_antisym; only 1: case BinIntDef.Z.compare; only 1: easy; only 1: easy; only 1: easy).	2.556255	7
Coq.ZArith.BinInt.Z.gtb_lt	600	0.0	synth with cache (only 1: rewrite gtb_ltb; only 1: apply ltb_lt).	2.518912	2
Coq.ZArith.BinInt.Z.geb_le	600	0.0	synth with cache (only 1: rewrite geb_leb; only 1: apply leb_le).	2.533218	2
Coq.ZArith.BinInt.Z.gtb_spec	600	0.0	synth with cache (only 1: rewrite gtb_ltb; only 1: apply ltb_spec).	2.498315	2
Coq.ZArith.BinInt.Z.geb_spec	600	0.0	synth with cache (only 1: rewrite geb_leb; only 1: apply leb_spec).	2.527287	2
Coq.ZArith.BinInt.Z.add_reg_l	600
Coq.ZArith.BinInt.Z.mul_reg_l	600
Coq.ZArith.BinInt.Z.mul_reg_r	600
Coq.ZArith.BinInt.Z.opp_eq_mul_m1	600	0.0.0.0.0	synth with cache (only 1: rewrite mul_comm; only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	2.549735	5
Coq.ZArith.BinInt.Z.add_diag	600
Coq.ZArith.BinInt.Z.compare_opp	600	0.0.0.0.0.0.0.0.0.0.0.2.0.2.0.0.2.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Pos.compare_antisym; only 1: easy; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Pos.compare_antisym; only 1: easy).	3.331395	144
Coq.ZArith.BinInt.Z.add_compare_mono_l	600
Coq.ZArith.BinInt.Z.testbit_mod_pow2	600
Coq.ZArith.BinInt.Z.testbit_ones	600
Coq.ZArith.BinInt.Z.testbit_ones_nonneg	600
Coq.ZArith.BinInt.Pos2Z.id	600	0	synth with cache (only 1: reflexivity).	2.792419	1
Coq.ZArith.BinInt.Pos2Z.inj	600	0.0	synth with cache (only 1: injection 1; only 1: easy).	2.832936	2
Coq.ZArith.BinInt.Pos2Z.inj_iff	600	0.0.0.0.0.0	synth with cache (only 1: split; only 1: injection 1; only 1: easy; only 1: intros; only 1: f_equal; only 1: easy).	2.827094	6
Coq.ZArith.BinInt.Pos2Z.is_pos	600	0	synth with cache (only 1: easy).	2.832766	1
Coq.ZArith.BinInt.Pos2Z.is_nonneg	600	0	synth with cache (only 1: easy).	2.786395	1
Coq.ZArith.BinInt.Pos2Z.inj_1	600	0	synth with cache (only 1: easy).	2.866152	1
Coq.ZArith.BinInt.Pos2Z.inj_xO	600	0	synth with cache (only 1: reflexivity).	2.846506	1
Coq.ZArith.BinInt.Pos2Z.inj_xI	600	0	synth with cache (only 1: reflexivity).	2.811727	1
Coq.ZArith.BinInt.Pos2Z.inj_succ	600	0.0.0	synth with cache (only 1: simpl; only 1: rewrite Pos.add_1_r; only 1: easy).	2.909596	3
Coq.ZArith.BinInt.Pos2Z.inj_add	600	0	synth with cache (only 1: reflexivity).	2.734938	1
Coq.ZArith.BinInt.Pos2Z.inj_sub	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: rewrite Z.pos_sub_gt; only 1: easy; only 1: trivial).	2.957734	5
Coq.ZArith.BinInt.Pos2Z.inj_sub_max	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: simpl; only 1: rewrite Z.pos_sub_spec; only 1: case Pos.compare_spec; only 1: intros; only 1: subst; only 1: rewrite Pos.sub_diag; only 1: easy; only 1: intros; only 1: rewrite Pos.sub_lt; only 1: easy; only 1: trivial; only 1: intros; only 1: destruct BinPosDef.Pos.sub; only 1: easy; only 1: easy; only 1: easy).	3.074513	24
Coq.ZArith.BinInt.Pos2Z.inj_pred	600	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	2.863641	4
Coq.ZArith.BinInt.Pos2Z.inj_mul	600	0	synth with cache (only 1: reflexivity).	2.811368	1
Coq.ZArith.BinInt.Pos2Z.inj_pow_pos	600	0.0	synth with cache (only 1: apply Pos.iter_swap_gen; only 1: easy).	2.852737	2
Coq.ZArith.BinInt.Pos2Z.inj_pow	600	0	synth with cache (only 1: apply inj_pow_pos).	2.741566	1
Coq.ZArith.BinInt.Pos2Z.inj_square	600	0	synth with cache (only 1: reflexivity).	2.738549	1
Coq.ZArith.BinInt.Pos2Z.inj_compare	600	0	synth with cache (only 1: reflexivity).	2.800569	1
Coq.ZArith.BinInt.Pos2Z.inj_leb	600	0	synth with cache (only 1: reflexivity).	2.790771	1
Coq.ZArith.BinInt.Pos2Z.inj_ltb	600	0	synth with cache (only 1: reflexivity).	2.871226	1
Coq.ZArith.BinInt.Pos2Z.inj_eqb	600	0	synth with cache (only 1: reflexivity).	2.827281	1
Coq.ZArith.BinInt.Pos2Z.inj_max	600	0.0.0.0.0.0.0	synth with cache (only 1: unfold BinIntDef.Z.max; only 1: unfold BinPosDef.Pos.max; only 1: rewrite inj_compare; only 1: case Z.compare_spec; only 1: easy; only 1: easy; only 1: easy).	2.869495	7
Coq.ZArith.BinInt.Pos2Z.inj_min	600	0.0.0.0.0.0.0	synth with cache (only 1: unfold BinIntDef.Z.min; only 1: unfold BinPosDef.Pos.min; only 1: rewrite inj_compare; only 1: case Z.compare_spec; only 1: easy; only 1: easy; only 1: easy).	2.893978	7
Coq.ZArith.BinInt.Pos2Z.inj_sqrt	600	0	synth with cache (only 1: reflexivity).	2.828433	1
Coq.ZArith.BinInt.Pos2Z.inj_gcd	600	0	synth with cache (only 1: reflexivity).	2.826396	1
Coq.ZArith.BinInt.Pos2Z.inj_divide	600	1	synth with cache (only 1: apply Z.divide_Zpos).	2.853181	9
Coq.ZArith.BinInt.Pos2Z.inj_testbit	600	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- Z.testbit_of_N'; only 1: easy; only 1: easy).	2.857030	4
Coq.ZArith.BinInt.Pos2Z.inj_neg	600	0.0	synth with cache (only 1: injection 1; only 1: easy).	2.842863	2
Coq.ZArith.BinInt.Pos2Z.inj_neg_iff	600	0.0.0.0.0.0	synth with cache (only 1: split; only 1: injection 1; only 1: easy; only 1: intros; only 1: f_equal; only 1: easy).	2.871706	6
Coq.ZArith.BinInt.Pos2Z.inj_pos	600	0.0	synth with cache (only 1: injection 1; only 1: easy).	2.885460	2
Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	600	0.0.0.0.0.0	synth with cache (only 1: split; only 1: injection 1; only 1: easy; only 1: intros; only 1: f_equal; only 1: easy).	2.842066	6
Coq.ZArith.BinInt.Pos2Z.neg_is_neg	600	0	synth with cache (only 1: easy).	2.865102	1
Coq.ZArith.BinInt.Pos2Z.neg_is_nonpos	600	0	synth with cache (only 1: easy).	2.701173	1
Coq.ZArith.BinInt.Pos2Z.pos_is_pos	600	0	synth with cache (only 1: easy).	2.713413	1
Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	600	0	synth with cache (only 1: easy).	2.709334	1
Coq.ZArith.BinInt.Pos2Z.neg_le_pos	600	0	synth with cache (only 1: easy).	2.711960	1
Coq.ZArith.BinInt.Pos2Z.neg_lt_pos	600	0	synth with cache (only 1: easy).	2.775048	1
Coq.ZArith.BinInt.Pos2Z.neg_le_neg	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Z.le; only 1: simpl; only 1: rewrite <- Pos.compare_antisym; only 1: easy).	2.708007	5
Coq.ZArith.BinInt.Pos2Z.neg_lt_neg	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Z.lt; only 1: simpl; only 1: rewrite <- Pos.compare_antisym; only 1: easy).	2.769550	5
Coq.ZArith.BinInt.Pos2Z.pos_le_pos	600	0	synth with cache (only 1: easy).	2.720059	1
Coq.ZArith.BinInt.Pos2Z.pos_lt_pos	600	0	synth with cache (only 1: easy).	2.747805	1
Coq.ZArith.BinInt.Pos2Z.neg_xO	600	0	synth with cache (only 1: reflexivity).	2.717102	1
Coq.ZArith.BinInt.Pos2Z.neg_xI	600	0	synth with cache (only 1: reflexivity).	2.728704	1
Coq.ZArith.BinInt.Pos2Z.pos_xO	600	0	synth with cache (only 1: reflexivity).	2.717104	1
Coq.ZArith.BinInt.Pos2Z.pos_xI	600	0	synth with cache (only 1: reflexivity).	2.703129	1
Coq.ZArith.BinInt.Pos2Z.opp_neg	600	0	synth with cache (only 1: reflexivity).	2.717148	1
Coq.ZArith.BinInt.Pos2Z.opp_pos	600	0	synth with cache (only 1: reflexivity).	2.700368	1
Coq.ZArith.BinInt.Pos2Z.add_neg_neg	600	0	synth with cache (only 1: reflexivity).	2.734017	1
Coq.ZArith.BinInt.Pos2Z.add_pos_neg	600	0	synth with cache (only 1: reflexivity).	2.697874	1
Coq.ZArith.BinInt.Pos2Z.add_neg_pos	600	0	synth with cache (only 1: reflexivity).	2.776832	1
Coq.ZArith.BinInt.Pos2Z.add_pos_pos	600	0	synth with cache (only 1: reflexivity).	2.702134	1
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	600	1	synth with cache (only 1: apply Z.divide_Zpos_Zneg_r).	2.788499	5
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_l	600	1	synth with cache (only 1: apply Z.divide_Zpos_Zneg_l).	2.750408	5
Coq.ZArith.BinInt.Pos2Z.testbit_neg	600	1	synth with cache (only 1: apply Z.testbit_Zneg).	2.797103	9
Coq.ZArith.BinInt.Pos2Z.testbit_pos	600	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- Z.testbit_of_N'; only 1: easy; only 1: easy).	2.720324	4
Coq.ZArith.BinInt.Z2Pos.id	600	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: easy; only 1: easy).	2.792622	4
Coq.ZArith.BinInt.Z2Pos.inj	600	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: easy; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst -> H1; only 1: clear H; only 1: apply id; only 1: Z.order; only 1: simpl; only 1: easy).	2.941165	21
Coq.ZArith.BinInt.Z2Pos.inj_iff	600	0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: apply inj; only 1: easy; only 1: easy; only 1: intros; only 1: f_equal; only 1: easy).	2.843862	7
Coq.ZArith.BinInt.Z2Pos.to_pos_nonpos	600	0.0.1.0.0	synth with cache (only 1: destruct x; only 1: trivial; only 1: destruct 1; only 1: easy; only 1: trivial).	2.759901	6
Coq.ZArith.BinInt.Z2Pos.inj_1	600	0	synth with cache (only 1: reflexivity).	2.751192	1
Coq.ZArith.BinInt.Z2Pos.inj_double	600	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: easy; only 1: easy).	2.821440	4
Coq.ZArith.BinInt.Z2Pos.inj_succ_double	600	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: easy; only 1: easy).	2.742211	4
Coq.ZArith.BinInt.Z2Pos.inj_succ	600	0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: simpl; only 1: rewrite Pos.add_1_r; only 1: easy; only 1: easy).	2.823517	6
Coq.ZArith.BinInt.Z2Pos.inj_add	600	0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	2.880308	7
Coq.ZArith.BinInt.Z2Pos.inj_sub	600	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: simpl; only 1: intros; only 1: rewrite Z.pos_sub_gt; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	2.899716	19
Coq.ZArith.BinInt.Z2Pos.inj_pred	600	0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	2.857319	7
Coq.ZArith.BinInt.Z2Pos.inj_mul	600	0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	2.847943	7
Coq.ZArith.BinInt.Z2Pos.inj_pow	600	0.0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Pos2Z.inj; only 1: rewrite Pos2Z.inj_pow; only 1: rewrite id; only 1: rewrite id; only 1: rewrite id; only 1: trivial; only 1: easy; only 1: easy; only 1: apply Z.pow_pos_nonneg; only 1: easy; only 1: Z.order).	2.901464	21
Coq.ZArith.BinInt.Z2Pos.inj_pow_pos	600
Coq.ZArith.BinInt.Z2Pos.inj_compare	600	0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	2.855242	7
Coq.ZArith.BinInt.Z2Pos.inj_leb	600	0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	2.584862	7
Coq.ZArith.BinInt.Z2Pos.inj_ltb	600	0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	2.518468	7
Coq.ZArith.BinInt.Z2Pos.inj_eqb	600	0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	2.670355	7
Coq.ZArith.BinInt.Z2Pos.inj_max	600	0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: rewrite Pos.max_1_l; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: destruct y; only 1: simpl; only 1: rewrite Pos.max_1_r; only 1: easy; only 1: simpl; only 1: rewrite <- Pos2Z.inj_max; only 1: easy; only 1: simpl; only 1: rewrite Pos.max_1_r; only 1: easy; only 1: simpl; only 1: rewrite Pos.max_1_l; only 1: destruct y; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply to_pos_nonpos; only 1: apply Z.max_lub; only 1: easy; only 1: easy).	3.112664	85
Coq.ZArith.BinInt.Z2Pos.inj_min	600	0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: rewrite Pos.min_1_l; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: destruct y; only 1: simpl; only 1: rewrite Pos.min_1_r; only 1: easy; only 1: simpl; only 1: rewrite <- Pos2Z.inj_min; only 1: easy; only 1: simpl; only 1: rewrite Pos.min_1_r; only 1: easy; only 1: simpl; only 1: rewrite Pos.min_1_l; only 1: destruct y; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: apply to_pos_nonpos; only 1: apply Z.min_le_iff; only 1: left; only 1: easy).	3.156101	83
Coq.ZArith.BinInt.Z2Pos.inj_sqrt	600	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: easy; only 1: easy).	2.574622	4
Coq.ZArith.BinInt.Z2Pos.inj_gcd	600	0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	2.630362	7
Coq.ZArith.BinInt.Zplus_minus_eq	600	0.0.0	synth with cache (only 1: intros; only 1: apply Z.add_move_l; only 1: easy).	2.544231	3
Coq.ZArith.BinInt.Zpos_eq	600	0	synth with cache (only 1: congruence).	2.515050	1
Coq.ZArith.BinInt.ZL0	600	0	synth with cache (only 1: reflexivity).	2.557880	1
Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	600	1.0	synth with cache (only 1: rewrite Z.mul_comm; only 1: apply Z.add_diag).	2.530163	3
Coq.ZArith.BinInt.Z_eq_mult	600	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: reflexivity).	2.578688	3
Coq.FSets.FMapWeakList.Raw.Elt.empty_1	600
Coq.FSets.FMapWeakList.Raw.Elt.empty_NoDup	600
Coq.FSets.FMapWeakList.Raw.Elt.is_empty_1	600
Coq.FSets.FMapWeakList.Raw.Elt.is_empty_2	600
Coq.FSets.FMapWeakList.Raw.Elt.mem_1	600
Coq.FSets.FMapWeakList.Raw.Elt.mem_2	600
Coq.FSets.FMapWeakList.Raw.Elt.find_2	600
Coq.FSets.FMapWeakList.Raw.Elt.find_1	600
Coq.FSets.FMapWeakList.Raw.Elt.find_eq	600
Coq.FSets.FMapWeakList.Raw.Elt.add_1	600
Coq.FSets.FMapWeakList.Raw.Elt.add_2	600
Coq.FSets.FMapWeakList.Raw.Elt.add_3	600
Coq.FSets.FMapWeakList.Raw.Elt.add_3'	600
Coq.FSets.FMapWeakList.Raw.Elt.add_NoDup	600
Coq.FSets.FMapWeakList.Raw.Elt.add_eq	600
Coq.FSets.FMapWeakList.Raw.Elt.add_not_eq	600
Coq.FSets.FMapWeakList.Raw.Elt.remove_1	600
Coq.FSets.FMapWeakList.Raw.Elt.remove_2	600
Coq.FSets.FMapWeakList.Raw.Elt.remove_3	600
Coq.FSets.FMapWeakList.Raw.Elt.remove_3'	600
Coq.FSets.FMapWeakList.Raw.Elt.remove_NoDup	600
Coq.FSets.FMapWeakList.Raw.Elt.elements_1	600
Coq.FSets.FMapWeakList.Raw.Elt.elements_2	600
Coq.FSets.FMapWeakList.Raw.Elt.elements_3w	600
Coq.FSets.FMapWeakList.Raw.Elt.fold_1	600
Coq.FSets.FMapWeakList.Raw.Elt.submap_1	600
Coq.FSets.FMapWeakList.Raw.Elt.submap_2	600
Coq.FSets.FMapWeakList.Raw.Elt.equal_1	600
Coq.FSets.FMapWeakList.Raw.Elt.equal_2	600
Coq.FSets.FMapWeakList.Raw.Elt2.map_1	600
Coq.FSets.FMapWeakList.Raw.Elt2.map_2	600
Coq.FSets.FMapWeakList.Raw.Elt2.map_NoDup	600
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_1	600
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_2	600
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_NoDup	600
Coq.FSets.FMapWeakList.Raw.Elt3.fold_right_pair_NoDup	600
Coq.FSets.FMapWeakList.Raw.Elt3.combine_NoDup	600
Coq.FSets.FMapWeakList.Raw.Elt3.combine_l_1	600
Coq.FSets.FMapWeakList.Raw.Elt3.combine_r_1	600
Coq.FSets.FMapWeakList.Raw.Elt3.combine_1	600
Coq.FSets.FMapWeakList.Raw.Elt3.map2_NoDup	600
Coq.FSets.FMapWeakList.Raw.Elt3.map2_0	600
Coq.FSets.FMapWeakList.Raw.Elt3.map2_1	600
Coq.FSets.FMapWeakList.Raw.Elt3.map2_2	600
Coq.FSets.FMapWeakList.Make.Elt.MapsTo_1	600
Coq.FSets.FMapWeakList.Make.Elt.mem_1	600
Coq.FSets.FMapWeakList.Make.Elt.mem_2	600
Coq.FSets.FMapWeakList.Make.Elt.empty_1	600
Coq.FSets.FMapWeakList.Make.Elt.is_empty_1	600
Coq.FSets.FMapWeakList.Make.Elt.is_empty_2	600
Coq.FSets.FMapWeakList.Make.Elt.add_1	600
Coq.FSets.FMapWeakList.Make.Elt.add_2	600
Coq.FSets.FMapWeakList.Make.Elt.add_3	600
Coq.FSets.FMapWeakList.Make.Elt.remove_1	600
Coq.FSets.FMapWeakList.Make.Elt.remove_2	600
Coq.FSets.FMapWeakList.Make.Elt.remove_3	600
Coq.FSets.FMapWeakList.Make.Elt.find_1	600
Coq.FSets.FMapWeakList.Make.Elt.find_2	600
Coq.FSets.FMapWeakList.Make.Elt.elements_1	600
Coq.FSets.FMapWeakList.Make.Elt.elements_2	600
Coq.FSets.FMapWeakList.Make.Elt.elements_3w	600
Coq.FSets.FMapWeakList.Make.Elt.cardinal_1	600
Coq.FSets.FMapWeakList.Make.Elt.fold_1	600
Coq.FSets.FMapWeakList.Make.Elt.equal_1	600
Coq.FSets.FMapWeakList.Make.Elt.equal_2	600
Coq.FSets.FMapWeakList.Make.map_1	600
Coq.FSets.FMapWeakList.Make.map_2	600
Coq.FSets.FMapWeakList.Make.mapi_1	600
Coq.FSets.FMapWeakList.Make.mapi_2	600
Coq.FSets.FMapWeakList.Make.map2_1	600
Coq.FSets.FMapWeakList.Make.map2_2	600
Coq.FSets.FSetBridge.DepOfNodep.empty	600
Coq.FSets.FSetBridge.DepOfNodep.is_empty	600
Coq.FSets.FSetBridge.DepOfNodep.mem	600
Coq.FSets.FSetBridge.DepOfNodep.add	600
Coq.FSets.FSetBridge.DepOfNodep.singleton	600
Coq.FSets.FSetBridge.DepOfNodep.remove	600
Coq.FSets.FSetBridge.DepOfNodep.union	600
Coq.FSets.FSetBridge.DepOfNodep.inter	600
Coq.FSets.FSetBridge.DepOfNodep.diff	600
Coq.FSets.FSetBridge.DepOfNodep.equal	600
Coq.FSets.FSetBridge.DepOfNodep.subset	600
Coq.FSets.FSetBridge.DepOfNodep.elements	600
Coq.FSets.FSetBridge.DepOfNodep.fold	600
Coq.FSets.FSetBridge.DepOfNodep.cardinal	600
Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	600
Coq.FSets.FSetBridge.DepOfNodep.filter	600
Coq.FSets.FSetBridge.DepOfNodep.for_all	600
Coq.FSets.FSetBridge.DepOfNodep.exists_	600
Coq.FSets.FSetBridge.DepOfNodep.partition	600
Coq.FSets.FSetBridge.DepOfNodep.choose_aux	600
Coq.FSets.FSetBridge.DepOfNodep.choose	600
Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	600
Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	600
Coq.FSets.FSetBridge.DepOfNodep.choose_equal	600
Coq.FSets.FSetBridge.DepOfNodep.min_elt	600
Coq.FSets.FSetBridge.DepOfNodep.max_elt	600
Coq.FSets.FSetBridge.NodepOfDep.empty_1	600
Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	600
Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	600
Coq.FSets.FSetBridge.NodepOfDep.mem_1	600
Coq.FSets.FSetBridge.NodepOfDep.mem_2	600
Coq.FSets.FSetBridge.NodepOfDep.equal_1	600
Coq.FSets.FSetBridge.NodepOfDep.equal_2	600
Coq.FSets.FSetBridge.NodepOfDep.subset_1	600
Coq.FSets.FSetBridge.NodepOfDep.subset_2	600
Coq.FSets.FSetBridge.NodepOfDep.choose_1	600
Coq.FSets.FSetBridge.NodepOfDep.choose_2	600
Coq.FSets.FSetBridge.NodepOfDep.choose_3	600
Coq.FSets.FSetBridge.NodepOfDep.elements_1	600
Coq.FSets.FSetBridge.NodepOfDep.elements_2	600
Coq.FSets.FSetBridge.NodepOfDep.elements_3	600
Coq.FSets.FSetBridge.NodepOfDep.elements_3w	600
Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	600
Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	600
Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	600
Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	600
Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	600
Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	600
Coq.FSets.FSetBridge.NodepOfDep.add_1	600
Coq.FSets.FSetBridge.NodepOfDep.add_2	600
Coq.FSets.FSetBridge.NodepOfDep.add_3	600
Coq.FSets.FSetBridge.NodepOfDep.remove_1	600
Coq.FSets.FSetBridge.NodepOfDep.remove_2	600
Coq.FSets.FSetBridge.NodepOfDep.remove_3	600
Coq.FSets.FSetBridge.NodepOfDep.singleton_1	600
Coq.FSets.FSetBridge.NodepOfDep.singleton_2	600
Coq.FSets.FSetBridge.NodepOfDep.union_1	600
Coq.FSets.FSetBridge.NodepOfDep.union_2	600
Coq.FSets.FSetBridge.NodepOfDep.union_3	600
Coq.FSets.FSetBridge.NodepOfDep.inter_1	600
Coq.FSets.FSetBridge.NodepOfDep.inter_2	600
Coq.FSets.FSetBridge.NodepOfDep.inter_3	600
Coq.FSets.FSetBridge.NodepOfDep.diff_1	600
Coq.FSets.FSetBridge.NodepOfDep.diff_2	600
Coq.FSets.FSetBridge.NodepOfDep.diff_3	600
Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	600
Coq.FSets.FSetBridge.NodepOfDep.fold_1	600
Coq.FSets.FSetBridge.NodepOfDep.f_dec	600
Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	600
Coq.FSets.FSetBridge.NodepOfDep.filter_1	600
Coq.FSets.FSetBridge.NodepOfDep.filter_2	600
Coq.FSets.FSetBridge.NodepOfDep.filter_3	600
Coq.FSets.FSetBridge.NodepOfDep.for_all_1	600
Coq.FSets.FSetBridge.NodepOfDep.for_all_2	600
Coq.FSets.FSetBridge.NodepOfDep.exists_1	600
Coq.FSets.FSetBridge.NodepOfDep.exists_2	600
Coq.FSets.FSetBridge.NodepOfDep.partition_1	600
Coq.FSets.FSetBridge.NodepOfDep.partition_2	600
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	600
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	600
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	600
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	600
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	600
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	600
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	600
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	600
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	600
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	600
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	600
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	600
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	600
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	600
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	600
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	600
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	600
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	600
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	600
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	600
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	600
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	600
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	600
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	600
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	600
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	600
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	600
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	600
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	600
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	600
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	600
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	600
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	600
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	600
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	600
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	600
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	600
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	600
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	600
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	600
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	600
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	600
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	600
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	600
Coq.Sets.Integers.Integers_sect.le_reflexive	600	0.0.0.0.0	synth with cache (only 1: red; only 1: intros ?; only 1: apply PeanoNat.Nat.lt_eq_cases; only 1: right; only 1: easy).	1.023705	5
Coq.Sets.Integers.Integers_sect.le_antisym	600	2.0	synth with cache (only 1: red; only 1: PeanoNat.Nat.order).	1.414895	24
Coq.Sets.Integers.Integers_sect.le_trans	600
Coq.Sets.Integers.Integers_sect.le_Order	600
Coq.Sets.Integers.Integers_sect.triv_nat	600
Coq.Sets.Integers.Integers_sect.nat_po	600
Coq.Sets.Integers.Integers_sect.le_total_order	600
Coq.Sets.Integers.Integers_sect.Finite_subset_has_lub	600
Coq.Sets.Integers.Integers_sect.Integers_has_no_ub	600
Coq.Sets.Integers.Integers_sect.Integers_infinite	600
Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	600
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	600
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	600
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	600
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	600
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	600
Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	600
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	600
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	600
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	600
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	600
Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	600
Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqk	600
Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqke	600
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_eq	600
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_lt	600
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_In	600
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_NotIn	600
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_NoDupA	600
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_1	600
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_2	600
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_3	600
Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	600
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	600
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	600
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.mem_spec	600
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.equal_spec	600
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.subset_spec	600
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.empty_spec	600
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.is_empty_spec	600
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.add_spec	600
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.remove_spec	600
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.singleton_spec	600
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.union_spec	600
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.inter_spec	600
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.diff_spec	600
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.fold_spec	600
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.cardinal_spec	600
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.filter_spec	600
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.for_all_spec	600
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.exists_spec	600
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec1	600
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec2	600
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec1	600
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec2w	600
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec1	600
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec2	600
Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	600
Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	600
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.compare_spec	600
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.elements_spec2	600
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec1	600
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec2	600
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec3	600
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec1	600
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec2	600
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec3	600
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.choose_spec3	600
Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	600
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	600
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	600
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	600
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	600
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	600
Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	600
Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	600
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	600
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	600
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	600
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	600
Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	600
Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	600
Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	600
Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	600
Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	600	0	synth with cache (only 1: firstorder).	1.146890	1
Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	600	0	synth with cache (only 1: firstorder).	1.372999	1
Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	600	0.0.0.0	synth with cache (only 1: red; only 1: red; only 1: unfold predicate_equivalence; only 1: auto).	1.024411	4
Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	600	0.0.0.0	synth with cache (only 1: red; only 1: red; only 1: unfold predicate_implication; only 1: auto).	1.015810	4
Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	600
Coq.Classes.Morphisms_Relations.subrelation_pointwise	600
Coq.Classes.Morphisms_Relations.flip_pointwise_relation	600	0.0.1	synth with cache (only 1: split; only 1: firstorder; only 1: firstorder).	0.999620	4
Coq.Sets.Infinite_sets.Infinite_sets.make_new_approximant	600
Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow	600
Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow'	600
Coq.Sets.Infinite_sets.Infinite_sets.approximant_can_be_any_size	600
Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous	600
Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous'	600
Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_bis	600
Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_ter	600
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	600
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	600
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	600
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	600
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	600
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	600
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	600
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	600
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	600
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	600
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	600
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	600
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	600
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	600
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	600
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	600
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	600
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_compat	600
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_eq	600
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	600
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	600
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	600
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_3	600
Coq.Structures.EqualitiesFacts.PairDecidableType.eq_dec	600
Coq.Structures.EqualitiesFacts.PairUsualDecidableType.eq_dec	600
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	600
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	600
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	600
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	600
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_dec	600
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_sym	600
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	600
Coq.Classes.SetoidClass.setoid_refl	600
Coq.Classes.SetoidClass.setoid_sym	600	0	synth with cache (only 1: typeclasses eauto).	0.988693	1
Coq.Classes.SetoidClass.setoid_trans	600	0	synth with cache (only 1: typeclasses eauto).	1.016572	1
Coq.Classes.SetoidClass.nequiv_equiv_trans	600
Coq.Classes.SetoidClass.equiv_nequiv_trans	600
Coq.Classes.EquivDec.unit_eqdec_obligation_1	600	0.0.0	synth with cache (only 1: destruct x; only 1: destruct y; only 1: reflexivity).	1.042058	3
Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	600
Coq.Classes.EquivDec.list_eqdec_obligation_5	600	0.0.0.0.0	synth with cache (only 1: destruct y; only 1: unfold not in *; only 1: eauto; only 1: unfold not in *; only 1: eauto).	1.171216	5
Coq.Sets.Image.Image.Im_def	600
Coq.Sets.Image.Image.Im_add	600
Coq.Sets.Image.Image.image_empty	600
Coq.Sets.Image.Image.finite_image	600
Coq.Sets.Image.Image.Im_inv	600
Coq.Sets.Image.Image.not_injective_elim	600
Coq.Sets.Image.Image.cardinal_Im_intro	600
Coq.Sets.Image.Image.In_Image_elim	600
Coq.Sets.Image.Image.injective_preserves_cardinal	600
Coq.Sets.Image.Image.cardinal_decreases	600
Coq.Sets.Image.Image.Pigeonhole	600
Coq.Sets.Image.Image.Pigeonhole_principle	600
Coq.Structures.OrderedType.MOT_to_OT.eq_dec	600
Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	600
Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	600
Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	600
Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	600
Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	600
Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	600
Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	600
Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	600
Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	600
Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	600
Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	600
Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	600
Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	600
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	600
Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	600
Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	600
Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	600
Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	600
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	600
Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	600
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	600
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	600
Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	600
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	600
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	600
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	600
Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	600
Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	600
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_eq	600
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_In	600
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_lt	600
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_eq	600
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_Inf_In	600
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_Inf	600
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_Inf	600
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_alt	600
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_NoDup	600
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_eqk	600
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_r	600
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_l	600
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_refl	600
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_refl	600
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_sym	600
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_sym	600
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_trans	600
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_trans	600
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_trans	600
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqk	600
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqke	600
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_equiv	600
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_equiv	600
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_strorder	600
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat	600
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat'	600
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_not_ltk	600
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_eqk	600
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_ltk	600
Coq.Structures.OrderedType.KeyOrderedType.Elt.InA_eqke_eqk	600
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_alt	600
Coq.Structures.OrderedType.KeyOrderedType.Elt.MapsTo_eq	600
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_eq	600
Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_eq	600
Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_lt	600
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_In	600
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_NotIn	600
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_NoDupA	600
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_1	600
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_2	600
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_3	600
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv	600
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_2	600
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_3	600
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_eqk	600
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_refl	600
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_refl	600
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_sym	600
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_sym	600
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_trans	600
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_trans	600
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_equiv	600
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_equiv	600
Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqke_eqk	600
Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqk	600
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_alt	600
Coq.Structures.DecidableType.KeyDecidableType.Elt.MapsTo_eq	600
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_eq	600
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv	600
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_2	600
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_3	600
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Reflexive	600
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Symmetric	600
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Transitive	600
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Irreflexive	600
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Reflexive	600
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Symmetric	600
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Transitive	600
Coq.Classes.RelationPairs.RelProd_Instances.FstRel_ProdRel	600
Coq.Classes.RelationPairs.RelProd_Instances.SndRel_ProdRel	600
Coq.Classes.RelationPairs.RelProd_Instances.FstRel_sub	600
Coq.Classes.RelationPairs.RelProd_Instances.SndRel_sub	600
Coq.Classes.RelationPairs.RelProd_Instances.pair_compat	600
Coq.Classes.RelationPairs.RelProd_Instances.fst_compat	600
Coq.Classes.RelationPairs.RelProd_Instances.snd_compat	600
Coq.Classes.RelationPairs.RelProd_Instances.RelCompFun_compat	600
Coq.Lists.SetoidPermutation.Permutation.Equivalence_instance_0	600
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons	600
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_head	600
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app	600
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_tail	600
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_append	600
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_comm	600
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_app	600
Coq.Lists.SetoidPermutation.Permutation.PermutationA_middle	600
Coq.Lists.SetoidPermutation.Permutation.PermutationA_equivlistA	600
Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_PermutationA	600
Coq.Lists.SetoidPermutation.Permutation.Permutation_eqlistA_commute	600
Coq.Lists.SetoidPermutation.Permutation.PermutationA_decompose	600
Coq.Lists.SetoidPermutation.Permutation.Permutation_PermutationA	600
Coq.Lists.SetoidPermutation.Permutation.eqlistA_PermutationA	600
Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_decompose	600
Coq.Lists.SetoidPermutation.Permutation.PermutationA_preserves_NoDupA	600
Coq.Sets.Finite_sets_facts.Finite_sets_facts.finite_cardinal	600
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_finite	600
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Add_preserves_Finite	600
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Singleton_is_finite	600
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Union_preserves_Finite	600
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Finite_downward_closed	600
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Intersection_preserves_finite	600
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinalO_empty	600
Coq.Sets.Finite_sets_facts.Finite_sets_facts.inh_card_gt_O	600
Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_soustr_1	600
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_is_functional	600
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_Empty	600
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_unicity	600
Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_Add_gen	600
Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_st_card_lt	600
Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_card_le	600
Coq.Sets.Finite_sets_facts.Finite_sets_facts.G_aux	600
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Generalized_induction_on_finite_sets	600
Coq.setoid_ring.Ring_theory.Power.pow_pos_swap	600
Coq.setoid_ring.Ring_theory.Power.pow_pos_succ	600
Coq.setoid_ring.Ring_theory.Power.pow_pos_add	600
Coq.setoid_ring.Ring_theory.Power.pow_N_pow_N	600
Coq.setoid_ring.Ring_theory.DEFINITIONS.MORPHISM.get_sign_None_th	600
Coq.setoid_ring.Ring_theory.DEFINITIONS.IDmorph	600
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eqsth	600
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_s_ext	600
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_ext	600
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.radd_ext1_Proper	600
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.rmul_ext1_Proper	600
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_ext	600
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SReqe_Reqe	600
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_mul_l	600
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_add	600
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRsub_def	600
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRIDmorph	600
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRmorph_Rmorph	600
Coq.setoid_ring.Ring_theory.ALMOST_RING.radd_ext2_Proper	600
Coq.setoid_ring.Ring_theory.ALMOST_RING.rmul_ext2_Proper	600
Coq.setoid_ring.Ring_theory.ALMOST_RING.ropp_ext2_Proper	600
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Rmul_0_l	600
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_mul_l	600
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_add	600
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_opp	600
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cadd_ext_Proper	600
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cmul_ext_Proper	600
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.copp_ext_Proper	600
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.phi_ext1_Proper	600
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_opp	600
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_sub	600
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARth_SRth	600
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARsub_ext	600
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_0_r	600
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_1_r	600
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_0_r	600
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARdistr_r	600
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc1	600
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc2	600
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc1	600
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc2	600
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_mul_r	600
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_zero	600
Coq.NArith.Nnat.N2Nat.id	600
Coq.NArith.Nnat.N2Nat.inj	600
Coq.NArith.Nnat.N2Nat.inj_iff	600	0.0.0.1.0	synth with cache (only 1: split; only 1: apply inj; only 1: intros; only 1: subst; only 1: easy).	1.555439	13
Coq.NArith.Nnat.N2Nat.inj_double	600	2.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: simpl BinNatDef.N.to_nat; only 1: Nat.nzsimpl; only 1: auto; only 1: simpl BinNatDef.N.to_nat; only 1: apply Pos2Nat.inj_xO).	1.679813	15
Coq.NArith.Nnat.N2Nat.inj_succ_double	600	0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: simpl BinNatDef.N.to_nat; only 1: trivial; only 1: simpl BinNatDef.N.to_nat; only 1: rewrite Pos.xI_succ_xO; only 1: rewrite Pos2Nat.inj_succ; only 1: rewrite Pos2Nat.inj_xO; only 1: easy).	1.644045	8
Coq.NArith.Nnat.N2Nat.inj_succ	600	0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: unfold BinPosDef.Pos.to_nat; only 1: rewrite Pos.iter_op_succ; only 1: trivial; only 1: apply Nat.add_assoc).	1.670086	8
Coq.NArith.Nnat.N2Nat.inj_add	600	2.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: destruct a'; only 1: simpl; only 1: auto; only 1: simpl; only 1: easy; only 1: destruct a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_add).	1.730197	26
Coq.NArith.Nnat.N2Nat.inj_mul	600	2.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: destruct a'; only 1: simpl; only 1: auto; only 1: simpl; only 1: trivial; only 1: destruct a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul).	1.769940	26
Coq.NArith.Nnat.N2Nat.inj_sub	600
Coq.NArith.Nnat.N2Nat.inj_pred	600	0.0.0	synth with cache (only 1: rewrite <- Nat.sub_1_r; only 1: rewrite N.pred_sub; only 1: apply inj_sub).	1.598631	3
Coq.NArith.Nnat.N2Nat.inj_div2	600	0.0.0.0.0.1.0.0.0.0.1.0.0.0	synth with cache (only 1: destruct a; only 1: trivial; only 1: destruct p; only 1: unfold BinNatDef.N.div2; only 1: unfold BinNatDef.N.to_nat; only 1: rewrite Pos2Nat.inj_xI; only 1: rewrite Nat.div2_succ_double; only 1: easy; only 1: unfold BinNatDef.N.div2; only 1: unfold BinNatDef.N.to_nat; only 1: rewrite Pos2Nat.inj_xO; only 1: rewrite Nat.div2_double; only 1: easy; only 1: trivial).	1.964649	46
Coq.NArith.Nnat.N2Nat.inj_compare	600
Coq.NArith.Nnat.N2Nat.inj_max	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold BinNatDef.N.max; only 1: rewrite inj_compare; only 1: symmetry; only 1: case Nat.compare_spec; only 1: intros; only 1: apply Nat.max_r; only 1: apply Nat.eq_le_incl; only 1: easy; only 1: intros; only 1: apply Nat.max_r; only 1: apply Nat.lt_le_incl; only 1: easy; only 1: intros; only 1: apply Nat.max_l; only 1: apply Nat.lt_le_incl; only 1: easy).	1.582934	24
Coq.NArith.Nnat.N2Nat.inj_min	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold BinNatDef.N.min; only 1: rewrite inj_compare; only 1: symmetry; only 1: case Nat.compare_spec; only 1: intros; only 1: apply Nat.min_l; only 1: apply Nat.eq_le_incl; only 1: easy; only 1: intros; only 1: apply Nat.min_l; only 1: apply Nat.lt_le_incl; only 1: easy; only 1: intros; only 1: apply Nat.min_r; only 1: apply Nat.lt_le_incl; only 1: easy).	1.808473	24
Coq.NArith.Nnat.N2Nat.inj_iter	600	0.0.0	synth with cache (only 1: destruct a; only 1: trivial; only 1: apply Pos2Nat.inj_iter).	1.593972	3
Coq.NArith.Nnat.Nat2N.id	600	1.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	1.604136	6
Coq.NArith.Nnat.Nat2N.inj	600
Coq.NArith.Nnat.Nat2N.inj_iff	600	0.0.0.1.0	synth with cache (only 1: split; only 1: apply inj; only 1: intros; only 1: subst; only 1: easy).	1.643386	13
Coq.NArith.Nnat.Nat2N.inj_double	600
Coq.NArith.Nnat.Nat2N.inj_succ_double	600	0	synth with cache (only 1: nat2N).	1.590666	1
Coq.NArith.Nnat.Nat2N.inj_succ	600	0	synth with cache (only 1: nat2N).	1.578284	1
Coq.NArith.Nnat.Nat2N.inj_pred	600	0	synth with cache (only 1: nat2N).	1.580679	1
Coq.NArith.Nnat.Nat2N.inj_add	600	0	synth with cache (only 1: nat2N).	1.546448	1
Coq.NArith.Nnat.Nat2N.inj_sub	600	0	synth with cache (only 1: nat2N).	1.581346	1
Coq.NArith.Nnat.Nat2N.inj_mul	600	0	synth with cache (only 1: nat2N).	1.534585	1
Coq.NArith.Nnat.Nat2N.inj_div2	600	0	synth with cache (only 1: nat2N).	1.537127	1
Coq.NArith.Nnat.Nat2N.inj_compare	600	0.0.0.0	synth with cache (only 1: rewrite N2Nat.inj_compare; only 1: rewrite id; only 1: rewrite id; only 1: easy).	1.542289	4
Coq.NArith.Nnat.Nat2N.inj_min	600	0	synth with cache (only 1: nat2N).	1.544122	1
Coq.NArith.Nnat.Nat2N.inj_max	600	0	synth with cache (only 1: nat2N).	1.554730	1
Coq.NArith.Nnat.Nat2N.inj_iter	600	0.0.0	synth with cache (only 1: rewrite N2Nat.inj_iter; only 1: rewrite id; only 1: easy).	1.566710	3
Coq.micromega.Tauto.S.eval_f_morph	600
Coq.micromega.Tauto.map_simpl	600
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_X_inv	600
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_same	600
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_cnf_ff	600
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_cnf_ff	600
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_inv	600
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_inv	600
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_cnf_tt	600
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff	600
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_and_pol	600
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_or_pol	600
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_l	600
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff_r	600
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_r	600
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_form_correct	600
Coq.micromega.Tauto.S.radd_term_term	600
Coq.micromega.Tauto.S.radd_term_term'	600
Coq.micromega.Tauto.S.xror_clause_clause	600
Coq.micromega.Tauto.S.ror_clause_clause	600
Coq.micromega.Tauto.S.ror_cnf_cnf	600
Coq.micromega.Tauto.S.ror_opt_cnf_cnf	600
Coq.micromega.Tauto.S.ratom_cnf	600
Coq.micromega.Tauto.S.rxcnf_xcnf	600
Coq.micromega.Tauto.S.eval_cnf_app	600
Coq.micromega.Tauto.S.eval_cnf_ff	600
Coq.micromega.Tauto.S.eval_cnf_tt	600
Coq.micromega.Tauto.S.eval_cnf_and_opt	600
Coq.micromega.Tauto.S.add_term_correct	600
Coq.micromega.Tauto.S.no_middle_eval_tt	600
Coq.micromega.Tauto.S.or_clause_correct	600
Coq.micromega.Tauto.S.or_clause_cnf_correct	600
Coq.micromega.Tauto.S.eval_cnf_cons	600
Coq.micromega.Tauto.S.eval_cnf_cons_iff	600
Coq.micromega.Tauto.S.or_cnf_correct	600
Coq.micromega.Tauto.S.or_cnf_opt_correct	600
Coq.micromega.Tauto.S.xcnf_correct	600
Coq.micromega.Tauto.S.cnf_checker_sound	600
Coq.micromega.Tauto.S.tauto_checker_sound	600
Coq.micromega.Tauto.S.eval_bf_map	600
Coq.Sorting.Mergesort.Sort.Sorted_merge	600
Coq.Sorting.Mergesort.Sort.Permuted_merge	600
Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	600
Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	600
Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	600
Coq.Sorting.Mergesort.Sort.Permuted_merge_stack	600
Coq.Sorting.Mergesort.Sort.Sorted_iter_merge	600
Coq.Sorting.Mergesort.Sort.Permuted_iter_merge	600
Coq.Sorting.Mergesort.Sort.Sorted_sort	600
Coq.Sorting.Mergesort.Sort.LocallySorted_sort	600
Coq.Sorting.Mergesort.Sort.Permuted_sort	600
Coq.Sorting.Mergesort.Sort.StronglySorted_sort	600
Coq.Sorting.Mergesort.NatOrder.leb_total	600
Coq.Lists.SetoidList.Type_with_equality.InA_altdef	600
Coq.Lists.SetoidList.Type_with_equality.InA_cons	600
Coq.Lists.SetoidList.Type_with_equality.InA_nil	600
Coq.Lists.SetoidList.Type_with_equality.InA_alt	600
Coq.Lists.SetoidList.Type_with_equality.NoDupA_altdef	600
Coq.Lists.SetoidList.Type_with_equality.incl_nil	600
Coq.Lists.SetoidList.Type_with_equality.eqlistA_altdef	600
Coq.Lists.SetoidList.Type_with_equality.equivlist_equiv	600
Coq.Lists.SetoidList.Type_with_equality.eqlistA_equiv	600
Coq.Lists.SetoidList.Type_with_equality.eqlistA_equivlistA	600
Coq.Lists.SetoidList.Type_with_equality.InA_compat	600
Coq.Lists.SetoidList.Type_with_equality.InA_eqA	600
Coq.Lists.SetoidList.Type_with_equality.In_InA	600
Coq.Lists.SetoidList.Type_with_equality.InA_split	600
Coq.Lists.SetoidList.Type_with_equality.InA_app	600
Coq.Lists.SetoidList.Type_with_equality.InA_app_iff	600
Coq.Lists.SetoidList.Type_with_equality.InA_rev	600
Coq.Lists.SetoidList.Type_with_equality.InA_singleton	600
Coq.Lists.SetoidList.Type_with_equality.InA_double_head	600
Coq.Lists.SetoidList.Type_with_equality.InA_permute_heads	600
Coq.Lists.SetoidList.Type_with_equality.InA_app_idem	600
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_app	600
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_rev	600
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_split	600
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_swap	600
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_singleton	600
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_proper	600
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_proper	600
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_nil	600
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_nil_eq	600
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_double_head	600
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_permute_heads	600
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_idem	600
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_NoDupA_split	600
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_eqlistA	600
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.ForallOrdPairs_inclA	600
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_commutes_restr	600
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_equivlistA_restr	600
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_add_restr	600
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_commutes	600
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_equivlistA	600
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_add	600
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_eqlistA2	600
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_commutes_restr2	600
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_equivlistA_restr2	600
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_add_restr2	600
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_commutes2	600
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_equivlistA2	600
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_add2	600
Coq.Lists.SetoidList.Type_with_equality.Remove.InA_dec	600
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_filter	600
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_InA	600
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_NoDupA	600
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_equivlistA	600
Coq.Lists.SetoidList.Type_with_equality.InfA_ltA	600
Coq.Lists.SetoidList.Type_with_equality.InfA_compat	600
Coq.Lists.SetoidList.Type_with_equality.InfA_eqA	600
Coq.Lists.SetoidList.Type_with_equality.SortA_InfA_InA	600
Coq.Lists.SetoidList.Type_with_equality.In_InfA	600
Coq.Lists.SetoidList.Type_with_equality.InA_InfA	600
Coq.Lists.SetoidList.Type_with_equality.InfA_alt	600
Coq.Lists.SetoidList.Type_with_equality.InfA_app	600
Coq.Lists.SetoidList.Type_with_equality.SortA_app	600
Coq.Lists.SetoidList.Type_with_equality.SortA_NoDupA	600
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_length	600
Coq.Lists.SetoidList.Type_with_equality.EqlistA.app_eqlistA_compat	600
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_app	600
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev_app	600
Coq.Lists.SetoidList.Type_with_equality.EqlistA.rev_eqlistA_compat	600
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev	600
Coq.Lists.SetoidList.Type_with_equality.EqlistA.SortA_equivlistA_eqlistA	600
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_sort	600
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_InA	600
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_split	600
Coq.Lists.SetoidList.Find.findA_NoDupA	600
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.sincl_add_x	600
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_in	600
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr	600
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_l	600
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_r	600
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_2	600
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_1	600
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_xy	600
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_st_add_soustr	600
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Sub_Add_new	600
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Simplify_add	600
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Included_Add	600
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.setcover_inv	600
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Add_covers	600
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_Add	600
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_is_Add	600
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Singleton_atomic	600
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.less_than_singleton	600
Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	600	0.0	synth with cache (only 1: apply N.pos_div_eucl_remainder; only 1: easy).	1.671724	2
Coq.Sorting.Permutation.Permutation.Permutation_nil	600
Coq.Sorting.Permutation.Permutation.Permutation_nil_cons	600
Coq.Sorting.Permutation.Permutation.Permutation_refl	600
Coq.Sorting.Permutation.Permutation.Permutation_sym	600
Coq.Sorting.Permutation.Permutation.Permutation_trans	600
Coq.Sorting.Permutation.Permutation_cons	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: subst; only 1: auto using perm_skip).	0.992422	8
Coq.Sorting.Permutation.Permutation_properties.Permutation_in	600
Coq.Sorting.Permutation.Permutation_properties.Permutation_in'	600
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_tail	600
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_head	600
Coq.Sorting.Permutation.Permutation_properties.Permutation_app	600
Coq.Sorting.Permutation.Permutation_properties.Permutation_app'	600
Coq.Sorting.Permutation.Permutation_properties.Permutation_add_inside	600
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_append	600
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_comm	600
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app	600
Coq.Sorting.Permutation.Permutation_properties.Permutation_Add	600
Coq.Sorting.Permutation.Permutation_properties.Permutation_middle	600
Coq.Sorting.Permutation.Permutation_properties.Permutation_rev	600
Coq.Sorting.Permutation.Permutation_properties.Permutation_rev'	600
Coq.Sorting.Permutation.Permutation_properties.Permutation_length	600
Coq.Sorting.Permutation.Permutation_properties.Permutation_length'	600
Coq.Sorting.Permutation.Permutation_properties.Permutation_ind_bis	600
Coq.Sorting.Permutation.Permutation_properties.Permutation_nil_app_cons	600
Coq.Sorting.Permutation.Permutation_properties.Permutation_Add_inv	600
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv	600
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_inv	600
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app_inv	600
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_l	600
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_r	600
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1_inv	600
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1	600
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2_inv	600
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2	600
Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation	600
Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation_bis	600
Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup	600
Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup'	600
Coq.Sorting.Permutation.Permutation_map.Permutation_map	600
Coq.Sorting.Permutation.Permutation_map.Permutation_map'	600
Coq.Sorting.Permutation.nat_bijection_Permutation	600	0.0.0.0.0.0.0.0.0.0.1.0.1.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply NoDup_Permutation_bis; only 1: auto using Injective_map_NoDup, seq_NoDup; only 1: auto using Injective_map_NoDup, seq_NoDup; only 1: rewrite map_length; only 1: easy; only 1: intros ?; only 1: rewrite in_map_iff; only 1: intros ?; only 1: destruct H1; only 1: destruct H1; only 1: intropattern subst <- H1; only 1: rewrite in_seq in *; only 1: simpl in *; only 1: destruct H2; only 1: clear H1; only 1: auto with arith).	1.213208	51
Coq.Sorting.Permutation.Permutation_alt.adapt_injective	600
Coq.Sorting.Permutation.Permutation_alt.adapt_ok	600
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error	600
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error_bis	600
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth	600
Coq.Vectors.VectorEq.BEQ.eqb_nat_eq	600
Coq.Vectors.VectorEq.BEQ.eqb_eq	600
Coq.Vectors.VectorEq.BEQ.eq_dec	600
Coq.Vectors.VectorEq.CAST.cast	600
Coq.Sets.Classical_sets.Ensembles_classical.not_included_empty_Inhabited	600
Coq.Sets.Classical_sets.Ensembles_classical.not_empty_Inhabited	600
Coq.Sets.Classical_sets.Ensembles_classical.Inhabited_Setminus	600
Coq.Sets.Classical_sets.Ensembles_classical.Strict_super_set_contains_new_element	600
Coq.Sets.Classical_sets.Ensembles_classical.Subtract_intro	600
Coq.Sets.Classical_sets.Ensembles_classical.Subtract_inv	600
Coq.Sets.Classical_sets.Ensembles_classical.Included_Strict_Included	600
Coq.Sets.Classical_sets.Ensembles_classical.Strict_Included_inv	600
Coq.Sets.Classical_sets.Ensembles_classical.not_SIncl_empty	600
Coq.Sets.Classical_sets.Ensembles_classical.Complement_Complement	600
Coq.Logic.ClassicalUniqueChoice.unique_choice	600	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply dependent_unique_choice).	0.902431	3
Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	600
Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	600	0	synth with cache (only 1: apply classic_set_in_prop_context).	0.909037	1
Coq.NArith.BinNat.N.eq_dec	600	0.0	synth with cache (only 1: decide equality; only 1: apply Pos.eq_dec).	0.950492	2
Coq.NArith.BinNat.N.discr	600	0.0.1.0.0	synth with cache (only 1: destruct n; only 1: auto; only 1: left; only 1: exists p; only 1: auto).	0.973310	6
Coq.NArith.BinNat.N.peano_rect_base	600	0	synth with cache (only 1: reflexivity).	1.037803	1
Coq.NArith.BinNat.N.peano_rect_succ	600	0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite Pos.peano_rect_succ; only 1: easy).	1.097884	6
Coq.NArith.BinNat.N.peano_rec_base	600	0	synth with cache (only 1: apply peano_rect_base).	1.036864	1
Coq.NArith.BinNat.N.peano_rec_succ	600	0	synth with cache (only 1: apply peano_rect_succ).	1.084339	1
Coq.NArith.BinNat.N.bi_induction	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply peano_rect; only 1: assumption; only 1: intros; only 1: apply -> H1; only 1: easy).	1.111134	17
Coq.NArith.BinNat.N.recursion_wd	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: subst y1; only 1: induction x1 using peano_ind; only 1: trivial; only 1: unfold recursion in *; only 1: rewrite peano_rect_succ; only 1: rewrite peano_rect_succ; only 1: apply H0; only 1: easy; only 1: easy).	1.488138	42
Coq.NArith.BinNat.N.recursion_0	600	0	synth with cache (only 1: reflexivity).	1.037034	1
Coq.NArith.BinNat.N.recursion_succ	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold recursion; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction n using peano_ind; only 1: rewrite peano_rect_succ; only 1: apply H0; only 1: easy; only 1: easy; only 1: rewrite peano_rect_succ in *; only 1: rewrite peano_rect_succ in *; only 1: apply H0; only 1: easy; only 1: easy).	1.165216	22
Coq.NArith.BinNat.N.one_succ	600	0	synth with cache (only 1: reflexivity).	1.056226	1
Coq.NArith.BinNat.N.two_succ	600	0	synth with cache (only 1: reflexivity).	1.043331	1
Coq.NArith.BinNat.N.pred_0	600	0	synth with cache (only 1: reflexivity).	1.024909	1
Coq.NArith.BinNat.N.pos_pred_spec	600	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	1.045687	4
Coq.NArith.BinNat.N.succ_pos_spec	600	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	1.058920	3
Coq.NArith.BinNat.N.pos_pred_succ	600	0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: apply Pos.pred_N_succ).	1.053945	3
Coq.NArith.BinNat.N.succ_pos_pred	600	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: easy; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: trivial).	1.190728	36
Coq.NArith.BinNat.N.pred_succ	600	1.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: apply Pos.pred_N_succ).	1.078234	7
Coq.NArith.BinNat.N.pred_sub	600	0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	1.092175	6
Coq.NArith.BinNat.N.succ_0_discr	600	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	1.111200	3
Coq.NArith.BinNat.N.add_0_l	600	0	synth with cache (only 1: reflexivity).	1.034316	1
Coq.NArith.BinNat.N.add_succ_l	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: unfold BinNatDef.N.succ; only 1: unfold BinNatDef.N.add; only 1: trivial; only 1: unfold BinNatDef.N.succ; only 1: unfold BinNatDef.N.add; only 1: rewrite Pos.add_1_l; only 1: easy; only 1: destruct m; only 1: unfold BinNatDef.N.succ; only 1: unfold BinNatDef.N.add; only 1: easy; only 1: unfold BinNatDef.N.succ; only 1: unfold BinNatDef.N.add; only 1: rewrite Pos.add_succ_l; only 1: easy).	1.339605	41
Coq.NArith.BinNat.N.sub_0_r	600	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	1.085600	3
Coq.NArith.BinNat.N.sub_succ_r	600	0.0.0.0.0.0.0.0.0.1.0.0.0.1.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: destruct m; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: rewrite Pos.sub_mask_succ_r; only 1: rewrite Pos.sub_mask_carry_spec; only 1: destruct BinPosDef.Pos.sub_mask; only 1: easy; only 1: destruct p1; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	1.400006	54
Coq.NArith.BinNat.N.mul_0_l	600	0	synth with cache (only 1: reflexivity).	1.058404	1
Coq.NArith.BinNat.N.mul_succ_l	600	1.0.1.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: rewrite Pos.add_comm; only 1: apply Pos.mul_succ_l).	1.286777	42
Coq.NArith.BinNat.N.eqb_eq	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: easy'; only 1: simpl; only 1: easy'; only 1: destruct m; only 1: simpl; only 1: easy'; only 1: simpl; only 1: rewrite Pos.eqb_eq; only 1: split; only 1: intros ?; only 1: subst; only 1: auto; only 1: intros ?; only 1: destr_eq H; only 1: easy).	1.323527	44
Coq.NArith.BinNat.N.ltb_lt	600
Coq.NArith.BinNat.N.leb_le	600
Coq.NArith.BinNat.N.compare_eq_iff	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: destruct m; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: simpl; only 1: rewrite Pos.compare_eq_iff; only 1: split; only 1: intros ?; only 1: subst; only 1: auto; only 1: intros ?; only 1: destr_eq H; only 1: easy).	1.290136	48
Coq.NArith.BinNat.N.compare_lt_iff	600	0	synth with cache (only 1: reflexivity).	1.066882	1
Coq.NArith.BinNat.N.compare_le_iff	600	0	synth with cache (only 1: reflexivity).	1.017693	1
Coq.NArith.BinNat.N.compare_antisym	600	0.0.0.0.2.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: unfold BinPosDef.Pos.compare; only 1: rewrite Pos.compare_cont_antisym; only 1: easy).	1.168024	35
Coq.NArith.BinNat.N.min_l	600	0.1.0.0.0.0.0	synth with cache (only 1: unfold BinNatDef.N.min; only 1: unfold le; only 1: case BinNatDef.N.compare; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy).	1.172091	15
Coq.NArith.BinNat.N.min_r	600	0.0.1.0.0.0.0.0	synth with cache (only 1: unfold BinNatDef.N.min; only 1: unfold le; only 1: rewrite compare_antisym; only 1: case compare_spec; only 1: trivial; only 1: destruct 2; only 1: easy; only 1: trivial).	1.189135	16
Coq.NArith.BinNat.N.max_l	600	0.0.1.0.0.0.0.0	synth with cache (only 1: unfold BinNatDef.N.max; only 1: unfold le; only 1: rewrite compare_antisym; only 1: case compare_spec; only 1: auto; only 1: destruct 2; only 1: easy; only 1: auto).	1.100310	16
Coq.NArith.BinNat.N.max_r	600	0.1.0.0.0.0.0	synth with cache (only 1: unfold BinNatDef.N.max; only 1: unfold le; only 1: case BinNatDef.N.compare; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy).	1.139681	15
Coq.NArith.BinNat.N.lt_succ_r	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: easy'; only 1: simpl; only 1: easy'; only 1: destruct m; only 1: simpl; only 1: split; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: destruct 1; only 1: easy; only 1: simpl; only 1: apply Pos.lt_succ_r).	1.367784	41
Coq.NArith.BinNat.N.double_spec	600	0	synth with cache (only 1: reflexivity).	1.229889	1
Coq.NArith.BinNat.N.succ_double_spec	600	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	1.235231	3
Coq.NArith.BinNat.N.double_add	600	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy).	1.286738	7
Coq.NArith.BinNat.N.succ_double_add	600	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy).	1.240265	7
Coq.NArith.BinNat.N.double_mul	600	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy).	1.267404	7
Coq.NArith.BinNat.N.succ_double_mul	600	0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: destruct m; only 1: trivial; only 1: auto; only 1: simpl; only 1: destruct m; only 1: trivial; only 1: rewrite Pos.add_comm; only 1: easy).	1.360347	19
Coq.NArith.BinNat.N.div2_double	600	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	1.242670	3
Coq.NArith.BinNat.N.div2_succ_double	600	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	1.257889	3
Coq.NArith.BinNat.N.double_inj	600
Coq.NArith.BinNat.N.succ_double_inj	600
Coq.NArith.BinNat.N.succ_double_lt	600	0.0.2.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: intros ?; only 1: easy; only 1: intros ?; only 1: easy; only 1: destruct m; only 1: intros ?; only 1: easy; only 1: intros ?; only 1: unfold lt in *; only 1: simpl in *; only 1: Pos.simpl_compare; only 1: rewrite H; only 1: easy).	1.614888	40
Coq.NArith.BinNat.N.double_lt_mono	600	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: intros ?; only 1: easy; only 1: intros ?; only 1: easy; only 1: destruct m; only 1: intros ?; only 1: easy; only 1: intros ?; only 1: easy).	1.399372	19
Coq.NArith.BinNat.N.double_le_mono	600	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: intros ?; only 1: easy; only 1: intros ?; only 1: easy; only 1: destruct m; only 1: intros ?; only 1: easy; only 1: intros ?; only 1: easy).	1.339127	19
Coq.NArith.BinNat.N.succ_double_lt_mono	600	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: intros ?; only 1: easy; only 1: intros ?; only 1: easy; only 1: destruct m; only 1: intros ?; only 1: easy; only 1: intros ?; only 1: easy).	1.336086	19
Coq.NArith.BinNat.N.succ_double_le_mono	600	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: intros ?; only 1: easy; only 1: intros ?; only 1: easy; only 1: destruct m; only 1: intros ?; only 1: easy; only 1: intros ?; only 1: easy).	1.382748	19
Coq.NArith.BinNat.N.compare_0_r	600	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	1.280676	3
Coq.NArith.BinNat.N.pow_0_r	600	0	synth with cache (only 1: reflexivity).	1.278212	1
Coq.NArith.BinNat.N.pow_succ_r	600	0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: clear H; only 1: destruct n; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: unfold BinPosDef.Pos.pow; only 1: rewrite Pos.iter_succ; only 1: easy).	1.560923	40
Coq.NArith.BinNat.N.pow_neg_r	600	0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy).	1.316721	3
Coq.NArith.BinNat.N.square_spec	600	1.0.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec).	1.374108	17
Coq.NArith.BinNat.N.size_log2	600	0.0.0.0.0.1.0	synth with cache (only 1: destruct n; only 1: destruct 1; only 1: trivial; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial).	1.380841	13
Coq.NArith.BinNat.N.size_gt	600	0.0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: apply Pos.size_gt).	1.309151	4
Coq.NArith.BinNat.N.size_le	600
Coq.NArith.BinNat.N.log2_spec	600
Coq.NArith.BinNat.N.log2_nonpos	600	0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: destruct H; only 1: easy).	1.290941	6
Coq.NArith.BinNat.N.even_spec	600
Coq.NArith.BinNat.N.odd_spec	600
Coq.NArith.BinNat.N.pos_div_eucl_spec	600
Coq.NArith.BinNat.N.div_eucl_spec	600
Coq.NArith.BinNat.N.div_mod'	600
Coq.NArith.BinNat.N.div_mod	600	1.0.0	synth with cache (only 1: intros ?; only 1: clear H; only 1: apply div_mod').	1.169320	4
Coq.NArith.BinNat.N.pos_div_eucl_remainder	600
Coq.NArith.BinNat.N.mod_lt	600	0.0.0.0.0.0.0.0	synth with cache (only 1: destruct b; only 1: destruct 1; only 1: easy; only 1: destruct a; only 1: reflexivity; only 1: unfold BinNatDef.N.modulo; only 1: simpl; only 1: apply pos_div_eucl_remainder).	1.184750	8
Coq.NArith.BinNat.N.mod_bound_pos	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: split; only 1: apply le_0_l; only 1: apply mod_lt; only 1: destruct b; only 1: easy; only 1: easy).	1.274607	17
Coq.NArith.BinNat.N.sqrtrem_sqrt	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: unfold BinNatDef.N.sqrtrem; only 1: unfold BinNatDef.N.sqrt; only 1: unfold BinPosDef.Pos.sqrt; only 1: destruct BinPosDef.Pos.sqrtrem; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy).	1.490301	18
Coq.NArith.BinNat.N.sqrtrem_spec	600
Coq.NArith.BinNat.N.sqrt_spec	600	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: clear H; only 1: destruct n; only 1: split; only 1: easy; only 1: easy; only 1: apply Pos.sqrt_spec).	1.310463	7
Coq.NArith.BinNat.N.sqrt_neg	600	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	1.312783	3
Coq.NArith.BinNat.N.ggcd_gcd	600
Coq.NArith.BinNat.N.ggcd_correct_divisors	600
Coq.NArith.BinNat.N.gcd_divide_l	600
Coq.NArith.BinNat.N.gcd_divide_r	600
Coq.NArith.BinNat.N.gcd_greatest	600
Coq.NArith.BinNat.N.gcd_nonneg	600	0	synth with cache (only 1: apply le_0_l).	1.320167	1
Coq.NArith.BinNat.N.testbit_even_0	600	0.0.0	synth with cache (only 1: destruct a; only 1: easy; only 1: easy).	1.296231	3
Coq.NArith.BinNat.N.testbit_odd_0	600	0.0.0	synth with cache (only 1: destruct a; only 1: easy; only 1: easy).	1.336990	3
Coq.NArith.BinNat.N.testbit_succ_r_div2	600	0.0.0.0.0.0.2.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: clear H; only 1: destruct a; only 1: destruct n; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: apply Pos.pred_N_succ; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: apply Pos.pred_N_succ; only 1: destruct n; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial).	1.864468	124
Coq.NArith.BinNat.N.testbit_odd_succ	600	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite testbit_succ_r_div2; only 1: f_equal; only 1: destruct a; only 1: easy; only 1: easy; only 1: trivial).	1.276197	7
Coq.NArith.BinNat.N.testbit_even_succ	600	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite testbit_succ_r_div2; only 1: f_equal; only 1: destruct a; only 1: easy; only 1: easy; only 1: trivial).	1.363422	7
Coq.NArith.BinNat.N.testbit_neg_r	600	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	1.301854	3
Coq.NArith.BinNat.N.shiftr_succ_r	600	1.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos.iter_succ).	1.333910	6
Coq.NArith.BinNat.N.shiftl_succ_r	600	0.1.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct a; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct a; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: apply Pos.iter_succ).	1.387768	21
Coq.NArith.BinNat.N.shiftr_spec	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: clear H; only 1: revert a m; only 1: induction n using peano_ind; only 1: intros ?; only 1: intros ?; only 1: rewrite add_0_r; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm; only 1: rewrite add_succ_l; only 1: rewrite add_comm; only 1: rewrite <- add_succ_l; only 1: rewrite <- IHn; only 1: rewrite testbit_succ_r_div2; only 1: rewrite shiftr_succ_r; only 1: easy; only 1: apply le_0_l).	1.542550	43
Coq.NArith.BinNat.N.shiftl_spec_high	600
Coq.NArith.BinNat.N.shiftl_spec_low	600
Coq.NArith.BinNat.N.div2_spec	600	0	synth with cache (only 1: reflexivity).	1.295851	1
Coq.NArith.BinNat.N.pos_lxor_spec	600
Coq.NArith.BinNat.N.lxor_spec	600	2.0.0.0.1.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: destruct a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct BinPosDef.Pos.testbit; only 1: easy; only 1: easy; only 1: destruct a'; only 1: simpl; only 1: destruct BinPosDef.Pos.testbit; only 1: easy; only 1: easy; only 1: simpl; only 1: apply pos_lxor_spec).	1.639548	60
Coq.NArith.BinNat.N.pos_lor_spec	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1.0.0.0.0.1.0.0.0.0.0.0.0.1.0.0.0.0.1.0.0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: revert p' n; only 1: induction p; only 1: intros ?; only 1: destruct p'; only 1: intros ?; only 1: destruct n; only 1: trivial; only 1: simpl; only 1: apply IHp; only 1: intros ?; only 1: destruct n; only 1: trivial; only 1: simpl; only 1: apply IHp; only 1: intros ?; only 1: destruct n; only 1: trivial; only 1: simpl; only 1: rewrite orb_false_r; only 1: easy; only 1: intros ?; only 1: destruct p'; only 1: intros ?; only 1: destruct n; only 1: trivial; only 1: simpl; only 1: apply IHp; only 1: intros ?; only 1: destruct n; only 1: trivial; only 1: simpl; only 1: apply IHp; only 1: intros ?; only 1: destruct n; only 1: trivial; only 1: simpl; only 1: rewrite orb_false_r; only 1: easy; only 1: intros ?; only 1: destruct p'; only 1: intros ?; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: intros ?; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: intros ?; only 1: destruct n; only 1: trivial; only 1: trivial).	2.689404	287
Coq.NArith.BinNat.N.lor_spec	600	2.0.0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: destruct a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct a'; only 1: simpl; only 1: rewrite orb_false_r; only 1: trivial; only 1: simpl; only 1: apply pos_lor_spec).	1.494027	44
Coq.NArith.BinNat.N.pos_land_spec	600
Coq.NArith.BinNat.N.land_spec	600	2.0.0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: destruct a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: easy; only 1: destruct a'; only 1: simpl; only 1: rewrite andb_false_r; only 1: easy; only 1: simpl; only 1: apply pos_land_spec).	1.470526	43
Coq.NArith.BinNat.N.pos_ldiff_spec	600
Coq.NArith.BinNat.N.ldiff_spec	600	2.0.0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: destruct a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: easy; only 1: destruct a'; only 1: simpl; only 1: rewrite andb_true_r; only 1: trivial; only 1: simpl; only 1: apply pos_ldiff_spec).	1.480355	43
Coq.NArith.BinNat.N.gt_lt_iff	600	0.0.0.0.0	synth with cache (only 1: unfold lt; only 1: unfold gt; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy).	1.804009	5
Coq.NArith.BinNat.N.gt_lt	600	0	synth with cache (only 1: apply gt_lt_iff).	1.695840	1
Coq.NArith.BinNat.N.lt_gt	600	0	synth with cache (only 1: apply gt_lt_iff).	1.753908	1
Coq.NArith.BinNat.N.ge_le_iff	600	0.0.0.0.0	synth with cache (only 1: unfold le; only 1: unfold ge; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy).	1.729738	5
Coq.NArith.BinNat.N.ge_le	600	0	synth with cache (only 1: apply ge_le_iff).	1.731184	1
Coq.NArith.BinNat.N.le_ge	600	0	synth with cache (only 1: apply ge_le_iff).	1.763606	1
Coq.NArith.BinNat.N.pos_pred_shiftl_low	600
Coq.NArith.BinNat.N.pos_pred_shiftl_high	600
Coq.NArith.BinNat.N.pred_div2_up	600	0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: easy; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).	2.256597	84
Coq.Vectors.VectorSpec.eta	600	0.0.1	synth with cache (only 1: apply @caseS with (v := v); only 1: intros; only 1: reflexivity).	0.912592	4
Coq.Vectors.VectorSpec.eq_nth_iff	600
Coq.Vectors.VectorSpec.nth_order_last	600
Coq.Vectors.VectorSpec.shiftin_nth	600
Coq.Vectors.VectorSpec.shiftin_last	600	0.0.0.0.0	synth with cache (only 1: induction v; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: easy).	0.954574	5
Coq.Vectors.VectorSpec.shiftrepeat_nth	600
Coq.Vectors.VectorSpec.shiftrepeat_last	600
Coq.Vectors.VectorSpec.const_nth	600	0.0.0	synth with cache (only 1: induction p; only 1: easy; only 1: easy).	0.863940	3
Coq.Vectors.VectorSpec.nth_map	600
Coq.Vectors.VectorSpec.nth_map2	600
Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	600
Coq.Vectors.VectorSpec.to_list_of_list_opp	600	0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: reflexivity; only 1: unfold to_list; only 1: simpl; only 1: f_equal; only 1: easy).	0.891856	6
Coq.Vectors.VectorSpec.take_O	600	0	synth with cache (only 1: reflexivity).	0.924462	1
Coq.Vectors.VectorSpec.take_idem	600
Coq.Vectors.VectorSpec.take_app	600
Coq.Vectors.VectorSpec.take_prf_irr	600
Coq.Vectors.VectorSpec.uncons_cons	600	0	synth with cache (only 1: reflexivity).	1.010810	1
Coq.Vectors.VectorSpec.append_comm_cons	600	0	synth with cache (only 1: reflexivity).	0.964120	1
Coq.Vectors.VectorSpec.splitat_append	600
Coq.Vectors.VectorSpec.append_splitat	600
Coq.Logic.FinFun.Finite_alt	600
Coq.Logic.FinFun.Injective_map_NoDup	600	0.0.0.0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: induction 1; only 1: simpl; only 1: constructor; only 1: simpl; only 1: constructor; only 1: rewrite in_map_iff; only 1: intros ?; only 1: destruct H2; only 1: destruct H2; only 1: apply H in H2; only 1: subst; only 1: easy; only 1: trivial).	1.267984	35
Coq.Logic.FinFun.Injective_list_carac	600
Coq.Logic.FinFun.Injective_carac	600
Coq.Logic.FinFun.Surjective_list_carac	600
Coq.Logic.FinFun.Surjective_carac	600
Coq.Logic.FinFun.Endo_Injective_Surjective	600
Coq.Logic.FinFun.Finite_Empty_or_not	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: destruct x; only 1: left; only 1: exact H; only 1: right; only 1: exists a; only 1: easy).	1.084009	8
Coq.Logic.FinFun.Surjective_inverse	600
Coq.Logic.FinFun.Injective_Surjective_Bijective	600
Coq.Logic.FinFun.Fin_Finite	600
Coq.Logic.FinFun.Fin2Restrict.extend_ok	600
Coq.Logic.FinFun.Fin2Restrict.extend_f2n	600
Coq.Logic.FinFun.Fin2Restrict.extend_n2f	600
Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	600
Coq.Logic.FinFun.Fin2Restrict.restrict_n2f	600
Coq.Logic.FinFun.Fin2Restrict.extend_surjective	600
Coq.Logic.FinFun.Fin2Restrict.extend_injective	600
Coq.Logic.FinFun.Fin2Restrict.restrict_surjective	600
Coq.Logic.FinFun.Fin2Restrict.restrict_injective	600
Coq.Logic.FinFun.bInjective_bSurjective	600
Coq.Logic.FinFun.bSurjective_bBijective	600
Coq.rtauto.Rtauto.pos_eq_refl	600
Coq.rtauto.Rtauto.form_eq_refl	600
Coq.rtauto.Rtauto.with_env.compose0	600
Coq.rtauto.Rtauto.with_env.compose1	600
Coq.rtauto.Rtauto.with_env.compose2	600
Coq.rtauto.Rtauto.with_env.compose3	600
Coq.rtauto.Rtauto.with_env.weaken	600
Coq.rtauto.Rtauto.with_env.project_In	600
Coq.rtauto.Rtauto.with_env.project	600
Coq.rtauto.Rtauto.with_env.interp_proof	600
Coq.rtauto.Rtauto.with_env.Reflect	600
Coq.Vectors.VectorDef.BASES.trunc	600
Coq.Logic.Classical_Pred_Type.Generic.not_all_not_ex	600
Coq.Logic.Classical_Pred_Type.Generic.not_all_ex_not	600
Coq.Logic.Classical_Pred_Type.Generic.not_ex_all_not	600
Coq.Logic.Classical_Pred_Type.Generic.not_ex_not_all	600
Coq.Logic.Classical_Pred_Type.Generic.ex_not_not_all	600
Coq.Logic.Classical_Pred_Type.Generic.all_not_not_ex	600
Coq.rtauto.Bintree.Gt_Psucc	600	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Pos.compare_succ_succ; only 1: apply Pos.lt_gt; only 1: apply Pos.lt_lt_succ; only 1: apply Pos.gt_lt; only 1: easy).	1.122156	6
Coq.rtauto.Bintree.Psucc_Gt	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Pos.lt_gt; only 1: rewrite Pos.lt_iff_add; only 1: exists 1; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	1.108911	8
Coq.rtauto.Bintree.map_app	600
Coq.rtauto.Bintree.length_map	600
Coq.rtauto.Bintree.Lget_map	600
Coq.rtauto.Bintree.Lget_app	600
Coq.rtauto.Bintree.Lget_app_Some	600
Coq.rtauto.Bintree.Store.Tget_Tempty	600
Coq.rtauto.Bintree.Store.Tget_Tadd	600
Coq.rtauto.Bintree.Store.get_empty	600
Coq.rtauto.Bintree.Store.get_Full_Gt	600
Coq.rtauto.Bintree.Store.get_Full_Eq	600
Coq.rtauto.Bintree.Store.get_push_Full	600
Coq.rtauto.Bintree.Store.Full_push_compat	600
Coq.rtauto.Bintree.Store.Full_index_one_empty	600
Coq.rtauto.Bintree.Store.push_not_empty	600
Coq.rtauto.Bintree.Store.get_In	600
Coq.rtauto.Bintree.Map.Tget_Tmap	600
Coq.rtauto.Bintree.Map.Tmap_Tadd	600
Coq.rtauto.Bintree.Map.get_map	600
Coq.rtauto.Bintree.Map.map_push	600
Coq.rtauto.Bintree.Map.Full_map	600
Coq.Lists.ListSet.first_definitions.set_In_dec	600
Coq.Lists.ListSet.first_definitions.set_mem_ind	600
Coq.Lists.ListSet.first_definitions.set_mem_ind2	600
Coq.Lists.ListSet.first_definitions.set_mem_correct1	600
Coq.Lists.ListSet.first_definitions.set_mem_correct2	600
Coq.Lists.ListSet.first_definitions.set_mem_complete1	600
Coq.Lists.ListSet.first_definitions.set_mem_complete2	600
Coq.Lists.ListSet.first_definitions.set_add_intro1	600
Coq.Lists.ListSet.first_definitions.set_add_intro2	600
Coq.Lists.ListSet.first_definitions.set_add_intro	600
Coq.Lists.ListSet.first_definitions.set_add_elim	600
Coq.Lists.ListSet.first_definitions.set_add_elim2	600
Coq.Lists.ListSet.first_definitions.set_add_not_empty	600
Coq.Lists.ListSet.first_definitions.set_add_iff	600
Coq.Lists.ListSet.first_definitions.set_add_nodup	600
Coq.Lists.ListSet.first_definitions.set_remove_1	600
Coq.Lists.ListSet.first_definitions.set_remove_2	600
Coq.Lists.ListSet.first_definitions.set_remove_3	600
Coq.Lists.ListSet.first_definitions.set_remove_iff	600
Coq.Lists.ListSet.first_definitions.set_remove_nodup	600
Coq.Lists.ListSet.first_definitions.set_union_intro1	600
Coq.Lists.ListSet.first_definitions.set_union_intro2	600
Coq.Lists.ListSet.first_definitions.set_union_intro	600
Coq.Lists.ListSet.first_definitions.set_union_elim	600
Coq.Lists.ListSet.first_definitions.set_union_iff	600
Coq.Lists.ListSet.first_definitions.set_union_nodup	600
Coq.Lists.ListSet.first_definitions.set_union_emptyL	600
Coq.Lists.ListSet.first_definitions.set_union_emptyR	600
Coq.Lists.ListSet.first_definitions.set_inter_intro	600
Coq.Lists.ListSet.first_definitions.set_inter_elim1	600
Coq.Lists.ListSet.first_definitions.set_inter_elim2	600
Coq.Lists.ListSet.first_definitions.set_inter_elim	600
Coq.Lists.ListSet.first_definitions.set_inter_iff	600
Coq.Lists.ListSet.first_definitions.set_inter_nodup	600
Coq.Lists.ListSet.first_definitions.set_diff_intro	600
Coq.Lists.ListSet.first_definitions.set_diff_elim1	600
Coq.Lists.ListSet.first_definitions.set_diff_elim2	600
Coq.Lists.ListSet.first_definitions.set_diff_iff	600
Coq.Lists.ListSet.first_definitions.set_diff_nodup	600
Coq.Lists.ListSet.first_definitions.set_diff_trivial	600
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.left_prefix	600
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.right_prefix	600
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_prefix	600
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_tail	600
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_aux	600
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_Desc_concat	600
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_end	600
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.ltl_unit	600
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.acc_app	600
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.wf_lex_exp	600
Coq.micromega.Refl.make_impl_true	600
Coq.micromega.Refl.make_impl_map	600
Coq.micromega.Refl.make_conj_cons	600	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct l; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto).	0.908161	6
Coq.micromega.Refl.make_conj_impl	600
Coq.micromega.Refl.make_conj_in	600
Coq.micromega.Refl.make_conj_app	600
Coq.micromega.Refl.make_conj_rapp	600
Coq.micromega.Refl.not_make_conj_cons	600	0.0.0	synth with cache (only 1: intros; only 1: rewrite make_conj_cons; only 1: tauto).	1.072352	3
Coq.micromega.Refl.not_make_conj_app	600
Coq.Lists.ListDec.Dec_in_Prop.In_decidable	600
Coq.Lists.ListDec.Dec_in_Prop.incl_decidable	600
Coq.Lists.ListDec.Dec_in_Prop.NoDup_decidable	600
Coq.Lists.ListDec.Dec_in_Type.incl_dec	600
Coq.Lists.ListDec.Dec_in_Type.NoDup_dec	600
Coq.Lists.ListDec.uniquify_map	600
Coq.Lists.ListDec.uniquify	600
Coq.Sorting.Sorted.defs.HdRel_inv	600
Coq.Sorting.Sorted.defs.Sorted_inv	600
Coq.Sorting.Sorted.defs.Sorted_rect	600
Coq.Sorting.Sorted.defs.Sorted_LocallySorted_iff	600
Coq.Sorting.Sorted.defs.StronglySorted_inv	600
Coq.Sorting.Sorted.defs.StronglySorted_rect	600
Coq.Sorting.Sorted.defs.StronglySorted_rec	600
Coq.Sorting.Sorted.defs.StronglySorted_Sorted	600
Coq.Sorting.Sorted.defs.Sorted_extends	600
Coq.Sorting.Sorted.defs.Sorted_StronglySorted	600
Coq.Logic.WeakFan.Y_unique	600
Coq.Logic.WeakFan.Y_approx	600
Coq.Logic.WeakFan.WeakFanTheorem	600
Coq.setoid_ring.BinList.MakeBinList.jump_tl	600
Coq.setoid_ring.BinList.MakeBinList.jump_succ	600
Coq.setoid_ring.BinList.MakeBinList.jump_add	600
Coq.setoid_ring.BinList.MakeBinList.jump_pred_double	600
Coq.setoid_ring.BinList.MakeBinList.nth_jump	600
Coq.setoid_ring.BinList.MakeBinList.nth_pred_double	600
Coq.Logic.Classical_Prop.NNPP	600
Coq.Logic.Classical_Prop.Peirce	600
Coq.Logic.Classical_Prop.not_imply_elim	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply NNPP; only 1: red; only 1: intros ?; only 1: apply H; only 1: intros ?; only 1: absurd P; only 1: trivial; only 1: trivial).	1.004077	17
Coq.Logic.Classical_Prop.not_imply_elim2	600	0	synth with cache (only 1: tauto).	0.917238	1
Coq.Logic.Classical_Prop.imply_to_or	600
Coq.Logic.Classical_Prop.imply_to_and	600	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: apply NNPP; only 1: red; only 1: intros ?; only 1: apply H; only 1: intros ?; only 1: absurd P; only 1: trivial; only 1: trivial; only 1: apply not_imply_elim2 with P; only 1: trivial).	0.964841	23
Coq.Logic.Classical_Prop.or_to_imply	600	0	synth with cache (only 1: tauto).	0.919020	1
Coq.Logic.Classical_Prop.not_and_or	600
Coq.Logic.Classical_Prop.or_not_and	600
Coq.Logic.Classical_Prop.not_or_and	600	0	synth with cache (only 1: tauto).	0.921375	1
Coq.Logic.Classical_Prop.and_not_or	600	0	synth with cache (only 1: tauto).	0.966128	1
Coq.Logic.Classical_Prop.imply_and_or	600	0	synth with cache (only 1: tauto).	0.920202	1
Coq.Logic.Classical_Prop.imply_and_or2	600	0	synth with cache (only 1: tauto).	0.914330	1
Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	600
Coq.Logic.PropExtensionality.proof_irrelevance	600	0.1	synth with cache (only 1: apply ext_prop_dep_proof_irrel_cic; only 1: exact propositional_extensionality).	0.900572	3
Coq.Vectors.Fin.of_nat_ext	600
Coq.Vectors.Fin.of_nat_to_nat_inv	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: destruct @to_nat; only 1: simpl in *; only 1: f_equal; only 1: subst p; only 1: apply @of_nat_ext).	1.089867	17
Coq.Vectors.Fin.to_nat_of_nat	600
Coq.Vectors.Fin.to_nat_inj	600
Coq.Vectors.Fin.L_sanity	600	0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: reflexivity; only 1: simpl; only 1: destruct @to_nat; only 1: simpl in *; only 1: rewrite IHp; only 1: destruct @to_nat; only 1: easy).	0.927286	8
Coq.Vectors.Fin.L_R	600
Coq.Vectors.Fin.R_sanity	600	0.0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: destruct @to_nat; only 1: simpl in *; only 1: rewrite IHn; only 1: destruct @to_nat; only 1: easy).	0.927618	8
Coq.Vectors.Fin.depair_sanity	600
Coq.Vectors.Fin.eqb_nat_eq	600
Coq.Vectors.Fin.eqb_eq	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply rect2; only 1: simpl; only 1: intros; only 1: split; only 1: intros; only 1: reflexivity; only 1: intros; only 1: apply PeanoNat.Nat.eqb_eq; only 1: easy; only 1: simpl; only 1: intros; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: intros; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: intros; only 1: eapply iff_trans; only 1: eassumption; only 1: split; only 1: intros; only 1: f_equal; only 1: easy; only 1: apply @FS_inj).	1.149815	52
Coq.Vectors.Fin.eq_dec	600
Coq.Vectors.Fin.cast	600
Coq.Arith.Compare.discrete_nat	600
Coq.Lists.List.Facts.nil_cons	600
Coq.Lists.List.Facts.destruct_list	600
Coq.Lists.List.Facts.hd_error_tl_repr	600
Coq.Lists.List.Facts.hd_error_some_nil	600
Coq.Lists.List.Facts.length_zero_iff_nil	600
Coq.Lists.List.Facts.hd_error_nil	600
Coq.Lists.List.Facts.hd_error_cons	600
Coq.Lists.List.Facts.in_eq	600
Coq.Lists.List.Facts.in_cons	600
Coq.Lists.List.Facts.not_in_cons	600
Coq.Lists.List.Facts.in_nil	600
Coq.Lists.List.Facts.in_split	600
Coq.Lists.List.Facts.in_inv	600
Coq.Lists.List.Facts.in_dec	600
Coq.Lists.List.Facts.app_cons_not_nil	600
Coq.Lists.List.Facts.app_nil_l	600
Coq.Lists.List.Facts.app_nil_r	600
Coq.Lists.List.Facts.app_nil_end	600
Coq.Lists.List.Facts.app_assoc	600
Coq.Lists.List.Facts.app_assoc_reverse	600
Coq.Lists.List.Facts.app_comm_cons	600
Coq.Lists.List.Facts.app_eq_nil	600
Coq.Lists.List.Facts.app_eq_unit	600
Coq.Lists.List.Facts.app_inj_tail	600
Coq.Lists.List.Facts.app_length	600
Coq.Lists.List.Facts.in_app_or	600
Coq.Lists.List.Facts.in_or_app	600
Coq.Lists.List.Facts.in_app_iff	600
Coq.Lists.List.Facts.app_inv_head	600
Coq.Lists.List.Facts.app_inv_tail	600
Coq.Lists.List.Elts.nth_in_or_default	600
Coq.Lists.List.Elts.nth_S_cons	600
Coq.Lists.List.Elts.nth_default_eq	600
Coq.Lists.List.Elts.nth_In	600
Coq.Lists.List.Elts.In_nth	600
Coq.Lists.List.Elts.nth_overflow	600
Coq.Lists.List.Elts.nth_indep	600
Coq.Lists.List.Elts.app_nth1	600
Coq.Lists.List.Elts.app_nth2	600
Coq.Lists.List.Elts.nth_split	600
Coq.Lists.List.Elts.nth_error_In	600
Coq.Lists.List.Elts.In_nth_error	600
Coq.Lists.List.Elts.nth_error_None	600
Coq.Lists.List.Elts.nth_error_Some	600
Coq.Lists.List.Elts.nth_error_split	600
Coq.Lists.List.Elts.nth_error_app1	600
Coq.Lists.List.Elts.nth_error_app2	600
Coq.Lists.List.Elts.nth_error_nth	600
Coq.Lists.List.Elts.nth_error_nth'	600
Coq.Lists.List.Elts.remove_In	600
Coq.Lists.List.Elts.app_removelast_last	600
Coq.Lists.List.Elts.exists_last	600
Coq.Lists.List.Elts.removelast_app	600
Coq.Lists.List.Elts.count_occ_In	600
Coq.Lists.List.Elts.count_occ_not_In	600
Coq.Lists.List.Elts.count_occ_nil	600
Coq.Lists.List.Elts.count_occ_inv_nil	600
Coq.Lists.List.Elts.count_occ_cons_eq	600
Coq.Lists.List.Elts.count_occ_cons_neq	600
Coq.Lists.List.ListOps.rev_app_distr	600
Coq.Lists.List.ListOps.rev_unit	600
Coq.Lists.List.ListOps.rev_involutive	600
Coq.Lists.List.ListOps.in_rev	600
Coq.Lists.List.ListOps.rev_length	600
Coq.Lists.List.ListOps.rev_nth	600
Coq.Lists.List.ListOps.rev_append_rev	600
Coq.Lists.List.ListOps.rev_alt	600
Coq.Lists.List.ListOps.Reverse_Induction.rev_list_ind	600
Coq.Lists.List.ListOps.Reverse_Induction.rev_ind	600
Coq.Lists.List.ListOps.concat_nil	600
Coq.Lists.List.ListOps.concat_cons	600
Coq.Lists.List.ListOps.concat_app	600
Coq.Lists.List.ListOps.list_eq_dec	600
Coq.Lists.List.Map.map_cons	600
Coq.Lists.List.Map.in_map	600
Coq.Lists.List.Map.in_map_iff	600
Coq.Lists.List.Map.map_length	600
Coq.Lists.List.Map.map_nth	600
Coq.Lists.List.Map.map_nth_error	600
Coq.Lists.List.Map.map_app	600
Coq.Lists.List.Map.map_rev	600
Coq.Lists.List.Map.map_eq_nil	600
Coq.Lists.List.Map.count_occ_map	600
Coq.Lists.List.Map.in_flat_map	600
Coq.Lists.List.flat_map_concat_map	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: reflexivity).	1.049864	18
Coq.Lists.List.concat_map	600	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite map_app; only 1: rewrite IHl; only 1: reflexivity).	1.149915	19
Coq.Lists.List.map_id	600
Coq.Lists.List.map_map	600
Coq.Lists.List.map_ext_in	600
Coq.Lists.List.ext_in_map	600
Coq.Lists.List.map_ext_in_iff	600	0.0.0	synth with cache (only 1: split; only 1: apply ext_in_map; only 1: apply map_ext_in).	1.018526	3
Coq.Lists.List.map_ext	600	0.0.0	synth with cache (only 1: intros; only 1: apply map_ext_in; only 1: auto).	1.053595	3
Coq.Lists.List.Fold_Left_Recursor.fold_left_app	600
Coq.Lists.List.fold_left_length	600
Coq.Lists.List.fold_right_app	600
Coq.Lists.List.fold_left_rev_right	600
Coq.Lists.List.fold_symmetric	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite <- IHl; only 1: clear IHl; only 1: revert a; only 1: induction l; only 1: auto; only 1: simpl; only 1: intros ?; only 1: rewrite <- H; only 1: rewrite IHl; only 1: rewrite IHl; only 1: auto).	1.232731	45
Coq.Lists.List.Bool.existsb_exists	600
Coq.Lists.List.Bool.existsb_nth	600
Coq.Lists.List.Bool.existsb_app	600
Coq.Lists.List.Bool.forallb_forall	600
Coq.Lists.List.Bool.forallb_app	600
Coq.Lists.List.Bool.filter_In	600
Coq.Lists.List.Bool.filter_app	600
Coq.Lists.List.Bool.concat_filter_map	600
Coq.Lists.List.Bool.find_some	600
Coq.Lists.List.Bool.find_none	600
Coq.Lists.List.Bool.partition_cons1	600
Coq.Lists.List.Bool.partition_cons2	600
Coq.Lists.List.Bool.partition_length	600
Coq.Lists.List.Bool.partition_inv_nil	600
Coq.Lists.List.Bool.elements_in_partition	600
Coq.Lists.List.Filtering.filter_map	600
Coq.Lists.List.Filtering.filter_ext_in	600
Coq.Lists.List.Filtering.ext_in_filter	600
Coq.Lists.List.Filtering.filter_ext_in_iff	600
Coq.Lists.List.Filtering.filter_ext	600
Coq.Lists.List.ListPairs.in_split_l	600
Coq.Lists.List.ListPairs.in_split_r	600
Coq.Lists.List.ListPairs.split_nth	600
Coq.Lists.List.ListPairs.split_length_l	600
Coq.Lists.List.ListPairs.split_length_r	600
Coq.Lists.List.ListPairs.split_combine	600
Coq.Lists.List.ListPairs.combine_split	600
Coq.Lists.List.ListPairs.in_combine_l	600
Coq.Lists.List.ListPairs.in_combine_r	600
Coq.Lists.List.ListPairs.combine_length	600
Coq.Lists.List.ListPairs.combine_nth	600
Coq.Lists.List.ListPairs.in_prod_aux	600
Coq.Lists.List.ListPairs.in_prod	600
Coq.Lists.List.ListPairs.in_prod_iff	600
Coq.Lists.List.ListPairs.prod_length	600
Coq.Lists.List.length_order.lel_refl	600
Coq.Lists.List.length_order.lel_trans	600
Coq.Lists.List.length_order.lel_cons_cons	600
Coq.Lists.List.length_order.lel_cons	600
Coq.Lists.List.length_order.lel_tail	600
Coq.Lists.List.length_order.lel_nil	600
Coq.Lists.List.SetIncl.incl_refl	600
Coq.Lists.List.SetIncl.incl_tl	600
Coq.Lists.List.SetIncl.incl_tran	600
Coq.Lists.List.SetIncl.incl_appl	600
Coq.Lists.List.SetIncl.incl_appr	600
Coq.Lists.List.SetIncl.incl_cons	600
Coq.Lists.List.SetIncl.incl_app	600
Coq.Lists.List.Cutting.firstn_nil	600
Coq.Lists.List.Cutting.firstn_cons	600
Coq.Lists.List.Cutting.firstn_all	600
Coq.Lists.List.Cutting.firstn_all2	600
Coq.Lists.List.Cutting.firstn_O	600
Coq.Lists.List.Cutting.firstn_le_length	600
Coq.Lists.List.Cutting.firstn_length_le	600
Coq.Lists.List.Cutting.firstn_app	600
Coq.Lists.List.Cutting.firstn_app_2	600
Coq.Lists.List.Cutting.firstn_firstn	600
Coq.Lists.List.Cutting.firstn_skipn_comm	600
Coq.Lists.List.Cutting.skipn_firstn_comm	600
Coq.Lists.List.Cutting.skipn_O	600
Coq.Lists.List.Cutting.skipn_nil	600
Coq.Lists.List.Cutting.skipn_cons	600
Coq.Lists.List.Cutting.skipn_none	600
Coq.Lists.List.Cutting.skipn_all2	600
Coq.Lists.List.Cutting.firstn_skipn	600
Coq.Lists.List.Cutting.firstn_length	600
Coq.Lists.List.Cutting.skipn_length	600
Coq.Lists.List.Cutting.skipn_all	600
Coq.Lists.List.Cutting.skipn_app	600
Coq.Lists.List.Cutting.firstn_skipn_rev	600
Coq.Lists.List.Cutting.firstn_rev	600
Coq.Lists.List.Cutting.skipn_rev	600
Coq.Lists.List.Cutting.removelast_firstn	600
Coq.Lists.List.Cutting.firstn_removelast	600
Coq.Lists.List.Combining.combine_nil	600
Coq.Lists.List.Combining.combine_firstn_l	600
Coq.Lists.List.Combining.combine_firstn_r	600
Coq.Lists.List.Combining.combine_firstn	600
Coq.Lists.List.Add.Add_app	600
Coq.Lists.List.Add.Add_split	600
Coq.Lists.List.Add.Add_in	600
Coq.Lists.List.Add.Add_length	600
Coq.Lists.List.Add.Add_inv	600
Coq.Lists.List.Add.incl_Add_inv	600
Coq.Lists.List.ReDun.NoDup_Add	600
Coq.Lists.List.ReDun.NoDup_remove	600
Coq.Lists.List.ReDun.NoDup_remove_1	600
Coq.Lists.List.ReDun.NoDup_remove_2	600
Coq.Lists.List.ReDun.NoDup_cons_iff	600
Coq.Lists.List.ReDun.nodup_fixed_point	600
Coq.Lists.List.ReDun.nodup_In	600
Coq.Lists.List.ReDun.NoDup_nodup	600
Coq.Lists.List.ReDun.nodup_inv	600
Coq.Lists.List.ReDun.NoDup_count_occ	600
Coq.Lists.List.ReDun.NoDup_count_occ'	600
Coq.Lists.List.ReDun.NoDup_nth_error	600
Coq.Lists.List.ReDun.NoDup_nth	600
Coq.Lists.List.ReDun.NoDup_incl_length	600
Coq.Lists.List.ReDun.NoDup_length_incl	600
Coq.Lists.List.NoDup_map_inv	600
Coq.Lists.List.NatSeq.seq_length	600
Coq.Lists.List.NatSeq.seq_nth	600
Coq.Lists.List.NatSeq.seq_shift	600
Coq.Lists.List.NatSeq.in_seq	600
Coq.Lists.List.NatSeq.seq_NoDup	600
Coq.Lists.List.NatSeq.seq_app	600
Coq.Lists.List.Exists_Forall.One_predicate.Exists_exists	600
Coq.Lists.List.Exists_Forall.One_predicate.Exists_nil	600
Coq.Lists.List.Exists_Forall.One_predicate.Exists_cons	600
Coq.Lists.List.Exists_Forall.One_predicate.Exists_dec	600
Coq.Lists.List.Exists_Forall.One_predicate.Forall_forall	600
Coq.Lists.List.Exists_Forall.One_predicate.Forall_inv	600
Coq.Lists.List.Exists_Forall.One_predicate.Forall_rect	600
Coq.Lists.List.Exists_Forall.One_predicate.Forall_dec	600
Coq.Lists.List.Exists_Forall.Forall_inv_tail	600
Coq.Lists.List.Exists_Forall.Exists_impl	600
Coq.Lists.List.Exists_Forall.Forall_Exists_neg	600
Coq.Lists.List.Exists_Forall.Exists_Forall_neg	600
Coq.Lists.List.Exists_Forall.neg_Forall_Exists_neg	600
Coq.Lists.List.Exists_Forall.Forall_Exists_dec	600
Coq.Lists.List.Exists_Forall.Forall_impl	600
Coq.Lists.List.Forall2.Forall2_refl	600
Coq.Lists.List.Forall2.Forall2_app_inv_l	600
Coq.Lists.List.Forall2.Forall2_app_inv_r	600
Coq.Lists.List.Forall2.Forall2_app	600
Coq.Lists.List.ForallPairs.ForallOrdPairs_In	600
Coq.Lists.List.ForallPairs.ForallPairs_ForallOrdPairs	600
Coq.Lists.List.ForallPairs.ForallOrdPairs_ForallPairs	600
Coq.Lists.List.Repeat.repeat_length	600
Coq.Lists.List.Repeat.repeat_spec	600
Coq.Logic.ClassicalFacts.prop_degen_ext	600
Coq.Logic.ClassicalFacts.prop_degen_em	600
Coq.Logic.ClassicalFacts.prop_ext_em_degen	600
Coq.Logic.ClassicalFacts.provable_prop_ext	600	0	synth with cache (only 1: exact PropExt_imp_ProvPropExt).	0.181783	1
Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	600
Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	600
Coq.Logic.ClassicalFacts.ext_prop_fixpoint	600
Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.aux	600
Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.ext_prop_dep_proof_irrel_gen	600
Coq.Logic.ClassicalFacts.Proof_irrelevance_Prop_Ext_CC.ext_prop_dep_proof_irrel_cc	600
Coq.Logic.ClassicalFacts.Proof_irrelevance_CIC.ext_prop_dep_proof_irrel_cic	600
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p1	600
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p2	600
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.proof_irrelevance_cc	600
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p1	600
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p2	600
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wproof_irrelevance_cc	600
Coq.Logic.ClassicalFacts.Proof_irrelevance_CCI.proof_irrelevance_cci	600
Coq.Logic.ClassicalFacts.Weak_proof_irrelevance_CCI.wem_proof_irrelevance_cci	600
Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	600
Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	600
Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	600
Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	600
Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	600
Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	600
Coq.Logic.ClassicalFacts.independence_general_premises_drinker	600
Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	600
Coq.Logic.ClassicalFacts.Unrestricted_minimization_entails_excluded_middle.unrestricted_minimization_entails_excluded_middle	600
Coq.Logic.ClassicalFacts.Excluded_middle_entails_unrestricted_minimization.excluded_middle_entails_unrestricted_minimization	600
Coq.Logic.ClassicalFacts.Example_of_undecidable_predicate_with_the_minimization_property.undecidable_predicate_with_the_minimization_property	600
Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	600
Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	600
Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	600	1.1.0	synth with cache (only 1: split; only 1: auto using excluded_middle_imp_representative_boolean_partition, representative_boolean_partition_imp_excluded_middle; only 1: auto using excluded_middle_imp_representative_boolean_partition, representative_boolean_partition_imp_excluded_middle).	1.075031	12
Coq.PArith.Pnat.Pos2Nat.inj_succ	600	0.0.0.0	synth with cache (only 1: unfold BinPosDef.Pos.to_nat; only 1: rewrite iter_op_succ; only 1: trivial; only 1: apply Nat.add_assoc).	1.065923	4
Coq.PArith.Pnat.Pos2Nat.inj_add	600	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert q; only 1: induction p using peano_ind; only 1: intros ?; only 1: rewrite add_1_l; only 1: rewrite inj_succ; only 1: easy; only 1: intros ?; only 1: rewrite add_succ_l; only 1: rewrite inj_succ; only 1: rewrite inj_succ; only 1: rewrite IHp; only 1: easy).	1.223900	21
Coq.PArith.Pnat.Pos2Nat.inj_mul	600	0.0.0.0.1.1.0.0.0.0.0	synth with cache (only 1: revert q; only 1: induction p using peano_ind; only 1: simpl; only 1: intros; only 1: trivial; only 1: intros; only 1: rewrite mul_succ_l; only 1: rewrite inj_add; only 1: rewrite IHp; only 1: rewrite inj_succ; only 1: easy).	1.186501	32
Coq.PArith.Pnat.Pos2Nat.inj_1	600	0	synth with cache (only 1: reflexivity).	1.056204	1
Coq.PArith.Pnat.Pos2Nat.inj_xO	600
Coq.PArith.Pnat.Pos2Nat.inj_xI	600	0.0.0.0	synth with cache (only 1: rewrite xI_succ_xO; only 1: rewrite inj_succ; only 1: rewrite inj_xO; only 1: easy).	1.118272	4
Coq.PArith.Pnat.Pos2Nat.is_succ	600
Coq.PArith.Pnat.Pos2Nat.is_pos	600
Coq.PArith.Pnat.Pos2Nat.id	600
Coq.PArith.Pnat.Pos2Nat.inj	600
Coq.PArith.Pnat.Pos2Nat.inj_iff	600	0.0.0.1.0	synth with cache (only 1: split; only 1: apply inj; only 1: intros; only 1: subst; only 1: easy).	1.110813	13
Coq.PArith.Pnat.Pos2Nat.inj_compare	600
Coq.PArith.Pnat.Pos2Nat.inj_lt	600	0.0.0.0	synth with cache (only 1: unfold lt; only 1: rewrite inj_compare; only 1: rewrite Nat.compare_lt_iff; only 1: easy).	1.111681	4
Coq.PArith.Pnat.Pos2Nat.inj_le	600	0.0.0.0	synth with cache (only 1: unfold le; only 1: rewrite inj_compare; only 1: rewrite Nat.compare_le_iff; only 1: easy).	1.065604	4
Coq.PArith.Pnat.Pos2Nat.inj_gt	600	0.0.0.0	synth with cache (only 1: unfold gt; only 1: rewrite inj_compare; only 1: rewrite Nat.compare_gt_iff; only 1: easy).	1.060771	4
Coq.PArith.Pnat.Pos2Nat.inj_ge	600	0.0.0.0	synth with cache (only 1: unfold ge; only 1: rewrite inj_compare; only 1: rewrite Nat.compare_ge_iff; only 1: easy).	1.035239	4
Coq.PArith.Pnat.Pos2Nat.inj_sub	600
Coq.PArith.Pnat.Pos2Nat.inj_sub_max	600
Coq.PArith.Pnat.Pos2Nat.inj_pred	600	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- sub_1_r; only 1: rewrite inj_sub; only 1: rewrite Nat.sub_1_r; only 1: easy; only 1: easy).	1.077938	6
Coq.PArith.Pnat.Pos2Nat.inj_pred_max	600	0.0.0	synth with cache (only 1: rewrite <- sub_1_r; only 1: rewrite <- Nat.sub_1_r; only 1: apply inj_sub_max).	1.101520	3
Coq.PArith.Pnat.Pos2Nat.inj_min	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold BinPosDef.Pos.min; only 1: rewrite inj_compare; only 1: case Nat.compare_spec; only 1: intros ?; only 1: symmetry; only 1: apply Nat.min_l; only 1: rewrite H; only 1: easy; only 1: intros ?; only 1: symmetry; only 1: apply Nat.min_l; only 1: apply Nat.lt_le_incl; only 1: easy; only 1: intros ?; only 1: symmetry; only 1: apply Nat.min_r; only 1: apply Nat.lt_le_incl; only 1: easy).	1.301365	42
Coq.PArith.Pnat.Pos2Nat.inj_max	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold BinPosDef.Pos.max; only 1: rewrite inj_compare; only 1: case Nat.compare_spec; only 1: intros ?; only 1: symmetry; only 1: apply Nat.max_r; only 1: rewrite H; only 1: easy; only 1: intros ?; only 1: symmetry; only 1: apply Nat.max_r; only 1: apply Nat.lt_le_incl; only 1: easy; only 1: intros ?; only 1: symmetry; only 1: apply Nat.max_l; only 1: apply Nat.lt_le_incl; only 1: easy).	1.205786	42
Coq.PArith.Pnat.Pos2Nat.inj_iter	600
Coq.PArith.Pnat.Nat2Pos.id	600	0.0.0.0.0.0.0.0.1.0.1.0	synth with cache (only 1: induction n; only 1: destruct 1; only 1: auto; only 1: intros ?; only 1: clear H; only 1: simpl BinPosDef.Pos.of_nat; only 1: destruct n; only 1: trivial; only 1: rewrite Pos2Nat.inj_succ; only 1: f_equal; only 1: apply IHn; only 1: easy).	1.276545	37
Coq.PArith.Pnat.Nat2Pos.id_max	600	1.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: rewrite id; only 1: easy; only 1: apply Nat.neq_succ_0).	1.091374	7
Coq.PArith.Pnat.Nat2Pos.inj	600
Coq.PArith.Pnat.Nat2Pos.inj_iff	600	0.0.0.0.0.1.0	synth with cache (only 1: split; only 1: apply inj; only 1: easy; only 1: easy; only 1: intros; only 1: subst; only 1: easy).	1.111710	15
Coq.PArith.Pnat.Nat2Pos.inj_succ	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Pos2Nat.inj; only 1: rewrite Pos2Nat.inj_succ; only 1: rewrite id; only 1: rewrite id; only 1: easy; only 1: trivial; only 1: easy).	1.096677	8
Coq.PArith.Pnat.Nat2Pos.inj_pred	600	0.0.1.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct n; only 1: trivial; only 1: simpl; only 1: rewrite Pos.pred_succ; only 1: easy).	1.144137	15
Coq.PArith.Pnat.Nat2Pos.inj_add	600	0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Pos2Nat.inj; only 1: rewrite Pos2Nat.inj_add; only 1: rewrite id; only 1: rewrite id; only 1: rewrite id; only 1: trivial; only 1: easy; only 1: easy; only 1: intros ?; only 1: destruct n; only 1: destruct H; only 1: easy; only 1: simpl in H1; only 1: easy).	1.265986	39
Coq.PArith.Pnat.Nat2Pos.inj_mul	600	0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Pos2Nat.inj; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite id; only 1: rewrite id; only 1: rewrite id; only 1: trivial; only 1: easy; only 1: easy; only 1: intros ?; only 1: apply Nat.mul_eq_0 in H1; only 1: destruct H1; only 1: elim H; only 1: easy; only 1: elim H0; only 1: easy).	1.335402	40
Coq.PArith.Pnat.Nat2Pos.inj_compare	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite Pos2Nat.inj_compare; only 1: rewrite id; only 1: rewrite id; only 1: trivial; only 1: easy; only 1: easy).	1.030648	8
Coq.PArith.Pnat.Nat2Pos.inj_sub	600
Coq.PArith.Pnat.Nat2Pos.inj_min	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: symmetry; only 1: apply Pos.min_l; only 1: apply Pos.le_1_l; only 1: destruct m; only 1: simpl; only 1: symmetry; only 1: apply Pos.min_r; only 1: apply Pos.le_1_l; only 1: unfold BinPosDef.Pos.min; only 1: rewrite <- inj_compare; only 1: case Nat.compare_spec; only 1: intros ?; only 1: f_equal; only 1: apply Nat.min_l; only 1: rewrite H; only 1: auto; only 1: intros ?; only 1: f_equal; only 1: apply Nat.min_l; only 1: apply Nat.lt_le_incl; only 1: easy; only 1: intros ?; only 1: f_equal; only 1: apply Nat.min_r; only 1: apply Nat.lt_le_incl; only 1: easy; only 1: apply Nat.neq_succ_0; only 1: easy).	1.298513	54
Coq.PArith.Pnat.Nat2Pos.inj_max	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: symmetry; only 1: apply Pos.max_r; only 1: apply Pos.le_1_l; only 1: destruct m; only 1: simpl; only 1: symmetry; only 1: apply Pos.max_l; only 1: apply Pos.le_1_l; only 1: unfold BinPosDef.Pos.max; only 1: rewrite <- inj_compare; only 1: case Nat.compare_spec; only 1: intros ?; only 1: f_equal; only 1: apply Nat.max_r; only 1: rewrite H; only 1: auto; only 1: intros ?; only 1: f_equal; only 1: apply Nat.max_r; only 1: apply Nat.lt_le_incl; only 1: easy; only 1: intros ?; only 1: f_equal; only 1: apply Nat.max_l; only 1: apply Nat.lt_le_incl; only 1: easy; only 1: apply Nat.neq_succ_0; only 1: easy).	1.384357	54
Coq.PArith.Pnat.Pos2SuccNat.id_succ	600	0.0.0	synth with cache (only 1: rewrite Pos.of_nat_succ; only 1: rewrite <- Pos2Nat.inj_succ; only 1: apply Pos2Nat.id).	1.072506	3
Coq.PArith.Pnat.Pos2SuccNat.pred_id	600	0.1.0	synth with cache (only 1: rewrite id_succ; only 1: rewrite Pos.pred_succ; only 1: easy).	1.104474	12
Coq.PArith.Pnat.SuccNat2Pos.id_succ	600	1.0.0	synth with cache (only 1: rewrite Pos.of_nat_succ; only 1: apply Nat2Pos.id; only 1: apply Nat.neq_succ_0).	1.061756	5
Coq.PArith.Pnat.SuccNat2Pos.pred_id	600	0.0	synth with cache (only 1: rewrite id_succ; only 1: reflexivity).	1.061436	2
Coq.PArith.Pnat.SuccNat2Pos.inj	600
Coq.PArith.Pnat.SuccNat2Pos.inj_iff	600	0.0.0.1.0	synth with cache (only 1: split; only 1: apply inj; only 1: intros; only 1: subst; only 1: easy).	1.075594	13
Coq.PArith.Pnat.SuccNat2Pos.inv	600	0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Pos2Nat.inj; only 1: rewrite id_succ; only 1: easy).	1.100768	4
Coq.PArith.Pnat.SuccNat2Pos.inj_succ	600	0.0.0.0.0	synth with cache (only 1: apply Pos2Nat.inj; only 1: rewrite Pos2Nat.inj_succ; only 1: rewrite id_succ; only 1: rewrite id_succ; only 1: easy).	1.079912	5
Coq.PArith.Pnat.SuccNat2Pos.inj_compare	600	0.0.0.0	synth with cache (only 1: rewrite Pos2Nat.inj_compare; only 1: rewrite id_succ; only 1: rewrite id_succ; only 1: trivial).	1.078765	4
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_mult	600
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_succ_morphism	600
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_l_plus_morphism	600
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_plus_carry_morphism	600
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_r_plus_morphism	600
Coq.PArith.Pnat.ObsoletePmultNat.ZL6	600
Coq.PArith.Pnat.ObsoletePmultNat.le_Pmult_nat	600
Coq.funind.Recdef.le_lt_SS	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nat.lt_succ_r; only 1: apply Nat.lt_succ_r in H; only 1: Nat.order).	0.976127	4
Coq.funind.Recdef.Splus_lt	600	0.0.0.0.0	synth with cache (only 1: apply Nat.lt_succ_r; only 1: rewrite Nat.add_comm; only 1: rewrite <- Nat.add_0_r  at 1; only 1: apply Nat.add_le_mono_l; only 1: apply Nat.le_0_l).	1.009534	5
Coq.funind.Recdef.SSplus_lt	600	0.0	synth with cache (only 1: apply le_lt_SS; only 1: apply Nat.le_add_r).	1.022125	2
Coq.funind.Recdef.max	600
Coq.Arith.Euclid.eucl_dev	600
Coq.Arith.Euclid.quotient	600
Coq.Arith.Euclid.modulo	600
Coq.PArith.BinPos.Pos.eq_dec	600	0	synth with cache (only 1: decide equality).	0.899031	1
Coq.PArith.BinPos.Pos.xI_succ_xO	600	0	synth with cache (only 1: reflexivity).	0.937993	1
Coq.PArith.BinPos.Pos.succ_discr	600	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.904561	4
Coq.PArith.BinPos.Pos.pred_double_spec	600	0	synth with cache (only 1: reflexivity).	0.930668	1
Coq.PArith.BinPos.Pos.succ_pred_double	600	0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: easy; only 1: simpl; only 1: f_equal).	0.937242	8
Coq.PArith.BinPos.Pos.pred_double_succ	600	0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: easy; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal).	0.892393	8
Coq.PArith.BinPos.Pos.double_succ	600	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.863428	4
Coq.PArith.BinPos.Pos.pred_double_xO_discr	600	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.910060	4
Coq.PArith.BinPos.Pos.succ_not_1	600	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.939574	4
Coq.PArith.BinPos.Pos.pred_succ	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: easy; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.981001	24
Coq.PArith.BinPos.Pos.succ_pred_or	600	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: auto; only 1: simpl; only 1: right; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: easy; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: auto).	1.042862	36
Coq.PArith.BinPos.Pos.succ_pred	600	0.1.0.0.1.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: intros ?; only 1: simpl; only 1: trivial; only 1: intros ?; only 1: simpl; only 1: apply succ_pred_double; only 1: intros ?; only 1: simpl; only 1: destruct H; only 1: trivial).	1.014517	33
Coq.PArith.BinPos.Pos.succ_inj	600
Coq.PArith.BinPos.Pos.pred_N_succ	600	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: easy; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.978586	35
Coq.PArith.BinPos.Pos.add_1_r	600	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.868543	4
Coq.PArith.BinPos.Pos.add_1_l	600	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.874481	4
Coq.PArith.BinPos.Pos.add_carry_spec	600
Coq.PArith.BinPos.Pos.add_comm	600
Coq.PArith.BinPos.Pos.add_succ_r	600
Coq.PArith.BinPos.Pos.add_succ_l	600
Coq.PArith.BinPos.Pos.add_no_neutral	600
Coq.PArith.BinPos.Pos.add_carry_add	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply succ_inj; only 1: rewrite <- add_carry_spec; only 1: rewrite <- add_carry_spec; only 1: easy).	1.019977	5
Coq.PArith.BinPos.Pos.add_reg_r	600
Coq.PArith.BinPos.Pos.add_reg_l	600
Coq.PArith.BinPos.Pos.add_cancel_r	600	0.1.0	synth with cache (only 1: split; only 1: apply add_reg_r; only 1: congruence).	1.142715	10
Coq.PArith.BinPos.Pos.add_cancel_l	600	0.0.0	synth with cache (only 1: split; only 1: apply add_reg_l; only 1: congruence).	0.967612	3
Coq.PArith.BinPos.Pos.add_carry_reg_r	600	0.0.0.0	synth with cache (only 1: intros ?; only 1: apply add_reg_r with (r := r); only 1: apply add_carry_add; only 1: easy).	1.005684	4
Coq.PArith.BinPos.Pos.add_carry_reg_l	600
Coq.PArith.BinPos.Pos.add_assoc	600	0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1.0.0.0.0.1.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: revert q r; only 1: induction p; only 1: intros ?; only 1: destruct q; only 1: intros ?; only 1: destruct r; only 1: simpl; only 1: f_equal; only 1: rewrite add_carry_spec; only 1: rewrite add_carry_spec; only 1: rewrite add_succ_r; only 1: rewrite add_succ_l; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: rewrite add_carry_spec; only 1: rewrite add_carry_spec; only 1: rewrite add_succ_l; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: rewrite add_carry_spec; only 1: rewrite add_succ_r; only 1: f_equal; only 1: intros ?; only 1: destruct r; only 1: simpl; only 1: f_equal; only 1: rewrite add_carry_spec; only 1: rewrite add_carry_spec; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: rewrite add_carry_spec; only 1: f_equal; only 1: intros ?; only 1: destruct r; only 1: simpl; only 1: f_equal; only 1: rewrite add_succ_r; only 1: rewrite add_succ_l; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: rewrite add_carry_spec; only 1: rewrite add_succ_l; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: rewrite add_1_r; only 1: f_equal; only 1: intros ?; only 1: destruct q; only 1: intros ?; only 1: destruct r; only 1: simpl; only 1: f_equal; only 1: rewrite add_carry_spec; only 1: rewrite add_carry_spec; only 1: rewrite add_succ_r; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: rewrite add_succ_r; only 1: f_equal; only 1: intros ?; only 1: destruct r; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: intros ?; only 1: destruct r; only 1: simpl; only 1: f_equal; only 1: rewrite add_carry_spec; only 1: rewrite add_succ_r; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: rewrite add_1_r; only 1: f_equal; only 1: intros ?; only 1: intros ?; only 1: rewrite add_1_l; only 1: rewrite add_1_l; only 1: rewrite add_succ_l; only 1: auto).	5.377338	799
Coq.PArith.BinPos.Pos.add_xO	600	1	synth with cache (only 1: easy).	1.011692	9
Coq.PArith.BinPos.Pos.add_xI_pred_double	600
Coq.PArith.BinPos.Pos.add_xO_pred_double	600
Coq.PArith.BinPos.Pos.add_diag	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: rewrite add_carry_spec; only 1: rewrite IHp; only 1: easy; only 1: simpl; only 1: rewrite IHp; only 1: easy; only 1: simpl; only 1: f_equal).	1.021734	18
Coq.PArith.BinPos.Pos.peano_rect_succ	600	0.0.0.0.0.1.0.0	synth with cache (only 1: revert P a f; only 1: induction p; only 1: intros; only 1: simpl; only 1: rewrite IHp; only 1: easy; only 1: trivial; only 1: trivial).	1.111566	15
Coq.PArith.BinPos.Pos.peano_rect_base	600	0	synth with cache (only 1: trivial).	0.960921	1
Coq.PArith.BinPos.Pos.peano_case	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply peano_ind; only 1: auto; only 1: auto).	0.943863	4
Coq.PArith.BinPos.Pos.eq_dep_eq_positive	600	0.0	synth with cache (only 1: apply eq_dep_eq_dec; only 1: decide equality).	0.963897	2
Coq.PArith.BinPos.Pos.PeanoViewUnique	600
Coq.PArith.BinPos.Pos.peano_equiv	600
Coq.PArith.BinPos.Pos.mul_1_l	600	0	synth with cache (only 1: reflexivity).	0.958316	1
Coq.PArith.BinPos.Pos.mul_1_r	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: easy; only 1: simpl; only 1: f_equal; only 1: easy; only 1: simpl; only 1: trivial).	1.024920	17
Coq.PArith.BinPos.Pos.mul_xO_r	600	0.0.1.0.0.1.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: trivial).	1.117385	29
Coq.PArith.BinPos.Pos.mul_xI_r	600
Coq.PArith.BinPos.Pos.mul_comm	600
Coq.PArith.BinPos.Pos.mul_add_distr_l	600
Coq.PArith.BinPos.Pos.mul_add_distr_r	600
Coq.PArith.BinPos.Pos.mul_assoc	600	0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: rewrite IHp; only 1: rewrite mul_add_distr_r; only 1: easy; only 1: simpl; only 1: rewrite IHp; only 1: trivial; only 1: simpl; only 1: trivial).	1.195434	27
Coq.PArith.BinPos.Pos.mul_succ_l	600	1.1.0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: rewrite IHp; only 1: rewrite add_assoc; only 1: rewrite add_diag; only 1: rewrite <- add_xO; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: symmetry; only 1: apply add_diag).	1.076094	32
Coq.PArith.BinPos.Pos.mul_succ_r	600	0.0.0.0	synth with cache (only 1: rewrite mul_comm; only 1: rewrite mul_succ_l; only 1: f_equal; only 1: apply mul_comm).	1.045754	4
Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	600
Coq.PArith.BinPos.Pos.mul_xO_discr	600
Coq.PArith.BinPos.Pos.mul_reg_r	600
Coq.PArith.BinPos.Pos.mul_reg_l	600
Coq.PArith.BinPos.Pos.mul_cancel_r	600	0.1.0	synth with cache (only 1: split; only 1: apply mul_reg_r; only 1: congruence).	1.047306	10
Coq.PArith.BinPos.Pos.mul_cancel_l	600
Coq.PArith.BinPos.Pos.mul_eq_1_l	600	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: destruct q; only 1: easy; only 1: easy; only 1: easy; only 1: destruct q; only 1: easy; only 1: easy; only 1: easy; only 1: destruct q; only 1: easy; only 1: easy; only 1: easy).	1.386535	21
Coq.PArith.BinPos.Pos.mul_eq_1_r	600	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: destruct q; only 1: easy; only 1: easy; only 1: easy; only 1: destruct q; only 1: easy; only 1: easy; only 1: easy; only 1: destruct q; only 1: easy; only 1: easy; only 1: easy).	1.205113	21
Coq.PArith.BinPos.Pos.square_xO	600	0.0.0	synth with cache (only 1: simpl; only 1: rewrite mul_comm; only 1: easy).	0.982523	3
Coq.PArith.BinPos.Pos.square_xI	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: simpl; only 1: rewrite mul_comm; only 1: simpl; only 1: f_equal; only 1: rewrite add_assoc; only 1: rewrite add_diag; only 1: simpl; only 1: rewrite add_comm; only 1: easy).	1.091335	17
Coq.PArith.BinPos.Pos.iter_swap_gen	600
Coq.PArith.BinPos.Pos.iter_swap	600	0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply iter_swap_gen; only 1: easy).	0.954537	4
Coq.PArith.BinPos.Pos.iter_succ	600
Coq.PArith.BinPos.Pos.iter_add	600
Coq.PArith.BinPos.Pos.iter_invariant	600
Coq.PArith.BinPos.Pos.pow_1_r	600	1.0.0	synth with cache (only 1: unfold BinPosDef.Pos.pow; only 1: simpl; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r).	1.042406	9
Coq.PArith.BinPos.Pos.pow_succ_r	600	0.0.0	synth with cache (only 1: unfold BinPosDef.Pos.pow; only 1: rewrite iter_succ; only 1: easy).	0.978599	3
Coq.PArith.BinPos.Pos.square_spec	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: rewrite square_xI; only 1: simpl; only 1: rewrite IHp; only 1: easy; only 1: rewrite square_xO; only 1: simpl; only 1: rewrite IHp; only 1: easy; only 1: trivial).	1.106888	18
Coq.PArith.BinPos.Pos.sub_mask_succ_r	600
Coq.PArith.BinPos.Pos.sub_mask_carry_spec	600
Coq.PArith.BinPos.Pos.sub_mask_spec	600
Coq.PArith.BinPos.Pos.sub_mask_nul_iff	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: case sub_mask_spec; only 1: easy; only 1: easy; only 1: easy; only 1: intros ?; only 1: intropattern subst <- H; only 1: induction p; only 1: simpl; only 1: rewrite IHp; only 1: easy; only 1: simpl; only 1: rewrite IHp; only 1: easy; only 1: simpl; only 1: easy).	1.053139	24
Coq.PArith.BinPos.Pos.sub_mask_diag	600	0.1	synth with cache (only 1: apply sub_mask_nul_iff; only 1: easy).	0.940421	10
Coq.PArith.BinPos.Pos.sub_mask_add	600	0.0.0.0	synth with cache (only 1: case sub_mask_spec; only 1: congruence; only 1: congruence; only 1: congruence).	0.929310	4
Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	600
Coq.PArith.BinPos.Pos.sub_mask_pos_iff	600	1.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: case sub_mask_spec; only 1: congruence; only 1: congruence; only 1: congruence; only 1: intros ?; only 1: intropattern subst <- H; only 1: apply sub_mask_add_diag_l).	1.047018	21
Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	600
Coq.PArith.BinPos.Pos.sub_mask_neg_iff	600	1.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: case sub_mask_spec; only 1: discriminate; only 1: discriminate; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H0; only 1: exists r; only 1: easy; only 1: intros ?; only 1: destruct H; only 1: intropattern subst <- H; only 1: apply sub_mask_add_diag_r).	1.144480	25
Coq.PArith.BinPos.Pos.eqb_eq	600
Coq.PArith.BinPos.Pos.ltb_lt	600
Coq.PArith.BinPos.Pos.leb_le	600
Coq.PArith.BinPos.Pos.compare_cont_spec	600
Coq.PArith.BinPos.Pos.compare_cont_Eq	600	0.0.0.0.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: destruct BinPosDef.Pos.compare; only 1: easy; only 1: easy; only 1: easy).	0.930834	5
Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	600	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold gt; only 1: destruct BinPosDef.Pos.compare; only 1: split; only 1: easy; only 1: easy; only 1: split; only 1: easy; only 1: easy; only 1: split; only 1: easy; only 1: easy).	1.047738	20
Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	600	0.0.0.0.0.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold le; only 1: destruct BinPosDef.Pos.compare; only 1: easy'; only 1: easy'; only 1: easy').	1.001811	6
Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	600	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct BinPosDef.Pos.compare; only 1: split; only 1: easy; only 1: easy; only 1: split; only 1: easy; only 1: easy; only 1: split; only 1: easy; only 1: easy).	1.029470	20
Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	600	0.0.0.0.0.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold ge; only 1: destruct BinPosDef.Pos.compare; only 1: easy'; only 1: easy'; only 1: easy').	0.971345	6
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	600
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	600	0.0	synth with cache (only 1: apply not_iff_compat; only 1: apply compare_cont_Lt_Gt).	1.065024	2
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	600	0.0	synth with cache (only 1: apply not_iff_compat; only 1: apply compare_cont_Gt_Lt).	0.998698	2
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	600
Coq.PArith.BinPos.Pos.compare_xO_xO	600	0	synth with cache (only 1: reflexivity).	1.020520	1
Coq.PArith.BinPos.Pos.compare_xI_xI	600	0	synth with cache (only 1: reflexivity).	1.021298	1
Coq.PArith.BinPos.Pos.compare_xI_xO	600
Coq.PArith.BinPos.Pos.compare_xO_xI	600
Coq.PArith.BinPos.Pos.compare_sub_mask	600
Coq.PArith.BinPos.Pos.lt_iff_add	600
Coq.PArith.BinPos.Pos.gt_iff_add	600
Coq.PArith.BinPos.Pos.compare_cont_refl	600	0.0.0.0	synth with cache (only 1: induction p; only 1: easy; only 1: easy; only 1: easy).	1.061538	4
Coq.PArith.BinPos.Pos.compare_cont_antisym	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert q c; only 1: induction p; only 1: intros ?; only 1: destruct q; only 1: intros ?; only 1: simpl; only 1: trivial; only 1: intros ?; only 1: simpl; only 1: apply IHp; only 1: intros ?; only 1: simpl; only 1: trivial; only 1: intros ?; only 1: destruct q; only 1: intros ?; only 1: simpl; only 1: apply IHp; only 1: intros ?; only 1: simpl; only 1: trivial; only 1: intros ?; only 1: simpl; only 1: trivial; only 1: intros ?; only 1: destruct q; only 1: intros ?; only 1: simpl; only 1: trivial; only 1: intros ?; only 1: simpl; only 1: trivial; only 1: intros ?; only 1: simpl; only 1: trivial).	1.505786	106
Coq.PArith.BinPos.Pos.compare_eq_iff	600
Coq.PArith.BinPos.Pos.compare_antisym	600	0.0.0	synth with cache (only 1: unfold BinPosDef.Pos.compare; only 1: rewrite compare_cont_antisym; only 1: easy).	1.012241	3
Coq.PArith.BinPos.Pos.compare_lt_iff	600	0	synth with cache (only 1: reflexivity).	1.027032	1
Coq.PArith.BinPos.Pos.compare_le_iff	600	0	synth with cache (only 1: reflexivity).	1.027548	1
Coq.PArith.BinPos.Pos.gt_lt_iff	600	0.0.0.0.0	synth with cache (only 1: unfold lt; only 1: unfold gt; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy).	1.079200	5
Coq.PArith.BinPos.Pos.gt_lt	600	0	synth with cache (only 1: apply gt_lt_iff).	1.040405	1
Coq.PArith.BinPos.Pos.lt_gt	600	0	synth with cache (only 1: apply gt_lt_iff).	1.039328	1
Coq.PArith.BinPos.Pos.ge_le_iff	600	0.0.0.0.0	synth with cache (only 1: unfold le; only 1: unfold ge; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy).	1.048514	5
Coq.PArith.BinPos.Pos.ge_le	600	0	synth with cache (only 1: apply ge_le_iff).	1.064297	1
Coq.PArith.BinPos.Pos.le_ge	600	0	synth with cache (only 1: apply ge_le_iff).	0.991199	1
Coq.PArith.BinPos.Pos.compare_succ_r	600
Coq.PArith.BinPos.Pos.compare_succ_l	600
Coq.PArith.BinPos.Pos.lt_succ_r	600
Coq.PArith.BinPos.Pos.lt_succ_diag_r	600	0.0.0.0.0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: exists 1; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	1.031653	6
Coq.PArith.BinPos.Pos.compare_succ_succ	600
Coq.PArith.BinPos.Pos.le_1_l	600	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	1.079138	4
Coq.PArith.BinPos.Pos.nlt_1_r	600	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	1.002650	4
Coq.PArith.BinPos.Pos.lt_1_succ	600	0.0.0.0.0	synth with cache (only 1: apply lt_succ_r; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.992578	5
Coq.PArith.BinPos.Pos.le_nlt	600	0.0	synth with cache (only 1: rewrite <- ge_le_iff; only 1: easy).	1.018966	2
Coq.PArith.BinPos.Pos.lt_nle	600	0.0.0.0.1	synth with cache (only 1: unfold lt; only 1: rewrite <- compare_nle_iff; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy).	0.989975	12
Coq.PArith.BinPos.Pos.lt_le_incl	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply le_lteq; only 1: left; only 1: trivial).	1.032287	4
Coq.PArith.BinPos.Pos.lt_lt_succ	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lt_succ_r; only 1: apply le_lteq; only 1: left; only 1: trivial).	1.046881	5
Coq.PArith.BinPos.Pos.succ_lt_mono	600	0.0.0	synth with cache (only 1: unfold lt; only 1: rewrite compare_succ_succ; only 1: easy).	0.983459	3
Coq.PArith.BinPos.Pos.succ_le_mono	600	0.0.0	synth with cache (only 1: unfold le; only 1: rewrite compare_succ_succ; only 1: easy).	0.980340	3
Coq.PArith.BinPos.Pos.lt_trans	600
Coq.PArith.BinPos.Pos.lt_ind	600
Coq.PArith.BinPos.Pos.lt_strorder	600	0.0.0	synth with cache (only 1: split; only 1: exact lt_irrefl; only 1: exact lt_trans).	0.991900	3
Coq.PArith.BinPos.Pos.lt_compat	600	0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: subst; only 1: auto).	1.022429	7
Coq.PArith.BinPos.Pos.lt_total	600
Coq.PArith.BinPos.Pos.le_refl	600	0.0.0	synth with cache (only 1: apply lt_eq_cases; only 1: right; only 1: easy).	1.053314	3
Coq.PArith.BinPos.Pos.le_lt_trans	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply le_lteq in H; only 1: destruct H; only 1: apply lt_trans with m; only 1: easy; only 1: easy; only 1: subst; only 1: trivial).	1.082053	18
Coq.PArith.BinPos.Pos.lt_le_trans	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply le_lteq in H0; only 1: destruct H0; only 1: apply lt_trans with m; only 1: easy; only 1: easy; only 1: subst; only 1: trivial).	1.155026	18
Coq.PArith.BinPos.Pos.le_trans	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply le_lteq in H; only 1: destruct H; only 1: apply le_lteq; only 1: left; only 1: apply le_lteq in H0; only 1: destruct H0; only 1: apply lt_trans with m; only 1: easy; only 1: easy; only 1: subst; only 1: trivial; only 1: subst; only 1: trivial).	1.129626	27
Coq.PArith.BinPos.Pos.le_succ_l	600	0.0.0.0.0	synth with cache (only 1: rewrite <- lt_succ_r; only 1: symmetry; only 1: unfold lt; only 1: rewrite compare_succ_succ; only 1: easy).	1.039439	5
Coq.PArith.BinPos.Pos.le_antisym	600
Coq.PArith.BinPos.Pos.le_preorder	600	0.0.0	synth with cache (only 1: split; only 1: exact le_refl; only 1: exact le_trans).	1.005209	3
Coq.PArith.BinPos.Pos.le_partorder	600
Coq.PArith.BinPos.Pos.add_compare_mono_l	600
Coq.PArith.BinPos.Pos.add_compare_mono_r	600
Coq.PArith.BinPos.Pos.lt_add_diag_r	600	0.0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: exists q; only 1: reflexivity).	1.125904	3
Coq.PArith.BinPos.Pos.add_lt_mono_l	600	0.0.0	synth with cache (only 1: unfold lt; only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	1.001462	3
Coq.PArith.BinPos.Pos.add_lt_mono_r	600	0.0.0	synth with cache (only 1: unfold lt; only 1: rewrite add_compare_mono_r; only 1: apply iff_refl).	1.038905	3
Coq.PArith.BinPos.Pos.add_lt_mono	600
Coq.PArith.BinPos.Pos.add_le_mono_l	600	0.0.0	synth with cache (only 1: unfold le; only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	1.053221	3
Coq.PArith.BinPos.Pos.add_le_mono_r	600	0.0.0	synth with cache (only 1: unfold le; only 1: rewrite add_compare_mono_r; only 1: apply iff_refl).	0.989048	3
Coq.PArith.BinPos.Pos.add_le_mono	600
Coq.PArith.BinPos.Pos.mul_compare_mono_l	600
Coq.PArith.BinPos.Pos.mul_compare_mono_r	600
Coq.PArith.BinPos.Pos.mul_lt_mono_l	600	0.0.0	synth with cache (only 1: unfold lt; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.923366	3
Coq.PArith.BinPos.Pos.mul_lt_mono_r	600	0.0.0	synth with cache (only 1: unfold lt; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).	0.892236	3
Coq.PArith.BinPos.Pos.mul_lt_mono	600
Coq.PArith.BinPos.Pos.mul_le_mono_l	600	0.0.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.839928	3
Coq.PArith.BinPos.Pos.mul_le_mono_r	600	0.0.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).	0.835937	3
Coq.PArith.BinPos.Pos.mul_le_mono	600
Coq.PArith.BinPos.Pos.lt_add_r	600	0.0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: exists q; only 1: reflexivity).	0.840620	3
Coq.PArith.BinPos.Pos.lt_not_add_l	600
Coq.PArith.BinPos.Pos.pow_gt_1	600
Coq.PArith.BinPos.Pos.sub_1_r	600	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.850127	4
Coq.PArith.BinPos.Pos.pred_sub	600	0.0.0.0.0	synth with cache (only 1: symmetry; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.895549	5
Coq.PArith.BinPos.Pos.sub_succ_r	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold BinPosDef.Pos.sub; only 1: rewrite sub_mask_succ_r; only 1: rewrite sub_mask_carry_spec; only 1: destruct BinPosDef.Pos.sub_mask; only 1: auto; only 1: destruct p0; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.956755	18
Coq.PArith.BinPos.Pos.sub_mask_pos'	600	0.1.0.0.0.0.0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: intros ?; only 1: destruct H; only 1: exists x; only 1: split; only 1: intropattern subst <- H; only 1: apply sub_mask_add_diag_l; only 1: trivial).	0.981453	21
Coq.PArith.BinPos.Pos.sub_mask_pos	600
Coq.PArith.BinPos.Pos.sub_add	600
Coq.PArith.BinPos.Pos.add_sub	600	0.1.0.0.1	synth with cache (only 1: apply add_reg_r with q; only 1: rewrite sub_add; only 1: reflexivity; only 1: rewrite add_comm; only 1: apply lt_add_r).	0.947698	12
Coq.PArith.BinPos.Pos.mul_sub_distr_l	600
Coq.PArith.BinPos.Pos.mul_sub_distr_r	600
Coq.PArith.BinPos.Pos.sub_lt_mono_l	600
Coq.PArith.BinPos.Pos.sub_compare_mono_l	600
Coq.PArith.BinPos.Pos.sub_compare_mono_r	600
Coq.PArith.BinPos.Pos.sub_lt_mono_r	600	0.0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold lt; only 1: rewrite sub_compare_mono_r; only 1: trivial; only 1: trivial; only 1: apply lt_trans with q; only 1: trivial; only 1: easy).	1.047384	16
Coq.PArith.BinPos.Pos.sub_decr	600	0.1.0.0.0	synth with cache (only 1: intros; only 1: apply add_lt_mono_r with m; only 1: rewrite sub_add; only 1: apply lt_add_r; only 1: trivial).	0.993962	6
Coq.PArith.BinPos.Pos.add_sub_assoc	600	0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply add_reg_r with r; only 1: rewrite <- add_assoc; only 1: rewrite sub_add; only 1: rewrite sub_add; only 1: trivial; only 1: rewrite add_comm; only 1: apply lt_trans with q; only 1: trivial; only 1: trivial using lt_add_r; only 1: trivial).	0.980656	20
Coq.PArith.BinPos.Pos.sub_add_distr	600
Coq.PArith.BinPos.Pos.sub_sub_distr	600
Coq.PArith.BinPos.Pos.sub_xO_xO	600
Coq.PArith.BinPos.Pos.sub_xI_xI	600
Coq.PArith.BinPos.Pos.sub_xI_xO	600
Coq.PArith.BinPos.Pos.sub_xO_xI	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold BinPosDef.Pos.sub; only 1: simpl; only 1: rewrite sub_mask_carry_spec; only 1: destruct BinPosDef.Pos.sub_mask; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	1.042900	18
Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	600	1.0	synth with cache (only 1: rewrite lt_iff_add; only 1: apply sub_mask_neg_iff).	0.978785	9
Coq.PArith.BinPos.Pos.sub_mask_neg	600	0	synth with cache (only 1: apply sub_mask_neg_iff').	0.930084	1
Coq.PArith.BinPos.Pos.sub_le	600
Coq.PArith.BinPos.Pos.sub_lt	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply sub_le; only 1: apply le_lteq; only 1: left; only 1: trivial).	0.936090	5
Coq.PArith.BinPos.Pos.sub_diag	600	0.0.0	synth with cache (only 1: unfold BinPosDef.Pos.sub; only 1: rewrite sub_mask_diag; only 1: easy).	0.938663	3
Coq.PArith.BinPos.Pos.size_nat_monotone	600
Coq.PArith.BinPos.Pos.size_gt	600	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: rewrite pow_succ_r; only 1: apply le_succ_l in IHp; only 1: apply le_succ_l; only 1: easy; only 1: simpl; only 1: rewrite pow_succ_r; only 1: easy; only 1: simpl; only 1: easy).	1.032464	19
Coq.PArith.BinPos.Pos.size_le	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: rewrite pow_succ_r; only 1: apply mul_le_mono_l; only 1: apply le_lteq; only 1: left; only 1: rewrite xI_succ_xO; only 1: apply lt_succ_r; only 1: apply IHp; only 1: simpl; only 1: rewrite pow_succ_r; only 1: easy; only 1: simpl; only 1: easy).	1.047797	22
Coq.PArith.BinPos.Pos.max_l	600	0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold BinPosDef.Pos.max; only 1: case compare_spec; only 1: auto; only 1: intros ?; only 1: apply le_nlt in H; only 1: elim H; only 1: easy; only 1: auto).	1.082297	20
Coq.PArith.BinPos.Pos.max_r	600
Coq.PArith.BinPos.Pos.min_l	600
Coq.PArith.BinPos.Pos.min_r	600	0.1.0.1.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold BinPosDef.Pos.min; only 1: case compare_spec; only 1: auto; only 1: intros ?; only 1: apply le_nlt in H; only 1: easy; only 1: auto).	1.027809	31
Coq.PArith.BinPos.Pos.max_1_l	600	0.0.0.1.0.0.0.0	synth with cache (only 1: unfold BinPosDef.Pos.max; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros ?; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l).	1.008725	16
Coq.PArith.BinPos.Pos.max_1_r	600	1.0	synth with cache (only 1: rewrite max_comm; only 1: apply max_1_l).	0.948910	8
Coq.PArith.BinPos.Pos.min_1_l	600	0.0.0.1.0.0.0.0	synth with cache (only 1: unfold BinPosDef.Pos.min; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros ?; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l).	0.952602	16
Coq.PArith.BinPos.Pos.min_1_r	600	1.0	synth with cache (only 1: rewrite min_comm; only 1: apply min_1_l).	0.990998	8
Coq.PArith.BinPos.Pos.succ_max_distr	600	0.0.0.0.0	synth with cache (only 1: symmetry; only 1: apply max_monotone; only 1: intros ?; only 1: intros ?; only 1: apply succ_le_mono).	1.021872	5
Coq.PArith.BinPos.Pos.succ_min_distr	600	0.0.0.0.0	synth with cache (only 1: symmetry; only 1: apply min_monotone; only 1: intros ?; only 1: intros ?; only 1: apply succ_le_mono).	0.986118	5
Coq.PArith.BinPos.Pos.add_max_distr_l	600	0.0.0.0	synth with cache (only 1: apply max_monotone; only 1: intros ?; only 1: intros ?; only 1: apply add_le_mono_l).	0.952479	4
Coq.PArith.BinPos.Pos.add_max_distr_r	600
Coq.PArith.BinPos.Pos.add_min_distr_l	600	0.0.0.0	synth with cache (only 1: apply min_monotone; only 1: intros ?; only 1: intros ?; only 1: apply add_le_mono_l).	1.094716	4
Coq.PArith.BinPos.Pos.add_min_distr_r	600
Coq.PArith.BinPos.Pos.mul_max_distr_l	600	0.0.0.0	synth with cache (only 1: apply max_monotone; only 1: intros ?; only 1: intros ?; only 1: apply mul_le_mono_l).	1.203513	4
Coq.PArith.BinPos.Pos.mul_max_distr_r	600
Coq.PArith.BinPos.Pos.mul_min_distr_l	600	0.0.0.0	synth with cache (only 1: apply min_monotone; only 1: intros ?; only 1: intros ?; only 1: apply mul_le_mono_l).	1.196637	4
Coq.PArith.BinPos.Pos.mul_min_distr_r	600
Coq.PArith.BinPos.Pos.iter_op_succ	600
Coq.PArith.BinPos.Pos.of_nat_succ	600	0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: rewrite IHn; only 1: easy).	1.107207	6
Coq.PArith.BinPos.Pos.pred_of_succ_nat	600	1.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl BinPosDef.Pos.pred; only 1: rewrite pred_succ; only 1: apply of_nat_succ).	1.073968	9
Coq.PArith.BinPos.Pos.succ_of_nat	600	0.0.1.0.0	synth with cache (only 1: rewrite of_nat_succ; only 1: destruct n; only 1: destruct 1; only 1: auto; only 1: trivial).	1.123975	6
Coq.PArith.BinPos.Pos.sqrtrem_step_spec	600
Coq.PArith.BinPos.Pos.sqrtrem_spec	600
Coq.PArith.BinPos.Pos.sqrt_spec	600
Coq.PArith.BinPos.Pos.divide_add_cancel_l	600
Coq.PArith.BinPos.Pos.divide_xO_xI	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: destruct H0; only 1: destruct p; only 1: destruct x; only 1: easy; only 1: simpl in H; only 1: destr_eq H; only 1: exists x; only 1: easy; only 1: easy; only 1: rewrite mul_xO_r in H0; only 1: discriminate; only 1: exists q; only 1: rewrite mul_1_r; only 1: easy).	1.270675	41
Coq.PArith.BinPos.Pos.divide_xO_xO	600	0.0.1.1.0.0.0.0.0.1.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: destruct H; only 1: rewrite mul_xO_r in H; only 1: destr_eq H; only 1: exists x; only 1: easy; only 1: intros ?; only 1: destruct H; only 1: exists x; only 1: rewrite mul_xO_r; only 1: f_equal; only 1: easy).	1.303496	46
Coq.PArith.BinPos.Pos.divide_mul_l	600
Coq.PArith.BinPos.Pos.divide_mul_r	600	0.0	synth with cache (only 1: rewrite mul_comm; only 1: apply divide_mul_l).	1.110681	2
Coq.PArith.BinPos.Pos.ggcdn_gcdn	600
Coq.PArith.BinPos.Pos.ggcd_gcd	600	0.0.0.0	synth with cache (only 1: unfold BinPosDef.Pos.ggcd; only 1: unfold BinPosDef.Pos.gcd; only 1: intros; only 1: apply ggcdn_gcdn).	1.112422	4
Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	600
Coq.PArith.BinPos.Pos.ggcd_correct_divisors	600	0.0.0	synth with cache (only 1: unfold BinPosDef.Pos.ggcd; only 1: intros; only 1: apply ggcdn_correct_divisors).	1.108837	3
Coq.PArith.BinPos.Pos.gcd_divide_l	600
Coq.PArith.BinPos.Pos.gcd_divide_r	600
Coq.PArith.BinPos.Pos.gcdn_greatest	600
Coq.PArith.BinPos.Pos.gcd_greatest	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcdn_greatest; only 1: auto; only 1: auto; only 1: auto).	1.088053	5
Coq.PArith.BinPos.Pos.ggcd_greatest	600
Coq.PArith.BinPos.Peqb_true_eq	600	0	synth with cache (only 1: apply Pos.eqb_eq).	1.061089	1
Coq.PArith.BinPos.Pcompare_eq_Gt	600	0	synth with cache (only 1: reflexivity).	1.095015	1
Coq.PArith.BinPos.Pminus_mask_Gt	600
Coq.PArith.BinPos.Pplus_minus	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Pos.add_comm; only 1: apply Pos.sub_add; only 1: apply Pos.gt_lt; only 1: easy).	1.075123	5
Coq.PArith.BinPos.Dcompare	600
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_ltof	600
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_gtof	600
Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof1	600
Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof1	600
Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof2	600
Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof2	600
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_lt_compat	600
Coq.Arith.Wf_nat.lt_wf	600
Coq.Arith.Wf_nat.lt_wf_rec1	600
Coq.Arith.Wf_nat.lt_wf_rec	600
Coq.Arith.Wf_nat.lt_wf_ind	600
Coq.Arith.Wf_nat.gt_wf_rec	600	0	synth with cache (only 1: exact lt_wf_rec).	0.933525	1
Coq.Arith.Wf_nat.lt_wf_double_rec	600	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: pattern n; only 1: apply lt_wf_rec; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: pattern m; only 1: apply lt_wf_rec; only 1: auto with arith).	0.994542	19
Coq.Arith.Wf_nat.lt_wf_double_ind	600	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: pattern n; only 1: apply lt_wf_ind; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: pattern m; only 1: apply lt_wf_ind; only 1: auto with arith).	1.010970	19
Coq.Arith.Wf_nat.LT_WF_REL.acc_lt_rel	600
Coq.Arith.Wf_nat.LT_WF_REL.well_founded_inv_lt_rel_compat	600
Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	600
Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	600
Coq.Arith.Compare_dec.zerop	600	0.0.0	synth with cache (only 1: destruct n; only 1: auto with arith; only 1: auto with arith).	0.990685	3
Coq.Arith.Compare_dec.lt_eq_lt_dec	600
Coq.Arith.Compare_dec.gt_eq_gt_dec	600	0	synth with cache (only 1: apply lt_eq_lt_dec).	0.969521	1
Coq.Arith.Compare_dec.le_lt_dec	600
Coq.Arith.Compare_dec.le_le_S_dec	600
Coq.Arith.Compare_dec.le_ge_dec	600
Coq.Arith.Compare_dec.le_gt_dec	600
Coq.Arith.Compare_dec.le_lt_eq_dec	600
Coq.Arith.Compare_dec.le_dec	600
Coq.Arith.Compare_dec.lt_dec	600	0	synth with cache (only 1: apply le_dec).	0.983951	1
Coq.Arith.Compare_dec.gt_dec	600	0	synth with cache (only 1: apply lt_dec).	0.967153	1
Coq.Arith.Compare_dec.ge_dec	600	0	synth with cache (only 1: apply le_dec).	1.025130	1
Coq.Arith.Compare_dec.dec_le	600	1	synth with cache (only 1: apply Nat.le_decidable).	0.975966	2
Coq.Arith.Compare_dec.dec_lt	600	1	synth with cache (only 1: apply Nat.lt_decidable).	0.958949	2
Coq.Arith.Compare_dec.dec_gt	600	0	synth with cache (only 1: apply Nat.lt_decidable).	0.962899	1
Coq.Arith.Compare_dec.dec_ge	600	0	synth with cache (only 1: apply Nat.le_decidable).	1.014432	1
Coq.Arith.Compare_dec.not_eq	600	0	synth with cache (only 1: apply Nat.lt_gt_cases).	0.974530	1
Coq.Arith.Compare_dec.not_le	600	0	synth with cache (only 1: apply Nat.nle_gt).	1.015931	1
Coq.Arith.Compare_dec.not_gt	600	0	synth with cache (only 1: apply Nat.nlt_ge).	0.979932	1
Coq.Arith.Compare_dec.not_ge	600	0	synth with cache (only 1: apply Nat.nle_gt).	0.958914	1
Coq.Arith.Compare_dec.not_lt	600	0	synth with cache (only 1: apply Nat.nlt_ge).	1.017238	1
Coq.Arith.Compare_dec.nat_compare_lt	600	1.0	synth with cache (only 1: symmetry; only 1: apply Nat.compare_lt_iff).	0.983539	4
Coq.Arith.Compare_dec.nat_compare_gt	600	0.0	synth with cache (only 1: symmetry; only 1: apply Nat.compare_gt_iff).	1.020507	2
Coq.Arith.Compare_dec.nat_compare_le	600	1.0	synth with cache (only 1: symmetry; only 1: apply Nat.compare_le_iff).	0.982586	4
Coq.Arith.Compare_dec.nat_compare_ge	600	0.0	synth with cache (only 1: symmetry; only 1: apply Nat.compare_ge_iff).	0.974584	2
Coq.Arith.Compare_dec.nat_compare_eq	600	0	synth with cache (only 1: apply Nat.compare_eq_iff).	0.978567	1
Coq.Arith.Compare_dec.nat_compare_Lt_lt	600	0	synth with cache (only 1: apply Nat.compare_lt_iff).	0.991086	1
Coq.Arith.Compare_dec.nat_compare_Gt_gt	600	0	synth with cache (only 1: apply Nat.compare_gt_iff).	0.968214	1
Coq.Arith.Compare_dec.nat_compare_equiv	600
Coq.Arith.Compare_dec.leb_iff_conv	600	0.0	synth with cache (only 1: rewrite Nat.leb_nle; only 1: intuition Nat.order).	0.906443	2
Coq.Arith.Compare_dec.leb_correct	600	0	synth with cache (only 1: apply Nat.leb_le).	0.977109	1
Coq.Arith.Compare_dec.leb_complete	600	0	synth with cache (only 1: apply Nat.leb_le).	0.936850	1
Coq.Arith.Compare_dec.leb_correct_conv	600	0	synth with cache (only 1: apply leb_iff_conv).	0.932259	1
Coq.Arith.Compare_dec.leb_complete_conv	600	0	synth with cache (only 1: apply leb_iff_conv).	0.984105	1
Coq.Arith.Compare_dec.leb_compare	600	1.0	synth with cache (only 1: rewrite Nat.compare_le_iff; only 1: apply Nat.leb_le).	0.949776	4
Coq.Arith.Factorial.lt_O_fact	600	0.0.1.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: apply Nat.lt_succ_diag_r; only 1: simpl; only 1: auto with arith).	1.034112	6
Coq.Arith.Factorial.fact_neq_0	600	1.0	synth with cache (only 1: apply Nat.neq_0_lt_0; only 1: apply lt_O_fact).	0.945612	7
Coq.Arith.Factorial.fact_le	600
Coq.Arith.Mult.mult_assoc_reverse	600	1.0	synth with cache (only 1: symmetry; only 1: apply Nat.mul_assoc).	1.101829	9
Coq.Arith.Mult.mult_is_O	600	1	synth with cache (only 1: apply Nat.eq_mul_0).	0.951942	3
Coq.Arith.Mult.mult_is_one	600	1	synth with cache (only 1: apply Nat.eq_mul_1).	0.932034	3
Coq.Arith.Mult.mult_O_le	600	0.0.0.0.0.0	synth with cache (only 1: destruct m; only 1: left; only 1: auto; only 1: right; only 1: simpl; only 1: trivial using Nat.le_add_r).	0.988773	6
Coq.Arith.Mult.mult_le_compat_l	600	0.0	synth with cache (only 1: apply Nat.mul_le_mono_nonneg_l; only 1: apply Nat.le_0_l).	0.956305	2
Coq.Arith.Mult.mult_le_compat_r	600	0.0	synth with cache (only 1: apply Nat.mul_le_mono_nonneg_r; only 1: apply Nat.le_0_l).	0.967057	2
Coq.Arith.Mult.mult_le_compat	600	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Nat.mul_le_mono_nonneg; only 1: apply Nat.le_0_l; only 1: easy; only 1: apply Nat.le_0_l; only 1: easy).	0.935784	6
Coq.Arith.Mult.mult_S_lt_compat_l	600	0.0	synth with cache (only 1: apply Nat.mul_lt_mono_pos_l; only 1: apply Nat.lt_0_succ).	0.984418	2
Coq.Arith.Mult.mult_lt_compat_l	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nat.mul_lt_mono_pos_l; only 1: easy; only 1: easy).	0.909169	4
Coq.Arith.Mult.mult_lt_compat_r	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nat.mul_lt_mono_pos_r; only 1: easy; only 1: easy).	0.973906	4
Coq.Arith.Mult.mult_S_le_reg_l	600	0.0	synth with cache (only 1: apply Nat.mul_le_mono_pos_l; only 1: apply Nat.lt_0_succ).	0.974142	2
Coq.Arith.Mult.odd_even_lem	600
Coq.Arith.Mult.mult_acc_aux	600
Coq.Arith.Mult.mult_tail_mult	600	0.0.0.0	synth with cache (only 1: intros; only 1: unfold tail_mult; only 1: rewrite <- mult_acc_aux; only 1: auto).	0.935567	4
Coq.Numbers.NatInt.NZDomain.nat_rect_wd	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction n; only 1: assumption; only 1: apply H0; only 1: easy).	0.920893	18
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	600
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	600
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	600
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	600
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	600
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	600
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_unique	600
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_ancestor	600
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.SuccPred.succ_pred_approx	600
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_gives_succ_pred	600
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_pred_injective	600
Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	600
Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	600
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	600
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	600
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	600
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	600
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	600
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	600
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	600
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	600
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	600
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	600
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	600
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	600
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	600
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	600
Coq.Numbers.Natural.Peano.NPeano.Even_equiv	600	0.0	synth with cache (only 1: symmetry; only 1: apply even_equiv).	0.985991	2
Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	600	0.0	synth with cache (only 1: symmetry; only 1: apply odd_equiv).	0.932129	2
Coq.Arith.Gt.gt_n_S	600	0	synth with cache (only 1: apply Nat.succ_lt_mono).	0.983293	1
Coq.Arith.Gt.gt_S_n	600	0	synth with cache (only 1: apply Nat.succ_lt_mono).	0.979410	1
Coq.Arith.Gt.gt_S	600	0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Nat.lt_eq_cases; only 1: apply Nat.succ_le_mono; only 1: easy).	1.010842	4
Coq.Arith.Gt.gt_pred	600	0	synth with cache (only 1: apply Nat.lt_succ_lt_pred).	0.947993	1
Coq.Arith.Gt.le_not_gt	600	0	synth with cache (only 1: apply Nat.le_ngt).	0.982673	1
Coq.Arith.Gt.gt_not_le	600	0	synth with cache (only 1: apply Nat.lt_nge).	0.964932	1
Coq.Arith.Gt.le_S_gt	600	0	synth with cache (only 1: apply Nat.le_succ_l).	0.956669	1
Coq.Arith.Gt.gt_S_le	600	0	synth with cache (only 1: apply Nat.succ_le_mono).	1.005075	1
Coq.Arith.Gt.gt_le_S	600	0	synth with cache (only 1: apply Nat.le_succ_l).	0.953297	1
Coq.Arith.Gt.le_gt_S	600	0	synth with cache (only 1: apply Nat.succ_le_mono).	0.950476	1
Coq.Arith.Gt.le_gt_trans	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nat.lt_le_trans with m; only 1: easy; only 1: easy).	0.959923	4
Coq.Arith.Gt.gt_le_trans	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nat.le_lt_trans with m; only 1: easy; only 1: easy).	1.009725	4
Coq.Arith.Gt.gt_trans	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nat.lt_trans with m; only 1: easy; only 1: easy).	0.950602	4
Coq.Arith.Gt.gt_trans_S	600	0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Nat.lt_le_trans with m; only 1: trivial; only 1: apply Nat.succ_le_mono; only 1: easy).	1.004423	6
Coq.Arith.Gt.gt_0_eq	600	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: right; only 1: auto; only 1: left; only 1: apply Nat.lt_0_succ).	1.006464	5
Coq.Arith.Gt.plus_gt_reg_l	600	0	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.957425	1
Coq.Arith.Gt.plus_gt_compat_l	600	0	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.994170	1
Coq.Arith.Div2.ind_0_1_SS	600
Coq.Arith.Div2.lt_div2	600	1.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: inversion 1; only 1: intros ?; only 1: clear H; only 1: apply Nat.lt_succ_r; only 1: apply Nat.le_div2).	0.951445	7
Coq.Arith.Div2.even_div2	600	1.0.0.0.0.0	synth with cache (only 1: rewrite even_equiv; only 1: intros ?; only 1: destruct H; only 1: intropattern subst -> H; only 1: rewrite Nat.div2_succ_double; only 1: apply Nat.div2_double).	1.005588	9
Coq.Arith.Div2.odd_div2	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite odd_equiv; only 1: intros ?; only 1: destruct H; only 1: intropattern subst -> H; only 1: rewrite Nat.add_1_r; only 1: rewrite Nat.div2_succ_double; only 1: simpl; only 1: f_equal; only 1: symmetry; only 1: apply Nat.div2_double).	1.155071	18
Coq.Arith.Div2.div2_even	600
Coq.Arith.Div2.div2_odd	600
Coq.Arith.Div2.even_odd_div2	600
Coq.Arith.Div2.double_S	600	0	synth with cache (only 1: apply Nat.add_succ_r).	0.916618	1
Coq.Arith.Div2.double_plus	600	0	synth with cache (only 1: apply Nat.add_shuffle1).	0.986005	1
Coq.Arith.Div2.even_odd_double	600
Coq.Arith.Div2.even_2n	600
Coq.Arith.Div2.odd_S2n	600
Coq.Arith.Div2.div2_double	600	1	synth with cache (only 1: apply Nat.div2_double).	0.990252	8
Coq.Arith.Div2.div2_double_plus_one	600	1	synth with cache (only 1: apply Nat.div2_succ_double).	0.929477	8
Coq.Arith.Peano_dec.O_or_S	600	0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: right; only 1: auto; only 1: left; only 1: exists n; only 1: auto).	1.014657	6
Coq.Arith.Peano_dec.dec_eq_nat	600
Coq.Arith.Peano_dec.le_unique	600
Coq.Arith.Minus.minus_n_O	600	0.0.0.0	synth with cache (only 1: symmetry; only 1: destruct n; only 1: easy; only 1: easy).	0.973470	4
Coq.Arith.Minus.minus_Sn_m	600	0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Nat.sub_succ_l; only 1: assumption).	0.988870	4
Coq.Arith.Minus.pred_of_minus	600	0.0.0	synth with cache (only 1: symmetry; only 1: Nat.nzsimpl'; only 1: easy).	0.986630	3
Coq.Arith.Minus.minus_diag_reverse	600	0.0	synth with cache (only 1: symmetry; only 1: apply Nat.sub_diag).	1.031037	2
Coq.Arith.Minus.minus_plus_simpl_l_reverse	600	0.0.0.0	synth with cache (only 1: rewrite Nat.sub_add_distr; only 1: rewrite Nat.add_comm; only 1: rewrite Nat.add_sub; only 1: easy).	0.971437	4
Coq.Arith.Minus.plus_minus	600	0.0.0	synth with cache (only 1: symmetry; only 1: apply Nat.add_sub_eq_l; only 1: easy).	0.981008	3
Coq.Arith.Minus.minus_plus	600	0.0	synth with cache (only 1: rewrite Nat.add_comm; only 1: apply Nat.add_sub).	0.982336	2
Coq.Arith.Minus.le_plus_minus_r	600	0.0.0.0.0.0.0	synth with cache (only 1: rewrite Nat.add_comm; only 1: intros ?; only 1: rewrite Nat.add_comm; only 1: rewrite Nat.add_sub_assoc; only 1: rewrite Nat.add_comm; only 1: apply Nat.add_sub; only 1: trivial).	1.053488	7
Coq.Arith.Minus.le_plus_minus	600	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: rewrite Nat.add_sub_assoc; only 1: rewrite Nat.add_comm; only 1: apply Nat.add_sub; only 1: trivial).	1.015903	6
Coq.Arith.Minus.lt_O_minus_lt	600	0	synth with cache (only 1: apply Nat.lt_add_lt_sub_r).	0.949288	1
Coq.Arith.Minus.not_le_minus_0	600	0.2.0.0.0	synth with cache (only 1: intros; only 1: apply Nat.sub_0_le; only 1: apply Nat.lt_le_incl; only 1: apply Nat.lt_nge; only 1: easy).	0.939916	13
Coq.Arith.Plus.plus_assoc_reverse	600	0.0.0.0.0.0.0.0	synth with cache (only 1: symmetry; only 1: nzinduct n; only 1: Nat.nzsimpl; only 1: easy; only 1: intros ?; only 1: Nat.nzsimpl; only 1: rewrite Nat.succ_inj_wd; only 1: easy).	1.123223	8
Coq.Arith.Plus.plus_reg_l	600	0	synth with cache (only 1: apply Nat.add_cancel_l).	0.962872	1
Coq.Arith.Plus.plus_le_reg_l	600	0	synth with cache (only 1: apply Nat.add_le_mono_l).	0.969002	1
Coq.Arith.Plus.plus_lt_reg_l	600	0	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.985503	1
Coq.Arith.Plus.plus_le_compat_l	600	0	synth with cache (only 1: apply Nat.add_le_mono_l).	1.039067	1
Coq.Arith.Plus.plus_le_compat_r	600	0	synth with cache (only 1: apply Nat.add_le_mono_r).	0.949250	1
Coq.Arith.Plus.plus_lt_compat_l	600	0	synth with cache (only 1: apply Nat.add_lt_mono_l).	1.029237	1
Coq.Arith.Plus.plus_lt_compat_r	600	0	synth with cache (only 1: apply Nat.add_lt_mono_r).	0.920620	1
Coq.Arith.Plus.plus_le_compat	600	1	synth with cache (only 1: apply Nat.add_le_mono).	0.973125	4
Coq.Arith.Plus.plus_le_lt_compat	600	1	synth with cache (only 1: apply Nat.add_le_lt_mono).	0.920144	4
Coq.Arith.Plus.plus_lt_le_compat	600	1	synth with cache (only 1: apply Nat.add_lt_le_mono).	0.947835	4
Coq.Arith.Plus.plus_lt_compat	600	1	synth with cache (only 1: apply Nat.add_lt_mono).	0.937209	4
Coq.Arith.Plus.le_plus_l	600	0	synth with cache (only 1: apply Nat.le_add_r).	0.908536	1
Coq.Arith.Plus.le_plus_r	600	0.0.0.0	synth with cache (only 1: rewrite Nat.add_comm; only 1: rewrite <- Nat.add_0_r  at 1; only 1: apply Nat.add_le_mono_l; only 1: apply Nat.le_0_l).	1.003025	4
Coq.Arith.Plus.le_plus_trans	600	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Nat.le_add_r; only 1: assumption).	0.948285	3
Coq.Arith.Plus.lt_plus_trans	600	0.0.1.0	synth with cache (only 1: intros ?; only 1: apply Nat.lt_le_trans with m; only 1: assumption; only 1: apply Nat.le_add_r).	0.939037	5
Coq.Arith.Plus.plus_is_O	600	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: split; only 1: easy; only 1: easy; only 1: split; only 1: easy; only 1: easy).	0.956283	7
Coq.Arith.Plus.plus_is_one	600	1.0.1.0.0	synth with cache (only 1: destruct m; only 1: auto; only 1: destruct m; only 1: auto; only 1: discriminate).	1.027705	13
Coq.Arith.Plus.plus_tail_plus	600
Coq.Arith.Plus.succ_plus_discr	600	0	synth with cache (only 1: apply Nat.succ_add_discr).	0.925569	1
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	600
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	600
Coq.Arith.Between.Between.bet_eq	600
Coq.Arith.Between.Between.between_le	600
Coq.Arith.Between.Between.between_Sk_l	600
Coq.Arith.Between.Between.between_restr	600
Coq.Arith.Between.Between.exists_le_S	600
Coq.Arith.Between.Between.exists_S_le	600
Coq.Arith.Between.Between.in_int_intro	600
Coq.Arith.Between.Between.in_int_lt	600
Coq.Arith.Between.Between.in_int_p_Sq	600
Coq.Arith.Between.Between.in_int_S	600
Coq.Arith.Between.Between.in_int_Sp_q	600
Coq.Arith.Between.Between.between_in_int	600
Coq.Arith.Between.Between.in_int_between	600
Coq.Arith.Between.Between.exists_in_int	600
Coq.Arith.Between.Between.in_int_exists	600
Coq.Arith.Between.Between.between_or_exists	600
Coq.Arith.Between.Between.between_not_exists	600
Coq.Arith.Between.Between.nth_le	600
Coq.Arith.Between.Between.event_O	600
Coq.Arith.Even.even_equiv	600
Coq.Arith.Even.odd_equiv	600
Coq.Arith.Even.even_or_odd	600
Coq.Arith.Even.even_odd_dec	600	0.0.0.0.0	synth with cache (only 1: induction n; only 1: auto with arith; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith).	1.007591	5
Coq.Arith.Even.not_even_and_odd	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: intros ?; only 1: intros ?; only 1: inversion H0; only 1: intros ?; only 1: intros ?; only 1: inversion H; only 1: inversion H0; only 1: auto with arith).	1.083670	17
Coq.Arith.Even.even_plus_split	600
Coq.Arith.Even.odd_plus_split	600	0	synth with cache (only 1: parity_binop).	1.011805	1
Coq.Arith.Even.even_even_plus	600	0	synth with cache (only 1: parity_binop).	0.962518	1
Coq.Arith.Even.odd_plus_l	600	0	synth with cache (only 1: parity_binop).	0.992999	1
Coq.Arith.Even.odd_plus_r	600	0	synth with cache (only 1: parity_binop).	1.008545	1
Coq.Arith.Even.odd_even_plus	600	0	synth with cache (only 1: parity_binop).	0.876988	1
Coq.Arith.Even.even_plus_aux	600	0	synth with cache (only 1: parity_binop).	0.944181	1
Coq.Arith.Even.even_plus_even_inv_r	600	0	synth with cache (only 1: parity_binop).	0.881755	1
Coq.Arith.Even.even_plus_even_inv_l	600	0	synth with cache (only 1: parity_binop).	0.943476	1
Coq.Arith.Even.even_plus_odd_inv_r	600	0	synth with cache (only 1: parity_binop).	1.011044	1
Coq.Arith.Even.even_plus_odd_inv_l	600	0	synth with cache (only 1: parity_binop).	0.988416	1
Coq.Arith.Even.odd_plus_even_inv_l	600	0	synth with cache (only 1: parity_binop).	1.004661	1
Coq.Arith.Even.odd_plus_even_inv_r	600	0	synth with cache (only 1: parity_binop).	1.008500	1
Coq.Arith.Even.odd_plus_odd_inv_l	600	0	synth with cache (only 1: parity_binop).	1.008395	1
Coq.Arith.Even.odd_plus_odd_inv_r	600	0	synth with cache (only 1: parity_binop).	0.979530	1
Coq.Arith.Even.even_mult_aux	600	0	synth with cache (only 1: parity_binop).	1.035210	1
Coq.Arith.Even.even_mult_l	600	0	synth with cache (only 1: parity_binop).	0.953922	1
Coq.Arith.Even.even_mult_r	600	0	synth with cache (only 1: parity_binop).	0.973149	1
Coq.Arith.Even.even_mult_inv_r	600	0	synth with cache (only 1: parity_binop).	0.986585	1
Coq.Arith.Even.even_mult_inv_l	600	0	synth with cache (only 1: parity_binop).	0.867141	1
Coq.Arith.Even.odd_mult	600	0	synth with cache (only 1: parity_binop).	0.958711	1
Coq.Arith.Even.odd_mult_inv_l	600	0	synth with cache (only 1: parity_binop).	0.954119	1
Coq.Arith.Even.odd_mult_inv_r	600	0	synth with cache (only 1: parity_binop).	0.951382	1
Coq.Arith.Lt.lt_le_S	600	0	synth with cache (only 1: apply Nat.le_succ_l).	0.944266	1
Coq.Arith.Lt.lt_n_Sm_le	600	0	synth with cache (only 1: apply le_S_n).	0.940060	1
Coq.Arith.Lt.le_lt_n_Sm	600	0.0.0	synth with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.947030	3
Coq.Arith.Lt.le_not_lt	600	0	synth with cache (only 1: apply Nat.le_ngt).	0.938908	1
Coq.Arith.Lt.lt_not_le	600	0	synth with cache (only 1: apply Nat.lt_nge).	0.946476	1
Coq.Arith.Lt.neq_0_lt	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nat.neq_0_lt_0; only 1: apply Nat.neq_sym; only 1: easy).	0.954386	4
Coq.Arith.Lt.lt_0_neq	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Nat.neq_sym; only 1: intros ?; only 1: rewrite H0 in H; only 1: false_hyp H Nat.lt_irrefl).	0.982312	5
Coq.Arith.Lt.lt_n_S	600	0	synth with cache (only 1: apply Nat.succ_lt_mono).	0.919237	1
Coq.Arith.Lt.lt_S_n	600	0	synth with cache (only 1: apply Nat.succ_lt_mono).	0.904659	1
Coq.Arith.Lt.S_pred	600	0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Nat.lt_succ_pred with m; only 1: easy).	0.953449	4
Coq.Arith.Lt.S_pred_pos	600	0	synth with cache (only 1: apply S_pred).	0.912800	1
Coq.Arith.Lt.lt_pred	600	0	synth with cache (only 1: apply Nat.lt_succ_lt_pred).	0.909147	1
Coq.Arith.Lt.lt_pred_n_n	600	0.0.0.2.0	synth with cache (only 1: intros; only 1: apply Nat.lt_pred_l; only 1: intros ?; only 1: rewrite H0 in H; only 1: false_hyp H Nat.lt_irrefl).	1.015696	18
Coq.Arith.Lt.le_lt_or_eq	600	0	synth with cache (only 1: apply Nat.lt_eq_cases).	0.925454	1
Coq.Arith.Lt.nat_total_order	600	0	synth with cache (only 1: apply Nat.lt_gt_cases).	0.931815	1
Coq.Arith.EqNat.eq_nat_refl	600	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.937099	5
Coq.Arith.EqNat.eq_nat_is_eq	600
Coq.Arith.EqNat.eq_eq_nat	600	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intropattern subst <- H; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.954679	7
Coq.Arith.EqNat.eq_nat_eq	600	1	synth with cache (only 1: apply eq_nat_is_eq).	0.929131	3
Coq.Arith.EqNat.eq_nat_elim	600
Coq.Arith.EqNat.eq_nat_decide	600
Coq.Arith.EqNat.beq_nat_refl	600	0.0.0	synth with cache (only 1: symmetry; only 1: apply Nat.eqb_eq; only 1: easy).	0.975564	3
Coq.Arith.EqNat.beq_nat_true	600	0	synth with cache (only 1: apply Nat.eqb_eq).	0.900485	1
Coq.Arith.EqNat.beq_nat_false	600	0	synth with cache (only 1: apply Nat.eqb_neq).	0.958550	1
Coq.Arith.EqNat.beq_nat_eq	600
Coq.Arith.PeanoNat.Nat.bi_induction	600
Coq.Arith.PeanoNat.Nat.recursion_wd	600	0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: subst y1; only 1: induction x1; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply H0; only 1: auto; only 1: auto).	0.525037	42
Coq.Arith.PeanoNat.Nat.recursion_0	600	0	synth with cache (only 1: reflexivity).	0.237277	1
Coq.Arith.PeanoNat.Nat.recursion_succ	600
Coq.Arith.PeanoNat.Nat.pred_succ	600	0	synth with cache (only 1: reflexivity).	0.230508	1
Coq.Arith.PeanoNat.Nat.pred_0	600	0	synth with cache (only 1: reflexivity).	0.189931	1
Coq.Arith.PeanoNat.Nat.one_succ	600	0	synth with cache (only 1: reflexivity).	0.185380	1
Coq.Arith.PeanoNat.Nat.two_succ	600	0	synth with cache (only 1: reflexivity).	0.179351	1
Coq.Arith.PeanoNat.Nat.add_0_l	600	0	synth with cache (only 1: reflexivity).	0.180812	1
Coq.Arith.PeanoNat.Nat.add_succ_l	600	0	synth with cache (only 1: reflexivity).	0.231595	1
Coq.Arith.PeanoNat.Nat.sub_0_r	600	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.189544	3
Coq.Arith.PeanoNat.Nat.sub_succ_r	600
Coq.Arith.PeanoNat.Nat.mul_0_l	600	0	synth with cache (only 1: reflexivity).	0.177921	1
Coq.Arith.PeanoNat.Nat.mul_succ_l	600
Coq.Arith.PeanoNat.Nat.lt_succ_r	600	0.0.0.0.0	synth with cache (only 1: split; only 1: apply le_S_n; only 1: induction 1; only 1: auto; only 1: auto).	0.230766	5
Coq.Arith.PeanoNat.Nat.eqb_eq	600
Coq.Arith.PeanoNat.Nat.leb_le	600
Coq.Arith.PeanoNat.Nat.ltb_lt	600	0	synth with cache (only 1: apply leb_le).	0.271993	1
Coq.Arith.PeanoNat.Nat.eq_dec	600
Coq.Arith.PeanoNat.Nat.compare_eq_iff	600
Coq.Arith.PeanoNat.Nat.compare_lt_iff	600
Coq.Arith.PeanoNat.Nat.compare_le_iff	600
Coq.Arith.PeanoNat.Nat.compare_antisym	600
Coq.Arith.PeanoNat.Nat.compare_succ	600	0	synth with cache (only 1: reflexivity).	0.290460	1
Coq.Arith.PeanoNat.Nat.max_l	600	0	synth with cache (only 1: exact max_l).	0.292584	1
Coq.Arith.PeanoNat.Nat.max_r	600	0	synth with cache (only 1: exact max_r).	0.291624	1
Coq.Arith.PeanoNat.Nat.min_l	600	0	synth with cache (only 1: exact min_l).	0.277025	1
Coq.Arith.PeanoNat.Nat.min_r	600	0	synth with cache (only 1: exact min_r).	0.274565	1
Coq.Arith.PeanoNat.Nat.pow_neg_r	600	0	synth with cache (only 1: inversion 1).	0.599328	1
Coq.Arith.PeanoNat.Nat.pow_0_r	600	0	synth with cache (only 1: reflexivity).	0.579056	1
Coq.Arith.PeanoNat.Nat.pow_succ_r	600	0	synth with cache (only 1: reflexivity).	0.533643	1
Coq.Arith.PeanoNat.Nat.square_spec	600	0	synth with cache (only 1: reflexivity).	0.520660	1
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	600
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	600
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: destruct x; only 1: easy; only 1: easy).	0.557501	5
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	600
Coq.Arith.PeanoNat.Nat.even_spec	600
Coq.Arith.PeanoNat.Nat.odd_spec	600
Coq.Arith.PeanoNat.Nat.divmod_spec	600
Coq.Arith.PeanoNat.Nat.div_mod	600
Coq.Arith.PeanoNat.Nat.mod_bound_pos	600	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: apply le_0_l; only 1: destruct y; only 1: elim H0; only 1: easy; only 1: easy; only 1: clear H0; only 1: unfold Init.Nat.modulo; only 1: apply lt_succ_r; only 1: apply le_sub_l).	0.823006	20
Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	600
Coq.Arith.PeanoNat.Nat.sqrt_specif	600
Coq.Arith.PeanoNat.Nat.sqrt_neg	600	0	synth with cache (only 1: inversion 1).	0.623584	1
Coq.Arith.PeanoNat.Nat.log2_iter_spec	600
Coq.Arith.PeanoNat.Nat.log2_spec	600
Coq.Arith.PeanoNat.Nat.log2_nonpos	600	0.0.0	synth with cache (only 1: inversion 1; only 1: subst; only 1: easy).	0.602396	3
Coq.Arith.PeanoNat.Nat.gcd_divide	600
Coq.Arith.PeanoNat.Nat.gcd_divide_l	600	0.0	synth with cache (only 1: intros; only 1: apply gcd_divide).	0.568111	2
Coq.Arith.PeanoNat.Nat.gcd_divide_r	600	0.0	synth with cache (only 1: intros; only 1: apply gcd_divide).	0.545742	2
Coq.Arith.PeanoNat.Nat.gcd_greatest	600
Coq.Arith.PeanoNat.Nat.gcd_nonneg	600	0	synth with cache (only 1: apply le_0_l).	0.558895	1
Coq.Arith.PeanoNat.Nat.div2_double	600	0.0.0.0.1.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl Init.Nat.mul; only 1: rewrite add_succ_r; only 1: simpl; only 1: f_equal; only 1: easy).	0.567436	19
Coq.Arith.PeanoNat.Nat.div2_succ_double	600	0.0.0.1.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: rewrite add_succ_r; only 1: easy).	0.698431	18
Coq.Arith.PeanoNat.Nat.le_div2	600
Coq.Arith.PeanoNat.Nat.lt_div2	600	1.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: inversion 1; only 1: intros ?; only 1: clear H; only 1: apply lt_succ_r; only 1: apply le_div2).	0.594133	7
Coq.Arith.PeanoNat.Nat.div2_decr	600	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: intros ?; only 1: simpl; only 1: apply le_succ_r in H; only 1: destruct H; only 1: trivial; only 1: symmetry in H; only 1: false_hyp H neq_succ_0; only 1: intros ?; only 1: apply succ_le_mono in H; only 1: apply le_trans with a; only 1: apply le_div2; only 1: trivial).	0.724278	21
Coq.Arith.PeanoNat.Nat.double_twice	600	0.0.0.0	synth with cache (only 1: simpl; only 1: intros; only 1: rewrite add_0_r; only 1: easy).	0.563380	4
Coq.Arith.PeanoNat.Nat.testbit_0_l	600
Coq.Arith.PeanoNat.Nat.testbit_odd_0	600	0.0.0.0	synth with cache (only 1: unfold Init.Nat.testbit; only 1: rewrite odd_spec; only 1: exists a; only 1: easy).	0.597245	4
Coq.Arith.PeanoNat.Nat.testbit_even_0	600
Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	600	0.0.0.0.0	synth with cache (only 1: unfold Init.Nat.testbit; only 1: fold Init.Nat.testbit; only 1: rewrite add_1_r; only 1: f_equal; only 1: apply div2_succ_double).	0.713893	5
Coq.Arith.PeanoNat.Nat.testbit_even_succ'	600	0.0.0.0	synth with cache (only 1: unfold Init.Nat.testbit; only 1: fold Init.Nat.testbit; only 1: f_equal; only 1: apply div2_double).	0.670501	4
Coq.Arith.PeanoNat.Nat.shiftr_specif	600
Coq.Arith.PeanoNat.Nat.shiftl_specif_high	600
Coq.Arith.PeanoNat.Nat.shiftl_spec_low	600
Coq.Arith.PeanoNat.Nat.div2_bitwise	600
Coq.Arith.PeanoNat.Nat.odd_bitwise	600
Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	600
Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	600
Coq.Arith.PeanoNat.Nat.land_spec	600	0.0.0.0	synth with cache (only 1: unfold Init.Nat.land; only 1: apply testbit_bitwise_1; only 1: trivial; only 1: trivial).	0.639195	4
Coq.Arith.PeanoNat.Nat.ldiff_spec	600	0.0.0.0	synth with cache (only 1: unfold Init.Nat.ldiff; only 1: apply testbit_bitwise_1; only 1: trivial; only 1: trivial).	0.722986	4
Coq.Arith.PeanoNat.Nat.lor_spec	600
Coq.Arith.PeanoNat.Nat.lxor_spec	600
Coq.Arith.PeanoNat.Nat.div2_spec	600	0	synth with cache (only 1: reflexivity).	0.665407	1
Coq.Arith.PeanoNat.Nat.testbit_neg_r	600	0	synth with cache (only 1: inversion H).	0.650776	1
Coq.Arith.PeanoNat.Nat.tail_add_spec	600	0.0.0.1.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: rewrite IHn; only 1: rewrite add_succ_r; only 1: easy).	0.937449	17
Coq.Arith.PeanoNat.Nat.tail_addmul_spec	600	0.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: revert m r; only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHn; only 1: rewrite tail_add_spec; only 1: rewrite add_assoc; only 1: f_equal; only 1: apply add_comm).	0.981915	30
Coq.Arith.PeanoNat.Nat.tail_mul_spec	600	0.0.0	synth with cache (only 1: unfold Init.Nat.tail_mul; only 1: rewrite tail_addmul_spec; only 1: easy).	0.915805	3
Coq.Arith.PeanoNat.TestOrder.test	600	2	synth with cache (only 1: Nat.order).	1.295379	28
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	600
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	600
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	600
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	600
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	600
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	600
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	600
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	600
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	600
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	600
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	600
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_abs	600
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_nonneg	600
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_abs_sgn	600
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	600
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	600
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	600
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	600
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	600
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	600
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	600
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	600
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	600
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	600
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	600
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	600
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_l	600
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	600
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_l	600
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_r	600
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	600
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_r	600
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	600
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_mult_diag_r	600
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_diag_r	600
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	600
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.Bezout_wd	600
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.bezout_1_gcd	600
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_bezout	600
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l	600
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	600
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	600
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r_nonneg	600
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gauss	600
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	600
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	600
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	600
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	600
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	600
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	600
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	600
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	600
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	600
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	600
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	600
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	600
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	600
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	600
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	600
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	600
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	600
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	600
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	600
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	600
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	600
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	600
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	600
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	600
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	600
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	600
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	600
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	600
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	600
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	600
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	600
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	600
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	600
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	600
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	600
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	600
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	600
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	600
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	600
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	600
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	600
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	600
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	600
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	600
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	600
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	600
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	600
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	600
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	600
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	600
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	600
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	600
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	600
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	600
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_least	600
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_comm	600
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	600
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	600
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	600
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_assoc	600
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	600
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_r	600
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_l	600
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	600
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_diag	600
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_eq_0	600
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_eq_r	600
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_iff	600
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	600
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_r	600
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_1_lcm_mul	600
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	600
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	600
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	600
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	600
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	600
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	600
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	600
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	600
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	600
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	600
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	600
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	600
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	600
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	600
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	600
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	600
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	600
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	600
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	600
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	600
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	600
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	600
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	600
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	600
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	600
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	600
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	600
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	600
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	600
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	600
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	600
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	600
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	600
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	600
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	600
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	600
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	600
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_l	600
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_r	600
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l_iff	600
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l_iff	600
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r_iff	600
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r_iff	600
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_lin_r	600
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	600
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	600
Coq.Numbers.Natural.Abstract.NPow.NPowProp.even_pow	600
Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	600
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	600
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	600
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	600
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	600
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	600
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	600
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	600
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos_pos	600
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	600
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	600
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_l	600
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_r	600
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gauss	600
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_mul_split	600
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	600
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	600
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	600
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	600
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	600
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	600
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	600
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	600
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	600
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	600
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_alt	600
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec0_wd	600
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_wd	600
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_0	600
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_succ	600
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0	600
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_more_steps	600
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_fixpoint	600
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_fixpoint	600
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0_any	600
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_any_fst_arg	600
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	600
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	600
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	600
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	600
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	600
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	600
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	600
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	600
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	600
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_r	600
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_l	600
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_r	600
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_l	600
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_r	600
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	600
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	600
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_l	600
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	600
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	600
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	600
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	600
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	600
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	600
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	600
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_le	600
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_or	600
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.add_sqrt_le	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	600
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	600
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	600
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	600
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	600
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	600
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	600
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	600
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	600
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	600
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	600
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	600
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_simpl_nonpos	600
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	600
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_neg	600
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	600
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	600
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	600
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_m1_mul_r	600
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.eq_mul_1	600
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	600
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	600
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_l	600
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_r	600
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_r	600
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	600
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	600
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	600
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	600
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	600
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	600
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	600
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	600
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	600
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	600
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	600
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	600
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	600
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	600
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	600
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	600
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	600
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	600
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	600
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	600
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	600
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	600
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	600
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	600
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	600
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	600
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	600
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	600
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	600
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	600
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	600
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	600
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	600
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	600
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	600
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	600
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	600
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	600
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	600
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	600
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	600
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	600
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	600
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	600
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	600
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	600
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	600
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	600
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	600
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	600
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	600
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	600
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	600
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	600
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	600
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	600
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	600
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	600
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	600
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	600
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	600
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	600
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	600
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	600
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	600
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	600
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	600
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	600
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	600
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	600
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	600
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	600
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	600
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	600
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	600
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	600
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	600
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	600
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	600
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	600
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.PosNeg.zero_pos_neg	600
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	600
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	600
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	600
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	600
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	600
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	600
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.lt_0_mul'	600
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.eq_mul_1	600
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	600
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	600
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	600
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	600
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	600
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	600
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	600
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	600
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	600
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	600
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	600
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	600
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	600
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	600
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	600
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	600
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	600
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	600
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	600
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	600
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	600
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	600
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	600
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	600
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	600
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	600
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	600
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	600
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	600
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	600
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	600
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	600
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	600
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	600
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	600
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	600
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	600
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	600
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.le_ind_rel	600
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.lt_ind_rel	600
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	600
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	600
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	600
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	600
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	600
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	600
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	600
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	600
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	600
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	600
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	600
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	600
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	600
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	600
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	600
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	600
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	600
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	600
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	600
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	600
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	600
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_l	600
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	600
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	600
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	600
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	600
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	600
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	600
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	600
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	600
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	600
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	600
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	600
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	600
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	600
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	600
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	600
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	600
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	600
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	600
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	600
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	600
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	600
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	600
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	600
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	600
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	600
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	600
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	600
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	600
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	600
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	600
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	600
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	600
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	600
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	600
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	600
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	600
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	600
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	600
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	600
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	600
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	600
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	600
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	600
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	600
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	600
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	600
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	600
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	600
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	600
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	600
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	600
Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	600
Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	600
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	600
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	600
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	600
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	600
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	600
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	600
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	600
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	600
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	600
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	600
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	600
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	600
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	600
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	600
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	600
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	600
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	600
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.PairInduction.pair_induction	600
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.TwoDimensionalInduction.two_dim_induction	600
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.DoubleInduction.double_induction	600
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	600
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	600
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	600
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	600
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	600
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	600
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	600
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	600
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	600
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	600
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	600
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	600
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	600
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	600
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	600
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	600
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	600
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	600
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	600
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	600
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	600
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	600
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	600
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	600
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	600
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	600
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	600
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	600
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	600
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	600
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	600
Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	600
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	600
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	600
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	600
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	600
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	600
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	600
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	600
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	600
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	600
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	600
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	600
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	600
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	600
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	600
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	600
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	600
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	600
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	600
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	600
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	600
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	600
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	600
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	600
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	600
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	600
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	600
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	600
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	600
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	600
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	600
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	600
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	600
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	600
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	600
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	600
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	600
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	600
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	600
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	600
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	600
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	600
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	600
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	600
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	600
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	600
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	600
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	600
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	600
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	600
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	600
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	600
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	600
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	600
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	600
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	600
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	600
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	600
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	600
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	600
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	600
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	600
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	600
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	600
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	600
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	600
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	600
Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	600
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	600
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	600
Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	600
Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	600
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	600
Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	600
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	600
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	600
Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	600
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	600
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	600
Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	600
Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	600
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	600
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	600
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	600
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	600
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	600
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	600
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	600
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	600
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	600
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	600
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	600
Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	600
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	600
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	600
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	600
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	600
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	600
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	600
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	600
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	600
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	600
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	600
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	600
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	600
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	600
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	600
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	600
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	600
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	600
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	600
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	600
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	600
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	600
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	600
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	600
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	600
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	600
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	600
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	600
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	600
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	600
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	600
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	600
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	600
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	600
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	600
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	600
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	600
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	600
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	600
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	600
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	600
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	600
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	600
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	600
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	600
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	600
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	600
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	600
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	600
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	600
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	600
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	600
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	600
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	600
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	600
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	600
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	600
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	600
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	600
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	600
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	600
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	600
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	600
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	600
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	600
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	600
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	600
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	600
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	600
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	600
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	600
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	600
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	600
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	600
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	600
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	600
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	600
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	600
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	600
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	600
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	600
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	600
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	600
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	600
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	600
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	600
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	600
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	600
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	600
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	600
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	600
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	600
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	600
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	600
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	600
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	600
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	600
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	600
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	600
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	600
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	600
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	600
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs_rs'	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs'_rs''	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rbase	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.A'A_right	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction'	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction'	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls_ls'	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls'_ls''	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.lbase	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.A'A_left	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction'	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction'	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction'	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.lt_ind	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.le_ind	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rlt_wd	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rgt_wd	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.lt_wf	600
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.gt_wf	600
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	600
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	600
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	600
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	600
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	600
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	600
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	600
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	600
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	600
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	600
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	600
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	600
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	600
Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	600
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	600
Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	600
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	600
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	600
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	600
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	600
Coq.Numbers.NatInt.NZBase.NZBaseProp.CentralInduction.central_induction	600
Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	600
Coq.Structures.GenericMinMax.GenericMinMax.max_l	600
Coq.Structures.GenericMinMax.GenericMinMax.max_r	600
Coq.Structures.GenericMinMax.GenericMinMax.min_l	600
Coq.Structures.GenericMinMax.GenericMinMax.min_r	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	600
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	600
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	600
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	600
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	600
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	600
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	600
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	600
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	600
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	600
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	600
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	600
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	600
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	600
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	600
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	600
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	600
Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	600
Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	600
Coq.Structures.OrdersFacts.CompareFacts.compare_eq	600
Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	600
Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	600
Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	600
Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	600
Coq.Structures.OrdersFacts.CompareFacts.compare_compat	600
Coq.Structures.OrdersFacts.CompareFacts.compare_refl	600
Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	600
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	600
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	600
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	600
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	600
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	600
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	600
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	600
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	600
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	600
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	600
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	600
Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	600
Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	600
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	600
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	600
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	600
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	600
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	600
Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	600
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	600
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	600
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	600
Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	600
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	600
Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	600
Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	600
Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	600
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	600
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	600
Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	600
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	600
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	600
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	600
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	600
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	600
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	600
Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	600
Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	600
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	600
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	600
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	600
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	600
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	600
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	600
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	600
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	600
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	600
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	600
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	600
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	600
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	600
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	600
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	600
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	600
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	600
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	600
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	600
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	600
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	600
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	600
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	600
Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	600
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	600
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	600
Coq.Structures.OrdersTac.OrderFacts.eq_refl	600
Coq.Structures.OrdersTac.OrderFacts.le_refl	600
Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	600
Coq.Structures.OrdersTac.OrderFacts.eq_sym	600
Coq.Structures.OrdersTac.OrderFacts.le_antisym	600
Coq.Structures.OrdersTac.OrderFacts.neq_sym	600
Coq.Structures.OrdersTac.OrderFacts.trans	600
Coq.Structures.OrdersTac.OrderFacts.eq_neq	600
Coq.Structures.OrdersTac.OrderFacts.neq_eq	600
Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	600
Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	600
Coq.Structures.OrdersTac.OrderFacts.not_gt_le	600
Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	600
Coq.Structures.Orders.Compare2EqBool.eqb_eq	600
Coq.Structures.Orders.OT_to_Full.le_lteq	600
Coq.Structures.Orders.OTF_LtIsTotal.lt_total	600
Coq.Structures.Orders.OTF_to_TTLB.leb_le	600
Coq.Structures.Orders.OTF_to_TTLB.leb_total	600
Coq.Structures.Orders.OTF_to_TTLB.leb_trans	600
Coq.Structures.Orders.TTLB_to_OTF.compare_spec	600
Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	600
Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	600
Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	600
Coq.Structures.Orders.TTLB_to_OTF.lt_compat	600
Coq.Structures.Orders.TTLB_to_OTF.le_lteq	600
Coq.Structures.Equalities.UpdateEq.eq_equiv	600
Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	600
Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	600
Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	600
Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	600
Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	600
Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	600
Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	600
Coq.ssr.ssrbool.prop_congr	600
Coq.ssr.ssrbool.is_true_true	600	0	synth with cache (only 1: by [  ]).	0.182921	1
Coq.ssr.ssrbool.not_false_is_true	600	0	synth with cache (only 1: by [  ]).	0.183483	1
Coq.ssr.ssrbool.is_true_locked_true	600
Coq.ssr.ssrbool.negbT	600
Coq.ssr.ssrbool.negbTE	600
Coq.ssr.ssrbool.negbF	600
Coq.ssr.ssrbool.negbFE	600
Coq.ssr.ssrbool.negbK	600	0	synth with cache (only 1: by case).	0.171044	1
Coq.ssr.ssrbool.negbNE	600
Coq.ssr.ssrbool.negb_inj	600	0	synth with cache (only 1: exact : can_inj negbK ).	0.172079	1
Coq.ssr.ssrbool.negbLR	600	0	synth with cache (only 1: exact : canLR negbK ).	0.168752	1
Coq.ssr.ssrbool.negbRL	600	0	synth with cache (only 1: exact : canRL negbK ).	0.180921	1
Coq.ssr.ssrbool.contra	600
Coq.ssr.ssrbool.contraL	600
Coq.ssr.ssrbool.contraR	600
Coq.ssr.ssrbool.contraLR	600
Coq.ssr.ssrbool.contraT	600
Coq.ssr.ssrbool.wlog_neg	600
Coq.ssr.ssrbool.contraFT	600
Coq.ssr.ssrbool.contraFN	600
Coq.ssr.ssrbool.contraTF	600
Coq.ssr.ssrbool.contraNF	600
Coq.ssr.ssrbool.contraFF	600
Coq.ssr.ssrbool.BoolIf.ifP	600
Coq.ssr.ssrbool.BoolIf.ifPn	600
Coq.ssr.ssrbool.BoolIf.ifT	600
Coq.ssr.ssrbool.BoolIf.ifF	600
Coq.ssr.ssrbool.BoolIf.ifN	600
Coq.ssr.ssrbool.BoolIf.if_same	600
Coq.ssr.ssrbool.BoolIf.if_neg	600
Coq.ssr.ssrbool.BoolIf.fun_if	600
Coq.ssr.ssrbool.BoolIf.if_arg	600
Coq.ssr.ssrbool.BoolIf.ifE	600
Coq.ssr.ssrbool.ReflectCore.introNTF	600
Coq.ssr.ssrbool.ReflectCore.introTF	600
Coq.ssr.ssrbool.ReflectCore.elimNTF	600
Coq.ssr.ssrbool.ReflectCore.elimTF	600
Coq.ssr.ssrbool.ReflectCore.equivPif	600
Coq.ssr.ssrbool.ReflectCore.xorPif	600
Coq.ssr.ssrbool.ReflectNegCore.introTFn	600
Coq.ssr.ssrbool.ReflectNegCore.elimTFn	600
Coq.ssr.ssrbool.ReflectNegCore.equivPifn	600
Coq.ssr.ssrbool.ReflectNegCore.xorPifn	600
Coq.ssr.ssrbool.Reflect.introT	600
Coq.ssr.ssrbool.Reflect.introF	600
Coq.ssr.ssrbool.Reflect.introN	600
Coq.ssr.ssrbool.Reflect.introNf	600
Coq.ssr.ssrbool.Reflect.introTn	600
Coq.ssr.ssrbool.Reflect.introFn	600
Coq.ssr.ssrbool.Reflect.elimT	600
Coq.ssr.ssrbool.Reflect.elimF	600
Coq.ssr.ssrbool.Reflect.elimN	600
Coq.ssr.ssrbool.Reflect.elimNf	600
Coq.ssr.ssrbool.Reflect.elimTn	600
Coq.ssr.ssrbool.Reflect.elimFn	600
Coq.ssr.ssrbool.Reflect.introP	600
Coq.ssr.ssrbool.Reflect.iffP	600
Coq.ssr.ssrbool.Reflect.equivP	600
Coq.ssr.ssrbool.Reflect.sumboolP	600
Coq.ssr.ssrbool.Reflect.appP	600
Coq.ssr.ssrbool.Reflect.sameP	600
Coq.ssr.ssrbool.Reflect.decPcases	600
Coq.ssr.ssrbool.Reflect.decP	600
Coq.ssr.ssrbool.Reflect.rwP	600
Coq.ssr.ssrbool.Reflect.rwP2	600
Coq.ssr.ssrbool.Reflect.altP	600
Coq.ssr.ssrbool.impliesP	600	0	synth with cache (only 1: by case).	0.161154	1
Coq.ssr.ssrbool.impliesPn	600
Coq.ssr.ssrbool.unlessL	600
Coq.ssr.ssrbool.unlessR	600
Coq.ssr.ssrbool.unless_sym	600
Coq.ssr.ssrbool.unlessP	600
Coq.ssr.ssrbool.bind_unless	600
Coq.ssr.ssrbool.unless_contra	600
Coq.ssr.ssrbool.classicP	600
Coq.ssr.ssrbool.classicW	600
Coq.ssr.ssrbool.classic_bind	600
Coq.ssr.ssrbool.classic_EM	600
Coq.ssr.ssrbool.classic_pick	600
Coq.ssr.ssrbool.classic_imply	600
Coq.ssr.ssrbool.AllAnd.all_and2	600
Coq.ssr.ssrbool.AllAnd.all_and3	600
Coq.ssr.ssrbool.AllAnd.all_and4	600
Coq.ssr.ssrbool.AllAnd.all_and5	600
Coq.ssr.ssrbool.pair_andP	600
Coq.ssr.ssrbool.ReflectConnectives.idP	600
Coq.ssr.ssrbool.ReflectConnectives.boolP	600
Coq.ssr.ssrbool.ReflectConnectives.idPn	600
Coq.ssr.ssrbool.ReflectConnectives.negP	600
Coq.ssr.ssrbool.ReflectConnectives.negPn	600
Coq.ssr.ssrbool.ReflectConnectives.negPf	600
Coq.ssr.ssrbool.ReflectConnectives.andP	600
Coq.ssr.ssrbool.ReflectConnectives.and3P	600
Coq.ssr.ssrbool.ReflectConnectives.and4P	600
Coq.ssr.ssrbool.ReflectConnectives.and5P	600
Coq.ssr.ssrbool.ReflectConnectives.orP	600
Coq.ssr.ssrbool.ReflectConnectives.or3P	600
Coq.ssr.ssrbool.ReflectConnectives.or4P	600
Coq.ssr.ssrbool.ReflectConnectives.nandP	600
Coq.ssr.ssrbool.ReflectConnectives.norP	600
Coq.ssr.ssrbool.ReflectConnectives.implyP	600
Coq.ssr.ssrbool.andTb	600	0	synth with cache (only 1: by [  ]).	0.225522	1
Coq.ssr.ssrbool.andFb	600	0	synth with cache (only 1: by [  ]).	0.225526	1
Coq.ssr.ssrbool.andbT	600	0	synth with cache (only 1: by case).	0.231730	1
Coq.ssr.ssrbool.andbF	600	0	synth with cache (only 1: by case).	0.225947	1
Coq.ssr.ssrbool.andbb	600	0	synth with cache (only 1: by case).	0.215297	1
Coq.ssr.ssrbool.andbC	600
Coq.ssr.ssrbool.andbA	600
Coq.ssr.ssrbool.andbCA	600	0	synth with cache (only 1: by do 3!case).	0.202983	1
Coq.ssr.ssrbool.andbAC	600	0	synth with cache (only 1: by do 3!case).	0.248156	1
Coq.ssr.ssrbool.andbACA	600
Coq.ssr.ssrbool.orTb	600	0	synth with cache (only 1: by [  ]).	0.199404	1
Coq.ssr.ssrbool.orFb	600	0	synth with cache (only 1: by [  ]).	0.239355	1
Coq.ssr.ssrbool.orbT	600	0	synth with cache (only 1: by case).	0.193229	1
Coq.ssr.ssrbool.orbF	600	0	synth with cache (only 1: by case).	0.234333	1
Coq.ssr.ssrbool.orbb	600	0	synth with cache (only 1: by case).	0.180268	1
Coq.ssr.ssrbool.orbC	600	0	synth with cache (only 1: by do 2!case).	0.220189	1
Coq.ssr.ssrbool.orbA	600	0	synth with cache (only 1: by do 3!case).	0.214744	1
Coq.ssr.ssrbool.orbCA	600	0	synth with cache (only 1: by do 3!case).	0.200856	1
Coq.ssr.ssrbool.orbAC	600	0	synth with cache (only 1: by do 3!case).	0.251717	1
Coq.ssr.ssrbool.orbACA	600	0	synth with cache (only 1: by do 4!case).	0.237510	1
Coq.ssr.ssrbool.andbN	600
Coq.ssr.ssrbool.andNb	600
Coq.ssr.ssrbool.orbN	600
Coq.ssr.ssrbool.orNb	600
Coq.ssr.ssrbool.andb_orl	600	0	synth with cache (only 1: by do 3!case).	0.203855	1
Coq.ssr.ssrbool.andb_orr	600	0	synth with cache (only 1: by do 3!case).	0.242210	1
Coq.ssr.ssrbool.orb_andl	600	0	synth with cache (only 1: by do 3!case).	0.211553	1
Coq.ssr.ssrbool.orb_andr	600	0	synth with cache (only 1: by do 3!case).	0.250795	1
Coq.ssr.ssrbool.andb_idl	600
Coq.ssr.ssrbool.andb_idr	600
Coq.ssr.ssrbool.andb_id2l	600
Coq.ssr.ssrbool.andb_id2r	600
Coq.ssr.ssrbool.orb_idl	600
Coq.ssr.ssrbool.orb_idr	600
Coq.ssr.ssrbool.orb_id2l	600
Coq.ssr.ssrbool.orb_id2r	600
Coq.ssr.ssrbool.negb_and	600
Coq.ssr.ssrbool.negb_or	600
Coq.ssr.ssrbool.andbK	600
Coq.ssr.ssrbool.andKb	600
Coq.ssr.ssrbool.orbK	600
Coq.ssr.ssrbool.orKb	600
Coq.ssr.ssrbool.implybT	600
Coq.ssr.ssrbool.implybF	600
Coq.ssr.ssrbool.implyFb	600	0	synth with cache (only 1: by [  ]).	0.222410	1
Coq.ssr.ssrbool.implyTb	600	0	synth with cache (only 1: by [  ]).	0.184292	1
Coq.ssr.ssrbool.implybb	600
Coq.ssr.ssrbool.negb_imply	600
Coq.ssr.ssrbool.implybE	600
Coq.ssr.ssrbool.implyNb	600
Coq.ssr.ssrbool.implybN	600
Coq.ssr.ssrbool.implybNN	600
Coq.ssr.ssrbool.implyb_idl	600
Coq.ssr.ssrbool.implyb_idr	600
Coq.ssr.ssrbool.implyb_id2l	600
Coq.ssr.ssrbool.addFb	600	0	synth with cache (only 1: by [  ]).	0.224852	1
Coq.ssr.ssrbool.addbF	600	0	synth with cache (only 1: by case).	0.178615	1
Coq.ssr.ssrbool.addbb	600	0	synth with cache (only 1: by case).	0.213910	1
Coq.ssr.ssrbool.addbC	600	0	synth with cache (only 1: by do 2!case).	0.170742	1
Coq.ssr.ssrbool.addbA	600	0	synth with cache (only 1: by do 3!case).	0.179923	1
Coq.ssr.ssrbool.addbCA	600	0	synth with cache (only 1: by do 3!case).	0.223227	1
Coq.ssr.ssrbool.addbAC	600	0	synth with cache (only 1: by do 3!case).	0.199837	1
Coq.ssr.ssrbool.addbACA	600	0	synth with cache (only 1: by do 4!case).	0.239264	1
Coq.ssr.ssrbool.andb_addl	600	0	synth with cache (only 1: by do 3!case).	0.202349	1
Coq.ssr.ssrbool.andb_addr	600	0	synth with cache (only 1: by do 3!case).	0.248332	1
Coq.ssr.ssrbool.addKb	600	0	synth with cache (only 1: by do 2!case).	0.205016	1
Coq.ssr.ssrbool.addbK	600	0	synth with cache (only 1: by do 2!case).	0.201602	1
Coq.ssr.ssrbool.addIb	600	0	synth with cache (only 1: by do 3!case).	0.198004	1
Coq.ssr.ssrbool.addbI	600	0	synth with cache (only 1: by do 3!case).	0.201960	1
Coq.ssr.ssrbool.addTb	600	0	synth with cache (only 1: by [  ]).	0.245230	1
Coq.ssr.ssrbool.addbT	600
Coq.ssr.ssrbool.addbN	600
Coq.ssr.ssrbool.addNb	600
Coq.ssr.ssrbool.addbP	600
Coq.ssr.ssrbool.subrelUl	600
Coq.ssr.ssrbool.subrelUr	600
Coq.ssr.ssrbool.sub_refl	600	0	synth with cache (only 1: by [  ]).	0.296369	1
Coq.ssr.ssrbool.PredicateSimplification.mem_topred	600
Coq.ssr.ssrbool.PredicateSimplification.topredE	600
Coq.ssr.ssrbool.PredicateSimplification.app_predE	600
Coq.ssr.ssrbool.PredicateSimplification.in_applicative	600
Coq.ssr.ssrbool.PredicateSimplification.in_collective	600
Coq.ssr.ssrbool.PredicateSimplification.in_simpl	600
Coq.ssr.ssrbool.PredicateSimplification.unfold_in	600
Coq.ssr.ssrbool.PredicateSimplification.simpl_predE	600
Coq.ssr.ssrbool.PredicateSimplification.mem_simpl	600
Coq.ssr.ssrbool.PredicateSimplification.mem_mem	600
Coq.ssr.ssrbool.qualifE	600	0	synth with cache (only 1: by [  ]).	0.294365	1
Coq.ssr.ssrbool.KeyPred.keyed_predE	600
Coq.ssr.ssrbool.KeyedQualifier.keyed_qualifier_suproof	600
Coq.ssr.ssrbool.all_tag_cond_dep	600
Coq.ssr.ssrbool.all_tag_cond	600
Coq.ssr.ssrbool.all_sig_cond_dep	600
Coq.ssr.ssrbool.all_sig_cond	600
Coq.ssr.ssrbool.RelationProperties.symmetric_from_pre	600
Coq.ssr.ssrbool.RelationProperties.PER.sym_left_transitive	600
Coq.ssr.ssrbool.RelationProperties.PER.sym_right_transitive	600
Coq.ssr.ssrbool.RelationProperties.equivalence_relP	600
Coq.ssr.ssrbool.rev_trans	600
Coq.ssr.ssrbool.LocalProperties.forE	600
Coq.ssr.ssrbool.LocalGlobal.in1W	600
Coq.ssr.ssrbool.LocalGlobal.in2W	600
Coq.ssr.ssrbool.LocalGlobal.in3W	600
Coq.ssr.ssrbool.LocalGlobal.in1T	600
Coq.ssr.ssrbool.LocalGlobal.in2T	600
Coq.ssr.ssrbool.LocalGlobal.in3T	600
Coq.ssr.ssrbool.LocalGlobal.sub_in1	600
Coq.ssr.ssrbool.LocalGlobal.sub_in11	600
Coq.ssr.ssrbool.LocalGlobal.sub_in111	600
Coq.ssr.ssrbool.LocalGlobal.on1W	600
Coq.ssr.ssrbool.LocalGlobal.on1lW	600
Coq.ssr.ssrbool.LocalGlobal.on2W	600
Coq.ssr.ssrbool.LocalGlobal.on1T	600
Coq.ssr.ssrbool.LocalGlobal.on1lT	600
Coq.ssr.ssrbool.LocalGlobal.on2T	600
Coq.ssr.ssrbool.LocalGlobal.subon1	600
Coq.ssr.ssrbool.LocalGlobal.subon1l	600
Coq.ssr.ssrbool.LocalGlobal.subon2	600
Coq.ssr.ssrbool.LocalGlobal.can_in_inj	600
Coq.ssr.ssrbool.LocalGlobal.canLR_in	600
Coq.ssr.ssrbool.LocalGlobal.canRL_in	600
Coq.ssr.ssrbool.LocalGlobal.on_can_inj	600
Coq.ssr.ssrbool.LocalGlobal.canLR_on	600
Coq.ssr.ssrbool.LocalGlobal.canRL_on	600
Coq.ssr.ssrbool.LocalGlobal.inW_bij	600
Coq.ssr.ssrbool.LocalGlobal.onW_bij	600
Coq.ssr.ssrbool.LocalGlobal.inT_bij	600
Coq.ssr.ssrbool.LocalGlobal.onT_bij	600
Coq.ssr.ssrbool.LocalGlobal.sub_in_bij	600
Coq.ssr.ssrbool.LocalGlobal.subon_bij	600
Coq.ssr.ssrbool.sub_in2	600
Coq.ssr.ssrbool.sub_in3	600
Coq.ssr.ssrbool.sub_in12	600
Coq.ssr.ssrbool.sub_in21	600
Coq.ssr.ssrbool.equivalence_relP_in	600
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoW	600
Coq.ssr.ssrbool.MonoHomoMorphismTheory.mono2W	600
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoRL	600
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoLR	600
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homo_mono	600
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoLR	600
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoRL	600
Coq.ssr.ssrbool.MonoHomoMorphismTheory.can_mono	600
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoW_in	600
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.mono2W_in	600
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoRL_in	600
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoLR_in	600
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homo_mono_in	600
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoLR_in	600
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoRL_in	600
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.can_mono_in	600
Coq.Setoids.Setoid.Seq_refl	600
Coq.Setoids.Setoid.Seq_sym	600	0.0.0.0	synth with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: symmetry; only 1: assumption).	0.176986	4
Coq.Setoids.Setoid.Seq_trans	600
Coq.Setoids.Setoid.gen_st	600
Coq.Classes.Equivalence.equiv_transitive_obligation_1	600
Coq.Classes.Equivalence.Respecting.respecting_equiv_obligation_3	600
Coq.Classes.Equivalence.pointwise_reflexive	600	0	synth with cache (only 1: firstorder).	0.175622	1
Coq.Classes.Equivalence.pointwise_symmetric	600	0	synth with cache (only 1: firstorder).	0.181000	1
Coq.Classes.Equivalence.pointwise_transitive	600	0	synth with cache (only 1: firstorder).	0.180570	1
Coq.Classes.Equivalence.pointwise_equivalence	600
Coq.Classes.Morphisms_Prop.Acc_pt_morphism	600
Coq.Classes.Morphisms_Prop.Acc_rel_morphism	600
Coq.Classes.Morphisms_Prop.well_founded_morphism	600
Coq.Numbers.DecimalFacts.uint_dec	600
Coq.Numbers.DecimalFacts.rev_revapp	600
Coq.Numbers.DecimalFacts.rev_rev	600	0	synth with cache (only 1: apply rev_revapp).	0.175600	1
Coq.Numbers.DecimalFacts.nzhead_revapp_0	600
Coq.Numbers.DecimalFacts.nzhead_revapp	600
Coq.Numbers.DecimalFacts.nzhead_rev	600	0	synth with cache (only 1: apply nzhead_revapp).	0.182919	1
Coq.Numbers.DecimalFacts.rev_nztail_rev	600
Coq.Numbers.DecimalFacts.revapp_nil_inv	600
Coq.Numbers.DecimalFacts.rev_nil_inv	600	0	synth with cache (only 1: apply revapp_nil_inv).	0.171310	1
Coq.Numbers.DecimalFacts.rev_lnorm_rev	600
Coq.Numbers.DecimalFacts.nzhead_nonzero	600	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.569199	20
Coq.Numbers.DecimalFacts.unorm_0	600
Coq.Numbers.DecimalFacts.unorm_nonnil	600
Coq.Numbers.DecimalFacts.nzhead_invol	600	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.293789	20
Coq.Numbers.DecimalFacts.unorm_invol	600
Coq.Numbers.DecimalFacts.norm_invol	600
Coq.Classes.CEquivalence.equiv_transitive_obligation_1	600	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: transitivity y; only 1: easy; only 1: easy).	0.220516	19
Coq.Classes.CEquivalence.Respecting.respecting_equiv_obligation_3	600
Coq.Classes.CEquivalence.pointwise_reflexive	600	0	synth with cache (only 1: firstorder).	0.205129	1
Coq.Classes.CEquivalence.pointwise_symmetric	600	0	synth with cache (only 1: firstorder).	0.197261	1
Coq.Classes.CEquivalence.pointwise_transitive	600	0	synth with cache (only 1: firstorder).	0.195137	1
Coq.Classes.CEquivalence.pointwise_equivalence	600
Coq.Classes.Morphisms.Proper.eq_proper_proxy	600
Coq.Classes.Morphisms.Proper.reflexive_proper_proxy	600
Coq.Classes.Morphisms.Proper.proper_proper_proxy	600
Coq.Classes.Morphisms.Relations.pointwise_pointwise	600
Coq.Classes.Morphisms.Relations.subrelation_id_proper	600
Coq.Classes.Morphisms.Relations.subrelation_respectful	600
Coq.Classes.Morphisms.Relations.subrelation_refl	600
Coq.Classes.Morphisms.Relations.subrelation_proper	600
Coq.Classes.Morphisms.Relations.proper_subrelation_proper	600
Coq.Classes.Morphisms.Relations.pointwise_subrelation	600
Coq.Classes.Morphisms.Relations.forall_subrelation	600
Coq.Classes.Morphisms.iff_impl_subrelation	600	0	synth with cache (only 1: firstorder).	0.135896	1
Coq.Classes.Morphisms.iff_flip_impl_subrelation	600	0	synth with cache (only 1: firstorder).	0.173987	1
Coq.Classes.Morphisms.GenericInstances.respectful_per_obligation_2	600
Coq.Classes.Morphisms.GenericInstances.complement_proper_obligation_1	600
Coq.Classes.Morphisms.GenericInstances.flip_proper_obligation_1	600
Coq.Classes.Morphisms.GenericInstances.trans_contra_co_morphism_obligation_1	600
Coq.Classes.Morphisms.GenericInstances.trans_contra_inv_impl_morphism_obligation_1	600
Coq.Classes.Morphisms.GenericInstances.trans_co_impl_morphism_obligation_1	600
Coq.Classes.Morphisms.GenericInstances.trans_sym_co_inv_impl_morphism_obligation_1	600
Coq.Classes.Morphisms.GenericInstances.trans_sym_contra_impl_morphism_obligation_1	600
Coq.Classes.Morphisms.GenericInstances.per_partial_app_morphism_obligation_1	600
Coq.Classes.Morphisms.GenericInstances.trans_co_eq_inv_impl_morphism_obligation_1	600
Coq.Classes.Morphisms.GenericInstances.PER_morphism_obligation_1	600
Coq.Classes.Morphisms.GenericInstances.symmetric_equiv_flip	600
Coq.Classes.Morphisms.GenericInstances.compose_proper_obligation_1	600
Coq.Classes.Morphisms.GenericInstances.reflexive_eq_dom_reflexive	600
Coq.Classes.Morphisms.GenericInstances.respectful_morphism	600
Coq.Classes.Morphisms.GenericInstances.Reflexive_partial_app_morphism	600
Coq.Classes.Morphisms.GenericInstances.flip_respectful	600
Coq.Classes.Morphisms.GenericInstances.flip1	600
Coq.Classes.Morphisms.GenericInstances.flip2	600
Coq.Classes.Morphisms.GenericInstances.eq_subrelation	600
Coq.Classes.Morphisms.GenericInstances.reflexive_proper	600
Coq.Classes.Morphisms.GenericInstances.proper_eq	600
Coq.Classes.Morphisms.proper_proper	600
Coq.Classes.Morphisms.Normalize.proper_normalizes_proper	600
Coq.Classes.Morphisms.Normalize.flip_atom	600
Coq.Classes.Morphisms.flip_arrow	600	0.0.0.0.0.0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: unfold Normalizes in *; only 1: unfold relation_equivalence in *; only 1: unfold predicate_equivalence in *; only 1: simpl in *; only 1: unfold respectful; only 1: unfold flip in *; only 1: firstorder; only 1: apply NB; only 1: apply H; only 1: apply NA; only 1: apply H0; only 1: apply NB; only 1: apply H; only 1: apply NA; only 1: apply H0).	0.749590	30
Coq.Classes.Morphisms.proper_sym_flip	600	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H0; only 1: apply H; only 1: apply H1).	0.373510	21
Coq.Classes.Morphisms.proper_sym_flip_2	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: auto; only 1: auto).	0.547186	43
Coq.Classes.Morphisms.proper_sym_impl_iff	600
Coq.Classes.Morphisms.proper_sym_impl_iff_2	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red in H1; only 1: red in H1; only 1: red in H1; only 1: red in H1; only 1: split; only 1: eauto; only 1: eauto).	0.613617	45
Coq.Classes.Morphisms.PartialOrder_proper	600
Coq.Classes.Morphisms.PartialOrder_StrictOrder	600
Coq.Classes.Morphisms.StrictOrder_PreOrder	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: right; only 1: reflexivity; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H2; only 1: intros ?; only 1: destruct H3; only 1: left; only 1: transitivity y; only 1: auto; only 1: auto; only 1: left; only 1: rewrite <- H3; only 1: auto; only 1: intros ?; only 1: destruct H3; only 1: left; only 1: rewrite H2; only 1: auto; only 1: right; only 1: transitivity y; only 1: auto; only 1: auto).	0.722888	51
Coq.Classes.Morphisms.StrictOrder_PartialOrder	600
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero	600
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero_right	600
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero'	600
Coq.Sets.Powerset_facts.Sets_as_an_algebra.less_than_empty	600
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_commutative	600
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_associative	600
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_idempotent	600
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_absorbs	600
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Couple_as_union	600
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_union	600
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple	600
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple_Singleton	600
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_commutative	600
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity	600
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity_l	600
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity'	600
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_add	600
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union	600
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union'	600
Coq.Sets.Powerset_facts.Sets_as_an_algebra.singlx	600
Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add	600
Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add_x	600
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative	600
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative'	600
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_distributes	600
Coq.Sets.Powerset_facts.Sets_as_an_algebra.setcover_intro	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply Definition_of_covers; only 1: auto with sets; only 1: auto with sets).	0.241777	4
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Disjoint_Intersection	600
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_l	600	0.0	synth with cache (only 1: intros; only 1: auto with sets).	0.242669	2
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_r	600	0.0	synth with cache (only 1: intros; only 1: auto with sets).	0.197140	2
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_l	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: unfold In in *; only 1: assumption; only 1: intuition).	0.389370	17
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_r	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: unfold In in *; only 1: assumption; only 1: intuition).	0.339259	17
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_l	600
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_r	600
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Disjoint_noop	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros ?; only 1: intros ?; only 1: inversion_clear H0; only 1: intuition; only 1: intros ?; only 1: intros ?; only 1: constructor; only 1: intuition; only 1: intuition; only 1: contradict H; only 1: apply Inhabited_not_empty; only 1: exists x; only 1: intuition).	0.345395	24
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Included_empty	600
Coq.Classes.CMorphisms.Proper.eq_proper_proxy	600
Coq.Classes.CMorphisms.Proper.reflexive_proper_proxy	600
Coq.Classes.CMorphisms.Proper.proper_proper_proxy	600
Coq.Classes.CMorphisms.Relations.pointwise_pointwise	600
Coq.Classes.CMorphisms.Relations.subrelation_id_proper	600
Coq.Classes.CMorphisms.Relations.subrelation_respectful	600
Coq.Classes.CMorphisms.Relations.subrelation_refl	600
Coq.Classes.CMorphisms.Relations.subrelation_proper	600
Coq.Classes.CMorphisms.Relations.proper_subrelation_proper_arrow	600
Coq.Classes.CMorphisms.Relations.pointwise_subrelation	600
Coq.Classes.CMorphisms.Relations.forall_subrelation	600
Coq.Classes.CMorphisms.iff_impl_subrelation	600	0	synth with cache (only 1: firstorder).	0.232868	1
Coq.Classes.CMorphisms.iff_flip_impl_subrelation	600	0	synth with cache (only 1: firstorder).	0.232868	1
Coq.Classes.CMorphisms.iffT_arrow_subrelation	600	0	synth with cache (only 1: firstorder).	0.219884	1
Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	600	0	synth with cache (only 1: firstorder).	0.216470	1
Coq.Classes.CMorphisms.GenericInstances.respectful_per_obligation_2	600
Coq.Classes.CMorphisms.GenericInstances.flip_proper_obligation_1	600	0.0.0	synth with cache (only 1: apply mor; only 1: auto; only 1: auto).	0.169671	3
Coq.Classes.CMorphisms.GenericInstances.trans_contra_co_type_morphism_obligation_1	600
Coq.Classes.CMorphisms.GenericInstances.trans_contra_inv_impl_type_morphism_obligation_1	600
Coq.Classes.CMorphisms.GenericInstances.trans_co_impl_type_morphism_obligation_1	600
Coq.Classes.CMorphisms.GenericInstances.trans_sym_co_inv_impl_type_morphism_obligation_1	600
Coq.Classes.CMorphisms.GenericInstances.trans_sym_contra_arrow_morphism_obligation_1	600
Coq.Classes.CMorphisms.GenericInstances.per_partial_app_type_morphism_obligation_1	600
Coq.Classes.CMorphisms.GenericInstances.trans_co_eq_inv_arrow_morphism_obligation_1	600
Coq.Classes.CMorphisms.GenericInstances.PER_type_morphism_obligation_1	600
Coq.Classes.CMorphisms.GenericInstances.symmetric_equiv_flip	600	0	synth with cache (only 1: firstorder).	0.178663	1
Coq.Classes.CMorphisms.GenericInstances.compose_proper_obligation_1	600	0.1	synth with cache (only 1: unfold compose; only 1: firstorder).	0.212281	3
Coq.Classes.CMorphisms.GenericInstances.reflexive_eq_dom_reflexive	600	0	synth with cache (only 1: simpl_crelation).	0.154084	1
Coq.Classes.CMorphisms.GenericInstances.respectful_morphism	600
Coq.Classes.CMorphisms.GenericInstances.Reflexive_partial_app_morphism	600	0	synth with cache (only 1: simpl_crelation).	0.252193	1
Coq.Classes.CMorphisms.GenericInstances.flip_respectful	600
Coq.Classes.CMorphisms.GenericInstances.flip1	600	0	synth with cache (only 1: firstorder).	0.197359	1
Coq.Classes.CMorphisms.GenericInstances.flip2	600	0	synth with cache (only 1: firstorder).	0.183294	1
Coq.Classes.CMorphisms.GenericInstances.eq_subrelation	600	0	synth with cache (only 1: simpl_crelation).	0.178152	1
Coq.Classes.CMorphisms.GenericInstances.reflexive_proper	600	0	synth with cache (only 1: firstorder).	0.176039	1
Coq.Classes.CMorphisms.GenericInstances.proper_eq	600
Coq.Classes.CMorphisms.proper_proper	600
Coq.Classes.CMorphisms.Normalize.proper_normalizes_proper	600
Coq.Classes.CMorphisms.Normalize.flip_atom	600
Coq.Classes.CMorphisms.flip_arrow	600	0.0.1.0	synth with cache (only 1: unfold Normalizes in *; only 1: rewrite NA; only 1: rewrite NB; only 1: firstorder).	0.267597	5
Coq.Classes.CMorphisms.proper_sym_flip	600	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H0; only 1: apply H; only 1: apply X).	0.368134	21
Coq.Classes.CMorphisms.proper_sym_flip_2	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: auto; only 1: auto).	0.555300	43
Coq.Classes.CMorphisms.proper_sym_impl_iff	600
Coq.Classes.CMorphisms.proper_sym_arrow_iffT	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red in H0; only 1: red in H0; only 1: red in H0; only 1: split; only 1: eauto; only 1: eauto).	0.333909	22
Coq.Classes.CMorphisms.proper_sym_impl_iff_2	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red in H1; only 1: red in H1; only 1: red in H1; only 1: red in H1; only 1: split; only 1: eauto; only 1: eauto).	0.484690	45
Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red in H1; only 1: red in H1; only 1: red in H1; only 1: red in H1; only 1: split; only 1: eauto; only 1: eauto).	0.587758	45
Coq.Classes.CMorphisms.PartialOrder_proper_type	600
Coq.Classes.CMorphisms.PartialOrder_StrictOrder	600
Coq.Classes.CMorphisms.StrictOrder_PreOrder	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: right; only 1: reflexivity; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct X; only 1: intros ?; only 1: destruct X; only 1: left; only 1: transitivity y; only 1: auto; only 1: auto; only 1: left; only 1: rewrite <- e; only 1: auto; only 1: intros ?; only 1: destruct X; only 1: left; only 1: rewrite e; only 1: auto; only 1: right; only 1: transitivity y; only 1: auto; only 1: auto).	0.751900	51
Coq.Classes.CMorphisms.StrictOrder_PartialOrder	600
Coq.Program.Subset.subset_eq	600
Coq.Program.Subset.match_eq_rewrite	600
Coq.ssr.ssrsetoid.compat_Reflexive	600	0	synth with cache (only 1: trivial).	0.120615	1
Coq.ssr.ssrfun.unitE	600
Coq.ssr.ssrfun.ExtensionalEquality.frefl	600
Coq.ssr.ssrfun.ExtensionalEquality.fsym	600
Coq.ssr.ssrfun.ExtensionalEquality.ftrans	600
Coq.ssr.ssrfun.ExtensionalEquality.rrefl	600
Coq.ssr.ssrfun.Composition.eq_comp	600
Coq.ssr.ssrfun.all_tag	600
Coq.ssr.ssrfun.all_tag2	600
Coq.ssr.ssrfun.Sig.svalP	600
Coq.ssr.ssrfun.Sig.s2valP	600
Coq.ssr.ssrfun.Sig.s2valP'	600
Coq.ssr.ssrfun.all_sig	600
Coq.ssr.ssrfun.all_sig2	600
Coq.ssr.ssrfun.Injections.can_pcan	600
Coq.ssr.ssrfun.Injections.pcan_inj	600
Coq.ssr.ssrfun.Injections.can_inj	600
Coq.ssr.ssrfun.Injections.canLR	600
Coq.ssr.ssrfun.Injections.canRL	600
Coq.ssr.ssrfun.Some_inj	600
Coq.ssr.ssrfun.of_voidK	600	0	synth with cache (only 1: by case).	0.154904	1
Coq.ssr.ssrfun.esymK	600
Coq.ssr.ssrfun.etrans_id	600
Coq.ssr.ssrfun.InjectionsTheory.inj_id	600
Coq.ssr.ssrfun.InjectionsTheory.inj_can_sym	600
Coq.ssr.ssrfun.InjectionsTheory.inj_comp	600
Coq.ssr.ssrfun.InjectionsTheory.inj_compr	600
Coq.ssr.ssrfun.InjectionsTheory.can_comp	600
Coq.ssr.ssrfun.InjectionsTheory.pcan_pcomp	600
Coq.ssr.ssrfun.InjectionsTheory.eq_inj	600
Coq.ssr.ssrfun.InjectionsTheory.eq_can	600
Coq.ssr.ssrfun.InjectionsTheory.inj_can_eq	600
Coq.ssr.ssrfun.Bijections.bij_inj	600
Coq.ssr.ssrfun.Bijections.bij_can_sym	600
Coq.ssr.ssrfun.Bijections.bij_can_eq	600
Coq.ssr.ssrfun.BijectionsTheory.eq_bij	600
Coq.ssr.ssrfun.BijectionsTheory.bij_comp	600
Coq.ssr.ssrfun.BijectionsTheory.bij_can_bij	600
Coq.ssr.ssrfun.Involutions.inv_inj	600
Coq.ssr.ssrfun.Involutions.inv_bij	600
Coq.Relations.Relations.inverse_image_of_equivalence	600
Coq.Relations.Relations.inverse_image_of_eq	600
Coq.Program.Wf.Well_founded.Fix_F_eq	600
Coq.Program.Wf.Well_founded.Fix_F_inv	600
Coq.Program.Wf.Well_founded.Fix_eq	600
Coq.Program.Wf.Well_founded.fix_sub_eq	600
Coq.Program.Wf.Measure_well_founded.measure_wf	600
Coq.Program.Wf.Fix_rects.F_unfold	600
Coq.Program.Wf.Fix_rects.Fix_F_sub_rect	600
Coq.Program.Wf.Fix_rects.eq_Fix_F_sub	600
Coq.Program.Wf.Fix_rects.Fix_sub_rect	600
Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	600
Coq.Program.Equality.JMeq_eq_refl	600	0	synth with cache (only 1: apply UIP).	0.191664	1
Coq.Program.Equality.UIP_refl_refl	600	0	synth with cache (only 1: apply UIP_refl).	0.188962	1
Coq.Program.Equality.inj_pairT2_refl	600	0	synth with cache (only 1: apply UIP_refl).	0.231588	1
Coq.Program.Equality.solution_left	600	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: assumption).	0.198874	3
Coq.Program.Equality.solution_right	600	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: assumption).	0.236364	3
Coq.Program.Equality.deletion	600	0.0	synth with cache (only 1: intros; only 1: assumption).	0.202514	2
Coq.Program.Equality.simplification_heq	600
Coq.Program.Equality.simplification_existT2	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply X; only 1: apply inj_pairT2; only 1: assumption).	0.209214	5
Coq.Program.Equality.simplification_existT1	600
Coq.Program.Equality.simplification_K	600	0.0.0	synth with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: assumption).	0.204451	3
Coq.Classes.RelationClasses.Defs.complement_inverse	600
Coq.Classes.RelationClasses.Defs.StrictOrder_Asymmetric	600
Coq.Classes.RelationClasses.Defs.subrelation_symmetric	600
Coq.Classes.RelationClasses.Defs.flip.flip_Reflexive	600
Coq.Classes.RelationClasses.Defs.flip.flip_Antisymmetric	600
Coq.Classes.RelationClasses.Defs.flip.flip_PreOrder	600
Coq.Classes.RelationClasses.Defs.flip.flip_StrictOrder	600
Coq.Classes.RelationClasses.Defs.flip.flip_PER	600
Coq.Classes.RelationClasses.Defs.flip.flip_Equivalence	600
Coq.Classes.RelationClasses.Defs.complement.complement_Irreflexive	600
Coq.Classes.RelationClasses.Defs.complement.complement_Symmetric	600
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	600	0.0.0	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.199610	3
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	600	0.0.0	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.160183	3
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	600
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	600	0.0.0	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.154891	3
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	600
Coq.Classes.RelationClasses.Binary.relation_equivalence_equivalence	600
Coq.Classes.RelationClasses.Binary.relation_implication_preorder	600
Coq.Classes.RelationClasses.Binary.partial_order_antisym	600
Coq.Classes.RelationClasses.Binary.PartialOrder_inverse	600
Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	600
Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.acc_A_B_lexprod	600
Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.wf_lexprod	600
Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.Acc_symprod	600
Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.wf_symprod	600
Coq.Wellfounded.Lexicographic_Product.Swap.swap_Acc	600
Coq.Wellfounded.Lexicographic_Product.Swap.Acc_swapprod	600
Coq.Wellfounded.Lexicographic_Product.Swap.wf_swapprod	600
Coq.Wellfounded.Union.WfUnion.strip_commut	600
Coq.Wellfounded.Union.WfUnion.Acc_union	600
Coq.Wellfounded.Union.WfUnion.wf_union	600
Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_minimal	600
Coq.Sets.Powerset.The_power_set_partial_order.Power_set_Inhabited	600
Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_an_order	600
Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_transitive	600
Coq.Sets.Powerset.The_power_set_partial_order.Power_set_PO	600
Coq.Sets.Powerset.The_power_set_partial_order.Strict_Rel_is_Strict_Included	600
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion	600
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion_left	600
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive	600
Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_is_Bottom	600
Coq.Sets.Powerset.The_power_set_partial_order.Union_minimal	600
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_maximal	600
Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_l	600
Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_r	600
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_l	600
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_r	600
Coq.Sets.Powerset.The_power_set_partial_order.Union_is_Lub	600
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_is_Glb	600
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_is_preorder	600
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_idempotent	600
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_clos_rst	600
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_r_clos_rt	600
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_t	600
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_is_equiv	600
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_idempotent	600
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_t1n_trans	600
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n	600
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n_iff	600
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_tn1_trans	600
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1	600
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1_iff	600
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_step	600
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_step	600
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_rt	600
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n	600
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n_iff	600
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_rt	600
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1	600
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1_iff	600
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_left	600
Coq.Relations.Operators_Properties.Properties.Equivalences.rt1n_ind_right	600
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_right	600
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_rst	600
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_trans	600
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_sym	600
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n	600
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n_iff	600
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_rst	600
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_trans	600
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_sym	600
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1	600
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1_iff	600
Coq.Relations.Operators_Properties.Properties.clos_trans_transp_permute	600
Coq.Sets.Relations_3_facts.Rstar_imp_coherent	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red; only 1: exists y; only 1: auto with sets).	0.177399	8
Coq.Sets.Relations_3_facts.coherent_symmetric	600
Coq.Sets.Relations_3_facts.Strong_confluence	600
Coq.Sets.Relations_3_facts.Strong_confluence_direct	600
Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	600
Coq.Sets.Relations_3_facts.Newman	600
Coq.Classes.CRelationClasses.Defs.complement_inverse	600
Coq.Classes.CRelationClasses.Defs.StrictOrder_Asymmetric	600
Coq.Classes.CRelationClasses.Defs.subrelation_symmetric	600
Coq.Classes.CRelationClasses.Defs.flip.flip_Reflexive	600
Coq.Classes.CRelationClasses.Defs.flip.flip_Antisymmetric	600
Coq.Classes.CRelationClasses.Defs.flip.flip_PreOrder	600
Coq.Classes.CRelationClasses.Defs.flip.flip_StrictOrder	600
Coq.Classes.CRelationClasses.Defs.flip.flip_PER	600
Coq.Classes.CRelationClasses.Defs.flip.flip_Equivalence	600
Coq.Classes.CRelationClasses.Defs.complement.complement_Irreflexive	600
Coq.Classes.CRelationClasses.Defs.complement.complement_Symmetric	600
Coq.Classes.CRelationClasses.iffT_Reflexive	600	0	synth with cache (only 1: firstorder).	0.169045	1
Coq.Classes.CRelationClasses.iffT_Symmetric	600	0	synth with cache (only 1: firstorder).	0.165415	1
Coq.Classes.CRelationClasses.iffT_Transitive	600	0	synth with cache (only 1: firstorder).	0.173338	1
Coq.Classes.CRelationClasses.Binary.relation_equivalence_equivalence	600
Coq.Classes.CRelationClasses.Binary.relation_implication_preorder	600
Coq.Classes.CRelationClasses.Binary.partial_order_antisym	600
Coq.Classes.CRelationClasses.Binary.PartialOrder_inverse	600
Coq.Lists.StreamMemo.MemoFunction.memo_get_correct	600
Coq.Lists.StreamMemo.MemoFunction.imemo_get_correct	600
Coq.Lists.StreamMemo.DependentMemoFunction.dmemo_get_correct	600
Coq.Lists.StreamMemo.DependentMemoFunction.dimemo_get_correct	600
Coq.Wellfounded.Well_Ordering.WellOrdering.wf_WO	600
Coq.Wellfounded.Well_Ordering.Characterisation_wf_relations.wof	600
Coq.Logic.JMeq.JMeq_sym	600	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.100041	3
Coq.Logic.JMeq.JMeq_trans	600	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	0.132419	2
Coq.Logic.JMeq.JMeq_ind	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case JMeq_eq with (1 := H0); only 1: trivial).	0.139758	8
Coq.Logic.JMeq.JMeq_rec	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case JMeq_eq with (1 := H0); only 1: trivial).	0.189032	8
Coq.Logic.JMeq.JMeq_rect	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case JMeq_eq with (1 := H); only 1: trivial).	0.184988	8
Coq.Logic.JMeq.JMeq_ind_r	600
Coq.Logic.JMeq.JMeq_rec_r	600
Coq.Logic.JMeq.JMeq_rect_r	600
Coq.Logic.JMeq.JMeq_congr	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case JMeq_eq with (1 := H); only 1: trivial).	0.186987	8
Coq.Logic.JMeq.JMeq_eq_dep_id	600	0.0	synth with cache (only 1: destruct 1; only 1: apply eq_dep_intro).	0.219776	2
Coq.Logic.JMeq.eq_dep_id_JMeq	600	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.220107	2
Coq.Logic.JMeq.eq_dep_JMeq	600	0.0	synth with cache (only 1: destruct 1; only 1: apply @JMeq_refl).	0.257120	2
Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	600
Coq.Logic.JMeq.JMeq_eq_dep	600
Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_invert	600
Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_elim	600
Coq.Sets.Uniset.defs.leb_refl	600
Coq.Sets.Uniset.defs.incl_left	600
Coq.Sets.Uniset.defs.incl_right	600
Coq.Sets.Uniset.defs.seq_refl	600
Coq.Sets.Uniset.defs.seq_trans	600
Coq.Sets.Uniset.defs.seq_sym	600
Coq.Sets.Uniset.defs.union_empty_left	600
Coq.Sets.Uniset.defs.union_empty_right	600
Coq.Sets.Uniset.defs.union_comm	600
Coq.Sets.Uniset.defs.union_ass	600
Coq.Sets.Uniset.defs.seq_left	600
Coq.Sets.Uniset.defs.seq_right	600
Coq.Sets.Uniset.defs.union_rotate	600
Coq.Sets.Uniset.defs.seq_congr	600
Coq.Sets.Uniset.defs.union_perm_left	600
Coq.Sets.Uniset.defs.uniset_twist1	600
Coq.Sets.Uniset.defs.uniset_twist2	600
Coq.Sets.Uniset.defs.treesort_twist1	600
Coq.Sets.Uniset.defs.treesort_twist2	600
Coq.ssr.ssreflect.master_key	600	0	synth with cache (only 1: exact tt).	0.177929	1
Coq.ssr.ssreflect.lock	600
Coq.ssr.ssreflect.not_locked_false_eq_true	600	0.0	synth with cache (only 1: unlock; only 1: discriminate).	0.211512	2
Coq.ssr.ssreflect.unlock	600
Coq.ssr.ssreflect.locked_withE	600
Coq.ssr.ssreflect.unlock_with	600
Coq.ssr.ssreflect.nary_congruence	600
Coq.ssr.ssreflect.ssr_congr_arrow	600
Coq.ssr.ssreflect.ApplyIff.iffLR	600
Coq.ssr.ssreflect.ApplyIff.iffRL	600
Coq.ssr.ssreflect.ApplyIff.iffLRn	600
Coq.ssr.ssreflect.ApplyIff.iffRLn	600
Coq.ssr.ssreflect.abstract_context	600
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_A_sum	600
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_B_sum	600
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.wf_disjoint_sum	600
Coq.Sets.Relations_2_facts.Rstar_reflexive	600	0	synth with cache (only 1: auto with sets).	0.169605	1
Coq.Sets.Relations_2_facts.Rplus_contains_R	600	0	synth with cache (only 1: auto with sets).	0.200709	1
Coq.Sets.Relations_2_facts.Rstar_contains_R	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: red; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets).	0.259569	17
Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	600
Coq.Sets.Relations_2_facts.Rstar_transitive	600	0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: red; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).	0.341220	41
Coq.Sets.Relations_2_facts.Rstar_cases	600	0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: right; only 1: exists y0; only 1: auto with sets).	0.388872	37
Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	600	0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize Rstar_contains_R; only 1: intros ?; only 1: red in H; only 1: intros ?; only 1: intros ?; only 1: unfold same_relation; only 1: unfold contains; only 1: split; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: auto with sets; only 1: auto with sets; only 1: generalize Rstar_transitive; only 1: intros ?; only 1: red in H1; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H1 with y0; only 1: auto with sets; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Rstar1_n with y0; only 1: auto with sets; only 1: auto with sets).	0.892706	128
Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	600	0.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: generalize Rstar_transitive; only 1: intros ?; only 1: red in H4; only 1: apply H4 with y0; only 1: auto with sets; only 1: apply Rstar_n with x0; only 1: auto with sets; only 1: auto with sets).	0.517760	67
Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	600	0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold contains; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: auto with sets; only 1: generalize Rstar_transitive; only 1: intros ?; only 1: red in H1; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H1 with y0; only 1: auto with sets; only 1: auto with sets).	0.621696	67
Coq.Sets.Relations_2_facts.star_monotone	600
Coq.Sets.Relations_2_facts.RstarRplus_RRstar	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize Rstar_contains_Rplus; only 1: intros ?; only 1: red in H; only 1: generalize Rstar_transitive; only 1: intros ?; only 1: red in H0; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H1; only 1: intros ?; only 1: intros ?; only 1: elim H2; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: exists y0; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: exists y0; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: exists y0; only 1: split; only 1: assumption; only 1: apply H0 with z0; only 1: auto with sets; only 1: auto with sets).	1.142965	98
Coq.Sets.Relations_2_facts.Lemma1	600
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.incl_clos_trans	600
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_clos_trans	600
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_inv_trans	600
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.wf_clos_trans	600
Coq.Program.Combinators.compose_id_left	600	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.203843	2
Coq.Program.Combinators.compose_id_right	600	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.187209	2
Coq.Program.Combinators.compose_assoc	600	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.195757	2
Coq.Program.Combinators.flip_flip	600	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.188077	2
Coq.Program.Combinators.prod_uncurry_curry	600	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.198298	2
Coq.Program.Combinators.prod_curry_uncurry	600
Coq.Logic.HLevels.forall_hprop	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply @functional_extensionality_dep; only 1: intros ?; only 1: apply H).	0.211631	8
Coq.Logic.HLevels.and_hprop	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: intros ?; only 1: destruct p; only 1: destruct q; only 1: replace p0 with p; only 1: replace q0 with q; only 1: reflexivity; only 1: apply H0; only 1: apply H).	0.302445	18
Coq.Logic.HLevels.impl_hprop	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply @functional_extensionality; only 1: intros; only 1: apply H).	0.205576	8
Coq.Logic.HLevels.false_hprop	600	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: contradiction).	0.196969	3
Coq.Logic.HLevels.true_hprop	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct p; only 1: destruct q; only 1: reflexivity).	0.193287	5
Coq.Logic.HLevels.not_hprop	600	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply @functional_extensionality; only 1: intros; only 1: contradiction).	0.197011	6
Coq.Logic.HLevels.hset_hprop	600
Coq.Logic.HLevels.eq_trans_cancel	600
Coq.Logic.HLevels.hset_hOneType	600
Coq.Logic.HLevels.hprop_hprop	600
Coq.Logic.HLevels.hprop_hset	600	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply @functional_extensionality_dep; only 1: intros ?; only 1: apply @functional_extensionality_dep; only 1: intros ?; only 1: apply @functional_extensionality_dep; only 1: intros ?; only 1: apply @functional_extensionality_dep; only 1: intros ?; only 1: apply hset_hOneType; only 1: exact p).	0.379473	21
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	600
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	600
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	600
Coq.Sets.Constructive_sets.Ensembles_facts.Extension	600
Coq.Sets.Constructive_sets.Ensembles_facts.Noone_in_empty	600
Coq.Sets.Constructive_sets.Ensembles_facts.Included_Empty	600
Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro1	600
Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro2	600
Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_add	600
Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_not_empty	600
Coq.Sets.Constructive_sets.Ensembles_facts.Add_not_Empty	600
Coq.Sets.Constructive_sets.Ensembles_facts.not_Empty_Add	600
Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_inv	600
Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_intro	600
Coq.Sets.Constructive_sets.Ensembles_facts.Union_inv	600
Coq.Sets.Constructive_sets.Ensembles_facts.Add_inv	600
Coq.Sets.Constructive_sets.Ensembles_facts.Intersection_inv	600
Coq.Sets.Constructive_sets.Ensembles_facts.Couple_inv	600
Coq.Sets.Constructive_sets.Ensembles_facts.Setminus_intro	600
Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_intro	600
Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_strict	600
Coq.Logic.Eqdep_dec.EqdepDec.trans_sym_eq	600
Coq.Logic.Eqdep_dec.EqdepDec.nu_constant	600
Coq.Logic.Eqdep_dec.EqdepDec.nu_left_inv_on	600
Coq.Logic.Eqdep_dec.EqdepDec.eq_proofs_unicity_on	600
Coq.Logic.Eqdep_dec.EqdepDec.K_dec_on	600
Coq.Logic.Eqdep_dec.EqdepDec.inj_right_pair_on	600
Coq.Logic.Eqdep_dec.K_dec_type	600
Coq.Logic.Eqdep_dec.eq_rect_eq_dec	600
Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	600
Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	600	0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply eq_dep_eq__inj_pairT2; only 1: apply eq_rect_eq__eq_dep_eq; only 1: unfold Eq_rect_eq; only 1: unfold Eq_rect_eq_on; only 1: intros; only 1: apply eq_rect_eq_dec; only 1: apply X).	0.294331	18
Coq.Logic.Eqdep_dec.UIP_refl_unit	600
Coq.Logic.Eqdep_dec.UIP_refl_bool	600
Coq.Logic.Eqdep_dec.UIP_refl_nat	600
Coq.Bool.IfProp.Iftrue_inv	600
Coq.Bool.IfProp.Iffalse_inv	600
Coq.Bool.IfProp.IfProp_true	600
Coq.Bool.IfProp.IfProp_false	600	0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: assumption).	0.196634	3
Coq.Bool.IfProp.IfProp_or	600	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: left; only 1: assumption; only 1: right; only 1: assumption).	0.203128	5
Coq.Bool.IfProp.IfProp_sum	600
Coq.Logic.Hurkens.Generic.Paradox.Omega	600
Coq.Logic.Hurkens.Generic.Paradox.lemma1	600
Coq.Logic.Hurkens.Generic.Paradox.lemma2	600
Coq.Logic.Hurkens.Generic.Paradox.paradox	600
Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.Paradox.paradox	600
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.strength	600
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.modal	600
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.Forall	600
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.paradox	600
Coq.Logic.Hurkens.NoRetractToNegativeProp.Paradox.paradox	600
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.MParadox.mparadox	600
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.Paradox.paradox	600
Coq.Logic.Hurkens.NoRetractFromTypeToProp.Paradox.paradox	600
Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.up_down	600
Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.paradox	600
Coq.Logic.Hurkens.PropNeqType.paradox	600
Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_true	600
Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_not_false	600
Coq.Bool.BoolEq.Bool_eq_dec.beq_false_not_eq	600
Coq.Bool.BoolEq.Bool_eq_dec.exists_beq_eq	600
Coq.Bool.BoolEq.Bool_eq_dec.not_eq_false_beq	600
Coq.Bool.BoolEq.Bool_eq_dec.eq_dec	600
Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	600
Coq.ssr.ssrunder.Under_rel.Under_relE	600
Coq.ssr.ssrunder.Under_rel.over_rel	600
Coq.ssr.ssrunder.Under_rel.over_rel_done	600
Coq.ssr.ssrunder.Under_rel.under_rel_done	600
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel	600
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel_left	600
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive	600
Coq.Lists.Streams.Streams.unfold_Stream	600
Coq.Lists.Streams.Streams.tl_nth_tl	600
Coq.Lists.Streams.Streams.Str_nth_tl_plus	600
Coq.Lists.Streams.Streams.Str_nth_plus	600
Coq.Lists.Streams.Streams.EqSt_reflex	600
Coq.Lists.Streams.Streams.sym_EqSt	600
Coq.Lists.Streams.Streams.trans_EqSt	600
Coq.Lists.Streams.Streams.eqst_ntheq	600
Coq.Lists.Streams.Streams.ntheq_eqst	600
Coq.Lists.Streams.Streams.Stream_Properties.ForAll_Str_nth_tl	600
Coq.Lists.Streams.Streams.Stream_Properties.Co_Induction_ForAll.ForAll_coind	600
Coq.Lists.Streams.Map.Str_nth_tl_map	600
Coq.Lists.Streams.Map.Str_nth_map	600
Coq.Lists.Streams.Map.ForAll_map	600
Coq.Lists.Streams.Map.Exists_map	600
Coq.Lists.Streams.Zip.Str_nth_tl_zipWith	600
Coq.Lists.Streams.Zip.Str_nth_zipWith	600
Coq.Wellfounded.Inclusion.WfInclusion.Acc_incl	600
Coq.Wellfounded.Inclusion.WfInclusion.wf_incl	600
Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	600
Coq.Sets.Relations_1_facts.Equiv_from_preorder	600
Coq.Sets.Relations_1_facts.Equiv_from_order	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto  10 with sets).	0.191497	5
Coq.Sets.Relations_1_facts.contains_is_preorder	600	0	synth with cache (only 1: auto  10 with sets).	0.182315	1
Coq.Sets.Relations_1_facts.same_relation_is_equivalence	600
Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	600
Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	600
Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	600
Coq.Sets.Relations_1_facts.cong_transitive_same_relation	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red; only 1: elim H; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H2; only 1: apply H0 with y; only 1: auto with sets; only 1: auto with sets).	0.384232	42
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_lemma	600
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_image	600
Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_image	600
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_rel	600
Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_rel	600
Coq.Sets.Permut.Axiomatisation.cong_congr	600
Coq.Sets.Permut.Axiomatisation.comm_right	600
Coq.Sets.Permut.Axiomatisation.comm_left	600
Coq.Sets.Permut.Axiomatisation.perm_right	600
Coq.Sets.Permut.Axiomatisation.perm_left	600
Coq.Sets.Permut.Axiomatisation.op_rotate	600
Coq.Sets.Permut.Axiomatisation.twist	600
Coq.Logic.Decidable.dec_not_not	600
Coq.Logic.Decidable.dec_True	600	0.0	synth with cache (only 1: unfold decidable; only 1: auto).	0.134027	2
Coq.Logic.Decidable.dec_False	600	0.0.0	synth with cache (only 1: unfold decidable; only 1: unfold not; only 1: auto).	0.133820	3
Coq.Logic.Decidable.dec_or	600	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.145240	2
Coq.Logic.Decidable.dec_and	600	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.145203	2
Coq.Logic.Decidable.dec_not	600	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.189983	2
Coq.Logic.Decidable.dec_imp	600	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.198212	2
Coq.Logic.Decidable.dec_iff	600	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.211511	2
Coq.Logic.Decidable.not_not	600	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.149277	2
Coq.Logic.Decidable.not_or	600	0	synth with cache (only 1: tauto).	0.143876	1
Coq.Logic.Decidable.not_and	600	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.151371	2
Coq.Logic.Decidable.not_imp	600	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.156753	2
Coq.Logic.Decidable.imp_simp	600	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.157855	2
Coq.Logic.Decidable.not_iff	600	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.187939	2
Coq.Logic.Decidable.not_true_iff	600	0	synth with cache (only 1: tauto).	0.154629	1
Coq.Logic.Decidable.not_false_iff	600	0	synth with cache (only 1: tauto).	0.145109	1
Coq.Logic.Decidable.not_not_iff	600	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.156484	2
Coq.Logic.Decidable.contrapositive	600	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.157224	2
Coq.Logic.Decidable.or_not_l_iff_1	600	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.166135	2
Coq.Logic.Decidable.or_not_l_iff_2	600	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.168762	2
Coq.Logic.Decidable.or_not_r_iff_1	600	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.170780	2
Coq.Logic.Decidable.or_not_r_iff_2	600	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.171256	2
Coq.Logic.Decidable.imp_not_l	600	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.174753	2
Coq.Logic.Decidable.not_or_iff	600	0	synth with cache (only 1: tauto).	0.161854	1
Coq.Logic.Decidable.not_and_iff	600	0	synth with cache (only 1: tauto).	0.155002	1
Coq.Logic.Decidable.not_imp_iff	600	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.178989	2
Coq.Logic.Decidable.not_imp_rev_iff	600	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.187998	2
Coq.Logic.Decidable.dec_functional_relation	600
Coq.Bool.Bool.bool_dec	600
Coq.Bool.Bool.diff_true_false	600	0	synth with cache (only 1: discriminate).	0.130952	1
Coq.Bool.Bool.diff_false_true	600	0	synth with cache (only 1: discriminate).	0.126624	1
Coq.Bool.Bool.eq_true_false_abs	600
Coq.Bool.Bool.not_true_is_false	600
Coq.Bool.Bool.not_false_is_true	600	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.133694	2
Coq.Bool.Bool.not_true_iff_false	600	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.140719	3
Coq.Bool.Bool.not_false_iff_true	600	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.134790	3
Coq.Bool.Bool.leb_implb	600	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.148052	5
Coq.Bool.Bool.eqb_subst	600	0	synth with cache (only 1: destr_bool).	0.141229	1
Coq.Bool.Bool.eqb_reflx	600	0	synth with cache (only 1: destr_bool).	0.126840	1
Coq.Bool.Bool.eqb_prop	600	0	synth with cache (only 1: destr_bool).	0.133937	1
Coq.Bool.Bool.eqb_true_iff	600	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.190311	5
Coq.Bool.Bool.eqb_false_iff	600	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.242354	5
Coq.Bool.Bool.negb_orb	600	0	synth with cache (only 1: destr_bool).	0.191979	1
Coq.Bool.Bool.negb_andb	600	0	synth with cache (only 1: destr_bool).	0.195650	1
Coq.Bool.Bool.negb_involutive	600	0	synth with cache (only 1: destr_bool).	0.194373	1
Coq.Bool.Bool.negb_involutive_reverse	600	0	synth with cache (only 1: destr_bool).	0.205652	1
Coq.Bool.Bool.negb_sym	600	0	synth with cache (only 1: destr_bool).	0.210696	1
Coq.Bool.Bool.no_fixpoint_negb	600	0	synth with cache (only 1: destr_bool).	0.195256	1
Coq.Bool.Bool.eqb_negb1	600	0	synth with cache (only 1: destr_bool).	0.193097	1
Coq.Bool.Bool.eqb_negb2	600	0	synth with cache (only 1: destr_bool).	0.187153	1
Coq.Bool.Bool.if_negb	600	0	synth with cache (only 1: destr_bool).	0.187650	1
Coq.Bool.Bool.negb_true_iff	600	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.145758	3
Coq.Bool.Bool.negb_false_iff	600	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.146876	3
Coq.Bool.Bool.orb_true_iff	600	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.197475	5
Coq.Bool.Bool.orb_false_iff	600	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.155941	5
Coq.Bool.Bool.orb_true_elim	600
Coq.Bool.Bool.orb_prop	600	0.0.0	synth with cache (only 1: intros; only 1: apply orb_true_iff; only 1: trivial).	0.158922	3
Coq.Bool.Bool.orb_true_intro	600	0.0.0	synth with cache (only 1: intros; only 1: apply orb_true_iff; only 1: trivial).	0.160618	3
Coq.Bool.Bool.orb_false_intro	600	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: reflexivity).	0.163793	3
Coq.Bool.Bool.orb_false_elim	600	0.0.0	synth with cache (only 1: intros; only 1: apply orb_false_iff; only 1: trivial).	0.158678	3
Coq.Bool.Bool.orb_diag	600	0	synth with cache (only 1: destr_bool).	0.160427	1
Coq.Bool.Bool.orb_true_r	600	0	synth with cache (only 1: destr_bool).	0.161907	1
Coq.Bool.Bool.orb_true_l	600	0	synth with cache (only 1: reflexivity).	0.161201	1
Coq.Bool.Bool.orb_false_r	600	0	synth with cache (only 1: destr_bool).	0.166678	1
Coq.Bool.Bool.orb_false_l	600	0	synth with cache (only 1: destr_bool).	0.158229	1
Coq.Bool.Bool.orb_negb_r	600	0	synth with cache (only 1: destr_bool).	0.165148	1
Coq.Bool.Bool.orb_comm	600	0	synth with cache (only 1: destr_bool).	0.160196	1
Coq.Bool.Bool.orb_assoc	600	0	synth with cache (only 1: destr_bool).	0.169964	1
Coq.Bool.Bool.andb_true_iff	600	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.180793	5
Coq.Bool.Bool.andb_false_iff	600	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.228624	5
Coq.Bool.Bool.andb_true_eq	600	0.0	synth with cache (only 1: destr_bool; only 1: auto).	0.160392	2
Coq.Bool.Bool.andb_false_intro1	600	0.0.0	synth with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.159387	3
Coq.Bool.Bool.andb_false_intro2	600	0.0.0	synth with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.157581	3
Coq.Bool.Bool.andb_false_r	600	0	synth with cache (only 1: destr_bool).	0.157041	1
Coq.Bool.Bool.andb_false_l	600	0	synth with cache (only 1: reflexivity).	0.149555	1
Coq.Bool.Bool.andb_diag	600	0	synth with cache (only 1: destr_bool).	0.155068	1
Coq.Bool.Bool.andb_true_r	600	0	synth with cache (only 1: destr_bool).	0.151531	1
Coq.Bool.Bool.andb_true_l	600	0	synth with cache (only 1: reflexivity).	0.152586	1
Coq.Bool.Bool.andb_false_elim	600
Coq.Bool.Bool.andb_negb_r	600	0	synth with cache (only 1: destr_bool).	0.154151	1
Coq.Bool.Bool.andb_comm	600	0	synth with cache (only 1: destr_bool).	0.159223	1
Coq.Bool.Bool.andb_assoc	600	0	synth with cache (only 1: destr_bool).	0.156833	1
Coq.Bool.Bool.andb_orb_distrib_r	600	0	synth with cache (only 1: destr_bool).	0.162442	1
Coq.Bool.Bool.andb_orb_distrib_l	600	0	synth with cache (only 1: destr_bool).	0.159586	1
Coq.Bool.Bool.orb_andb_distrib_r	600	0	synth with cache (only 1: destr_bool).	0.161504	1
Coq.Bool.Bool.orb_andb_distrib_l	600	0	synth with cache (only 1: destr_bool).	0.166000	1
Coq.Bool.Bool.absorption_andb	600	0	synth with cache (only 1: destr_bool).	0.160883	1
Coq.Bool.Bool.absorption_orb	600	0	synth with cache (only 1: destr_bool).	0.159037	1
Coq.Bool.Bool.xorb_false_r	600	0	synth with cache (only 1: destr_bool).	0.154318	1
Coq.Bool.Bool.xorb_false_l	600	0	synth with cache (only 1: destr_bool).	0.153034	1
Coq.Bool.Bool.xorb_true_r	600	0	synth with cache (only 1: reflexivity).	0.153850	1
Coq.Bool.Bool.xorb_true_l	600	0	synth with cache (only 1: reflexivity).	0.153811	1
Coq.Bool.Bool.xorb_nilpotent	600	0	synth with cache (only 1: destr_bool).	0.154592	1
Coq.Bool.Bool.xorb_comm	600	0	synth with cache (only 1: destr_bool).	0.156367	1
Coq.Bool.Bool.xorb_assoc_reverse	600	0	synth with cache (only 1: destr_bool).	0.162969	1
Coq.Bool.Bool.xorb_eq	600	0	synth with cache (only 1: destr_bool).	0.157385	1
Coq.Bool.Bool.xorb_move_l_r_1	600	0	synth with cache (only 1: destr_bool).	0.160004	1
Coq.Bool.Bool.xorb_move_l_r_2	600	0	synth with cache (only 1: destr_bool).	0.167489	1
Coq.Bool.Bool.xorb_move_r_l_1	600	0	synth with cache (only 1: destr_bool).	0.185602	1
Coq.Bool.Bool.xorb_move_r_l_2	600	0	synth with cache (only 1: destr_bool).	0.185084	1
Coq.Bool.Bool.negb_xorb_l	600
Coq.Bool.Bool.negb_xorb_r	600
Coq.Bool.Bool.xorb_negb_negb	600
Coq.Bool.Bool.eq_iff_eq_true	600	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.244263	5
Coq.Bool.Bool.eq_true_iff_eq	600	0	synth with cache (only 1: apply eq_iff_eq_true).	0.157847	1
Coq.Bool.Bool.eq_true_negb_classical	600	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.160681	2
Coq.Bool.Bool.eq_true_not_negb	600	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.158582	2
Coq.Bool.Bool.absurd_eq_bool	600	0	synth with cache (only 1: contradiction).	0.158869	1
Coq.Bool.Bool.absurd_eq_true	600	0	synth with cache (only 1: contradiction).	0.155979	1
Coq.Bool.Bool.trans_eq_bool	600	0	synth with cache (only 1: apply eq_trans).	0.151628	1
Coq.Bool.Bool.Is_true_eq_true	600
Coq.Bool.Bool.Is_true_eq_left	600
Coq.Bool.Bool.Is_true_eq_right	600	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: auto with bool).	0.162458	3
Coq.Bool.Bool.eqb_refl	600	0	synth with cache (only 1: destr_bool).	0.159555	1
Coq.Bool.Bool.eqb_eq	600	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.165156	3
Coq.Bool.Bool.orb_prop_elim	600	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.209256	5
Coq.Bool.Bool.orb_prop_intro	600	0.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.162576	2
Coq.Bool.Bool.andb_prop_intro	600	0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto).	0.164858	4
Coq.Bool.Bool.andb_prop_elim	600	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.242802	5
Coq.Bool.Bool.eq_bool_prop_intro	600	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.209292	3
Coq.Bool.Bool.eq_bool_prop_elim	600	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.250124	3
Coq.Bool.Bool.negb_prop_elim	600	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.197806	3
Coq.Bool.Bool.negb_prop_intro	600	0.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.202844	2
Coq.Bool.Bool.negb_prop_classical	600	0.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.203341	2
Coq.Bool.Bool.negb_prop_involutive	600	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.202366	3
Coq.Bool.Bool.andb_if	600	0	synth with cache (only 1: destr_bool).	0.202109	1
Coq.Bool.Bool.negb_if	600	0	synth with cache (only 1: destr_bool).	0.200674	1
Coq.Bool.Bool.andb_lazy_alt	600	0	synth with cache (only 1: reflexivity).	0.199655	1
Coq.Bool.Bool.orb_lazy_alt	600	0	synth with cache (only 1: reflexivity).	0.195705	1
Coq.Bool.Bool.reflect_iff	600	0.0.0.0	synth with cache (only 1: destruct 1; only 1: intuition; only 1: intuition; only 1: discriminate).	0.200929	4
Coq.Bool.Bool.iff_reflect	600	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.223510	3
Coq.Bool.Bool.reflect_dec	600	0.0.0	synth with cache (only 1: destruct 1; only 1: auto; only 1: auto).	0.172929	3
Coq.Bool.Bool.eqb_spec	600	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct b; only 1: destruct b'; only 1: constructor; only 1: reflexivity; only 1: constructor; only 1: discriminate; only 1: destruct b'; only 1: constructor; only 1: discriminate; only 1: constructor; only 1: trivial).	0.240544	19
Coq.Logic.FunctionalExtensionality.equal_f	600	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: auto).	0.107940	3
Coq.Logic.FunctionalExtensionality.equal_f_dep	600
Coq.Logic.FunctionalExtensionality.functional_extensionality	600
Coq.Logic.FunctionalExtensionality.forall_extensionality	600
Coq.Logic.FunctionalExtensionality.forall_extensionalityP	600	0.0.0	synth with cache (only 1: apply @functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.137613	3
Coq.Logic.FunctionalExtensionality.forall_extensionalityS	600	0.0.0	synth with cache (only 1: apply @functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.137253	3
Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	600
Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	600
Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	600	0.0.0.0.0	synth with cache (only 1: unfold forall_eq_rect; only 1: unfold forall_sig_eq_rect; only 1: simpl; only 1: rewrite @functional_extensionality_dep_good_refl; only 1: reflexivity).	0.265378	5
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	600
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	600	0.0.0	synth with cache (only 1: apply @functional_extensionality_dep_good; only 1: intros ?; only 1: apply @f_equal__functional_extensionality_dep_good).	0.210560	3
Coq.Logic.FunctionalExtensionality.eta_expansion_dep	600	1	synth with cache (only 1: reflexivity).	0.206178	2
Coq.Logic.FunctionalExtensionality.eta_expansion	600	0	synth with cache (only 1: apply @eta_expansion_dep).	0.208134	1
Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	600
Coq.Logic.ExtensionalityFacts.diagonal_inverse1	600
Coq.Logic.ExtensionalityFacts.diagonal_inverse2	600
Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	600
Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	600
Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	600
Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	600	0.1.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: intros *; only 1: intros ?; only 1: destruct H0; only 1: intros ?; only 1: destruct H2; only 1: apply H; only 1: intros; only 1: congruence; only 1: intros ?; only 1: apply FunctExt_iff_EqDeltaProjs; only 1: apply UniqInverse_EqDeltaProjs; only 1: trivial).	0.420829	27
Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros *; only 1: intros ?; only 1: destruct H0; only 1: split; only 1: unfold action; only 1: intros ?; only 1: apply H; only 1: intros ?; only 1: rewrite H1; only 1: reflexivity; only 1: unfold action; only 1: intros ?; only 1: apply H; only 1: intros ?; only 1: rewrite H0; only 1: reflexivity).	0.537028	41
Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	600
Coq.Logic.Berardi.Berardis_paradox.AC_IF	600
Coq.Logic.Berardi.Berardis_paradox.Retracts.AC	600
Coq.Logic.Berardi.Berardis_paradox.L1	600
Coq.Logic.Berardi.Berardis_paradox.retract_pow_U_U	600
Coq.Logic.Berardi.Berardis_paradox.not_has_fixpoint	600
Coq.Logic.Berardi.Berardis_paradox.classical_proof_irrelevance	600
Coq.Logic.PropFacts.injection_is_involution_in_Prop	600
Coq.Logic.StrictProp.Spr1_inj	600
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	600
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: intros ?; only 1: rewrite H0; only 1: easy).	0.216294	17
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H0; only 1: intros ?; only 1: apply H; only 1: easy).	0.210043	18
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	600
Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	600	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: split; only 1: trivial; only 1: trivial).	0.160516	7
Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	600	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: split; only 1: easy; only 1: easy).	0.202663	7
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_sym	600
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_trans	600
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep1_dep	600
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_dep1	600
Coq.Logic.EqdepFacts.eq_sigT_eq_dep	600
Coq.Logic.EqdepFacts.eq_dep_eq_sigT	600	0.0	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.138526	2
Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	600
Coq.Logic.EqdepFacts.eq_sig_eq_dep	600	0.0.0	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro).	0.137934	3
Coq.Logic.EqdepFacts.eq_dep_eq_sig	600	0.0	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.139151	2
Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	600	0.0.0	synth with cache (only 1: split; only 1: auto using eq_sig_eq_dep, eq_dep_eq_sig; only 1: auto using eq_sig_eq_dep, eq_dep_eq_sig).	0.139441	3
Coq.Logic.EqdepFacts.eq_sigT_sig_eq	600
Coq.Logic.EqdepFacts.eq_sigT_fst	600
Coq.Logic.EqdepFacts.eq_sigT_snd	600
Coq.Logic.EqdepFacts.eq_sig_fst	600
Coq.Logic.EqdepFacts.eq_sig_snd	600
Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep1_eq_on	600
Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep_eq_on	600
Coq.Logic.EqdepFacts.Equivalences.eq_dep_eq_on__UIP_on	600
Coq.Logic.EqdepFacts.Equivalences.UIP_on__UIP_refl_on	600
Coq.Logic.EqdepFacts.Equivalences.UIP_refl_on__Streicher_K_on	600
Coq.Logic.EqdepFacts.Equivalences.Streicher_K_on__eq_rect_eq_on	600
Coq.Logic.EqdepFacts.UIP_shift_on	600
Coq.Logic.EqdepFacts.Corollaries.eq_dep_eq_on__inj_pair2_on	600
Coq.Logic.EqdepFacts.f_eq_dep	600
Coq.Logic.EqdepFacts.eq_dep_non_dep	600	0.0	synth with cache (only 1: intros * []; only 1: reflexivity).	0.162878	2
Coq.Logic.EqdepFacts.f_eq_dep_non_dep	600	0.0	synth with cache (only 1: intros * []; only 1: reflexivity).	0.167704	2
Coq.micromega.ZifyClasses.mkapp2	600
Coq.micromega.ZifyClasses.mkapp	600
Coq.micromega.ZifyClasses.mkapp0	600
Coq.micromega.ZifyClasses.mkrel	600
Coq.Bool.DecBool.ifdec_left	600
Coq.Bool.DecBool.ifdec_right	600	0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: case H; only 1: intros ?; only 1: absurd A; only 1: trivial; only 1: trivial; only 1: auto).	0.198282	14
Coq.Bool.Sumbool.sumbool_of_bool	600
Coq.Bool.Sumbool.bool_eq_rec	600
Coq.Bool.Sumbool.bool_eq_ind	600
Coq.Bool.Sumbool.connectives.sumbool_and	600
Coq.Bool.Sumbool.connectives.sumbool_or	600
Coq.Bool.Sumbool.connectives.sumbool_not	600
Coq.Bool.Sumbool.bool_of_sumbool	600	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: intros ?; only 1: exists true; only 1: assumption; only 1: intros ?; only 1: exists false; only 1: assumption).	0.202783	18
Coq.Init.Byte.of_bits_to_bits	600
Coq.Init.Byte.to_bits_of_bits	600
Coq.Init.Tactics.decide_left	600
Coq.Init.Tactics.decide_right	600	0.0.0.0	synth with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	0.106861	4
Coq.Init.Peano.pred_Sn	600	0.0	synth with cache (only 1: simpl; only 1: reflexivity).	0.054342	2
Coq.Init.Peano.not_eq_S	600	0.0	synth with cache (only 1: red; only 1: auto).	0.092669	2
Coq.Init.Peano.O_S	600	0	synth with cache (only 1: discriminate).	0.088539	1
Coq.Init.Peano.n_Sn	600
Coq.Init.Peano.plus_n_O	600
Coq.Init.Peano.plus_O_n	600	0	synth with cache (only 1: reflexivity).	0.090934	1
Coq.Init.Peano.plus_n_Sm	600	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.151336	7
Coq.Init.Peano.plus_Sn_m	600	0	synth with cache (only 1: reflexivity).	0.100963	1
Coq.Init.Peano.mult_n_O	600
Coq.Init.Peano.mult_n_Sm	600
Coq.Init.Peano.le_pred	600
Coq.Init.Peano.le_S_n	600
Coq.Init.Peano.le_0_n	600
Coq.Init.Peano.le_n_S	600	0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: constructor; only 1: trivial).	0.100325	4
Coq.Init.Peano.nat_case	600
Coq.Init.Peano.nat_double_ind	600
Coq.Init.Peano.max_l	600
Coq.Init.Peano.max_r	600
Coq.Init.Peano.min_l	600
Coq.Init.Peano.min_r	600
Coq.Init.Peano.nat_rect_succ_r	600	0.0.1.0.1.0	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- IHn; only 1: trivial).	0.225037	20
Coq.Init.Peano.nat_rect_plus	600
Coq.Init.Specif.sigT_eta	600	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.056940	2
Coq.Init.Specif.sig_eta	600	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.090452	2
Coq.Init.Specif.sigT2_eta	600	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.088711	2
Coq.Init.Specif.sig2_eta	600	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.095695	2
Coq.Init.Specif.exists_to_inhabited_sig	600
Coq.Init.Specif.inhabited_sig_to_exists	600	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: destruct X; only 1: exists x; only 1: exact p).	0.094809	5
Coq.Init.Specif.sigT.eq_existT_uncurried	600	0.1.0.0	synth with cache (only 1: destruct pq; only 1: destruct e; only 1: destruct x; only 1: reflexivity).	0.101614	5
Coq.Init.Specif.sigT.eq_sigT_uncurried	600
Coq.Init.Specif.sigT.eq_existT_curried	600	0.1.0	synth with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.104992	4
Coq.Init.Specif.sigT.eq_existT_curried_map	600
Coq.Init.Specif.sigT.eq_existT_curried_trans	600
Coq.Init.Specif.sigT.eq_existT_curried_congr	600
Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	600
Coq.Init.Specif.sigT.eq_sigT_rect	600
Coq.Init.Specif.sigT.rew_sigT	600	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	0.120859	3
Coq.Init.Specif.sig.eq_exist_uncurried	600	0.1.0.0	synth with cache (only 1: destruct pq; only 1: destruct e; only 1: destruct x; only 1: reflexivity).	0.112537	5
Coq.Init.Specif.sig.eq_sig_uncurried	600
Coq.Init.Specif.sig.eq_sig_rect	600
Coq.Init.Specif.sig.eq_sig_uncurried_iff	600
Coq.Init.Specif.sig.rew_sig	600	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	0.121897	3
Coq.Init.Specif.sigT2.eq_existT2_uncurried	600	0.0.0.0.0.0	synth with cache (only 1: destruct pqr; only 1: destruct e0; only 1: destruct e; only 1: destruct x; only 1: simpl; only 1: reflexivity).	0.196265	6
Coq.Init.Specif.sigT2.eq_sigT2_uncurried	600
Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	600
Coq.Init.Specif.sigT2.eq_sigT2_rect	600
Coq.Init.Specif.sigT2.rew_sigT2	600	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	0.191396	3
Coq.Init.Specif.sig2.eq_exist2_uncurried	600	0.0.0.0.0.0	synth with cache (only 1: destruct pqr; only 1: destruct e0; only 1: destruct e; only 1: destruct x; only 1: simpl; only 1: reflexivity).	0.188586	6
Coq.Init.Specif.sig2.eq_sig2_uncurried	600
Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	600
Coq.Init.Specif.sig2.eq_sig2_rect	600
Coq.Init.Specif.sig2.rew_sig2	600	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	0.194201	3
Coq.Init.Specif.Choice_lemmas.Choice	600
Coq.Init.Specif.Choice_lemmas.Choice2	600
Coq.Init.Specif.Choice_lemmas.bool_choice	600
Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	600
Coq.Init.Specif.absurd_set	600
Coq.Init.Wf.Well_founded.Acc_inv	600
Coq.Init.Wf.Well_founded.well_founded_induction_type	600
Coq.Init.Wf.Well_founded.well_founded_induction	600
Coq.Init.Wf.Well_founded.well_founded_ind	600
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	600
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	600
Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	600
Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	600
Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	600
Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	600
Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	600
Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	600
Coq.Init.Logic_Type.identity_ind_r	600
Coq.Init.Logic_Type.identity_rec_r	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.105539	8
Coq.Init.Logic_Type.identity_rect_r	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case identity_sym with (1 := H); only 1: trivial).	0.108215	8
Coq.Init.Datatypes.andb_prop	600
Coq.Init.Datatypes.andb_true_intro	600
Coq.Init.Datatypes.eq_true_ind_r	600
Coq.Init.Datatypes.eq_true_rec_r	600	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0 in H; only 1: assumption).	0.088514	6
Coq.Init.Datatypes.eq_true_rect_r	600	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H in X; only 1: assumption).	0.086303	6
Coq.Init.Datatypes.surjective_pairing	600
Coq.Init.Datatypes.injective_projections	600
Coq.Init.Datatypes.pair_equal_spec	600
Coq.Init.Datatypes.rew_pair	600
Coq.Init.Datatypes.comparison_eq_stable	600
Coq.Init.Datatypes.CompOpp_involutive	600
Coq.Init.Datatypes.CompOpp_inj	600
Coq.Init.Datatypes.CompOpp_iff	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: apply CompOpp_inj; only 1: rewrite CompOpp_involutive; only 1: auto; only 1: intros; only 1: apply CompOpp_inj; only 1: rewrite CompOpp_involutive; only 1: auto).	0.156671	17
Coq.Init.Datatypes.CompareSpec2Type	600
Coq.Init.Datatypes.CompSpec2Type	600	0.0.0	synth with cache (only 1: intros; only 1: apply CompareSpec2Type; only 1: assumption).	0.164847	3
