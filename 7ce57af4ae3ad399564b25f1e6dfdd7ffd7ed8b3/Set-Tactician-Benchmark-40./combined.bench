
Coq.micromega.OrderedRing.rplus_morph_Proper	40
Coq.micromega.OrderedRing.rtimes_morph_Proper	40
Coq.micromega.OrderedRing.ropp_morph_Proper	40
Coq.micromega.OrderedRing.rle_morph_Proper	40
Coq.micromega.OrderedRing.rlt_morph_Proper	40
Coq.micromega.OrderedRing.rminus_morph_Proper	40
Coq.micromega.OrderedRing.Rneq_symm	40	17.32.25	search with cache (only 1: intros; only 1: intros H0; only 1: now elim H).	5.69036102295	11155
Coq.micromega.OrderedRing.Rplus_0_l	40
Coq.micromega.OrderedRing.Rplus_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0144619941711	2
Coq.micromega.OrderedRing.Rtimes_0_r	40	1.1	search with cache (only 1: intro; only 1: ring).	0.0154469013214	4
Coq.micromega.OrderedRing.Rplus_comm	40	0.2.1	search with cache (only 1: intro; only 1: intro; only 1: ring).	0.018513917923	6
Coq.micromega.OrderedRing.Rtimes_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.014937877655	2
Coq.micromega.OrderedRing.Rtimes_comm	40	0.2.1	search with cache (only 1: intro; only 1: intro; only 1: ring).	0.0193581581116	6
Coq.micromega.OrderedRing.Rminus_eq_0	40
Coq.micromega.OrderedRing.Rplus_cancel_l	40
Coq.micromega.OrderedRing.Req_em	40
Coq.micromega.OrderedRing.Req_dne	40
Coq.micromega.OrderedRing.Rle_lt_eq	40
Coq.micromega.OrderedRing.Rlt_trans	40
Coq.micromega.OrderedRing.Rle_lt_trans	40
Coq.micromega.OrderedRing.Rlt_le_trans	40
Coq.micromega.OrderedRing.Rle_gt_cases	40	1.8.2.2.0.0.6.0.9.0.0	search with cache (only 1: intros n m; only 1: rewrite Rlt_le_neq; only 1: destruct (Rlt_trichotomy n m) as [H| [H| H]]; only 1: left; only 1: rewrite Rlt_le_neq in H; only 1: now destruct H; only 1: left; only 1: rewrite H; only 1: apply Rle_refl; only 1: rewrite Rlt_le_neq in H; only 1: now right).	27.8794472218	24293
Coq.micromega.OrderedRing.Rlt_neq	40	0.0.0.0	search with cache (only 1: intros n m; only 1: rewrite Rlt_le_neq; only 1: intro H; only 1: now destruct H).	0.0209338665009	4
Coq.micromega.OrderedRing.Rle_ngt	40
Coq.micromega.OrderedRing.Rlt_nge	40
Coq.micromega.OrderedRing.Rplus_le_mono_l	40
Coq.micromega.OrderedRing.Rplus_le_mono_r	40
Coq.micromega.OrderedRing.Rplus_lt_mono_l	40
Coq.micromega.OrderedRing.Rplus_lt_mono_r	40	1.0.0.5.3.0	search with cache (only 1: intros n m p; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm n p); only 1: do 2 rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).	1.81315302849	822
Coq.micromega.OrderedRing.Rplus_lt_mono	40
Coq.micromega.OrderedRing.Rplus_le_mono	40
Coq.micromega.OrderedRing.Rplus_lt_le_mono	40
Coq.micromega.OrderedRing.Rplus_le_lt_mono	40
Coq.micromega.OrderedRing.Rplus_pos_pos	40
Coq.micromega.OrderedRing.Rplus_pos_nonneg	40
Coq.micromega.OrderedRing.Rplus_nonneg_pos	40
Coq.micromega.OrderedRing.Rplus_nonneg_nonneg	40
Coq.micromega.OrderedRing.Rle_le_minus	40
Coq.micromega.OrderedRing.Rlt_lt_minus	40
Coq.micromega.OrderedRing.Ropp_lt_mono	40
Coq.micromega.OrderedRing.Ropp_pos_neg	40
Coq.micromega.OrderedRing.Rtimes_nonneg_nonneg	40
Coq.micromega.OrderedRing.Rtimes_pos_neg	40
Coq.micromega.OrderedRing.Rtimes_neg_neg	40
Coq.micromega.OrderedRing.Rtimes_square_nonneg	40
Coq.micromega.OrderedRing.Rtimes_neq_0	40
Coq.micromega.OrderedRing.Ropp_neg_pos	40
Coq.micromega.OrderedRing.Rlt_0_1	40
Coq.micromega.OrderedRing.Rlt_succ_r	40
Coq.micromega.OrderedRing.Rlt_lt_succ	40
Coq.micromega.Ztac.eq_incl	40	0.2	search with cache (only 1: intros; only 1: now subst).	0.0208899974823	4
Coq.micromega.Ztac.elim_concl_eq	40
Coq.micromega.Ztac.elim_concl_le	40	4.0	search with cache (only 1: intros; only 1: Z.order).	0.120693922043	75
Coq.micromega.Ztac.elim_concl_lt	40	1.0	search with cache (only 1: intros; only 1: Z.order).	0.016900062561	3
Coq.micromega.Ztac.Zlt_le_add_1	40
Coq.micromega.Ztac.add_le	40	1.7	search with cache (only 1: intros; only 1: now apply Z.add_nonneg_nonneg).	0.0259580612183	17
Coq.micromega.Ztac.mul_le	40	4.1.0.0	search with cache (only 1: intros; only 1: change 0 with (0 + 0); only 1: change 0 with (0 + 0); only 1: Z.order_pos).	0.0514569282532	15
Coq.micromega.ZifyInst.PropAnd	40
Coq.micromega.ZifyInst.PropOr	40	0.0	search with cache (only 1: constructor; only 1: tauto).	0.0408878326416	2
Coq.micromega.ZifyInst.PropArrow	40	0.0	search with cache (only 1: constructor; only 1: tauto).	0.0303809642792	2
Coq.micromega.ZifyInst.PropIff	40	0.0	search with cache (only 1: constructor; only 1: tauto).	0.0860500335693	2
Coq.micromega.ZifyInst.PropNot	40	7.150	search with cache (only 1: constructor; only 1: tauto).	4.02807998657	13192
Coq.micromega.ZifyInst.of_nat_to_nat_eq	40
Coq.micromega.ZifyInst.z_max_spec	40
Coq.micromega.ZifyInst.z_min_spec	40
Coq.micromega.ZCoeff.req_refl	40
Coq.micromega.ZCoeff.req_sym	40
Coq.micromega.ZCoeff.req_trans	40
Coq.micromega.ZCoeff.rplus_morph_Proper	40
Coq.micromega.ZCoeff.rtimes_morph_Proper	40
Coq.micromega.ZCoeff.ropp_morph_Proper	40
Coq.micromega.ZCoeff.rle_morph_Proper	40
Coq.micromega.ZCoeff.rlt_morph_Proper	40
Coq.micromega.ZCoeff.rminus_morph_Proper	40
Coq.micromega.ZCoeff.ring_ops_wd	40	0.1.10.70	search with cache (only 1: split; only 1: exact (SORplus_wd sor); only 1: exact (SORtimes_wd sor); only 1: exact (SORopp_wd sor)).	1.71700406075	6973
Coq.micromega.ZCoeff.Zring_morph	40
Coq.micromega.ZCoeff.phi_pos1_pos	40
Coq.micromega.ZCoeff.phi_pos1_succ	40
Coq.micromega.ZCoeff.clt_pos_morph	40
Coq.micromega.ZCoeff.clt_morph	40
Coq.micromega.ZCoeff.Zcleb_morph	40
Coq.micromega.ZCoeff.Zcneqb_morph	40
Coq.micromega.Fourier_util.Rlt_mult_inv_pos	40	0.0.2.2	search with cache (only 1: intros; only 1: apply Rmult_lt_0_compat; only 1: auto with real; only 1: auto with real).	0.0287969112396	8
Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	40
Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	2.4.1.0	search with cache (only 1: intros x H; only 1: rewrite Rplus_comm; only 1: red; only 1: auto with real).	0.198456048965	93
Coq.micromega.Fourier_util.Rle_mult_inv_pos	40	0.2.0.0	search with cache (only 1: intros x y H H0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: ring).	0.16011595726	18
Coq.micromega.ZifyClasses.mkapp2	40
Coq.micromega.ZifyClasses.mkapp	40
Coq.micromega.ZifyClasses.mkapp0	40
Coq.micromega.ZifyClasses.mkrel	40
Coq.micromega.ZMicromega.eq_le_iff	40	13.0.0.0.0.0.0.15	search with cache (only 1: intuition idtac; only 1: apply Z.eq_le_incl; only 1: subst; only 1: trivial; only 1: apply Z.eq_le_incl; only 1: subst; only 1: trivial; only 1: Z.order).	36.1444149017	66587
Coq.micromega.ZMicromega.lt_le_iff	40
Coq.micromega.ZMicromega.le_0_iff	40	1.1.0	search with cache (only 1: split; only 1: now rewrite Z.le_0_sub; only 1: now rewrite Z.le_0_sub).	0.0220041275024	5
Coq.micromega.ZMicromega.le_neg	40	7.1.8.5.0.4.0	search with cache (only 1: split; only 1: intros; only 1: rewrite ?Z.opp_pos_neg; only 1: Z.order; only 1: rewrite ?Z.opp_pos_neg; only 1: intros; only 1: Z.order).	3.52916502953	7417
Coq.micromega.ZMicromega.eq_cnf	40
Coq.micromega.ZMicromega.Zsor	40
Coq.micromega.ZMicromega.ZSORaddon	40
Coq.micromega.ZMicromega.ZNpower	40	0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: unfold Z.pow_pos; only 1: rewrite <- (Z.mul_1_r (pow_pos _ _ _)); only 1: generalize 1; only 1: induction p; only 1: simpl; only 1: intros; only 1: rewrite ?IHp, ?Z.mul_assoc; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite ?IHp, ?Z.mul_assoc; only 1: trivial; only 1: simpl; only 1: intros; only 1: trivial).	39.9442119598	34789
Coq.micromega.ZMicromega.Zeval_expr_compat	40
Coq.micromega.ZMicromega.Zeval_formula_compat'	40
Coq.micromega.ZMicromega.Zeval_nformula_dec	40
Coq.micromega.ZMicromega.ZWeakChecker_sound	40
Coq.micromega.ZMicromega.eval_pol_sub	40
Coq.micromega.ZMicromega.eval_pol_add	40
Coq.micromega.ZMicromega.eval_pol_mul	40
Coq.micromega.ZMicromega.eval_pol_norm	40
Coq.micromega.ZMicromega.Zunsat_sound	40
Coq.micromega.ZMicromega.xnnormalise_correct	40
Coq.micromega.ZMicromega.eval_pol_Pc	40	7.0	search with cache (only 1: intros; only 1: intuition auto using Z.le_ge, Z.ge_le, Z.lt_gt, Z.gt_lt).	0.00975108146667	9
Coq.micromega.ZMicromega.xnormalise_correct	40
Coq.micromega.ZMicromega.cnf_of_list_correct	40
Coq.micromega.ZMicromega.normalise_correct	40
Coq.micromega.ZMicromega.xnegate_correct	40
Coq.micromega.ZMicromega.negate_correct	40
Coq.micromega.ZMicromega.Zdivide_ceiling	40
Coq.micromega.ZMicromega.narrow_interval_lower_bound	40
Coq.micromega.ZMicromega.isZ0_0	40
Coq.micromega.ZMicromega.isZ0_n0	40	0.0.0.0.0.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: intuition congruence; only 1: simpl; only 1: intuition congruence; only 1: simpl; only 1: intuition congruence).	0.050595998764	7
Coq.micromega.ZMicromega.Zdiv_pol_correct	40
Coq.micromega.ZMicromega.Zgcd_pol_ge	40
Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	40
Coq.micromega.ZMicromega.Zdivide_pol_one	40
Coq.micromega.ZMicromega.Zgcd_minus	40
Coq.micromega.ZMicromega.Zdivide_pol_sub	40
Coq.micromega.ZMicromega.Zdivide_pol_sub_0	40
Coq.micromega.ZMicromega.Zgcd_pol_div	40
Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	40
Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40
Coq.micromega.ZMicromega.pos_le_add	40
Coq.micromega.ZMicromega.max_var_le	40
Coq.micromega.ZMicromega.max_var_correct	40
Coq.micromega.ZMicromega.max_var_nformulae_mono_aux	40
Coq.micromega.ZMicromega.max_var_nformulae_mono_aux'	40
Coq.micromega.ZMicromega.max_var_nformulae_correct_aux	40
Coq.micromega.ZMicromega.max_var_nformalae_correct	40
Coq.micromega.ZMicromega.in_bdepth	40
Coq.micromega.ZMicromega.eval_Psatz_sound	40
Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40
Coq.micromega.ZMicromega.cutting_plane_sound	40
Coq.micromega.ZMicromega.genCuttingPlaneNone	40
Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40
Coq.micromega.ZMicromega.eval_nformula_bound_var	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite xnnormalise_correct; only 1: simpl; only 1: auto).	0.0199329853058	4
Coq.micromega.ZMicromega.agree_env_subset	40
Coq.micromega.ZMicromega.agree_env_jump	40	10.1.4.0.0.1	search with cache (only 1: unfold agree_env; only 1: intros; only 1: apply H; only 1: apply Pos.add_le_mono; only 1: eauto; only 1: apply Pos.le_refl).	12.2513849735	8371
Coq.micromega.ZMicromega.agree_env_tail	40
Coq.micromega.ZMicromega.max_var_acc	40
Coq.micromega.ZMicromega.agree_env_eval_nformula	40
Coq.micromega.ZMicromega.agree_env_eval_nformulae	40
Coq.micromega.ZMicromega.eq_true_iff_eq	40	0.0.1.1.20.75	search with cache (only 1: intros x y; only 1: destruct y; only 1: intuition congruence; only 1: destruct x; only 1: intuition congruence; only 1: intuition congruence).	22.8216691017	63855
Coq.micromega.ZMicromega.ZChecker_sound	40
Coq.micromega.ZMicromega.ZTautoChecker_sound	40
Coq.micromega.ZifyBool.Z_of_bool_bound	40
Coq.micromega.ZifyBool.Z_eqb_isZero	40
Coq.micromega.ZifyBool.Z_leb_sub	40
Coq.micromega.ZifyBool.Z_ltb_leb	40
Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	40
Coq.micromega.ZifyBool.Z_eqb_ZSpec_ok	40	0.11.0.17	search with cache (only 1: destruct x; only 1: intuition try easy; only 1: intuition try easy; only 1: intuition try easy).	2.14677286148	3439
Coq.micromega.ZifyBool.leZeroSpec_ok	40
Coq.micromega.Env.jump_add	40
Coq.micromega.Env.jump_simpl	40
Coq.micromega.Env.jump_tl	40	0.2.2.26.8.0.1.0.0	search with cache (only 1: unfold tail; only 1: rewrite <- ?jump_add; only 1: unfold jump; only 1: f_equal; only 1: simpl; only 1: destruct j; only 1: f_equal; only 1: f_equal; only 1: now rewrite Pos.add_diag).	8.39200901985	28556
Coq.micromega.Env.jump_succ	40	3.3.3.27.10.0.1.0	search with cache (only 1: rewrite <- !jump_add; only 1: unfold jump; only 1: f_equal; only 1: simpl; only 1: destruct j; only 1: f_equal; only 1: f_equal; only 1: f_equal).	12.1213240623	43295
Coq.micromega.Env.jump_pred_double	40
Coq.micromega.Env.nth_spec	40
Coq.micromega.Env.nth_jump	40	4.0.0	search with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: apply Pos.add_comm).	0.0238630771637	11
Coq.micromega.Env.nth_pred_double	40	0.0.0	search with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: now rewrite Pos.add_1_r, Pos.succ_pred_double, Pos.add_diag).	0.01904296875	3
Coq.micromega.Tauto.eval_f_morph	40
Coq.micromega.Tauto.map_simpl	40	4.1.0.0	search with cache (only 1: induction l as [| a l IH]; only 1: simpl; only 1: auto; only 1: constructor).	0.0247039794922	13
Coq.micromega.Tauto.is_X_inv	40
Coq.micromega.Tauto.if_same	40	1.1.26.4.24	search with cache (only 1: intro; only 1: intros H; only 1: induction H as [| a l Hal Hl IH]; only 1: congruence; only 1: congruence).	2.6841301918	10773
Coq.micromega.Tauto.is_cnf_tt_cnf_ff	40	2	search with cache (only 1: reflexivity).	0.0109598636627	3
Coq.micromega.Tauto.is_cnf_ff_cnf_ff	40	0	search with cache (only 1: reflexivity).	0.0104339122772	1
Coq.micromega.Tauto.is_cnf_tt_inv	40	65	search with cache (only 1: now intros []).	3.92281913757	15529
Coq.micromega.Tauto.is_cnf_ff_inv	40
Coq.micromega.Tauto.if_cnf_tt	40	0.0.0.0.8.0	search with cache (only 1: unfold cnf_tt; only 1: destruct f; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	0.236228942871	133
Coq.micromega.Tauto.or_cnf_opt_cnf_ff	40	4.4.0.11.1.2.8.0	search with cache (only 1: unfold cnf_ff; only 1: destruct f; only 1: reflexivity; only 1: destruct c; only 1: destruct f; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	13.8961110115	25752
Coq.micromega.Tauto.abs_and_pol	40
Coq.micromega.Tauto.abs_or_pol	40
Coq.micromega.Tauto.xcnf_true_mk_arrow_l	40
Coq.micromega.Tauto.or_cnf_opt_cnf_ff_r	40	1.0.0.0.0.3.0.4.0	search with cache (only 1: intros; only 1: unfold or_cnf_opt; only 1: rewrite is_cnf_tt_cnf_ff; only 1: destruct (is_cnf_tt f) eqn:EQ; only 1: simpl; only 1: apply is_cnf_tt_inv in EQ; only 1: congruence; only 1: simpl; only 1: congruence).	0.70637512207	632
Coq.micromega.Tauto.xcnf_true_mk_arrow_r	40
Coq.micromega.Tauto.abst_form_correct	40
Coq.micromega.Tauto.radd_term_term	40
Coq.micromega.Tauto.radd_term_term'	40
Coq.micromega.Tauto.xror_clause_clause	40
Coq.micromega.Tauto.ror_clause_clause	40
Coq.micromega.Tauto.ror_cnf_cnf	40
Coq.micromega.Tauto.ror_opt_cnf_cnf	40
Coq.micromega.Tauto.ratom_cnf	40
Coq.micromega.Tauto.rxcnf_xcnf	40
Coq.micromega.Tauto.eval_cnf_app	40
Coq.micromega.Tauto.eval_cnf_ff	40
Coq.micromega.Tauto.eval_cnf_tt	40	2.0.0	search with cache (only 1: unfold eval_cnf; only 1: intros; only 1: tauto).	0.0306260585785	5
Coq.micromega.Tauto.eval_cnf_and_opt	40
Coq.micromega.Tauto.add_term_correct	40
Coq.micromega.Tauto.no_middle_eval_tt	40	95	search with cache (only 1: firstorder).	14.1066741943	19854
Coq.micromega.Tauto.or_clause_correct	40
Coq.micromega.Tauto.or_clause_cnf_correct	40
Coq.micromega.Tauto.eval_cnf_cons	40	0.2.7.14	search with cache (only 1: unfold cnf_ff, eval_cnf, eval_clause; only 1: intros; only 1: repeat rewrite make_conj_cons; only 1: tauto).	11.7930119038	4319
Coq.micromega.Tauto.eval_cnf_cons_iff	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: tauto).	0.0897238254547	5
Coq.micromega.Tauto.or_cnf_correct	40
Coq.micromega.Tauto.or_cnf_opt_correct	40
Coq.micromega.Tauto.xcnf_correct	40
Coq.micromega.Tauto.cnf_checker_sound	40
Coq.micromega.Tauto.tauto_checker_sound	40
Coq.micromega.Tauto.eval_bf_map	40
Coq.micromega.ZifyComparison.Z_of_comparison_bound	40
Coq.micromega.ZifyComparison.Zcompare_spec	40
Coq.micromega.EnvRing.radd_ext_Proper	40	32	search with cache (only 1: exact (Radd_ext Reqe)).	1.1063580513	1322
Coq.micromega.EnvRing.rmul_ext_Proper	40	33	search with cache (only 1: exact (Rmul_ext Reqe)).	1.10027599335	1280
Coq.micromega.EnvRing.ropp_ext_Proper	40	34	search with cache (only 1: exact (Ropp_ext Reqe)).	0.824057817459	1317
Coq.micromega.EnvRing.rsub_ext_Proper	40	3.17	search with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	0.394973039627	371
Coq.micromega.EnvRing.Peq_ok	40
Coq.micromega.EnvRing.Peq_spec	40
Coq.micromega.EnvRing.Pphi0	40
Coq.micromega.EnvRing.Pphi1	40
Coq.micromega.EnvRing.env_morph	40
Coq.micromega.EnvRing.Pjump_add	40
Coq.micromega.EnvRing.Pjump_xO_tail	40
Coq.micromega.EnvRing.Pjump_pred_double	40
Coq.micromega.EnvRing.mkPinj_ok	40
Coq.micromega.EnvRing.pow_pos_add	40
Coq.micromega.EnvRing.ceqb_spec	40
Coq.micromega.EnvRing.mkPX_ok	40
Coq.micromega.EnvRing.PaddC_ok	40
Coq.micromega.EnvRing.PsubC_ok	40	0.3.0.0.0.0.0.1.0.0.0.0	search with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	13.1331839561	2812
Coq.micromega.EnvRing.PmulC_aux_ok	40
Coq.micromega.EnvRing.PmulC_ok	40
Coq.micromega.EnvRing.Popp_ok	40
Coq.micromega.EnvRing.PaddX_ok	40
Coq.micromega.EnvRing.Padd_ok	40
Coq.micromega.EnvRing.PsubX_ok	40
Coq.micromega.EnvRing.Psub_ok	40
Coq.micromega.EnvRing.PmulI_ok	40
Coq.micromega.EnvRing.Pmul_ok	40
Coq.micromega.EnvRing.Psquare_ok	40
Coq.micromega.EnvRing.Mphi_morph	40
Coq.micromega.EnvRing.Mjump_xO_tail	40
Coq.micromega.EnvRing.Mjump_pred_double	40	0.0.0.0	search with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: now jump_simpl).	0.0826930999756	4
Coq.micromega.EnvRing.Mjump_add	40	0.1.0.0.3	search with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.10075712204	9
Coq.micromega.EnvRing.mkZmon_ok	40	3.0.6.0.3.7	search with cache (only 1: induction M; only 1: rsimpl; only 1: simpl; only 1: rsimpl; only 1: simpl; only 1: rsimpl).	3.62574505806	1466
Coq.micromega.EnvRing.zmon_pred_ok	40
Coq.micromega.EnvRing.mkVmon_ok	40
Coq.micromega.EnvRing.Mphi_ok	40
Coq.micromega.EnvRing.POneSubst_ok	40
Coq.micromega.EnvRing.PNSubst1_ok	40
Coq.micromega.EnvRing.PNSubst_ok	40
Coq.micromega.EnvRing.PSubstL1_ok	40
Coq.micromega.EnvRing.PSubstL_ok	40
Coq.micromega.EnvRing.PNSubstL_ok	40
Coq.micromega.EnvRing.mkX_ok	40
Coq.micromega.EnvRing.Ppow_pos_ok	40
Coq.micromega.EnvRing.Ppow_N_ok	40
Coq.micromega.EnvRing.norm_aux_PEadd	40
Coq.micromega.EnvRing.norm_aux_PEopp	40
Coq.micromega.EnvRing.norm_aux_spec	40
Coq.micromega.RingMicromega.rplus_morph_Proper	40
Coq.micromega.RingMicromega.rtimes_morph_Proper	40
Coq.micromega.RingMicromega.ropp_morph_Proper	40
Coq.micromega.RingMicromega.rle_morph_Proper	40
Coq.micromega.RingMicromega.rlt_morph_Proper	40
Coq.micromega.RingMicromega.rminus_morph_Proper	40
Coq.micromega.RingMicromega.cleb_sound	40
Coq.micromega.RingMicromega.cneqb_sound	40
Coq.micromega.RingMicromega.cltb_sound	40
Coq.micromega.RingMicromega.OpMult_sound	40
Coq.micromega.RingMicromega.OpAdd_sound	40
Coq.micromega.RingMicromega.pexpr_times_nformula_correct	40
Coq.micromega.RingMicromega.nformula_times_nformula_correct	40
Coq.micromega.RingMicromega.nformula_plus_nformula_correct	40
Coq.micromega.RingMicromega.eval_Psatz_Sound	40
Coq.micromega.RingMicromega.ge_bool_cases	40
Coq.micromega.RingMicromega.extract_hyps_app	40
Coq.micromega.RingMicromega.nhyps_of_psatz_correct	40
Coq.micromega.RingMicromega.check_inconsistent_sound	40
Coq.micromega.RingMicromega.checker_nf_sound	40
Coq.micromega.RingMicromega.eval_pol_sub	40
Coq.micromega.RingMicromega.eval_pol_add	40
Coq.micromega.RingMicromega.eval_pol_mul	40
Coq.micromega.RingMicromega.eval_pol_opp	40
Coq.micromega.RingMicromega.eval_pol_norm	40
Coq.micromega.RingMicromega.normalise_sound	40
Coq.micromega.RingMicromega.negate_correct	40
Coq.micromega.RingMicromega.cnf_of_list_correct	40
Coq.micromega.RingMicromega.eq0_cnf	40
Coq.micromega.RingMicromega.xnormalise_correct	40
Coq.micromega.RingMicromega.xnegate_correct	40
Coq.micromega.RingMicromega.cnf_normalise_correct	40
Coq.micromega.RingMicromega.cnf_negate_correct	40
Coq.micromega.RingMicromega.eval_nformula_dec	40
Coq.micromega.RingMicromega.xdenorm_correct	40
Coq.micromega.RingMicromega.denorm_correct	40
Coq.micromega.RingMicromega.eval_pexprSC	40
Coq.micromega.RingMicromega.eval_formulaSC	40
Coq.micromega.Refl.make_impl_true	40	0.6.6	search with cache (only 1: induction l as [| x xs Hl]; only 1: easy; only 1: now simpl).	0.163552045822	291
Coq.micromega.Refl.make_impl_map	40	6.0.0.0.1.22	search with cache (only 1: intros P Q H xs H0; only 1: induction H0; only 1: simpl; only 1: firstorder; only 1: simpl; only 1: firstorder).	11.5500881672	21629
Coq.micromega.Refl.make_conj_cons	40	3.3.0.6.9.2.0	search with cache (only 1: intros Q H H'; only 1: induction l; only 1: firstorder; only 1: simpl; only 1: split; only 1: trivial; only 1: trivial).	8.2595448494	18157
Coq.micromega.Refl.make_conj_impl	40
Coq.micromega.Refl.make_conj_in	40
Coq.micromega.Refl.make_conj_app	40
Coq.micromega.Refl.make_conj_rapp	40
Coq.micromega.Refl.not_make_conj_cons	40	1.2.0	search with cache (only 1: intros; only 1: rewrite make_conj_cons; only 1: tauto).	0.087033033371	6
Coq.micromega.Refl.not_make_conj_app	40
Coq.micromega.QMicromega.Qsor	40
Coq.micromega.QMicromega.QSORaddon	40
Coq.micromega.QMicromega.Qeval_expr_simpl	40
Coq.micromega.QMicromega.QNpower	40
Coq.micromega.QMicromega.Qeval_expr_compat	40
Coq.micromega.QMicromega.Qeval_formula_compat	40
Coq.micromega.QMicromega.Qeval_nformula_dec	40
Coq.micromega.QMicromega.QWeakChecker_sound	40
Coq.micromega.QMicromega.QTautoChecker_sound	40
Coq.micromega.RMicromega.Rsrt	40
Coq.micromega.RMicromega.Rsor	40
Coq.micromega.RMicromega.Rinv_1	40	1.1.1	search with cache (only 1: intros; only 1: rewrite Rinv_1; only 1: ring).	0.037670135498	11
Coq.micromega.RMicromega.Qeq_true	40
Coq.micromega.RMicromega.Qeq_false	40
Coq.micromega.RMicromega.Qle_true	40
Coq.micromega.RMicromega.Q2R_0	40	11.0.0	search with cache (only 1: unfold Qinv, Q2R, Qeq; only 1: unfold Qnum, Qden; only 1: auto with real).	0.211575031281	194
Coq.micromega.RMicromega.Q2R_1	40	4.3.0.4	search with cache (only 1: unfold Qinv, Q2R, Qeq; only 1: unfold Qnum, Qden; only 1: rewrite RIneq.Rinv_1; only 1: auto with real rorders).	0.20258307457	166
Coq.micromega.RMicromega.Q2R_inv_ext	40
Coq.micromega.RMicromega.QSORaddon	40
Coq.micromega.RMicromega.is_neg_true	40
Coq.micromega.RMicromega.is_neg_false	40
Coq.micromega.RMicromega.Q2R_m_Proper	40
Coq.micromega.RMicromega.Q2R_pow_pos	40
Coq.micromega.RMicromega.Q2R_pow_N	40
Coq.micromega.RMicromega.Qmult_integral	40
Coq.micromega.RMicromega.Qpower_positive_eq_zero	40
Coq.micromega.RMicromega.Qpower_positive_zero	40
Coq.micromega.RMicromega.Q2RpowerRZ	40
Coq.micromega.RMicromega.Qpower0	40
Coq.micromega.RMicromega.Q_of_RcstR	40
Coq.micromega.RMicromega.Reval_formula_compat	40
Coq.micromega.RMicromega.Reval_nformula_dec	40
Coq.micromega.RMicromega.RWeakChecker_sound	40
Coq.micromega.RMicromega.RTautoChecker_sound	40
Coq.rtauto.Bintree.Gt_Psucc	40	2.61	search with cache (only 1: fix sqrtrem_spec 1; only 1: auto).	5.25211906433	15317
Coq.rtauto.Bintree.Psucc_Gt	40
Coq.rtauto.Bintree.map_app	40	0.36.11	search with cache (only 1: intros Compat Hl Hr; only 1: fix sqrtrem_spec 1; only 1: trivial).	1.46474504471	5880
Coq.rtauto.Bintree.length_map	40	1.2.0.0.0	search with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: apply f_equal; only 1: apply IHl).	0.0245130062103	8
Coq.rtauto.Bintree.Lget_map	40
Coq.rtauto.Bintree.Lget_app	40	0.1.0.8.0.0.5.4	search with cache (only 1: induction l; only 1: induction i; only 1: trivial; only 1: trivial; only 1: induction i; only 1: trivial; only 1: simpl; only 1: auto).	3.46971893311	5201
Coq.rtauto.Bintree.Lget_app_Some	40
Coq.rtauto.Bintree.Tget_Tempty	40	2.0.0.0.0.0.25	search with cache (only 1: induction p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.505259990692	1510
Coq.rtauto.Bintree.Tget_Tadd	40	6.51	search with cache (only 1: fix sqrtrem_spec 1; only 1: auto).	6.20312595367	19488
Coq.rtauto.Bintree.get_empty	40	0.1.3.5	search with cache (only 1: destruct i; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.0895340442657	75
Coq.rtauto.Bintree.get_Full_Gt	40
Coq.rtauto.Bintree.get_Full_Eq	40
Coq.rtauto.Bintree.get_push_Full	40
Coq.rtauto.Bintree.Full_push_compat	40
Coq.rtauto.Bintree.Full_index_one_empty	40
Coq.rtauto.Bintree.push_not_empty	40	0.7.1.13.10	search with cache (only 1: unfold empty, get; only 1: intros; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: unfold index, get, push; only 1: congruence).	2.53805494308	6075
Coq.rtauto.Bintree.get_In	40
Coq.rtauto.Bintree.Tget_Tmap	40
Coq.rtauto.Bintree.Tmap_Tadd	40
Coq.rtauto.Bintree.get_map	40
Coq.rtauto.Bintree.map_push	40
Coq.rtauto.Bintree.Full_map	40
Coq.rtauto.Rtauto.pos_eq_refl	40
Coq.rtauto.Rtauto.form_eq_refl	40
Coq.rtauto.Rtauto.compose0	40	8.3.0.4.0.0.5.3	search with cache (only 1: induction F; only 1: unfold empty, get; only 1: simpl; only 1: intros i e; only 1: congruence; only 1: intro i; only 1: simpl; only 1: eauto).	20.5772378445	48146
Coq.rtauto.Rtauto.compose1	40
Coq.rtauto.Rtauto.compose2	40	1.0.0.0.5.4.0.0	search with cache (only 1: induction F; only 1: intros A B H; only 1: auto; only 1: intro i; only 1: intros A B H; only 1: simpl; only 1: apply IHF; only 1: auto).	2.05059099197	3971
Coq.rtauto.Rtauto.compose3	40	1.0.0.1.6.1.0.1.0	search with cache (only 1: induction F; only 1: intros A B C H; only 1: simpl; only 1: auto; only 1: intro i; only 1: intros A B C H; only 1: simpl; only 1: apply IHF; only 1: auto).	3.44315910339	6355
Coq.rtauto.Rtauto.weaken	40
Coq.rtauto.Rtauto.project_In	40
Coq.rtauto.Rtauto.project	40
Coq.rtauto.Rtauto.interp_proof	40
Coq.rtauto.Rtauto.Reflect	40
Coq.nsatz.Nsatz.psos_r1b	40
Coq.nsatz.Nsatz.psos_r1	40	1.2.0	search with cache (only 1: intros x y H; only 1: setoid_rewrite H; only 1: cring).	0.135391950607	6
Coq.nsatz.Nsatz.nsatzR_diff	40
Coq.nsatz.Nsatz.P0Z_correct	40	43	search with cache (only 1: tauto).	10.2995638847	6754
Coq.nsatz.Nsatz.Rext	40
Coq.nsatz.Nsatz.Rset	40
Coq.nsatz.Nsatz.Rtheory	40	0.0.0.0.0.0.0.0.0.8	search with cache (only 1: constructor; only 1: cring; only 1: cring; only 1: cring; only 1: cring; only 1: cring; only 1: cring; only 1: cring; only 1: cring; only 1: cring).	2.71148300171	276
Coq.nsatz.Nsatz.PolZadd_correct	40
Coq.nsatz.Nsatz.PolZmul_correct	40
Coq.nsatz.Nsatz.R_power_theory	40
Coq.nsatz.Nsatz.norm_correct	40
Coq.nsatz.Nsatz.PolZeq_correct	40
Coq.nsatz.Nsatz.mult_l_correct	40
Coq.nsatz.Nsatz.compute_list_correct	40
Coq.nsatz.Nsatz.check_correct	40
Coq.nsatz.Nsatz.Rsth	40
Coq.nsatz.Nsatz.Rri	40
Coq.nsatz.Nsatz.R_one_zero	40	20	search with cache (only 1: Lra.lra).	0.139213085175	186
Coq.nsatz.Nsatz.Rcri	40
Coq.nsatz.Nsatz.Rdi	40
Coq.nsatz.Nsatz.Qri	40
Coq.nsatz.Nsatz.Q_one_zero	40
Coq.nsatz.Nsatz.Qcri	40
Coq.nsatz.Nsatz.Qdi	40
Coq.nsatz.Nsatz.Z_one_zero	40	0	search with cache (only 1: auto with *).	0.0568869113922	1
Coq.nsatz.Nsatz.Zcri	40	2	search with cache (only 1: auto with *).	0.0365619659424	21
Coq.nsatz.Nsatz.Zdi	40
Coq.omega.OmegaLemmas.Zred_factor0	40
Coq.omega.OmegaLemmas.Zred_factor1	40
Coq.omega.OmegaLemmas.Zred_factor2	40
Coq.omega.OmegaLemmas.Zred_factor3	40	1	search with cache (only 1: now Z.nzsimpl).	0.410316944122	20
Coq.omega.OmegaLemmas.Zred_factor4	40	0.1	search with cache (only 1: rewrite Z.mul_add_distr_l; only 1: now Z.nzsimpl).	0.0831580162048	3
Coq.omega.OmegaLemmas.Zred_factor5	40	0	search with cache (only 1: now Z.nzsimpl).	0.0716400146484	1
Coq.omega.OmegaLemmas.Zred_factor6	40	0	search with cache (only 1: now Z.nzsimpl).	0.0595579147339	1
Coq.omega.OmegaLemmas.new_var	40	1.15.14	search with cache (only 1: intros; only 1: exists x; only 1: now f_equal).	0.442342996597	748
Coq.omega.OmegaLemmas.OMEGA1	40	0.1	search with cache (only 1: intros; only 1: now subst).	0.0141489505768	3
Coq.omega.OmegaLemmas.OMEGA2	40	2	search with cache (only 1: now apply Z.add_nonneg_nonneg).	0.342866897583	3
Coq.omega.OmegaLemmas.OMEGA3	40
Coq.omega.OmegaLemmas.OMEGA4	40
Coq.omega.OmegaLemmas.OMEGA5	40	4.1	search with cache (only 1: intros Hx Hxy; only 1: now subst).	0.0304720401764	7
Coq.omega.OmegaLemmas.OMEGA6	40
Coq.omega.OmegaLemmas.OMEGA7	40	14.4.4.1.1	search with cache (only 1: Z.swap_greater; only 1: intros Hx Hxy; only 1: intro; only 1: intro; only 1: Z.order_pos).	31.9319849014	4048
Coq.omega.OmegaLemmas.OMEGA8	40
Coq.omega.OmegaLemmas.OMEGA9	40
Coq.omega.OmegaLemmas.OMEGA10	40
Coq.omega.OmegaLemmas.OMEGA11	40	2.1.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal).	0.0294308662415	6
Coq.omega.OmegaLemmas.OMEGA12	40	2.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: apply Z.add_shuffle3).	0.0226678848267	4
Coq.omega.OmegaLemmas.OMEGA13	40
Coq.omega.OmegaLemmas.OMEGA14	40	0.1.0.0.0.0.0.0.0	search with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l, <- Pos2Z.opp_neg, Z.add_opp_diag_r; only 1: now Z.nzsimpl).	0.122223854065	13
Coq.omega.OmegaLemmas.OMEGA15	40	1.1.0.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal; only 1: apply Z.add_shuffle3).	0.0327351093292	6
Coq.omega.OmegaLemmas.OMEGA16	40	2.4	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: f_equal).	0.172968149185	17
Coq.omega.OmegaLemmas.OMEGA17	40	0.0	search with cache (only 1: intros H ->; only 1: now Z.nzsimpl).	0.137320041656	2
Coq.omega.OmegaLemmas.OMEGA18	40	1.1.4.1	search with cache (only 1: unfold Zne, not; only 1: intros; only 1: subst; only 1: now Z.nzsimpl).	0.225898981094	61
Coq.omega.OmegaLemmas.OMEGA19	40
Coq.omega.OmegaLemmas.OMEGA20	40	0.0.0.0	search with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now Z.nzsimpl).	0.0703980922699	4
Coq.omega.OmegaLemmas.intro_Z	40
Coq.omega.PreOmega.mod_0_r_ext	40	0.0.1.1.0.0.21.3	search with cache (only 1: intros Hm; only 1: destruct x; only 1: subst; only 1: trivial; only 1: subst; only 1: trivial; only 1: subst; only 1: trivial).	2.4700088501	4559
Coq.omega.PreOmega.div_0_r_ext	40	0.1.0.1.0.0	search with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: trivial; only 1: trivial; only 1: trivial).	0.0267231464386	8
Coq.omega.PreOmega.rem_0_r_ext	40	0.0.0.0.0.0.1.0.2	search with cache (only 1: destruct x; only 1: intro; only 1: now subst; only 1: intro; only 1: subst; only 1: trivial; only 1: intro; only 1: subst; only 1: trivial).	0.258167028427	201
Coq.omega.PreOmega.quot_0_r_ext	40	0.0.3.1.0.0	search with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: trivial; only 1: trivial; only 1: trivial).	0.0270919799805	10
Coq.omega.PreOmega.rem_bound_pos_pos	40
Coq.omega.PreOmega.rem_bound_neg_pos	40
Coq.omega.PreOmega.rem_bound_pos_neg	40
Coq.omega.PreOmega.rem_bound_neg_neg	40
Coq.btauto.Algebra.Decidable_sound	40	0.79.13	search with cache (only 1: intros; only 1: apply H; only 1: tauto).	12.536741972	102571
Coq.btauto.Algebra.Decidable_complete	40	1.38.0	search with cache (only 1: intros P H Hp; only 1: apply H; only 1: assumption).	5.53190922737	4752
Coq.btauto.Algebra.Decidable_sound_alt	40
Coq.btauto.Algebra.Decidable_complete_alt	40
Coq.btauto.Algebra.Decidable_PosEq_obligation_1	40
Coq.btauto.Algebra.Decidable_PosLt_obligation_1	40
Coq.btauto.Algebra.Decidable_PosLe_obligation_1	40
Coq.btauto.Algebra.Decidable_eq_poly_obligation_1	40
Coq.btauto.Algebra.Decidable_null_obligation_3	40
Coq.btauto.Algebra.Decidable_valid_obligation_1	40
Coq.btauto.Algebra.valid_le_compat	40
Coq.btauto.Algebra.linear_le_compat	40	1.1.0.1.0.0.0.0	search with cache (only 1: intros k l p H Hl; only 1: induction H; only 1: constructor; only 1: constructor; only 1: now eapply Pos.lt_le_trans; eassumption; only 1: eauto; only 1: eauto; only 1: eauto).	0.121119022369	110
Coq.btauto.Algebra.linear_valid_incl	40
Coq.btauto.Algebra.eval_null_zero	40	0.4	search with cache (only 1: inversion 1; only 1: trivial).	0.026211977005	15
Coq.btauto.Algebra.eval_extensional_eq_compat	40
Coq.btauto.Algebra.eval_suffix_compat	40
Coq.btauto.Algebra.poly_add_compat	40
Coq.btauto.Algebra.poly_mul_cst_compat	40
Coq.btauto.Algebra.poly_mul_mon_compat	40
Coq.btauto.Algebra.poly_mul_compat	40
Coq.btauto.Algebra.poly_add_valid_compat	40
Coq.btauto.Algebra.poly_mul_cst_valid_compat	40
Coq.btauto.Algebra.poly_mul_mon_null_compat	40
Coq.btauto.Algebra.poly_mul_mon_valid_compat	40
Coq.btauto.Algebra.poly_mul_valid_compat	40
Coq.btauto.Algebra.poly_add_linear_compat	40
Coq.btauto.Algebra.reduce_aux_eval_compat	40
Coq.btauto.Algebra.reduce_eval_compat	40
Coq.btauto.Algebra.reduce_aux_le_compat	40
Coq.btauto.Algebra.linear_reduce_aux	40
Coq.btauto.Algebra.linear_reduce	40
Coq.btauto.Reflect.poly_of_formula_eval_compat	40
Coq.btauto.Reflect.poly_of_formula_valid_compat	40
Coq.btauto.Reflect.poly_of_formula_sound	40
Coq.btauto.Reflect.reduce_poly_of_formula_sound	40
Coq.btauto.Reflect.list_nth_base	40	7.1	search with cache (only 1: intros var1 var2 Hvar; only 1: auto).	0.0173578262329	10
Coq.btauto.Reflect.list_nth_succ	40
Coq.btauto.Reflect.list_nth_nil	40
Coq.btauto.Reflect.make_last_nth_1	40
Coq.btauto.Reflect.make_last_nth_2	40	0.0.0.0.0.10.5.6.0	search with cache (only 1: induction n using Pos.peano_rect; only 1: unfold list_nth; only 1: reflexivity; only 1: zify; only 1: unfold make_last; only 1: rewrite Pos.peano_rect_succ; only 1: fold (make_last n x def); only 1: rewrite list_nth_succ; only 1: apply IHn).	6.94688200951	15373
Coq.btauto.Reflect.list_replace_nth_1	40
Coq.btauto.Reflect.list_replace_nth_2	40
Coq.btauto.Reflect.boolean_witness_nonzero	40
Coq.btauto.Reflect.reduce_poly_of_formula_sound_alt	40
Coq.funind.Recdef.le_lt_SS	40	9	search with cache (only 1: auto with arith).	0.0192730426788	10
Coq.funind.Recdef.Splus_lt	40	18	search with cache (only 1: auto with arith).	0.142751216888	170
Coq.funind.Recdef.SSplus_lt	40	1.0.13.0	search with cache (only 1: apply Nat.lt_succ_r; only 1: apply Nat.le_neq; only 1: apply Nat.lt_succ_r; only 1: apply Nat.le_add_r).	16.3074719906	14199
Coq.funind.Recdef.max	40
Coq.setoid_ring.Rings_Z.Zcri	40	1.0	search with cache (only 1: red; only 1: exact Z.mul_comm).	0.0214128494263	3
Coq.setoid_ring.Rings_Z.Z_one_zero	40	14.0	search with cache (only 1: intros Hx; only 1: now Z.nzsimpl).	0.367815971375	170
Coq.setoid_ring.Rings_Z.Zdi	40
Coq.setoid_ring.Integral_domain.integral_domain_minus_one_zero	40
Coq.setoid_ring.Integral_domain.pow_not_zero	40
Coq.setoid_ring.Integral_domain.Rintegral_domain_pow	40
Coq.setoid_ring.Ncring_polynom.cO	40	69	search with cache (only 1: auto).	1.20055484772	2440
Coq.setoid_ring.Ncring_polynom.cI	40	0	search with cache (only 1: exact ring0).	0.0144538879395	1
Coq.setoid_ring.Ncring_polynom.Peq_ok	40
Coq.setoid_ring.Ncring_polynom.Pphi0	40
Coq.setoid_ring.Ncring_polynom.Pphi1	40
Coq.setoid_ring.Ncring_polynom.mkPX_ok	40
Coq.setoid_ring.Ncring_polynom.PaddCl_ok	40
Coq.setoid_ring.Ncring_polynom.PmulC_aux_ok	40
Coq.setoid_ring.Ncring_polynom.PmulC_ok	40
Coq.setoid_ring.Ncring_polynom.Popp_ok	40
Coq.setoid_ring.Ncring_polynom.PaddXPX	40
Coq.setoid_ring.Ncring_polynom.PaddX_ok2	40
Coq.setoid_ring.Ncring_polynom.Padd_ok	40
Coq.setoid_ring.Ncring_polynom.PaddX_ok	40
Coq.setoid_ring.Ncring_polynom.Psub_ok	40
Coq.setoid_ring.Ncring_polynom.Pmul_ok	40
Coq.setoid_ring.Ncring_polynom.Psquare_ok	40
Coq.setoid_ring.Ncring_polynom.mkX_ok	40	1.4.2	search with cache (only 1: intros; only 1: Esimpl; only 1: Esimpl2).	0.336081027985	10
Coq.setoid_ring.Ncring_polynom.Ppow_pos_ok	40
Coq.setoid_ring.Ncring_polynom.Ppow_N_ok	40
Coq.setoid_ring.Ncring_polynom.norm_aux_spec	40
Coq.setoid_ring.Ncring_polynom.norm_subst_spec	40
Coq.setoid_ring.Ncring_polynom.norm_subst_ok	40	2.0.0	search with cache (only 1: intros; only 1: unfold norm_subst; only 1: apply norm_aux_spec).	1.14895510674	34
Coq.setoid_ring.Ncring_polynom.ring_correct	40
Coq.setoid_ring.Ring.BoolTheory	40
Coq.setoid_ring.Ring.bool_eq_ok	40
Coq.setoid_ring.Field_theory.radd_ext_Proper	40
Coq.setoid_ring.Field_theory.rmul_ext_Proper	40
Coq.setoid_ring.Field_theory.ropp_ext_Proper	40
Coq.setoid_ring.Field_theory.rsub_ext_Proper	40
Coq.setoid_ring.Field_theory.rinv_ext_Proper	40	7	search with cache (only 1: trivial).	0.0182039737701	8
Coq.setoid_ring.Field_theory.ceqb_spec	40
Coq.setoid_ring.Field_theory.NPEequiv_eq	40
Coq.setoid_ring.Field_theory.NPEeval_ext	40
Coq.setoid_ring.Field_theory.rsub_0_l	40	4.3	search with cache (only 1: symmetry; only 1: eauto).	0.0554659366608	11
Coq.setoid_ring.Field_theory.rsub_0_r	40
Coq.setoid_ring.Field_theory.rdiv_simpl	40
Coq.setoid_ring.Field_theory.rdiv_ext	40
Coq.setoid_ring.Field_theory.rmul_reg_l	40
Coq.setoid_ring.Field_theory.field_is_integral_domain	40
Coq.setoid_ring.Field_theory.ropp_neq_0	40
Coq.setoid_ring.Field_theory.rdiv_r_r	40	15.0	search with cache (only 1: intros; only 1: eauto).	1.05780291557	229
Coq.setoid_ring.Field_theory.rdiv1	40
Coq.setoid_ring.Field_theory.rdiv2	40
Coq.setoid_ring.Field_theory.rdiv2b	40
Coq.setoid_ring.Field_theory.rdiv5	40	1.29.23	search with cache (only 1: rewrite rdiv_def, rmul_comm; only 1: rewrite rdiv_def, rmul_comm; only 1: trivial).	28.4352269173	3139
Coq.setoid_ring.Field_theory.rdiv3b	40
Coq.setoid_ring.Field_theory.rdiv6	40
Coq.setoid_ring.Field_theory.rdiv4	40
Coq.setoid_ring.Field_theory.rdiv4b	40
Coq.setoid_ring.Field_theory.rdiv7	40
Coq.setoid_ring.Field_theory.rdiv7b	40
Coq.setoid_ring.Field_theory.rinv_nz	40
Coq.setoid_ring.Field_theory.rdiv8	40
Coq.setoid_ring.Field_theory.cross_product_eq	40
Coq.setoid_ring.Field_theory.pow_ext	40
Coq.setoid_ring.Field_theory.pow_N_ext	40
Coq.setoid_ring.Field_theory.pow_pos_0	40	0.0.1.0.0.0.1	search with cache (only 1: induction p as [p IH| p IH| ]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite !IH, ?H; only 1: simpl; only 1: trivial).	0.225666046143	9
Coq.setoid_ring.Field_theory.pow_pos_1	40
Coq.setoid_ring.Field_theory.pow_pos_cst	40
Coq.setoid_ring.Field_theory.pow_pos_mul_l	40	0.4.0.4.0.8	search with cache (only 1: induction p; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: ring [ IHp ]; only 1: trivial).	34.8263840675	1217
Coq.setoid_ring.Field_theory.pow_pos_add_r	40
Coq.setoid_ring.Field_theory.pow_pos_mul_r	40
Coq.setoid_ring.Field_theory.pow_pos_nz	40
Coq.setoid_ring.Field_theory.pow_pos_div	40
Coq.setoid_ring.Field_theory.PEadd_ext	40
Coq.setoid_ring.Field_theory.PEsub_ext	40	0.0.1	search with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.194431066513	4
Coq.setoid_ring.Field_theory.PEmul_ext	40	0.0.1	search with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.197041034698	4
Coq.setoid_ring.Field_theory.PEopp_ext	40
Coq.setoid_ring.Field_theory.PEpow_ext	40
Coq.setoid_ring.Field_theory.PE_1_l	40
Coq.setoid_ring.Field_theory.PE_1_r	40	5.0.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: trivial).	0.200987815857	9
Coq.setoid_ring.Field_theory.PEpow_0_r	40	1.0.2.0.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: rewrite !rpow_pow; only 1: simpl; only 1: rewrite phi_1; only 1: trivial).	0.350507974625	14
Coq.setoid_ring.Field_theory.PEpow_1_r	40	0.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).	0.15257692337	3
Coq.setoid_ring.Field_theory.PEpow_1_l	40
Coq.setoid_ring.Field_theory.PEpow_add_r	40
Coq.setoid_ring.Field_theory.PEpow_mul_l	40
Coq.setoid_ring.Field_theory.PEpow_mul_r	40
Coq.setoid_ring.Field_theory.PEpow_nz	40
Coq.setoid_ring.Field_theory.if_true	40
Coq.setoid_ring.Field_theory.PExpr_eq_semi_ok	40
Coq.setoid_ring.Field_theory.PExpr_eq_spec	40
Coq.setoid_ring.Field_theory.NPEadd_ok	40
Coq.setoid_ring.Field_theory.NPEsub_ok	40
Coq.setoid_ring.Field_theory.NPEopp_ok	40
Coq.setoid_ring.Field_theory.NPEpow_ok	40
Coq.setoid_ring.Field_theory.NPEmul_ok	40
Coq.setoid_ring.Field_theory.PEsimp_ok	40
Coq.setoid_ring.Field_theory.PCond_cons	40
Coq.setoid_ring.Field_theory.PCond_cons_inv_l	40	0.4.1.0.0	search with cache (only 1: destruct l1; only 1: simpl; only 1: trivial; only 1: destruct 1; only 1: trivial).	1.26424002647	22
Coq.setoid_ring.Field_theory.PCond_cons_inv_r	40	4.1.0.0	search with cache (only 1: destruct l1; only 1: simpl; only 1: split; only 1: now destruct 1).	1.74899291992	30
Coq.setoid_ring.Field_theory.PCond_app	40
Coq.setoid_ring.Field_theory.absurd_PCond_bottom	40	5	search with cache (only 1: now destruct 1).	0.438842058182	11
Coq.setoid_ring.Field_theory.Z_pos_sub_gt	40
Coq.setoid_ring.Field_theory.default_isIn_ok	40
Coq.setoid_ring.Field_theory.isIn_ok	40
Coq.setoid_ring.Field_theory.split_aux_ok1	40
Coq.setoid_ring.Field_theory.split_aux_ok	40
Coq.setoid_ring.Field_theory.split_ok_l	40
Coq.setoid_ring.Field_theory.split_ok_r	40
Coq.setoid_ring.Field_theory.split_nz_l	40
Coq.setoid_ring.Field_theory.split_nz_r	40
Coq.setoid_ring.Field_theory.Pcond_Fnorm	40
Coq.setoid_ring.Field_theory.Fnorm_FEeval_PEeval	40
Coq.setoid_ring.Field_theory.Fnorm_crossproduct	40
Coq.setoid_ring.Field_theory.Fnorm_ok	40
Coq.setoid_ring.Field_theory.Field_rw_correct	40
Coq.setoid_ring.Field_theory.Field_rw_pow_correct	40
Coq.setoid_ring.Field_theory.Field_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_pow_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_aux_ok	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_pow_in_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_in_correct	40
Coq.setoid_ring.Field_theory.fcons_ok	40
Coq.setoid_ring.Field_theory.PFcons_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons0_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons00_fcons_inv	40
Coq.setoid_ring.Field_theory.ceqb_spec'	40
Coq.setoid_ring.Field_theory.PFcons1_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons2_fcons_inv	40
Coq.setoid_ring.Field_theory.radd_ext3_Proper	40
Coq.setoid_ring.Field_theory.rmul_ext3_Proper	40
Coq.setoid_ring.Field_theory.ropp_ext3_Proper	40
Coq.setoid_ring.Field_theory.add_inj_r	40
Coq.setoid_ring.Field_theory.gen_phiPOS_inj	40
Coq.setoid_ring.Field_theory.gen_phiN_inj	40
Coq.setoid_ring.Field_theory.gen_phiN_complete	40
Coq.setoid_ring.Field_theory.ring_S_inj	40
Coq.setoid_ring.Field_theory.gen_phiPOS_discr_sgn	40
Coq.setoid_ring.Field_theory.gen_phiZ_inj	40
Coq.setoid_ring.Field_theory.gen_phiZ_complete	40
Coq.setoid_ring.Ncring_initial.Zsth	40	0.5.45.18.21.0.21.188	search with cache (only 1: split; only 1: intro; only 1: reflexivity; only 1: intro; only 1: now rewrite ?local_mkpow_ok; only 1: intros l P i n Q; only 1: subst; only 1: reflexivity).	34.233068943	114647
Coq.setoid_ring.Ncring_initial.Zr	40
Coq.setoid_ring.Ncring_initial.same_gen	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_add	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_mult	40
Coq.setoid_ring.Ncring_initial.same_genZ	40
Coq.setoid_ring.Ncring_initial.gen_Zeqb_ok	40
Coq.setoid_ring.Ncring_initial.gen_phiZ1_add_pos_neg	40
Coq.setoid_ring.Ncring_initial.match_compOpp	40	2.2.2.23.0	search with cache (only 1: intros; only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	1.86024904251	2004
Coq.setoid_ring.Ncring_initial.gen_phiZ_add	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_opp	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_mul	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_ext	40	2.5.0	search with cache (only 1: intros x y H7; only 1: subst; only 1: reflexivity).	0.129266023636	16
Coq.setoid_ring.Ncring_initial.gen_phiZ_morph	40
Coq.setoid_ring.ArithRing.natSRth	40
Coq.setoid_ring.ArithRing.nat_morph_N	40
Coq.setoid_ring.Rings_R.Rsth	40
Coq.setoid_ring.Rings_R.Rri	40
Coq.setoid_ring.Rings_R.Rcri	40
Coq.setoid_ring.Rings_R.R_one_zero	40	22	search with cache (only 1: Lra.lra).	0.230839014053	511
Coq.setoid_ring.Rings_R.Rdi	40
Coq.setoid_ring.RealField.RTheory	40
Coq.setoid_ring.RealField.Rfield	40
Coq.setoid_ring.RealField.Rlt_n_Sn	40
Coq.setoid_ring.RealField.Rlt_0_2	40
Coq.setoid_ring.RealField.Rgen_phiPOS	40
Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	40
Coq.setoid_ring.RealField.Rdef_pow_add	40
Coq.setoid_ring.RealField.R_power_theory	40
Coq.setoid_ring.Ring_theory.pow_pos_swap	40
Coq.setoid_ring.Ring_theory.pow_pos_succ	40
Coq.setoid_ring.Ring_theory.pow_pos_add	40
Coq.setoid_ring.Ring_theory.pow_N_pow_N	40	3	search with cache (only 1: reflexivity).	0.0132830142975	4
Coq.setoid_ring.Ring_theory.get_sign_None_th	40	126	search with cache (only 1: now repeat split).	0.918213844299	8477
Coq.setoid_ring.Ring_theory.IDmorph	40
Coq.setoid_ring.Ring_theory.Eqsth	40	4.5.10.1.15.2.13.13	search with cache (only 1: split; only 1: split; only 1: intros a n Ha; only 1: symmetry; only 1: trivial; only 1: intros a b c H H'; only 1: rewrite H; only 1: trivial).	4.78681111336	23192
Coq.setoid_ring.Ring_theory.Eq_s_ext	40	0.0.26	search with cache (only 1: split; only 1: solve_proper; only 1: solve_proper).	0.188605070114	391
Coq.setoid_ring.Ring_theory.Eq_ext	40	0.0.0.1	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.0805549621582	5
Coq.setoid_ring.Ring_theory.radd_ext1_Proper	40
Coq.setoid_ring.Ring_theory.rmul_ext1_Proper	40
Coq.setoid_ring.Ring_theory.SRopp_ext	40	30	search with cache (only 1: trivial).	0.358376979828	713
Coq.setoid_ring.Ring_theory.SReqe_Reqe	40	0.0.2.2.4	search with cache (only 1: constructor; only 1: exact (SRadd_ext SReqe); only 1: exact (SRmul_ext SReqe); only 1: intros x y H; only 1: exact H).	0.166213989258	110
Coq.setoid_ring.Ring_theory.SRopp_mul_l	40	9	search with cache (only 1: reflexivity).	0.0133800506592	10
Coq.setoid_ring.Ring_theory.SRopp_add	40	1	search with cache (only 1: reflexivity).	0.0114772319794	2
Coq.setoid_ring.Ring_theory.SRsub_def	40	0	search with cache (only 1: reflexivity).	0.0110321044922	1
Coq.setoid_ring.Ring_theory.SRIDmorph	40
Coq.setoid_ring.Ring_theory.SRmorph_Rmorph	40
Coq.setoid_ring.Ring_theory.radd_ext2_Proper	40
Coq.setoid_ring.Ring_theory.rmul_ext2_Proper	40
Coq.setoid_ring.Ring_theory.ropp_ext2_Proper	40
Coq.setoid_ring.Ring_theory.Rmul_0_l	40
Coq.setoid_ring.Ring_theory.Ropp_mul_l	40
Coq.setoid_ring.Ring_theory.Ropp_add	40
Coq.setoid_ring.Ring_theory.Ropp_opp	40
Coq.setoid_ring.Ring_theory.cadd_ext_Proper	40
Coq.setoid_ring.Ring_theory.cmul_ext_Proper	40
Coq.setoid_ring.Ring_theory.copp_ext_Proper	40
Coq.setoid_ring.Ring_theory.phi_ext1_Proper	40
Coq.setoid_ring.Ring_theory.Smorph_opp	40
Coq.setoid_ring.Ring_theory.Smorph_sub	40
Coq.setoid_ring.Ring_theory.ARth_SRth	40
Coq.setoid_ring.Ring_theory.ARsub_ext	40
Coq.setoid_ring.Ring_theory.ARadd_0_r	40
Coq.setoid_ring.Ring_theory.ARmul_1_r	40	2	search with cache (only 1: mrewrite).	0.0243129730225	3
Coq.setoid_ring.Ring_theory.ARmul_0_r	40	2	search with cache (only 1: mrewrite).	0.0261030197144	3
Coq.setoid_ring.Ring_theory.ARdistr_r	40
Coq.setoid_ring.Ring_theory.ARadd_assoc1	40
Coq.setoid_ring.Ring_theory.ARadd_assoc2	40
Coq.setoid_ring.Ring_theory.ARmul_assoc1	40
Coq.setoid_ring.Ring_theory.ARmul_assoc2	40
Coq.setoid_ring.Ring_theory.ARopp_mul_r	40
Coq.setoid_ring.Ring_theory.ARopp_zero	40
Coq.setoid_ring.InitialRing.Zth	40
Coq.setoid_ring.InitialRing.radd_ext3_Proper	40
Coq.setoid_ring.InitialRing.rmul_ext3_Proper	40
Coq.setoid_ring.InitialRing.ropp_ext3_Proper	40
Coq.setoid_ring.InitialRing.get_signZ_th	40
Coq.setoid_ring.InitialRing.rsub_ext3_Proper	40
Coq.setoid_ring.InitialRing.same_gen	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_add	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_mult	40
Coq.setoid_ring.InitialRing.rsub_ext4_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0200550556183	1
Coq.setoid_ring.InitialRing.same_genZ	40
Coq.setoid_ring.InitialRing.gen_Zeqb_ok	40
Coq.setoid_ring.InitialRing.gen_phiZ1_pos_sub	40
Coq.setoid_ring.InitialRing.gen_phiZ_add	40
Coq.setoid_ring.InitialRing.gen_phiZ_mul	40
Coq.setoid_ring.InitialRing.gen_phiZ_ext	40	1.5.0	search with cache (only 1: intros x y H; only 1: rewrite H; only 1: rrefl).	0.0589959621429	13
Coq.setoid_ring.InitialRing.gen_phiZ_morph	40
Coq.setoid_ring.InitialRing.Nth	40
Coq.setoid_ring.InitialRing.Neqb_ok	40
Coq.setoid_ring.InitialRing.radd_ext4_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0218670368195	1
Coq.setoid_ring.InitialRing.rmul_ext4_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0226211547852	2
Coq.setoid_ring.InitialRing.same_genN	40
Coq.setoid_ring.InitialRing.gen_phiN_add	40
Coq.setoid_ring.InitialRing.gen_phiN_mult	40
Coq.setoid_ring.InitialRing.gen_phiN_sub	40
Coq.setoid_ring.InitialRing.gen_phiN_morph	40
Coq.setoid_ring.InitialRing.radd_ext5_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0173749923706	1
Coq.setoid_ring.InitialRing.rmul_ext5_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.017343044281	1
Coq.setoid_ring.InitialRing.ropp_ext5_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.017735004425	1
Coq.setoid_ring.InitialRing.rsub_ext7_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0225021839142	1
Coq.setoid_ring.InitialRing.gen_phiNword0_ok	40
Coq.setoid_ring.InitialRing.gen_phiNword_cons	40
Coq.setoid_ring.InitialRing.gen_phiNword_Nwcons	40	0.0.0.1.0.0.0.0.0.0	search with cache (only 1: induction w; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros; only 1: destruct n; only 1: norm; only 1: norm).	1.71877479553	241
Coq.setoid_ring.InitialRing.gen_phiNword_ok	40
Coq.setoid_ring.InitialRing.Nwadd_ok	40
Coq.setoid_ring.InitialRing.Nwopp_ok	40	0.0.4	search with cache (only 1: induction x; only 1: norm; only 1: norm).	0.0598800182343	15
Coq.setoid_ring.InitialRing.Nwscal_ok	40
Coq.setoid_ring.InitialRing.Nwmul_ok	40
Coq.setoid_ring.InitialRing.gen_phiNword_morph	40
Coq.setoid_ring.InitialRing.radd_ext_Proper	40
Coq.setoid_ring.InitialRing.rmul_ext_Proper	40
Coq.setoid_ring.InitialRing.ropp_ext_Proper	40	23	search with cache (only 1: exact (Ropp_ext Reqe)).	0.857434988022	405
Coq.setoid_ring.InitialRing.rsub_ext_Proper	40	8	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.13933300972	17
Coq.setoid_ring.InitialRing.triv_div_th	40
Coq.setoid_ring.InitialRing.Ztriv_div_th	40
Coq.setoid_ring.InitialRing.Ntriv_div_th	40
Coq.setoid_ring.Cring.cring_eq_ext	40
Coq.setoid_ring.Cring.cring_almost_ring_theory	40
Coq.setoid_ring.Cring.cring_morph	40
Coq.setoid_ring.Cring.cring_power_theory	40	46	search with cache (only 1: let rec Esimpl3 := let rec Esimpl2 := let rec Esimpl := let rec rsimpl := repeat gen_rewrite || rewrite phiCR_comm in repeat progress match goal with | |- context [ @Pphi ?l ?P ] => match P with | P0 => rewrite (Pphi0 (C:=l)) | P1 => rewrite (Pphi1 (C:=l)) | @mkPX ?P ?i ?n ?Q => rewrite (@mkPX_ok l P i n Q) end | |- context [ [?c] ] => match c with | 0 => rewrite ring_morphism0 | 1 => rewrite ring_morphism1 | ?x + ?y => rewrite ring_morphism_add | ?x * ?y => rewrite ring_morphism_mul | ?x - ?y => rewrite ring_morphism_sub | - ?x => rewrite ring_morphism_opp end end; simpl; rsimpl in Esimpl; repeat progress match goal with | |- context [ @Pphi ?l (@PaddCl ?c ?P) ] => rewrite (@PaddCl_ok c P l) | |- context [ @Pphi ?l (@PmulC ?P ?c) ] => rewrite (@PmulC_ok c P l) | |- context [ @Pphi ?l (@Popp ?P) ] => rewrite (@Popp_ok P l) end; Esimpl in repeat match goal with | |- context [ @Pphi ?l (@Padd ?P1 ?P2) ] => rewrite (@Padd_ok P1 P2 l) | |- context [ @Pphi ?l (@Psub ?P1 ?P2) ] => rewrite (@Psub_ok P1 P2 l) end; try Esimpl2; try reflexivity; try apply ring_add_comm in now Esimpl3).	6.18828582764	1083
Coq.setoid_ring.Cring.cring_div_theory	40
Coq.setoid_ring.Cring.Zcri	40	6.60.1.39	search with cache (only 1: intros n; only 1: intros; only 1: rewrite Z.mul_comm; only 1: solve_proper).	20.9594500065	14763
Coq.setoid_ring.Ring_polynom.radd_ext_Proper	40	32	search with cache (only 1: exact (Radd_ext Reqe)).	1.11182689667	1322
Coq.setoid_ring.Ring_polynom.rmul_ext_Proper	40	33	search with cache (only 1: exact (Rmul_ext Reqe)).	1.17096090317	1280
Coq.setoid_ring.Ring_polynom.ropp_ext_Proper	40	32	search with cache (only 1: exact (Ropp_ext Reqe)).	0.722817897797	1117
Coq.setoid_ring.Ring_polynom.rsub_ext_Proper	40	3.6	search with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	0.0807499885559	37
Coq.setoid_ring.Ring_polynom.Pequiv_eq	40
Coq.setoid_ring.Ring_polynom.Pphi_ext	40
Coq.setoid_ring.Ring_polynom.Pinj_ext	40
Coq.setoid_ring.Ring_polynom.PX_ext	40
Coq.setoid_ring.Ring_polynom.jump_add'	40
Coq.setoid_ring.Ring_polynom.Peq_ok	40
Coq.setoid_ring.Ring_polynom.Peq_spec	40
Coq.setoid_ring.Ring_polynom.Pphi0	40
Coq.setoid_ring.Ring_polynom.Pphi1	40
Coq.setoid_ring.Ring_polynom.mkPinj_ok	40
Coq.setoid_ring.Ring_polynom.mkPinj_ext	40
Coq.setoid_ring.Ring_polynom.pow_pos_add	40
Coq.setoid_ring.Ring_polynom.ceqb_spec	40
Coq.setoid_ring.Ring_polynom.mkPX_ok	40
Coq.setoid_ring.Ring_polynom.mkPX_ext	40
Coq.setoid_ring.Ring_polynom.PaddC_ok	40
Coq.setoid_ring.Ring_polynom.PsubC_ok	40	1.2.0.0.0.0.0.1.0.0.0.0	search with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: Esimpl).	11.031388998	2615
Coq.setoid_ring.Ring_polynom.PmulC_aux_ok	40
Coq.setoid_ring.Ring_polynom.PmulC_ok	40
Coq.setoid_ring.Ring_polynom.Popp_ok	40
Coq.setoid_ring.Ring_polynom.PaddX_ok	40
Coq.setoid_ring.Ring_polynom.Padd_ok	40
Coq.setoid_ring.Ring_polynom.Psub_opp	40
Coq.setoid_ring.Ring_polynom.Psub_ok	40
Coq.setoid_ring.Ring_polynom.PmulI_ok	40
Coq.setoid_ring.Ring_polynom.Pmul_ok	40
Coq.setoid_ring.Ring_polynom.mkZmon_ok	40
Coq.setoid_ring.Ring_polynom.zmon_pred_ok	40
Coq.setoid_ring.Ring_polynom.mkVmon_ok	40
Coq.setoid_ring.Ring_polynom.Mcphi_ok	40
Coq.setoid_ring.Ring_polynom.Mphi_ok	40
Coq.setoid_ring.Ring_polynom.POneSubst_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst1_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL1_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL_ok	40
Coq.setoid_ring.Ring_polynom.PNSubstL_ok	40
Coq.setoid_ring.Ring_polynom.mkX_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_pos_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_N_ok	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEadd	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEopp	40
Coq.setoid_ring.Ring_polynom.norm_aux_spec	40
Coq.setoid_ring.Ring_polynom.norm_subst_spec	40
Coq.setoid_ring.Ring_polynom.mon_of_pol_ok	40
Coq.setoid_ring.Ring_polynom.interp_PElist_ok	40
Coq.setoid_ring.Ring_polynom.norm_subst_ok	40
Coq.setoid_ring.Ring_polynom.ring_correct	40
Coq.setoid_ring.Ring_polynom.mkmult_rec_ok	40
Coq.setoid_ring.Ring_polynom.mkmult1_ok	40
Coq.setoid_ring.Ring_polynom.mkmultm1_ok	40
Coq.setoid_ring.Ring_polynom.r_list_pow_rev	40
Coq.setoid_ring.Ring_polynom.mkmult_c_pos_ok	40
Coq.setoid_ring.Ring_polynom.mkmult_c_ok	40
Coq.setoid_ring.Ring_polynom.mkadd_mult_ok	40
Coq.setoid_ring.Ring_polynom.add_pow_list_ok	40
Coq.setoid_ring.Ring_polynom.add_mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_avoid_ok	40
Coq.setoid_ring.Ring_polynom.local_mkpow_ok	40	3.3.0.10.1.0.10.23	search with cache (only 1: destruct p; only 1: rewrite (rpow_pow_N pow_th); only 1: simpl; only 1: Esimpl; only 1: rewrite (rpow_pow_N pow_th); only 1: simpl; only 1: reflexivity; only 1: reflexivity).	13.8837070465	4977
Coq.setoid_ring.Ring_polynom.Pphi_pow_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_pow_correct	40
Coq.setoid_ring.Ring_polynom.mkmult_pow_ok	40
Coq.setoid_ring.Ring_polynom.mkpow_ok	40
Coq.setoid_ring.Ring_polynom.mkopp_pow_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_dev_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_correct	40
Coq.setoid_ring.BinList.jump_tl	40
Coq.setoid_ring.BinList.jump_succ	40
Coq.setoid_ring.BinList.jump_add	40
Coq.setoid_ring.BinList.jump_pred_double	40
Coq.setoid_ring.BinList.nth_jump	40
Coq.setoid_ring.BinList.nth_pred_double	40
Coq.setoid_ring.Ncring.pow_pos_comm	40
Coq.setoid_ring.Ncring.pow_pos_succ	40
Coq.setoid_ring.Ncring.pow_pos_add	40
Coq.setoid_ring.Ncring.pow_N_pow_N	40	8	search with cache (only 1: reflexivity).	0.0510759353638	16
Coq.setoid_ring.Ncring.ring_mul_0_l	40
Coq.setoid_ring.Ncring.ring_mul_0_r	40
Coq.setoid_ring.Ncring.ring_opp_mul_l	40
Coq.setoid_ring.Ncring.ring_opp_mul_r	40
Coq.setoid_ring.Ncring.ring_opp_add	40
Coq.setoid_ring.Ncring.ring_opp_opp	40
Coq.setoid_ring.Ncring.ring_sub_ext	40
Coq.setoid_ring.Ncring.ring_add_0_r	40	3.0.1.15	search with cache (only 1: intro x; only 1: rewrite (ring_add_comm x); only 1: rewrite ring_add_0_l; only 1: reflexivity).	0.830547094345	288
Coq.setoid_ring.Ncring.ring_add_assoc1	40	20.6.10.18	search with cache (only 1: intros; only 1: rewrite <- ring_add_assoc; only 1: rewrite (ring_add_comm x); only 1: mrewrite).	27.4522249699	8869
Coq.setoid_ring.Ncring.ring_add_assoc2	40	0.2.1.9.3	search with cache (only 1: intros; only 1: rewrite (ring_add_comm y); only 1: rewrite <- (ring_add_assoc x); only 1: rewrite (ring_add_comm x); only 1: reflexivity).	1.10407590866	297
Coq.setoid_ring.Ncring.ring_opp_zero	40
Coq.setoid_ring.Ncring_tac.Zeqb_ok	40	1.0.1.8.13	search with cache (only 1: intros x y H7; only 1: apply Zsth; only 1: pose proof (Zeq_bool_eq x y H7) as H10; only 1: rewrite H10; only 1: reflexivity).	0.96671295166	733
Coq.setoid_ring.Ncring_tac.comm	40
Coq.setoid_ring.Rings_Q.Qri	40
Coq.setoid_ring.Rings_Q.Qcri	40	39	search with cache (only 1: exact Qmult_comm).	2.12420916557	1812
Coq.setoid_ring.Rings_Q.Q_one_zero	40	0	search with cache (only 1: discriminate).	0.0116829872131	1
Coq.setoid_ring.Rings_Q.Qdi	40
Coq.ssr.ssreflect.master_key	40	1	search with cache (only 1: tauto).	0.00480699539185	2
Coq.ssr.ssreflect.lock	40
Coq.ssr.ssreflect.not_locked_false_eq_true	40	0.3	search with cache (only 1: unlock; only 1: discriminate).	0.0237510204315	13
Coq.ssr.ssreflect.unlock	40
Coq.ssr.ssreflect.locked_withE	40
Coq.ssr.ssreflect.unlock_with	40	1	search with cache (only 1: by case : k ).	0.00787305831909	2
Coq.ssr.ssreflect.nary_congruence	40
Coq.ssr.ssreflect.ssr_congr_arrow	40	1.3.9	search with cache (only 1: intro H; only 1: destruct H; only 1: tauto).	0.0471360683441	107
Coq.ssr.ssreflect.iffLR	40	0	search with cache (only 1: intuition).	0.00853204727173	1
Coq.ssr.ssreflect.iffRL	40	0	search with cache (only 1: by case : eqPQ ).	0.00758409500122	1
Coq.ssr.ssreflect.iffLRn	40	2	search with cache (only 1: intuition).	0.0156509876251	3
Coq.ssr.ssreflect.iffRLn	40	0	search with cache (only 1: by move  =>nP tQ; case : nP ; case : eqPQ tQ ).	0.0085711479187	1
Coq.ssr.ssreflect.abstract_context	40	0.102.38	search with cache (only 1: intro H; only 1: apply H; only 1: auto).	3.23268294334	37363
Coq.ssr.ssrbool.prop_congr	40	0.5	search with cache (only 1: destruct 1; only 1: trivial).	0.0324788093567	41
Coq.ssr.ssrbool.is_true_true	40	5	search with cache (only 1: repeat split).	0.00698089599609	6
Coq.ssr.ssrbool.not_false_is_true	40	1	search with cache (only 1: by [  ]).	0.00743913650513	2
Coq.ssr.ssrbool.is_true_locked_true	40	0.0	search with cache (only 1: unlock; only 1: by [  ]).	0.00842714309692	2
Coq.ssr.ssrbool.negbT	40	3	search with cache (only 1: Bool.destr_bool).	0.00867295265198	4
Coq.ssr.ssrbool.negbTE	40	0	search with cache (only 1: by case : b ).	0.00885581970215	1
Coq.ssr.ssrbool.negbF	40	0	search with cache (only 1: by case : b ).	0.00914311408997	1
Coq.ssr.ssrbool.negbFE	40	0	search with cache (only 1: by case : b ).	0.00885105133057	1
Coq.ssr.ssrbool.negbK	40	0.10	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.0178101062775	33
Coq.ssr.ssrbool.negbNE	40	0	search with cache (only 1: by case : b ).	0.00757789611816	1
Coq.ssr.ssrbool.negb_inj	40	0.23	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.149693012238	280
Coq.ssr.ssrbool.negbLR	40	9	search with cache (only 1: Bool.destr_bool).	0.0213139057159	10
Coq.ssr.ssrbool.negbRL	40	10	search with cache (only 1: Bool.destr_bool).	0.0359659194946	21
Coq.ssr.ssrbool.contra	40	1.37	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.993174791336	1404
Coq.ssr.ssrbool.contraL	40	0	search with cache (only 1: by case : b  => //; case : c ).	0.0125508308411	1
Coq.ssr.ssrbool.contraR	40	0	search with cache (only 1: by case : b  => //; case : c ).	0.012659072876	1
Coq.ssr.ssrbool.contraLR	40	0	search with cache (only 1: by case : b  => //; case : c ).	0.0127279758453	1
Coq.ssr.ssrbool.contraT	40	1.21	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.460227012634	277
Coq.ssr.ssrbool.wlog_neg	40	1	search with cache (only 1: by case : b  => // ->).	0.0136089324951	2
Coq.ssr.ssrbool.contraFT	40	0.22	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.743173122406	270
Coq.ssr.ssrbool.contraFN	40	0.23	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.777493000031	295
Coq.ssr.ssrbool.contraTF	40	1.22	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.707755804062	302
Coq.ssr.ssrbool.contraNF	40	1.23	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.834903001785	328
Coq.ssr.ssrbool.contraFF	40	0.0.56.40	search with cache (only 1: Bool.destr_bool; only 1: destruct H; only 1: intuition; only 1: trivial).	15.3369560242	47493
Coq.ssr.ssrbool.ifP	40
Coq.ssr.ssrbool.ifPn	40	0	search with cache (only 1: by case  def_b: b ; constructor).	0.0112309455872	1
Coq.ssr.ssrbool.ifT	40	3	search with cache (only 1: by case : b ).	0.0166471004486	4
Coq.ssr.ssrbool.ifF	40	1	search with cache (only 1: by move ->).	0.0123648643494	2
Coq.ssr.ssrbool.ifN	40	3	search with cache (only 1: by case : b ).	0.0159990787506	4
Coq.ssr.ssrbool.if_same	40	2	search with cache (only 1: by case  def_b: b ; constructor).	0.0113689899445	3
Coq.ssr.ssrbool.if_neg	40	1	search with cache (only 1: by case  def_b: b ; constructor; rewrite ?def_b).	0.0114228725433	2
Coq.ssr.ssrbool.fun_if	40	0	search with cache (only 1: by case b).	0.0107078552246	1
Coq.ssr.ssrbool.if_arg	40	0	search with cache (only 1: by case b).	0.0105428695679	1
Coq.ssr.ssrbool.ifE	40	8	search with cache (only 1: reflexivity).	0.0155758857727	9
Coq.ssr.ssrbool.introNTF	40
Coq.ssr.ssrbool.introTF	40	0	search with cache (only 1: by case c; case Hb).	0.0142138004303	1
Coq.ssr.ssrbool.elimNTF	40	0	search with cache (only 1: by case c; case Hb).	0.0138638019562	1
Coq.ssr.ssrbool.elimTF	40	0	search with cache (only 1: by case c; case Hb).	0.0137329101562	1
Coq.ssr.ssrbool.equivPif	40
Coq.ssr.ssrbool.xorPif	40	0.0.16.6.6	search with cache (only 1: intro; only 1: intro; only 1: intuition; only 1: by case Hb; auto; only 1: by case Hb; auto).	0.961977958679	1339
Coq.ssr.ssrbool.introTFn	40
Coq.ssr.ssrbool.elimTFn	40
Coq.ssr.ssrbool.equivPifn	40
Coq.ssr.ssrbool.xorPifn	40
Coq.ssr.ssrbool.introT	40
Coq.ssr.ssrbool.introF	40
Coq.ssr.ssrbool.introN	40
Coq.ssr.ssrbool.introNf	40
Coq.ssr.ssrbool.introTn	40
Coq.ssr.ssrbool.introFn	40
Coq.ssr.ssrbool.elimT	40
Coq.ssr.ssrbool.elimF	40
Coq.ssr.ssrbool.elimN	40
Coq.ssr.ssrbool.elimNf	40
Coq.ssr.ssrbool.elimTn	40
Coq.ssr.ssrbool.elimFn	40
Coq.ssr.ssrbool.introP	40	8.0.2.2.20.47	search with cache (only 1: intuition; only 1: destruct b, b'; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	33.8397700787	5730
Coq.ssr.ssrbool.iffP	40
Coq.ssr.ssrbool.equivP	40	1.22	search with cache (only 1: intuition; only 1: by case : Pb ; constructor; auto).	0.331727027893	281
Coq.ssr.ssrbool.sumboolP	40
Coq.ssr.ssrbool.appP	40
Coq.ssr.ssrbool.sameP	40
Coq.ssr.ssrbool.decPcases	40
Coq.ssr.ssrbool.decP	40
Coq.ssr.ssrbool.rwP	40	14	search with cache (only 1: by case Pb).	0.146373987198	75
Coq.ssr.ssrbool.rwP2	40
Coq.ssr.ssrbool.altP	40
Coq.ssr.ssrbool.impliesP	40	18.8.33	search with cache (only 1: intro p; only 1: destruct p; only 1: auto).	0.835937976837	3407
Coq.ssr.ssrbool.impliesPn	40	0.4.59	search with cache (only 1: intuition; only 1: destruct H; only 1: tauto).	1.07599496841	2711
Coq.ssr.ssrbool.unlessL	40	22.5.15	search with cache (only 1: split; only 1: intros; only 1: by move  =>fK injf' x; apply : injf' ).	0.491219997406	2045
Coq.ssr.ssrbool.unlessR	40	13.39.16	search with cache (only 1: split; only 1: red; only 1: auto).	1.15448284149	7636
Coq.ssr.ssrbool.unless_sym	40
Coq.ssr.ssrbool.unlessP	40
Coq.ssr.ssrbool.bind_unless	40
Coq.ssr.ssrbool.unless_contra	40
Coq.ssr.ssrbool.classicP	40
Coq.ssr.ssrbool.classicW	40	0.26	search with cache (only 1: red; only 1: by move  =>b b' ->).	0.115025997162	361
Coq.ssr.ssrbool.classic_bind	40
Coq.ssr.ssrbool.classic_EM	40
Coq.ssr.ssrbool.classic_pick	40
Coq.ssr.ssrbool.classic_imply	40
Coq.ssr.ssrbool.all_and2	40	0.0.49.0.0.49.47	search with cache (only 1: repeat split; only 1: intro z; only 1: destruct (H z); only 1: auto; only 1: intro z; only 1: destruct (H z); only 1: auto).	25.9250900745	103506
Coq.ssr.ssrbool.all_and3	40	0	search with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0144939422607	1
Coq.ssr.ssrbool.all_and4	40	0	search with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0168681144714	1
Coq.ssr.ssrbool.all_and5	40	0	search with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0195369720459	1
Coq.ssr.ssrbool.pair_andP	40	8	search with cache (only 1: intuition).	0.017333984375	11
Coq.ssr.ssrbool.idP	40
Coq.ssr.ssrbool.boolP	40	0	search with cache (only 1: by case b1; constructor).	0.00922179222107	1
Coq.ssr.ssrbool.idPn	40	0	search with cache (only 1: by case b1; constructor).	0.00927305221558	1
Coq.ssr.ssrbool.negP	40	0	search with cache (only 1: by case b1; constructor).	0.0134170055389	1
Coq.ssr.ssrbool.negPn	40	0	search with cache (only 1: by case b1; constructor).	0.00942993164062	1
Coq.ssr.ssrbool.negPf	40	0	search with cache (only 1: by case b1; constructor; auto).	0.0104811191559	1
Coq.ssr.ssrbool.andP	40
Coq.ssr.ssrbool.and3P	40
Coq.ssr.ssrbool.and4P	40
Coq.ssr.ssrbool.and5P	40
Coq.ssr.ssrbool.orP	40
Coq.ssr.ssrbool.or3P	40
Coq.ssr.ssrbool.or4P	40
Coq.ssr.ssrbool.nandP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0168890953064	1
Coq.ssr.ssrbool.norP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case; auto).	0.0166828632355	1
Coq.ssr.ssrbool.implyP	40	1	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0375308990479	2
Coq.ssr.ssrbool.andTb	40	0	search with cache (only 1: repeat split).	0.00903701782227	1
Coq.ssr.ssrbool.andFb	40	1	search with cache (only 1: repeat split).	0.00891399383545	2
Coq.ssr.ssrbool.andbT	40	3.11	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.0522611141205	97
Coq.ssr.ssrbool.andbF	40	9	search with cache (only 1: by case).	0.0134961605072	10
Coq.ssr.ssrbool.andbb	40	4	search with cache (only 1: by case).	0.0124468803406	5
Coq.ssr.ssrbool.andbC	40	4.19	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.167409896851	300
Coq.ssr.ssrbool.andbA	40	0	search with cache (only 1: by do 2!case).	0.0127229690552	1
Coq.ssr.ssrbool.andbCA	40	0	search with cache (only 1: by do 2!case).	0.0126988887787	1
Coq.ssr.ssrbool.andbAC	40	9	search with cache (only 1: by do 3!case).	0.0251359939575	10
Coq.ssr.ssrbool.andbACA	40	9	search with cache (only 1: by do 3!case).	0.0273878574371	10
Coq.ssr.ssrbool.orTb	40	0	search with cache (only 1: reflexivity).	0.00937604904175	1
Coq.ssr.ssrbool.orFb	40	0	search with cache (only 1: by [  ]).	0.00949382781982	1
Coq.ssr.ssrbool.orbT	40	2	search with cache (only 1: Bool.destr_bool).	0.0131270885468	3
Coq.ssr.ssrbool.orbF	40	0	search with cache (only 1: by case).	0.0102560520172	1
Coq.ssr.ssrbool.orbb	40	0	search with cache (only 1: by case).	0.0102410316467	1
Coq.ssr.ssrbool.orbC	40	0	search with cache (only 1: by do 2!case).	0.0123021602631	1
Coq.ssr.ssrbool.orbA	40	0	search with cache (only 1: by do 3!case).	0.0161480903625	1
Coq.ssr.ssrbool.orbCA	40	0	search with cache (only 1: by do 3!case).	0.0160381793976	1
Coq.ssr.ssrbool.orbAC	40	0	search with cache (only 1: by do 3!case).	0.0181310176849	1
Coq.ssr.ssrbool.orbACA	40	0	search with cache (only 1: by do 4!case).	0.024080991745	1
Coq.ssr.ssrbool.andbN	40	0	search with cache (only 1: Bool.destr_bool).	0.0121831893921	1
Coq.ssr.ssrbool.andNb	40	0	search with cache (only 1: by case : b ).	0.0121700763702	1
Coq.ssr.ssrbool.orbN	40	1	search with cache (only 1: Bool.destr_bool).	0.0119941234589	2
Coq.ssr.ssrbool.orNb	40	0	search with cache (only 1: by case : b ).	0.0119831562042	1
Coq.ssr.ssrbool.andb_orl	40	10	search with cache (only 1: by do 3!case).	0.0325629711151	21
Coq.ssr.ssrbool.andb_orr	40	0	search with cache (only 1: by do 3!case).	0.0167369842529	1
Coq.ssr.ssrbool.orb_andl	40	0	search with cache (only 1: by do 3!case).	0.0176219940186	1
Coq.ssr.ssrbool.orb_andr	40	0	search with cache (only 1: by do 3!case).	0.0180480480194	1
Coq.ssr.ssrbool.andb_idl	40	3.45	search with cache (only 1: Bool.destr_bool; only 1: intuition).	1.54674005508	1402
Coq.ssr.ssrbool.andb_idr	40	0	search with cache (only 1: by case : a ; case : b  => // ->).	0.0172619819641	1
Coq.ssr.ssrbool.andb_id2l	40	0	search with cache (only 1: by case : a ; case : b  => // ->).	0.0191600322723	1
Coq.ssr.ssrbool.andb_id2r	40	0	search with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0231230258942	1
Coq.ssr.ssrbool.orb_idl	40	1	search with cache (only 1: by case : a ; case : b  => // ->).	0.0181329250336	2
Coq.ssr.ssrbool.orb_idr	40	0	search with cache (only 1: by case : a ; case : b  => // ->).	0.0171549320221	1
Coq.ssr.ssrbool.orb_id2l	40	0	search with cache (only 1: by case : a ; case : b  => // ->).	0.0190839767456	1
Coq.ssr.ssrbool.orb_id2r	40	0	search with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0951569080353	1
Coq.ssr.ssrbool.negb_and	40	0	search with cache (only 1: Bool.destr_bool).	0.0128121376038	1
Coq.ssr.ssrbool.negb_or	40	1	search with cache (only 1: by case : a ; case : b ).	0.0167450904846	2
Coq.ssr.ssrbool.andbK	40	0	search with cache (only 1: by case : a ; case : b ).	0.0135128498077	1
Coq.ssr.ssrbool.andKb	40	0	search with cache (only 1: by case : a ; case : b ).	0.013307094574	1
Coq.ssr.ssrbool.orbK	40	0	search with cache (only 1: by case : a ; case : b ).	0.0132939815521	1
Coq.ssr.ssrbool.orKb	40	0	search with cache (only 1: by case : a ; case : b ).	0.0133030414581	1
Coq.ssr.ssrbool.implybT	40	1	search with cache (only 1: Bool.destr_bool).	0.010293006897	2
Coq.ssr.ssrbool.implybF	40	0	search with cache (only 1: by case : b ).	0.0111398696899	1
Coq.ssr.ssrbool.implyFb	40	0	search with cache (only 1: by case : b ).	0.0102670192719	1
Coq.ssr.ssrbool.implyTb	40	0	search with cache (only 1: by case : b ).	0.0110080242157	1
Coq.ssr.ssrbool.implybb	40	1	search with cache (only 1: by case : b ).	0.0122861862183	2
Coq.ssr.ssrbool.negb_imply	40	0	search with cache (only 1: by case : a ; case : b ).	0.013641834259	1
Coq.ssr.ssrbool.implybE	40	0	search with cache (only 1: by case : a ; case : b ).	0.0135838985443	1
Coq.ssr.ssrbool.implyNb	40	0	search with cache (only 1: by case : a ; case : b ).	0.0135719776154	1
Coq.ssr.ssrbool.implybN	40	0	search with cache (only 1: by case : a ; case : b ).	0.0154459476471	1
Coq.ssr.ssrbool.implybNN	40	0	search with cache (only 1: by case : a ; case : b ).	0.0135910511017	1
Coq.ssr.ssrbool.implyb_idl	40	10	search with cache (only 1: by case : a ; case : b  => // ->).	0.0941751003265	21
Coq.ssr.ssrbool.implyb_idr	40	0	search with cache (only 1: by case : a ; case : b  => // ->).	0.0171930789948	1
Coq.ssr.ssrbool.implyb_id2l	40	0	search with cache (only 1: by case : a ; case : b  => // ->).	0.0192439556122	1
Coq.ssr.ssrbool.addFb	40	0	search with cache (only 1: by [  ]).	0.00944018363953	1
Coq.ssr.ssrbool.addbF	40	0	search with cache (only 1: by case).	0.0101189613342	1
Coq.ssr.ssrbool.addbb	40	1	search with cache (only 1: by case).	0.0143051147461	2
Coq.ssr.ssrbool.addbC	40	0	search with cache (only 1: by do 2!case).	0.0121591091156	1
Coq.ssr.ssrbool.addbA	40	0	search with cache (only 1: by do 3!case).	0.0160598754883	1
Coq.ssr.ssrbool.addbCA	40	0	search with cache (only 1: by do 3!case).	0.0160109996796	1
Coq.ssr.ssrbool.addbAC	40	0	search with cache (only 1: by do 3!case).	0.0159840583801	1
Coq.ssr.ssrbool.addbACA	40	0	search with cache (only 1: by do 4!case).	0.0238871574402	1
Coq.ssr.ssrbool.andb_addl	40	0	search with cache (only 1: by do 3!case).	0.0166249275208	1
Coq.ssr.ssrbool.andb_addr	40	0	search with cache (only 1: by do 3!case).	0.0380380153656	1
Coq.ssr.ssrbool.addKb	40	0	search with cache (only 1: by do 2!case).	0.012277841568	1
Coq.ssr.ssrbool.addbK	40	0	search with cache (only 1: by do 2!case).	0.0123190879822	1
Coq.ssr.ssrbool.addIb	40	3	search with cache (only 1: by do 3!case).	0.0257959365845	4
Coq.ssr.ssrbool.addbI	40	3	search with cache (only 1: by do 3!case).	0.0227382183075	4
Coq.ssr.ssrbool.addTb	40	0	search with cache (only 1: by case : b ).	0.0121161937714	1
Coq.ssr.ssrbool.addbT	40	1	search with cache (only 1: by case : b ).	0.0134780406952	2
Coq.ssr.ssrbool.addbN	40	2	search with cache (only 1: by case : a ; case : b ).	0.0183019638062	3
Coq.ssr.ssrbool.addNb	40	0	search with cache (only 1: by case : a ; case : b ).	0.0158181190491	1
Coq.ssr.ssrbool.addbP	40	0.0.0.0.61	search with cache (only 1: Bool.destr_bool; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor).	2.60496616364	2176
Coq.ssr.ssrbool.subrelUl	40	40.26.28.84	search with cache (only 1: intro x; only 1: red; only 1: Bool.destr_bool; only 1: intuition).	31.2076489925	133624
Coq.ssr.ssrbool.subrelUr	40	41.26.29.85	search with cache (only 1: intro x; only 1: red; only 1: Bool.destr_bool; only 1: intuition).	32.9905359745	136924
Coq.ssr.ssrbool.sub_refl	40	2.44	search with cache (only 1: intro H; only 1: case  =>// undecP).	0.455119132996	1134
Coq.ssr.ssrbool.mem_topred	40
Coq.ssr.ssrbool.topredE	40	0	search with cache (only 1: by case : pT pp ).	0.0133399963379	1
Coq.ssr.ssrbool.app_predE	40
Coq.ssr.ssrbool.in_applicative	40
Coq.ssr.ssrbool.in_collective	40
Coq.ssr.ssrbool.in_simpl	40	0	search with cache (only 1: by case : msp  => _ /= ->).	0.012081861496	1
Coq.ssr.ssrbool.unfold_in	40	4	search with cache (only 1: by rewrite -mem_topred).	0.0115399360657	5
Coq.ssr.ssrbool.simpl_predE	40	2	search with cache (only 1: by [  ]).	0.00964283943176	3
Coq.ssr.ssrbool.mem_simpl	40	0	search with cache (only 1: by [  ]).	0.0101099014282	1
Coq.ssr.ssrbool.mem_mem	40
Coq.ssr.ssrbool.qualifE	40	1	search with cache (only 1: by [  ]).	0.0109570026398	2
Coq.ssr.ssrbool.keyed_predE	40
Coq.ssr.ssrbool.keyed_qualifier_suproof	40
Coq.ssr.ssrbool.all_tag_cond_dep	40
Coq.ssr.ssrbool.all_tag_cond	40
Coq.ssr.ssrbool.all_sig_cond_dep	40
Coq.ssr.ssrbool.all_sig_cond	40
Coq.ssr.ssrbool.symmetric_from_pre	40
Coq.ssr.ssrbool.sym_left_transitive	40
Coq.ssr.ssrbool.sym_right_transitive	40
Coq.ssr.ssrbool.equivalence_relP	40
Coq.ssr.ssrbool.rev_trans	40
Coq.ssr.ssrbool.forE	40	7	search with cache (only 1: auto).	0.0120270252228	8
Coq.ssr.ssrbool.in1W	40	0.21	search with cache (only 1: intro H; only 1: by [  ]).	0.270920991898	231
Coq.ssr.ssrbool.in2W	40	0	search with cache (only 1: by move  =>? ?).	0.0130889415741	1
Coq.ssr.ssrbool.in3W	40	0	search with cache (only 1: by move  =>? ?).	0.0135440826416	1
Coq.ssr.ssrbool.in1T	40	14.45	search with cache (only 1: intros n m; only 1: auto).	1.61587691307	3241
Coq.ssr.ssrbool.in2T	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0188179016113	2
Coq.ssr.ssrbool.in3T	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0197279453278	2
Coq.ssr.ssrbool.sub_in1	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0179491043091	2
Coq.ssr.ssrbool.sub_in11	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0199220180511	2
Coq.ssr.ssrbool.sub_in111	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0218391418457	2
Coq.ssr.ssrbool.on1W	40	0	search with cache (only 1: by move  =>? ?).	0.0121879577637	1
Coq.ssr.ssrbool.on1lW	40	0	search with cache (only 1: by move  =>? ?).	0.012130022049	1
Coq.ssr.ssrbool.on2W	40	0	search with cache (only 1: by move  =>? ?).	0.0128772258759	1
Coq.ssr.ssrbool.on1T	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0183680057526	2
Coq.ssr.ssrbool.on1lT	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0180869102478	2
Coq.ssr.ssrbool.on2T	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0757191181183	2
Coq.ssr.ssrbool.subon1	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0189039707184	2
Coq.ssr.ssrbool.subon1l	40	0	search with cache (only 1: by move  =>allQ x /sub2; apply : allQ ).	0.015506029129	1
Coq.ssr.ssrbool.subon2	40	1	search with cache (only 1: by move  =>? ?; auto).	0.020791053772	2
Coq.ssr.ssrbool.can_in_inj	40
Coq.ssr.ssrbool.canLR_in	40	47.30.62	search with cache (only 1: intros; only 1: subst; only 1: auto).	16.9738848209	44243
Coq.ssr.ssrbool.canRL_in	40
Coq.ssr.ssrbool.on_can_inj	40	0	search with cache (only 1: by move  =>fK x y /fK {+2}<- /fK {+2}<- ->).	0.0198829174042	1
Coq.ssr.ssrbool.canLR_on	40	1	search with cache (only 1: by move  =>fK D1y ->; rewrite fK).	0.0145289897919	2
Coq.ssr.ssrbool.canRL_on	40	2	search with cache (only 1: by move  =>fK D1x <-; rewrite fK).	0.0148189067841	3
Coq.ssr.ssrbool.inW_bij	40
Coq.ssr.ssrbool.onW_bij	40	0	search with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0154359340668	1
Coq.ssr.ssrbool.inT_bij	40	0	search with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0196781158447	1
Coq.ssr.ssrbool.onT_bij	40	0	search with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0194571018219	1
Coq.ssr.ssrbool.sub_in_bij	40	0.79	search with cache (only 1: intro x; only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	3.38881587982	5613
Coq.ssr.ssrbool.subon_bij	40	5	search with cache (only 1: by move  =>subD [g' fK g'K]; exists g' => x; move /subD ; [ apply : fK  | apply : g'K  ]).	0.0309450626373	6
Coq.ssr.ssrbool.sub_in2	40	23.16	search with cache (only 1: move  =>f0 fP; only 1: by move  =>? ?; auto).	0.838616132736	1092
Coq.ssr.ssrbool.sub_in3	40	24.16	search with cache (only 1: move  =>f0 fP; only 1: by move  =>? ?; auto).	0.971482992172	1158
Coq.ssr.ssrbool.sub_in12	40	4.32	search with cache (only 1: move  =>f0 fP; only 1: by move  =>/= sub_dd'; apply : sub_in111 ).	0.891675949097	706
Coq.ssr.ssrbool.sub_in21	40	1	search with cache (only 1: by move  =>/= sub_dd'; apply : sub_in111 ).	0.0232899188995	2
Coq.ssr.ssrbool.equivalence_relP_in	40
Coq.ssr.ssrbool.monoW	40	76	search with cache (only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).	2.60186314583	6391
Coq.ssr.ssrbool.mono2W	40	0	search with cache (only 1: by move  =>hf x ax; rewrite hf).	0.0109441280365	1
Coq.ssr.ssrbool.homoRL	40
Coq.ssr.ssrbool.homoLR	40	0	search with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).	0.0131740570068	1
Coq.ssr.ssrbool.homo_mono	40
Coq.ssr.ssrbool.monoLR	40
Coq.ssr.ssrbool.monoRL	40
Coq.ssr.ssrbool.can_mono	40
Coq.ssr.ssrbool.monoW_in	40
Coq.ssr.ssrbool.mono2W_in	40	0	search with cache (only 1: by move  =>hf x ax; rewrite hf).	0.012531042099	1
Coq.ssr.ssrbool.homoRL_in	40
Coq.ssr.ssrbool.homoLR_in	40	0	search with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK_on //; apply).	0.0193819999695	1
Coq.ssr.ssrbool.homo_mono_in	40
Coq.ssr.ssrbool.monoLR_in	40
Coq.ssr.ssrbool.monoRL_in	40
Coq.ssr.ssrbool.can_mono_in	40
Coq.ssr.ssrsetoid.compat_Reflexive	40	0	search with cache (only 1: tauto).	0.00452399253845	1
Coq.ssr.ssrfun.unitE	40	8.7.12	search with cache (only 1: intro H; only 1: destruct H; only 1: trivial).	0.0870959758759	613
Coq.ssr.ssrfun.frefl	40	27	search with cache (only 1: repeat split).	0.0310699939728	361
Coq.ssr.ssrfun.fsym	40	0.9	search with cache (only 1: intros; only 1: by [  ]).	0.0168519020081	21
Coq.ssr.ssrfun.ftrans	40	2.39.24.30	search with cache (only 1: red; only 1: intros; only 1: rewrite H; only 1: trivial).	2.68338513374	24287
Coq.ssr.ssrfun.rrefl	40	1	search with cache (only 1: repeat split).	0.0047709941864	2
Coq.ssr.ssrfun.eq_comp	40
Coq.ssr.ssrfun.all_tag	40	0.0.0.0.5	search with cache (only 1: intro H; only 1: exists (fun z => projT1 (H z)); only 1: intro z; only 1: destruct (H z); only 1: assumption).	0.0150978565216	10
Coq.ssr.ssrfun.all_tag2	40	0	search with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).	0.0122931003571	1
Coq.ssr.ssrfun.svalP	40	19	search with cache (only 1: apply proj2_sig).	0.0479800701141	165
Coq.ssr.ssrfun.s2valP	40	7	search with cache (only 1: by case : u ).	0.00968885421753	8
Coq.ssr.ssrfun.s2valP'	40	0	search with cache (only 1: by case : u ).	0.006432056427	1
Coq.ssr.ssrfun.all_sig	40	1	search with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).	0.0138289928436	2
Coq.ssr.ssrfun.all_sig2	40	1	search with cache (only 1: by case /all_tag =>f /all_pair []; exists f).	0.01811003685	2
Coq.ssr.ssrfun.can_pcan	40
Coq.ssr.ssrfun.pcan_inj	40
Coq.ssr.ssrfun.can_inj	40	1	search with cache (only 1: by move  =>fK x y /(congr1 g); rewrite !fK => [[]]).	0.0100109577179	2
Coq.ssr.ssrfun.canLR	40	6.40.9	search with cache (only 1: intros h1 h2; only 1: subst; only 1: trivial).	0.812361955643	5273
Coq.ssr.ssrfun.canRL	40	26.12	search with cache (only 1: destruct 2; only 1: auto).	0.473210096359	2189
Coq.ssr.ssrfun.Some_inj	40	1.27.59	search with cache (only 1: intros n m; only 1: inversion 1; only 1: trivial).	3.64020705223	15371
Coq.ssr.ssrfun.of_voidK	40	33	search with cache (only 1: by [  ]).	0.233700990677	605
Coq.ssr.ssrfun.esymK	40	3.5.62	search with cache (only 1: intro H; only 1: destruct H; only 1: reflexivity).	1.01719594002	5691
Coq.ssr.ssrfun.etrans_id	40	1.40	search with cache (only 1: rewrite eq_trans_refl_l; only 1: trivial).	0.27135682106	1112
Coq.ssr.ssrfun.inj_id	40	9	search with cache (only 1: by [  ]).	0.00825309753418	10
Coq.ssr.ssrfun.inj_can_sym	40	36.59	search with cache (only 1: red; only 1: auto).	2.2125980854	13713
Coq.ssr.ssrfun.inj_comp	40	8.9.39.8	search with cache (only 1: intros; only 1: intros Hfst Hsnd; only 1: intros; only 1: auto).	1.51924514771	6830
Coq.ssr.ssrfun.inj_compr	40	2.19.24.49.3.64	search with cache (only 1: intros h1 h2; only 1: intros; only 1: apply h1; only 1: simpl; only 1: destruct H; only 1: trivial).	39.3809919357	321540
Coq.ssr.ssrfun.can_comp	40	8.42.66	search with cache (only 1: red; only 1: simpl; only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).	4.28756904602	27312
Coq.ssr.ssrfun.pcan_pcomp	40
Coq.ssr.ssrfun.eq_inj	40
Coq.ssr.ssrfun.eq_can	40
Coq.ssr.ssrfun.inj_can_eq	40
Coq.ssr.ssrfun.bij_inj	40
Coq.ssr.ssrfun.bij_can_sym	40
Coq.ssr.ssrfun.bij_can_eq	40
Coq.ssr.ssrfun.eq_bij	40
Coq.ssr.ssrfun.bij_comp	40
Coq.ssr.ssrfun.bij_can_bij	40
Coq.ssr.ssrfun.inv_inj	40
Coq.ssr.ssrfun.inv_bij	40	23.23.150.31	search with cache (only 1: set (Hfsymf := fun a => eq_sym (Hf a)); only 1: exists f; only 1: trivial; only 1: trivial).	5.16101408005	53359
Coq.ssr.ssrunder.Under_rel_from_rel	40	4	search with cache (only 1: trivial).	0.00781488418579	15
Coq.ssr.ssrunder.Under_relE	40	0	search with cache (only 1: now trivial).	0.0036609172821	1
Coq.ssr.ssrunder.over_rel	40	0	search with cache (only 1: now trivial).	0.00379419326782	1
Coq.ssr.ssrunder.over_rel_done	40	0	search with cache (only 1: now trivial).	0.00346493721008	1
Coq.ssr.ssrunder.under_rel_done	40	0	search with cache (only 1: now unfold Over_rel).	0.00357413291931	1
Coq.Vectors.VectorEq.eqb_nat_eq	40
Coq.Vectors.VectorEq.eqb_eq	40
Coq.Vectors.VectorEq.eq_dec	40
Coq.Vectors.VectorEq.cast	40	2.4.3	search with cache (only 1: intros; only 1: subst; only 1: now auto).	0.16074180603	162
Coq.Vectors.VectorDef.trunc	40
Coq.Vectors.VectorSpec.eta	40
Coq.Vectors.VectorSpec.eq_nth_iff	40
Coq.Vectors.VectorSpec.nth_order_last	40
Coq.Vectors.VectorSpec.shiftin_nth	40
Coq.Vectors.VectorSpec.shiftin_last	40
Coq.Vectors.VectorSpec.shiftrepeat_nth	40
Coq.Vectors.VectorSpec.shiftrepeat_last	40	0.0.1	search with cache (only 1: refine (@rectS _ _ _ _); only 1: now simpl; only 1: now simpl).	0.0307309627533	4
Coq.Vectors.VectorSpec.const_nth	40	0.0.27.6	search with cache (only 1: generalize dependent n; only 1: induction p; only 1: now simpl; only 1: now simpl).	1.35594296455	2345
Coq.Vectors.VectorSpec.nth_map	40
Coq.Vectors.VectorSpec.nth_map2	40
Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40
Coq.Vectors.VectorSpec.to_list_of_list_opp	40
Coq.Vectors.VectorSpec.take_O	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0163180828094	2
Coq.Vectors.VectorSpec.take_idem	40
Coq.Vectors.VectorSpec.take_app	40
Coq.Vectors.VectorSpec.take_prf_irr	40	0.0.0.0.0.0.0.0.2	search with cache (only 1: induction p; only 1: intros n v le le'; only 1: auto; only 1: intros n v le le'; only 1: destruct v; only 1: inversion le; only 1: simpl; only 1: apply f_equal; only 1: apply IHp).	0.658201932907	262
Coq.Vectors.VectorSpec.uncons_cons	40	5.1	search with cache (only 1: intros; only 1: now simpl).	0.0169599056244	8
Coq.Vectors.VectorSpec.append_comm_cons	40	2.0.0	search with cache (only 1: intros m w le; only 1: simpl; only 1: reflexivity).	0.0203249454498	5
Coq.Vectors.VectorSpec.splitat_append	40
Coq.Vectors.VectorSpec.append_splitat	40
Coq.Vectors.Fin.of_nat_ext	40
Coq.Vectors.Fin.of_nat_to_nat_inv	40
Coq.Vectors.Fin.to_nat_of_nat	40
Coq.Vectors.Fin.to_nat_inj	40
Coq.Vectors.Fin.L_sanity	40
Coq.Vectors.Fin.L_R	40
Coq.Vectors.Fin.R_sanity	40
Coq.Vectors.Fin.depair_sanity	40
Coq.Vectors.Fin.eqb_nat_eq	40
Coq.Vectors.Fin.eqb_eq	40
Coq.Vectors.Fin.eq_dec	40
Coq.Vectors.Fin.cast	40	12.7.3	search with cache (only 1: intros; only 1: destruct H; only 1: now f_equal).	2.28644418716	5872
Coq.Setoids.Setoid.Seq_refl	40	33	search with cache (only 1: firstorder).	0.585442066193	1633
Coq.Setoids.Setoid.Seq_sym	40	5.0	search with cache (only 1: unfold Setoid_Theory in s; only 1: auto with *).	0.0141990184784	15
Coq.Setoids.Setoid.Seq_trans	40	7.0.0	search with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: now transitivity y).	0.0286560058594	39
Coq.Setoids.Setoid.gen_st	40	2	search with cache (only 1: simpl_relation).	0.00810384750366	3
Coq.Bool.IfProp.Iftrue_inv	40	4.0.3	search with cache (only 1: destruct 1; only 1: tauto; only 1: discriminate).	0.0353901386261	56
Coq.Bool.IfProp.Iffalse_inv	40	1.0.0.4.0	search with cache (only 1: destruct 1; only 1: intros; only 1: discriminate; only 1: intros; only 1: auto with bool).	0.0141589641571	11
Coq.Bool.IfProp.IfProp_true	40	0.16.52	search with cache (only 1: intros n m; only 1: inversion 1; only 1: trivial).	17.3300068378	113113
Coq.Bool.IfProp.IfProp_false	40	1.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: assumption).	0.0284309387207	20
Coq.Bool.IfProp.IfProp_or	40	0.2.0.2.3	search with cache (only 1: intro H; only 1: intro z; only 1: destruct 1; only 1: auto; only 1: auto).	0.499357938766	530
Coq.Bool.IfProp.IfProp_sum	40
Coq.Bool.Zerob.zerob_true_intro	40	1.20.12	search with cache (only 1: intros; only 1: subst; only 1: trivial).	0.566030025482	1060
Coq.Bool.Zerob.zerob_true_elim	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial with bool; only 1: inversion 1).	0.0215590000153	3
Coq.Bool.Zerob.zerob_false_intro	40	2.24.0	search with cache (only 1: destruct n; only 1: now subst; only 1: trivial with bool).	0.558036088943	934
Coq.Bool.Zerob.zerob_false_elim	40	1.1.3.0	search with cache (only 1: destruct n; only 1: inversion 1; only 1: inversion 1; only 1: inversion 1).	0.0368568897247	27
Coq.Bool.DecBool.ifdec_left	40	4.0.3.0	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity; only 1: contradiction).	0.0806648731232	145
Coq.Bool.DecBool.ifdec_right	40	0.5.0.0	search with cache (only 1: intros; only 1: case H; only 1: contradiction; only 1: auto).	0.0454189777374	44
Coq.Bool.Sumbool.sumbool_of_bool	40	7.7.15.0	search with cache (only 1: intro H; only 1: destruct H; only 1: auto; only 1: auto).	0.275500059128	1732
Coq.Bool.Sumbool.bool_eq_rec	40	1.1.1.1.3	search with cache (only 1: destruct b; only 1: intro z; only 1: auto; only 1: intro z; only 1: auto).	0.0577311515808	166
Coq.Bool.Sumbool.bool_eq_ind	40	0.0.0	search with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.00849390029907	3
Coq.Bool.Sumbool.sumbool_and	40
Coq.Bool.Sumbool.sumbool_or	40	2.2.1.2.0	search with cache (only 1: case H1; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	2.88339400291	2938
Coq.Bool.Sumbool.sumbool_not	40	2.2.0	search with cache (only 1: case H1; only 1: auto; only 1: auto).	0.398482084274	368
Coq.Bool.Sumbool.bool_of_sumbool	40
Coq.Bool.Bool.bool_dec	40
Coq.Bool.Bool.diff_true_false	40	15	search with cache (only 1: discriminate).	0.030749797821	239
Coq.Bool.Bool.diff_false_true	40	0	search with cache (only 1: discriminate).	0.00451493263245	1
Coq.Bool.Bool.eq_true_false_abs	40	3.3.16.0	search with cache (only 1: intro H; only 1: destruct H; only 1: discriminate; only 1: discriminate).	0.261360883713	1446
Coq.Bool.Bool.not_true_is_false	40	2.16.4	search with cache (only 1: destr_bool; only 1: reflexivity || destruct H; only 1: repeat split).	0.287182092667	1347
Coq.Bool.Bool.not_false_is_true	40	1.0	search with cache (only 1: destr_bool; only 1: intuition).	0.00739812850952	3
Coq.Bool.Bool.not_true_iff_false	40	1.0.1.7	search with cache (only 1: repeat split; only 1: destr_bool; only 1: intuition; only 1: destr_bool).	0.235704898834	331
Coq.Bool.Bool.not_false_iff_true	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0106880664825	3
Coq.Bool.Bool.leb_implb	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0141060352325	5
Coq.Bool.Bool.eqb_subst	40	8.0	search with cache (only 1: intro H; only 1: destr_bool).	0.0188720226288	29
Coq.Bool.Bool.eqb_reflx	40	0	search with cache (only 1: destr_bool).	0.00485515594482	1
Coq.Bool.Bool.eqb_prop	40	0	search with cache (only 1: destr_bool).	0.00669503211975	1
Coq.Bool.Bool.eqb_true_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0130591392517	5
Coq.Bool.Bool.eqb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0161998271942	5
Coq.Bool.Bool.negb_orb	40	0.0.0.0.0.1.2	search with cache (only 1: destruct b1; only 1: destruct b2; only 1: repeat split; only 1: repeat split; only 1: destruct b2; only 1: repeat split; only 1: repeat split).	0.019464969635	30
Coq.Bool.Bool.negb_andb	40	0	search with cache (only 1: destr_bool).	0.00602102279663	1
Coq.Bool.Bool.negb_involutive	40	0	search with cache (only 1: destr_bool).	0.00577616691589	1
Coq.Bool.Bool.negb_involutive_reverse	40	0	search with cache (only 1: destr_bool).	0.00519108772278	1
Coq.Bool.Bool.negb_sym	40	0	search with cache (only 1: destr_bool).	0.00713706016541	1
Coq.Bool.Bool.no_fixpoint_negb	40	0	search with cache (only 1: destr_bool).	0.00530982017517	1
Coq.Bool.Bool.eqb_negb1	40	0	search with cache (only 1: destr_bool).	0.00497484207153	1
Coq.Bool.Bool.eqb_negb2	40	0	search with cache (only 1: destr_bool).	0.00503706932068	1
Coq.Bool.Bool.if_negb	40	0	search with cache (only 1: destr_bool).	0.00573897361755	1
Coq.Bool.Bool.negb_true_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.00975203514099	3
Coq.Bool.Bool.negb_false_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0097758769989	3
Coq.Bool.Bool.orb_true_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0185968875885	5
Coq.Bool.Bool.orb_false_iff	40	0.1.0.0.0.12.4	search with cache (only 1: split; only 1: destr_bool; only 1: intuition; only 1: intros; only 1: destruct H; only 1: subst; only 1: destr_bool).	11.4296400547	32364
Coq.Bool.Bool.orb_true_elim	40	0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.0132048130035	4
Coq.Bool.Bool.orb_prop	40	0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.0122120380402	4
Coq.Bool.Bool.orb_true_intro	40	1.1	search with cache (only 1: destr_bool; only 1: intuition).	0.0434370040894	50
Coq.Bool.Bool.orb_false_intro	40	0	search with cache (only 1: destr_bool).	0.00668287277222	1
Coq.Bool.Bool.orb_false_elim	40	1.0	search with cache (only 1: destr_bool; only 1: intuition).	0.00855302810669	3
Coq.Bool.Bool.orb_diag	40	5.0	search with cache (only 1: intros; only 1: destr_bool).	0.00682401657104	7
Coq.Bool.Bool.orb_true_r	40	3.2.1	search with cache (only 1: intros; only 1: apply orb_true_iff; only 1: intuition).	0.01335978508	14
Coq.Bool.Bool.orb_true_l	40	0	search with cache (only 1: destr_bool).	0.00561594963074	1
Coq.Bool.Bool.orb_false_r	40	6.1	search with cache (only 1: intros; only 1: destr_bool).	0.00702786445618	9
Coq.Bool.Bool.orb_false_l	40	0	search with cache (only 1: destr_bool).	0.00497388839722	1
Coq.Bool.Bool.orb_negb_r	40	0	search with cache (only 1: destr_bool).	0.00564312934875	1
Coq.Bool.Bool.orb_comm	40	6.0	search with cache (only 1: intros; only 1: destr_bool).	0.00900888442993	8
Coq.Bool.Bool.orb_assoc	40	6.0	search with cache (only 1: intros; only 1: destr_bool).	0.0116419792175	8
Coq.Bool.Bool.andb_true_iff	40	0.0.0.0.6	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.291843175888	251
Coq.Bool.Bool.andb_false_iff	40	0.0.0.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.11536192894	39
Coq.Bool.Bool.andb_true_eq	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct a, b; only 1: repeat split; only 1: repeat split; only 1: assumption; only 1: repeat split; only 1: assumption; only 1: repeat split; only 1: assumption; only 1: assumption).	0.0158090591431	9
Coq.Bool.Bool.andb_false_intro1	40	1	search with cache (only 1: destr_bool).	0.0158660411835	15
Coq.Bool.Bool.andb_false_intro2	40	0.0.0	search with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.00755906105042	3
Coq.Bool.Bool.andb_false_r	40	1.3.1	search with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.00829195976257	8
Coq.Bool.Bool.andb_false_l	40	1	search with cache (only 1: destr_bool).	0.00510716438293	2
Coq.Bool.Bool.andb_diag	40	8.0	search with cache (only 1: intros; only 1: destr_bool).	0.00771284103394	10
Coq.Bool.Bool.andb_true_r	40	2	search with cache (only 1: destr_bool).	0.00518989562988	3
Coq.Bool.Bool.andb_true_l	40	1	search with cache (only 1: destr_bool).	0.00580501556396	2
Coq.Bool.Bool.andb_false_elim	40	3.0.0.2	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.0232360363007	26
Coq.Bool.Bool.andb_negb_r	40	0	search with cache (only 1: destr_bool).	0.00578093528748	1
Coq.Bool.Bool.andb_comm	40	4	search with cache (only 1: destr_bool).	0.017049074173	21
Coq.Bool.Bool.andb_assoc	40	4	search with cache (only 1: destr_bool).	0.0195050239563	23
Coq.Bool.Bool.andb_orb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.00797820091248	1
Coq.Bool.Bool.andb_orb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.080041885376	1
Coq.Bool.Bool.orb_andb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.00785422325134	1
Coq.Bool.Bool.orb_andb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.00840997695923	1
Coq.Bool.Bool.absorption_andb	40	0	search with cache (only 1: destr_bool).	0.00676083564758	1
Coq.Bool.Bool.absorption_orb	40	0	search with cache (only 1: destr_bool).	0.00558710098267	1
Coq.Bool.Bool.xorb_false_r	40	4	search with cache (only 1: destr_bool).	0.0164060592651	22
Coq.Bool.Bool.xorb_false_l	40	0	search with cache (only 1: destr_bool).	0.00497388839722	1
Coq.Bool.Bool.xorb_true_r	40	0	search with cache (only 1: destr_bool).	0.00485301017761	1
Coq.Bool.Bool.xorb_true_l	40	0	search with cache (only 1: reflexivity).	0.00361299514771	1
Coq.Bool.Bool.xorb_nilpotent	40	0	search with cache (only 1: destr_bool).	0.00481104850769	1
Coq.Bool.Bool.xorb_comm	40	1	search with cache (only 1: destr_bool).	0.00615906715393	2
Coq.Bool.Bool.xorb_assoc_reverse	40	1	search with cache (only 1: destr_bool).	0.00839304924011	2
Coq.Bool.Bool.xorb_eq	40	0	search with cache (only 1: destr_bool).	0.00693392753601	1
Coq.Bool.Bool.xorb_move_l_r_1	40	0	search with cache (only 1: destr_bool).	0.00863218307495	1
Coq.Bool.Bool.xorb_move_l_r_2	40	0	search with cache (only 1: destr_bool).	0.00929713249207	1
Coq.Bool.Bool.xorb_move_r_l_1	40	0	search with cache (only 1: destr_bool).	0.00957608222961	1
Coq.Bool.Bool.xorb_move_r_l_2	40	0	search with cache (only 1: destr_bool).	0.00927901268005	1
Coq.Bool.Bool.negb_xorb_l	40	1	search with cache (only 1: destr_bool).	0.00679087638855	2
Coq.Bool.Bool.negb_xorb_r	40	0.0.0.0.0	search with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.00992202758789	5
Coq.Bool.Bool.xorb_negb_negb	40	0.0.0.0.0	search with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.00933003425598	5
Coq.Bool.Bool.eq_iff_eq_true	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0197470188141	5
Coq.Bool.Bool.eq_true_iff_eq	40	1.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0119791030884	5
Coq.Bool.Bool.eq_true_negb_classical	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.00835800170898	2
Coq.Bool.Bool.eq_true_not_negb	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0072808265686	2
Coq.Bool.Bool.absurd_eq_bool	40	5.3	search with cache (only 1: intros; only 1: intuition).	0.020015001297	40
Coq.Bool.Bool.absurd_eq_true	40	5.0	search with cache (only 1: destr_bool; only 1: intuition).	0.00661301612854	7
Coq.Bool.Bool.trans_eq_bool	40	0.4.0.0	search with cache (only 1: intro H; only 1: intro z; only 1: destruct 2; only 1: trivial).	0.00896310806274	8
Coq.Bool.Bool.Is_true_eq_true	40	5.6	search with cache (only 1: destr_bool; only 1: intuition).	0.183908224106	201
Coq.Bool.Bool.Is_true_eq_left	40	0	search with cache (only 1: destr_bool).	0.00515294075012	1
Coq.Bool.Bool.Is_true_eq_right	40	0.0.0	search with cache (only 1: intros; only 1: subst; only 1: auto with bool).	0.00567603111267	3
Coq.Bool.Bool.eqb_refl	40	0	search with cache (only 1: destr_bool).	0.00468611717224	1
Coq.Bool.Bool.eqb_eq	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0100061893463	3
Coq.Bool.Bool.orb_prop_elim	40	3.0.0.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: tauto).	0.0365419387817	18
Coq.Bool.Bool.orb_prop_intro	40	1.0	search with cache (only 1: destr_bool; only 1: tauto).	0.00772094726562	3
Coq.Bool.Bool.andb_prop_intro	40	1.0.0.1	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto).	0.0164318084717	18
Coq.Bool.Bool.andb_prop_elim	40	1.0.0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.0107018947601	6
Coq.Bool.Bool.eq_bool_prop_intro	40	0.0.1	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0144100189209	13
Coq.Bool.Bool.eq_bool_prop_elim	40	3.2.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0109550952911	8
Coq.Bool.Bool.negb_prop_elim	40	0.0.0	search with cache (only 1: destr_bool; only 1: auto; only 1: tauto).	0.00738906860352	3
Coq.Bool.Bool.negb_prop_intro	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.00744414329529	2
Coq.Bool.Bool.negb_prop_classical	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.00643086433411	2
Coq.Bool.Bool.negb_prop_involutive	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.00682902336121	3
Coq.Bool.Bool.andb_if	40	4	search with cache (only 1: destr_bool).	0.0101230144501	14
Coq.Bool.Bool.negb_if	40	0	search with cache (only 1: destr_bool).	0.00506687164307	1
Coq.Bool.Bool.andb_lazy_alt	40	1.0	search with cache (only 1: intros; only 1: trivial).	0.00651001930237	3
Coq.Bool.Bool.orb_lazy_alt	40	0.0	search with cache (only 1: intros; only 1: trivial).	0.004958152771	2
Coq.Bool.Bool.reflect_iff	40	6.0.7.0.17	search with cache (only 1: intros A B []; only 1: intuition; only 1: repeat split; only 1: intuition; only 1: discriminate).	11.3074679375	25857
Coq.Bool.Bool.iff_reflect	40	5.2.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0487570762634	77
Coq.Bool.Bool.reflect_dec	40	0.5.0.4	search with cache (only 1: unfold not; only 1: destruct 1; only 1: auto; only 1: intuition).	0.258697986603	271
Coq.Bool.Bool.eqb_spec	40	0.0.0.0.4	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0118100643158	9
Coq.Bool.BoolEq.beq_eq_true	40	0.1.1	search with cache (only 1: intuition; only 1: subst; only 1: trivial).	0.0120830535889	5
Coq.Bool.BoolEq.beq_eq_not_false	40
Coq.Bool.BoolEq.beq_false_not_eq	40
Coq.Bool.BoolEq.exists_beq_eq	40
Coq.Bool.BoolEq.not_eq_false_beq	40
Coq.Bool.BoolEq.eq_dec	40
Coq.Lists.ListSet.set_In_dec	40
Coq.Lists.ListSet.set_mem_ind	40	2.2.6.5.0.0.0.0	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: auto; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: case (Aeq_dec a a0); only 1: auto with datatypes; only 1: auto with datatypes).	27.7920231819	30346
Coq.Lists.ListSet.set_mem_ind2	40
Coq.Lists.ListSet.set_mem_correct1	40	3.0.3.0.1.5.0.11.1	search with cache (only 1: simple induction x; only 1: easy; only 1: simpl; only 1: intro; only 1: elim (Aeq_dec a a0); only 1: intros; only 1: auto; only 1: intros; only 1: auto).	31.8716459274	42524
Coq.Lists.ListSet.set_mem_correct2	40
Coq.Lists.ListSet.set_mem_complete1	40
Coq.Lists.ListSet.set_mem_complete2	40	0.1.0.1.2.0.1.0.0.0.0	search with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros; only 1: case (Aeq_dec a a0); only 1: intro Hneg; only 1: absurd (a0 = a); only 1: auto with datatypes; only 1: auto with datatypes; only 1: auto with datatypes).	5.22643899918	3155
Coq.Lists.ListSet.set_add_intro1	40
Coq.Lists.ListSet.set_add_intro2	40
Coq.Lists.ListSet.set_add_intro	40	3.2.1	search with cache (only 1: intros a0 l H [Ha0a| Hal]; only 1: auto with datatypes; only 1: auto with datatypes).	0.0995681285858	58
Coq.Lists.ListSet.set_add_elim	40
Coq.Lists.ListSet.set_add_elim2	40	0.0.0.0.0.0.0.0.0.0.0.0.3.1.0.3.1	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: intros [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes; only 1: simpl; only 1: do 3 intro; only 1: elim (Aeq_dec b a0); only 1: simpl; only 1: intros H0 [| ]; only 1: tauto; only 1: tauto; only 1: simpl; only 1: intros H0 [| ]; only 1: tauto; only 1: tauto).	5.84084916115	5174
Coq.Lists.ListSet.set_add_not_empty	40
Coq.Lists.ListSet.set_add_iff	40
Coq.Lists.ListSet.set_add_nodup	40
Coq.Lists.ListSet.set_remove_1	40
Coq.Lists.ListSet.set_remove_2	40
Coq.Lists.ListSet.set_remove_3	40
Coq.Lists.ListSet.set_remove_iff	40
Coq.Lists.ListSet.set_remove_nodup	40
Coq.Lists.ListSet.set_union_intro1	40
Coq.Lists.ListSet.set_union_intro2	40	0.0.1.0.0.1.0.0.7	search with cache (only 1: intros a0 l; only 1: simple induction y; only 1: simpl; only 1: intro; only 1: tauto; only 1: simpl; only 1: intros a b x [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes).	2.95604205132	2183
Coq.Lists.ListSet.set_union_intro	40	0.0.1.1.0.0.1	search with cache (only 1: simple induction y; only 1: simpl; only 1: tauto; only 1: intros; only 1: elim H0; only 1: auto with datatypes; only 1: auto with datatypes).	0.237361192703	37
Coq.Lists.ListSet.set_union_elim	40
Coq.Lists.ListSet.set_union_iff	40
Coq.Lists.ListSet.set_union_nodup	40
Coq.Lists.ListSet.set_union_emptyL	40	0.0.0.2.0.0.0.0.6	search with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros; only 1: generalize (set_add_elim _ _ _ H0); only 1: intros [H1| H1]; only 1: auto with datatypes; only 1: tauto).	1.22513580322	726
Coq.Lists.ListSet.set_union_emptyR	40	0.0.0.1.0.0.0.0	search with cache (only 1: intros a x H; only 1: case (set_union_elim _ _ _ H); only 1: case (set_union_elim _ _ _ H); only 1: case (set_union_elim _ _ _ H); only 1: auto || contradiction; only 1: auto || contradiction; only 1: auto || contradiction; only 1: auto || contradiction).	0.1794090271	40
Coq.Lists.ListSet.set_inter_intro	40
Coq.Lists.ListSet.set_inter_elim1	40
Coq.Lists.ListSet.set_inter_elim2	40
Coq.Lists.ListSet.set_inter_elim	40	0.1	search with cache (only 1: intros a0 l Hrec y; only 1: eauto with datatypes).	0.0577208995819	3
Coq.Lists.ListSet.set_inter_iff	40
Coq.Lists.ListSet.set_inter_nodup	40
Coq.Lists.ListSet.set_diff_intro	40
Coq.Lists.ListSet.set_diff_elim1	40
Coq.Lists.ListSet.set_diff_elim2	40
Coq.Lists.ListSet.set_diff_iff	40
Coq.Lists.ListSet.set_diff_nodup	40
Coq.Lists.ListSet.set_diff_trivial	40	0.2.0.0.6.6	search with cache (only 1: unfold set_In; only 1: intros a x y; only 1: eapply set_diff_elim2; only 1: eauto; only 1: eapply set_diff_elim1; only 1: eauto).	30.8820509911	14531
Coq.Lists.ListDec.In_decidable	40	4.0.1.0.3	search with cache (only 1: induction l as [| a l' Hrec]; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	0.164519786835	133
Coq.Lists.ListDec.incl_decidable	40
Coq.Lists.ListDec.NoDup_decidable	40
Coq.Lists.ListDec.incl_dec	40
Coq.Lists.ListDec.NoDup_dec	40
Coq.Lists.ListDec.uniquify_map	40
Coq.Lists.ListDec.uniquify	40
Coq.Lists.Streams.unfold_Stream	40	4.0.1.20	search with cache (only 1: intro H; only 1: destruct H; only 1: destruct H; only 1: reflexivity).	0.10179901123	454
Coq.Lists.Streams.tl_nth_tl	40	0.0.2.0.4	search with cache (only 1: induction n; only 1: trivial; only 1: intro x; only 1: case x; only 1: trivial).	0.119577884674	148
Coq.Lists.Streams.Str_nth_tl_plus	40
Coq.Lists.Streams.Str_nth_plus	40
Coq.Lists.Streams.EqSt_reflex	40
Coq.Lists.Streams.sym_EqSt	40	4.10.9.3	search with cache (only 1: intros; only 1: coinduction ltac:(EqSt_reflex); only 1: destruct H; only 1: auto with datatypes).	3.12771105766	8729
Coq.Lists.Streams.trans_EqSt	40
Coq.Lists.Streams.eqst_ntheq	40
Coq.Lists.Streams.ntheq_eqst	40
Coq.Lists.Streams.ForAll_Str_nth_tl	40
Coq.Lists.Streams.ForAll_coind	40	3.10.19	search with cache (only 1: coinduction ltac:(EqSt_reflex); only 1: auto; only 1: auto with datatypes).	0.455691099167	1391
Coq.Lists.Streams.Str_nth_tl_map	40	1.0.1.0.1	search with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0319931507111	28
Coq.Lists.Streams.Str_nth_map	40	0.0.0.0.0.2	search with cache (only 1: unfold Str_nth; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: intros s; only 1: apply IHn).	0.02969789505	27
Coq.Lists.Streams.ForAll_map	40
Coq.Lists.Streams.Exists_map	40
Coq.Lists.Streams.Str_nth_tl_zipWith	40	0.10.0.0.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: apply IHn).	0.823192119598	1084
Coq.Lists.Streams.Str_nth_zipWith	40	0.0.0.0.0.1	search with cache (only 1: unfold Str_nth; only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: simpl in *; only 1: apply IHn).	0.0506448745728	42
Coq.Lists.List.nil_cons	40	3.0	search with cache (only 1: intros a n Ha; only 1: discriminate).	0.00660610198975	5
Coq.Lists.List.destruct_list	40
Coq.Lists.List.hd_error_tl_repr	40
Coq.Lists.List.hd_error_some_nil	40	3.0.1.0.1	search with cache (only 1: destruct l as [| x xs]; only 1: unfold hd_error, tl; only 1: firstorder  discriminate; only 1: intros; only 1: discriminate).	0.043998003006	51
Coq.Lists.List.length_zero_iff_nil	40	0.0.5.0.0.5.0	search with cache (only 1: split; only 1: destruct l; only 1: firstorder  discriminate; only 1: now discriminate; only 1: destruct l; only 1: firstorder  discriminate; only 1: now discriminate).	0.358261108398	457
Coq.Lists.List.hd_error_nil	40	0.0	search with cache (only 1: unfold hd_error, tl; only 1: firstorder  discriminate).	0.00578904151917	2
Coq.Lists.List.hd_error_cons	40	2.1.0	search with cache (only 1: intros; only 1: simpl; only 1: split).	0.0076630115509	6
Coq.Lists.List.in_eq	40	3.0	search with cache (only 1: intros; only 1: firstorder  discriminate).	0.0107069015503	11
Coq.Lists.List.in_cons	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.00563716888428	2
Coq.Lists.List.not_in_cons	40	3.3.7.3.0.2.2	search with cache (only 1: split; only 1: simpl; only 1: auto; only 1: inversion 1; only 1: inversion 1; only 1: auto; only 1: auto).	1.65678715706	3475
Coq.Lists.List.in_nil	40	0	search with cache (only 1: intuition).	0.00502800941467	1
Coq.Lists.List.in_split	40
Coq.Lists.List.in_inv	40	1.1.0	search with cache (only 1: destruct 1; only 1: intuition; only 1: intuition).	0.0130081176758	5
Coq.Lists.List.in_dec	40	20.3.4	search with cache (only 1: induction l; only 1: intuition; only 1: firstorder  discriminate).	16.0878369808	15929
Coq.Lists.List.app_cons_not_nil	40
Coq.Lists.List.app_nil_l	40	1.1.0	search with cache (only 1: simpl; only 1: intros; only 1: auto).	0.014240026474	19
Coq.Lists.List.app_nil_r	40	0.1.5.1.6	search with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: apply f_equal; only 1: auto).	0.291444063187	376
Coq.Lists.List.app_nil_end	40	0.0.0.1.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: firstorder  discriminate; only 1: simpl; only 1: f_equal; only 1: auto).	0.0144510269165	8
Coq.Lists.List.app_assoc	40	0.0.9.4.0.10	search with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: f_equal; only 1: auto).	1.12812685966	2656
Coq.Lists.List.app_assoc_reverse	40	0.0.0.0.0.1.0	search with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.111933946609	8
Coq.Lists.List.app_comm_cons	40	5	search with cache (only 1: auto).	0.00799083709717	6
Coq.Lists.List.app_eq_nil	40	15.9	search with cache (only 1: intros; only 1: now destruct l).	1.64265108109	3761
Coq.Lists.List.app_eq_unit	40
Coq.Lists.List.app_inj_tail	40
Coq.Lists.List.app_length	40	2.4.1.20	search with cache (only 1: induction l; only 1: split; only 1: simpl; only 1: auto).	3.89724898338	7708
Coq.Lists.List.in_app_or	40
Coq.Lists.List.in_or_app	40	15.0.12.0.0.0	search with cache (only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	12.2267711163	35913
Coq.Lists.List.in_app_iff	40	17.0.17.0.0.2	search with cache (only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	20.0935778618	50599
Coq.Lists.List.app_inv_head	40
Coq.Lists.List.app_inv_tail	40
Coq.Lists.List.nth_in_or_default	40
Coq.Lists.List.nth_S_cons	40	2.0.0.0.0.0	search with cache (only 1: intros [| n]; only 1: simpl; only 1: intros n l d; only 1: auto; only 1: simpl; only 1: auto).	0.0143749713898	8
Coq.Lists.List.nth_default_eq	40	2.2.0.2.0.0.0.2.0.1.0	search with cache (only 1: intros n l d; only 1: revert n; only 1: induction l; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: intros [| n]; only 1: auto; only 1: simpl; only 1: destruct (IHl n); only 1: auto).	4.95886397362	6669
Coq.Lists.List.nth_In	40
Coq.Lists.List.In_nth	40
Coq.Lists.List.nth_overflow	40
Coq.Lists.List.nth_indep	40	0.0.0.0.1.0.1.2.1.0	search with cache (only 1: unfold lt; only 1: induction l; only 1: easy; only 1: destruct n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: intros; only 1: apply IHl; only 1: auto with arith).	3.84298110008	3381
Coq.Lists.List.app_nth1	40	0.0.0.0.7.0.0	search with cache (only 1: induction l; only 1: easy; only 1: destruct n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	1.42458605766	1251
Coq.Lists.List.app_nth2	40	0.0.6.3.0.0.1.0.0.0	search with cache (only 1: induction l; only 1: inversion 1; only 1: auto with arith; only 1: auto with arith; only 1: intros l' d [| n]; only 1: simpl; only 1: intros; only 1: inversion H; only 1: simpl; only 1: auto with arith).	18.77196908	19416
Coq.Lists.List.nth_split	40
Coq.Lists.List.nth_error_In	40
Coq.Lists.List.In_nth_error	40
Coq.Lists.List.nth_error_None	40
Coq.Lists.List.nth_error_Some	40
Coq.Lists.List.nth_error_split	40
Coq.Lists.List.nth_error_app1	40	2.0.0.0.0.1.2.0.0	search with cache (only 1: revert n; only 1: induction l; only 1: simpl; only 1: easy; only 1: destruct n; only 1: simpl; only 1: now auto with arith; only 1: simpl; only 1: now auto with arith).	3.21731996536	2114
Coq.Lists.List.nth_error_app2	40	0.0.0.1.0.0.1.1.0.0.0	search with cache (only 1: revert l; only 1: induction n; only 1: intros [| a l] H; only 1: auto; only 1: simpl in *; only 1: now auto with arith; only 1: intros [| a l] H; only 1: auto; only 1: simpl in *; only 1: apply IHn; only 1: auto with arith).	1.316147089	1022
Coq.Lists.List.nth_error_nth	40
Coq.Lists.List.nth_error_nth'	40	1.0.0.0.0.1.7	search with cache (only 1: induction l; only 1: easy; only 1: destruct n; only 1: simpl; only 1: now auto with arith; only 1: simpl; only 1: now auto with arith).	5.73880600929	4724
Coq.Lists.List.remove_In	40
Coq.Lists.List.app_removelast_last	40
Coq.Lists.List.exists_last	40
Coq.Lists.List.removelast_app	40
Coq.Lists.List.count_occ_In	40
Coq.Lists.List.count_occ_not_In	40
Coq.Lists.List.count_occ_nil	40	5.3	search with cache (only 1: simpl; only 1: intuition).	0.0101528167725	10
Coq.Lists.List.count_occ_inv_nil	40
Coq.Lists.List.count_occ_cons_eq	40	1.2.0.6	search with cache (only 1: simpl; only 1: destruct eq_dec as [->| Hneq]; only 1: intuition; only 1: intuition).	0.287899017334	207
Coq.Lists.List.count_occ_cons_neq	40	0.0.0	search with cache (only 1: intros H; only 1: simpl; only 1: now destruct (eq_dec x y)).	0.0141820907593	3
Coq.Lists.List.rev_app_distr	40
Coq.Lists.List.rev_unit	40	0.0.0.0.2.0.2.15	search with cache (only 1: induction l; only 1: intro y; only 1: simpl; only 1: auto; only 1: intro y; only 1: simpl; only 1: rewrite (IHl y); only 1: trivial).	3.74279403687	6307
Coq.Lists.List.rev_involutive	40
Coq.Lists.List.in_rev	40
Coq.Lists.List.rev_length	40
Coq.Lists.List.rev_nth	40
Coq.Lists.List.rev_append_rev	40
Coq.Lists.List.rev_alt	40
Coq.Lists.List.rev_list_ind	40	11.1.24	search with cache (only 1: induction l as [| a tail]; only 1: easy; only 1: auto).	20.9196898937	50521
Coq.Lists.List.rev_ind	40
Coq.Lists.List.concat_nil	40	4	search with cache (only 1: trivial).	0.00724291801453	5
Coq.Lists.List.concat_cons	40	0	search with cache (only 1: reflexivity).	0.00545191764832	1
Coq.Lists.List.concat_app	40
Coq.Lists.List.list_eq_dec	40
Coq.Lists.List.map_cons	40	0	search with cache (only 1: now f_equal).	0.00740003585815	1
Coq.Lists.List.in_map	40	1.2.1.3.1.1.2.1	search with cache (only 1: induction l as [| x l]; only 1: intros a H; only 1: inversion_clear H; only 1: intros; only 1: firstorder; only 1: subst; only 1: simpl; only 1: intuition).	4.32131695747	3859
Coq.Lists.List.in_map_iff	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	0.0420341491699	3
Coq.Lists.List.map_length	40	3.1.1.0.0	search with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: rewrite IHl; only 1: auto with arith).	0.0228781700134	11
Coq.Lists.List.map_nth	40
Coq.Lists.List.map_nth_error	40
Coq.Lists.List.map_app	40	1.3.0.4.0.3	search with cache (only 1: induction l; only 1: reflexivity; only 1: intro y; only 1: simpl; only 1: rewrite (IHl y); only 1: firstorder).	2.05351901054	1634
Coq.Lists.List.map_rev	40
Coq.Lists.List.map_eq_nil	40	18.0.0.3	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: discriminate).	6.51315593719	7302
Coq.Lists.List.count_occ_map	40
Coq.Lists.List.in_flat_map	40
Coq.Lists.List.flat_map_concat_map	40	2.0.2.2.5	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.61793589592	723
Coq.Lists.List.concat_map	40	1.0.3.0.1.0.0.0	search with cache (only 1: intros A B f l; only 1: induction l as [| x l IH]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite map_app; only 1: rewrite IH; only 1: reflexivity).	0.426368951797	495
Coq.Lists.List.map_id	40	2.4.0.4.0.3	search with cache (only 1: induction l; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite IHl; only 1: reflexivity).	1.38798499107	1814
Coq.Lists.List.map_map	40	1.7.0.1.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: reflexivity).	1.55726790428	1633
Coq.Lists.List.map_ext_in	40
Coq.Lists.List.ext_in_map	40
Coq.Lists.List.map_ext_in_iff	40
Coq.Lists.List.map_ext	40	1.6.6	search with cache (only 1: intros; only 1: apply map_ext_in; only 1: auto).	0.63895201683	729
Coq.Lists.List.fold_left_app	40	1.0.1.0.0.2	search with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: auto).	0.0265910625458	20
Coq.Lists.List.fold_left_length	40
Coq.Lists.List.fold_right_app	40	0.1.0.0.0.2.2	search with cache (only 1: induction l; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).	0.400899887085	320
Coq.Lists.List.fold_left_rev_right	40
Coq.Lists.List.fold_symmetric	40
Coq.Lists.List.existsb_exists	40
Coq.Lists.List.existsb_nth	40
Coq.Lists.List.existsb_app	40	3.10.6.1.26.0	search with cache (only 1: intros; only 1: induction l1 as [| x l1 IH]; only 1: intuition; only 1: simpl; only 1: rewrite IH; only 1: intuition).	21.7059829235	22824
Coq.Lists.List.forallb_forall	40
Coq.Lists.List.forallb_app	40	0.0.0.4.3.0.0.0.7	search with cache (only 1: induction l1; only 1: intuition; only 1: intuition; only 1: simpl; only 1: case (f a); only 1: simpl; only 1: intuition; only 1: simpl; only 1: congruence).	1.88965892792	1726
Coq.Lists.List.filter_In	40
Coq.Lists.List.filter_app	40
Coq.Lists.List.concat_filter_map	40
Coq.Lists.List.find_some	40	0.0.0.1.0.0.1.0.4	search with cache (only 1: induction l as [| a l IH]; only 1: simpl; only 1: easy; only 1: simpl; only 1: case_eq (f a); only 1: intros; only 1: intuition congruence; only 1: intros; only 1: intuition congruence).	1.52585101128	550
Coq.Lists.List.find_none	40
Coq.Lists.List.partition_cons1	40
Coq.Lists.List.partition_cons2	40	0.0	search with cache (only 1: simpl; only 1: now intros -> ->).	0.011118888855	2
Coq.Lists.List.partition_length	40
Coq.Lists.List.partition_inv_nil	40	10.0.0.0.1.8.0.9	search with cache (only 1: split; only 1: induction l as [| a l' Hrec]; only 1: auto; only 1: simpl; only 1: destruct (f a), (partition l') as (left, right); only 1: intros [=<- <-]; only 1: intros [=<- <-]; only 1: now intros ->).	5.54818296432	9483
Coq.Lists.List.elements_in_partition	40
Coq.Lists.List.filter_map	40
Coq.Lists.List.filter_ext_in	40
Coq.Lists.List.ext_in_filter	40
Coq.Lists.List.filter_ext_in_iff	40	0.0.0.3.0.0.0.3.3	search with cache (only 1: split; only 1: intros H; only 1: rewrite filter_map in H; only 1: apply ext_in_map; only 1: assumption; only 1: intros H; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).	17.1238849163	12008
Coq.Lists.List.filter_ext	40	0.0.0.0	search with cache (only 1: intros f g l H; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).	0.0147829055786	4
Coq.Lists.List.in_split_l	40
Coq.Lists.List.in_split_r	40
Coq.Lists.List.split_nth	40
Coq.Lists.List.split_length_l	40	2.0.0.1.2.2.2.0	search with cache (only 1: induction l; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl in *; only 1: auto).	1.41308999062	812
Coq.Lists.List.split_length_r	40	1.0.0.1.0.2.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).	0.404181003571	176
Coq.Lists.List.split_combine	40	15.0.0.1.2.8.2.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: now f_equal).	36.1937549114	35433
Coq.Lists.List.combine_split	40
Coq.Lists.List.in_combine_l	40
Coq.Lists.List.in_combine_r	40
Coq.Lists.List.combine_length	40	4.0.0.0.0.0.2.0.0	search with cache (only 1: induction l, l'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto).	1.92611193657	1420
Coq.Lists.List.combine_nth	40
Coq.Lists.List.in_prod_aux	40	0.1.4.2.0.1.1.1	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct H; only 1: destruct H; only 1: auto; only 1: auto).	2.9362449646	2656
Coq.Lists.List.in_prod	40
Coq.Lists.List.in_prod_iff	40
Coq.Lists.List.prod_length	40
Coq.Lists.List.lel_refl	40	65	search with cache (only 1: left).	3.18266582489	6986
Coq.Lists.List.lel_trans	40
Coq.Lists.List.lel_cons_cons	40	0.4.0.0	search with cache (only 1: unfold lel; only 1: intros; only 1: simpl; only 1: auto with arith).	0.0937879085541	29
Coq.Lists.List.lel_cons	40	0.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0103950500488	3
Coq.Lists.List.lel_tail	40	0.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.00982713699341	3
Coq.Lists.List.lel_nil	40
Coq.Lists.List.incl_refl	40	11	search with cache (only 1: easy).	0.0916011333466	156
Coq.Lists.List.incl_tl	40	0.0.9.8	search with cache (only 1: intros; only 1: intro y; only 1: simpl; only 1: auto).	0.50826716423	525
Coq.Lists.List.incl_tran	40	0	search with cache (only 1: auto with datatypes).	0.00689101219177	1
Coq.Lists.List.incl_appl	40	0	search with cache (only 1: auto with datatypes).	0.00833296775818	1
Coq.Lists.List.incl_appr	40	0	search with cache (only 1: auto with datatypes).	0.00952410697937	1
Coq.Lists.List.incl_cons	40	11	search with cache (only 1: firstorder  (subst; auto)).	0.0970959663391	82
Coq.Lists.List.incl_app	40
Coq.Lists.List.firstn_nil	40	0.0.1.36	search with cache (only 1: induction n as [| n IH]; only 1: trivial; only 1: simpl in *; only 1: trivial).	0.289889812469	823
Coq.Lists.List.firstn_cons	40	0	search with cache (only 1: now simpl).	0.00663900375366	1
Coq.Lists.List.firstn_all	40	7.1.1.3	search with cache (only 1: induction l as [| x l]; only 1: now simpl; only 1: simpl; only 1: now f_equal).	0.474037885666	485
Coq.Lists.List.firstn_all2	40
Coq.Lists.List.firstn_O	40	1	search with cache (only 1: now simpl).	0.00757002830505	2
Coq.Lists.List.firstn_le_length	40
Coq.Lists.List.firstn_length_le	40
Coq.Lists.List.firstn_app	40
Coq.Lists.List.firstn_app_2	40
Coq.Lists.List.firstn_firstn	40
Coq.Lists.List.firstn_skipn_comm	40
Coq.Lists.List.skipn_firstn_comm	40
Coq.Lists.List.skipn_O	40	5.2	search with cache (only 1: intro; only 1: split).	0.0145649909973	13
Coq.Lists.List.skipn_nil	40	0.0.3.10	search with cache (only 1: intros; only 1: induction n; only 1: reflexivity; only 1: now simpl).	0.0761501789093	182
Coq.Lists.List.skipn_cons	40	0	search with cache (only 1: now simpl).	0.00669693946838	1
Coq.Lists.List.skipn_none	40	0.1.13	search with cache (only 1: induction l as [| x xs Hrec]; only 1: now simpl; only 1: now simpl).	0.264093160629	246
Coq.Lists.List.skipn_all2	40	1.0.0.0.0.0.1.0.1	search with cache (only 1: induction n as [| k iHk]; only 1: now induction l; only 1: destruct l as [| x xs]; only 1: simpl; only 1: now reflexivity; only 1: simpl; only 1: intro H; only 1: apply Peano.le_S_n in H; only 1: apply iHk, H).	0.819561004639	357
Coq.Lists.List.firstn_skipn	40	0.0.5.4.13.1.3	search with cache (only 1: induction n as [| k iHk]; only 1: reflexivity; only 1: destruct l as [| x xs]; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: apply iHk).	8.73742103577	16904
Coq.Lists.List.firstn_length	40
Coq.Lists.List.skipn_length	40	1.1.0.4.13.1.1	search with cache (only 1: induction n as [| k iHk]; only 1: auto with arith; only 1: destruct l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: apply iHk).	11.7642271519	14754
Coq.Lists.List.skipn_all	40	0	search with cache (only 1: now induction l).	0.00760698318481	1
Coq.Lists.List.skipn_app	40	0.0.0.1.0.0.0.1.1	search with cache (only 1: induction n as [| k iHk]; only 1: intros l1 l2; only 1: now simpl; only 1: intros l1 l2; only 1: destruct l1 as [| x xs]; only 1: now rewrite 2!app_nil_l, <- minus_n_O; only 1: rewrite <- app_comm_cons; only 1: simpl; only 1: apply iHk).	1.86228585243	1158
Coq.Lists.List.firstn_skipn_rev	40
Coq.Lists.List.firstn_rev	40
Coq.Lists.List.skipn_rev	40
Coq.Lists.List.removelast_firstn	40
Coq.Lists.List.firstn_removelast	40
Coq.Lists.List.combine_nil	40	3.1.0.0.3	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl in *; only 1: f_equal).	0.0788700580597	94
Coq.Lists.List.combine_firstn_l	40	0.0.1.4.1.2.0.0.0.0.0.4	search with cache (only 1: induction l; only 1: intros l; only 1: apply length_zero_iff_nil; only 1: rewrite combine_length; only 1: simpl; only 1: trivial; only 1: destruct l'; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	20.1972541809	17072
Coq.Lists.List.combine_firstn_r	40	0.0.0.0.0.0.0.1.0.1.0.0	search with cache (only 1: induction l as [| x l IHl]; only 1: intros l'; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: reflexivity; only 1: intros l'; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: simpl; only 1: specialize IHl with (l' := l'); only 1: rewrite <- IHl; only 1: reflexivity).	1.90238285065	1237
Coq.Lists.List.combine_firstn	40
Coq.Lists.List.Add_app	40
Coq.Lists.List.Add_split	40
Coq.Lists.List.Add_in	40	9.0.0	search with cache (only 1: induction 1; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	0.552154064178	298
Coq.Lists.List.Add_length	40	2.0.0.1.0	search with cache (only 1: induction 1; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto).	0.0175909996033	8
Coq.Lists.List.Add_inv	40
Coq.Lists.List.incl_Add_inv	40
Coq.Lists.List.NoDup_Add	40
Coq.Lists.List.NoDup_remove	40
Coq.Lists.List.NoDup_remove_1	40
Coq.Lists.List.NoDup_remove_2	40	0.0	search with cache (only 1: apply NoDup_Add; only 1: apply Add_app).	0.00994300842285	2
Coq.Lists.List.NoDup_cons_iff	40	0.0.0.0.1.0	search with cache (only 1: split; only 1: inversion_clear 1; only 1: split; only 1: trivial; only 1: trivial; only 1: now constructor).	0.0309629440308	7
Coq.Lists.List.nodup_fixed_point	40
Coq.Lists.List.nodup_In	40
Coq.Lists.List.NoDup_nodup	40
Coq.Lists.List.nodup_inv	40
Coq.Lists.List.NoDup_count_occ	40
Coq.Lists.List.NoDup_count_occ'	40
Coq.Lists.List.NoDup_nth_error	40
Coq.Lists.List.NoDup_nth	40
Coq.Lists.List.NoDup_incl_length	40
Coq.Lists.List.NoDup_length_incl	40
Coq.Lists.List.NoDup_map_inv	40
Coq.Lists.List.seq_length	40	5.3.0.11.12	search with cache (only 1: intros l; only 1: induction l as [| a l' Hrec]; only 1: now simpl; only 1: simpl; only 1: auto).	3.90683698654	9422
Coq.Lists.List.seq_nth	40
Coq.Lists.List.seq_shift	40	4.2.1.0.1.0.1.4	search with cache (only 1: induction len; only 1: simpl; only 1: now intros []; only 1: intros; only 1: simpl seq; only 1: simpl; only 1: rewrite IHlen; only 1: auto).	2.24614286423	2802
Coq.Lists.List.in_seq	40
Coq.Lists.List.seq_NoDup	40
Coq.Lists.List.seq_app	40
Coq.Lists.List.Exists_exists	40
Coq.Lists.List.Exists_nil	40	3.0	search with cache (only 1: firstorder; only 1: inversion_clear H).	0.0123538970947	5
Coq.Lists.List.Exists_cons	40	0.0.0.27.0	search with cache (only 1: split; only 1: inversion_clear 1; only 1: firstorder; only 1: firstorder; only 1: firstorder).	17.268269062	26034
Coq.Lists.List.Exists_dec	40
Coq.Lists.List.Forall_forall	40	0.0.2.0.1.0.0.0.0	search with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: firstorder; only 1: induction l; only 1: firstorder; only 1: firstorder).	0.668907880783	461
Coq.Lists.List.Forall_inv	40	0.23	search with cache (only 1: inversion 1; only 1: auto).	1.47282290459	3419
Coq.Lists.List.Forall_rect	40
Coq.Lists.List.Forall_dec	40
Coq.Lists.List.Forall_inv_tail	40	5.0	search with cache (only 1: intros Q H H'; only 1: abstract now inversion 1).	0.021772146225	15
Coq.Lists.List.Exists_impl	40	3.9.4.0.1.23	search with cache (only 1: intros l l'; only 1: intro Pdec; only 1: induction 1; only 1: left; only 1: auto; only 1: now apply Exists_cons_tl).	18.3129489422	47014
Coq.Lists.List.Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall_neg	40
Coq.Lists.List.neg_Forall_Exists_neg	40
Coq.Lists.List.Forall_Exists_dec	40
Coq.Lists.List.Forall_impl	40	0.0.0.6.4.1.6	search with cache (only 1: intros P Q H xs H0; only 1: apply Forall_forall with (l := xs); only 1: induction H0; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	7.6700129509	13319
Coq.Lists.List.Forall2_refl	40	0	search with cache (only 1: trivial).	0.00532102584839	1
Coq.Lists.List.Forall2_app_inv_l	40
Coq.Lists.List.Forall2_app_inv_r	40
Coq.Lists.List.Forall2_app	40	0.0.0.17	search with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: auto).	2.54724693298	3632
Coq.Lists.List.ForallOrdPairs_In	40
Coq.Lists.List.ForallPairs_ForallOrdPairs	40
Coq.Lists.List.ForallOrdPairs_ForallPairs	40
Coq.Lists.List.repeat_length	40	3.0.0.5	search with cache (only 1: induction n; only 1: now simpl; only 1: simpl; only 1: auto).	0.0511939525604	58
Coq.Lists.List.repeat_spec	40	2.2.2.0.1.0	search with cache (only 1: induction n as [| k Hrec]; only 1: destruct 1; only 1: simpl; only 1: destruct 1; only 1: auto; only 1: auto).	0.402830123901	478
Coq.Lists.SetoidPermutation.Equivalence_instance_0	40
Coq.Lists.SetoidPermutation.PermutationA_cons	40	0.1	search with cache (only 1: intros x x' Hxx' l l' Hll'; only 1: intuition).	0.0219309329987	3
Coq.Lists.SetoidPermutation.PermutationA_app_head	40	1.0.0.0.1.4	search with cache (only 1: induction l; only 1: intuition; only 1: intuition; only 1: apply permA_skip; only 1: intuition; only 1: eauto).	0.785151004791	359
Coq.Lists.SetoidPermutation.PermutationA_app	40
Coq.Lists.SetoidPermutation.PermutationA_app_tail	40	0.1.1.0.1.5	search with cache (only 1: induction 1; only 1: easy; only 1: now apply permA_skip; only 1: rewrite <- !app_comm_cons; only 1: now apply permA_swap; only 1: do 2 (etransitivity; try eassumption)).	0.969475984573	487
Coq.Lists.SetoidPermutation.PermutationA_cons_append	40	0.0.2.0.6.2.12	search with cache (only 1: induction l; only 1: easy; only 1: etransitivity; only 1: now apply permA_swap; only 1: apply permA_skip; only 1: intuition; only 1: intuition).	2.9597799778	2606
Coq.Lists.SetoidPermutation.PermutationA_app_comm	40
Coq.Lists.SetoidPermutation.PermutationA_cons_app	40
Coq.Lists.SetoidPermutation.PermutationA_middle	40	0	search with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).	0.0219790935516	1
Coq.Lists.SetoidPermutation.PermutationA_equivlistA	40
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_PermutationA	40
Coq.Lists.SetoidPermutation.Permutation_eqlistA_commute	40
Coq.Lists.SetoidPermutation.PermutationA_decompose	40
Coq.Lists.SetoidPermutation.Permutation_PermutationA	40	14.1.10.2.0	search with cache (only 1: induction 1; only 1: intuition; only 1: intuition; only 1: eauto; only 1: eauto).	4.68995189667	7765
Coq.Lists.SetoidPermutation.eqlistA_PermutationA	40	0.2.0	search with cache (only 1: induction 1; only 1: intuition; only 1: now constructor).	0.0271520614624	5
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_decompose	40
Coq.Lists.SetoidPermutation.PermutationA_preserves_NoDupA	40
Coq.Lists.StreamMemo.memo_get_correct	40
Coq.Lists.StreamMemo.imemo_get_correct	40
Coq.Lists.StreamMemo.dmemo_get_correct	40
Coq.Lists.StreamMemo.dimemo_get_correct	40
Coq.Lists.SetoidList.InA_altdef	40	0.5.4.0.1.4.3	search with cache (only 1: split; only 1: induction 1; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).	24.11008811	26122
Coq.Lists.SetoidList.InA_cons	40	0.0.0.0.0.10.0	search with cache (only 1: split; only 1: inversion 1; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).	0.722548961639	516
Coq.Lists.SetoidList.InA_nil	40	0.0	search with cache (only 1: intuition; only 1: invlist InA).	0.0345950126648	2
Coq.Lists.SetoidList.InA_alt	40	0.1.0.0.5.0.1.0.1	search with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	3.22658801079	2113
Coq.Lists.SetoidList.NoDupA_altdef	40
Coq.Lists.SetoidList.incl_nil	40	5	search with cache (only 1: now simpl).	0.156280040741	30
Coq.Lists.SetoidList.eqlistA_altdef	40
Coq.Lists.SetoidList.equivlist_equiv	40
Coq.Lists.SetoidList.eqlistA_equiv	40
Coq.Lists.SetoidList.eqlistA_equivlistA	40
Coq.Lists.SetoidList.InA_compat	40
Coq.Lists.SetoidList.InA_eqA	40	0.2.7	search with cache (only 1: intros x y z H; only 1: rewrite 2!InA_alt; only 1: firstorder).	2.52601790428	212
Coq.Lists.SetoidList.In_InA	40	0.4.1	search with cache (only 1: intros; only 1: rewrite InA_alt; only 1: firstorder).	0.0276789665222	8
Coq.Lists.SetoidList.InA_split	40
Coq.Lists.SetoidList.InA_app	40
Coq.Lists.SetoidList.InA_app_iff	40
Coq.Lists.SetoidList.InA_rev	40
Coq.Lists.SetoidList.InA_singleton	40	2.0.18	search with cache (only 1: firstorder; only 1: invlist InA; only 1: auto).	9.95073485374	563
Coq.Lists.SetoidList.InA_double_head	40	3.2	search with cache (only 1: rewrite 2!InA_cons; only 1: tauto).	0.0562119483948	7
Coq.Lists.SetoidList.InA_permute_heads	40	0.0	search with cache (only 1: rewrite !InA_cons; only 1: tauto).	0.0822718143463	2
Coq.Lists.SetoidList.InA_app_idem	40
Coq.Lists.SetoidList.NoDupA_app	40
Coq.Lists.SetoidList.NoDupA_rev	40
Coq.Lists.SetoidList.NoDupA_split	40
Coq.Lists.SetoidList.NoDupA_swap	40
Coq.Lists.SetoidList.NoDupA_singleton	40	0.0.1.1	search with cache (only 1: constructor; only 1: intro; only 1: inv; only 1: auto).	0.0242209434509	6
Coq.Lists.SetoidList.equivlistA_cons_proper	40
Coq.Lists.SetoidList.equivlistA_app_proper	40
Coq.Lists.SetoidList.equivlistA_cons_nil	40
Coq.Lists.SetoidList.equivlistA_nil_eq	40
Coq.Lists.SetoidList.equivlistA_double_head	40	1.0.0.0	search with cache (only 1: red; only 1: intros; only 1: rewrite 2!InA_cons; only 1: intuition).	0.0615108013153	5
Coq.Lists.SetoidList.equivlistA_permute_heads	40	1.2.0	search with cache (only 1: intro; only 1: rewrite !InA_cons; only 1: tauto).	0.231693983078	22
Coq.Lists.SetoidList.equivlistA_app_idem	40	0.0.0.0.1.2	search with cache (only 1: red; only 1: split; only 1: rewrite InA_app_iff; only 1: tauto; only 1: rewrite InA_app_iff; only 1: tauto).	0.152915000916	49
Coq.Lists.SetoidList.equivlistA_NoDupA_split	40
Coq.Lists.SetoidList.fold_right_eqlistA	40
Coq.Lists.SetoidList.ForallOrdPairs_inclA	40
Coq.Lists.SetoidList.fold_right_commutes_restr	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr	40
Coq.Lists.SetoidList.fold_right_add_restr	40
Coq.Lists.SetoidList.fold_right_commutes	40	4.0.0.1.0.0.0.0.0.0.0	search with cache (only 1: induction s1; only 1: simpl; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: apply IHs1; only 1: auto).	2.18877482414	1234
Coq.Lists.SetoidList.fold_right_equivlistA	40
Coq.Lists.SetoidList.fold_right_add	40
Coq.Lists.SetoidList.fold_right_eqlistA2	40
Coq.Lists.SetoidList.fold_right_commutes_restr2	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr2	40
Coq.Lists.SetoidList.fold_right_add_restr2	40
Coq.Lists.SetoidList.fold_right_commutes2	40
Coq.Lists.SetoidList.fold_right_equivlistA2	40
Coq.Lists.SetoidList.fold_right_add2	40
Coq.Lists.SetoidList.InA_dec	40
Coq.Lists.SetoidList.removeA_filter	40	2.2.0.2.18.6.0	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: destruct IHl; only 1: destruct (eqA_dec x a); only 1: auto; only 1: auto).	8.27531409264	12433
Coq.Lists.SetoidList.removeA_InA	40
Coq.Lists.SetoidList.removeA_NoDupA	40
Coq.Lists.SetoidList.removeA_equivlistA	40
Coq.Lists.SetoidList.InfA_ltA	40
Coq.Lists.SetoidList.InfA_compat	40
Coq.Lists.SetoidList.InfA_eqA	40
Coq.Lists.SetoidList.SortA_InfA_InA	40
Coq.Lists.SetoidList.In_InfA	40	9.0.0.0	search with cache (only 1: simple induction l; only 1: intros; only 1: intuition; only 1: intuition).	5.42114210129	1093
Coq.Lists.SetoidList.InA_InfA	40	1.0.0.0.0.0	search with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intros; only 1: constructor; only 1: auto).	0.0446090698242	7
Coq.Lists.SetoidList.InfA_alt	40
Coq.Lists.SetoidList.InfA_app	40	0.0.2.27.2	search with cache (only 1: intros; only 1: inversion H; only 1: eauto; only 1: constructor; only 1: auto).	3.77712798119	3662
Coq.Lists.SetoidList.SortA_app	40
Coq.Lists.SetoidList.SortA_NoDupA	40
Coq.Lists.SetoidList.eqlistA_length	40	9.1.1.28	search with cache (only 1: induction 1; only 1: intuition; only 1: simpl; only 1: auto).	29.1337718964	40187
Coq.Lists.SetoidList.app_eqlistA_compat	40	0.1.5.0.1.1.1.1	search with cache (only 1: induction 1; only 1: simpl in *; only 1: induction 1; only 1: intuition; only 1: auto; only 1: intro; only 1: simpl; only 1: auto).	5.90447497368	1338
Coq.Lists.SetoidList.eqlistA_app	40	0.0.0.0.0	search with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0419609546661	5
Coq.Lists.SetoidList.eqlistA_rev_app	40
Coq.Lists.SetoidList.rev_eqlistA_compat	40
Coq.Lists.SetoidList.eqlistA_rev	40	3.1.4.1.0.1	search with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: apply eqlistA_rev_app; only 1: auto; only 1: auto).	0.790812969208	465
Coq.Lists.SetoidList.SortA_equivlistA_eqlistA	40
Coq.Lists.SetoidList.filter_sort	40
Coq.Lists.SetoidList.filter_InA	40
Coq.Lists.SetoidList.filter_split	40
Coq.Lists.SetoidList.findA_NoDupA	40
Coq.NArith.BinNat.eq_dec	40	3.42	search with cache (only 1: fix sqrtrem_spec 1; only 1: auto with relations).	4.36129903793	14052
Coq.NArith.BinNat.discr	40
Coq.NArith.BinNat.peano_rect_base	40	1	search with cache (only 1: auto).	0.00821280479431	2
Coq.NArith.BinNat.peano_rect_succ	40
Coq.NArith.BinNat.peano_rec_base	40	0	search with cache (only 1: reflexivity).	0.00730013847351	1
Coq.NArith.BinNat.peano_rec_succ	40	0.0.0.1.1	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).	0.0173439979553	7
Coq.NArith.BinNat.bi_induction	40	1.102.0	search with cache (only 1: intros Eqf Lef x y; only 1: fix sqrtrem_spec 1; only 1: trivial).	38.5936489105	314267
Coq.NArith.BinNat.recursion_wd	40
Coq.NArith.BinNat.recursion_0	40	0	search with cache (only 1: trivial).	0.00724911689758	1
Coq.NArith.BinNat.recursion_succ	40
Coq.NArith.BinNat.one_succ	40	2	search with cache (only 1: auto).	0.00649690628052	3
Coq.NArith.BinNat.two_succ	40	0	search with cache (only 1: reflexivity).	0.00540590286255	1
Coq.NArith.BinNat.pred_0	40	2	search with cache (only 1: auto).	0.00480008125305	3
Coq.NArith.BinNat.pos_pred_spec	40	0	search with cache (only 1: reflexivity).	0.00575089454651	1
Coq.NArith.BinNat.succ_pos_spec	40	0.0.1	search with cache (only 1: destruct n; only 1: reflexivity; only 1: reflexivity).	0.00954985618591	4
Coq.NArith.BinNat.pos_pred_succ	40
Coq.NArith.BinNat.succ_pos_pred	40
Coq.NArith.BinNat.pred_succ	40	5.0.8	search with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Pos.pred_N_succ).	0.479892015457	393
Coq.NArith.BinNat.pred_sub	40	0.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: now destruct p).	0.010645866394	3
Coq.NArith.BinNat.succ_0_discr	40	0	search with cache (only 1: now destruct n).	0.0133450031281	1
Coq.NArith.BinNat.add_0_l	40	1.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: auto).	0.0102729797363	4
Coq.NArith.BinNat.add_succ_l	40
Coq.NArith.BinNat.sub_0_r	40	0	search with cache (only 1: now destruct n as [| [p| p| ]]).	0.00896096229553	1
Coq.NArith.BinNat.sub_succ_r	40
Coq.NArith.BinNat.mul_0_l	40	1.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: auto).	0.00940203666687	4
Coq.NArith.BinNat.mul_succ_l	40
Coq.NArith.BinNat.eqb_eq	40
Coq.NArith.BinNat.ltb_lt	40
Coq.NArith.BinNat.leb_le	40
Coq.NArith.BinNat.compare_eq_iff	40
Coq.NArith.BinNat.compare_lt_iff	40	0.0.0.0.2	search with cache (only 1: unfold ltb, lt; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	0.372662067413	192
Coq.NArith.BinNat.compare_le_iff	40	2	search with cache (only 1: reflexivity).	0.45185303688	193
Coq.NArith.BinNat.compare_antisym	40
Coq.NArith.BinNat.min_l	40
Coq.NArith.BinNat.min_r	40
Coq.NArith.BinNat.max_l	40
Coq.NArith.BinNat.max_r	40	0.1.0.0.0.0	search with cache (only 1: unfold max, le; only 1: rewrite compare_antisym; only 1: case compare_spec; only 1: trivial; only 1: now destruct 2; only 1: trivial).	0.0161209106445	7
Coq.NArith.BinNat.lt_succ_r	40
Coq.NArith.BinNat.double_spec	40	26	search with cache (only 1: now split).	0.489398002625	677
Coq.NArith.BinNat.succ_double_spec	40
Coq.NArith.BinNat.double_add	40
Coq.NArith.BinNat.succ_double_add	40	0	search with cache (only 1: now destruct n, m).	0.00931406021118	1
Coq.NArith.BinNat.double_mul	40	1	search with cache (only 1: now destruct n, m).	0.00834989547729	2
Coq.NArith.BinNat.succ_double_mul	40	0.69	search with cache (only 1: rewrite add_comm; only 1: now destruct n, m).	28.2101101875	40643
Coq.NArith.BinNat.div2_double	40	0.0.1.0.2	search with cache (only 1: destruct n; only 1: simpl; only 1: solve_proper; only 1: simpl; only 1: trivial).	0.0144701004028	8
Coq.NArith.BinNat.div2_succ_double	40	0	search with cache (only 1: now destruct n).	0.00628805160522	1
Coq.NArith.BinNat.double_inj	40
Coq.NArith.BinNat.succ_double_inj	40
Coq.NArith.BinNat.succ_double_lt	40
Coq.NArith.BinNat.double_lt_mono	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.0231149196625	11
Coq.NArith.BinNat.double_le_mono	40	1.0	search with cache (only 1: intro H; only 1: now destruct n, m).	0.0111517906189	3
Coq.NArith.BinNat.succ_double_lt_mono	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.0215418338776	11
Coq.NArith.BinNat.succ_double_le_mono	40	0.0.0.0.1.0	search with cache (only 1: intro H; only 1: destruct n as [| n], m as [| m]; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.0161800384521	7
Coq.NArith.BinNat.compare_0_r	40	7.2.4	search with cache (only 1: intro H; only 1: eapply Private_Tac.lt_irrefl; only 1: now elim (nlt_0_r n)).	0.0608959197998	163
Coq.NArith.BinNat.pow_0_r	40	0	search with cache (only 1: now destruct n).	0.00803399085999	1
Coq.NArith.BinNat.pow_succ_r	40
Coq.NArith.BinNat.pow_neg_r	40	1.2.0.0.0.2.1.4	search with cache (only 1: intros LT; only 1: destruct n, p; only 1: order; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: easy).	1.51083397865	2182
Coq.NArith.BinNat.square_spec	40
Coq.NArith.BinNat.size_log2	40
Coq.NArith.BinNat.size_gt	40
Coq.NArith.BinNat.size_le	40
Coq.NArith.BinNat.log2_spec	40
Coq.NArith.BinNat.log2_nonpos	40	0.1.6.1.6.0.0	search with cache (only 1: destruct n as [| [n| n| ]]; only 1: trivial; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: trivial).	2.39910101891	5868
Coq.NArith.BinNat.even_spec	40
Coq.NArith.BinNat.odd_spec	40	0.0.0.1.0.1.8.9.0.4.0.2.0.2	search with cache (only 1: split; only 1: destruct n; only 1: now exists 0; only 1: destruct p; only 1: now exists (pos p); only 1: now exists (pos p); only 1: now exists 0; only 1: intros (m, H); only 1: destruct n; only 1: now destruct m; only 1: destruct p; only 1: now destruct m; only 1: now destruct m; only 1: now destruct m).	37.7139999866	62977
Coq.NArith.BinNat.pos_div_eucl_spec	40
Coq.NArith.BinNat.div_eucl_spec	40
Coq.NArith.BinNat.div_mod'	40
Coq.NArith.BinNat.div_mod	40	0.0.0	search with cache (only 1: generalize (div_eucl_spec a b); only 1: unfold div, modulo; only 1: now destruct div_eucl).	0.0122921466827	3
Coq.NArith.BinNat.pos_div_eucl_remainder	40
Coq.NArith.BinNat.mod_lt	40
Coq.NArith.BinNat.mod_bound_pos	40
Coq.NArith.BinNat.sqrtrem_sqrt	40
Coq.NArith.BinNat.sqrtrem_spec	40
Coq.NArith.BinNat.sqrt_spec	40
Coq.NArith.BinNat.sqrt_neg	40	0.0.0.0.1	search with cache (only 1: destruct n; only 1: reflexivity; only 1: unfold sqrtrem, sqrt, Pos.sqrt; only 1: destruct (Pos.sqrtrem p) as (s, r); only 1: now destruct r).	0.0611071586609	70
Coq.NArith.BinNat.ggcd_gcd	40
Coq.NArith.BinNat.ggcd_correct_divisors	40
Coq.NArith.BinNat.gcd_divide_l	40
Coq.NArith.BinNat.gcd_divide_r	40
Coq.NArith.BinNat.gcd_greatest	40
Coq.NArith.BinNat.gcd_nonneg	40	1.0.0.0	search with cache (only 1: rewrite <- ggcd_gcd; only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: apply le_0_l).	0.0230569839478	23
Coq.NArith.BinNat.testbit_even_0	40	0.0.44	search with cache (only 1: destruct a as [| a]; only 1: now split; only 1: now split).	0.695636987686	3171
Coq.NArith.BinNat.testbit_odd_0	40	0	search with cache (only 1: now destruct a).	0.00780200958252	1
Coq.NArith.BinNat.testbit_succ_r_div2	40
Coq.NArith.BinNat.testbit_odd_succ	40
Coq.NArith.BinNat.testbit_even_succ	40	0.0.0.0	search with cache (only 1: intros H; only 1: rewrite testbit_succ_r_div2 by trivial; only 1: f_equal; only 1: now destruct a).	0.0167698860168	4
Coq.NArith.BinNat.testbit_neg_r	40	12	search with cache (only 1: now destruct n).	0.379865884781	316
Coq.NArith.BinNat.shiftr_succ_r	40
Coq.NArith.BinNat.shiftl_succ_r	40
Coq.NArith.BinNat.shiftr_spec	40
Coq.NArith.BinNat.shiftl_spec_high	40
Coq.NArith.BinNat.shiftl_spec_low	40
Coq.NArith.BinNat.div2_spec	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.00910091400146	2
Coq.NArith.BinNat.pos_lxor_spec	40
Coq.NArith.BinNat.lxor_spec	40
Coq.NArith.BinNat.pos_lor_spec	40
Coq.NArith.BinNat.lor_spec	40
Coq.NArith.BinNat.pos_land_spec	40
Coq.NArith.BinNat.land_spec	40
Coq.NArith.BinNat.pos_ldiff_spec	40
Coq.NArith.BinNat.ldiff_spec	40
Coq.NArith.BinNat.gt_lt_iff	40
Coq.NArith.BinNat.gt_lt	40	0.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0735058784485	2
Coq.NArith.BinNat.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.00660920143127	1
Coq.NArith.BinNat.ge_le_iff	40
Coq.NArith.BinNat.ge_le	40	0.0	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0123691558838	2
Coq.NArith.BinNat.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.0053870677948	1
Coq.NArith.BinNat.pos_pred_shiftl_low	40
Coq.NArith.BinNat.pos_pred_shiftl_high	40
Coq.NArith.BinNat.pred_div2_up	40
Coq.NArith.Ndec.Peqb_complete	40
Coq.NArith.Ndec.Peqb_Pcompare	40
Coq.NArith.Ndec.Pcompare_Peqb	40	0	search with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).	0.0148661136627	1
Coq.NArith.Ndec.Neqb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Neqb	40	0	search with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).	0.0144309997559	1
Coq.NArith.Ndec.Neqb_complete	40	1	search with cache (only 1: now rewrite N.eqb_eq, <- N.compare_eq_iff).	0.0147969722748	2
Coq.NArith.Ndec.Nxor_eq_true	40
Coq.NArith.Ndec.Nxor_eq_false	40
Coq.NArith.Ndec.Nodd_not_double	40
Coq.NArith.Ndec.Nnot_div2_not_double	40
Coq.NArith.Ndec.Neven_not_double_plus_one	40
Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	40
Coq.NArith.Ndec.Nbit0_neq	40	1.1.13.5.4.9	search with cache (only 1: eqb2eq; only 1: rewrite <- (xorb_false_r (N.odd a)); only 1: intros; only 1: contradict H; only 1: rewrite H, H0; only 1: reflexivity).	9.21466588974	9799
Coq.NArith.Ndec.Ndiv2_eq	40	3.0.0.1.0.0	search with cache (only 1: intros H; only 1: eqb2eq; only 1: subst; only 1: apply Nbit_faithful; only 1: unfold eqf; only 1: trivial).	0.0682730674744	39
Coq.NArith.Ndec.Ndiv2_neq	40	0.0.0.0	search with cache (only 1: intros; only 1: eqb2eq; only 1: contradict H; only 1: now subst).	0.0316550731659	4
Coq.NArith.Ndec.Ndiv2_bit_eq	40
Coq.NArith.Ndec.Ndiv2_bit_neq	40	0.17.0.2	search with cache (only 1: intros H H'; only 1: eqb2eq; only 1: contradict H; only 1: now rewrite (N.div2_odd a), (N.div2_odd a'), H, H').	5.02837300301	3248
Coq.NArith.Ndec.Nneq_elim	40
Coq.NArith.Ndec.Ndouble_or_double_plus_un	40
Coq.NArith.Ndec.Nleb_alt	40
Coq.NArith.Ndec.Nleb_Nle	40
Coq.NArith.Ndec.Nleb_refl	40	0	search with cache (only 1: now rewrite Nleb_alt, N.leb_le).	0.00848388671875	1
Coq.NArith.Ndec.Nleb_antisym	40
Coq.NArith.Ndec.Nleb_trans	40	17.10.0	search with cache (only 1: rewrite !Nleb_Nle; only 1: red; only 1: now intros <-).	7.21571421623	10360
Coq.NArith.Ndec.Nleb_ltb_trans	40
Coq.NArith.Ndec.Nltb_leb_trans	40
Coq.NArith.Ndec.Nltb_trans	40
Coq.NArith.Ndec.Nltb_leb_weak	40
Coq.NArith.Ndec.Nleb_double_mono	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono	40
Coq.NArith.Ndec.Nleb_double_mono_conv	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40	0.0.0.1.1.0	search with cache (only 1: unfold Nleb; only 1: rewrite !N2Nat.inj_succ_double; only 1: intro; only 1: apply leb_correct; only 1: apply (mult_S_le_reg_l 1); only 1: now apply leb_complete).	0.0636029243469	41
Coq.NArith.Ndec.Nltb_double_mono	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono	40
Coq.NArith.Ndec.Nltb_double_mono_conv	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Gt_Nltb	40	0	search with cache (only 1: now rewrite N.compare_nle_iff, <- Nleb_Nle, not_true_iff_false).	0.0172560214996	1
Coq.NArith.Ndec.Ncompare_Lt_Nltb	40
Coq.NArith.Ndec.Nmin_le_1	40
Coq.NArith.Ndec.Nmin_le_2	40
Coq.NArith.Ndec.Nmin_le_3	40
Coq.NArith.Ndec.Nmin_le_4	40
Coq.NArith.Ndec.Nmin_le_5	40
Coq.NArith.Ndec.Nmin_lt_3	40
Coq.NArith.Ndec.Nmin_lt_4	40	0.0.1	search with cache (only 1: rewrite <- !not_true_iff_false, !Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).	0.0305178165436	4
Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40
Coq.NArith.Ndist.Nplength_infty	40	2.0.0.0.0.0	search with cache (only 1: induction a as [| p]; only 1: intro H; only 1: trivial; only 1: intro H; only 1: exfalso; only 1: discriminate || simpl).	0.039999961853	13
Coq.NArith.Ndist.Nplength_zeros	40
Coq.NArith.Ndist.Nplength_one	40
Coq.NArith.Ndist.Nplength_first_one	40
Coq.NArith.Ndist.ni_min_idemp	40
Coq.NArith.Ndist.ni_min_comm	40
Coq.NArith.Ndist.ni_min_assoc	40
Coq.NArith.Ndist.ni_min_O_l	40	1.0.11	search with cache (only 1: simple induction d; only 1: trivial; only 1: trivial).	0.135499954224	242
Coq.NArith.Ndist.ni_min_O_r	40	0.0.2.2.0.0	search with cache (only 1: simple induction d; only 1: trivial; only 1: unfold ni_min; only 1: simple induction n; only 1: trivial; only 1: trivial).	0.0312280654907	13
Coq.NArith.Ndist.ni_min_inf_l	40	0	search with cache (only 1: trivial).	0.0131599903107	1
Coq.NArith.Ndist.ni_min_inf_r	40	0.0.2	search with cache (only 1: simple induction d; only 1: trivial; only 1: trivial).	0.0192890167236	5
Coq.NArith.Ndist.ni_le_refl	40
Coq.NArith.Ndist.ni_le_antisym	40	0.6.16.8	search with cache (only 1: intros; only 1: inversion H; only 1: rewrite ni_min_comm; only 1: trivial).	16.2385921478	27505
Coq.NArith.Ndist.ni_le_trans	40
Coq.NArith.Ndist.ni_le_min_1	40
Coq.NArith.Ndist.ni_le_min_2	40	4.1.3.1.0	search with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).	0.673038959503	734
Coq.NArith.Ndist.ni_min_case	40
Coq.NArith.Ndist.ni_le_total	40
Coq.NArith.Ndist.ni_le_min_induc	40
Coq.NArith.Ndist.le_ni_le	40
Coq.NArith.Ndist.ni_le_le	40
Coq.NArith.Ndist.Nplength_lb	40
Coq.NArith.Ndist.Nplength_ub	40
Coq.NArith.Ndist.Npdist_eq_1	40
Coq.NArith.Ndist.Npdist_eq_2	40
Coq.NArith.Ndist.Npdist_comm	40
Coq.NArith.Ndist.Nplength_ultra_1	40
Coq.NArith.Ndist.Nplength_ultra	40
Coq.NArith.Ndist.Npdist_ultra	40
Coq.NArith.Ndigits.Ptestbit_Pbit	40
Coq.NArith.Ndigits.Ntestbit_Nbit	40
Coq.NArith.Ndigits.Pbit_Ptestbit	40
Coq.NArith.Ndigits.Nbit_Ntestbit	40	0.1.8.0.0	search with cache (only 1: destruct a; only 1: trivial; only 1: simpl; only 1: intros; only 1: now rewrite <- Ptestbit_Pbit, N2Nat.id).	0.167978048325	244
Coq.NArith.Ndigits.Nshiftr_nat_S	40	12	search with cache (only 1: constructor).	0.339117050171	238
Coq.NArith.Ndigits.Nshiftl_nat_S	40	0	search with cache (only 1: reflexivity).	0.0137460231781	1
Coq.NArith.Ndigits.Nshiftr_nat_equiv	40
Coq.NArith.Ndigits.Nshiftr_equiv_nat	40
Coq.NArith.Ndigits.Nshiftl_nat_equiv	40
Coq.NArith.Ndigits.Nshiftl_equiv_nat	40
Coq.NArith.Ndigits.Nshiftr_nat_spec	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_low	40
Coq.NArith.Ndigits.Pshiftl_nat_0	40	0.0	search with cache (only 1: intros; only 1: trivial).	0.0161781311035	2
Coq.NArith.Ndigits.Pshiftl_nat_S	40	0	search with cache (only 1: reflexivity).	0.013993024826	1
Coq.NArith.Ndigits.Pshiftl_nat_N	40	0.4.2.0.0.10	search with cache (only 1: induction n; only 1: unfold N.shiftl_nat; only 1: trivial; only 1: rewrite Nshiftl_nat_S; only 1: rewrite <- IHn; only 1: trivial).	1.79670786858	2159
Coq.NArith.Ndigits.Pshiftl_nat_plus	40	1.0.3.2.0.1.4	search with cache (only 1: intros s2 n; only 1: unfold Pos.shiftl_nat, N.shiftl_nat; only 1: induction n; only 1: trivial; only 1: intros m; only 1: simpl; only 1: now rewrite <- IHn).	3.22745585442	2882
Coq.NArith.Ndigits.Pxor_semantics	40
Coq.NArith.Ndigits.Nxor_semantics	40
Coq.NArith.Ndigits.Por_semantics	40
Coq.NArith.Ndigits.Nor_semantics	40
Coq.NArith.Ndigits.Pand_semantics	40
Coq.NArith.Ndigits.Nand_semantics	40
Coq.NArith.Ndigits.Pdiff_semantics	40
Coq.NArith.Ndigits.Ndiff_semantics	40
Coq.NArith.Ndigits.Pbit_faithful_0	40
Coq.NArith.Ndigits.Pbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful_iff	40
Coq.NArith.Ndigits.Nbit0_correct	40	1.0.2.0.2.0.10.3.3.0.0	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite <- !Ptestbit_Pbit; only 1: induction p as [p IH| p IH| ]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	2.13374590874	5407
Coq.NArith.Ndigits.Ndouble_bit0	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.0202510356903	3
Coq.NArith.Ndigits.Ndouble_plus_one_bit0	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.0201828479767	3
Coq.NArith.Ndigits.Ndiv2_double	40	4.0.0.9.25.0.6	search with cache (only 1: induction n; only 1: now try rewrite H; only 1: destruct p; only 1: now try rewrite H; only 1: auto; only 1: simpl; only 1: now try rewrite H).	29.4260959625	82545
Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	3.0.2.1.0.3.0.0.2.0	search with cache (only 1: destruct n; only 1: now try rewrite H; only 1: destruct p; only 1: intro H; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: discriminate H; only 1: intro H; only 1: reflexivity).	5.3198299408	7899
Coq.NArith.Ndigits.Ndiv2_correct	40	1.0.0.0.0.4.1.4	search with cache (only 1: destruct a; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).	0.823925971985	809
Coq.NArith.Ndigits.Nxor_bit0	40
Coq.NArith.Ndigits.Nxor_div2	40
Coq.NArith.Ndigits.Nneg_bit0	40
Coq.NArith.Ndigits.Nneg_bit0_1	40
Coq.NArith.Ndigits.Nneg_bit0_2	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: reflexivity).	0.0245881080627	4
Coq.NArith.Ndigits.Nsame_bit0	40
Coq.NArith.Ndigits.Nbit0_less	40
Coq.NArith.Ndigits.Nbit0_gt	40	0.0.1.0.0.0.0.0.2.0.0.0.0.0.0.3.0	search with cache (only 1: intros; only 1: destruct (N.discr (N.lxor a a')) as [(p, H2)| H1]; only 1: unfold Nless; only 1: rewrite H2; only 1: destruct p; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H1 : N.odd (N.lxor a a') = false) by (rewrite H2; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H1; only 1: discriminate H1; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H2 : N.odd (N.lxor a a') = false) by (rewrite H1; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H2; only 1: discriminate H2).	4.41142821312	4665
Coq.NArith.Ndigits.Nless_not_refl	40
Coq.NArith.Ndigits.Nless_def_1	40
Coq.NArith.Ndigits.Nless_def_2	40	0.0.0.0.0.0.0.0.0.0.2	search with cache (only 1: destruct a; only 1: destruct a'; only 1: trivial; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	0.908918142319	692
Coq.NArith.Ndigits.Nless_def_3	40	0.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct a; only 1: destruct a'; only 1: trivial; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	0.771921873093	411
Coq.NArith.Ndigits.Nless_def_4	40	0.0.0.0.0.0.0.0.0.1.2	search with cache (only 1: destruct a; only 1: destruct a'; only 1: trivial; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	1.2144639492	945
Coq.NArith.Ndigits.Nless_z	40
Coq.NArith.Ndigits.N0_less_1	40
Coq.NArith.Ndigits.N0_less_2	40
Coq.NArith.Ndigits.Nless_trans	40
Coq.NArith.Ndigits.Nless_total	40
Coq.NArith.Ndigits.Bv2N_N2Bv	40
Coq.NArith.Ndigits.Bv2N_Nsize	40
Coq.NArith.Ndigits.Bv2N_Nsize_1	40
Coq.NArith.Ndigits.Bv2N_upper_bound	40
Coq.NArith.Ndigits.ByteV2N_upper_bound	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen	40	3.0.1.0.0.1.0.0.0.2.1.7	search with cache (only 1: destruct a; only 1: compute; only 1: auto; only 1: induction p; only 1: simpl in *; only 1: rewrite IHp; only 1: auto; only 1: simpl in *; only 1: rewrite IHp; only 1: auto; only 1: simpl in *; only 1: auto).	3.59217381477	3669
Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	40
Coq.NArith.Ndigits.N2Bv_Bv2N	40
Coq.NArith.Ndigits.Nbit0_Blow	40	1.2.1.1.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: apply Vector.rectS; only 1: intros; only 1: simpl; only 1: destruct a; only 1: reflexivity; only 1: trivial; only 1: intros; only 1: simpl; only 1: destruct a, (Bv2N v); only 1: simpl; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	4.85251998901	4633
Coq.NArith.Ndigits.Bnth_Nbit	40
Coq.NArith.Ndigits.Nbit_Nsize	40
Coq.NArith.Ndigits.Nbit_Bth	40
Coq.NArith.Ndigits.Nxor_BVxor	40
Coq.NArith.Ndigits.Nand_BVand	40
Coq.NArith.Ndigits.N2Bv_sized_Nsize	40	1.0.0.3.0.0.3.0.0.0.0.0.2	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: induction p; only 1: simpl; only 1: unfold Bcons; only 1: congruence; only 1: simpl; only 1: unfold Bcons; only 1: congruence; only 1: simpl; only 1: auto).	3.08548808098	3727
Coq.NArith.Ndigits.N2Bv_sized_Bv2N	40
Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40	0.0.1.1.0.1.1.3.0.2.0	search with cache (only 1: destruct a; only 1: auto; only 1: simpl; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: auto).	2.81211781502	3100
Coq.NArith.NArith.test	40
Coq.NArith.Nnat.id	40
Coq.NArith.Nnat.inj	40
Coq.NArith.Nnat.inj_iff	40	1.0.0.0.0.5	search with cache (only 1: split; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: now f_equal; only 1: intro H; only 1: now f_equal).	0.452517032623	172
Coq.NArith.Nnat.inj_double	40	3.1.0.10.1.0.13.3	search with cache (only 1: simpl; only 1: destruct a as [| p]; only 1: now rewrite Nat.add_0_r; only 1: simpl; only 1: unfold Pos.to_nat; only 1: simpl; only 1: rewrite Pmult_nat_mult, Nat.mul_comm; only 1: trivial).	1.48342394829	2938
Coq.NArith.Nnat.inj_succ_double	40	0.4.0.8.0.1.0.0	search with cache (only 1: destruct a; only 1: simpl N.to_nat; only 1: trivial; only 1: simpl N.to_nat; only 1: unfold Pos.to_nat; only 1: simpl; only 1: rewrite Pmult_nat_mult, Nat.mul_comm; only 1: f_equal).	1.5134100914	2289
Coq.NArith.Nnat.inj_succ	40	2.0.0.0.0.0	search with cache (only 1: destruct a; only 1: simpl N.to_nat; only 1: trivial; only 1: simpl N.to_nat; only 1: unfold Pos.to_nat; only 1: now rewrite !Pmult_nat_mult, Pos2Nat.inj_succ).	0.0251967906952	8
Coq.NArith.Nnat.inj_add	40
Coq.NArith.Nnat.inj_mul	40
Coq.NArith.Nnat.inj_sub	40
Coq.NArith.Nnat.inj_pred	40
Coq.NArith.Nnat.inj_div2	40
Coq.NArith.Nnat.inj_compare	40
Coq.NArith.Nnat.inj_max	40
Coq.NArith.Nnat.inj_min	40
Coq.NArith.Nnat.inj_iter	40
Coq.NArith.Nnat.id	40	0.0.1.0.6	search with cache (only 1: induction n as [| n H]; only 1: simpl N.to_nat; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.0495240688324	46
Coq.NArith.Nnat.inj	40
Coq.NArith.Nnat.inj_iff	40	0.0.0.0.0.4	search with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: now f_equal).	0.113306999207	35
Coq.NArith.Nnat.inj_double	40
Coq.NArith.Nnat.inj_succ_double	40	0	search with cache (only 1: nat2N).	0.032016992569	1
Coq.NArith.Nnat.inj_succ	40	0	search with cache (only 1: nat2N).	0.026652097702	1
Coq.NArith.Nnat.inj_pred	40	4	search with cache (only 1: nat2N).	0.0287861824036	5
Coq.NArith.Nnat.inj_add	40	6	search with cache (only 1: nat2N).	0.0343389511108	7
Coq.NArith.Nnat.inj_sub	40	4	search with cache (only 1: nat2N).	0.0319120883942	5
Coq.NArith.Nnat.inj_mul	40	0	search with cache (only 1: nat2N).	0.0288369655609	1
Coq.NArith.Nnat.inj_div2	40	4	search with cache (only 1: nat2N).	0.0287868976593	5
Coq.NArith.Nnat.inj_compare	40
Coq.NArith.Nnat.inj_min	40	4	search with cache (only 1: nat2N).	0.0315849781036	5
Coq.NArith.Nnat.inj_max	40	4	search with cache (only 1: nat2N).	0.0316300392151	5
Coq.NArith.Nnat.inj_iter	40	4.0.13.3.0.18.0.10	search with cache (only 1: induction n; only 1: trivial; only 1: destruct n; only 1: trivial; only 1: simpl; only 1: rewrite Pos.iter_succ; only 1: f_equal; only 1: trivial).	6.94967603683	17917
Coq.Strings.Ascii.ascii_dec	40
Coq.Strings.Ascii.eqb_spec	40
Coq.Strings.Ascii.eqb_refl	40
Coq.Strings.Ascii.eqb_sym	40	0	search with cache (only 1: t_eqb).	0.0191287994385	1
Coq.Strings.Ascii.eqb_eq	40	0	search with cache (only 1: t_eqb).	0.0175309181213	1
Coq.Strings.Ascii.eqb_neq	40	0	search with cache (only 1: t_eqb).	0.0182089805603	1
Coq.Strings.Ascii.eqb_compat	40	0	search with cache (only 1: t_eqb).	0.011736869812	1
Coq.Strings.Ascii.ascii_N_embedding	40
Coq.Strings.Ascii.N_ascii_embedding	40
Coq.Strings.Ascii.N_ascii_bounded	40
Coq.Strings.Ascii.ascii_nat_embedding	40
Coq.Strings.Ascii.nat_ascii_embedding	40
Coq.Strings.Ascii.nat_ascii_bounded	40
Coq.Strings.Ascii.ascii_of_byte_of_ascii	40
Coq.Strings.Ascii.byte_of_ascii_of_byte	40
Coq.Strings.Ascii.ascii_of_byte_via_N	40
Coq.Strings.Ascii.ascii_of_byte_via_nat	40
Coq.Strings.Ascii.byte_of_ascii_via_N	40
Coq.Strings.Ascii.byte_of_ascii_via_nat	40
Coq.Strings.String.string_dec	40
Coq.Strings.String.eqb_spec	40
Coq.Strings.String.eqb_refl	40
Coq.Strings.String.eqb_sym	40	0	search with cache (only 1: t_eqb).	0.0113589763641	1
Coq.Strings.String.eqb_eq	40	0	search with cache (only 1: t_eqb).	0.00906205177307	1
Coq.Strings.String.eqb_neq	40	0	search with cache (only 1: t_eqb).	0.0109610557556	1
Coq.Strings.String.eqb_compat	40	0	search with cache (only 1: t_eqb).	0.00786900520325	1
Coq.Strings.String.get_correct	40
Coq.Strings.String.append_correct1	40
Coq.Strings.String.append_correct2	40
Coq.Strings.String.substring_correct1	40
Coq.Strings.String.substring_correct2	40
Coq.Strings.String.prefix_correct	40
Coq.Strings.String.index_correct1	40
Coq.Strings.String.index_correct2	40
Coq.Strings.String.index_correct3	40
Coq.Strings.String.index_correct4	40
Coq.Strings.String.string_of_list_ascii_of_string	40	0.0.18.3.4.26	search with cache (only 1: elim s; only 1: easy; only 1: simpl; only 1: intros m s1; only 1: intros ->; only 1: easy).	1.46208405495	4678
Coq.Strings.String.list_ascii_of_string_of_list_ascii	40	0.1.2.0	search with cache (only 1: induction s as [| ? ? IHs]; only 1: reflexivity; only 1: cbn; only 1: apply f_equal, IHs).	0.0120449066162	7
Coq.Strings.String.string_of_list_byte_of_string	40
Coq.Strings.String.list_byte_of_string_of_list_byte	40
Coq.Strings.Byte.byte_dec_lb	40
Coq.Strings.Byte.byte_dec_bl	40
Coq.Strings.Byte.eqb_false	40
Coq.Strings.Byte.of_to_nat	40
Coq.Strings.Byte.to_of_nat	40
Coq.Strings.Byte.to_of_nat_iff	40
Coq.Strings.Byte.to_of_nat_option_map	40
Coq.Strings.Byte.to_nat_bounded	40
Coq.Strings.Byte.of_nat_None_iff	40
Coq.Strings.Byte.of_to_N	40
Coq.Strings.Byte.to_of_N	40
Coq.Strings.Byte.to_of_N_iff	40
Coq.Strings.Byte.to_of_N_option_map	40	0.0	search with cache (only 1: cbv[of_N]; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x | _ => intro | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	0.662806034088	2
Coq.Strings.Byte.to_N_bounded	40
Coq.Strings.Byte.of_N_None_iff	40
Coq.Strings.Byte.to_N_via_nat	40
Coq.Strings.Byte.to_nat_via_N	40
Coq.Strings.Byte.of_N_via_nat	40
Coq.Strings.Byte.of_nat_via_N	40
Coq.Strings.HexString.to_N_of_pos	40	12	search with cache (only 1: auto).	0.026782989502	46
Coq.Strings.HexString.to_N_of_N	40
Coq.Strings.HexString.to_Z_of_Z	40
Coq.Strings.HexString.to_nat_of_nat	40
Coq.Strings.HexString.to_pos_of_pos	40
Coq.Strings.OctalString.to_N_of_pos	40	12	search with cache (only 1: auto).	0.0299458503723	46
Coq.Strings.OctalString.to_N_of_N	40
Coq.Strings.OctalString.to_Z_of_Z	40
Coq.Strings.OctalString.to_nat_of_nat	40
Coq.Strings.OctalString.to_pos_of_pos	40
Coq.Strings.BinaryString.to_N_of_pos	40	12	search with cache (only 1: auto).	0.0211620330811	46
Coq.Strings.BinaryString.to_N_of_N	40
Coq.Strings.BinaryString.Z_of_of_Z	40
Coq.Strings.BinaryString.to_nat_of_nat	40
Coq.Strings.BinaryString.to_pos_of_pos	40
Coq.Reals.Rdefinitions.total_order_T	40
Coq.Reals.Rdefinitions.Req_appart_dec	40
Coq.Reals.Rdefinitions.Rrepr_appart_0	40
Coq.Reals.Rdefinitions.up	40
Coq.Reals.Rtrigo_alt.pre_sin_bound	40
Coq.Reals.Rtrigo_alt.pre_cos_bound	40
Coq.Reals.Ratan.Ropp_div	40	15.2.0.2	search with cache (only 1: intros; only 1: rewrite <- Rmult_1_r; only 1: unfold Rdiv; only 1: lra).	2.17476582527	990
Coq.Reals.Ratan.pos_half_prf	40	0	search with cache (only 1: lra).	0.0252728462219	1
Coq.Reals.Ratan.Boule_half_to_interval	40
Coq.Reals.Ratan.Boule_lt	40
Coq.Reals.Ratan.Un_cv_ext	40
Coq.Reals.Ratan.Alt_first_term_bound	40
Coq.Reals.Ratan.Alt_CVU	40
Coq.Reals.Ratan.pow2_ge_0	40
Coq.Reals.Ratan.pow2_abs	40
Coq.Reals.Ratan.derivable_pt_tan	40
Coq.Reals.Ratan.derive_pt_tan	40
Coq.Reals.Ratan.derive_increasing_interv	40
Coq.Reals.Ratan.plus_Rsqr_gt_0	40
Coq.Reals.Ratan.PI2_lower_bound	40
Coq.Reals.Ratan.PI2_3_2	40
Coq.Reals.Ratan.PI2_1	40
Coq.Reals.Ratan.tan_increasing	40
Coq.Reals.Ratan.tan_is_inj	40
Coq.Reals.Ratan.exists_atan_in_frame	40
Coq.Reals.Ratan.tan_1_gt_1	40
Coq.Reals.Ratan.frame_tan	40
Coq.Reals.Ratan.ub_opp	40	5.0	search with cache (only 1: intros; only 1: lra).	0.0388829708099	7
Coq.Reals.Ratan.pos_opp_lt	40	2.0	search with cache (only 1: intros x h; only 1: lra).	0.0277881622314	4
Coq.Reals.Ratan.tech_opp_tan	40
Coq.Reals.Ratan.pre_atan	40
Coq.Reals.Ratan.atan_bound	40
Coq.Reals.Ratan.atan_right_inv	40
Coq.Reals.Ratan.atan_opp	40
Coq.Reals.Ratan.derivable_pt_atan	40
Coq.Reals.Ratan.atan_increasing	40
Coq.Reals.Ratan.atan_0	40
Coq.Reals.Ratan.atan_1	40
Coq.Reals.Ratan.derive_pt_atan	40
Coq.Reals.Ratan.derivable_pt_lim_atan	40
Coq.Reals.Ratan.Ratan_seq_decreasing	40
Coq.Reals.Ratan.Ratan_seq_converging	40
Coq.Reals.Ratan.ps_atan_exists_01	40
Coq.Reals.Ratan.Ratan_seq_opp	40
Coq.Reals.Ratan.sum_Ratan_seq_opp	40
Coq.Reals.Ratan.ps_atan_exists_1	40
Coq.Reals.Ratan.in_int	40
Coq.Reals.Ratan.ps_atan0_0	40
Coq.Reals.Ratan.ps_atan_exists_1_opp	40
Coq.Reals.Ratan.ps_atan_opp	40
Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40
Coq.Reals.Ratan.pow_lt_1_compat	40
Coq.Reals.Ratan.Datan_seq_Rabs	40
Coq.Reals.Ratan.Datan_seq_pos	40	0.0.0	search with cache (only 1: intros x n; only 1: unfold Datan_seq; only 1: apply pow_lt).	0.0280020236969	3
Coq.Reals.Ratan.Datan_sum_eq	40
Coq.Reals.Ratan.Datan_seq_increasing	40
Coq.Reals.Ratan.Datan_seq_decreasing	40
Coq.Reals.Ratan.Datan_seq_CV_0	40
Coq.Reals.Ratan.Datan_lim	40
Coq.Reals.Ratan.Datan_CVU_prelim	40
Coq.Reals.Ratan.Datan_is_datan	40
Coq.Reals.Ratan.Ratan_CVU'	40
Coq.Reals.Ratan.Ratan_CVU	40
Coq.Reals.Ratan.Alt_PI_tg	40
Coq.Reals.Ratan.Ratan_is_ps_atan	40
Coq.Reals.Ratan.Datan_continuity	40
Coq.Reals.Ratan.derivable_pt_lim_ps_atan	40
Coq.Reals.Ratan.derivable_pt_ps_atan	40
Coq.Reals.Ratan.ps_atan_continuity_pt_1	40
Coq.Reals.Ratan.Datan_eq_DatanSeq_interv	40
Coq.Reals.Ratan.atan_eq_ps_atan	40
Coq.Reals.Ratan.Alt_PI_eq	40
Coq.Reals.Ratan.PI_ineq	40
Coq.Reals.RList.MaxRlist_P1	40
Coq.Reals.RList.MinRlist_P1	40
Coq.Reals.RList.AbsList_P1	40
Coq.Reals.RList.MinRlist_P2	40
Coq.Reals.RList.AbsList_P2	40
Coq.Reals.RList.MaxRlist_P2	40
Coq.Reals.RList.pos_Rl_P1	40	0.3.1.4.7.1	search with cache (only 1: intros; only 1: elim H; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: auto).	0.561084985733	743
Coq.Reals.RList.pos_Rl_P2	40
Coq.Reals.RList.Rlist_P1	40
Coq.Reals.RList.RList_P0	40
Coq.Reals.RList.RList_P1	40
Coq.Reals.RList.RList_P2	40
Coq.Reals.RList.RList_P3	40
Coq.Reals.RList.RList_P4	40
Coq.Reals.RList.RList_P5	40
Coq.Reals.RList.RList_P6	40
Coq.Reals.RList.RList_P7	40
Coq.Reals.RList.RList_P8	40
Coq.Reals.RList.RList_P9	40
Coq.Reals.RList.RList_P10	40
Coq.Reals.RList.RList_P11	40
Coq.Reals.RList.RList_P12	40
Coq.Reals.RList.RList_P13	40
Coq.Reals.RList.RList_P14	40	1.10.0.0.0.6.1.3.0	search with cache (only 1: simple induction l; only 1: split; only 1: intros; only 1: simpl; only 1: apply INR_eq; only 1: rewrite S_INR; only 1: rewrite S_INR; only 1: rewrite H; only 1: ring).	35.0728430748	37261
Coq.Reals.RList.RList_P15	40
Coq.Reals.RList.RList_P16	40
Coq.Reals.RList.RList_P17	40
Coq.Reals.RList.RList_P18	40	1.6.0.3.8.1	search with cache (only 1: intros; only 1: induction l as [| r l Hrecl]; only 1: reflexivity; only 1: simpl; only 1: rewrite Hrecl; only 1: reflexivity).	8.13326883316	11763
Coq.Reals.RList.RList_P19	40
Coq.Reals.RList.RList_P20	40
Coq.Reals.RList.RList_P21	40	2.6.0	search with cache (only 1: intros; only 1: elim H; only 1: reflexivity).	0.0963549613953	87
Coq.Reals.RList.RList_P22	40	2.0.0.9.0	search with cache (only 1: intros; only 1: induction l1 as [| r l1 Hrecl1]; only 1: elim H; only 1: reflexivity; only 1: reflexivity).	0.964866876602	837
Coq.Reals.RList.RList_P23	40	2.0.11.0.0.0.0.0.0	search with cache (only 1: simple induction l1; only 1: intro; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: apply INR_eq; only 1: rewrite H; only 1: rewrite S_INR; only 1: ring).	16.9807651043	17400
Coq.Reals.RList.RList_P24	40
Coq.Reals.RList.RList_P25	40
Coq.Reals.RList.RList_P26	40
Coq.Reals.RList.RList_P27	40	3.7.6.0.2.0.0	search with cache (only 1: simple induction l1; only 1: intros; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: rewrite H; only 1: reflexivity).	12.6489348412	16129
Coq.Reals.RList.RList_P28	40	1.16.0.0.1.13	search with cache (only 1: simple induction l; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: rewrite H; only 1: reflexivity).	6.42492985725	16185
Coq.Reals.RList.RList_P29	40
Coq.Reals.Sqrt_reg.sqrt_var_maj	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt	40
Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	40
Coq.Reals.Sqrt_reg.derivable_pt_sqrt	40
Coq.Reals.Sqrt_reg.derive_pt_sqrt	40
Coq.Reals.Sqrt_reg.continuity_pt_sqrt	40
Coq.Reals.Rsigma.sigma_split	40
Coq.Reals.Rsigma.sigma_diff	40
Coq.Reals.Rsigma.sigma_diff_neg	40	0.2.0.0.0.0.0.0	search with cache (only 1: intros low high k H1 H2; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: rewrite (sigma_split H1 H2); only 1: ring).	0.178578853607	16
Coq.Reals.Rsigma.sigma_first	40
Coq.Reals.Rsigma.sigma_last	40
Coq.Reals.Rsigma.sigma_eq_arg	40	0.2.0.0.0.0.1	search with cache (only 1: intros; only 1: unfold sigma; only 1: rewrite <- minus_n_n; only 1: simpl; only 1: replace (low + 0)%nat with low; only 1: reflexivity; only 1: ring).	0.044960975647	10
Coq.Reals.Rbasic_fun.Rmin_case	40
Coq.Reals.Rbasic_fun.Rmin_case_strong	40	7.0.0.0.0	search with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: auto with real).	0.824456930161	558
Coq.Reals.Rbasic_fun.Rmin_Rgt_l	40
Coq.Reals.Rbasic_fun.Rmin_Rgt_r	40
Coq.Reals.Rbasic_fun.Rmin_Rgt	40
Coq.Reals.Rbasic_fun.Rmin_l	40
Coq.Reals.Rbasic_fun.Rmin_r	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro H1; only 1: exact H1; only 1: intro H1; only 1: auto with real).	0.0217700004578	7
Coq.Reals.Rbasic_fun.Rmin_left	40	4.5.0.0.2	search with cache (only 1: intros r1 r2 r; only 1: unfold Rmin; only 1: destruct (Rle_dec r1 r2); only 1: split; only 1: auto with real).	2.24699115753	1564
Coq.Reals.Rbasic_fun.Rmin_right	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0192801952362	4
Coq.Reals.Rbasic_fun.Rle_min_compat_r	40
Coq.Reals.Rbasic_fun.Rle_min_compat_l	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 (apply Rmin_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.0229070186615	6
Coq.Reals.Rbasic_fun.Rmin_comm	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0289759635925	8
Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40
Coq.Reals.Rbasic_fun.Rmin_pos	40	1.2.1.2.0.10	search with cache (only 1: intros r1 r2 r; only 1: intros; only 1: apply Rmin_Rgt_r; only 1: split; only 1: auto with real; only 1: auto with real).	2.27103805542	2321
Coq.Reals.Rbasic_fun.Rmin_glb	40	0.0.2.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.171322107315	6
Coq.Reals.Rbasic_fun.Rmin_glb_lt	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro; only 1: assumption; only 1: intro; only 1: assumption).	0.0236690044403	7
Coq.Reals.Rbasic_fun.Rmax_case	40
Coq.Reals.Rbasic_fun.Rmax_case_strong	40	0.0.0.0.0	search with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).	0.0246160030365	5
Coq.Reals.Rbasic_fun.Rmax_Rle	40
Coq.Reals.Rbasic_fun.Rmax_comm	40
Coq.Reals.Rbasic_fun.Rmax_l	40	0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro H1; only 1: eauto using Rle_trans, Rle_refl; only 1: intro H1; only 1: auto with real).	0.260344982147	91
Coq.Reals.Rbasic_fun.Rmax_r	40	0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro H1; only 1: eauto using Rle_trans, Rle_refl; only 1: intro H1; only 1: auto with real).	0.261584043503	91
Coq.Reals.Rbasic_fun.Rmax_left	40	1.0.0.0.0.1.0.0	search with cache (only 1: intros p q; only 1: unfold Rmax; only 1: case (Rle_dec p q); only 1: intros H1 H2; only 1: apply Rle_antisym; only 1: auto with real; only 1: auto with real; only 1: auto).	0.345998048782	98
Coq.Reals.Rbasic_fun.Rmax_right	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0582098960876	4
Coq.Reals.Rbasic_fun.Rle_max_compat_r	40
Coq.Reals.Rbasic_fun.Rle_max_compat_l	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 (apply Rmax_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.0264821052551	6
Coq.Reals.Rbasic_fun.RmaxRmult	40
Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40
Coq.Reals.Rbasic_fun.Rmax_lub	40	2.2.0.0.1	search with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmax; only 1: case (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).	0.429027080536	109
Coq.Reals.Rbasic_fun.Rmax_lub_lt	40	2.2.0.0.1	search with cache (only 1: intros p q; only 1: unfold Rmax; only 1: case (Rle_dec p q); only 1: auto; only 1: auto).	0.462683916092	188
Coq.Reals.Rbasic_fun.Rmax_Rlt	40
Coq.Reals.Rbasic_fun.Rmax_neg	40	2.1.0.0	search with cache (only 1: intros; only 1: apply Rmax_lub_lt; only 1: assumption; only 1: assumption).	0.0297198295593	7
Coq.Reals.Rbasic_fun.Rcase_abs	40
Coq.Reals.Rbasic_fun.Rabs_R0	40
Coq.Reals.Rbasic_fun.Rabs_R1	40
Coq.Reals.Rbasic_fun.Rabs_no_R0	40
Coq.Reals.Rbasic_fun.Rabs_left	40
Coq.Reals.Rbasic_fun.Rabs_right	40	0.1.0.0.1.3.0.0.1	search with cache (only 1: intro; only 1: unfold Rabs; only 1: case (Rcase_abs r); only 1: intro H; only 1: intro; only 1: absurd (r >= 0); only 1: exact (Rlt_not_ge r 0 H); only 1: assumption; only 1: trivial).	8.44880604744	5037
Coq.Reals.Rbasic_fun.Rabs_left1	40
Coq.Reals.Rbasic_fun.Rabs_pos	40
Coq.Reals.Rbasic_fun.Rle_abs	40
Coq.Reals.Rbasic_fun.Rabs_le	40
Coq.Reals.Rbasic_fun.Rabs_pos_eq	40	0.4.4.0	search with cache (only 1: intros a H; only 1: rewrite Rabs_right; only 1: auto; only 1: auto with real).	0.732879161835	437
Coq.Reals.Rbasic_fun.Rabs_Rabsolu	40
Coq.Reals.Rbasic_fun.Rabs_pos_lt	40
Coq.Reals.Rbasic_fun.Rabs_minus_sym	40
Coq.Reals.Rbasic_fun.Rabs_mult	40
Coq.Reals.Rbasic_fun.Rabs_Rinv	40
Coq.Reals.Rbasic_fun.Rabs_Ropp	40
Coq.Reals.Rbasic_fun.Rabs_triang	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv2	40
Coq.Reals.Rbasic_fun.Rabs_def1	40
Coq.Reals.Rbasic_fun.Rabs_def2	40
Coq.Reals.Rbasic_fun.RmaxAbs	40
Coq.Reals.Rbasic_fun.Rabs_Zabs	40
Coq.Reals.Rbasic_fun.abs_IZR	40
Coq.Reals.Rbasic_fun.Ropp_Rmax	40
Coq.Reals.Rbasic_fun.Ropp_Rmin	40
Coq.Reals.Rbasic_fun.Rmax_assoc	40
Coq.Reals.Rbasic_fun.Rminmax	40	1.0.0.0.1.2.1.1	search with cache (only 1: intros x y; only 1: unfold Rmin; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro H1; only 1: eauto using Rle_trans, Rle_refl; only 1: intro H1; only 1: auto with real).	2.27072000504	1762
Coq.Reals.Rbasic_fun.Rmin_assoc	40
Coq.Reals.ROrderedType.Req_dec	40
Coq.Reals.ROrderedType.Reqb_eq	40
Coq.Reals.ROrderedType.Rcompare_spec	40
Coq.Reals.ROrderedType.lt_strorder	40
Coq.Reals.ROrderedType.lt_compat	40	5	search with cache (only 1: auto with *).	0.0199348926544	6
Coq.Reals.ROrderedType.le_lteq	40	1.1.2	search with cache (only 1: repeat red; only 1: intros; only 1: auto).	0.0782089233398	55
Coq.Reals.SeqSeries.sum_maj1	40
Coq.Reals.SeqSeries.Rseries_CV_comp	40
Coq.Reals.SeqSeries.Cesaro	40
Coq.Reals.SeqSeries.Cesaro_1	40
Coq.Reals.Rtrigo_def.exp_cof_no_R0	40
Coq.Reals.Rtrigo_def.exist_exp	40
Coq.Reals.Rtrigo_def.pow_i	40
Coq.Reals.Rtrigo_def.exist_exp0	40
Coq.Reals.Rtrigo_def.exp_0	40
Coq.Reals.Rtrigo_def.cosh_0	40
Coq.Reals.Rtrigo_def.sinh_0	40
Coq.Reals.Rtrigo_def.simpl_cos_n	40
Coq.Reals.Rtrigo_def.archimed_cor1	40
Coq.Reals.Rtrigo_def.Alembert_cos	40
Coq.Reals.Rtrigo_def.cosn_no_R0	40	0.0.0.0.0.0	search with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	0.0402607917786	6
Coq.Reals.Rtrigo_def.exist_cos	40
Coq.Reals.Rtrigo_def.simpl_sin_n	40
Coq.Reals.Rtrigo_def.Alembert_sin	40
Coq.Reals.Rtrigo_def.sin_no_R0	40	0.0.2.0.0.0.0.0	search with cache (only 1: intro; only 1: unfold sin_n; only 1: unfold Rdiv; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	0.0502958297729	10
Coq.Reals.Rtrigo_def.exist_sin	40
Coq.Reals.Rtrigo_def.cos_sym	40
Coq.Reals.Rtrigo_def.sin_antisym	40
Coq.Reals.Rtrigo_def.sin_0	40
Coq.Reals.Rtrigo_def.exist_cos0	40
Coq.Reals.Rtrigo_def.cos_0	40
Coq.Reals.NewtonInt.FTCN_step1	40
Coq.Reals.NewtonInt.FTC_Newton	40	5.0	search with cache (only 1: intros f a b; only 1: split).	0.0398139953613	14
Coq.Reals.NewtonInt.NewtonInt_P1	40
Coq.Reals.NewtonInt.NewtonInt_P2	40
Coq.Reals.NewtonInt.NewtonInt_P3	40
Coq.Reals.NewtonInt.NewtonInt_P4	40
Coq.Reals.NewtonInt.NewtonInt_P5	40
Coq.Reals.NewtonInt.antiderivative_P1	40
Coq.Reals.NewtonInt.NewtonInt_P6	40	0.0.2.1.4.3.0.4	search with cache (only 1: intros f g l a b X X0; only 1: unfold NewtonInt, NewtonInt_P3; only 1: elim X0; only 1: elim X; only 1: intros x0 p0; only 1: intros x p; only 1: simpl; only 1: ring).	24.883149147	11747
Coq.Reals.NewtonInt.antiderivative_P2	40
Coq.Reals.NewtonInt.antiderivative_P3	40
Coq.Reals.NewtonInt.antiderivative_P4	40
Coq.Reals.NewtonInt.NewtonInt_P7	40
Coq.Reals.NewtonInt.NewtonInt_P8	40
Coq.Reals.NewtonInt.NewtonInt_P9	40
Coq.Reals.Runcountable.in_holed_interval_dec	40
Coq.Reals.Runcountable.middle_in_interval	40
Coq.Reals.Runcountable.point_in_holed_interval_works	40
Coq.Reals.Runcountable.first_in_holed_interval	40
Coq.Reals.Runcountable.first_in_holed_interval_works	40
Coq.Reals.Runcountable.split_couple_eq	40
Coq.Reals.Runcountable.first_two_in_interval_works	40
Coq.Reals.Runcountable.tearing_sequences	40
Coq.Reals.Runcountable.tearing_sequences_projsig	40
Coq.Reals.Runcountable.tearing_sequences_inc_dec	40
Coq.Reals.Runcountable.split_lt_succ	40
Coq.Reals.Runcountable.increase_seq_transit	40
Coq.Reals.Runcountable.decrease_seq_transit	40
Coq.Reals.Runcountable.tearing_sequences_ordered_forall	40
Coq.Reals.Runcountable.torn_number	40
Coq.Reals.Runcountable.torn_number_above_first_sequence	40
Coq.Reals.Runcountable.torn_number_below_second_sequence	40
Coq.Reals.Runcountable.limit_index_above_all_indices	40
Coq.Reals.Runcountable.first_indices_increasing	40
Coq.Reals.Runcountable.R_uncountable	40
Coq.Reals.Rfunctions.INR_fact_neq_0	40
Coq.Reals.Rfunctions.fact_simpl	40	0.17.2	search with cache (only 1: intro; only 1: simpl; only 1: ring).	0.31719493866	478
Coq.Reals.Rfunctions.simpl_fact	40	0.57	search with cache (only 1: fix even_odd_double 1; only 1: assumption).	4.95784211159	12672
Coq.Reals.Rfunctions.pow_O	40	2.3	search with cache (only 1: intros p0; only 1: ring).	0.0507431030273	23
Coq.Reals.Rfunctions.pow_1	40	20.1	search with cache (only 1: intro; only 1: ring).	0.55280995369	795
Coq.Reals.Rfunctions.pow_add	40
Coq.Reals.Rfunctions.Rpow_mult_distr	40
Coq.Reals.Rfunctions.pow_nonzero	40	1.0.5.1.6	search with cache (only 1: intros x n; only 1: elim n; only 1: auto with real; only 1: simpl; only 1: auto with real).	4.58485102654	1427
Coq.Reals.Rfunctions.pow_RN_plus	40	1.7.0.0.1.0.0.0	search with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: repeat rewrite Rmult_assoc; only 1: auto with real).	6.70893287659	3287
Coq.Reals.Rfunctions.pow_lt	40	2.1.2.8.0.0.8.0.1	search with cache (only 1: intros x n; only 1: elim n; only 1: auto with real; only 1: simpl; only 1: intros; only 1: apply Rmult_lt_0_compat; only 1: auto; only 1: apply H; only 1: auto).	18.6653540134	33288
Coq.Reals.Rfunctions.Rlt_pow_R1	40
Coq.Reals.Rfunctions.Rlt_pow	40
Coq.Reals.Rfunctions.tech_pow_Rmult	40	3.0.0.0.1.0	search with cache (only 1: simpl; only 1: intros; only 1: apply Rmult_eq_compat_l; only 1: induction n; only 1: field; only 1: field).	0.0605959892273	17
Coq.Reals.Rfunctions.tech_pow_Rplus	40	6.8.2.2.2.2	search with cache (only 1: simple induction n; only 1: simpl; only 1: field; only 1: simpl; only 1: intros; only 1: ring).	6.78846502304	5731
Coq.Reals.Rfunctions.poly	40
Coq.Reals.Rfunctions.Power_monotonic	40
Coq.Reals.Rfunctions.RPow_abs	40
Coq.Reals.Rfunctions.Pow_x_infinity	40
Coq.Reals.Rfunctions.pow_ne_zero	40
Coq.Reals.Rfunctions.Rinv_pow	40
Coq.Reals.Rfunctions.pow_lt_1_zero	40
Coq.Reals.Rfunctions.pow_R1	40
Coq.Reals.Rfunctions.pow_Rsqr	40
Coq.Reals.Rfunctions.pow_le	40
Coq.Reals.Rfunctions.pow_1_even	40
Coq.Reals.Rfunctions.pow_1_odd	40
Coq.Reals.Rfunctions.pow_1_abs	40
Coq.Reals.Rfunctions.pow_mult	40
Coq.Reals.Rfunctions.pow_incr	40
Coq.Reals.Rfunctions.pow_R1_Rle	40
Coq.Reals.Rfunctions.Rle_pow	40
Coq.Reals.Rfunctions.pow1	40	0.0.0.0.0.0.2.2.0	search with cache (only 1: intro; only 1: induction n as [| n Hrecn]; only 1: reflexivity; only 1: replace (S n) with (n + 1)%nat; only 1: rewrite pow_add; only 1: rewrite Hrecn; only 1: simpl; only 1: ring; only 1: ring).	1.0531141758	423
Coq.Reals.Rfunctions.pow_Rabs	40
Coq.Reals.Rfunctions.pow_maj_Rabs	40
Coq.Reals.Rfunctions.Rsqr_pow2	40	0.13.5.0	search with cache (only 1: intros; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: reflexivity).	0.711393117905	782
Coq.Reals.Rfunctions.intP	40
Coq.Reals.Rfunctions.Zpower_NR0	40
Coq.Reals.Rfunctions.powerRZ_O	40	0	search with cache (only 1: auto with real).	0.0134100914001	1
Coq.Reals.Rfunctions.powerRZ_1	40	0.6	search with cache (only 1: simpl; only 1: auto with real).	0.0270249843597	21
Coq.Reals.Rfunctions.powerRZ_NOR	40
Coq.Reals.Rfunctions.powerRZ_pos_sub	40
Coq.Reals.Rfunctions.powerRZ_add	40
Coq.Reals.Rfunctions.Zpower_nat_powerRZ	40
Coq.Reals.Rfunctions.Zpower_pos_powerRZ	40
Coq.Reals.Rfunctions.powerRZ_lt	40	0.0.0.0.0.0.1	search with cache (only 1: destruct z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	0.0347118377686	8
Coq.Reals.Rfunctions.powerRZ_le	40	0.0.0.0.1.0.0.0	search with cache (only 1: intros x z; only 1: case z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	0.10383605957	23
Coq.Reals.Rfunctions.Zpower_nat_powerRZ_absolu	40
Coq.Reals.Rfunctions.powerRZ_R1	40
Coq.Reals.Rfunctions.pow_powerRZ	40	0.0.0.0.2.6	search with cache (only 1: case n; only 1: auto with real; only 1: simpl; only 1: intros m2; only 1: rewrite SuccNat2Pos.id_succ; only 1: auto).	0.325037002563	148
Coq.Reals.Rfunctions.powerRZ_ind	40
Coq.Reals.Rfunctions.powerRZ_inv	40
Coq.Reals.Rfunctions.powerRZ_neg	40
Coq.Reals.Rfunctions.powerRZ_mult_distr	40
Coq.Reals.Rfunctions.GP_finite	40
Coq.Reals.Rfunctions.sum_f_R0_triangle	40
Coq.Reals.Rfunctions.R_dist_pos	40	3.9.11	search with cache (only 1: intros x n; only 1: apply Rle_ge; only 1: apply Rabs_pos).	6.60429000854	11016
Coq.Reals.Rfunctions.R_dist_sym	40
Coq.Reals.Rfunctions.R_dist_refl	40
Coq.Reals.Rfunctions.R_dist_eq	40	5.9.0.0.0	search with cache (only 1: unfold R_dist; only 1: intros; only 1: split_Rabs; only 1: ring; only 1: ring).	1.50529694557	2133
Coq.Reals.Rfunctions.R_dist_tri	40
Coq.Reals.Rfunctions.R_dist_plus	40
Coq.Reals.Rfunctions.R_dist_mult_l	40
Coq.Reals.Rprod.prod_SO_split	40
Coq.Reals.Rprod.prod_SO_pos	40
Coq.Reals.Rprod.prod_SO_Rle	40
Coq.Reals.Rprod.fact_prodSO	40
Coq.Reals.Rprod.le_n_2n	40	10.8.3	search with cache (only 1: intros; only 1: simpl; only 1: lia).	1.62669610977	1733
Coq.Reals.Rprod.RfactN_fact2N_factk	40
Coq.Reals.Rprod.INR_fact_lt_0	40
Coq.Reals.Rprod.C_maj	40
Coq.Reals.Exp_prop.E1_cvg	40
Coq.Reals.Exp_prop.exp_form	40
Coq.Reals.Exp_prop.div2_double	40
Coq.Reals.Exp_prop.div2_S_double	40	0.1.0.0.0.1.0.1.0	search with cache (only 1: intro; only 1: induction N as [| N HrecN]; only 1: reflexivity; only 1: replace (2 * S N)%nat with (S (S (2 * N))); only 1: simpl; only 1: simpl in HrecN; only 1: rewrite HrecN; only 1: reflexivity; only 1: ring).	0.921315193176	588
Coq.Reals.Exp_prop.div2_not_R0	40
Coq.Reals.Exp_prop.Reste_E_maj	40
Coq.Reals.Exp_prop.maj_Reste_cv_R0	40
Coq.Reals.Exp_prop.Reste_E_cv	40
Coq.Reals.Exp_prop.exp_plus	40
Coq.Reals.Exp_prop.exp_pos_pos	40
Coq.Reals.Exp_prop.exp_pos	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp_0	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp	40
Coq.Reals.Rpower.P_Rmin	40
Coq.Reals.Rpower.exp_le_3	40
Coq.Reals.Rpower.exp_increasing	40
Coq.Reals.Rpower.exp_lt_inv	40
Coq.Reals.Rpower.exp_ineq1	40
Coq.Reals.Rpower.ln_exists1	40
Coq.Reals.Rpower.ln_exists	40
Coq.Reals.Rpower.exp_ln	40
Coq.Reals.Rpower.exp_inv	40
Coq.Reals.Rpower.exp_Ropp	40
Coq.Reals.Rpower.ln_increasing	40
Coq.Reals.Rpower.ln_exp	40
Coq.Reals.Rpower.ln_1	40	0.2.2.1	search with cache (only 1: apply exp_inv; only 1: rewrite exp_0; only 1: apply exp_ln; only 1: apply Rlt_0_1).	0.0403029918671	13
Coq.Reals.Rpower.ln_lt_inv	40
Coq.Reals.Rpower.ln_inv	40
Coq.Reals.Rpower.ln_mult	40
Coq.Reals.Rpower.ln_Rinv	40
Coq.Reals.Rpower.ln_continue	40
Coq.Reals.Rpower.Rpower_plus	40
Coq.Reals.Rpower.Rpower_mult	40
Coq.Reals.Rpower.Rpower_O	40
Coq.Reals.Rpower.Rpower_1	40
Coq.Reals.Rpower.Rpower_pow	40
Coq.Reals.Rpower.Rpower_lt	40
Coq.Reals.Rpower.Rpower_sqrt	40
Coq.Reals.Rpower.Rpower_Ropp	40
Coq.Reals.Rpower.powerRZ_Rpower	40
Coq.Reals.Rpower.Rle_Rpower	40
Coq.Reals.Rpower.ln_lt_2	40
Coq.Reals.Rpower.limit1_ext	40
Coq.Reals.Rpower.limit1_imp	40	0.2.0.0.2.0.0.3.1.0.0	search with cache (only 1: intros f g D l x H; only 1: unfold limit1_in, limit_in; only 1: intros H0 eps H1; only 1: case (H0 eps); only 1: auto; only 1: intros x0 [H2 H3]; only 1: exists x0; only 1: split; only 1: auto; only 1: intros x1 [H4 H5]; only 1: auto).	8.64903306961	5569
Coq.Reals.Rpower.Rinv_Rdiv	40
Coq.Reals.Rpower.Dln	40
Coq.Reals.Rpower.derivable_pt_lim_ln	40
Coq.Reals.Rpower.D_in_imp	40
Coq.Reals.Rpower.D_in_ext	40	0.0.2.0.0.0.0.0.2.5.0	search with cache (only 1: intros f g D D1 x H; only 1: intros H0 eps H1; only 1: case (H0 eps); only 1: auto; only 1: intros x0 [H2 H3]; only 1: exists x0; only 1: split; only 1: auto; only 1: intros x1 [H4 H5]; only 1: rewrite <- H; only 1: auto).	12.2303030491	8787
Coq.Reals.Rpower.Dpower	40
Coq.Reals.Rpower.derivable_pt_lim_power	40
Coq.Reals.Rpower.Rpower_mult_distr	40
Coq.Reals.Rpower.Rlt_Rpower_l	40
Coq.Reals.Rpower.Rle_Rpower_l	40
Coq.Reals.Rpower.arcsinh_sinh	40
Coq.Reals.Rpower.sinh_arcsinh	40
Coq.Reals.Rpower.derivable_pt_lim_arcsinh	40
Coq.Reals.Rpower.arcsinh_lt	40
Coq.Reals.Rpower.arcsinh_le	40
Coq.Reals.Rpower.arcsinh_0	40
Coq.Reals.ConstructiveRcomplete.CReal_absSmall	40
Coq.Reals.ConstructiveRcomplete.Un_cv_mod_eq	40
Coq.Reals.ConstructiveRcomplete.Rfloor	40
Coq.Reals.ConstructiveRcomplete.FQ_dense	40
Coq.Reals.ConstructiveRcomplete.RQ_limit	40
Coq.Reals.ConstructiveRcomplete.Rdiag_cauchy_sequence	40
Coq.Reals.ConstructiveRcomplete.doubleLeCovariant	40
Coq.Reals.ConstructiveRcomplete.CReal_cv_self	40
Coq.Reals.ConstructiveRcomplete.Un_cv_extens	40
Coq.Reals.ConstructiveRcomplete.R_has_all_rational_limits	40
Coq.Reals.ConstructiveRcomplete.Rcauchy_complete	40
Coq.Reals.ConstructiveRcomplete.CRealImplem	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_increasing_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_unique	40
Coq.Reals.ConstructiveRealsMorphisms.Endomorph_id	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_proper	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_compose	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le	40	1.6.1.0	search with cache (only 1: intros; only 1: intro abs; only 1: apply CRmorph_increasing_inv in abs; only 1: contradiction).	0.187570810318	168
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_one	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_opp	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos	40
Coq.Reals.ConstructiveRealsMorphisms.NatOfZ	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_int	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Ql	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphism	40
Coq.Reals.ConstructiveRealsMorphisms.RightBound	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphismInv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_surject	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inject	40
Coq.Reals.RIneq.Rle_refl	40	6.2.0	search with cache (only 1: intros; only 1: right; only 1: reflexivity).	1.1959631443	154
Coq.Reals.RIneq.Rge_refl	40	2.0.0	search with cache (only 1: intros; only 1: right; only 1: reflexivity).	0.785554885864	11
Coq.Reals.RIneq.Rlt_irrefl	40
Coq.Reals.RIneq.Rgt_irrefl	40	2.0.0.0.2.0	search with cache (only 1: intro r; only 1: unfold Rgt; only 1: intro abs; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	0.0335991382599	13
Coq.Reals.RIneq.Rlt_not_eq	40
Coq.Reals.RIneq.Rgt_not_eq	40
Coq.Reals.RIneq.Rlt_dichotomy_converse	40
Coq.Reals.RIneq.Req_dec	40
Coq.Reals.RIneq.Rtotal_order	40	0.0.6.0	search with cache (only 1: intuition eauto  3; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.0690879821777	20
Coq.Reals.RIneq.Rdichotomy	40	0.1.0	search with cache (only 1: intuition; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.0387449264526	4
Coq.Reals.RIneq.Rlt_le	40	0.5	search with cache (only 1: red; only 1: intuition eauto  3).	0.0538811683655	43
Coq.Reals.RIneq.Rgt_ge	40	0.1.6	search with cache (only 1: unfold Rgt; only 1: red; only 1: intuition eauto  3).	0.0738859176636	45
Coq.Reals.RIneq.Rle_ge	40
Coq.Reals.RIneq.Rge_le	40	1.0.0.0.0	search with cache (only 1: destruct 1; only 1: red; only 1: tauto; only 1: red; only 1: auto with real).	0.0291759967804	6
Coq.Reals.RIneq.Rlt_gt	40	0	search with cache (only 1: intuition eauto  3).	0.0140450000763	1
Coq.Reals.RIneq.Rgt_lt	40	0	search with cache (only 1: intuition eauto  3).	0.0140810012817	1
Coq.Reals.RIneq.Rnot_le_lt	40
Coq.Reals.RIneq.Rnot_ge_gt	40
Coq.Reals.RIneq.Rnot_le_gt	40	0.2.0.0	search with cache (only 1: intros r1 r2; only 1: unfold Rle; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.0344400405884	6
Coq.Reals.RIneq.Rnot_ge_lt	40	0.0.0	search with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: auto with real).	0.0197188854218	3
Coq.Reals.RIneq.Rnot_lt_le	40	1.1.2.0.0.0	search with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: generalize (total_order_T r1 r2); only 1: unfold not; only 1: intuition eauto  3).	0.177706956863	10
Coq.Reals.RIneq.Rnot_gt_le	40	0.5.1.0	search with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.142100095749	14
Coq.Reals.RIneq.Rnot_gt_ge	40	1.3.0.0	search with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  3).	0.131681919098	8
Coq.Reals.RIneq.Rnot_lt_ge	40	0.3.0.0	search with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.123114109039	7
Coq.Reals.RIneq.Rlt_not_le	40
Coq.Reals.RIneq.Rgt_not_le	40	1.0	search with cache (only 1: intros; only 1: auto with real).	0.0293209552765	12
Coq.Reals.RIneq.Rlt_not_ge	40
Coq.Reals.RIneq.Rgt_not_ge	40	5.0	search with cache (only 1: intros; only 1: auto with real).	0.0272750854492	14
Coq.Reals.RIneq.Rle_not_lt	40	0.0.3.2.0	search with cache (only 1: intros r1 r2 H; only 1: intro abs; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: auto with real).	0.0288338661194	10
Coq.Reals.RIneq.Rge_not_lt	40	0.0.0.0.1	search with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: auto with real).	0.0271980762482	6
Coq.Reals.RIneq.Rle_not_gt	40	0.7.1	search with cache (only 1: intros; only 1: apply Rle_not_lt; only 1: auto with real).	0.489565134048	114
Coq.Reals.RIneq.Rge_not_gt	40	0.1.0.0	search with cache (only 1: intros; only 1: red; only 1: apply Rle_not_lt; only 1: auto with real).	0.0215580463409	5
Coq.Reals.RIneq.Req_le	40	0.0	search with cache (only 1: unfold Rle; only 1: intuition eauto  3).	0.0194940567017	2
Coq.Reals.RIneq.Req_ge	40	0.0	search with cache (only 1: red; only 1: intuition eauto  3).	0.0192050933838	2
Coq.Reals.RIneq.Req_le_sym	40	1.0	search with cache (only 1: unfold Rle; only 1: intuition eauto  3).	0.0232589244843	3
Coq.Reals.RIneq.Req_ge_sym	40	1.0	search with cache (only 1: unfold Rge; only 1: intuition eauto  3).	0.0234718322754	3
Coq.Reals.RIneq.Rgt_asym	40	0.0.3.2	search with cache (only 1: intros; only 1: apply Rle_not_lt; only 1: red; only 1: auto with real).	0.0309541225433	9
Coq.Reals.RIneq.Rle_antisym	40	0.0.19.3	search with cache (only 1: do 2 intro; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: unfold Rle; only 1: intuition).	11.3464510441	10536
Coq.Reals.RIneq.Rge_antisym	40	3.1.0	search with cache (only 1: unfold Rge; only 1: intuition eauto  3; only 1: auto with real).	0.036926984787	7
Coq.Reals.RIneq.Rle_le_eq	40	1.1.0.1	search with cache (only 1: intros r1 r2; only 1: unfold Rle; only 1: intuition eauto  3; only 1: auto with real).	0.0472440719604	7
Coq.Reals.RIneq.Rge_ge_eq	40	0	search with cache (only 1: intuition).	0.0305140018463	1
Coq.Reals.RIneq.Rlt_eq_compat	40	2.7.1	search with cache (only 1: intuition eauto  3; only 1: subst; only 1: tauto).	1.27349686623	284
Coq.Reals.RIneq.Rgt_eq_compat	40	0.5.1	search with cache (only 1: intuition eauto  3; only 1: subst; only 1: tauto).	0.0757830142975	28
Coq.Reals.RIneq.Rle_trans	40
Coq.Reals.RIneq.Rge_trans	40
Coq.Reals.RIneq.Rgt_trans	40	6.0.24	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  3; only 1: eauto using Rnot_lt_le with rorders).	32.9488577843	27087
Coq.Reals.RIneq.Rle_lt_trans	40	1.0.5	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.663243055344	234
Coq.Reals.RIneq.Rlt_le_trans	40	1.0.3	search with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.842433929443	174
Coq.Reals.RIneq.Rge_gt_trans	40
Coq.Reals.RIneq.Rgt_ge_trans	40
Coq.Reals.RIneq.Rlt_dec	40	0.4.9.2	search with cache (only 1: intros; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: generalize (total_order_T r1 r2); only 1: tauto).	18.2799470425	7038
Coq.Reals.RIneq.Rle_dec	40	0.6.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	1.75639104843	89
Coq.Reals.RIneq.Rgt_dec	40	1.10.2	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	5.77525782585	701
Coq.Reals.RIneq.Rge_dec	40	1.6.1	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.639222145081	66
Coq.Reals.RIneq.Rlt_le_dec	40	0.1.0	search with cache (only 1: intuition eauto  4 with real; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition eauto  4 with real).	0.0687761306763	4
Coq.Reals.RIneq.Rgt_ge_dec	40	0.0.0.1.0.1.3.0	search with cache (only 1: intros; only 1: edestruct Rle_dec; only 1: right; only 1: eauto with rorders; only 1: left; only 1: red; only 1: apply Rnot_le_lt; only 1: auto with real).	1.35403203964	598
Coq.Reals.RIneq.Rle_lt_dec	40	0.2.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  4 with real).	0.161134004593	5
Coq.Reals.RIneq.Rge_gt_dec	40	0.1.0.1.1.0	search with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.308559894562	70
Coq.Reals.RIneq.Rlt_or_le	40	1.2.0.0	search with cache (only 1: unfold Rle; only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  3).	0.04181599617	7
Coq.Reals.RIneq.Rgt_or_ge	40	0.1.0.0.1.1	search with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: left; only 1: eauto with rorders; only 1: right; only 1: eauto with rorders).	0.0452270507812	21
Coq.Reals.RIneq.Rle_or_lt	40	0.2.0.1	search with cache (only 1: unfold Rle; only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.420786857605	102
Coq.Reals.RIneq.Rge_or_gt	40	0.1.0.1.0.0	search with cache (only 1: intros; only 1: edestruct Rlt_or_le; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.195610046387	54
Coq.Reals.RIneq.Rle_lt_or_eq_dec	40	4.13.0	search with cache (only 1: intuition eauto  3; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  4 with real).	16.4644339085	3886
Coq.Reals.RIneq.inser_trans_R	40
Coq.Reals.RIneq.Rplus_0_r	40
Coq.Reals.RIneq.Rplus_ne	40	1.1.23	search with cache (only 1: constructor; only 1: ring; only 1: ring).	2.94266700745	1208
Coq.Reals.RIneq.Rplus_opp_l	40	7.0	search with cache (only 1: intros; only 1: ring).	4.38433909416	37
Coq.Reals.RIneq.Rplus_opp_r_uniq	40
Coq.Reals.RIneq.Rplus_eq_compat_l	40	5.1	search with cache (only 1: intros; only 1: auto with real).	0.0279409885406	17
Coq.Reals.RIneq.Rplus_eq_compat_r	40	6.2	search with cache (only 1: intro; only 1: apply f_equal).	0.0565328598022	47
Coq.Reals.RIneq.Rplus_eq_reg_l	40
Coq.Reals.RIneq.Rplus_eq_reg_r	40
Coq.Reals.RIneq.Rplus_0_r_uniq	40	0.1.0.0.0	search with cache (only 1: intros x y H; only 1: replace y with (- x + x + y) by ring; only 1: rewrite Rplus_assoc; only 1: rewrite H; only 1: ring).	0.0425670146942	6
Coq.Reals.RIneq.Rplus_eq_0_l	40
Coq.Reals.RIneq.Rplus_eq_R0	40	2.0.0.0.0.0.1.0.0.0	search with cache (only 1: intros a b H [H0| H0] H1; only 1: absurd (0 < a + b); only 1: rewrite H1; only 1: auto with real; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: assumption; only 1: auto using Rplus_lt_compat_l with real; only 1: rewrite <- H0, Rplus_0_r in H1; only 1: auto with real).	2.19671416283	548
Coq.Reals.RIneq.Rinv_r	40
Coq.Reals.RIneq.Rinv_l_sym	40	0.0.1	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.0336310863495	4
Coq.Reals.RIneq.Rinv_r_sym	40	0.0.1	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.0338408946991	4
Coq.Reals.RIneq.Rmult_0_r	40	3.0.0.0.0.1	search with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: field).	0.0938241481781	19
Coq.Reals.RIneq.Rmult_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.028235912323	2
Coq.Reals.RIneq.Rmult_ne	40	7.0.0	search with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: auto with real).	0.119254827499	51
Coq.Reals.RIneq.Rmult_1_r	40	0.0.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l).	0.0855238437653	17
Coq.Reals.RIneq.Rmult_eq_compat_l	40	5.1	search with cache (only 1: intros; only 1: auto with real).	0.0215678215027	8
Coq.Reals.RIneq.Rmult_eq_compat_r	40	5.8.1	search with cache (only 1: intros; only 1: subst; only 1: field).	6.69578003883	890
Coq.Reals.RIneq.Rmult_eq_reg_l	40
Coq.Reals.RIneq.Rmult_eq_reg_r	40
Coq.Reals.RIneq.Rmult_integral	40
Coq.Reals.RIneq.Rmult_eq_0_compat	40
Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	0.0.1	search with cache (only 1: intros; only 1: rewrite H; only 1: auto with real).	0.0225749015808	4
Coq.Reals.RIneq.Rmult_eq_0_compat_l	40	0.0.1	search with cache (only 1: intros; only 1: rewrite H; only 1: auto with real).	0.0225138664246	4
Coq.Reals.RIneq.Rmult_neq_0_reg	40	3.9.4	search with cache (only 1: intro; only 1: unfold not; only 1: auto with real).	1.19947600365	1099
Coq.Reals.RIneq.Rmult_integral_contrapositive	40
Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	40	0.0.0.0.3.1	search with cache (only 1: red; only 1: intros; only 1: case (Rmult_integral r1 r2); only 1: auto with real; only 1: auto with real; only 1: auto with real).	0.0316710472107	10
Coq.Reals.RIneq.Rmult_plus_distr_r	40	3.2.1.0.1	search with cache (only 1: intros m n p; only 1: rewrite Rmult_comm; only 1: rewrite (Rmult_comm n p); only 1: rewrite (Rmult_comm m p); only 1: apply Rmult_plus_distr_l).	32.6651268005	891
Coq.Reals.RIneq.Rsqr_0	40
Coq.Reals.RIneq.Rsqr_0_uniq	40
Coq.Reals.RIneq.Ropp_eq_compat	40	2.1.0.0.0	search with cache (only 1: intros x y H; only 1: replace y with (- x + x + y) by ring; only 1: rewrite Rplus_assoc; only 1: rewrite H; only 1: ring).	0.0448911190033	8
Coq.Reals.RIneq.Ropp_0	40	1	search with cache (only 1: ring).	0.0192530155182	2
Coq.Reals.RIneq.Ropp_eq_0_compat	40	0.10.2	search with cache (only 1: intros; only 1: rewrite H; only 1: ring).	4.06619691849	330
Coq.Reals.RIneq.Ropp_involutive	40	4.1	search with cache (only 1: intros; only 1: ring).	0.592143058777	13
Coq.Reals.RIneq.Ropp_neq_0_compat	40
Coq.Reals.RIneq.Ropp_plus_distr	40	3.1	search with cache (only 1: intros; only 1: ring).	0.027281999588	6
Coq.Reals.RIneq.Ropp_mult_distr_l	40	0.2	search with cache (only 1: intros; only 1: ring).	0.0261940956116	4
Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0259590148926	2
Coq.Reals.RIneq.Rmult_opp_opp	40	0.0	search with cache (only 1: intros; only 1: ring).	0.026248216629	2
Coq.Reals.RIneq.Ropp_mult_distr_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0261809825897	2
Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0260670185089	2
Coq.Reals.RIneq.Rminus_0_r	40	1.0.6	search with cache (only 1: unfold Rminus; only 1: intros; only 1: ring).	0.121401071548	23
Coq.Reals.RIneq.Rminus_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0634369850159	2
Coq.Reals.RIneq.Ropp_minus_distr	40	0.0.0	search with cache (only 1: intro; only 1: intro; only 1: ring).	0.0274419784546	3
Coq.Reals.RIneq.Ropp_minus_distr'	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0253539085388	2
Coq.Reals.RIneq.Rminus_diag_eq	40	2.1.0.7	search with cache (only 1: intros x y H; only 1: unfold Rminus; only 1: rewrite H; only 1: ring).	1.15854501724	722
Coq.Reals.RIneq.Rminus_diag_uniq	40
Coq.Reals.RIneq.Rminus_diag_uniq_sym	40
Coq.Reals.RIneq.Rplus_minus	40	0.0.1	search with cache (only 1: unfold Rminus; only 1: intros; only 1: ring).	0.0285670757294	4
Coq.Reals.RIneq.Rminus_eq_contra	40	3.0	search with cache (only 1: intros; only 1: auto with real).	0.0535728931427	5
Coq.Reals.RIneq.Rminus_not_eq	40	0.0.0.0	search with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply H; only 1: auto with real).	0.0279660224915	4
Coq.Reals.RIneq.Rminus_not_eq_right	40	0.0.0.0.0	search with cache (only 1: red; only 1: intros; only 1: elim H; only 1: apply Rminus_diag_eq; only 1: auto).	0.0277988910675	5
Coq.Reals.RIneq.Rmult_minus_distr_l	40	1.1	search with cache (only 1: intros; only 1: ring).	1.07762908936	16
Coq.Reals.RIneq.Rinv_1	40	2	search with cache (only 1: field).	0.0251970291138	3
Coq.Reals.RIneq.Rinv_neq_0_compat	40
Coq.Reals.RIneq.Rinv_involutive	40	0.0.1	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.0325810909271	4
Coq.Reals.RIneq.Rinv_mult_distr	40	0.0.0.9.1	search with cache (only 1: intros; only 1: field; only 1: split; only 1: auto with real; only 1: trivial).	0.86698102951	169
Coq.Reals.RIneq.Ropp_inv_permute	40	0.0.1	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.062793970108	4
Coq.Reals.RIneq.Rinv_r_simpl_r	40	0.0.1	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.0347948074341	4
Coq.Reals.RIneq.Rinv_r_simpl_l	40	0.0.3.0.0	search with cache (only 1: intros; only 1: transitivity (1 * r2); only 1: field; only 1: trivial; only 1: auto with real).	0.0998070240021	16
Coq.Reals.RIneq.Rinv_r_simpl_m	40	0.0.5.0.0	search with cache (only 1: intros; only 1: transitivity (r2 * 1); only 1: field; only 1: trivial; only 1: auto with real).	0.544757843018	129
Coq.Reals.RIneq.Rinv_mult_simpl	40
Coq.Reals.RIneq.Rplus_gt_compat_l	40	7	search with cache (only 1: intuition).	0.28892993927	18
Coq.Reals.RIneq.Rplus_lt_compat_r	40
Coq.Reals.RIneq.Rplus_gt_compat_r	40	8	search with cache (only 1: intuition).	0.25928401947	22
Coq.Reals.RIneq.Rplus_le_compat_l	40	6.3.3	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition).	2.79973816872	748
Coq.Reals.RIneq.Rplus_ge_compat_l	40	0.1.5.1.6	search with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: elim H; only 1: auto with zarith real).	36.744382143	6223
Coq.Reals.RIneq.Rplus_le_compat_r	40
Coq.Reals.RIneq.Rplus_ge_compat_r	40	4	search with cache (only 1: intuition).	0.32003903389	72
Coq.Reals.RIneq.Rplus_lt_compat	40
Coq.Reals.RIneq.Rplus_le_compat	40
Coq.Reals.RIneq.Rplus_gt_compat	40	1.6.1	search with cache (only 1: do 3 intro; only 1: red; only 1: auto with real).	0.129518985748	50
Coq.Reals.RIneq.Rplus_ge_compat	40
Coq.Reals.RIneq.Rplus_lt_le_compat	40
Coq.Reals.RIneq.Rplus_le_lt_compat	40
Coq.Reals.RIneq.Rplus_gt_ge_compat	40	3.0.1.4	search with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.55241394043	230
Coq.Reals.RIneq.Rplus_ge_gt_compat	40	0.3.2.5	search with cache (only 1: intros; only 1: apply Rlt_le_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.971191883087	524
Coq.Reals.RIneq.Rplus_lt_0_compat	40
Coq.Reals.RIneq.Rplus_le_lt_0_compat	40	0.0.0.0.11.1	search with cache (only 1: intros a b; only 1: intros; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: assumption; only 1: auto using Rplus_lt_compat_l with real).	5.45751881599	5514
Coq.Reals.RIneq.Rplus_lt_le_0_compat	40
Coq.Reals.RIneq.Rplus_le_le_0_compat	40
Coq.Reals.RIneq.sum_inequa_Rle_lt	40	0.0.0	search with cache (only 1: intros n m p q; only 1: generalize (Rlt_le_dec m q); only 1: intuition).	0.0355091094971	3
Coq.Reals.RIneq.Rplus_lt_reg_l	40
Coq.Reals.RIneq.Rplus_lt_reg_r	40	4.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: apply CRealLtForget; only 1: apply (CReal_plus_lt_reg_l (Rrepr r)); only 1: rewrite <- Rrepr_plus, <- Rrepr_plus; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: now rewrite 2!(Rplus_comm r)).	4.72706103325	627
Coq.Reals.RIneq.Rplus_le_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_l	40
Coq.Reals.RIneq.Rplus_ge_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_pos_r	40
Coq.Reals.RIneq.Rplus_lt_reg_pos_r	40
Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_neg_r	40
Coq.Reals.RIneq.Ropp_gt_lt_contravar	40
Coq.Reals.RIneq.Ropp_lt_gt_contravar	40	3	search with cache (only 1: intuition).	0.0380280017853	26
Coq.Reals.RIneq.Ropp_lt_contravar	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp, Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	0.0427470207214	8
Coq.Reals.RIneq.Ropp_gt_contravar	40	2.2.0	search with cache (only 1: intros; only 1: unfold Rgt; only 1: auto with real).	0.372272968292	27
Coq.Reals.RIneq.Ropp_le_ge_contravar	40	0.1.0.0.2	search with cache (only 1: red; only 1: unfold Rle; only 1: intuition eauto  3; only 1: auto with real; only 1: auto with real).	0.20719909668	71
Coq.Reals.RIneq.Ropp_ge_le_contravar	40	0.1.2.0.0	search with cache (only 1: unfold Rge; only 1: intros r1 r2 [H| H]; only 1: red; only 1: auto with real; only 1: auto with real).	0.106976032257	15
Coq.Reals.RIneq.Ropp_le_contravar	40	0.0.0.0	search with cache (only 1: unfold Rle; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).	0.0560400485992	4
Coq.Reals.RIneq.Ropp_ge_contravar	40	0.0.0.0	search with cache (only 1: unfold Rge; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).	0.0590858459473	4
Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40
Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	40	0.0.1.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.024936914444	5
Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0249130725861	4
Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0248441696167	4
Coq.Reals.RIneq.Ropp_0_le_ge_contravar	40	0.0.0.1.8	search with cache (only 1: unfold Rle; only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	2.37133407593	527
Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.02605509758	4
Coq.Reals.RIneq.Ropp_lt_cancel	40
Coq.Reals.RIneq.Ropp_gt_cancel	40	0.3.1	search with cache (only 1: intros; only 1: red; only 1: auto with real).	0.0477910041809	17
Coq.Reals.RIneq.Ropp_le_cancel	40	0.0.0.8	search with cache (only 1: intros x y H; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).	0.770784139633	479
Coq.Reals.RIneq.Ropp_ge_cancel	40
Coq.Reals.RIneq.Rmult_lt_compat_r	40	7.2.0	search with cache (only 1: intros; only 1: rewrite <- 2!(Rmult_comm r); only 1: auto with real).	0.715574979782	417
Coq.Reals.RIneq.Rmult_gt_compat_r	40	2.1.0.0.1	search with cache (only 1: unfold Rgt; only 1: intros; only 1: rewrite (Rmult_comm r2 r); only 1: rewrite (Rmult_comm r1 r); only 1: auto with real).	0.0854299068451	43
Coq.Reals.RIneq.Rmult_gt_compat_l	40	2.0.2	search with cache (only 1: unfold Rgt; only 1: intros; only 1: auto with real).	0.0401649475098	15
Coq.Reals.RIneq.Rmult_le_compat_l	40
Coq.Reals.RIneq.Rmult_le_compat_r	40
Coq.Reals.RIneq.Rmult_ge_compat_l	40	3.1.0.5.9	search with cache (only 1: intros r1 r2 H; only 1: edestruct Rle_or_lt; only 1: eauto with rorders; only 1: right; only 1: auto with real).	36.6954212189	28902
Coq.Reals.RIneq.Rmult_ge_compat_r	40	23	search with cache (only 1: intuition).	39.041490078	34315
Coq.Reals.RIneq.Rmult_le_compat	40
Coq.Reals.RIneq.Rmult_ge_compat	40	25	search with cache (only 1: intuition).	17.1467921734	13013
Coq.Reals.RIneq.Rmult_gt_0_lt_compat	40
Coq.Reals.RIneq.Rmult_le_0_lt_compat	40
Coq.Reals.RIneq.Rmult_lt_0_compat	40
Coq.Reals.RIneq.Rmult_le_compat_neg_l	40
Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	40	0	search with cache (only 1: auto with real rorders).	0.0283172130585	1
Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_r	40
Coq.Reals.RIneq.Rmult_gt_reg_l	40	5.0.0.0	search with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: auto with real).	0.0697209835052	24
Coq.Reals.RIneq.Rmult_le_reg_l	40
Coq.Reals.RIneq.Rmult_le_reg_r	40
Coq.Reals.RIneq.Rlt_minus	40
Coq.Reals.RIneq.Rgt_minus	40	0.0.4.0	search with cache (only 1: intros; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r).	0.075001001358	8
Coq.Reals.RIneq.Rlt_Rminus	40
Coq.Reals.RIneq.Rle_minus	40	0.6.1.0.0.12.0	search with cache (only 1: intros; only 1: elim H; only 1: auto with real; only 1: unfold Rminus; only 1: intro; only 1: destruct H0; only 1: auto with real).	29.757999897	19702
Coq.Reals.RIneq.Rge_minus	40
Coq.Reals.RIneq.Rminus_lt	40
Coq.Reals.RIneq.Rminus_gt	40	0.0.0.5.2.0.5	search with cache (only 1: red; only 1: intros; only 1: replace r2 with (0 + r2); only 1: replace r1 with (r1 - r2 + r2); only 1: auto with real; only 1: ring; only 1: auto with real).	3.23544287682	2933
Coq.Reals.RIneq.Rminus_gt_0_lt	40
Coq.Reals.RIneq.Rminus_le	40	0.0.0.0.4.2	search with cache (only 1: intros; only 1: replace r2 with (0 + r2); only 1: replace r1 with (r1 - r2 + r2); only 1: auto with real; only 1: ring; only 1: auto with real).	1.40056800842	657
Coq.Reals.RIneq.Rminus_ge	40
Coq.Reals.RIneq.tech_Rplus	40
Coq.Reals.RIneq.Rle_0_sqr	40
Coq.Reals.RIneq.Rlt_0_sqr	40
Coq.Reals.RIneq.Rplus_sqr_eq_0_l	40
Coq.Reals.RIneq.Rplus_sqr_eq_0	40
Coq.Reals.RIneq.Rlt_0_1	40	0.5.5	search with cache (only 1: replace 1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.163130044937	131
Coq.Reals.RIneq.Rle_0_1	40	0.6	search with cache (only 1: red; only 1: auto with real).	0.0319111347198	8
Coq.Reals.RIneq.Rinv_0_lt_compat	40
Coq.Reals.RIneq.Rinv_lt_0_compat	40	0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: red; only 1: intros; only 1: absurd (1 <= 0); only 1: auto with real; only 1: replace 1 with (r * / r); only 1: replace 0 with (r * 0); only 1: auto with real; only 1: auto with real; only 1: auto with real).	0.644384145737	178
Coq.Reals.RIneq.Rinv_lt_contravar	40
Coq.Reals.RIneq.Rinv_1_lt_contravar	40
Coq.Reals.RIneq.Rle_lt_0_plus_1	40	0.0.1.3	search with cache (only 1: intros; only 1: replace 0 with (0 + 0); only 1: auto with real; only 1: auto with real).	0.0739178657532	33
Coq.Reals.RIneq.Rlt_plus_1	40
Coq.Reals.RIneq.tech_Rgt_minus	40
Coq.Reals.RIneq.S_INR	40
Coq.Reals.RIneq.S_O_plus_INR	40
Coq.Reals.RIneq.plus_INR	40
Coq.Reals.RIneq.minus_INR	40
Coq.Reals.RIneq.mult_INR	40
Coq.Reals.RIneq.pow_INR	40
Coq.Reals.RIneq.lt_0_INR	40
Coq.Reals.RIneq.lt_INR	40
Coq.Reals.RIneq.lt_1_INR	40
Coq.Reals.RIneq.pos_INR_nat_of_P	40
Coq.Reals.RIneq.pos_INR	40	5.2.1.10.0	search with cache (only 1: intros; only 1: induction n as [| n Hrecn]; only 1: auto with real; only 1: repeat rewrite S_INR; only 1: auto with real).	12.2787790298	9405
Coq.Reals.RIneq.INR_lt	40
Coq.Reals.RIneq.le_INR	40	4.0.0.1.0.5	search with cache (only 1: apply le_elim_rel; only 1: intros; only 1: auto with real; only 1: intros; only 1: repeat rewrite S_INR; only 1: auto with real).	2.40487408638	2295
Coq.Reals.RIneq.INR_not_0	40	0.0.0.3.1	search with cache (only 1: intro; only 1: case n; only 1: intros; only 1: auto with arith; only 1: auto with real).	0.084578037262	24
Coq.Reals.RIneq.not_0_INR	40	0.4.3.4.5.3	search with cache (only 1: intro; only 1: case n; only 1: auto with real; only 1: intros; only 1: rewrite S_INR; only 1: auto with real).	13.9090840816	8051
Coq.Reals.RIneq.not_INR	40
Coq.Reals.RIneq.INR_eq	40
Coq.Reals.RIneq.INR_le	40
Coq.Reals.RIneq.not_1_INR	40	0.0.0.2	search with cache (only 1: red; only 1: intros n H H1; only 1: apply H; only 1: now apply not_INR in H).	0.794759988785	152
Coq.Reals.RIneq.IZN	40
Coq.Reals.RIneq.INR_IPR	40
Coq.Reals.RIneq.INR_IZR_INZ	40
Coq.Reals.RIneq.plus_IZR_NEG_POS	40
Coq.Reals.RIneq.plus_IZR	40
Coq.Reals.RIneq.mult_IZR	40
Coq.Reals.RIneq.pow_IZR	40
Coq.Reals.RIneq.succ_IZR	40	2.3.0.0.0.6.1.0.0	search with cache (only 1: intro t; only 1: destruct t; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: rewrite <- 3!INR_IPR, Pos2Nat.inj_add; only 1: apply plus_INR; only 1: rewrite Rplus_comm; only 1: apply plus_IZR_NEG_POS).	4.17404103279	4052
Coq.Reals.RIneq.opp_IZR	40	7.1.3.1.2.2	search with cache (only 1: intro z; only 1: case z; only 1: auto with real; only 1: auto with real; only 1: unfold IZR; only 1: auto with real).	4.39131498337	4280
Coq.Reals.RIneq.minus_IZR	40
Coq.Reals.RIneq.Z_R_minus	40
Coq.Reals.RIneq.lt_0_IZR	40
Coq.Reals.RIneq.lt_IZR	40
Coq.Reals.RIneq.eq_IZR_R0	40
Coq.Reals.RIneq.eq_IZR	40
Coq.Reals.RIneq.not_0_IZR	40
Coq.Reals.RIneq.le_0_IZR	40
Coq.Reals.RIneq.le_IZR	40
Coq.Reals.RIneq.le_IZR_R1	40
Coq.Reals.RIneq.IZR_ge	40
Coq.Reals.RIneq.IZR_le	40
Coq.Reals.RIneq.IZR_lt	40
Coq.Reals.RIneq.IZR_neq	40	0.0.0.0.0.0.3	search with cache (only 1: intro n; only 1: intros z H; only 1: red; only 1: intros H0; only 1: case H; only 1: apply eq_IZR; only 1: auto).	0.575003862381	125
Coq.Reals.RIneq.one_IZR_lt1	40
Coq.Reals.RIneq.one_IZR_r_R1	40
Coq.Reals.RIneq.single_z_r_R1	40	0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.2	search with cache (only 1: intros; only 1: apply Zminus_eq; only 1: apply one_IZR_lt1; only 1: rewrite <- Z_R_minus; only 1: split; only 1: replace (-1) with (r - (r + 1)); only 1: unfold Rminus; only 1: apply Rplus_lt_le_compat; only 1: auto with real; only 1: auto with real; only 1: ring; only 1: replace 1 with (r + 1 - r); only 1: unfold Rminus; only 1: apply Rplus_le_lt_compat; only 1: auto with real; only 1: auto with real; only 1: ring).	18.751584053	11701
Coq.Reals.RIneq.tech_single_z_r_R1	40
Coq.Reals.RIneq.Rmult_le_pos	40	0.2.10.2	search with cache (only 1: intros r r1 r2 H; only 1: replace 0 with (r * 0); only 1: auto with real; only 1: auto with real).	9.28955507278	4178
Coq.Reals.RIneq.Rinv_le_contravar	40
Coq.Reals.RIneq.Rle_Rinv	40
Coq.Reals.RIneq.Ropp_div	40
Coq.Reals.RIneq.double	40	7.10	search with cache (only 1: intro H1; only 1: ring).	0.24170088768	184
Coq.Reals.RIneq.double_var	40
Coq.Reals.RIneq.R_rm	40
Coq.Reals.RIneq.Zeq_bool_IZR	40
Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	40	1.1.2.0	search with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 * r3); only 1: auto with real; only 1: auto with real).	0.281355142593	78
Coq.Reals.RIneq.le_epsilon	40
Coq.Reals.RIneq.completeness_weak	40
Coq.Reals.RIneq.Rdiv_lt_0_compat	40	3.7.0.5.0	search with cache (only 1: intro; only 1: intros x y H; only 1: apply Rmult_lt_0_compat; only 1: auto; only 1: auto with real).	10.2040791512	7434
Coq.Reals.RIneq.Rdiv_plus_distr	40	6.0.1.0	search with cache (only 1: intro; only 1: intros x y; only 1: unfold Rdiv; only 1: ring).	0.373383998871	151
Coq.Reals.RIneq.Rdiv_minus_distr	40	8.0.1.2	search with cache (only 1: intro; only 1: intros x y; only 1: unfold Rdiv; only 1: ring).	0.656316041946	679
Coq.Reals.RIneq.Req_EM_T	40
Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40
Coq.Reals.ClassicalDedekindReals.lowerCutBelow	40
Coq.Reals.ClassicalDedekindReals.lowerCutAbove	40
Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40
Coq.Reals.ClassicalDedekindReals.DRealQlim	40
Coq.Reals.ClassicalDedekindReals.DRealAbstr	40
Coq.Reals.ClassicalDedekindReals.UpperAboveLower	40
Coq.Reals.ClassicalDedekindReals.DRealRepr	40
Coq.Reals.ClassicalDedekindReals.Rle_antisym	40
Coq.Reals.ClassicalDedekindReals.lowerUpper	40
Coq.Reals.ClassicalDedekindReals.DRealOpen	40
Coq.Reals.ClassicalDedekindReals.DRealReprQ	40
Coq.Reals.ClassicalDedekindReals.DRealReprQup	40
Coq.Reals.ClassicalDedekindReals.DRealQuot1	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	40
Coq.Reals.ClassicalDedekindReals.DRealQuot2	40
Coq.Reals.ArithProp.minus_neq_O	40	1.18	search with cache (only 1: fix even_odd_double 1; only 1: auto with arith).	1.4036090374	2348
Coq.Reals.ArithProp.le_minusni_n	40	6.8	search with cache (only 1: fix even_equiv 1; only 1: assumption).	1.92964792252	1993
Coq.Reals.ArithProp.lt_minus_O_lt	40
Coq.Reals.ArithProp.even_odd_cor	40	0.1.7.0	search with cache (only 1: simpl; only 1: fix even_odd_double 1; only 1: intros; only 1: auto with arith).	0.136965990067	116
Coq.Reals.ArithProp.le_double	40
Coq.Reals.ArithProp.euclidian_division	40
Coq.Reals.ArithProp.tech8	40	20.0	search with cache (only 1: intros; only 1: auto with arith).	4.03944897652	6270
Coq.Reals.R_Ifp.tech_up	40
Coq.Reals.R_Ifp.up_tech	40
Coq.Reals.R_Ifp.fp_R0	40
Coq.Reals.R_Ifp.for_base_fp	40
Coq.Reals.R_Ifp.base_fp	40
Coq.Reals.R_Ifp.base_Int_part	40
Coq.Reals.R_Ifp.Int_part_INR	40
Coq.Reals.R_Ifp.fp_nat	40
Coq.Reals.R_Ifp.R0_fp_O	40
Coq.Reals.R_Ifp.Rminus_Int_part1	40
Coq.Reals.R_Ifp.Rminus_Int_part2	40
Coq.Reals.R_Ifp.Rminus_fp1	40
Coq.Reals.R_Ifp.Rminus_fp2	40
Coq.Reals.R_Ifp.plus_Int_part1	40
Coq.Reals.R_Ifp.plus_Int_part2	40
Coq.Reals.R_Ifp.plus_frac_part1	40
Coq.Reals.R_Ifp.plus_frac_part2	40
Coq.Reals.Machin.atan_sub_correct	40
Coq.Reals.Machin.tech	40
Coq.Reals.Machin.Machin_2_3	40
Coq.Reals.Machin.Machin_4_5_239	40
Coq.Reals.Machin.Machin_2_3_7	40
Coq.Reals.Machin.PI_2_3_7_ineq	40
Coq.Reals.RiemannInt.phi_sequence_prop	40
Coq.Reals.RiemannInt.RiemannInt_P1	40
Coq.Reals.RiemannInt.RiemannInt_P2	40
Coq.Reals.RiemannInt.RiemannInt_P3	40
Coq.Reals.RiemannInt.RiemannInt_exists	40
Coq.Reals.RiemannInt.RiemannInt_P4	40
Coq.Reals.RiemannInt.RinvN_pos	40	97	search with cache (only 1: auto with real).	3.19987201691	20047
Coq.Reals.RiemannInt.RinvN_cv	40
Coq.Reals.RiemannInt.Riemann_integrable_ext	40
Coq.Reals.RiemannInt.RiemannInt_P5	40
Coq.Reals.RiemannInt.maxN	40
Coq.Reals.RiemannInt.Heine_cor1	40
Coq.Reals.RiemannInt.Heine_cor2	40
Coq.Reals.RiemannInt.SubEqui_P1	40	1.1.0	search with cache (only 1: intros; only 1: simpl; only 1: reflexivity).	0.0298500061035	5
Coq.Reals.RiemannInt.SubEqui_P2	40
Coq.Reals.RiemannInt.SubEqui_P3	40
Coq.Reals.RiemannInt.SubEqui_P4	40
Coq.Reals.RiemannInt.SubEqui_P5	40
Coq.Reals.RiemannInt.SubEqui_P6	40
Coq.Reals.RiemannInt.SubEqui_P7	40
Coq.Reals.RiemannInt.SubEqui_P8	40
Coq.Reals.RiemannInt.SubEqui_P9	40
Coq.Reals.RiemannInt.RiemannInt_P6	40
Coq.Reals.RiemannInt.RiemannInt_P7	40
Coq.Reals.RiemannInt.continuity_implies_RiemannInt	40
Coq.Reals.RiemannInt.RiemannInt_P8	40
Coq.Reals.RiemannInt.RiemannInt_P9	40
Coq.Reals.RiemannInt.RiemannInt_P10	40
Coq.Reals.RiemannInt.RiemannInt_P11	40
Coq.Reals.RiemannInt.RiemannInt_P12	40
Coq.Reals.RiemannInt.RiemannInt_P13	40
Coq.Reals.RiemannInt.RiemannInt_P14	40
Coq.Reals.RiemannInt.RiemannInt_P15	40
Coq.Reals.RiemannInt.RiemannInt_P16	40
Coq.Reals.RiemannInt.Rle_cv_lim	40
Coq.Reals.RiemannInt.RiemannInt_P17	40
Coq.Reals.RiemannInt.RiemannInt_P18	40
Coq.Reals.RiemannInt.RiemannInt_P19	40
Coq.Reals.RiemannInt.FTC_P1	40
Coq.Reals.RiemannInt.RiemannInt_P20	40
Coq.Reals.RiemannInt.RiemannInt_P21	40
Coq.Reals.RiemannInt.RiemannInt_P22	40
Coq.Reals.RiemannInt.RiemannInt_P23	40
Coq.Reals.RiemannInt.RiemannInt_P24	40
Coq.Reals.RiemannInt.RiemannInt_P25	40
Coq.Reals.RiemannInt.RiemannInt_P26	40
Coq.Reals.RiemannInt.RiemannInt_P27	40
Coq.Reals.RiemannInt.RiemannInt_P28	40
Coq.Reals.RiemannInt.RiemannInt_P29	40
Coq.Reals.RiemannInt.RiemannInt_P30	40
Coq.Reals.RiemannInt.RiemannInt_P31	40
Coq.Reals.RiemannInt.RiemannInt_P32	40
Coq.Reals.RiemannInt.RiemannInt_P33	40
Coq.Reals.RiemannInt.FTC_Riemann	40
Coq.Reals.RiemannInt.RiemannInt_const_bound	40
Coq.Reals.RiemannInt.Riemann_integrable_scal	40
Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40
Coq.Reals.Ranalysis2.formule	40
Coq.Reals.Ranalysis2.maj_term1	40
Coq.Reals.Ranalysis2.maj_term2	40
Coq.Reals.Ranalysis2.maj_term3	40
Coq.Reals.Ranalysis2.maj_term4	40
Coq.Reals.Ranalysis2.D_x_no_cond	40
Coq.Reals.Ranalysis2.Rabs_4	40
Coq.Reals.Ranalysis2.Rlt_4	40
Coq.Reals.Ranalysis2.quadruple	40	0.0	search with cache (only 1: intros; only 1: assumption || ring).	0.0363011360168	2
Coq.Reals.Ranalysis2.quadruple_var	40	7.0	search with cache (only 1: intros; only 1: field).	0.17863702774	22
Coq.Reals.Ranalysis2.continuous_neq_0	40
Coq.Reals.Rtopology.interior_P1	40
Coq.Reals.Rtopology.interior_P2	40	21.1	search with cache (only 1: unfold included; only 1: easy).	0.807651042938	3948
Coq.Reals.Rtopology.adherence_P1	40
Coq.Reals.Rtopology.included_trans	40	5.18.2	search with cache (only 1: unfold included; only 1: intros Ext A P Q Eq; only 1: eauto).	2.30098319054	10993
Coq.Reals.Rtopology.interior_P3	40
Coq.Reals.Rtopology.complementary_P1	40	9.19.2	search with cache (only 1: unfold not; only 1: unfold intersection_domain; only 1: firstorder).	1.23830199242	6056
Coq.Reals.Rtopology.adherence_P2	40
Coq.Reals.Rtopology.adherence_P3	40
Coq.Reals.Rtopology.open_set_P1	40
Coq.Reals.Rtopology.closed_set_P1	40
Coq.Reals.Rtopology.neighbourhood_P1	40
Coq.Reals.Rtopology.open_set_P2	40
Coq.Reals.Rtopology.open_set_P3	40
Coq.Reals.Rtopology.open_set_P4	40	6.3.7.0	search with cache (only 1: unfold open_set, complementary, point_adherent; only 1: unfold included, neighbourhood; only 1: intros; only 1: elim H).	0.705152988434	1976
Coq.Reals.Rtopology.open_set_P5	40
Coq.Reals.Rtopology.disc_P1	40
Coq.Reals.Rtopology.continuity_P1	40
Coq.Reals.Rtopology.continuity_P2	40
Coq.Reals.Rtopology.continuity_P3	40
Coq.Reals.Rtopology.Rsepare	40
Coq.Reals.Rtopology.restriction_family	40
Coq.Reals.Rtopology.family_P1	40
Coq.Reals.Rtopology.open_set_P6	40
Coq.Reals.Rtopology.compact_P1	40
Coq.Reals.Rtopology.compact_P2	40
Coq.Reals.Rtopology.compact_EMP	40
Coq.Reals.Rtopology.compact_eqDom	40
Coq.Reals.Rtopology.compact_P3	40
Coq.Reals.Rtopology.compact_P4	40
Coq.Reals.Rtopology.compact_P5	40
Coq.Reals.Rtopology.compact_carac	40
Coq.Reals.Rtopology.continuity_compact	40
Coq.Reals.Rtopology.prolongement_C0	40
Coq.Reals.Rtopology.continuity_ab_maj	40
Coq.Reals.Rtopology.continuity_ab_min	40
Coq.Reals.Rtopology.ValAdh_un_exists	40
Coq.Reals.Rtopology.ValAdh_un_prop	40
Coq.Reals.Rtopology.adherence_P4	40
Coq.Reals.Rtopology.compact_P6	40
Coq.Reals.Rtopology.Bolzano_Weierstrass	40
Coq.Reals.Rtopology.is_lub_u	40
Coq.Reals.Rtopology.domain_P1	40
Coq.Reals.Rtopology.Heine	40
Coq.Reals.Raxioms.Rrepr_0	40
Coq.Reals.Raxioms.Rrepr_1	40
Coq.Reals.Raxioms.Rrepr_plus	40
Coq.Reals.Raxioms.Rrepr_opp	40
Coq.Reals.Raxioms.Rrepr_minus	40
Coq.Reals.Raxioms.Rrepr_mult	40
Coq.Reals.Raxioms.Rrepr_inv	40
Coq.Reals.Raxioms.Rrepr_le	40
Coq.Reals.Raxioms.Rrepr_appart	40
Coq.Reals.Raxioms.Rappart_repr	40
Coq.Reals.Raxioms.Rplus_comm	40
Coq.Reals.Raxioms.Rplus_assoc	40
Coq.Reals.Raxioms.Rplus_opp_r	40
Coq.Reals.Raxioms.Rplus_0_l	40
Coq.Reals.Raxioms.Rmult_comm	40
Coq.Reals.Raxioms.Rmult_assoc	40
Coq.Reals.Raxioms.Rinv_l	40
Coq.Reals.Raxioms.Rmult_1_l	40
Coq.Reals.Raxioms.R1_neq_R0	40
Coq.Reals.Raxioms.Rmult_plus_distr_l	40
Coq.Reals.Raxioms.Rlt_asym	40
Coq.Reals.Raxioms.Rlt_trans	40
Coq.Reals.Raxioms.Rplus_lt_compat_l	40
Coq.Reals.Raxioms.Rmult_lt_compat_l	40
Coq.Reals.Raxioms.Rrepr_INR	40
Coq.Reals.Raxioms.Rrepr_IPR2	40
Coq.Reals.Raxioms.Rrepr_IPR	40
Coq.Reals.Raxioms.Rrepr_IZR	40
Coq.Reals.Raxioms.archimed	40
Coq.Reals.Raxioms.completeness	40
Coq.Reals.Rseries.EUn_noempty	40
Coq.Reals.Rseries.Un_in_EUn	40	0.2.19.2	search with cache (only 1: unfold EUn; only 1: intros N; only 1: exists N; only 1: trivial).	9.78994107246	12126
Coq.Reals.Rseries.Un_bound_imp	40
Coq.Reals.Rseries.growing_prop	40
Coq.Reals.Rseries.Un_cv_crit_lub	40
Coq.Reals.Rseries.Un_cv_crit	40
Coq.Reals.Rseries.finite_greater	40
Coq.Reals.Rseries.cauchy_bound	40
Coq.Reals.Rseries.GP_infinite	40
Coq.Reals.Rseries.CV_shift	40
Coq.Reals.Rseries.CV_shift'	40	0.0.6.0.0.2.2.0	search with cache (only 1: intros f' k l cvfk eps ep; only 1: destruct (cvfk eps ep) as [N Pn]; only 1: exists (N + k)%nat; only 1: intros n nN; only 1: apply Pn; only 1: apply Nat.le_trans with (N + k)%nat; only 1: auto with arith; only 1: auto with arith).	0.985494852066	1187
Coq.Reals.Rseries.Un_growing_shift	40	6.0.1.1.16	search with cache (only 1: intros m n H; only 1: intro H'; only 1: rewrite plus_Snm_nSm; only 1: rewrite <- plus_n_Sm; only 1: auto with arith).	1.45666313171	2537
Coq.Reals.Binomial.pascal_step1	40
Coq.Reals.Binomial.pascal_step2	40
Coq.Reals.Binomial.pascal_step3	40
Coq.Reals.Binomial.pascal	40
Coq.Reals.Binomial.binomial	40
Coq.Reals.PSeries_reg.Boule_convex	40
Coq.Reals.PSeries_reg.boule_of_interval	40
Coq.Reals.PSeries_reg.boule_in_interval	40
Coq.Reals.PSeries_reg.Ball_in_inter	40
Coq.Reals.PSeries_reg.Boule_center	40
Coq.Reals.PSeries_reg.CVN_CVU	40
Coq.Reals.PSeries_reg.CVU_continuity	40
Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40
Coq.Reals.PSeries_reg.SFL_continuity_pt	40
Coq.Reals.PSeries_reg.SFL_continuity	40
Coq.Reals.PSeries_reg.CVN_R_CVS	40
Coq.Reals.PSeries_reg.CVU_cv	40
Coq.Reals.PSeries_reg.CVU_ext_lim	40
Coq.Reals.PSeries_reg.CVU_derivable	40
Coq.Reals.Ranalysis_reg.AppVar	40
Coq.Reals.MVT.MVT	40
Coq.Reals.MVT.MVT_cor1	40
Coq.Reals.MVT.MVT_cor2	40
Coq.Reals.MVT.MVT_cor3	40
Coq.Reals.MVT.Rolle	40
Coq.Reals.MVT.nonneg_derivative_1	40
Coq.Reals.MVT.nonpos_derivative_0	40
Coq.Reals.MVT.increasing_decreasing_opp	40
Coq.Reals.MVT.nonpos_derivative_1	40
Coq.Reals.MVT.positive_derivative	40
Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	40
Coq.Reals.MVT.negative_derivative	40
Coq.Reals.MVT.null_derivative_0	40
Coq.Reals.MVT.increasing_decreasing	40
Coq.Reals.MVT.null_derivative_1	40
Coq.Reals.MVT.derive_increasing_interv_ax	40
Coq.Reals.MVT.derive_increasing_interv	40
Coq.Reals.MVT.derive_increasing_interv_var	40
Coq.Reals.MVT.IAF	40
Coq.Reals.MVT.IAF_var	40
Coq.Reals.MVT.null_derivative_loc	40
Coq.Reals.MVT.antiderivative_Ucte	40
Coq.Reals.MVT.MVT_abs	40
Coq.Reals.Ranalysis1.continuity_pt_locally_ext	40
Coq.Reals.Ranalysis1.continuity_pt_plus	40
Coq.Reals.Ranalysis1.continuity_pt_opp	40
Coq.Reals.Ranalysis1.continuity_pt_minus	40	0.2.0.0.0.0.0	search with cache (only 1: unfold continuity_pt, plus_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_plus; only 1: assumption; only 1: apply limit_Ropp; only 1: assumption).	0.0434181690216	9
Coq.Reals.Ranalysis1.continuity_pt_mult	40
Coq.Reals.Ranalysis1.continuity_pt_const	40
Coq.Reals.Ranalysis1.continuity_pt_scal	40
Coq.Reals.Ranalysis1.continuity_pt_inv	40
Coq.Reals.Ranalysis1.div_eq_inv	40	7	search with cache (only 1: reflexivity).	0.110217094421	75
Coq.Reals.Ranalysis1.continuity_pt_div	40	0.0.5.0.2.0	search with cache (only 1: intros; only 1: apply limit_mul; only 1: assumption; only 1: apply limit_inv; only 1: assumption; only 1: assumption).	0.622533082962	168
Coq.Reals.Ranalysis1.continuity_pt_comp	40
Coq.Reals.Ranalysis1.continuity_plus	40	7.0.0.15.0.0	search with cache (only 1: unfold continuity_pt, plus_fct; only 1: intros; only 1: intro; only 1: apply limit_plus; only 1: apply H; only 1: apply H0).	7.61376714706	8107
Coq.Reals.Ranalysis1.continuity_opp	40	1.0.0.0.0.0	search with cache (only 1: unfold continuity; only 1: unfold continuity_pt, opp_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_Ropp; only 1: apply H).	0.0331420898438	7
Coq.Reals.Ranalysis1.continuity_minus	40	8.0.1.0.0.0	search with cache (only 1: unfold continuity_pt, minus_fct; only 1: unfold continuity; only 1: intros; only 1: apply limit_minus; only 1: apply H; only 1: apply H0).	7.97843003273	4129
Coq.Reals.Ranalysis1.continuity_mult	40	7.0.0.0.0.0.2	search with cache (only 1: unfold continuity; only 1: unfold continuity_pt, mult_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_mul; only 1: apply H; only 1: apply H0).	9.48544692993	4977
Coq.Reals.Ranalysis1.continuity_const	40	0.0.1.0.0.0.0.0.0.2.0.0.1.0	search with cache (only 1: unfold constant, continuity_pt; only 1: intros; only 1: unfold continuity; only 1: unfold continuity_pt, minus_fct; only 1: exists 1; only 1: split; only 1: apply Rlt_0_1; only 1: intros; only 1: generalize (H x x0); only 1: intro; only 1: rewrite H2; only 1: simpl; only 1: rewrite R_dist_eq; only 1: assumption).	23.1216518879	11986
Coq.Reals.Ranalysis1.continuity_scal	40
Coq.Reals.Ranalysis1.continuity_inv	40
Coq.Reals.Ranalysis1.continuity_div	40
Coq.Reals.Ranalysis1.continuity_comp	40
Coq.Reals.Ranalysis1.uniqueness_step1	40
Coq.Reals.Ranalysis1.uniqueness_step2	40
Coq.Reals.Ranalysis1.uniqueness_step3	40
Coq.Reals.Ranalysis1.uniqueness_limite	40
Coq.Reals.Ranalysis1.derive_pt_eq	40
Coq.Reals.Ranalysis1.derive_pt_eq_0	40	1.0.0.0.1.0.2.0	search with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).	1.42123985291	773
Coq.Reals.Ranalysis1.derive_pt_eq_1	40	0.0.0.1.0	search with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derive_pt in H; only 1: rewrite H in H1; only 1: assumption).	0.0439829826355	14
Coq.Reals.Ranalysis1.derive_pt_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_ext	40
Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40
Coq.Reals.Ranalysis1.derivable_derive	40
Coq.Reals.Ranalysis1.derivable_continuous_pt	40
Coq.Reals.Ranalysis1.derivable_continuous	40
Coq.Reals.Ranalysis1.derivable_pt_lim_plus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40
Coq.Reals.Ranalysis1.derivable_pt_lim_const	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	40
Coq.Reals.Ranalysis1.derivable_pt_lim_id	40
Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_lim_comp	40
Coq.Reals.Ranalysis1.derivable_pt_plus	40
Coq.Reals.Ranalysis1.derivable_pt_opp	40
Coq.Reals.Ranalysis1.derivable_pt_minus	40
Coq.Reals.Ranalysis1.derivable_pt_mult	40
Coq.Reals.Ranalysis1.derivable_pt_const	40
Coq.Reals.Ranalysis1.derivable_pt_scal	40
Coq.Reals.Ranalysis1.derivable_pt_id	40
Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_comp	40
Coq.Reals.Ranalysis1.derivable_plus	40
Coq.Reals.Ranalysis1.derivable_opp	40
Coq.Reals.Ranalysis1.derivable_minus	40
Coq.Reals.Ranalysis1.derivable_mult	40
Coq.Reals.Ranalysis1.derivable_const	40	0.2.1.0.1.0	search with cache (only 1: intros; only 1: unfold fct_cte, derivable_pt_lim; only 1: unfold derivable, continuity; only 1: unfold derivable_pt; only 1: exists 0; only 1: apply derivable_pt_lim_const).	0.0381059646606	13
Coq.Reals.Ranalysis1.derivable_scal	40
Coq.Reals.Ranalysis1.derivable_id	40	0.0.0.0	search with cache (only 1: unfold derivable, continuity; only 1: unfold derivable_pt; only 1: exists 1; only 1: apply derivable_pt_lim_id).	0.0242049694061	4
Coq.Reals.Ranalysis1.derivable_Rsqr	40	0.0.0.4	search with cache (only 1: intro; only 1: unfold derivable_pt; only 1: exists (2 * x); only 1: apply derivable_pt_lim_Rsqr).	0.0289168357849	16
Coq.Reals.Ranalysis1.derivable_comp	40
Coq.Reals.Ranalysis1.derive_pt_plus	40
Coq.Reals.Ranalysis1.derive_pt_opp	40	3.2.8.0.3	search with cache (only 1: unfold derivable_pt; only 1: intros f x X; only 1: apply derive_pt_eq_0; only 1: elim X; only 1: apply derivable_pt_lim_opp).	6.08121395111	6433
Coq.Reals.Ranalysis1.derive_pt_minus	40
Coq.Reals.Ranalysis1.derive_pt_mult	40
Coq.Reals.Ranalysis1.derive_pt_const	40	0.0.0.0.0.0.0.0.0.0.0.10.0.0.0	search with cache (only 1: intro; only 1: intro; only 1: unfold fct_cte, derivable_pt_lim; only 1: apply derive_pt_eq_0; only 1: unfold fct_cte, derivable_pt_lim; only 1: intros; only 1: exists {| pos := 1; cond_pos := Rlt_0_1 |}; only 1: intros; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: unfold Rdiv; only 1: rewrite Rmult_0_l; only 1: rewrite Rplus_opp_r; only 1: rewrite Rabs_R0; only 1: assumption).	7.34376478195	5714
Coq.Reals.Ranalysis1.derive_pt_scal	40
Coq.Reals.Ranalysis1.derive_pt_id	40	6.26.3	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_id).	2.49307584763	5287
Coq.Reals.Ranalysis1.derive_pt_Rsqr	40	3.29.0	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).	4.02156305313	5080
Coq.Reals.Ranalysis1.derive_pt_comp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40
Coq.Reals.Ranalysis1.derivable_pt_pow	40
Coq.Reals.Ranalysis1.derivable_pow	40	0.0.0.16.1	search with cache (only 1: intros; only 1: intro; only 1: unfold derivable_pt; only 1: exists (INR n * x ^ Init.Nat.pred n); only 1: apply derivable_pt_lim_pow).	3.37500691414	4566
Coq.Reals.Ranalysis1.derive_pt_pow	40
Coq.Reals.Ranalysis1.pr_nu	40
Coq.Reals.Ranalysis1.deriv_maximum	40
Coq.Reals.Ranalysis1.deriv_minimum	40
Coq.Reals.Ranalysis1.deriv_constant2	40
Coq.Reals.Ranalysis1.nonneg_derivative_0	40
Coq.Reals.SeqProp.growing_cv	40
Coq.Reals.SeqProp.decreasing_growing	40
Coq.Reals.SeqProp.decreasing_cv	40
Coq.Reals.SeqProp.ub_to_lub	40
Coq.Reals.SeqProp.lb_to_glb	40
Coq.Reals.SeqProp.maj_ss	40
Coq.Reals.SeqProp.min_ss	40	0.0.0.1.0.0.0.3.0.0.3.0	search with cache (only 1: intros; only 1: elim H; only 1: intros; only 1: unfold is_upper_bound in H0; only 1: exists x; only 1: unfold is_upper_bound; only 1: intros; only 1: apply H0; only 1: elim H1; only 1: intros; only 1: exists (k + x1)%nat; only 1: assumption).	1.74308013916	1545
Coq.Reals.SeqProp.Wn_decreasing	40
Coq.Reals.SeqProp.Vn_growing	40
Coq.Reals.SeqProp.Vn_Un_Wn_order	40
Coq.Reals.SeqProp.min_maj	40
Coq.Reals.SeqProp.maj_min	40
Coq.Reals.SeqProp.cauchy_maj	40
Coq.Reals.SeqProp.cauchy_opp	40
Coq.Reals.SeqProp.cauchy_min	40	0.0.0.0.0.0.0.0.0.0.1.0.0.1.1.0	search with cache (only 1: intros; only 1: apply cauchy_bound; only 1: unfold Cauchy_crit; only 1: unfold R_dist; only 1: intros; only 1: elim (H eps H0); only 1: intros; only 1: exists x; only 1: intros; only 1: unfold opp_seq; only 1: rewrite <- Rabs_Ropp; only 1: replace (- (- Un n - - Un m)) with (Un n - Un m); only 1: apply H1; only 1: assumption; only 1: assumption; only 1: ring).	17.3422629833	10737
Coq.Reals.SeqProp.maj_cv	40
Coq.Reals.SeqProp.min_cv	40
Coq.Reals.SeqProp.cond_eq	40
Coq.Reals.SeqProp.not_Rlt	40
Coq.Reals.SeqProp.approx_maj	40
Coq.Reals.SeqProp.approx_min	40
Coq.Reals.SeqProp.UL_sequence	40
Coq.Reals.SeqProp.CV_plus	40
Coq.Reals.SeqProp.cv_cvabs	40
Coq.Reals.SeqProp.CV_Cauchy	40
Coq.Reals.SeqProp.maj_by_pos	40
Coq.Reals.SeqProp.CV_mult	40
Coq.Reals.SeqProp.tech9	40
Coq.Reals.SeqProp.tech13	40
Coq.Reals.SeqProp.growing_ineq	40
Coq.Reals.SeqProp.CV_opp	40
Coq.Reals.SeqProp.decreasing_ineq	40
Coq.Reals.SeqProp.CV_minus	40
Coq.Reals.SeqProp.cv_infty_cv_R0	40
Coq.Reals.SeqProp.decreasing_prop	40
Coq.Reals.SeqProp.cv_speed_pow_fact	40
Coq.Reals.Rcomplete.R_complete	40
Coq.Reals.Rtrigo_calc.tan_PI	40	2.17.0.105	search with cache (only 1: unfold tan; only 1: rewrite sin_PI; only 1: unfold Rdiv; only 1: ring).	28.2203168869	70167
Coq.Reals.Rtrigo_calc.sin_3PI2	40
Coq.Reals.Rtrigo_calc.tan_2PI	40
Coq.Reals.Rtrigo_calc.sin_cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI3_cos_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI6_cos_PI3	40
Coq.Reals.Rtrigo_calc.PI6_RGT_0	40
Coq.Reals.Rtrigo_calc.PI6_RLT_PI2	40
Coq.Reals.Rtrigo_calc.sin_PI6	40
Coq.Reals.Rtrigo_calc.sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.sqrt3_2_neq_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt3_0	40
Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	15.0.0.0.9	search with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	1.81884098053	1191
Coq.Reals.Rtrigo_calc.cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI4	40
Coq.Reals.Rtrigo_calc.tan_PI4	40
Coq.Reals.Rtrigo_calc.cos_3PI4	40
Coq.Reals.Rtrigo_calc.sin_3PI4	40
Coq.Reals.Rtrigo_calc.cos_PI6	40
Coq.Reals.Rtrigo_calc.tan_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI3	40	10.3.1.6	search with cache (only 1: rewrite sin_PI3_cos_PI6; only 1: rewrite cos_PI6; only 1: unfold Rdiv; only 1: ring).	7.57285189629	5811
Coq.Reals.Rtrigo_calc.cos_PI3	40
Coq.Reals.Rtrigo_calc.tan_PI3	40	14.0.10.1.3.0	search with cache (only 1: unfold tan; only 1: rewrite sin_PI3_cos_PI6; only 1: rewrite cos_PI6; only 1: rewrite sin_PI6_cos_PI3; only 1: rewrite sin_PI6; only 1: field).	31.4641311169	24032
Coq.Reals.Rtrigo_calc.sin_2PI3	40
Coq.Reals.Rtrigo_calc.cos_2PI3	40
Coq.Reals.Rtrigo_calc.tan_2PI3	40
Coq.Reals.Rtrigo_calc.cos_5PI4	40
Coq.Reals.Rtrigo_calc.sin_5PI4	40	0.5.3.6.0.0.1.0	search with cache (only 1: replace (5 * (PI / 4)) with (PI / 4 + PI) by field; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: rewrite cos_PI4; only 1: rewrite sin_PI4; only 1: unfold Rdiv; only 1: ring).	18.1812000275	6257
Coq.Reals.Rtrigo_calc.sin_cos5PI4	40	0.0.0.0.0.0.0	search with cache (only 1: replace (5 * (PI / 4)) with (PI / 4 + PI) by field; only 1: rewrite neg_cos; only 1: rewrite neg_sin; only 1: rewrite cos_PI4; only 1: rewrite sin_PI4; only 1: unfold Rdiv; only 1: ring).	0.0691621303558	7
Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40
Coq.Reals.Rtrigo_calc.Rgt_2PI_0	40	0.15.0	search with cache (only 1: apply Rmult_lt_0_compat; only 1: prove_sup0; only 1: apply PI_RGT_0).	0.762273073196	882
Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40
Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40
Coq.Reals.Rtrigo_calc.rad_deg	40
Coq.Reals.Rtrigo_calc.toRad_inj	40
Coq.Reals.Rtrigo_calc.deg_rad	40
Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40
Coq.Reals.Rtrigo_calc.sin_lb_ge_0	40
Coq.Reals.Ranalysis4.derivable_pt_inv	40
Coq.Reals.Ranalysis4.pr_nu_var	40
Coq.Reals.Ranalysis4.pr_nu_var2	40
Coq.Reals.Ranalysis4.derivable_inv	40
Coq.Reals.Ranalysis4.derive_pt_inv	40
Coq.Reals.Ranalysis4.Rabs_derive_1	40
Coq.Reals.Ranalysis4.Rabs_derive_2	40
Coq.Reals.Ranalysis4.Rderivable_pt_abs	40
Coq.Reals.Ranalysis4.Rcontinuity_abs	40
Coq.Reals.Ranalysis4.continuity_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40
Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_finite_sum	40
Coq.Reals.Ranalysis4.derivable_finite_sum	40	0.0.0.0.0.1.0.7.0	search with cache (only 1: intros; only 1: intro; only 1: unfold derivable_pt; only 1: pose proof (derivable_pt_lim_finite_sum An x N) as H; only 1: induction N as [| N HrecN]; only 1: exists 0; only 1: apply H; only 1: exists (sum_f_R0 (fun k : nat => INR (S k) * An (S k) * x ^ k) (Init.Nat.pred (S N))); only 1: apply H).	0.963420152664	904
Coq.Reals.Ranalysis4.derivable_pt_lim_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_lim_sinh	40
Coq.Reals.Ranalysis4.derivable_pt_exp	40
Coq.Reals.Ranalysis4.derivable_pt_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_sinh	40
Coq.Reals.Ranalysis4.derivable_exp	40	0.0.0.0.2	search with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (exp x); only 1: apply derivable_pt_lim_exp).	0.0143938064575	7
Coq.Reals.Ranalysis4.derivable_cosh	40	0.0.0.0.2	search with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (sinh x); only 1: apply derivable_pt_lim_cosh).	0.0127429962158	7
Coq.Reals.Ranalysis4.derivable_sinh	40	0.0.0.0.2	search with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (cosh x); only 1: apply derivable_pt_lim_sinh).	0.0130288600922	7
Coq.Reals.Ranalysis4.derive_pt_exp	40
Coq.Reals.Ranalysis4.derive_pt_cosh	40	2.0.0	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cosh).	0.360210895538	110
Coq.Reals.Ranalysis4.derive_pt_sinh	40	3.0.0	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).	0.369213819504	113
Coq.Reals.Ranalysis4.sinh_lt	40
Coq.Reals.Ranalysis3.derivable_pt_lim_div	40
Coq.Reals.Ranalysis3.derivable_pt_div	40
Coq.Reals.Ranalysis3.derivable_div	40
Coq.Reals.Ranalysis3.derive_pt_div	40
Coq.Reals.DiscrR.Rlt_R0_R2	40
Coq.Reals.DiscrR.IZR_eq	40	0.5.0.10.10.16	search with cache (only 1: generalize 1%positive; only 1: generalize 1%positive; only 1: generalize 1%positive; only 1: intros; only 1: rewrite H2 in *; only 1: reflexivity).	10.4420068264	7544
Coq.Reals.ConstructiveReals.CRlt_asym	40
Coq.Reals.ConstructiveReals.CRlt_proper	40
Coq.Reals.ConstructiveReals.CRle_refl	40
Coq.Reals.ConstructiveReals.CRle_lt_trans	40
Coq.Reals.ConstructiveReals.CRlt_le_trans	40
Coq.Reals.ConstructiveReals.CRle_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans	40	3.19.12	search with cache (only 1: intro; only 1: destruct (CRltLinear R), p; only 1: apply c).	21.6518249512	23658
Coq.Reals.ConstructiveReals.CRlt_trans_flip	40
Coq.Reals.ConstructiveReals.CReq_refl	40	1.3.7.1.3.7.9.1	search with cache (only 1: intros; only 1: split; only 1: intro; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H); only 1: intro; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H)).	2.24037194252	10266
Coq.Reals.ConstructiveReals.CReq_sym	40
Coq.Reals.ConstructiveReals.CReq_trans	40
Coq.Reals.ConstructiveReals.CR_setoid	40
Coq.Reals.ConstructiveReals.CRplus_0_r	40
Coq.Reals.ConstructiveReals.CRmult_1_r	40
Coq.Reals.ConstructiveReals.CRplus_opp_l	40
Coq.Reals.ConstructiveReals.CRplus_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_l	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_le_reg_l	40	4.2.8.0.0	search with cache (only 1: intros; only 1: intros abs; only 1: apply H; only 1: apply CRplus_lt_compat_l; only 1: exact abs).	0.647422075272	960
Coq.Reals.ConstructiveReals.CRplus_le_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_le_compat	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_l	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_r	40
Coq.Reals.ConstructiveReals.CRopp_involutive	40
Coq.Reals.ConstructiveReals.CRopp_gt_lt_contravar	40
Coq.Reals.ConstructiveReals.CRopp_lt_cancel	40
Coq.Reals.ConstructiveReals.CRopp_plus_distr	40
Coq.Reals.ConstructiveReals.CRmult_plus_distr_l	40
Coq.Reals.ConstructiveReals.CRzero_double	40
Coq.Reals.ConstructiveReals.CRmult_0_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_l	40
Coq.Reals.ConstructiveReals.CRmult_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRinv_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_r	40
Coq.Reals.ConstructiveReals.CRmult_eq_reg_r	40
Coq.Reals.ConstructiveReals.CR_of_Q_proper	40
Coq.Reals.ConstructiveReals.CR_of_Q_zero	40
Coq.Reals.ConstructiveReals.CR_of_Q_opp	40
Coq.Reals.ConstructiveReals.CR_of_Q_le	40
Coq.Reals.ConstructiveReals.CR_of_Q_pos	40
Coq.Reals.ConstructiveReals.CR_cv_above_rat	40
Coq.Reals.ConstructiveReals.CR_cv_below_rat	40
Coq.Reals.ConstructiveReals.CR_cv_const	40
Coq.Reals.ConstructiveCauchyRealsMult.BoundFromZero	40
Coq.Reals.ConstructiveCauchyRealsMult.QCauchySeq_bounded	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_cauchy	40
Coq.Reals.ConstructiveCauchyRealsMult.linear_max	40	2.0.1.1.0.0.0.1.1.9	search with cache (only 1: intros k p q H H0; only 1: rewrite Pos2Nat.inj_mul; only 1: simpl; only 1: rewrite max_l; only 1: apply Nat.mul_le_mono_nonneg; only 1: apply Nat.le_0_l; only 1: apply Nat.le_refl; only 1: apply Nat.le_0_l; only 1: assumption; only 1: apply Nat.le_refl).	8.30971097946	11309
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult	40	74.0	search with cache (only 1: destruct x as [xn limx]; only 1: auto).	1.88778400421	10928
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_unfold	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc_bounded_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_comm	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_proper_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRingExt	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRing	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_T	40	2	search with cache (only 1: apply CReal_isRingExt).	6.34038591385	297
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40	7	search with cache (only 1: apply CReal_isRingExt).	34.9476399422	312
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_T	40	0	search with cache (only 1: apply CReal_isRingExt).	0.577538013458	1
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_T	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0160670280457	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_r	40	0.2	search with cache (only 1: intro; only 1: ring).	0.616750955582	131
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0171089172363	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealArchimedean	40
Coq.Reals.ConstructiveCauchyRealsMult.Rup_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealLtDisjunctEpsilon	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftReal	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftEqual	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealNegShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealPosShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_neg	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv	40	28	search with cache (only 1: assumption).	15.8078379631	13337
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift_eq	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_1	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	40
Coq.Reals.ConstructiveCauchyRealsMult.Rinv_eq_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40	2.1.1	search with cache (only 1: intros [rn limr]; only 1: intros [m maj]; only 1: apply CReal_mult_proper_l).	0.482729196548	75
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	0.0.2	search with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.833971977234	52
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_invQ	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealQ_dense	40
Coq.Reals.ConstructiveCauchyRealsMult.inject_Q_mult	40
Coq.Reals.Rtrigo_fun.Alembert_exp	40
Coq.Reals.Alembert.Alembert_C1	40
Coq.Reals.Alembert.Alembert_C2	40
Coq.Reals.Alembert.AlembertC3_step1	40
Coq.Reals.Alembert.AlembertC3_step2	40
Coq.Reals.Alembert.Alembert_C3	40
Coq.Reals.Alembert.Alembert_C4	40
Coq.Reals.Alembert.Alembert_C5	40
Coq.Reals.Alembert.Alembert_C6	40
Coq.Reals.R_sqr.Rsqr_neg	40
Coq.Reals.R_sqr.Rsqr_mult	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0319130420685	2
Coq.Reals.R_sqr.Rsqr_plus	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0779600143433	2
Coq.Reals.R_sqr.Rsqr_minus	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0367579460144	2
Coq.Reals.R_sqr.Rsqr_neg_minus	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0306160449982	2
Coq.Reals.R_sqr.Rsqr_1	40	1	search with cache (only 1: ring_Rsqr).	0.0216748714447	2
Coq.Reals.R_sqr.Rsqr_gt_0_0	40
Coq.Reals.R_sqr.Rsqr_pos_lt	40	15	search with cache (only 1: auto with real).	1.1261639595	1291
Coq.Reals.R_sqr.Rsqr_div	40
Coq.Reals.R_sqr.Rsqr_eq_0	40
Coq.Reals.R_sqr.Rsqr_minus_plus	40	1.0.0	search with cache (only 1: intros; only 1: unfold Rminus; only 1: ring_Rsqr).	0.036985874176	4
Coq.Reals.R_sqr.Rsqr_plus_minus	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0324499607086	2
Coq.Reals.R_sqr.Rsqr_incr_0	40
Coq.Reals.R_sqr.Rsqr_incr_0_var	40
Coq.Reals.R_sqr.Rsqr_incr_1	40	1.0.1	search with cache (only 1: unfold Rsqr; only 1: intros p q r H; only 1: auto with real).	0.145693063736	61
Coq.Reals.R_sqr.Rsqr_incrst_0	40
Coq.Reals.R_sqr.Rsqr_incrst_1	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_1	40
Coq.Reals.R_sqr.neg_pos_Rsqr_le	40
Coq.Reals.R_sqr.Rsqr_abs	40	2.0.0.2.1	search with cache (only 1: intros; only 1: unfold Rabs; only 1: destruct (Rcase_abs x) as [Hltx| Hgex]; only 1: ring_Rsqr; only 1: ring_Rsqr).	0.369910955429	176
Coq.Reals.R_sqr.Rsqr_le_abs_0	40
Coq.Reals.R_sqr.Rsqr_le_abs_1	40
Coq.Reals.R_sqr.Rsqr_lt_abs_0	40
Coq.Reals.R_sqr.Rsqr_lt_abs_1	40
Coq.Reals.R_sqr.Rsqr_inj	40
Coq.Reals.R_sqr.Rsqr_eq_abs_0	40
Coq.Reals.R_sqr.Rsqr_eq_asb_1	40
Coq.Reals.R_sqr.triangle_rectangle	40
Coq.Reals.R_sqr.triangle_rectangle_lt	40
Coq.Reals.R_sqr.triangle_rectangle_le	40
Coq.Reals.R_sqr.Rsqr_inv	40	3.3.0.0.0.1.0.0	search with cache (only 1: intro; only 1: intros; only 1: unfold Rsqr; only 1: rewrite Rinv_mult_distr; only 1: apply Rmult_eq_compat_l; only 1: trivial; only 1: trivial; only 1: trivial).	1.01726317406	1067
Coq.Reals.R_sqr.canonical_Rsqr	40
Coq.Reals.R_sqr.Rsqr_eq	40
Coq.Reals.RiemannInt_SF.IZN_var	40
Coq.Reals.RiemannInt_SF.Nzorn	40
Coq.Reals.RiemannInt_SF.StepFun_P1	40
Coq.Reals.RiemannInt_SF.StepFun_P2	40
Coq.Reals.RiemannInt_SF.StepFun_P3	40
Coq.Reals.RiemannInt_SF.StepFun_P4	40
Coq.Reals.RiemannInt_SF.StepFun_P5	40
Coq.Reals.RiemannInt_SF.StepFun_P6	40
Coq.Reals.RiemannInt_SF.StepFun_P7	40
Coq.Reals.RiemannInt_SF.StepFun_P8	40
Coq.Reals.RiemannInt_SF.StepFun_P9	40
Coq.Reals.RiemannInt_SF.StepFun_P10	40
Coq.Reals.RiemannInt_SF.StepFun_P11	40
Coq.Reals.RiemannInt_SF.StepFun_P12	40
Coq.Reals.RiemannInt_SF.StepFun_P13	40
Coq.Reals.RiemannInt_SF.StepFun_P14	40
Coq.Reals.RiemannInt_SF.StepFun_P15	40
Coq.Reals.RiemannInt_SF.StepFun_P16	40
Coq.Reals.RiemannInt_SF.StepFun_P17	40
Coq.Reals.RiemannInt_SF.StepFun_P18	40
Coq.Reals.RiemannInt_SF.StepFun_P19	40
Coq.Reals.RiemannInt_SF.StepFun_P20	40
Coq.Reals.RiemannInt_SF.StepFun_P21	40
Coq.Reals.RiemannInt_SF.StepFun_P22	40
Coq.Reals.RiemannInt_SF.StepFun_P23	40
Coq.Reals.RiemannInt_SF.StepFun_P24	40
Coq.Reals.RiemannInt_SF.StepFun_P25	40
Coq.Reals.RiemannInt_SF.StepFun_P26	40
Coq.Reals.RiemannInt_SF.StepFun_P27	40
Coq.Reals.RiemannInt_SF.StepFun_P28	40
Coq.Reals.RiemannInt_SF.StepFun_P29	40
Coq.Reals.RiemannInt_SF.StepFun_P30	40
Coq.Reals.RiemannInt_SF.StepFun_P31	40
Coq.Reals.RiemannInt_SF.StepFun_P32	40
Coq.Reals.RiemannInt_SF.StepFun_P33	40
Coq.Reals.RiemannInt_SF.StepFun_P34	40
Coq.Reals.RiemannInt_SF.StepFun_P35	40
Coq.Reals.RiemannInt_SF.StepFun_P36	40
Coq.Reals.RiemannInt_SF.StepFun_P37	40
Coq.Reals.RiemannInt_SF.StepFun_P38	40
Coq.Reals.RiemannInt_SF.StepFun_P39	40
Coq.Reals.RiemannInt_SF.StepFun_P40	40
Coq.Reals.RiemannInt_SF.StepFun_P41	40
Coq.Reals.RiemannInt_SF.StepFun_P42	40
Coq.Reals.RiemannInt_SF.StepFun_P43	40
Coq.Reals.RiemannInt_SF.StepFun_P44	40
Coq.Reals.RiemannInt_SF.StepFun_P45	40
Coq.Reals.RiemannInt_SF.StepFun_P46	40
Coq.Reals.Cos_rel.cos_plus_form	40
Coq.Reals.Cos_rel.pow_sqr	40
Coq.Reals.Cos_rel.A1_cvg	40
Coq.Reals.Cos_rel.C1_cvg	40
Coq.Reals.Cos_rel.B1_cvg	40
Coq.Reals.Ranalysis5.f_incr_implies_g_incr_interv	40
Coq.Reals.Ranalysis5.derivable_pt_id_interv	40
Coq.Reals.Ranalysis5.pr_nu_var2_interv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40
Coq.Reals.Ranalysis5.IVT_interv_prelim0	40
Coq.Reals.Ranalysis5.IVT_interv_prelim1	40
Coq.Reals.Ranalysis5.IVT_interv	40
Coq.Reals.Ranalysis5.f_interv_is_interv	40
Coq.Reals.Ranalysis5.continuity_pt_recip_prelim	40
Coq.Reals.Ranalysis5.continuity_pt_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_lim_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1	40	2.3.8	search with cache (only 1: intro x; only 1: intros f g lb ub lb_lt_ub f_incr_interv f_eq_g f_cont_interv b b_encad; only 1: intuition).	13.8486778736	5489
Coq.Reals.Ranalysis5.derivable_pt_recip_interv	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv	40
Coq.Reals.Ranalysis5.ub_lt_2_pos	40
Coq.Reals.Ranalysis5.mkposreal_lb_ub	40
Coq.Reals.Ranalysis5.derivable_pt_lim_CVU	40
Coq.Reals.AltSeries.CV_ALT_step0	40
Coq.Reals.AltSeries.CV_ALT_step1	40
Coq.Reals.AltSeries.CV_ALT_step2	40
Coq.Reals.AltSeries.CV_ALT_step3	40
Coq.Reals.AltSeries.CV_ALT_step4	40
Coq.Reals.AltSeries.CV_ALT	40
Coq.Reals.AltSeries.alternated_series	40
Coq.Reals.AltSeries.alternated_series_ineq	40
Coq.Reals.AltSeries.PI_tg_pos	40
Coq.Reals.AltSeries.PI_tg_decreasing	40
Coq.Reals.AltSeries.PI_tg_cv	40
Coq.Reals.AltSeries.exist_PI	40
Coq.Reals.AltSeries.Alt_PI_ineq	40
Coq.Reals.AltSeries.Alt_PI_RGT_0	40
Coq.Reals.Rminmax.Rmax_l	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.026346206665	4
Coq.Reals.Rminmax.Rmax_r	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0265910625458	4
Coq.Reals.Rminmax.Rmin_l	40	0.1.0.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.026603937149	5
Coq.Reals.Rminmax.Rmin_r	40	0.0.0.1.0.0.0	search with cache (only 1: unfold Rmin; only 1: intros; only 1: destruct Rle_dec as [H'| H']; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real); only 1: apply Rnot_le_lt in H'; only 1: unfold Rle in *; only 1: intuition).	0.0349600315094	8
Coq.Reals.Rminmax.plus_max_distr_l	40
Coq.Reals.Rminmax.plus_max_distr_r	40
Coq.Reals.Rminmax.plus_min_distr_l	40
Coq.Reals.Rminmax.plus_min_distr_r	40	0.0.0.3.0	search with cache (only 1: intros; only 1: rewrite (Rplus_comm n p), (Rplus_comm m p), (Rplus_comm _ p); only 1: apply min_monotone; only 1: intros x y; only 1: apply Rplus_le_compat_l).	0.0306560993195	8
Coq.Reals.Rminmax.opp_max_distr	40	1.0.0.0	search with cache (only 1: intros x y; only 1: apply Rmax_case_strong; only 1: now intros w; rewrite Rmin_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmin_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.0325388908386	5
Coq.Reals.Rminmax.opp_min_distr	40	1.0.0.0	search with cache (only 1: intros x y; only 1: apply Rmin_case_strong; only 1: now intros w; rewrite Rmax_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmax_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.0322511196136	5
Coq.Reals.Rminmax.minus_max_distr_l	40
Coq.Reals.Rminmax.minus_max_distr_r	40
Coq.Reals.Rminmax.minus_min_distr_l	40	1.0.0.2.0.1.1.10.1	search with cache (only 1: intros; only 1: apply min_max_antimonotone; only 1: do 3 red; only 1: unfold Rminus; only 1: intros; only 1: apply Rplus_le_compat_l; only 1: apply Rge_le; only 1: apply Ropp_le_ge_contravar; only 1: auto).	27.2555930614	18771
Coq.Reals.Rminmax.minus_min_distr_r	40
Coq.Reals.Rlimit.eps2_Rgt_R0	40	1.0.1.4.12.0.0	search with cache (only 1: intro; only 1: intros; only 1: unfold Rgt in H; only 1: apply Rmult_lt_0_compat; only 1: auto with real; only 1: apply Rinv_0_lt_compat; only 1: auto with real).	0.53924703598	1293
Coq.Reals.Rlimit.eps2	40	0.0	search with cache (only 1: intros; only 1: lra).	0.0220031738281	2
Coq.Reals.Rlimit.eps4	40	3.0	search with cache (only 1: intro esp; only 1: lra).	0.0245568752289	5
Coq.Reals.Rlimit.Rlt_eps2_eps	40	0.0	search with cache (only 1: intros; only 1: lra).	0.0450739860535	2
Coq.Reals.Rlimit.Rlt_eps4_eps	40	0.0	search with cache (only 1: intros; only 1: lra).	0.0206098556519	2
Coq.Reals.Rlimit.prop_eps	40
Coq.Reals.Rlimit.mul_factor_wd	40	0.0.0.0.22.4.1	search with cache (only 1: intro eps; only 1: intros; only 1: split_Rabs; only 1: lra; only 1: lra; only 1: lra; only 1: lra).	30.4894311428	4028
Coq.Reals.Rlimit.mul_factor_gt	40
Coq.Reals.Rlimit.mul_factor_gt_f	40
Coq.Reals.Rlimit.tech_limit	40
Coq.Reals.Rlimit.tech_limit_contr	40
Coq.Reals.Rlimit.lim_x	40
Coq.Reals.Rlimit.limit_plus	40
Coq.Reals.Rlimit.limit_Ropp	40
Coq.Reals.Rlimit.limit_minus	40
Coq.Reals.Rlimit.limit_free	40
Coq.Reals.Rlimit.limit_mul	40
Coq.Reals.Rlimit.single_limit	40
Coq.Reals.Rlimit.limit_comp	40
Coq.Reals.Rlimit.limit_inv	40
Coq.Reals.R_sqrt.sqrt_pos	40
Coq.Reals.R_sqrt.sqrt_positivity	40	0.3.6.19.0.0.0.0	search with cache (only 1: intros x; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [H| H]; only 1: intro; only 1: right; only 1: reflexivity; only 1: intros; only 1: apply Rsqrt_positivity).	27.8497059345	38421
Coq.Reals.R_sqrt.sqrt_sqrt	40
Coq.Reals.R_sqrt.sqrt_0	40
Coq.Reals.R_sqrt.sqrt_1	40
Coq.Reals.R_sqrt.sqrt_eq_0	40
Coq.Reals.R_sqrt.sqrt_lem_0	40
Coq.Reals.R_sqrt.sqrt_lem_1	40
Coq.Reals.R_sqrt.sqrt_def	40	0.0	search with cache (only 1: intros; only 1: apply (sqrt_sqrt x H)).	0.0221970081329	2
Coq.Reals.R_sqrt.sqrt_square	40	0.0.6.5.0.0.2.2.0	search with cache (only 1: intros; only 1: apply Rsqr_inj; only 1: apply sqrt_pos; only 1: assumption; only 1: unfold Rsqr; only 1: apply sqrt_sqrt; only 1: apply Rmult_le_pos; only 1: assumption; only 1: assumption).	7.25326299667	7886
Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	0.0365219116211	5
Coq.Reals.R_sqrt.sqrt_pow2	40	1.10.2.2	search with cache (only 1: simpl; only 1: intro; only 1: rewrite Rmult_1_r; only 1: apply sqrt_square).	1.71358680725	1713
Coq.Reals.R_sqrt.sqrt_Rsqr_abs	40
Coq.Reals.R_sqrt.Rsqr_sqrt	40	0.1.0	search with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x H)).	0.0274250507355	4
Coq.Reals.R_sqrt.sqrt_mult_alt	40
Coq.Reals.R_sqrt.sqrt_mult	40
Coq.Reals.R_sqrt.sqrt_lt_R0	40
Coq.Reals.R_sqrt.Rlt_mult_inv_pos	40	1.0.0.0.15	search with cache (only 1: intros; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: apply Rinv_0_lt_compat; only 1: assumption).	0.665755987167	526
Coq.Reals.R_sqrt.Rle_mult_inv_pos	40	0.15.0.0	search with cache (only 1: intros x y H H0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: ring).	18.4828732014	10876
Coq.Reals.R_sqrt.sqrt_div_alt	40
Coq.Reals.R_sqrt.sqrt_div	40
Coq.Reals.R_sqrt.sqrt_lt_0_alt	40
Coq.Reals.R_sqrt.sqrt_lt_0	40
Coq.Reals.R_sqrt.sqrt_lt_1_alt	40
Coq.Reals.R_sqrt.sqrt_lt_1	40
Coq.Reals.R_sqrt.sqrt_le_0	40
Coq.Reals.R_sqrt.sqrt_le_1_alt	40
Coq.Reals.R_sqrt.sqrt_le_1	40
Coq.Reals.R_sqrt.sqrt_inj	40
Coq.Reals.R_sqrt.sqrt_less_alt	40
Coq.Reals.R_sqrt.sqrt_less	40	0.1.0.0.1.1.0.2.0.5	search with cache (only 1: intros x H1; only 1: intros Hx; only 1: pose proof (Rle_lt_trans _ _ _ Rle_0_1 Hx) as Hx1; only 1: apply Rsqr_incrst_0; only 1: rewrite Rsqr_sqrt; only 1: rewrite <- (Rmult_1_l x)  at 1; only 1: now apply Rmult_lt_compat_r; only 1: trivial; only 1: apply sqrt_pos; only 1: trivial).	9.92489719391	2474
Coq.Reals.R_sqrt.sqrt_more	40
Coq.Reals.R_sqrt.sqrt_cauchy	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_0	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_dec	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_epsilon	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_not_epsilon	40
Coq.Reals.ConstructiveRealsLUB.DDlow_below_up	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit_fix	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit	40
Coq.Reals.ConstructiveRealsLUB.glb_dec_Q	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_glb	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_closed	40
Coq.Reals.ConstructiveRealsLUB.sig_lub	40
Coq.Reals.ConstructiveRealsLUB.CR_sig_lub	40
Coq.Reals.Rderiv.cont_deriv	40
Coq.Reals.Rderiv.Dconst	40
Coq.Reals.Rderiv.Dx	40
Coq.Reals.Rderiv.Dadd	40
Coq.Reals.Rderiv.Dmult	40
Coq.Reals.Rderiv.Dmult_const	40
Coq.Reals.Rderiv.Dopp	40
Coq.Reals.Rderiv.Dminus	40
Coq.Reals.Rderiv.Dx_pow_n	40
Coq.Reals.Rderiv.Dcomp	40
Coq.Reals.Rderiv.D_pow_n	40
Coq.Reals.Cauchy_prod.sum_N_predN	40	11.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: elim (Nat.lt_irrefl _ H); only 1: reflexivity).	4.25283789635	2201
Coq.Reals.Cauchy_prod.sum_plus	40	1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.0740940570831	8
Coq.Reals.Cauchy_prod.cauchy_finite	40
Coq.Reals.Rlogic.sig_forall_dec	40
Coq.Reals.Rlogic.not_not_archimedean	40
Coq.Reals.Rlogic.sig_not_dec	40
Coq.Reals.Rtrigo1.CVN_R_cos	40
Coq.Reals.Rtrigo1.continuity_cos	40
Coq.Reals.Rtrigo1.sin_gt_cos_7_8	40
Coq.Reals.Rtrigo1.PI_2_aux	40
Coq.Reals.Rtrigo1.cos_pi2	40
Coq.Reals.Rtrigo1.pi2_int	40
Coq.Reals.Rtrigo1.cos_minus	40
Coq.Reals.Rtrigo1.sin2_cos2	40
Coq.Reals.Rtrigo1.cos2	40
Coq.Reals.Rtrigo1.sin2	40	0.0.0	search with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).	0.0355298519135	3
Coq.Reals.Rtrigo1.cos_PI2	40
Coq.Reals.Rtrigo1.sin_pos_tech	40
Coq.Reals.Rtrigo1.sin_PI2	40
Coq.Reals.Rtrigo1.PI_RGT_0	40	1.4.12	search with cache (only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	0.565870046616	233
Coq.Reals.Rtrigo1.PI_4	40	0.2.3	search with cache (only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	0.431450843811	82
Coq.Reals.Rtrigo1.PI_neq0	40	0.3.1.0.0	search with cache (only 1: unfold PI; only 1: generalize cos_pi2; only 1: generalize cos_pi2; only 1: destruct pi2_int; only 1: lra).	0.112530946732	15
Coq.Reals.Rtrigo1.cos_PI	40
Coq.Reals.Rtrigo1.sin_PI	40
Coq.Reals.Rtrigo1.sin_bound	40
Coq.Reals.Rtrigo1.cos_bound	40
Coq.Reals.Rtrigo1.neg_cos	40
Coq.Reals.Rtrigo1.sin_cos	40	0.2.0.0.1	search with cache (only 1: intro x; only 1: rewrite cos_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	0.0516309738159	8
Coq.Reals.Rtrigo1.sin_plus	40
Coq.Reals.Rtrigo1.sin_minus	40
Coq.Reals.Rtrigo1.tan_plus	40
Coq.Reals.Rtrigo1.sin_2a	40
Coq.Reals.Rtrigo1.cos_2a	40	5.4.0.0	search with cache (only 1: intro x; only 1: rewrite double; only 1: rewrite cos_plus; only 1: ring).	5.67151904106	2252
Coq.Reals.Rtrigo1.cos_2a_cos	40
Coq.Reals.Rtrigo1.cos_2a_sin	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intro x; only 1: rewrite double; only 1: unfold Rminus; only 1: rewrite cos_plus; only 1: generalize (sin2_cos2 x); only 1: rewrite double; only 1: intro H1; only 1: rewrite <- H1; only 1: ring_Rsqr).	0.10858798027	9
Coq.Reals.Rtrigo1.tan_2a	40
Coq.Reals.Rtrigo1.sin_neg	40	5.13.0	search with cache (only 1: intro x; only 1: rewrite sin_antisym; only 1: ring).	37.9476699829	13251
Coq.Reals.Rtrigo1.cos_neg	40	12.1.1	search with cache (only 1: intro x; only 1: rewrite <- cos_sym; only 1: reflexivity).	19.9788501263	7118
Coq.Reals.Rtrigo1.tan_0	40
Coq.Reals.Rtrigo1.tan_neg	40
Coq.Reals.Rtrigo1.tan_minus	40
Coq.Reals.Rtrigo1.cos_3PI2	40
Coq.Reals.Rtrigo1.sin_2PI	40	1.0.9.1	search with cache (only 1: rewrite double; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: ring).	1.24336695671	537
Coq.Reals.Rtrigo1.cos_2PI	40	0.3.0.0.2	search with cache (only 1: repeat rewrite double; only 1: rewrite cos_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.414608955383	129
Coq.Reals.Rtrigo1.neg_sin	40	0.0.0.4.0	search with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.0924439430237	22
Coq.Reals.Rtrigo1.sin_PI_x	40	0.3.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rminus; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: rewrite sin_antisym; only 1: ring).	0.122279882431	13
Coq.Reals.Rtrigo1.sin_period	40
Coq.Reals.Rtrigo1.cos_period	40
Coq.Reals.Rtrigo1.sin_shift	40
Coq.Reals.Rtrigo1.cos_shift	40
Coq.Reals.Rtrigo1.cos_sin	40	3.0.0.0.0.0.0.1.0.0	search with cache (only 1: intro x; only 1: rewrite (sin_cos (PI / 2 + x)); only 1: replace (PI / 2 + (PI / 2 + x)) with (x + PI); only 1: rewrite cos_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring; only 1: pattern PI at 1; only 1: rewrite (double_var PI); only 1: ring).	4.34094405174	1422
Coq.Reals.Rtrigo1.PI2_RGT_0	40	0.1.1.5	search with cache (only 1: unfold PI; only 1: replace (2 * PI2 / 2) with PI2 by field; only 1: destruct pi2_int; only 1: lra).	0.391933202744	88
Coq.Reals.Rtrigo1.SIN_bound	40
Coq.Reals.Rtrigo1.COS_bound	40
Coq.Reals.Rtrigo1.cos_sin_0	40
Coq.Reals.Rtrigo1.cos_sin_0_var	40
Coq.Reals.Rtrigo1.sin_lb_gt_0	40
Coq.Reals.Rtrigo1.SIN	40
Coq.Reals.Rtrigo1.COS	40
Coq.Reals.Rtrigo1._PI2_RLT_0	40	0.4.6	search with cache (only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	0.57218503952	144
Coq.Reals.Rtrigo1.PI4_RLT_PI2	40	0.9	search with cache (only 1: pose proof PI_RGT_0 as H; only 1: lra).	0.0507380962372	40
Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	0.2	search with cache (only 1: pose proof PI_RGT_0 as H; only 1: lra).	0.0462489128113	12
Coq.Reals.Rtrigo1.sin_gt_0	40
Coq.Reals.Rtrigo1.cos_gt_0	40
Coq.Reals.Rtrigo1.sin_ge_0	40
Coq.Reals.Rtrigo1.cos_ge_0	40
Coq.Reals.Rtrigo1.sin_le_0	40
Coq.Reals.Rtrigo1.cos_le_0	40
Coq.Reals.Rtrigo1.sin_lt_0	40
Coq.Reals.Rtrigo1.sin_lt_0_var	40
Coq.Reals.Rtrigo1.cos_lt_0	40
Coq.Reals.Rtrigo1.tan_gt_0	40
Coq.Reals.Rtrigo1.tan_lt_0	40
Coq.Reals.Rtrigo1.cos_ge_0_3PI2	40
Coq.Reals.Rtrigo1.form1	40
Coq.Reals.Rtrigo1.form2	40	0.0.1.0.0.0.0.0	search with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: rewrite <- (cos_neg q); only 1: replace (- q) with ((p - q) / 2 - (p + q) / 2) by field; only 1: rewrite cos_plus; only 1: rewrite cos_minus; only 1: ring).	0.164475917816	13
Coq.Reals.Rtrigo1.form3	40
Coq.Reals.Rtrigo1.form4	40
Coq.Reals.Rtrigo1.sin_increasing_0	40
Coq.Reals.Rtrigo1.sin_increasing_1	40
Coq.Reals.Rtrigo1.sin_decreasing_0	40
Coq.Reals.Rtrigo1.sin_decreasing_1	40
Coq.Reals.Rtrigo1.cos_increasing_0	40
Coq.Reals.Rtrigo1.cos_increasing_1	40
Coq.Reals.Rtrigo1.cos_decreasing_0	40
Coq.Reals.Rtrigo1.cos_decreasing_1	40
Coq.Reals.Rtrigo1.tan_diff	40
Coq.Reals.Rtrigo1.tan_increasing_0	40
Coq.Reals.Rtrigo1.tan_increasing_1	40
Coq.Reals.Rtrigo1.sin_incr_0	40
Coq.Reals.Rtrigo1.sin_incr_1	40
Coq.Reals.Rtrigo1.sin_decr_0	40
Coq.Reals.Rtrigo1.sin_decr_1	40
Coq.Reals.Rtrigo1.cos_incr_0	40
Coq.Reals.Rtrigo1.cos_incr_1	40
Coq.Reals.Rtrigo1.cos_decr_0	40
Coq.Reals.Rtrigo1.cos_decr_1	40
Coq.Reals.Rtrigo1.tan_incr_0	40
Coq.Reals.Rtrigo1.tan_incr_1	40
Coq.Reals.Rtrigo1.sin_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_0	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_1	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40
Coq.Reals.PartSum.tech1	40
Coq.Reals.PartSum.tech2	40
Coq.Reals.PartSum.tech3	40
Coq.Reals.PartSum.tech4	40
Coq.Reals.PartSum.tech5	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0182359218597	2
Coq.Reals.PartSum.tech6	40
Coq.Reals.PartSum.tech7	40
Coq.Reals.PartSum.tech11	40
Coq.Reals.PartSum.tech12	40	17.0	search with cache (only 1: intros; only 1: assumption).	0.354946136475	456
Coq.Reals.PartSum.scal_sum	40	6.4.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: rewrite tech5; only 1: rewrite Rmult_plus_distr_l; only 1: rewrite tech5; only 1: rewrite HrecN; only 1: ring).	1.66636991501	1722
Coq.Reals.PartSum.decomp_sum	40
Coq.Reals.PartSum.plus_sum	40	2.0.3.8.4.2	search with cache (only 1: induction N as [| N HrecN]; only 1: simpl; only 1: reflexivity; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	3.47335481644	2907
Coq.Reals.PartSum.sum_eq	40
Coq.Reals.PartSum.uniqueness_sum	40
Coq.Reals.PartSum.minus_sum	40	1.1.0.0.1.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: unfold Rminus, SeqProp.opp_seq; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.577993154526	159
Coq.Reals.PartSum.sum_decomposition	40
Coq.Reals.PartSum.sum_Rle	40
Coq.Reals.PartSum.Rsum_abs	40
Coq.Reals.PartSum.sum_cte	40	2.0.11.0.0.0.0.0.3	search with cache (only 1: simpl; only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: rewrite Rmult_plus_distr_l; only 1: simpl; only 1: rewrite <- HrecN; only 1: ring).	6.80645799637	5952
Coq.Reals.PartSum.sum_growing	40	0.2.1.0.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: apply H; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (sum_f_R0 An N + Bn (S N)); only 1: apply Rplus_le_compat_l; only 1: apply H; only 1: do 2 rewrite <- (Rplus_comm (Bn (S N))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	4.88650584221	1652
Coq.Reals.PartSum.Rabs_triang_gen	40	0.1.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	0.476039171219	227
Coq.Reals.PartSum.cond_pos_sum	40
Coq.Reals.PartSum.cauchy_abs	40
Coq.Reals.PartSum.cv_cauchy_1	40
Coq.Reals.PartSum.cv_cauchy_2	40
Coq.Reals.PartSum.sum_eq_R0	40
Coq.Reals.PartSum.sum_incr	40
Coq.Reals.PartSum.sum_cv_maj	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_sym	40
Coq.Reals.ConstructiveCauchyReals.factorDenom	40	0.0.0.6	search with cache (only 1: intros [| n| n]; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.044273853302	22
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_sym	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_cau_r	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_inc	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_max	40
Coq.Reals.ConstructiveCauchyReals.standard_modulus	40
Coq.Reals.ConstructiveCauchyReals.CRealLtEpsilon	40
Coq.Reals.ConstructiveCauchyReals.CRealLtForget	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_lpo_dec	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_not_lt	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_diff	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_modindep	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_aboveSig	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above_same	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_asym	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_irrefl	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_refl	40	0.9	search with cache (only 1: intros x abs; only 1: exact (CRealLt_asym x x abs abs)).	0.167550086975	93
Coq.Reals.ConstructiveCauchyReals.CRealEq_refl	40	0.6.0.6.1	search with cache (only 1: split; only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs); only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs)).	1.38064694405	1373
Coq.Reals.ConstructiveCauchyReals.CRealEq_sym	40	4.4.1	search with cache (only 1: split; only 1: apply H; only 1: apply H).	0.75671005249	452
Coq.Reals.ConstructiveCauchyReals.CRealLt_dec	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_relT	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealGt_morph	40
Coq.Reals.ConstructiveCauchyReals.CReal_appart_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealLtProp_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealGe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_l	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_r	40	0.17.0.3.0	search with cache (only 1: intros; only 1: apply (CReal_lt_le_trans _ x); only 1: apply H0; only 1: destruct H, H0; only 1: assumption).	25.2130141258	4783
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_l	40	3.0.8.0.0.0	search with cache (only 1: intros; only 1: intro abs; only 1: apply H0; only 1: apply (CRealLt_morph z z (CRealEq_refl z) x y); only 1: apply H; only 1: assumption).	2.32336902618	2117
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_r	40	3.0.8	search with cache (only 1: intros x y lpo; only 1: apply CRealLe_morph; only 1: apply CRealEq_refl).	0.74210190773	733
Coq.Reals.ConstructiveCauchyReals.ConstCauchy	40
Coq.Reals.ConstructiveCauchyReals.inject_Q	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_0_1	40
Coq.Reals.ConstructiveCauchyReals.CReal_injectQPos	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQ	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQopp	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_compare	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_T	40	0.0.0.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: split; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs).	1.09498715401	460
Coq.Reals.ConstructiveCauchyReals.CReal_plus_cauchy	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_nth	40	7.1.1.1.2	search with cache (only 1: intro n; only 1: destruct n; only 1: intro n; only 1: destruct n; only 1: split).	0.822563886642	790
Coq.Reals.ConstructiveCauchyReals.CReal_plus_unfold	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp	40
Coq.Reals.ConstructiveCauchyReals.belowMultiple	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_assoc	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_comm	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_r	40	1.1.0.0.0.0.0	search with cache (only 1: intros; only 1: intro abs; only 1: apply H; only 1: clear H; only 1: do 2 rewrite <- (CReal_plus_comm x); only 1: apply CReal_plus_lt_compat_l; only 1: exact abs).	0.258656024933	9
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat_l	40	2.0.4.8	search with cache (only 1: intro n; only 1: intros x y z H; only 1: apply CReal_plus_lt_reg_l in H; only 1: contradiction).	10.8271780014	6295
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_lt_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_l	40	3.0.0.0.3.0.0.0.1.0	search with cache (only 1: intros; only 1: split; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction).	38.2757270336	21928
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_T	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_0	40	8	search with cache (only 1: apply CReal_plus_0_l).	2.0860850811	58
Coq.Reals.ConstructiveCauchyReals.CReal_opp_plus_distr	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_involutive	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_plus	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_one	40	2.5.0	search with cache (only 1: apply (CReal_plus_eq_reg_l 0); only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_0_l).	0.107691049576	37
Coq.Reals.ConstructiveCauchyReals.inject_Q_lt	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.lt_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.le_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_le	40
Coq.Reals.ConstructiveCauchyReals.inject_Z_plus	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Z	40
Coq.Reals.Rtrigo_reg.continuity_sin	40
Coq.Reals.Rtrigo_reg.CVN_R_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	40
Coq.Reals.Rtrigo_reg.derivable_pt_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_cos	40
Coq.Reals.Rtrigo_reg.derivable_sin	40	0.0.2.23.32	search with cache (only 1: set (r := {| pos := _; cond_pos := Rlt_0_1 |}); only 1: intro; only 1: unfold derivable_pt; only 1: exists (cos x); only 1: apply derivable_pt_lim_sin).	1.08768486977	3448
Coq.Reals.Rtrigo_reg.derivable_cos	40	0.0.1.0.0	search with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (- sin x); only 1: apply derivable_pt_lim_cos).	0.0317170619965	6
Coq.Reals.Rtrigo_reg.derive_pt_sin	40
Coq.Reals.Rtrigo_reg.derive_pt_cos	40
Coq.Reals.Cos_plus.Majxy_cv_R0	40
Coq.Reals.Cos_plus.reste1_maj	40
Coq.Reals.Cos_plus.reste2_maj	40
Coq.Reals.Cos_plus.reste1_cv_R0	40
Coq.Reals.Cos_plus.reste2_cv_R0	40
Coq.Reals.Cos_plus.reste_cv_R0	40
Coq.Reals.Cos_plus.cos_plus	40
Coq.Reals.Rgeom.distance_refl	40
Coq.Reals.Rgeom.distance_symm	40
Coq.Reals.Rgeom.law_cosines	40
Coq.Reals.Rgeom.triangle	40
Coq.Reals.Rgeom.translation_0	40
Coq.Reals.Rgeom.isometric_translation	40
Coq.Reals.Rgeom.rotation_0	40
Coq.Reals.Rgeom.rotation_PI2	40
Coq.Reals.Rgeom.isometric_rotation_0	40
Coq.Reals.Rgeom.isometric_rotation	40
Coq.Reals.Rgeom.isometric_rot_trans	40
Coq.Reals.Rgeom.isometric_trans_rot	40
Coq.Reals.Rsqrt_def.dicho_comp	40
Coq.Reals.Rsqrt_def.dicho_lb_growing	40
Coq.Reals.Rsqrt_def.dicho_up_decreasing	40
Coq.Reals.Rsqrt_def.dicho_lb_maj_y	40
Coq.Reals.Rsqrt_def.dicho_lb_maj	40
Coq.Reals.Rsqrt_def.dicho_up_min_x	40
Coq.Reals.Rsqrt_def.dicho_up_min	40
Coq.Reals.Rsqrt_def.dicho_lb_cv	40
Coq.Reals.Rsqrt_def.dicho_up_cv	40
Coq.Reals.Rsqrt_def.dicho_lb_dicho_up	40
Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40	0.2.1.5	search with cache (only 1: red; only 1: intro; only 1: apply pow_nonzero; only 1: discrR).	0.216728925705	153
Coq.Reals.Rsqrt_def.pow_2_n_growing	40
Coq.Reals.Rsqrt_def.pow_2_n_infty	40
Coq.Reals.Rsqrt_def.cv_dicho	40
Coq.Reals.Rsqrt_def.continuity_seq	40
Coq.Reals.Rsqrt_def.dicho_lb_car	40
Coq.Reals.Rsqrt_def.dicho_up_car	40	1.0.1.0.1.3.2.5.0	search with cache (only 1: intros; only 1: induction n as [| n Hrecn]; only 1: assumption; only 1: simpl; only 1: destruct (sumbool_of_bool (P ((Dichotomy_lb x y P n + Dichotomy_ub x y P n) / 2))) as [Heq| Heq]; only 1: rewrite Heq; only 1: assumption; only 1: rewrite Heq; only 1: assumption).	8.20386505127	6176
Coq.Reals.Rsqrt_def.cv_pow_half	40
Coq.Reals.Rsqrt_def.IVT	40
Coq.Reals.Rsqrt_def.IVT_cor	40
Coq.Reals.Rsqrt_def.Rsqrt_exists	40
Coq.Reals.Rsqrt_def.Rsqrt_positivity	40
Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40
Coq.FSets.FMapFullAVL.height_non_negative	40
Coq.FSets.FMapFullAVL.avl_node	40	0.2	search with cache (only 1: intros; only 1: intuition).	0.0293829441071	4
Coq.FSets.FMapFullAVL.height_0	40
Coq.FSets.FMapFullAVL.empty_avl	40	3	search with cache (only 1: auto).	0.0316581726074	4
Coq.FSets.FMapFullAVL.create_avl	40
Coq.FSets.FMapFullAVL.create_height	40	0.0	search with cache (only 1: intros; only 1: auto).	0.024425983429	2
Coq.FSets.FMapFullAVL.bal_avl	40
Coq.FSets.FMapFullAVL.bal_height_1	40
Coq.FSets.FMapFullAVL.bal_height_2	40
Coq.FSets.FMapFullAVL.add_avl_1	40
Coq.FSets.FMapFullAVL.add_avl	40
Coq.FSets.FMapFullAVL.remove_min_avl_1	40
Coq.FSets.FMapFullAVL.remove_min_avl	40
Coq.FSets.FMapFullAVL.merge_avl_1	40
Coq.FSets.FMapFullAVL.merge_avl	40	0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros m1 m2; only 1: functional induction (merge m1 m2); only 1: intros; only 1: auto; only 1: intros; only 1: factornode _x _x0 _x1 _x2 _x3 as m1; only 1: auto; only 1: intros; only 1: factornode _x _x0 _x1 _x2 _x3 as m1; only 1: generalize (remove_min_avl_1 H0); only 1: rewrite e1; only 1: destruct 1; only 1: apply bal_avl; only 1: auto; only 1: auto; only 1: omega_max).	9.9321641922	3468
Coq.FSets.FMapFullAVL.remove_avl_1	40
Coq.FSets.FMapFullAVL.remove_avl	40
Coq.FSets.FMapFullAVL.join_avl_1	40
Coq.FSets.FMapFullAVL.join_avl	40
Coq.FSets.FMapFullAVL.concat_avl	40
Coq.FSets.FMapFullAVL.split_avl	40
Coq.FSets.FMapFullAVL.map_height	40
Coq.FSets.FMapFullAVL.map_avl	40
Coq.FSets.FMapFullAVL.mapi_height	40	1.0.0.0.0	search with cache (only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0400071144104	6
Coq.FSets.FMapFullAVL.mapi_avl	40
Coq.FSets.FMapFullAVL.map_option_avl	40
Coq.FSets.FMapFullAVL.map2_opt_avl	40
Coq.FSets.FMapFullAVL.map2_avl	40
Coq.FSets.FMapFullAVL.MapsTo_1	40
Coq.FSets.FMapFullAVL.mem_1	40
Coq.FSets.FMapFullAVL.mem_2	40
Coq.FSets.FMapFullAVL.empty_1	40	4.1.3.29	search with cache (only 1: intros m x; only 1: simpl; only 1: intuition; only 1: inversion_clear H).	1.13518095016	1324
Coq.FSets.FMapFullAVL.is_empty_1	40
Coq.FSets.FMapFullAVL.is_empty_2	40
Coq.FSets.FMapFullAVL.add_1	40
Coq.FSets.FMapFullAVL.add_2	40
Coq.FSets.FMapFullAVL.add_3	40
Coq.FSets.FMapFullAVL.remove_1	40
Coq.FSets.FMapFullAVL.remove_2	40
Coq.FSets.FMapFullAVL.remove_3	40
Coq.FSets.FMapFullAVL.find_1	40
Coq.FSets.FMapFullAVL.find_2	40
Coq.FSets.FMapFullAVL.fold_1	40
Coq.FSets.FMapFullAVL.elements_1	40
Coq.FSets.FMapFullAVL.elements_2	40	0.0.4.1	search with cache (only 1: unfold elements, MapsTo, eq_key_elt; only 1: intros m x y; only 1: rewrite elements_mapsto; only 1: auto).	0.0610921382904	31
Coq.FSets.FMapFullAVL.elements_3	40
Coq.FSets.FMapFullAVL.elements_3w	40
Coq.FSets.FMapFullAVL.cardinal_1	40
Coq.FSets.FMapFullAVL.Equivb_Equivb	40
Coq.FSets.FMapFullAVL.equal_1	40
Coq.FSets.FMapFullAVL.equal_2	40	0.0.0.1.2.0.0.0	search with cache (only 1: unfold equal; only 1: intros (m, b, a) (m', b', a') cmp; only 1: rewrite Equivb_Equivb; only 1: simpl in *; only 1: rewrite equal_Equivb; only 1: auto; only 1: auto; only 1: auto).	0.685835838318	265
Coq.FSets.FMapFullAVL.map_1	40
Coq.FSets.FMapFullAVL.map_2	40
Coq.FSets.FMapFullAVL.mapi_1	40
Coq.FSets.FMapFullAVL.mapi_2	40
Coq.FSets.FMapFullAVL.map2_1	40
Coq.FSets.FMapFullAVL.map2_2	40
Coq.FSets.FMapFullAVL.cons_cardinal_e	40
Coq.FSets.FMapFullAVL.compare_aux_tcc	40
Coq.FSets.FMapFullAVL.cons_Cmp	40	3.11.3.11.3.11.51.55	search with cache (only 1: intros m; only 1: induction m; only 1: intuition; only 1: LO.cmp_solve; only 1: intuition; only 1: LO.cmp_solve; only 1: intuition; only 1: LO.cmp_solve).	24.0682449341	108338
Coq.FSets.FMapFullAVL.compare_aux_Cmp	40
Coq.FSets.FMapFullAVL.compare_Cmp	40
Coq.FSets.FMapFullAVL.compare	40
Coq.FSets.FMapFullAVL.eq_seq	40	3.2.1	search with cache (only 1: intros; only 1: red; only 1: intuition).	0.0255970954895	9
Coq.FSets.FMapFullAVL.lt_slt	40	0	search with cache (only 1: intuition).	0.0219328403473	1
Coq.FSets.FMapFullAVL.eq_1	40
Coq.FSets.FMapFullAVL.eq_2	40
Coq.FSets.FMapFullAVL.eq_refl	40
Coq.FSets.FMapFullAVL.eq_sym	40
Coq.FSets.FMapFullAVL.eq_trans	40
Coq.FSets.FMapFullAVL.lt_trans	40
Coq.FSets.FMapFullAVL.lt_not_eq	40
Coq.FSets.FMapAVL.MapsTo_In	40
Coq.FSets.FMapAVL.In_MapsTo	40
Coq.FSets.FMapAVL.In_alt	40
Coq.FSets.FMapAVL.MapsTo_1	40	2.2.18.22.7.38	search with cache (only 1: intros m Hm x y e; only 1: induction 1; only 1: constructor; only 1: L.MX.order; only 1: auto; only 1: auto).	32.8502309322	86130
Coq.FSets.FMapAVL.In_1	40	0.0.0.0.0.2	search with cache (only 1: induction m; only 1: intuition_in; only 1: intuition_in; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.25928401947	8
Coq.FSets.FMapAVL.In_node_iff	40	1.1.0	search with cache (only 1: split; only 1: intuition_in; only 1: intuition_in).	0.0537440776825	5
Coq.FSets.FMapAVL.lt_leaf	40	18	search with cache (only 1: inversion 1).	0.1849629879	319
Coq.FSets.FMapAVL.gt_leaf	40	19	search with cache (only 1: inversion 1).	0.206716060638	465
Coq.FSets.FMapAVL.lt_tree_node	40	5.0.1	search with cache (only 1: unfold lt_tree; only 1: intuition_in; only 1: eauto with ordered_type).	0.0807039737701	18
Coq.FSets.FMapAVL.gt_tree_node	40	0.0.2	search with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: order).	0.473893165588	13
Coq.FSets.FMapAVL.lt_left	40	0.0	search with cache (only 1: unfold lt_tree in *; only 1: intuition_in).	0.0150198936462	2
Coq.FSets.FMapAVL.lt_right	40	0	search with cache (only 1: intuition_in).	0.0106239318848	1
Coq.FSets.FMapAVL.gt_left	40	0.0	search with cache (only 1: unfold gt_tree in *; only 1: intuition_in).	0.0556311607361	2
Coq.FSets.FMapAVL.gt_right	40	0	search with cache (only 1: intuition_in).	0.0109679698944	1
Coq.FSets.FMapAVL.lt_tree_not_in	40	3.1	search with cache (only 1: intuition_in; only 1: order).	0.446300029755	39
Coq.FSets.FMapAVL.lt_tree_trans	40	3.0.0	search with cache (only 1: unfold lt_tree in *; only 1: intuition_in; only 1: eauto with ordered_type).	0.0289220809937	6
Coq.FSets.FMapAVL.gt_tree_not_in	40	0.0.0	search with cache (only 1: intros; only 1: intro; only 1: order).	0.0150079727173	3
Coq.FSets.FMapAVL.gt_tree_trans	40	3.0.0	search with cache (only 1: unfold gt_tree in *; only 1: intuition_in; only 1: eauto with ordered_type).	0.0297830104828	6
Coq.FSets.FMapAVL.empty_bst	40	15	search with cache (only 1: trivial).	0.0230419635773	91
Coq.FSets.FMapAVL.empty_1	40	2.16.0	search with cache (only 1: unfold empty; only 1: intros m x f; only 1: intuition_in).	0.433285951614	379
Coq.FSets.FMapAVL.is_empty_1	40
Coq.FSets.FMapAVL.is_empty_2	40	0.0.10.4.5	search with cache (only 1: intros; only 1: intro; only 1: induction m; only 1: intuition_in; only 1: intuition_in).	4.0543680191	3865
Coq.FSets.FMapAVL.mem_1	40
Coq.FSets.FMapAVL.mem_2	40	1.0.1.4.0.0.0	search with cache (only 1: intros m x; only 1: functional induction (mem x m); only 1: intros; only 1: discriminate; only 1: auto; only 1: auto; only 1: auto).	0.436659097672	287
Coq.FSets.FMapAVL.find_1	40
Coq.FSets.FMapAVL.find_2	40
Coq.FSets.FMapAVL.find_iff	40
Coq.FSets.FMapAVL.find_in	40	2.2.2.2.0.0.0	search with cache (only 1: intros m x; only 1: functional induction (find x m); only 1: intros; only 1: intuition_in; only 1: auto; only 1: auto; only 1: auto).	2.3500058651	798
Coq.FSets.FMapAVL.in_find	40
Coq.FSets.FMapAVL.find_in_iff	40	0.0.0.3.0.0.0.0.0.3.3.1	search with cache (only 1: split; only 1: intros; only 1: case_eq (find x m); only 1: intros; only 1: apply MapsTo_In with e; only 1: apply find_2; only 1: auto; only 1: congruence; only 1: intros; only 1: destruct (In_MapsTo H0) as (d, Hd); only 1: rewrite (find_1 H Hd); only 1: discriminate).	20.6477081776	3965
Coq.FSets.FMapAVL.not_find_iff	40
Coq.FSets.FMapAVL.find_find	40
Coq.FSets.FMapAVL.find_mapsto_equiv	40
Coq.FSets.FMapAVL.find_in_equiv	40
Coq.FSets.FMapAVL.create_bst	40	1.1.1.1.12.0	search with cache (only 1: intros; only 1: constructor 2; only 1: intuition_in; only 1: intuition_in; only 1: intuition_in; only 1: intuition_in).	9.1883149147	7718
Coq.FSets.FMapAVL.create_in	40	1.2	search with cache (only 1: unfold create; only 1: intuition_in).	0.303382158279	32
Coq.FSets.FMapAVL.bal_bst	40
Coq.FSets.FMapAVL.bal_in	40
Coq.FSets.FMapAVL.bal_mapsto	40
Coq.FSets.FMapAVL.bal_find	40
Coq.FSets.FMapAVL.add_in	40
Coq.FSets.FMapAVL.add_bst	40
Coq.FSets.FMapAVL.add_1	40
Coq.FSets.FMapAVL.add_2	40
Coq.FSets.FMapAVL.add_3	40
Coq.FSets.FMapAVL.add_find	40
Coq.FSets.FMapAVL.remove_min_in	40
Coq.FSets.FMapAVL.remove_min_mapsto	40
Coq.FSets.FMapAVL.remove_min_bst	40
Coq.FSets.FMapAVL.remove_min_gt_tree	40
Coq.FSets.FMapAVL.remove_min_find	40
Coq.FSets.FMapAVL.merge_in	40
Coq.FSets.FMapAVL.merge_mapsto	40
Coq.FSets.FMapAVL.merge_bst	40
Coq.FSets.FMapAVL.remove_in	40
Coq.FSets.FMapAVL.remove_bst	40
Coq.FSets.FMapAVL.remove_1	40
Coq.FSets.FMapAVL.remove_2	40
Coq.FSets.FMapAVL.remove_3	40
Coq.FSets.FMapAVL.join_in	40
Coq.FSets.FMapAVL.join_bst	40
Coq.FSets.FMapAVL.join_find	40
Coq.FSets.FMapAVL.split_in_1	40
Coq.FSets.FMapAVL.split_in_2	40
Coq.FSets.FMapAVL.split_in_3	40
Coq.FSets.FMapAVL.split_bst	40
Coq.FSets.FMapAVL.split_lt_tree	40
Coq.FSets.FMapAVL.split_gt_tree	40
Coq.FSets.FMapAVL.split_find	40
Coq.FSets.FMapAVL.concat_in	40
Coq.FSets.FMapAVL.concat_bst	40
Coq.FSets.FMapAVL.concat_find	40
Coq.FSets.FMapAVL.elements_aux_mapsto	40
Coq.FSets.FMapAVL.elements_mapsto	40
Coq.FSets.FMapAVL.elements_in	40
Coq.FSets.FMapAVL.elements_aux_sort	40
Coq.FSets.FMapAVL.elements_sort	40
Coq.FSets.FMapAVL.elements_nodup	40
Coq.FSets.FMapAVL.elements_aux_cardinal	40
Coq.FSets.FMapAVL.elements_cardinal	40
Coq.FSets.FMapAVL.elements_app	40
Coq.FSets.FMapAVL.elements_node	40
Coq.FSets.FMapAVL.fold_equiv_aux	40
Coq.FSets.FMapAVL.fold_equiv	40
Coq.FSets.FMapAVL.fold_1	40
Coq.FSets.FMapAVL.flatten_e_elements	40	0.0.0.0.0	search with cache (only 1: unfold elements; only 1: simpl; only 1: intros; only 1: rewrite !elements_app, !app_nil_r, !app_assoc_reverse; only 1: auto).	0.0437200069427	5
Coq.FSets.FMapAVL.cons_1	40
Coq.FSets.FMapAVL.cons_IfEq	40
Coq.FSets.FMapAVL.equal_end_IfEq	40
Coq.FSets.FMapAVL.equal_more_IfEq	40
Coq.FSets.FMapAVL.equal_cont_IfEq	40
Coq.FSets.FMapAVL.equal_IfEq	40
Coq.FSets.FMapAVL.Equivb_elements	40
Coq.FSets.FMapAVL.equal_Equivb	40
Coq.FSets.FMapAVL.map_1	40	1.0.2.3.0.31	search with cache (only 1: simple induction m; only 1: intros; only 1: intuition_in; only 1: simpl; only 1: intros; only 1: solve [ inv MapsTo; auto ]).	4.7589840889	7153
Coq.FSets.FMapAVL.map_2	40	2.2.2.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	1.9906771183	792
Coq.FSets.FMapAVL.map_bst	40
Coq.FSets.FMapAVL.mapi_1	40
Coq.FSets.FMapAVL.mapi_2	40	0.0.0.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	0.0582408905029	8
Coq.FSets.FMapAVL.mapi_bst	40
Coq.FSets.FMapAVL.map_option_2	40
Coq.FSets.FMapAVL.map_option_bst	40
Coq.FSets.FMapAVL.map_option_find	40
Coq.FSets.FMapAVL.map2_opt_2	40
Coq.FSets.FMapAVL.map2_opt_bst	40
Coq.FSets.FMapAVL.map2_opt_1	40
Coq.FSets.FMapAVL.map2_bst	40
Coq.FSets.FMapAVL.map2_1	40
Coq.FSets.FMapAVL.map2_2	40
Coq.FSets.FMapAVL.MapsTo_1	40
Coq.FSets.FMapAVL.mem_1	40
Coq.FSets.FMapAVL.mem_2	40
Coq.FSets.FMapAVL.empty_1	40	7.1.0.1.39	search with cache (only 1: intro y1; only 1: intros; only 1: rewrite <- elements_mapsto; only 1: intuition; only 1: inversion_clear H).	0.96310210228	2024
Coq.FSets.FMapAVL.is_empty_1	40
Coq.FSets.FMapAVL.is_empty_2	40
Coq.FSets.FMapAVL.add_1	40
Coq.FSets.FMapAVL.add_2	40
Coq.FSets.FMapAVL.add_3	40
Coq.FSets.FMapAVL.remove_1	40
Coq.FSets.FMapAVL.remove_2	40
Coq.FSets.FMapAVL.remove_3	40
Coq.FSets.FMapAVL.find_1	40
Coq.FSets.FMapAVL.find_2	40
Coq.FSets.FMapAVL.fold_1	40
Coq.FSets.FMapAVL.elements_1	40
Coq.FSets.FMapAVL.elements_2	40	0.0.0.12	search with cache (only 1: intros m x e; only 1: unfold elements, MapsTo, eq_key_elt; only 1: rewrite elements_mapsto; only 1: auto).	0.643837928772	758
Coq.FSets.FMapAVL.elements_3	40	2.0.0.1.10.0	search with cache (only 1: intros; only 1: apply elements_aux_sort; only 1: apply (is_bst m); only 1: auto; only 1: intros; only 1: inversion_clear H).	0.732314109802	944
Coq.FSets.FMapAVL.elements_3w	40	0.6.0	search with cache (only 1: intros; only 1: apply PX.Sort_NoDupA; only 1: exact (elements_sort (is_bst m))).	0.0266311168671	23
Coq.FSets.FMapAVL.cardinal_1	40	3	search with cache (only 1: exact (fun m : Raw.tree elt => elements_aux_cardinal nil)).	0.165539979935	43
Coq.FSets.FMapAVL.Equivb_Equivb	40
Coq.FSets.FMapAVL.equal_1	40
Coq.FSets.FMapAVL.equal_2	40	0.0.0.1.1.0.0.0	search with cache (only 1: unfold equal; only 1: intros (m, b) (m', b') cmp; only 1: rewrite Equivb_Equivb; only 1: simpl in *; only 1: rewrite equal_Equivb; only 1: auto; only 1: auto; only 1: auto).	0.192055940628	29
Coq.FSets.FMapAVL.map_1	40
Coq.FSets.FMapAVL.map_2	40
Coq.FSets.FMapAVL.mapi_1	40
Coq.FSets.FMapAVL.mapi_2	40
Coq.FSets.FMapAVL.map2_1	40
Coq.FSets.FMapAVL.map2_2	40
Coq.FSets.FMapAVL.cons_Cmp	40
Coq.FSets.FMapAVL.compare_end_Cmp	40	2.0.0.0.0.6.9.0.2.0.0	search with cache (only 1: destruct e2; only 1: red; only 1: red; only 1: red; only 1: simpl P.flatten_e; only 1: intuition; only 1: red; only 1: red; only 1: red; only 1: red; only 1: auto with ordered_type).	3.15189886093	10483
Coq.FSets.FMapAVL.compare_more_Cmp	40
Coq.FSets.FMapAVL.compare_cont_Cmp	40
Coq.FSets.FMapAVL.compare_Cmp	40
Coq.FSets.FMapAVL.compare	40
Coq.FSets.FMapAVL.eq_seq	40	4.1	search with cache (only 1: intros; only 1: intuition).	0.0191450119019	18
Coq.FSets.FMapAVL.lt_slt	40	4.1	search with cache (only 1: intros; only 1: intuition).	0.0175070762634	18
Coq.FSets.FMapAVL.eq_1	40
Coq.FSets.FMapAVL.eq_2	40
Coq.FSets.FMapAVL.eq_refl	40
Coq.FSets.FMapAVL.eq_sym	40
Coq.FSets.FMapAVL.eq_trans	40
Coq.FSets.FMapAVL.lt_trans	40
Coq.FSets.FMapAVL.lt_not_eq	40
Coq.FSets.FSetFacts.In_eq_iff	40
Coq.FSets.FSetFacts.mem_iff	40	6	search with cache (only 1: intuition).	0.0458040237427	32
Coq.FSets.FSetFacts.not_mem_iff	40	9.44	search with cache (only 1: Ndec.eqb2eq; only 1: intuition).	4.03267812729	13325
Coq.FSets.FSetFacts.equal_iff	40	3.3.1	search with cache (only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.272727012634	70
Coq.FSets.FSetFacts.subset_iff	40	5	search with cache (only 1: intuition).	0.228625059128	59
Coq.FSets.FSetFacts.empty_iff	40
Coq.FSets.FSetFacts.is_empty_iff	40	3.3.1	search with cache (only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.233115196228	58
Coq.FSets.FSetFacts.singleton_iff	40	2	search with cache (only 1: intuition).	0.0281291007996	17
Coq.FSets.FSetFacts.add_iff	40
Coq.FSets.FSetFacts.add_neq_iff	40
Coq.FSets.FSetFacts.remove_iff	40
Coq.FSets.FSetFacts.remove_neq_iff	40	0.0.17	search with cache (only 1: intuition; only 1: apply remove_3 with x; only 1: auto).	0.844253063202	1578
Coq.FSets.FSetFacts.union_iff	40	7	search with cache (only 1: intuition).	0.21156001091	76
Coq.FSets.FSetFacts.inter_iff	40
Coq.FSets.FSetFacts.diff_iff	40
Coq.FSets.FSetFacts.filter_iff	40
Coq.FSets.FSetFacts.for_all_iff	40	5	search with cache (only 1: intuition).	0.0520660877228	24
Coq.FSets.FSetFacts.exists_iff	40	7	search with cache (only 1: intuition).	0.0530290603638	28
Coq.FSets.FSetFacts.elements_iff	40	5.1	search with cache (only 1: rewrite mem_iff; only 1: intuition).	0.124361991882	63
Coq.FSets.FSetFacts.mem_b	40
Coq.FSets.FSetFacts.empty_b	40
Coq.FSets.FSetFacts.add_b	40
Coq.FSets.FSetFacts.add_neq_b	40
Coq.FSets.FSetFacts.remove_b	40
Coq.FSets.FSetFacts.remove_neq_b	40	0.0.0.4.1.4	search with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: destruct (mem y s); only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	25.4924178123	10553
Coq.FSets.FSetFacts.singleton_b	40
Coq.FSets.FSetFacts.union_b	40
Coq.FSets.FSetFacts.inter_b	40
Coq.FSets.FSetFacts.diff_b	40
Coq.FSets.FSetFacts.elements_b	40
Coq.FSets.FSetFacts.filter_b	40
Coq.FSets.FSetFacts.for_all_b	40
Coq.FSets.FSetFacts.exists_b	40
Coq.FSets.FSetFacts.E_ST	40	13.6.6.14	search with cache (only 1: split; only 1: intuition; only 1: intuition; only 1: eauto).	0.505621194839	1885
Coq.FSets.FSetFacts.Equal_ST	40
Coq.FSets.FSetFacts.In_m	40
Coq.FSets.FSetFacts.is_empty_m	40
Coq.FSets.FSetFacts.Empty_m	40
Coq.FSets.FSetFacts.mem_m	40
Coq.FSets.FSetFacts.singleton_m	40
Coq.FSets.FSetFacts.add_m	40
Coq.FSets.FSetFacts.remove_m	40
Coq.FSets.FSetFacts.union_m	40
Coq.FSets.FSetFacts.inter_m	40
Coq.FSets.FSetFacts.diff_m	40
Coq.FSets.FSetFacts.Subset_m	40
Coq.FSets.FSetFacts.subset_m	40
Coq.FSets.FSetFacts.equal_m	40
Coq.FSets.FSetFacts.Subset_refl	40	3.0	search with cache (only 1: unfold Equal, Subset; only 1: firstorder).	0.0126779079437	5
Coq.FSets.FSetFacts.Subset_trans	40	3.1.0	search with cache (only 1: red; only 1: intros x y H s s' H0 a; only 1: intuition).	0.0179657936096	7
Coq.FSets.FSetFacts.In_s_m	40	0.0.1.0.9	search with cache (only 1: repeat red; only 1: unfold Subset; only 1: intros x y H s s' H0; only 1: rewrite (In_eq_iff s H); only 1: auto).	10.7566900253	3039
Coq.FSets.FSetFacts.Empty_s_m_Proper	40	6.1	search with cache (only 1: unfold Subset; only 1: firstorder).	0.10587310791	49
Coq.FSets.FSetFacts.add_s_m_Proper	40	2.0.0.0.0	search with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: do 2 rewrite add_iff; only 1: rewrite H; only 1: intuition).	0.054429769516	7
Coq.FSets.FSetFacts.remove_s_m_Proper	40	2.0.0.0.0	search with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: do 2 rewrite remove_iff; only 1: rewrite H; only 1: intuition).	0.0546669960022	7
Coq.FSets.FSetFacts.union_s_m_Proper	40	2.0.0.0	search with cache (only 1: unfold Subset; only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite union_iff; only 1: intuition).	0.0570440292358	6
Coq.FSets.FSetFacts.inter_s_m_Proper	40	2.0.0.0	search with cache (only 1: unfold Subset; only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite inter_iff; only 1: intuition).	0.0513949394226	6
Coq.FSets.FSetFacts.diff_s_m_Proper	40	2.0.0.0	search with cache (only 1: unfold Subset; only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite diff_iff; only 1: intuition).	0.0390229225159	6
Coq.FSets.FSetFacts.filter_equal	40
Coq.FSets.FSetFacts.filter_ext	40
Coq.FSets.FSetFacts.filter_subset	40	10.2.5.5	search with cache (only 1: repeat red; only 1: intros x y H s s' H0; only 1: do 2 (rewrite filter_iff; auto); only 1: intuition).	15.2314469814	12751
Coq.FSets.FSetPositive.In_1	40	4.0.9.0	search with cache (only 1: intros; only 1: inversion H; only 1: subst y; only 1: auto).	0.636028051376	886
Coq.FSets.FSetPositive.eq_refl	40	1.2.10.7	search with cache (only 1: intro H; only 1: intros EQ; only 1: compute; only 1: auto).	0.160300970078	524
Coq.FSets.FSetPositive.eq_sym	40	15.16	search with cache (only 1: intros; only 1: now subst).	6.60972499847	13595
Coq.FSets.FSetPositive.eq_trans	40
Coq.FSets.FSetPositive.mem_1	40	0.0	search with cache (only 1: intros; only 1: trivial).	0.0174341201782	2
Coq.FSets.FSetPositive.mem_2	40	0.0	search with cache (only 1: unfold In; only 1: trivial).	0.0174059867859	2
Coq.FSets.FSetPositive.mem_Leaf	40	0	search with cache (only 1: trivial).	0.0150530338287	1
Coq.FSets.FSetPositive.empty_1	40	8	search with cache (only 1: now subst).	0.0236551761627	19
Coq.FSets.FSetPositive.mem_node	40
Coq.FSets.FSetPositive.is_empty_spec	40
Coq.FSets.FSetPositive.is_empty_1	40
Coq.FSets.FSetPositive.is_empty_2	40	0.0.1	search with cache (only 1: intro; only 1: rewrite is_empty_spec; only 1: trivial).	0.359848976135	71
Coq.FSets.FSetPositive.subset_Leaf_s	40	4.1.15	search with cache (only 1: intros x y H; only 1: symmetry; only 1: now destruct x).	0.556797027588	879
Coq.FSets.FSetPositive.subset_spec	40
Coq.FSets.FSetPositive.subset_1	40
Coq.FSets.FSetPositive.subset_2	40
Coq.FSets.FSetPositive.equal_subset	40
Coq.FSets.FSetPositive.equal_spec	40
Coq.FSets.FSetPositive.equal_1	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: unfold Equal, Subset; only 1: firstorder).	0.0443201065063	6
Coq.FSets.FSetPositive.equal_2	40	0.0.0.0.0.1	search with cache (only 1: intros s s'; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: unfold Equal, Subset; only 1: firstorder).	0.0759310722351	29
Coq.FSets.FSetPositive.eq_dec	40
Coq.FSets.FSetPositive.lex_Opp	40
Coq.FSets.FSetPositive.compare_bool_inv	40
Coq.FSets.FSetPositive.compare_inv	40
Coq.FSets.FSetPositive.lex_Eq	40
Coq.FSets.FSetPositive.compare_bool_Eq	40	2.2.2.2.0	search with cache (only 1: intros [| ] [| ]; only 1: intuition discriminate; only 1: intuition discriminate; only 1: intuition discriminate; only 1: intuition discriminate).	0.2076420784	163
Coq.FSets.FSetPositive.compare_equal	40
Coq.FSets.FSetPositive.compare_gt	40
Coq.FSets.FSetPositive.compare_eq	40
Coq.FSets.FSetPositive.compare	40
Coq.FSets.FSetPositive.ct_cxe	40
Coq.FSets.FSetPositive.ct_xce	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0212340354919	4
Coq.FSets.FSetPositive.ct_lxl	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0209341049194	4
Coq.FSets.FSetPositive.ct_gxg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0207409858704	4
Coq.FSets.FSetPositive.ct_xll	40	0.1.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.020663022995	5
Coq.FSets.FSetPositive.ct_xgg	40	1.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0204470157623	5
Coq.FSets.FSetPositive.ct_lex	40
Coq.FSets.FSetPositive.ct_compare_bool	40
Coq.FSets.FSetPositive.compare_x_Leaf	40	2.0.1.0.1	search with cache (only 1: induction s as [| l IHl o r IHr]; only 1: unfold compare_fun, equal; only 1: simpl; only 1: tauto; only 1: trivial).	0.0504031181335	30
Coq.FSets.FSetPositive.compare_empty_x	40
Coq.FSets.FSetPositive.compare_x_empty	40
Coq.FSets.FSetPositive.ct_compare_fun	40
Coq.FSets.FSetPositive.lt_trans	40
Coq.FSets.FSetPositive.lt_not_eq	40
Coq.FSets.FSetPositive.add_spec	40
Coq.FSets.FSetPositive.add_1	40
Coq.FSets.FSetPositive.add_2	40	6.0.0	search with cache (only 1: intros; only 1: apply <- add_spec; only 1: intuition congruence).	0.0341939926147	18
Coq.FSets.FSetPositive.add_3	40
Coq.FSets.FSetPositive.remove_spec	40
Coq.FSets.FSetPositive.remove_1	40
Coq.FSets.FSetPositive.remove_2	40	0.1.1	search with cache (only 1: intros; only 1: rewrite remove_spec; only 1: tauto).	0.0667428970337	33
Coq.FSets.FSetPositive.remove_3	40	0.0.18	search with cache (only 1: intros s i Hi; only 1: rewrite remove_spec; only 1: tauto).	4.32446694374	4493
Coq.FSets.FSetPositive.singleton_1	40
Coq.FSets.FSetPositive.singleton_2	40	1.0.0.0.0.0	search with cache (only 1: unfold singleton; only 1: intros x y; only 1: rewrite add_spec; only 1: unfold In; only 1: rewrite mem_Leaf; only 1: intuition discriminate).	0.0364911556244	7
Coq.FSets.FSetPositive.union_spec	40
Coq.FSets.FSetPositive.union_1	40
Coq.FSets.FSetPositive.union_2	40
Coq.FSets.FSetPositive.union_3	40	9.1.0	search with cache (only 1: intros; only 1: apply <- union_spec; only 1: firstorder).	1.33590888977	991
Coq.FSets.FSetPositive.inter_spec	40
Coq.FSets.FSetPositive.inter_1	40
Coq.FSets.FSetPositive.inter_2	40	0.0.0	search with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.0263998508453	3
Coq.FSets.FSetPositive.inter_3	40	0.0.0	search with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.0321531295776	3
Coq.FSets.FSetPositive.diff_spec	40
Coq.FSets.FSetPositive.diff_1	40
Coq.FSets.FSetPositive.diff_2	40	0.0.1	search with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.322259902954	143
Coq.FSets.FSetPositive.diff_3	40	0.0.0	search with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.0492730140686	3
Coq.FSets.FSetPositive.fold_1	40
Coq.FSets.FSetPositive.cardinal_1	40
Coq.FSets.FSetPositive.xfilter_spec	40
Coq.FSets.FSetPositive.filter_1	40
Coq.FSets.FSetPositive.filter_2	40	0.0.0.0	search with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	0.0337569713593	4
Coq.FSets.FSetPositive.filter_3	40	0.0.0.0	search with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	0.0398070812225	4
Coq.FSets.FSetPositive.xforall_spec	40
Coq.FSets.FSetPositive.for_all_1	40
Coq.FSets.FSetPositive.for_all_2	40	0.0.0.0	search with cache (only 1: intros s f _; only 1: unfold for_all; only 1: rewrite xforall_spec; only 1: trivial).	0.0629100799561	4
Coq.FSets.FSetPositive.xexists_spec	40
Coq.FSets.FSetPositive.exists_1	40
Coq.FSets.FSetPositive.exists_2	40	0.0.0.0	search with cache (only 1: intros s f _; only 1: unfold exists_; only 1: rewrite xexists_spec; only 1: trivial).	0.0348651409149	4
Coq.FSets.FSetPositive.partition_filter	40
Coq.FSets.FSetPositive.partition_1	40
Coq.FSets.FSetPositive.partition_2	40	0.0.0	search with cache (only 1: intros; only 1: rewrite partition_filter; only 1: apply eq_refl).	0.0229301452637	3
Coq.FSets.FSetPositive.xelements_spec	40
Coq.FSets.FSetPositive.elements_1	40
Coq.FSets.FSetPositive.elements_2	40
Coq.FSets.FSetPositive.lt_rev_append	40
Coq.FSets.FSetPositive.elements_3	40
Coq.FSets.FSetPositive.elements_3w	40
Coq.FSets.FSetPositive.choose_1	40
Coq.FSets.FSetPositive.choose_2	40
Coq.FSets.FSetPositive.choose_empty	40
Coq.FSets.FSetPositive.choose_3'	40
Coq.FSets.FSetPositive.choose_3	40
Coq.FSets.FSetPositive.min_elt_1	40
Coq.FSets.FSetPositive.min_elt_3	40
Coq.FSets.FSetPositive.min_elt_2	40
Coq.FSets.FSetPositive.max_elt_1	40
Coq.FSets.FSetPositive.max_elt_3	40
Coq.FSets.FSetPositive.max_elt_2	40
Coq.FSets.FMapPositive.append_assoc_0	40
Coq.FSets.FMapPositive.append_assoc_1	40
Coq.FSets.FMapPositive.append_neutral_r	40
Coq.FSets.FMapPositive.append_neutral_l	40	0.0.0.0.0.0.0	search with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	0.027979850769	7
Coq.FSets.FMapPositive.gempty	40	6.2.3.2.3.28	search with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: auto).	2.60874891281	6929
Coq.FSets.FMapPositive.gss	40
Coq.FSets.FMapPositive.gleaf	40	0.0.0.0.0.0.0	search with cache (only 1: destruct i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0257148742676	7
Coq.FSets.FMapPositive.gso	40
Coq.FSets.FMapPositive.rleaf	40	7.5.5.2	search with cache (only 1: induction i; only 1: auto; only 1: auto; only 1: auto).	1.45099496841	2135
Coq.FSets.FMapPositive.grs	40
Coq.FSets.FMapPositive.gro	40
Coq.FSets.FMapPositive.xelements_correct	40
Coq.FSets.FMapPositive.elements_correct	40
Coq.FSets.FMapPositive.xfind_left	40
Coq.FSets.FMapPositive.xelements_ii	40
Coq.FSets.FMapPositive.xelements_io	40
Coq.FSets.FMapPositive.xelements_oo	40
Coq.FSets.FMapPositive.xelements_oi	40
Coq.FSets.FMapPositive.xelements_ih	40
Coq.FSets.FMapPositive.xelements_oh	40
Coq.FSets.FMapPositive.xelements_hi	40
Coq.FSets.FMapPositive.xelements_ho	40
Coq.FSets.FMapPositive.find_xfind_h	40	4.1.0.0.0.0.7	search with cache (only 1: induction i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	9.99847698212	7320
Coq.FSets.FMapPositive.xelements_complete	40
Coq.FSets.FMapPositive.elements_complete	40
Coq.FSets.FMapPositive.cardinal_1	40
Coq.FSets.FMapPositive.mem_find	40
Coq.FSets.FMapPositive.Empty_alt	40
Coq.FSets.FMapPositive.Empty_Node	40
Coq.FSets.FMapPositive.mem_1	40
Coq.FSets.FMapPositive.mem_2	40
Coq.FSets.FMapPositive.MapsTo_1	40	3.4.4	search with cache (only 1: destruct m; only 1: congruence; only 1: congruence).	0.233042001724	143
Coq.FSets.FMapPositive.find_1	40	0.0	search with cache (only 1: intros; only 1: auto).	0.0204658508301	2
Coq.FSets.FMapPositive.find_2	40	0.0	search with cache (only 1: unfold MapsTo; only 1: auto).	0.0206019878387	2
Coq.FSets.FMapPositive.empty_1	40	7.2	search with cache (only 1: rewrite Empty_alt; only 1: exact gempty).	0.143028974533	45
Coq.FSets.FMapPositive.is_empty_1	40
Coq.FSets.FMapPositive.is_empty_2	40
Coq.FSets.FMapPositive.add_1	40
Coq.FSets.FMapPositive.add_2	40
Coq.FSets.FMapPositive.add_3	40	0.0.0.1.0	search with cache (only 1: unfold MapsTo; only 1: intro H; only 1: rewrite gso; only 1: auto; only 1: auto).	0.0610938072205	19
Coq.FSets.FMapPositive.remove_1	40
Coq.FSets.FMapPositive.remove_2	40
Coq.FSets.FMapPositive.remove_3	40
Coq.FSets.FMapPositive.elements_1	40
Coq.FSets.FMapPositive.elements_2	40
Coq.FSets.FMapPositive.xelements_bits_lt_1	40
Coq.FSets.FMapPositive.xelements_bits_lt_2	40
Coq.FSets.FMapPositive.xelements_sort	40
Coq.FSets.FMapPositive.elements_3	40
Coq.FSets.FMapPositive.elements_3w	40
Coq.FSets.FMapPositive.xgmapi	40
Coq.FSets.FMapPositive.gmapi	40
Coq.FSets.FMapPositive.mapi_1	40
Coq.FSets.FMapPositive.mapi_2	40
Coq.FSets.FMapPositive.map_1	40
Coq.FSets.FMapPositive.map_2	40	0.0.0.0.0.0.2.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply mem_2; only 1: rewrite mem_find; only 1: destruct H as (v, H); only 1: generalize (find_1 H); only 1: clear H; only 1: unfold map; only 1: intros; only 1: rewrite gmapi in H; only 1: destruct (find x m); only 1: auto; only 1: simpl in *; only 1: discriminate).	10.4793298244	4583
Coq.FSets.FMapPositive.xgmap2_l	40
Coq.FSets.FMapPositive.xgmap2_r	40
Coq.FSets.FMapPositive.gmap2	40
Coq.FSets.FMapPositive.map2_1	40
Coq.FSets.FMapPositive.map2_2	40
Coq.FSets.FMapPositive.xfoldi_1	40
Coq.FSets.FMapPositive.fold_1	40
Coq.FSets.FMapPositive.equal_1	40
Coq.FSets.FMapPositive.equal_2	40
Coq.FSets.FMapPositive.gsspec	40
Coq.FSets.FMapPositive.gsident	40
Coq.FSets.FMapPositive.xmap2_lr	40	7.0.3.0.13.1	search with cache (only 1: intros; only 1: induction m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	20.477394104	25413
Coq.FSets.FMapPositive.map2_commut	40
Coq.FSets.FMapFacts.eq_bool_alt	40
Coq.FSets.FMapFacts.eq_option_alt	40
Coq.FSets.FMapFacts.MapsTo_fun	40
Coq.FSets.FMapFacts.In_iff	40
Coq.FSets.FMapFacts.MapsTo_iff	40	1.5.0.5.0	search with cache (only 1: split; only 1: intros; only 1: apply (MapsTo_1 H H0); only 1: intros; only 1: apply (MapsTo_1 (E.eq_sym H) H0)).	0.195044994354	289
Coq.FSets.FMapFacts.mem_in_iff	40	9	search with cache (only 1: intuition).	0.118009805679	71
Coq.FSets.FMapFacts.not_mem_in_iff	40
Coq.FSets.FMapFacts.In_dec	40
Coq.FSets.FMapFacts.find_mapsto_iff	40	20.0	search with cache (only 1: intros; only 1: intuition).	0.420850992203	1311
Coq.FSets.FMapFacts.not_find_in_iff	40
Coq.FSets.FMapFacts.in_find_iff	40
Coq.FSets.FMapFacts.equal_iff	40
Coq.FSets.FMapFacts.empty_mapsto_iff	40
Coq.FSets.FMapFacts.empty_in_iff	40	0.0.13.1.0.5.0	search with cache (only 1: intuition; only 1: elim H; only 1: intuition; only 1: elim H; only 1: clear H H0; only 1: intuition; only 1: apply (empty_1 H)).	7.64342212677	9414
Coq.FSets.FMapFacts.is_empty_iff	40	9.1	search with cache (only 1: intros; only 1: intuition).	0.144659996033	81
Coq.FSets.FMapFacts.add_mapsto_iff	40
Coq.FSets.FMapFacts.add_in_iff	40
Coq.FSets.FMapFacts.add_neq_mapsto_iff	40	0.0.0.4.0	search with cache (only 1: intros; only 1: intuition; only 1: apply add_3 with x e; only 1: auto; only 1: auto).	0.0209119319916	9
Coq.FSets.FMapFacts.add_neq_in_iff	40
Coq.FSets.FMapFacts.remove_mapsto_iff	40
Coq.FSets.FMapFacts.remove_in_iff	40
Coq.FSets.FMapFacts.remove_neq_mapsto_iff	40	0.0.0.0.2.1.0	search with cache (only 1: intros; only 1: split; only 1: intros; only 1: apply remove_3 with x; only 1: auto; only 1: apply remove_2; only 1: intuition).	0.0181710720062	10
Coq.FSets.FMapFacts.remove_neq_in_iff	40	0.0.1.0.3.0.9.0.3.1	search with cache (only 1: split; only 1: intros (e', H0); only 1: exists e'; only 1: apply remove_3 with x; only 1: auto; only 1: intros (e', H0); only 1: exists e'; only 1: apply remove_2; only 1: auto; only 1: auto).	1.48993897438	3678
Coq.FSets.FMapFacts.elements_mapsto_iff	40
Coq.FSets.FMapFacts.elements_in_iff	40	6.9.0.4.3.1.3.4.0.3	search with cache (only 1: unfold In; only 1: split; only 1: intros (e0, H0); only 1: exists e0; only 1: apply elements_1; only 1: auto; only 1: intros (e0, H0); only 1: exists e0; only 1: apply elements_2; only 1: auto with map).	25.1748168468	60002
Coq.FSets.FMapFacts.map_mapsto_iff	40
Coq.FSets.FMapFacts.map_in_iff	40
Coq.FSets.FMapFacts.mapi_in_iff	40
Coq.FSets.FMapFacts.mapi_inv	40
Coq.FSets.FMapFacts.mapi_1bis	40
Coq.FSets.FMapFacts.mapi_mapsto_iff	40
Coq.FSets.FMapFacts.mem_find_b	40
Coq.FSets.FMapFacts.mem_b	40
Coq.FSets.FMapFacts.find_o	40	0.0.0.0.3.5.0.0.5.0	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff; only 1: rewrite <- find_mapsto_iff; only 1: repeat split; only 1: apply MapsTo_1; only 1: auto with map; only 1: apply MapsTo_1; only 1: auto with map).	3.04026508331	2758
Coq.FSets.FMapFacts.empty_o	40	0.2.14.1.0.0.4.0	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff; only 1: intuition; only 1: rewrite empty_mapsto_iff in H; only 1: elim H; only 1: discriminate).	8.25594592094	12458
Coq.FSets.FMapFacts.empty_a	40
Coq.FSets.FMapFacts.add_eq_o	40	2.1	search with cache (only 1: intros; only 1: auto with map).	0.0192859172821	5
Coq.FSets.FMapFacts.add_neq_o	40	1.11.0.7.2.1	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intros; only 1: rewrite <- 2!find_mapsto_iff; only 1: intuition; only 1: apply (add_3 H H0)).	2.40797305107	2985
Coq.FSets.FMapFacts.add_o	40	0.0.0.0.1.4.13.1	search with cache (only 1: intros; only 1: destruct (eq_dec x y) as [E| E]; only 1: auto with map; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- 2!find_mapsto_iff; only 1: apply add_neq_mapsto_iff; only 1: intuition).	8.08220100403	7240
Coq.FSets.FMapFacts.add_eq_b	40
Coq.FSets.FMapFacts.add_neq_b	40
Coq.FSets.FMapFacts.add_b	40
Coq.FSets.FMapFacts.remove_eq_o	40
Coq.FSets.FMapFacts.remove_neq_o	40	0.0.0.2.0	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).	0.0337150096893	7
Coq.FSets.FMapFacts.remove_o	40	4.5.0.0	search with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: auto with map; only 1: auto with map).	0.654557943344	227
Coq.FSets.FMapFacts.remove_eq_b	40
Coq.FSets.FMapFacts.remove_neq_b	40
Coq.FSets.FMapFacts.remove_b	40	0.1.0.0.1.1.0.2.0.0	search with cache (only 1: intros; only 1: do 2 rewrite mem_find_b; only 1: unfold eqb; only 1: destruct (eq_dec x y); only 1: rewrite remove_eq_o; only 1: auto; only 1: auto with map; only 1: rewrite remove_neq_o; only 1: auto; only 1: intuition).	2.83436512947	2083
Coq.FSets.FMapFacts.map_o	40
Coq.FSets.FMapFacts.map_b	40
Coq.FSets.FMapFacts.mapi_b	40
Coq.FSets.FMapFacts.mapi_o	40
Coq.FSets.FMapFacts.map2_1bis	40
Coq.FSets.FMapFacts.elements_o	40
Coq.FSets.FMapFacts.elements_b	40
Coq.FSets.FMapFacts.Equal_mapsto_iff	40
Coq.FSets.FMapFacts.Equal_Equiv	40
Coq.FSets.FMapFacts.Equiv_Equivb	40
Coq.FSets.FMapFacts.Equal_Equivb	40
Coq.FSets.FMapFacts.Equal_Equivb_eqdec	40
Coq.FSets.FMapFacts.Equal_refl	40	5.2.0	search with cache (only 1: intros; only 1: rewrite Equal_mapsto_iff; only 1: intuition).	0.0875020027161	41
Coq.FSets.FMapFacts.Equal_sym	40	2.1.0	search with cache (only 1: red; only 1: intros; only 1: auto).	0.00982785224915	6
Coq.FSets.FMapFacts.Equal_trans	40	7.5.2.0	search with cache (only 1: unfold Equal; only 1: intros; only 1: rewrite <- H0; only 1: auto with map).	3.09119701385	2602
Coq.FSets.FMapFacts.Equal_ST	40	2.0	search with cache (only 1: unfold Equal; only 1: auto).	0.010892868042	4
Coq.FSets.FMapFacts.In_m_Proper	40
Coq.FSets.FMapFacts.MapsTo_m_Proper	40
Coq.FSets.FMapFacts.Empty_m_Proper	40
Coq.FSets.FMapFacts.is_empty_m_Proper	40
Coq.FSets.FMapFacts.mem_m_Proper	40
Coq.FSets.FMapFacts.find_m_Proper	40	0.0.6.6.13.0	search with cache (only 1: intros k k' Hk m m' Hm; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- 2!find_mapsto_iff; only 1: rewrite (MapsTo_iff m e Hk), find_mapsto_iff, find_mapsto_iff, Hm; only 1: intuition).	15.829944849	10196
Coq.FSets.FMapFacts.add_m_Proper	40
Coq.FSets.FMapFacts.remove_m_Proper	40
Coq.FSets.FMapFacts.map_m_Proper	40	7.11.10.10.0.2	search with cache (only 1: unfold Equal; only 1: intros; only 1: rewrite map_o; only 1: rewrite map_o; only 1: rewrite H; only 1: intuition).	13.7073330879	24262
Coq.FSets.FMapFacts.eqk_equiv	40
Coq.FSets.FMapFacts.eqke_equiv	40
Coq.FSets.FMapFacts.InA_eqke_eqk	40
Coq.FSets.FMapFacts.NoDupA_eqk_eqke	40
Coq.FSets.FMapFacts.findA_rev	40
Coq.FSets.FMapFacts.elements_Empty	40
Coq.FSets.FMapFacts.elements_empty	40
Coq.FSets.FMapFacts.of_list_1	40
Coq.FSets.FMapFacts.of_list_1b	40
Coq.FSets.FMapFacts.of_list_2	40
Coq.FSets.FMapFacts.of_list_3	40
Coq.FSets.FMapFacts.fold_spec_right	40
Coq.FSets.FMapFacts.fold_rec	40
Coq.FSets.FMapFacts.fold_rec_bis	40
Coq.FSets.FMapFacts.fold_rec_nodep	40	0.0.1.0.1.1	search with cache (only 1: intros A P f i m Hempty Hstep; only 1: apply fold_rec; only 1: intros; only 1: auto; only 1: intros; only 1: auto).	0.196057081223	56
Coq.FSets.FMapFacts.fold_rec_weak	40
Coq.FSets.FMapFacts.fold_rel	40
Coq.FSets.FMapFacts.map_induction	40
Coq.FSets.FMapFacts.map_induction_bis	40
Coq.FSets.FMapFacts.fold_identity	40
Coq.FSets.FMapFacts.fold_init	40
Coq.FSets.FMapFacts.fold_Empty	40
Coq.FSets.FMapFacts.fold_commutes	40
Coq.FSets.FMapFacts.fold_Equal	40
Coq.FSets.FMapFacts.fold_Equal2	40
Coq.FSets.FMapFacts.fold_Add	40
Coq.FSets.FMapFacts.fold_add	40
Coq.FSets.FMapFacts.cardinal_fold	40
Coq.FSets.FMapFacts.cardinal_Empty	40
Coq.FSets.FMapFacts.Equal_cardinal	40
Coq.FSets.FMapFacts.cardinal_1	40	0.0.0.0.0.33.0	search with cache (only 1: intros; only 1: revert H; only 1: rewrite cardinal_1, elements_Empty; only 1: destruct (elements m); only 1: intuition; only 1: intuition; only 1: discriminate).	27.5807130337	26799
Coq.FSets.FMapFacts.cardinal_2	40	0.0.0.0.0.0.1.7.4.12	search with cache (only 1: intros i m k e Hnotin; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_Add; only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto; only 1: red; only 1: auto).	20.6833379269	17656
Coq.FSets.FMapFacts.cardinal_inv_1	40
Coq.FSets.FMapFacts.cardinal_inv_2	40
Coq.FSets.FMapFacts.cardinal_inv_2b	40
Coq.FSets.FMapFacts.filter_iff	40
Coq.FSets.FMapFacts.for_all_iff	40
Coq.FSets.FMapFacts.exists_iff	40
Coq.FSets.FMapFacts.Disjoint_alt	40
Coq.FSets.FMapFacts.partition_iff_1	40
Coq.FSets.FMapFacts.partition_iff_2	40
Coq.FSets.FMapFacts.partition_Partition	40
Coq.FSets.FMapFacts.Partition_In	40
Coq.FSets.FMapFacts.Disjoint_sym	40	14.2.0.7	search with cache (only 1: intros; only 1: rewrite Disjoint_alt; only 1: intros k e; only 1: firstorder).	3.70833396912	5675
Coq.FSets.FMapFacts.Partition_sym	40
Coq.FSets.FMapFacts.Partition_Empty	40
Coq.FSets.FMapFacts.Partition_Add	40
Coq.FSets.FMapFacts.Partition_fold	40
Coq.FSets.FMapFacts.Partition_cardinal	40
Coq.FSets.FMapFacts.Partition_partition	40
Coq.FSets.FMapFacts.update_mapsto_iff	40
Coq.FSets.FMapFacts.update_dec	40
Coq.FSets.FMapFacts.update_in_iff	40
Coq.FSets.FMapFacts.diff_mapsto_iff	40
Coq.FSets.FMapFacts.diff_in_iff	40
Coq.FSets.FMapFacts.restrict_mapsto_iff	40
Coq.FSets.FMapFacts.restrict_in_iff	40
Coq.FSets.FMapFacts.cardinal_m_Proper	40	3.0.0.0.0.1.1.0.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_Equal with (eqA := eq); only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto; only 1: auto).	0.523591041565	376
Coq.FSets.FMapFacts.Disjoint_m_Proper	40
Coq.FSets.FMapFacts.Partition_m_Proper	40
Coq.FSets.FMapFacts.update_m_Proper	40
Coq.FSets.FMapFacts.restrict_m_Proper	40
Coq.FSets.FMapFacts.diff_m_Proper	40
Coq.FSets.FMapFacts.sort_equivlistA_eqlistA	40
Coq.FSets.FMapFacts.gtb_1	40
Coq.FSets.FMapFacts.leb_1	40
Coq.FSets.FMapFacts.gtb_compat	40
Coq.FSets.FMapFacts.leb_compat	40
Coq.FSets.FMapFacts.elements_split	40
Coq.FSets.FMapFacts.elements_Add	40
Coq.FSets.FMapFacts.elements_Add_Above	40
Coq.FSets.FMapFacts.elements_Add_Below	40
Coq.FSets.FMapFacts.elements_Equal_eqlistA	40
Coq.FSets.FMapFacts.max_elt_Above	40
Coq.FSets.FMapFacts.max_elt_MapsTo	40
Coq.FSets.FMapFacts.max_elt_Empty	40
Coq.FSets.FMapFacts.min_elt_Below	40
Coq.FSets.FMapFacts.min_elt_MapsTo	40
Coq.FSets.FMapFacts.min_elt_Empty	40	1.0.4.0.7.0.1	search with cache (only 1: unfold min_elt, Below; only 1: intros; only 1: rewrite elements_Empty; only 1: induction (elements m); only 1: auto; only 1: destruct a; only 1: discriminate).	12.042181015	11689
Coq.FSets.FMapFacts.map_induction_max	40
Coq.FSets.FMapFacts.map_induction_min	40
Coq.FSets.FMapFacts.fold_Equal	40
Coq.FSets.FMapFacts.fold_Add_Above	40
Coq.FSets.FMapFacts.fold_Add_Below	40
Coq.FSets.FMapWeakList.empty_1	40	1.45	search with cache (only 1: compute; only 1: inversion_clear 1).	0.350967168808	1133
Coq.FSets.FMapWeakList.empty_NoDup	40	5.26	search with cache (only 1: unfold Empty, empty; only 1: intuition).	0.344949960709	879
Coq.FSets.FMapWeakList.is_empty_1	40
Coq.FSets.FMapWeakList.is_empty_2	40	7.0.0.1	search with cache (only 1: intros m; only 1: case m; only 1: auto; only 1: inversion 1).	0.949949026108	626
Coq.FSets.FMapWeakList.mem_1	40
Coq.FSets.FMapWeakList.mem_2	40
Coq.FSets.FMapWeakList.find_2	40
Coq.FSets.FMapWeakList.find_1	40
Coq.FSets.FMapWeakList.find_eq	40
Coq.FSets.FMapWeakList.add_1	40
Coq.FSets.FMapWeakList.add_2	40
Coq.FSets.FMapWeakList.add_3	40
Coq.FSets.FMapWeakList.add_3'	40
Coq.FSets.FMapWeakList.add_NoDup	40
Coq.FSets.FMapWeakList.add_eq	40
Coq.FSets.FMapWeakList.add_not_eq	40
Coq.FSets.FMapWeakList.remove_1	40
Coq.FSets.FMapWeakList.remove_2	40
Coq.FSets.FMapWeakList.remove_3	40	2.0.1.1.1.0.2.0.0	search with cache (only 1: intros m Hm x y e; only 1: clear Hm; only 1: unfold PX.MapsTo; only 1: functional induction (remove x m); only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: auto; only 1: auto).	12.0100970268	5437
Coq.FSets.FMapWeakList.remove_3'	40	1.0.2.0.3.0.5.1	search with cache (only 1: intros m Hm x y; only 1: clear Hm; only 1: functional induction (remove x m); only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: auto; only 1: auto).	8.97151398659	4517
Coq.FSets.FMapWeakList.remove_NoDup	40
Coq.FSets.FMapWeakList.elements_1	40	1.0.2.0	search with cache (only 1: intros m; only 1: case m; only 1: auto; only 1: auto).	0.0327198505402	11
Coq.FSets.FMapWeakList.elements_2	40	0	search with cache (only 1: auto).	0.0132250785828	1
Coq.FSets.FMapWeakList.elements_3w	40	8.0	search with cache (only 1: intros; only 1: auto).	0.0305778980255	20
Coq.FSets.FMapWeakList.fold_1	40	1.2.1.32	search with cache (only 1: induction m; only 1: intuition; only 1: simpl in *; only 1: intuition).	5.39144611359	7554
Coq.FSets.FMapWeakList.submap_1	40
Coq.FSets.FMapWeakList.submap_2	40
Coq.FSets.FMapWeakList.equal_1	40
Coq.FSets.FMapWeakList.equal_2	40
Coq.FSets.FMapWeakList.map_1	40
Coq.FSets.FMapWeakList.map_2	40
Coq.FSets.FMapWeakList.map_NoDup	40
Coq.FSets.FMapWeakList.mapi_1	40
Coq.FSets.FMapWeakList.mapi_2	40
Coq.FSets.FMapWeakList.mapi_NoDup	40
Coq.FSets.FMapWeakList.fold_right_pair_NoDup	40
Coq.FSets.FMapWeakList.combine_NoDup	40
Coq.FSets.FMapWeakList.combine_l_1	40
Coq.FSets.FMapWeakList.combine_r_1	40
Coq.FSets.FMapWeakList.combine_1	40
Coq.FSets.FMapWeakList.map2_NoDup	40
Coq.FSets.FMapWeakList.map2_0	40
Coq.FSets.FMapWeakList.map2_1	40
Coq.FSets.FMapWeakList.map2_2	40
Coq.FSets.FMapWeakList.MapsTo_1	40	2.2.11.7.1.2	search with cache (only 1: intros m x y e; only 1: intuition; only 1: apply InA_eqA with (x, e); only 1: intuition; only 1: auto; only 1: auto).	21.0112638474	19434
Coq.FSets.FMapWeakList.mem_1	40
Coq.FSets.FMapWeakList.mem_2	40
Coq.FSets.FMapWeakList.empty_1	40	8.35	search with cache (only 1: compute; only 1: inversion 1).	0.681300878525	1861
Coq.FSets.FMapWeakList.is_empty_1	40
Coq.FSets.FMapWeakList.is_empty_2	40
Coq.FSets.FMapWeakList.add_1	40
Coq.FSets.FMapWeakList.add_2	40
Coq.FSets.FMapWeakList.add_3	40
Coq.FSets.FMapWeakList.remove_1	40
Coq.FSets.FMapWeakList.remove_2	40
Coq.FSets.FMapWeakList.remove_3	40
Coq.FSets.FMapWeakList.find_1	40
Coq.FSets.FMapWeakList.find_2	40
Coq.FSets.FMapWeakList.elements_1	40	0.12	search with cache (only 1: intros; only 1: auto).	0.0720679759979	115
Coq.FSets.FMapWeakList.elements_2	40	0.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0185868740082	2
Coq.FSets.FMapWeakList.elements_3w	40	9.10	search with cache (only 1: induction m; only 1: auto).	0.34993481636	621
Coq.FSets.FMapWeakList.cardinal_1	40	21	search with cache (only 1: intuition).	0.143537044525	406
Coq.FSets.FMapWeakList.fold_1	40
Coq.FSets.FMapWeakList.equal_1	40
Coq.FSets.FMapWeakList.equal_2	40
Coq.FSets.FMapWeakList.map_1	40
Coq.FSets.FMapWeakList.map_2	40
Coq.FSets.FMapWeakList.mapi_1	40
Coq.FSets.FMapWeakList.mapi_2	40
Coq.FSets.FMapWeakList.map2_1	40
Coq.FSets.FMapWeakList.map2_2	40
Coq.FSets.FSetToFiniteSet.In_In	40	6	search with cache (only 1: firstorder).	0.323570966721	78
Coq.FSets.FSetToFiniteSet.Subset_Included	40	0.0.1	search with cache (only 1: compute; only 1: intros; only 1: auto with fset).	0.0188360214233	4
Coq.FSets.FSetToFiniteSet.Equal_Same_set	40	13.2	search with cache (only 1: unfold Subset, Included, In, mkEns; only 1: firstorder).	2.63856697083	1345
Coq.FSets.FSetToFiniteSet.empty_Empty_Set	40	3.0.1.0.2	search with cache (only 1: unfold Subset, Included, Same_set, In, mkEns; only 1: intuition; only 1: intro x; only 1: unfold In; only 1: Dec.fsetdec).	0.102277040482	59
Coq.FSets.FSetToFiniteSet.Empty_Empty_set	40	9.5.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: unfold Empty; only 1: firstorder).	5.84998607635	5146
Coq.FSets.FSetToFiniteSet.singleton_Singleton	40	0.2.0	search with cache (only 1: intros; only 1: unfold Subset, Included, Same_set, In, mkEns; only 1: intuition).	0.0287969112396	5
Coq.FSets.FSetToFiniteSet.union_Union	40
Coq.FSets.FSetToFiniteSet.inter_Intersection	40
Coq.FSets.FSetToFiniteSet.add_Add	40
Coq.FSets.FSetToFiniteSet.Add_Add	40
Coq.FSets.FSetToFiniteSet.remove_Subtract	40
Coq.FSets.FSetToFiniteSet.mkEns_Finite	40
Coq.FSets.FSetToFiniteSet.mkEns_cardinal	40
Coq.FSets.FSetToFiniteSet.Ens_to_FSet	40
Coq.FSets.FSetEqProperties.mem_eq	40	17	search with cache (only 1: Dec.fsetdec).	35.4531700611	16144
Coq.FSets.FSetEqProperties.equal_mem_1	40
Coq.FSets.FSetEqProperties.equal_mem_2	40
Coq.FSets.FSetEqProperties.subset_mem_1	40
Coq.FSets.FSetEqProperties.subset_mem_2	40
Coq.FSets.FSetEqProperties.empty_mem	40
Coq.FSets.FSetEqProperties.is_empty_equal_empty	40
Coq.FSets.FSetEqProperties.choose_mem_1	40	0.0.0.0.0.0.0.11	search with cache (only 1: generalize (FM.mem_iff s x), (FM.mem_iff s' y); only 1: destruct (mem x s); only 1: destruct (mem y s'); only 1: intuition; only 1: intuition; only 1: destruct (mem y s'); only 1: intuition; only 1: intuition).	1.7199640274	1572
Coq.FSets.FSetEqProperties.choose_mem_2	40	0	search with cache (only 1: auto with set).	0.0095911026001	1
Coq.FSets.FSetEqProperties.add_mem_1	40	2.2.1	search with cache (only 1: destruct (mem x s); only 1: auto with set; only 1: auto with set).	0.0663599967957	32
Coq.FSets.FSetEqProperties.add_mem_2	40
Coq.FSets.FSetEqProperties.remove_mem_1	40	0.1	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.0117399692535	3
Coq.FSets.FSetEqProperties.remove_mem_2	40
Coq.FSets.FSetEqProperties.singleton_equal_add	40	2	search with cache (only 1: auto with set).	0.0194458961487	3
Coq.FSets.FSetEqProperties.union_mem	40
Coq.FSets.FSetEqProperties.inter_mem	40
Coq.FSets.FSetEqProperties.diff_mem	40
Coq.FSets.FSetEqProperties.mem_3	40	0.8	search with cache (only 1: rewrite <- not_mem_iff; only 1: intuition).	0.124397993088	74
Coq.FSets.FSetEqProperties.mem_4	40	0.0.5	search with cache (only 1: rewrite <- not_mem_iff; only 1: intros; only 1: auto with fset).	0.0970740318298	73
Coq.FSets.FSetEqProperties.equal_refl	40	0.1	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.0199689865112	3
Coq.FSets.FSetEqProperties.equal_sym	40	3.0.0.4.0.0.4.5	search with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	8.81170296669	7536
Coq.FSets.FSetEqProperties.equal_trans	40	0.0.2	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.304745197296	137
Coq.FSets.FSetEqProperties.equal_equal	40	0.1.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0172758102417	4
Coq.FSets.FSetEqProperties.equal_cardinal	40	0.0.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.014955997467	3
Coq.FSets.FSetEqProperties.subset_refl	40	0.4.0.1	search with cache (only 1: apply subset_1; only 1: unfold Subset; only 1: intros; only 1: intuition).	0.0138881206512	9
Coq.FSets.FSetEqProperties.subset_antisym	40	5.0	search with cache (only 1: intros; only 1: auto with set).	0.0202000141144	11
Coq.FSets.FSetEqProperties.subset_trans	40
Coq.FSets.FSetEqProperties.subset_equal	40	0	search with cache (only 1: auto with set).	0.00909399986267	1
Coq.FSets.FSetEqProperties.choose_mem_3	40
Coq.FSets.FSetEqProperties.choose_mem_4	40
Coq.FSets.FSetEqProperties.add_mem_3	40	1	search with cache (only 1: auto with set).	0.00995802879333	2
Coq.FSets.FSetEqProperties.add_equal	40	0	search with cache (only 1: auto with set).	0.00931096076965	1
Coq.FSets.FSetEqProperties.remove_mem_3	40
Coq.FSets.FSetEqProperties.remove_equal	40	1.1	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.0441238880157	4
Coq.FSets.FSetEqProperties.add_remove	40
Coq.FSets.FSetEqProperties.remove_add	40	0.0.1.3	search with cache (only 1: rewrite <- not_mem_iff; only 1: intros; only 1: apply equal_1; only 1: Dec.fsetdec).	0.241891145706	25
Coq.FSets.FSetEqProperties.is_empty_cardinal	40	0.0.0.0.0.3.3.3	search with cache (only 1: apply eq_true_iff_eq; only 1: rewrite <- is_empty_iff; only 1: rewrite elements_Empty, cardinal_1; only 1: destruct (elements s); only 1: intuition; only 1: intuition; only 1: discriminate; only 1: discriminate).	26.057751894	11682
Coq.FSets.FSetEqProperties.singleton_mem_1	40	2	search with cache (only 1: auto with set).	0.00892400741577	3
Coq.FSets.FSetEqProperties.singleton_mem_2	40	2.12.2	search with cache (only 1: intro H; only 1: rewrite <- not_mem_iff; only 1: intuition).	14.8165309429	4572
Coq.FSets.FSetEqProperties.singleton_mem_3	40
Coq.FSets.FSetEqProperties.union_sym	40	2.1	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.0572299957275	5
Coq.FSets.FSetEqProperties.union_subset_equal	40	0	search with cache (only 1: auto with set).	0.0131299495697	1
Coq.FSets.FSetEqProperties.union_equal_1	40	0	search with cache (only 1: auto with set).	0.00971794128418	1
Coq.FSets.FSetEqProperties.union_equal_2	40	0	search with cache (only 1: auto with set).	0.00950288772583	1
Coq.FSets.FSetEqProperties.union_assoc	40	0	search with cache (only 1: auto with set).	0.00908207893372	1
Coq.FSets.FSetEqProperties.add_union_singleton	40	2	search with cache (only 1: auto with set).	0.0205190181732	3
Coq.FSets.FSetEqProperties.union_add	40	0	search with cache (only 1: auto with set).	0.00900721549988	1
Coq.FSets.FSetEqProperties.union_subset_1	40	0	search with cache (only 1: auto with set).	0.00805807113647	1
Coq.FSets.FSetEqProperties.union_subset_2	40	0	search with cache (only 1: auto with set).	0.00809502601624	1
Coq.FSets.FSetEqProperties.union_subset_3	40	0	search with cache (only 1: auto with set).	0.0156209468842	1
Coq.FSets.FSetEqProperties.inter_sym	40	1.1	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.128494024277	4
Coq.FSets.FSetEqProperties.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.0100231170654	1
Coq.FSets.FSetEqProperties.inter_equal_1	40	0	search with cache (only 1: auto with set).	0.00955104827881	1
Coq.FSets.FSetEqProperties.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.0097439289093	1
Coq.FSets.FSetEqProperties.inter_assoc	40	0	search with cache (only 1: auto with set).	0.00910115242004	1
Coq.FSets.FSetEqProperties.union_inter_1	40	0	search with cache (only 1: auto with set).	0.00929808616638	1
Coq.FSets.FSetEqProperties.union_inter_2	40	0	search with cache (only 1: auto with set).	0.00935983657837	1
Coq.FSets.FSetEqProperties.inter_add_1	40	0	search with cache (only 1: auto with set).	0.00972199440002	1
Coq.FSets.FSetEqProperties.inter_add_2	40	0.8	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.533582925797	44
Coq.FSets.FSetEqProperties.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.00891494750977	1
Coq.FSets.FSetEqProperties.inter_subset_2	40	0	search with cache (only 1: auto with set).	0.00827097892761	1
Coq.FSets.FSetEqProperties.inter_subset_3	40	0	search with cache (only 1: auto with set).	0.102865934372	1
Coq.FSets.FSetEqProperties.diff_subset	40	0.2	search with cache (only 1: apply subset_1; only 1: Dec.fsetdec).	0.0288660526276	4
Coq.FSets.FSetEqProperties.diff_subset_equal	40	0	search with cache (only 1: auto with set).	0.010568857193	1
Coq.FSets.FSetEqProperties.remove_inter_singleton	40	0.2	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.0735380649567	4
Coq.FSets.FSetEqProperties.diff_inter_empty	40	0	search with cache (only 1: auto with set).	0.00940299034119	1
Coq.FSets.FSetEqProperties.diff_inter_all	40	0	search with cache (only 1: auto with set).	0.00918197631836	1
Coq.FSets.FSetEqProperties.set_rec	40
Coq.FSets.FSetEqProperties.exclusive_set	40
Coq.FSets.FSetEqProperties.fold_empty	40	0.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.0156559944153	2
Coq.FSets.FSetEqProperties.fold_equal	40
Coq.FSets.FSetEqProperties.fold_add	40	0.0.2.0.0.0.0.5.5	search with cache (only 1: symmetry; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto with set).	15.3951311111	6529
Coq.FSets.FSetEqProperties.add_fold	40
Coq.FSets.FSetEqProperties.remove_fold_1	40	0.0.0.0.0.1.2	search with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	0.136125087738	46
Coq.FSets.FSetEqProperties.remove_fold_2	40
Coq.FSets.FSetEqProperties.fold_union	40
Coq.FSets.FSetEqProperties.add_cardinal_1	40	1	search with cache (only 1: auto with set fset).	0.0303828716278	23
Coq.FSets.FSetEqProperties.add_cardinal_2	40	4.0.0.4.1	search with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto with set).	0.538524866104	511
Coq.FSets.FSetEqProperties.remove_cardinal_1	40	0.1.1.7.1.0.1.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	1.2595641613	1629
Coq.FSets.FSetEqProperties.remove_cardinal_2	40	0.6.17	search with cache (only 1: intros H a; only 1: rewrite <- not_mem_iff; only 1: auto with set fset).	4.09704613686	5340
Coq.FSets.FSetEqProperties.union_cardinal	40	0.4.2.5.1.0.1.0	search with cache (only 1: intros; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	1.17003703117	1133
Coq.FSets.FSetEqProperties.subset_cardinal	40	1	search with cache (only 1: auto with set fset).	0.0164430141449	11
Coq.FSets.FSetEqProperties.Comp'	40	0.5.2	search with cache (only 1: simpl_relation; only 1: rewrite H; only 1: auto).	0.109054088593	13
Coq.FSets.FSetEqProperties.filter_mem	40
Coq.FSets.FSetEqProperties.for_all_filter	40
Coq.FSets.FSetEqProperties.exists_filter	40
Coq.FSets.FSetEqProperties.partition_filter_1	40	16.0	search with cache (only 1: intros; only 1: auto with set).	1.09139490128	1157
Coq.FSets.FSetEqProperties.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.0119121074677	1
Coq.FSets.FSetEqProperties.filter_add_1	40
Coq.FSets.FSetEqProperties.filter_add_2	40
Coq.FSets.FSetEqProperties.add_filter_1	40
Coq.FSets.FSetEqProperties.add_filter_2	40
Coq.FSets.FSetEqProperties.union_filter	40
Coq.FSets.FSetEqProperties.filter_union	40	0.0.0.0.1.0.2.0.1	search with cache (only 1: red; only 1: intros; only 1: set_iff; only 1: repeat rewrite filter_iff; only 1: set_iff; only 1: intuition; only 1: auto; only 1: auto; only 1: auto).	3.2561249733	407
Coq.FSets.FSetEqProperties.for_all_mem_1	40	5.0.0.0.0	search with cache (only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intuition).	0.0708990097046	27
Coq.FSets.FSetEqProperties.for_all_mem_2	40	0.10.7.0	search with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: intuition; only 1: auto).	0.89376282692	838
Coq.FSets.FSetEqProperties.for_all_mem_3	40
Coq.FSets.FSetEqProperties.for_all_mem_4	40
Coq.FSets.FSetEqProperties.for_all_exists	40
Coq.FSets.FSetEqProperties.Comp'	40	2.3.0.1	search with cache (only 1: unfold compat_bool, Proper, respectful; only 1: intros; only 1: f_equal; only 1: auto).	0.0187849998474	10
Coq.FSets.FSetEqProperties.exists_mem_1	40
Coq.FSets.FSetEqProperties.exists_mem_2	40
Coq.FSets.FSetEqProperties.exists_mem_3	40
Coq.FSets.FSetEqProperties.exists_mem_4	40
Coq.FSets.FSetEqProperties.sum_plus	40
Coq.FSets.FSetEqProperties.sum_filter	40
Coq.FSets.FSetEqProperties.fold_compat	40
Coq.FSets.FSetEqProperties.sum_compat	40
Coq.FSets.FSetBridge.empty	40
Coq.FSets.FSetBridge.is_empty	40
Coq.FSets.FSetBridge.mem	40
Coq.FSets.FSetBridge.add	40
Coq.FSets.FSetBridge.singleton	40
Coq.FSets.FSetBridge.remove	40
Coq.FSets.FSetBridge.union	40
Coq.FSets.FSetBridge.inter	40
Coq.FSets.FSetBridge.diff	40
Coq.FSets.FSetBridge.equal	40
Coq.FSets.FSetBridge.subset	40
Coq.FSets.FSetBridge.elements	40
Coq.FSets.FSetBridge.fold	40	17.0.15	search with cache (only 1: simpl in *; only 1: intros; only 1: eauto with set).	0.787189006805	2514
Coq.FSets.FSetBridge.cardinal	40	27.12.0	search with cache (only 1: intros; only 1: simpl; only 1: eauto with set).	1.05643510818	4520
Coq.FSets.FSetBridge.compat_P_aux	40
Coq.FSets.FSetBridge.filter	40
Coq.FSets.FSetBridge.for_all	40
Coq.FSets.FSetBridge.exists_	40
Coq.FSets.FSetBridge.partition	40
Coq.FSets.FSetBridge.choose_aux	40
Coq.FSets.FSetBridge.choose	40
Coq.FSets.FSetBridge.choose_ok1	40
Coq.FSets.FSetBridge.choose_ok2	40
Coq.FSets.FSetBridge.choose_equal	40
Coq.FSets.FSetBridge.min_elt	40
Coq.FSets.FSetBridge.max_elt	40
Coq.FSets.FSetBridge.empty_1	40
Coq.FSets.FSetBridge.is_empty_1	40
Coq.FSets.FSetBridge.is_empty_2	40
Coq.FSets.FSetBridge.mem_1	40
Coq.FSets.FSetBridge.mem_2	40
Coq.FSets.FSetBridge.equal_1	40
Coq.FSets.FSetBridge.equal_2	40	2.0.0.0.0.3	search with cache (only 1: intros s x; only 1: unfold equal; only 1: case M.equal; only 1: intuition; only 1: intuition; only 1: discriminate H).	0.215520143509	209
Coq.FSets.FSetBridge.subset_1	40
Coq.FSets.FSetBridge.subset_2	40	0.0.0.0.0.4	search with cache (only 1: intros s x; only 1: unfold subset; only 1: case M.subset; only 1: intuition; only 1: intuition; only 1: inversion H).	0.190719127655	124
Coq.FSets.FSetBridge.choose_1	40
Coq.FSets.FSetBridge.choose_2	40	2.0.4.0.2.0.2.7	search with cache (only 1: intro s; only 1: unfold choose; only 1: case (M.choose s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: intros; only 1: auto).	9.94872808456	14014
Coq.FSets.FSetBridge.choose_3	40
Coq.FSets.FSetBridge.elements_1	40
Coq.FSets.FSetBridge.elements_2	40	1.0.0.9	search with cache (only 1: intros s x; only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).	0.371963024139	397
Coq.FSets.FSetBridge.elements_3	40	1.0.2.1.0.0	search with cache (only 1: intros; only 1: case (M.elements s); only 1: firstorder; only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).	0.898208856583	118
Coq.FSets.FSetBridge.elements_3w	40	5.1	search with cache (only 1: intros; only 1: firstorder).	0.0968449115753	53
Coq.FSets.FSetBridge.min_elt_1	40
Coq.FSets.FSetBridge.min_elt_2	40
Coq.FSets.FSetBridge.min_elt_3	40
Coq.FSets.FSetBridge.max_elt_1	40
Coq.FSets.FSetBridge.max_elt_2	40
Coq.FSets.FSetBridge.max_elt_3	40
Coq.FSets.FSetBridge.add_1	40
Coq.FSets.FSetBridge.add_2	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.0145919322968	5
Coq.FSets.FSetBridge.add_3	40	0.0.0.0.5	search with cache (only 1: intros s x; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.669477939606	157
Coq.FSets.FSetBridge.remove_1	40
Coq.FSets.FSetBridge.remove_2	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold remove; only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: firstorder).	0.0411570072174	11
Coq.FSets.FSetBridge.remove_3	40	1.0.0.3.1	search with cache (only 1: unfold remove; only 1: intros s x y; only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: firstorder).	16.3886799812	265
Coq.FSets.FSetBridge.singleton_1	40
Coq.FSets.FSetBridge.singleton_2	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros x y; only 1: unfold singleton; only 1: case (M.singleton x); only 1: case (M.singleton x); only 1: case (M.singleton x); only 1: case (M.singleton x); only 1: case (M.singleton x); only 1: case (M.singleton x); only 1: firstorder).	0.0322318077087	11
Coq.FSets.FSetBridge.union_1	40
Coq.FSets.FSetBridge.union_2	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: firstorder).	0.0354340076447	11
Coq.FSets.FSetBridge.union_3	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: firstorder).	0.0349428653717	11
Coq.FSets.FSetBridge.inter_1	40
Coq.FSets.FSetBridge.inter_2	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: firstorder).	0.0371079444885	11
Coq.FSets.FSetBridge.inter_3	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: firstorder).	0.0368340015411	11
Coq.FSets.FSetBridge.diff_1	40
Coq.FSets.FSetBridge.diff_2	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: firstorder).	0.0386400222778	11
Coq.FSets.FSetBridge.diff_3	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: firstorder).	0.0384948253632	11
Coq.FSets.FSetBridge.cardinal_1	40
Coq.FSets.FSetBridge.fold_1	40
Coq.FSets.FSetBridge.f_dec	40
Coq.FSets.FSetBridge.compat_P_aux	40	0.1.1.0.30.0	search with cache (only 1: intros; only 1: intros H'; only 1: intros; only 1: rewrite <- (H _ _ H0); only 1: rewrite (H _ _ H0); only 1: intuition).	1.01890587807	3464
Coq.FSets.FSetBridge.filter_1	40
Coq.FSets.FSetBridge.filter_2	40	0.1.0.0.0.0	search with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.351001024246	7
Coq.FSets.FSetBridge.filter_3	40	0.1.0.0.0.0	search with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.256510019302	7
Coq.FSets.FSetBridge.for_all_1	40
Coq.FSets.FSetBridge.for_all_2	40	0.0.0.0.0.0	search with cache (only 1: intros s f; only 1: unfold for_all; only 1: case M.for_all; only 1: intuition; only 1: intuition; only 1: firstorder).	0.0293610095978	6
Coq.FSets.FSetBridge.exists_1	40
Coq.FSets.FSetBridge.exists_2	40	0.0.1.0.0.0	search with cache (only 1: intros s f; only 1: unfold exists_; only 1: case M.exists_; only 1: intuition; only 1: intuition; only 1: inversion H0).	0.0253801345825	7
Coq.FSets.FSetBridge.partition_1	40
Coq.FSets.FSetBridge.partition_2	40
Coq.FSets.FSetCompat.lt_not_eq	40
Coq.FSets.FSetCompat.compare	40
Coq.FSets.FSetCompat.In_compat	40	0.0.4.0	search with cache (only 1: intros x y H s s' H0; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.0608110427856	30
Coq.FSets.FSetCompat.mem_spec	40
Coq.FSets.FSetCompat.equal_spec	40
Coq.FSets.FSetCompat.subset_spec	40
Coq.FSets.FSetCompat.is_empty_spec	40
Coq.FSets.FSetCompat.add_spec	40
Coq.FSets.FSetCompat.remove_spec	40
Coq.FSets.FSetCompat.singleton_spec	40
Coq.FSets.FSetCompat.elements_spec1	40
Coq.FSets.FSetCompat.for_all_spec	40
Coq.FSets.FSetCompat.exists_spec	40
Coq.FSets.FSetCompat.lt_strorder	40
Coq.FSets.FSetCompat.lt_compat	40
Coq.FSets.FSetCompat.compare_spec	40
Coq.FSets.FSetProperties.In_dec	40	3.4.1.8.1	search with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	8.48043298721	3187
Coq.FSets.FSetProperties.Add_Equal	40
Coq.FSets.FSetProperties.equal_refl	40	0.0.2.0.1	search with cache (only 1: apply equal_2; only 1: apply equal_1; only 1: split; only 1: intuition; only 1: intuition).	0.0308780670166	22
Coq.FSets.FSetProperties.equal_sym	40	8	search with cache (only 1: fsetdec).	0.105926990509	46
Coq.FSets.FSetProperties.equal_trans	40	2.1.0	search with cache (only 1: intros g_eq; only 1: rewrite <- g_eq; only 1: fsetdec).	0.0390641689301	6
Coq.FSets.FSetProperties.subset_refl	40	2	search with cache (only 1: fsetdec).	0.0118329524994	3
Coq.FSets.FSetProperties.subset_trans	40	0	search with cache (only 1: fsetdec).	0.0260019302368	1
Coq.FSets.FSetProperties.subset_antisym	40	0.0.2	search with cache (only 1: split; only 1: intuition; only 1: intuition).	0.0138039588928	5
Coq.FSets.FSetProperties.subset_equal	40	0	search with cache (only 1: fsetdec).	0.0407090187073	1
Coq.FSets.FSetProperties.subset_empty	40	2	search with cache (only 1: fsetdec).	0.0149059295654	3
Coq.FSets.FSetProperties.subset_remove_3	40	0	search with cache (only 1: fsetdec).	0.0286660194397	1
Coq.FSets.FSetProperties.subset_diff	40	0	search with cache (only 1: fsetdec).	0.0271179676056	1
Coq.FSets.FSetProperties.subset_add_3	40	0	search with cache (only 1: fsetdec).	0.0405220985413	1
Coq.FSets.FSetProperties.subset_add_2	40	0	search with cache (only 1: fsetdec).	0.0629589557648	1
Coq.FSets.FSetProperties.in_subset	40	0	search with cache (only 1: fsetdec).	0.020781993866	1
Coq.FSets.FSetProperties.double_inclusion	40	0.2.1.2.1	search with cache (only 1: split; only 1: intros g_eq; only 1: rewrite <- g_eq; only 1: fsetdec; only 1: fsetdec).	0.25754904747	75
Coq.FSets.FSetProperties.empty_is_empty_1	40	8	search with cache (only 1: fsetdec).	0.694269895554	428
Coq.FSets.FSetProperties.empty_is_empty_2	40	0	search with cache (only 1: fsetdec).	0.0404348373413	1
Coq.FSets.FSetProperties.add_equal	40	4.0.0.0	search with cache (only 1: intros; only 1: red; only 1: intros; only 1: fsetdec).	0.0906920433044	14
Coq.FSets.FSetProperties.add_add	40	0.0.0.0	search with cache (only 1: red; only 1: intros; only 1: do 2 rewrite add_iff; only 1: fsetdec).	0.0853409767151	4
Coq.FSets.FSetProperties.remove_equal	40	16	search with cache (only 1: fsetdec).	3.96951699257	2754
Coq.FSets.FSetProperties.Equal_remove	40	0	search with cache (only 1: fsetdec).	0.0800099372864	1
Coq.FSets.FSetProperties.add_remove	40	0	search with cache (only 1: fsetdec).	0.0761659145355	1
Coq.FSets.FSetProperties.remove_add	40	0	search with cache (only 1: fsetdec).	0.0760419368744	1
Coq.FSets.FSetProperties.singleton_equal_add	40	0.0	search with cache (only 1: red; only 1: fsetdec).	0.0650448799133	2
Coq.FSets.FSetProperties.remove_singleton_empty	40	0	search with cache (only 1: fsetdec).	0.172210931778	1
Coq.FSets.FSetProperties.union_sym	40	0.0.0.0.9	search with cache (only 1: split; only 1: do 2 rewrite union_iff; only 1: intuition; only 1: do 2 rewrite union_iff; only 1: intuition).	0.894788980484	815
Coq.FSets.FSetProperties.union_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0405671596527	1
Coq.FSets.FSetProperties.union_equal_1	40	0	search with cache (only 1: fsetdec).	0.0600569248199	1
Coq.FSets.FSetProperties.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.0575649738312	1
Coq.FSets.FSetProperties.union_assoc	40	0	search with cache (only 1: fsetdec).	0.102519989014	1
Coq.FSets.FSetProperties.add_union_singleton	40	0	search with cache (only 1: fsetdec).	0.0549671649933	1
Coq.FSets.FSetProperties.union_add	40	0	search with cache (only 1: fsetdec).	0.111009836197	1
Coq.FSets.FSetProperties.union_remove_add_1	40	0	search with cache (only 1: fsetdec).	0.211856842041	1
Coq.FSets.FSetProperties.union_remove_add_2	40	0	search with cache (only 1: fsetdec).	0.198673963547	1
Coq.FSets.FSetProperties.union_subset_1	40	0	search with cache (only 1: fsetdec).	0.0209550857544	1
Coq.FSets.FSetProperties.union_subset_2	40	0	search with cache (only 1: fsetdec).	0.0216760635376	1
Coq.FSets.FSetProperties.union_subset_3	40	0	search with cache (only 1: fsetdec).	0.0409560203552	1
Coq.FSets.FSetProperties.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.0558300018311	1
Coq.FSets.FSetProperties.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.039920091629	1
Coq.FSets.FSetProperties.empty_union_1	40	0	search with cache (only 1: fsetdec).	0.0490639209747	1
Coq.FSets.FSetProperties.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.0482311248779	1
Coq.FSets.FSetProperties.not_in_union	40	11	search with cache (only 1: fsetdec).	9.11087799072	2682
Coq.FSets.FSetProperties.inter_sym	40	0.0.0.0.8	search with cache (only 1: split; only 1: do 2 rewrite inter_iff; only 1: intuition; only 1: do 2 rewrite inter_iff; only 1: intuition).	0.822782039642	541
Coq.FSets.FSetProperties.inter_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0688381195068	1
Coq.FSets.FSetProperties.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.0682680606842	1
Coq.FSets.FSetProperties.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.0652968883514	1
Coq.FSets.FSetProperties.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.0890100002289	1
Coq.FSets.FSetProperties.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.118258953094	1
Coq.FSets.FSetProperties.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.141632795334	1
Coq.FSets.FSetProperties.inter_add_1	40	3.0	search with cache (only 1: intros; only 1: fsetdec).	0.145286083221	21
Coq.FSets.FSetProperties.inter_add_2	40	0	search with cache (only 1: fsetdec).	0.10932302475	1
Coq.FSets.FSetProperties.empty_inter_1	40	0	search with cache (only 1: fsetdec).	0.0323839187622	1
Coq.FSets.FSetProperties.empty_inter_2	40	0	search with cache (only 1: fsetdec).	0.0786778926849	1
Coq.FSets.FSetProperties.inter_subset_1	40	0	search with cache (only 1: fsetdec).	0.0190777778625	1
Coq.FSets.FSetProperties.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.0190660953522	1
Coq.FSets.FSetProperties.inter_subset_3	40	0	search with cache (only 1: fsetdec).	0.0327608585358	1
Coq.FSets.FSetProperties.empty_diff_1	40	14	search with cache (only 1: fsetdec).	20.9882919788	12746
Coq.FSets.FSetProperties.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.0707778930664	1
Coq.FSets.FSetProperties.diff_subset	40	5	search with cache (only 1: fsetdec).	0.801030158997	376
Coq.FSets.FSetProperties.diff_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0730719566345	1
Coq.FSets.FSetProperties.remove_diff_singleton	40	0	search with cache (only 1: fsetdec).	0.12370300293	1
Coq.FSets.FSetProperties.diff_inter_empty	40	0	search with cache (only 1: fsetdec).	0.125715017319	1
Coq.FSets.FSetProperties.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.15470290184	1
Coq.FSets.FSetProperties.Add_add	40	1.0.0	search with cache (only 1: intro H; only 1: intuition; only 1: fsetdec).	0.132943153381	14
Coq.FSets.FSetProperties.Add_remove	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.111618041992	2
Coq.FSets.FSetProperties.union_Add	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.156496047974	2
Coq.FSets.FSetProperties.inter_Add	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.278005838394	2
Coq.FSets.FSetProperties.union_Equal	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.237298965454	2
Coq.FSets.FSetProperties.inter_Add_2	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.197170972824	2
Coq.FSets.FSetProperties.elements_Empty	40
Coq.FSets.FSetProperties.elements_empty	40
Coq.FSets.FSetProperties.of_list_1	40
Coq.FSets.FSetProperties.of_list_2	40
Coq.FSets.FSetProperties.of_list_3	40
Coq.FSets.FSetProperties.fold_spec_right	40
Coq.FSets.FSetProperties.fold_rec	40
Coq.FSets.FSetProperties.fold_rec_bis	40
Coq.FSets.FSetProperties.fold_rec_nodep	40	1.0.0.1.0.1.0	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: intros; only 1: auto with set; only 1: intros; only 1: rewrite Add_Equal in H1; only 1: auto with set).	0.249491930008	88
Coq.FSets.FSetProperties.fold_rec_weak	40
Coq.FSets.FSetProperties.fold_rel	40
Coq.FSets.FSetProperties.set_induction	40
Coq.FSets.FSetProperties.set_induction_bis	40
Coq.FSets.FSetProperties.fold_identity	40	0.0.0.0.2.4.3.0	search with cache (only 1: intros; only 1: apply fold_rec_bis; only 1: red; only 1: intros; only 1: fsetdec; only 1: fsetdec; only 1: intros; only 1: auto with set).	3.30453801155	1505
Coq.FSets.FSetProperties.fold_0	40	16.5.4.3.12.4	search with cache (only 1: intros; only 1: rewrite fold_spec_right; only 1: set (l := rev (elements s)); only 1: assert (Hsame : forall x, In x s <-> InA x l) by (unfold l; intros; rewrite elements_iff, InA_rev; intuition); only 1: assert (Hdup : NoDup l) by (unfold l; eauto using elements_3w, NoDupA_rev with *); only 1: eauto).	26.0380599499	46210
Coq.FSets.FSetProperties.fold_1	40
Coq.FSets.FSetProperties.fold_2	40
Coq.FSets.FSetProperties.fold_1b	40	1.0.0.6.0.0	search with cache (only 1: intros; only 1: rewrite M.fold_1; only 1: split; only 1: auto with *; only 1: intro x; only 1: eauto).	0.286564826965	206
Coq.FSets.FSetProperties.fold_commutes	40
Coq.FSets.FSetProperties.fold_init	40
Coq.FSets.FSetProperties.fold_equal	40
Coq.FSets.FSetProperties.fold_empty	40	9.0.10.0	search with cache (only 1: intros; only 1: apply fold_1; only 1: auto with *; only 1: auto with *).	39.507174015	36741
Coq.FSets.FSetProperties.fold_add	40	5.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto with *; only 1: auto; only 1: auto; only 1: auto; only 1: intuition).	0.710610866547	419
Coq.FSets.FSetProperties.add_fold	40
Coq.FSets.FSetProperties.remove_fold_1	40	2.1.0.0.0.0.2.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with *; only 1: auto; only 1: auto; only 1: auto with set; only 1: auto with set).	0.986171960831	479
Coq.FSets.FSetProperties.remove_fold_2	40	2.5.0	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.125607013702	46
Coq.FSets.FSetProperties.fold_union_inter	40
Coq.FSets.FSetProperties.fold_diff_inter	40
Coq.FSets.FSetProperties.fold_union	40
Coq.FSets.FSetProperties.fold_plus	40
Coq.FSets.FSetProperties.cardinal_fold	40
Coq.FSets.FSetProperties.cardinal_0	40
Coq.FSets.FSetProperties.cardinal_1	40	0.0.0.9.0.0	search with cache (only 1: intros; only 1: rewrite cardinal_1; only 1: rewrite elements_Empty in H; only 1: rewrite H; only 1: simpl; only 1: auto).	0.546448945999	461
Coq.FSets.FSetProperties.cardinal_2	40
Coq.FSets.FSetProperties.cardinal_Empty	40
Coq.FSets.FSetProperties.cardinal_inv_1	40
Coq.FSets.FSetProperties.cardinal_inv_2	40
Coq.FSets.FSetProperties.cardinal_inv_2b	40	0.0.11.5.0.0.0.0	search with cache (only 1: intros; only 1: rewrite M.cardinal_1 in H; only 1: generalize (elements_2 (s:=s)); only 1: destruct (elements s); only 1: intros; only 1: intuition; only 1: exists e; only 1: auto).	34.1690189838	29551
Coq.FSets.FSetProperties.Equal_cardinal	40
Coq.FSets.FSetProperties.cardinal_m_Proper	40
Coq.FSets.FSetProperties.empty_cardinal	40	0.2	search with cache (only 1: apply cardinal_1; only 1: auto with set).	0.00731992721558	4
Coq.FSets.FSetProperties.singleton_cardinal	40
Coq.FSets.FSetProperties.diff_inter_cardinal	40
Coq.FSets.FSetProperties.union_cardinal	40
Coq.FSets.FSetProperties.subset_cardinal	40
Coq.FSets.FSetProperties.subset_cardinal_lt	40
Coq.FSets.FSetProperties.union_inter_cardinal	40
Coq.FSets.FSetProperties.union_cardinal_inter	40
Coq.FSets.FSetProperties.union_cardinal_le	40	4.1.0	search with cache (only 1: intros; only 1: rewrite <- union_inter_cardinal; only 1: auto with arith).	0.0179419517517	11
Coq.FSets.FSetProperties.add_cardinal_1	40	2.0.1	search with cache (only 1: intro; only 1: generalize (cardinal_inv_2 (s:=s)); only 1: intuition).	0.100651025772	62
Coq.FSets.FSetProperties.add_cardinal_2	40	0.0.0.0	search with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: auto with fset; only 1: auto with set).	0.014429807663	4
Coq.FSets.FSetProperties.remove_cardinal_1	40	0.0.0.4.0	search with cache (only 1: intros; only 1: rewrite (cardinal_2 (s:=remove x s) (s':=s) (x:=x)); only 1: eauto with set; only 1: auto with set; only 1: auto with set).	0.0374519824982	21
Coq.FSets.FSetProperties.remove_cardinal_2	40	2.2.1	search with cache (only 1: intro; only 1: generalize (cardinal_inv_2 (s:=s)); only 1: intuition).	0.0976450443268	69
Coq.FSets.FSetProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FSetProperties.gtb_1	40
Coq.FSets.FSetProperties.leb_1	40
Coq.FSets.FSetProperties.gtb_compat	40
Coq.FSets.FSetProperties.leb_compat	40
Coq.FSets.FSetProperties.elements_split	40
Coq.FSets.FSetProperties.elements_Add	40
Coq.FSets.FSetProperties.elements_Add_Above	40
Coq.FSets.FSetProperties.elements_Add_Below	40
Coq.FSets.FSetProperties.set_induction_max	40
Coq.FSets.FSetProperties.set_induction_min	40
Coq.FSets.FSetProperties.fold_3	40
Coq.FSets.FSetProperties.fold_4	40
Coq.FSets.FSetProperties.fold_equal	40
Coq.FSets.FSetProperties.add_fold	40	0.1.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0164318084717	4
Coq.FSets.FSetProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0147709846497	3
Coq.FSets.FSetProperties.choose_equal	40
Coq.FSets.FSetDecide.test_push	40	0	search with cache (only 1: auto).	0.0168280601501	1
Coq.FSets.FSetDecide.test_pull	40	0.0.0	search with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.144602060318	3
Coq.FSets.FSetDecide.eq_refl_iff	40	3	search with cache (only 1: intuition).	0.0251479148865	20
Coq.FSets.FSetDecide.dec_In	40
Coq.FSets.FSetDecide.dec_eq	40
Coq.FSets.FSetDecide.test_eq_trans_1	40
Coq.FSets.FSetDecide.test_eq_trans_2	40	3	search with cache (only 1: fsetdec).	0.289321184158	32
Coq.FSets.FSetDecide.test_eq_neq_trans_1	40	1	search with cache (only 1: fsetdec).	0.372821092606	22
Coq.FSets.FSetDecide.test_eq_neq_trans_2	40	0	search with cache (only 1: fsetdec).	0.324519872665	1
Coq.FSets.FSetDecide.test_In_singleton	40	0	search with cache (only 1: fsetdec).	0.0252749919891	1
Coq.FSets.FSetDecide.test_add_In	40	1	search with cache (only 1: fsetdec).	0.0585222244263	2
Coq.FSets.FSetDecide.test_Subset_add_remove	40	0.0	search with cache (only 1: unfold Subset; only 1: fsetdec).	0.062155008316	2
Coq.FSets.FSetDecide.test_eq_disjunction	40	0	search with cache (only 1: fsetdec).	0.0880830287933	1
Coq.FSets.FSetDecide.test_not_In_disj	40	0	search with cache (only 1: fsetdec).	0.123888015747	1
Coq.FSets.FSetDecide.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.140311956406	1
Coq.FSets.FSetDecide.test_iff_conj	40	0	search with cache (only 1: fsetdec).	0.0714290142059	1
Coq.FSets.FSetDecide.test_set_ops_1	40	0	search with cache (only 1: fsetdec).	0.479438066483	1
Coq.FSets.FSetDecide.eq_chain_test	40	0	search with cache (only 1: fsetdec).	0.278224945068	1
Coq.FSets.FSetDecide.test_too_complex	40	4.1.1	search with cache (only 1: unfold Subset; only 1: intros x y H a; only 1: intuition).	0.123286008835	12
Coq.FSets.FSetDecide.function_test_1	40	2	search with cache (only 1: fsetdec).	0.147441148758	35
Coq.FSets.FSetDecide.function_test_2	40	0	search with cache (only 1: fsetdec).	0.0913598537445	1
Coq.FSets.FSetDecide.test_baydemir	40	0	search with cache (only 1: fsetdec).	0.0627400875092	1
Coq.FSets.FMapList.empty_1	40	2.3.18	search with cache (only 1: intro H; only 1: unfold PX.MapsTo in *; only 1: inversion_clear 1).	9.22026610374	595
Coq.FSets.FMapList.empty_sorted	40	15	search with cache (only 1: constructor).	0.173034906387	104
Coq.FSets.FMapList.is_empty_1	40
Coq.FSets.FMapList.is_empty_2	40	0.2.0.0.0.0.1	search with cache (only 1: intros m; only 1: case m; only 1: auto; only 1: intros (k, e) l inlist; only 1: absurd (InA eqke (k, e) ((k, e) :: l)); only 1: intuition; only 1: auto with ordered_type).	0.665843963623	42
Coq.FSets.FMapList.mem_1	40
Coq.FSets.FMapList.mem_2	40
Coq.FSets.FMapList.find_2	40
Coq.FSets.FMapList.find_1	40
Coq.FSets.FMapList.add_1	40
Coq.FSets.FMapList.add_2	40
Coq.FSets.FMapList.add_3	40
Coq.FSets.FMapList.add_Inf	40
Coq.FSets.FMapList.add_sorted	40
Coq.FSets.FMapList.remove_1	40
Coq.FSets.FMapList.remove_2	40
Coq.FSets.FMapList.remove_3	40
Coq.FSets.FMapList.remove_Inf	40
Coq.FSets.FMapList.remove_sorted	40	0.0.0.0.0.1.6.0.0.0.0.2	search with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: intros; only 1: destruct a as (x'', e''); only 1: inversion_clear Hm; only 1: compute in H0; only 1: simpl; only 1: case (X.compare x x''); only 1: intuition; only 1: intuition; only 1: intuition).	17.8432610035	8627
Coq.FSets.FMapList.elements_1	40	0.0.0.2.1	search with cache (only 1: intros m; only 1: case m; only 1: auto; only 1: intros (k, e) l inlist; only 1: auto with ordered_type).	0.0338480472565	8
Coq.FSets.FMapList.elements_2	40	0	search with cache (only 1: auto).	0.0141489505768	1
Coq.FSets.FMapList.elements_3	40	0.0.0.3.0	search with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: destruct a as (x', e'); only 1: intuition).	0.0413739681244	15
Coq.FSets.FMapList.elements_3w	40
Coq.FSets.FMapList.fold_1	40	2.3.1.9	search with cache (only 1: induction m; only 1: intuition; only 1: simpl in *; only 1: intuition).	0.82639503479	502
Coq.FSets.FMapList.equal_1	40
Coq.FSets.FMapList.equal_2	40
Coq.FSets.FMapList.equal_cons	40
Coq.FSets.FMapList.map_1	40
Coq.FSets.FMapList.map_2	40
Coq.FSets.FMapList.map_lelistA	40	0.0.3.0.0.1.0.0	search with cache (only 1: induction m; only 1: intuition; only 1: constructor 1; only 1: intros; only 1: destruct a as (x'', e''); only 1: simpl; only 1: inversion_clear H; only 1: auto).	1.61429095268	452
Coq.FSets.FMapList.map_sorted	40
Coq.FSets.FMapList.mapi_1	40
Coq.FSets.FMapList.mapi_2	40
Coq.FSets.FMapList.mapi_lelistA	40	0.0.0.0.2.0.1.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x0, e0); only 1: inversion_clear H; only 1: auto).	0.585485935211	150
Coq.FSets.FMapList.mapi_sorted	40	1.5.2.0.0.0.1	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a as (x', e'); only 1: inversion_clear 1; only 1: auto).	4.84530115128	1960
Coq.FSets.FMapList.map2_alt_equiv	40
Coq.FSets.FMapList.combine_lelistA	40
Coq.FSets.FMapList.combine_sorted	40
Coq.FSets.FMapList.map2_sorted	40
Coq.FSets.FMapList.combine_1	40
Coq.FSets.FMapList.map2_0	40
Coq.FSets.FMapList.map2_1	40
Coq.FSets.FMapList.map2_2	40
Coq.FSets.FMapList.MapsTo_1	40
Coq.FSets.FMapList.mem_1	40
Coq.FSets.FMapList.mem_2	40
Coq.FSets.FMapList.empty_1	40	7.31	search with cache (only 1: compute; only 1: inversion_clear 1).	1.05583906174	2044
Coq.FSets.FMapList.is_empty_1	40
Coq.FSets.FMapList.is_empty_2	40
Coq.FSets.FMapList.add_1	40
Coq.FSets.FMapList.add_2	40
Coq.FSets.FMapList.add_3	40
Coq.FSets.FMapList.remove_1	40
Coq.FSets.FMapList.remove_2	40
Coq.FSets.FMapList.remove_3	40
Coq.FSets.FMapList.find_1	40
Coq.FSets.FMapList.find_2	40
Coq.FSets.FMapList.elements_1	40	8.0	search with cache (only 1: intros m; only 1: auto).	0.0229151248932	10
Coq.FSets.FMapList.elements_2	40	0.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0201590061188	2
Coq.FSets.FMapList.elements_3	40	4.7	search with cache (only 1: induction m; only 1: intuition).	0.140841960907	137
Coq.FSets.FMapList.elements_3w	40
Coq.FSets.FMapList.cardinal_1	40	21	search with cache (only 1: intuition).	0.146569013596	406
Coq.FSets.FMapList.fold_1	40
Coq.FSets.FMapList.equal_1	40
Coq.FSets.FMapList.equal_2	40
Coq.FSets.FMapList.map_1	40
Coq.FSets.FMapList.map_2	40
Coq.FSets.FMapList.mapi_1	40
Coq.FSets.FMapList.mapi_2	40
Coq.FSets.FMapList.map2_1	40
Coq.FSets.FMapList.map2_2	40
Coq.FSets.FMapList.eq_equal	40
Coq.FSets.FMapList.eq_1	40
Coq.FSets.FMapList.eq_2	40
Coq.FSets.FMapList.eq_refl	40
Coq.FSets.FMapList.eq_sym	40
Coq.FSets.FMapList.eq_trans	40
Coq.FSets.FMapList.lt_trans	40
Coq.FSets.FMapList.lt_not_eq	40
Coq.FSets.FMapList.compare	40
Coq.Wellfounded.Inclusion.Acc_incl	40
Coq.Wellfounded.Inclusion.wf_incl	40	0.0.10.3.1	search with cache (only 1: intro H; only 1: intro z; only 1: intro x; only 1: apply Acc_intro; only 1: auto with sets).	0.14529299736	437
Coq.Wellfounded.Well_Ordering.wf_WO	40
Coq.Wellfounded.Well_Ordering.wof	40
Coq.Wellfounded.Lexicographic_Exponentiation.left_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.right_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_tail	40
Coq.Wellfounded.Lexicographic_Exponentiation.dist_aux	40
Coq.Wellfounded.Lexicographic_Exponentiation.dist_Desc_concat	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_end	40
Coq.Wellfounded.Lexicographic_Exponentiation.ltl_unit	40
Coq.Wellfounded.Lexicographic_Exponentiation.acc_app	40
Coq.Wellfounded.Lexicographic_Exponentiation.wf_lex_exp	40
Coq.Wellfounded.Inverse_Image.Acc_lemma	40
Coq.Wellfounded.Inverse_Image.Acc_inverse_image	40
Coq.Wellfounded.Inverse_Image.wf_inverse_image	40	0.0.2.3.4.3	search with cache (only 1: intros y0 H1; only 1: apply Acc_intro; only 1: intros x H; only 1: apply (Acc_lemma (f x)); only 1: trivial; only 1: trivial).	0.300041913986	689
Coq.Wellfounded.Inverse_Image.Acc_inverse_rel	40
Coq.Wellfounded.Inverse_Image.wf_inverse_rel	40
Coq.Wellfounded.Disjoint_Union.acc_A_sum	40
Coq.Wellfounded.Disjoint_Union.acc_B_sum	40
Coq.Wellfounded.Disjoint_Union.wf_disjoint_sum	40
Coq.Wellfounded.Union.strip_commut	40
Coq.Wellfounded.Union.Acc_union	40
Coq.Wellfounded.Union.wf_union	40
Coq.Wellfounded.Lexicographic_Product.acc_A_B_lexprod	40
Coq.Wellfounded.Lexicographic_Product.wf_lexprod	40
Coq.Wellfounded.Lexicographic_Product.Acc_symprod	40
Coq.Wellfounded.Lexicographic_Product.wf_symprod	40
Coq.Wellfounded.Lexicographic_Product.swap_Acc	40
Coq.Wellfounded.Lexicographic_Product.Acc_swapprod	40
Coq.Wellfounded.Lexicographic_Product.wf_swapprod	40
Coq.Wellfounded.Transitive_Closure.incl_clos_trans	40	3.81	search with cache (only 1: left; only 1: trivial).	3.56960391998	40305
Coq.Wellfounded.Transitive_Closure.Acc_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Acc_inv_trans	40	0.0.0.1.2.7.3.8	search with cache (only 1: intro x; only 1: intros y H2; only 1: intros; only 1: induction H2; only 1: apply Acc_inv with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	1.57613992691	4060
Coq.Wellfounded.Transitive_Closure.wf_clos_trans	40	0.1.0	search with cache (only 1: red; only 1: intros y H2; only 1: auto with sets).	0.00984406471252	4
Coq.Numbers.DecimalFacts.uint_dec	40
Coq.Numbers.DecimalFacts.rev_revapp	40
Coq.Numbers.DecimalFacts.rev_rev	40
Coq.Numbers.DecimalFacts.nzhead_revapp_0	40
Coq.Numbers.DecimalFacts.nzhead_revapp	40
Coq.Numbers.DecimalFacts.nzhead_rev	40
Coq.Numbers.DecimalFacts.rev_nztail_rev	40
Coq.Numbers.DecimalFacts.revapp_nil_inv	40
Coq.Numbers.DecimalFacts.rev_nil_inv	40	5.0.3.1.2	search with cache (only 1: symmetry; only 1: rewrite <- (rev_rev d); only 1: rewrite H; only 1: unfold rev; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).	2.7288210392	2837
Coq.Numbers.DecimalFacts.rev_lnorm_rev	40
Coq.Numbers.DecimalFacts.nzhead_nonzero	40
Coq.Numbers.DecimalFacts.unorm_0	40	0.0.0.0.0.0.0.0.0.0.0.2	search with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	7.30883693695	5147
Coq.Numbers.DecimalFacts.unorm_nonnil	40	0.0.0.0.0.0.0.0.0.0.1.0.2.0	search with cache (only 1: unfold unorm; only 1: generalize (nzhead_nonzero d); only 1: destruct nzhead; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]).	38.3027441502	34547
Coq.Numbers.DecimalFacts.nzhead_invol	40	0.0.0.0.0.0.0.0.0.0.0.1.5	search with cache (only 1: generalize (nzhead_nonzero d); only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	11.4757070541	9754
Coq.Numbers.DecimalFacts.unorm_invol	40
Coq.Numbers.DecimalFacts.norm_invol	40
Coq.Numbers.DecimalPos.of_lu_eqn	40
Coq.Numbers.DecimalPos.of_lu_revapp	40
Coq.Numbers.DecimalPos.Nadd_simpl	40	2.4.37.3	search with cache (only 1: simpl; only 1: induction n; only 1: trivial; only 1: trivial).	4.26427507401	8054
Coq.Numbers.DecimalPos.of_uint_acc_eqn	40
Coq.Numbers.DecimalPos.of_uint_acc_rev	40
Coq.Numbers.DecimalPos.of_uint_alt	40
Coq.Numbers.DecimalPos.of_lu_rev	40
Coq.Numbers.DecimalPos.of_lu_double_gen	40
Coq.Numbers.DecimalPos.of_lu_double	40
Coq.Numbers.DecimalPos.of_lu_succ_double	40	6	search with cache (only 1: apply of_lu_double_gen).	7.09626698494	65
Coq.Numbers.DecimalPos.of_to	40
Coq.Numbers.DecimalPos.succ_double_alt	40
Coq.Numbers.DecimalPos.double_succ	40
Coq.Numbers.DecimalPos.to_lu_succ	40
Coq.Numbers.DecimalPos.nat_iter_S	40	2.4.0.0	search with cache (only 1: induction n; only 1: compute; only 1: auto using succ_double_alt; only 1: intuition).	0.0249121189117	10
Coq.Numbers.DecimalPos.nat_iter_0	40	0	search with cache (only 1: reflexivity).	0.0123958587646	1
Coq.Numbers.DecimalPos.to_ldec_tenfold	40
Coq.Numbers.DecimalPos.of_lu_0	40
Coq.Numbers.DecimalPos.to_of_lu_tenfold	40
Coq.Numbers.DecimalPos.Nadd_alt	40
Coq.Numbers.DecimalPos.to_of_lu	40
Coq.Numbers.DecimalPos.to_of	40
Coq.Numbers.DecimalPos.to_uint_nonzero	40
Coq.Numbers.DecimalPos.to_uint_nonnil	40	0.0.0	search with cache (only 1: intro E; only 1: generalize (of_to p); only 1: now rewrite E).	0.0257740020752	3
Coq.Numbers.DecimalPos.to_uint_inj	40
Coq.Numbers.DecimalPos.to_uint_pos_surj	40
Coq.Numbers.DecimalPos.of_uint_norm	40
Coq.Numbers.DecimalPos.of_inj	40
Coq.Numbers.DecimalPos.of_iff	40
Coq.Numbers.DecimalPos.of_to	40
Coq.Numbers.DecimalPos.to_of	40
Coq.Numbers.DecimalPos.to_int_inj	40
Coq.Numbers.DecimalPos.to_int_pos_surj	40	1.0.0.2.0.3.2.0.2	search with cache (only 1: rewrite <- Unsigned.to_of; only 1: simpl norm; only 1: intros; only 1: destruct (Pos.of_uint d) eqn:E; only 1: destruct H; only 1: now f_equal; only 1: exists p; only 1: rewrite <- Unsigned.to_of; only 1: now rewrite E).	16.2555680275	17172
Coq.Numbers.DecimalPos.of_int_norm	40
Coq.Numbers.DecimalPos.of_inj_pos	40
Coq.Numbers.DecimalNat.to_lu_succ	40	0.0	search with cache (only 1: simpl; only 1: easy).	0.00947499275208	2
Coq.Numbers.DecimalNat.to_little_uint_succ	40
Coq.Numbers.DecimalNat.to_lu_equiv	40
Coq.Numbers.DecimalNat.to_uint_alt	40
Coq.Numbers.DecimalNat.of_lu_eqn	40
Coq.Numbers.DecimalNat.of_lu_succ	40
Coq.Numbers.DecimalNat.of_to_lu	40
Coq.Numbers.DecimalNat.of_lu_revapp	40
Coq.Numbers.DecimalNat.of_uint_acc_spec	40
Coq.Numbers.DecimalNat.of_uint_alt	40
Coq.Numbers.DecimalNat.of_to	40
Coq.Numbers.DecimalNat.to_lu_tenfold	40
Coq.Numbers.DecimalNat.of_lu_0	40
Coq.Numbers.DecimalNat.to_of_lu_tenfold	40
Coq.Numbers.DecimalNat.to_of_lu	40
Coq.Numbers.DecimalNat.to_of	40
Coq.Numbers.DecimalNat.to_uint_inj	40
Coq.Numbers.DecimalNat.to_uint_surj	40
Coq.Numbers.DecimalNat.of_uint_norm	40
Coq.Numbers.DecimalNat.of_inj	40
Coq.Numbers.DecimalNat.of_iff	40
Coq.Numbers.DecimalNat.of_to	40
Coq.Numbers.DecimalNat.to_of	40
Coq.Numbers.DecimalNat.to_int_inj	40
Coq.Numbers.DecimalNat.to_int_pos_surj	40	1.0.0.1.0	search with cache (only 1: simpl; only 1: unfold Nat.to_int; only 1: exists (Nat.of_uint d); only 1: rewrite Unsigned.to_of; only 1: f_equal).	0.0159389972687	7
Coq.Numbers.DecimalNat.of_int_norm	40
Coq.Numbers.DecimalNat.of_inj_pos	40
Coq.Numbers.DecimalN.of_to	40	2.9.1.8	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl in *; only 1: now rewrite Unsigned.of_to).	0.564507961273	836
Coq.Numbers.DecimalN.to_of	40	2.26.0	search with cache (only 1: unfold N.to_uint, Pos.to_uint; only 1: rewrite <- Unsigned.to_of; only 1: now f_equal).	2.6715528965	3240
Coq.Numbers.DecimalN.to_uint_inj	40
Coq.Numbers.DecimalN.to_uint_surj	40
Coq.Numbers.DecimalN.of_uint_norm	40	7	search with cache (only 1: now induction d).	0.0214419364929	8
Coq.Numbers.DecimalN.of_inj	40	2.2.3	search with cache (only 1: intros; only 1: rewrite <- !DecimalPos.Unsigned.to_of; only 1: now f_equal).	0.0469870567322	15
Coq.Numbers.DecimalN.of_iff	40	0.0.7.0.0.0.1	search with cache (only 1: split; only 1: intros; only 1: rewrite <- !to_of; only 1: now f_equal; only 1: intros E; only 1: rewrite <- DecimalPos.Unsigned.of_uint_norm, E; only 1: apply DecimalPos.Unsigned.of_uint_norm).	0.979207038879	487
Coq.Numbers.DecimalN.of_to	40
Coq.Numbers.DecimalN.to_of	40
Coq.Numbers.DecimalN.to_int_inj	40
Coq.Numbers.DecimalN.to_int_pos_surj	40	0.1.1.2.4.0	search with cache (only 1: simpl; only 1: rewrite <- DecimalPos.Unsigned.to_of; only 1: unfold N.to_int; only 1: exists (N.of_uint d); only 1: rewrite Unsigned.to_of; only 1: now f_equal).	0.825965881348	556
Coq.Numbers.DecimalN.of_int_norm	40
Coq.Numbers.DecimalN.of_inj_pos	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.sub_add_opp	40	4.1	search with cache (only 1: intros m IH; only 1: tauto).	0.0187819004059	7
Coq.Numbers.Integer.NatPairs.ZNatPairs.eq_equiv	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.pair_wd	40	1.0.0.0.11.1	search with cache (only 1: intros x x' Hx y y' Hy; only 1: unfold Reflexive, Z.eq; only 1: simpl in *; only 1: setoid_rewrite Hx; only 1: setoid_rewrite Hy; only 1: auto with *).	9.98383593559	495
Coq.Numbers.Integer.NatPairs.ZNatPairs.succ_wd	40	5.6.0.16.8	search with cache (only 1: unfold Reflexive, Z.eq; only 1: intros n m H; only 1: simpl in *; only 1: nzsimpl; only 1: now rewrite H).	9.55245304108	7311
Coq.Numbers.Integer.NatPairs.ZNatPairs.pred_wd	40	0.9.0.0.1	search with cache (only 1: unfold Z.succ, Z.eq; only 1: intros n m H; only 1: simpl; only 1: nzsimpl; only 1: now rewrite H).	1.47410678864	404
Coq.Numbers.Integer.NatPairs.ZNatPairs.add_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.opp_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.sub_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.mul_comm	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.mul_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.bi_induction	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.pred_succ	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.succ_pred	40	0.0.0.0	search with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.174173116684	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.one_succ	40	9.1	search with cache (only 1: unfold Z.succ, Z.pred, Z.eq; only 1: now nzsimpl).	0.574606180191	200
Coq.Numbers.Integer.NatPairs.ZNatPairs.two_succ	40	0.0.0	search with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl').	0.157032966614	3
Coq.Numbers.Integer.NatPairs.ZNatPairs.opp_0	40	3.0.0	search with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl').	0.136319160461	11
Coq.Numbers.Integer.NatPairs.ZNatPairs.opp_succ	40	0.0.0.0	search with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.165675878525	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.add_0_l	40	0.1.1.2	search with cache (only 1: intro n; only 1: unfold Z.succ, Z.pred, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.234769105911	8
Coq.Numbers.Integer.NatPairs.ZNatPairs.add_succ_l	40	0.0.18.1.0	search with cache (only 1: intro n; only 1: unfold Z.add, Z.eq; only 1: intro H1; only 1: simpl; only 1: now nzsimpl).	26.2662799358	7725
Coq.Numbers.Integer.NatPairs.ZNatPairs.sub_0_r	40	0.0.1.0	search with cache (only 1: intro n; only 1: unfold Z.add, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.416905879974	5
Coq.Numbers.Integer.NatPairs.ZNatPairs.sub_succ_r	40	0.0.0.3	search with cache (only 1: intros n m; only 1: unfold Z.sub, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.589442968369	65
Coq.Numbers.Integer.NatPairs.ZNatPairs.mul_0_l	40	0.2.1.1	search with cache (only 1: unfold Z.mul, Z.eq; only 1: simpl in *; only 1: intro n; only 1: now nzsimpl).	0.168434143066	8
Coq.Numbers.Integer.NatPairs.ZNatPairs.mul_succ_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.lt_eq_cases	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.lt_irrefl	40	1.28.0	search with cache (only 1: intros; only 1: apply le_ngt; only 1: now nzsimpl).	10.5356349945	8059
Coq.Numbers.Integer.NatPairs.ZNatPairs.lt_succ_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.min_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.min_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.max_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.max_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.lt_nge	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.lt_wd	40
Coq.Numbers.Integer.Abstract.ZAddOrder.add_neg_neg	40	0.0.1	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).	0.290546894073	50
Coq.Numbers.Integer.Abstract.ZAddOrder.add_neg_nonpos	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).	0.0219690799713	3
Coq.Numbers.Integer.Abstract.ZAddOrder.add_nonpos_neg	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).	0.0219428539276	3
Coq.Numbers.Integer.Abstract.ZAddOrder.add_nonpos_nonpos	40	0.0.2	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).	0.180736064911	33
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.opp_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.opp_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.opp_pos_neg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.opp_neg_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.opp_nonneg_nonpos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.opp_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_m1_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_lt_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_lt_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_le_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_le_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_lt_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_le_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_lt_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_add_lt_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_add_le_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_add_lt_sub_l	40	0.15.3.6	search with cache (only 1: intro p; only 1: intros n m; only 1: rewrite (add_comm p m); only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).	11.3654069901	4803
Coq.Numbers.Integer.Abstract.ZAddOrder.le_add_le_sub_l	40	0.15.3.5	search with cache (only 1: intro p; only 1: intros n m; only 1: rewrite (add_comm p m); only 1: now rewrite (sub_le_mono_r _ _ p), add_simpl_r).	9.44306206703	4112
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_sub_lt_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_sub_le_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_sub_lt_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_sub_le_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_sub_lt_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_sub_le_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_sub_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_sub_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_lt_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_le_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_neg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_pos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_nonpos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.zero_pos_neg	40
Coq.Numbers.Integer.Abstract.ZParity.odd_pred	40
Coq.Numbers.Integer.Abstract.ZParity.even_pred	40	0.0.3.1.1.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	0.235600948334	120
Coq.Numbers.Integer.Abstract.ZParity.even_opp	40
Coq.Numbers.Integer.Abstract.ZParity.odd_opp	40
Coq.Numbers.Integer.Abstract.ZParity.even_sub	40
Coq.Numbers.Integer.Abstract.ZParity.odd_sub	40
Coq.Numbers.Integer.Abstract.ZMul.mul_pred_r	40
Coq.Numbers.Integer.Abstract.ZMul.mul_pred_l	40
Coq.Numbers.Integer.Abstract.ZMul.mul_opp_l	40
Coq.Numbers.Integer.Abstract.ZMul.mul_opp_r	40
Coq.Numbers.Integer.Abstract.ZMul.mul_opp_opp	40
Coq.Numbers.Integer.Abstract.ZMul.mul_opp_comm	40	3.12.0	search with cache (only 1: intros n m; only 1: apply opp_inj; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	0.473038911819	354
Coq.Numbers.Integer.Abstract.ZMul.mul_sub_distr_l	40
Coq.Numbers.Integer.Abstract.ZMul.mul_sub_distr_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.mul_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.mul_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.mul_nonpos_nonpos	40	0.0.6.0.3	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: apply mul_le_mono_nonpos_r; only 1: order; only 1: order).	2.24698400497	1132
Coq.Numbers.Integer.Abstract.ZMulOrder.mul_nonneg_nonpos	40	0.0.3	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).	0.123461961746	34
Coq.Numbers.Integer.Abstract.ZMulOrder.mul_nonpos_nonneg	40	0.0.15.0.3	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: apply mul_le_mono_nonneg_r; only 1: order; only 1: order).	14.7021179199	9184
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.le_0_mul	40
Coq.Numbers.Integer.Abstract.ZMulOrder.le_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.nlt_square_0	40	0.1.0.2.0.22.1.4	search with cache (only 1: intros; only 1: rewrite nlt_ge; only 1: assert (R : forall n, 0 == n <-> n == 0) by (intros; split; apply eq_sym); only 1: repeat rewrite lt_eq_cases; only 1: repeat rewrite R; only 1: rewrite lt_0_mul, eq_mul_0; only 1: pose proof (lt_trichotomy n 0); only 1: tauto).	4.15644001961	5963
Coq.Numbers.Integer.Abstract.ZMulOrder.square_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.square_le_mono_nonpos	40	3.1.0.0.0.3	search with cache (only 1: intros n m H1 H2; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_nonpos; only 1: rewrite <- H2; only 1: now apply eq_le_incl).	0.628160953522	354
Coq.Numbers.Integer.Abstract.ZMulOrder.square_lt_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.square_le_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_1_mul_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_mul_m1_neg	40	0.0.0.0.0.5.0.2.0	search with cache (only 1: intros n m H1 H2; only 1: apply (mul_lt_mono_neg_r m) in H1; only 1: rewrite mul_1_l in H1; only 1: apply lt_le_pred in H2; only 1: setoid_replace (P 0) with (-1) in H2; only 1: now apply lt_le_trans with m; only 1: apply eq_opp_r; only 1: now rewrite one_succ, opp_pred, opp_0; only 1: assumption).	4.69508099556	2702
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_mul_m1_pos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_1_mul_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_m1_mul_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.eq_mul_1	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.le_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.le_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_mul_r	40
Coq.Numbers.Integer.Abstract.ZBits.pow_sub_r	40
Coq.Numbers.Integer.Abstract.ZBits.pow_div_l	40
Coq.Numbers.Integer.Abstract.ZBits.exists_div2	40
Coq.Numbers.Integer.Abstract.ZBits.testbit_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.testbit_succ_r	40
Coq.Numbers.Integer.Abstract.ZBits.testbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.testbit_spec	40
Coq.Numbers.Integer.Abstract.ZBits.testbit_true	40
Coq.Numbers.Integer.Abstract.ZBits.testbit_false	40	0.0.1.0.0.0.0.2.0.0.0	search with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: simpl; only 1: split; only 1: now try order'; only 1: now try order'; only 1: split; only 1: simpl; only 1: now try order'; only 1: split).	2.97884202003	1532
Coq.Numbers.Integer.Abstract.ZBits.testbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.b2z_inj	40
Coq.Numbers.Integer.Abstract.ZBits.add_b2z_double_div2	40
Coq.Numbers.Integer.Abstract.ZBits.add_b2z_double_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.b2z_div2	40
Coq.Numbers.Integer.Abstract.ZBits.b2z_bit0	40	0.0.0.0.16	search with cache (only 1: intros a0; only 1: apply b2z_inj; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; split; simpl; order')).	0.230026960373	222
Coq.Numbers.Integer.Abstract.ZBits.testbit_unique	40
Coq.Numbers.Integer.Abstract.ZBits.bits_0	40
Coq.Numbers.Integer.Abstract.ZBits.bits_opp	40
Coq.Numbers.Integer.Abstract.ZBits.bits_m1	40
Coq.Numbers.Integer.Abstract.ZBits.bit0_odd	40
Coq.Numbers.Integer.Abstract.ZBits.bit0_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.bit0_mod	40	1.15.0	search with cache (only 1: intros a; only 1: rewrite testbit_spec' by order; only 1: now nzsimpl).	3.37398910522	2642
Coq.Numbers.Integer.Abstract.ZBits.testbit_odd	40
Coq.Numbers.Integer.Abstract.ZBits.bit_log2	40
Coq.Numbers.Integer.Abstract.ZBits.bits_above_log2	40
Coq.Numbers.Integer.Abstract.ZBits.bit_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.bits_above_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.bits_iff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.bits_iff_nonneg'	40
Coq.Numbers.Integer.Abstract.ZBits.bits_iff_nonneg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.bits_iff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.bits_iff_neg'	40
Coq.Numbers.Integer.Abstract.ZBits.bits_iff_neg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.div2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.div_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.double_bits_succ	40
Coq.Numbers.Integer.Abstract.ZBits.double_bits	40
Coq.Numbers.Integer.Abstract.ZBits.mul_pow2_bits_add	40
Coq.Numbers.Integer.Abstract.ZBits.mul_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.mul_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.mod_pow2_bits_high	40
Coq.Numbers.Integer.Abstract.ZBits.mod_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.eqf_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.testbit_eqf	40	1.11.0.8	search with cache (only 1: intros a n m Hn; only 1: apply b2z_inj; only 1: do 2 f_equiv; only 1: trivial).	16.9995479584	2665
Coq.Numbers.Integer.Abstract.ZBits.bits_inj_0	40
Coq.Numbers.Integer.Abstract.ZBits.bits_inj	40
Coq.Numbers.Integer.Abstract.ZBits.bits_inj_iff	40
Coq.Numbers.Integer.Abstract.ZBits.bits_inj'	40
Coq.Numbers.Integer.Abstract.ZBits.bits_inj_iff'	40
Coq.Numbers.Integer.Abstract.ZBits.are_bits	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_spec	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_mul_pow2	40	0.1.0.0.0.2.5.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite mul_pow2_bits by trivial; only 1: destruct (le_gt_cases n m); only 1: now apply shiftl_spec_high; only 1: rewrite shiftl_spec_low, testbit_neg_r; only 1: trivial; only 1: now apply lt_sub_0; only 1: trivial).	2.6404030323	1305
Coq.Numbers.Integer.Abstract.ZBits.shiftl_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_wd	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_wd	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_spec_alt	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_shiftl_l	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_shiftl_r	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_1_l	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_eq_0	40	0.2.0.0.0.0.0.0.0.1.3.1	search with cache (only 1: intros a n Ha H; only 1: destruct (le_gt_cases 0 n) as [Hn| Hn]; only 1: rewrite shiftr_div_pow2, div_small_iff by order_nz; only 1: left; only 1: split; only 1: order; only 1: apply log2_lt_cancel; only 1: now rewrite log2_pow2; only 1: rewrite shiftr_mul_pow2 by order; only 1: rewrite eq_mul_0; only 1: generalize (log2_nonneg a); only 1: order).	6.01368999481	2556
Coq.Numbers.Integer.Abstract.ZBits.div2_div	40
Coq.Numbers.Integer.Abstract.ZBits.div2_wd	40	0.0.1.1.1.0.5	search with cache (only 1: intros f Hf H0; only 1: rewrite div2_spec, shiftr_div_pow2; only 1: rewrite div2_spec, shiftr_div_pow2; only 1: f_equiv; only 1: trivial; only 1: order'; only 1: order').	0.746453046799	170
Coq.Numbers.Integer.Abstract.ZBits.div2_odd	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_wd	40
Coq.Numbers.Integer.Abstract.ZBits.land_wd	40	0.0.1	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.111070871353	26
Coq.Numbers.Integer.Abstract.ZBits.lor_wd	40	0.0.1	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.112321138382	26
Coq.Numbers.Integer.Abstract.ZBits.ldiff_wd	40	0.0.1	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.101751804352	26
Coq.Numbers.Integer.Abstract.ZBits.lxor_eq	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_nilpotent	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0221600532532	3
Coq.Numbers.Integer.Abstract.ZBits.lxor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.lor_0_l	40	10.0.7	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.263318061829	296
Coq.Numbers.Integer.Abstract.ZBits.lor_0_r	40	2.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.026458978653	5
Coq.Numbers.Integer.Abstract.ZBits.lor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.lor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.lor_diag	40
Coq.Numbers.Integer.Abstract.ZBits.lor_eq_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.lor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.land_0_l	40	10.0.7	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.287553071976	310
Coq.Numbers.Integer.Abstract.ZBits.land_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.land_comm	40
Coq.Numbers.Integer.Abstract.ZBits.land_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.land_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_0_l	40	1.0.7	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0385460853577	24
Coq.Numbers.Integer.Abstract.ZBits.ldiff_0_r	40	5.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply andb_comm).	0.0232031345367	8
Coq.Numbers.Integer.Abstract.ZBits.ldiff_diag	40
Coq.Numbers.Integer.Abstract.ZBits.lor_land_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.lor_land_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.land_lor_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.land_lor_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_ldiff_l	40
Coq.Numbers.Integer.Abstract.ZBits.lor_ldiff_and	40
Coq.Numbers.Integer.Abstract.ZBits.land_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.setbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.clearbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.setbit_wd	40	0.0.2.1	search with cache (only 1: intros a a' Ha b b' Hb; only 1: unfold setbit; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.266573190689	38
Coq.Numbers.Integer.Abstract.ZBits.clearbit_wd	40	0.0.2.2	search with cache (only 1: intros a a' Ha b b' Hb; only 1: unfold clearbit; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.343874931335	33
Coq.Numbers.Integer.Abstract.ZBits.pow2_bits_true	40
Coq.Numbers.Integer.Abstract.ZBits.pow2_bits_false	40
Coq.Numbers.Integer.Abstract.ZBits.pow2_bits_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.setbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.setbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.setbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.setbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.clearbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.clearbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.clearbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.clearbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_land	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_land	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_lor	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_lor	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_wd	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_spec	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_involutive	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_0	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_m1	40
Coq.Numbers.Integer.Abstract.ZBits.lor_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.lor_m1_l	40	31.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	0.719084024429	1516
Coq.Numbers.Integer.Abstract.ZBits.land_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.land_m1_l	40	40.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	1.53243398666	3223
Coq.Numbers.Integer.Abstract.ZBits.ldiff_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.lor_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.add_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_land	40
Coq.Numbers.Integer.Abstract.ZBits.land_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_lor	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_land	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_lnot_lnot	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_lxor_l	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_lxor_r	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_m1_r	40	3.0.1	search with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).	0.03089594841	11
Coq.Numbers.Integer.Abstract.ZBits.lxor_m1_l	40	3.2.0	search with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).	0.0443761348724	11
Coq.Numbers.Integer.Abstract.ZBits.lxor_lor	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ones_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ones_equiv	40	3.1.18	search with cache (only 1: unfold ones; only 1: intros n; only 1: now rewrite shiftl_1_l).	3.29676699638	2611
Coq.Numbers.Integer.Abstract.ZBits.ones_add	40
Coq.Numbers.Integer.Abstract.ZBits.ones_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ones_mod_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ones_spec_low	40
Coq.Numbers.Integer.Abstract.ZBits.ones_spec_high	40
Coq.Numbers.Integer.Abstract.ZBits.ones_spec_iff	40
Coq.Numbers.Integer.Abstract.ZBits.lor_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.land_ones	40
Coq.Numbers.Integer.Abstract.ZBits.land_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_ones_r	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_ones_r_low	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_ones_l_low	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_neg	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_neg	40	0.7.0	search with cache (only 1: intros a n; only 1: rewrite <- shiftl_opp_r; only 1: now rewrite 2!lt_nge, shiftl_nonneg).	0.0869641304016	19
Coq.Numbers.Integer.Abstract.ZBits.div2_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.div2_neg	40	0.0.0.0.1	search with cache (only 1: split; only 1: rewrite div2_spec; only 1: now rewrite 2!lt_nge, shiftr_nonneg; only 1: rewrite div2_spec; only 1: now rewrite 2!lt_nge, shiftr_nonneg).	0.0784351825714	6
Coq.Numbers.Integer.Abstract.ZBits.lor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.lor_neg	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_neg	40
Coq.Numbers.Integer.Abstract.ZBits.land_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.land_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.log2_bits_unique	40
Coq.Numbers.Integer.Abstract.ZBits.log2_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.log2_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.log2_shiftl'	40
Coq.Numbers.Integer.Abstract.ZBits.log2_lor	40
Coq.Numbers.Integer.Abstract.ZBits.log2_land	40
Coq.Numbers.Integer.Abstract.ZBits.log2_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.add_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.add3_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.add3_bits_div2	40
Coq.Numbers.Integer.Abstract.ZBits.add_carry_div2	40
Coq.Numbers.Integer.Abstract.ZBits.add_carry_bits_aux	40
Coq.Numbers.Integer.Abstract.ZBits.add_carry_bits	40
Coq.Numbers.Integer.Abstract.ZBits.add_bit1	40
Coq.Numbers.Integer.Abstract.ZBits.nocarry_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.add_nocarry_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_le	40
Coq.Numbers.Integer.Abstract.ZBits.sub_nocarry_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.add_nocarry_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBase.pred_inj	40
Coq.Numbers.Integer.Abstract.ZBase.pred_inj_wd	40	6.0.0.14.4	search with cache (only 1: intros n m; only 1: intuition; only 1: apply succ_wd in H; only 1: now rewrite 2!succ_pred in H; only 1: now f_equiv).	1.62388896942	1979
Coq.Numbers.Integer.Abstract.ZBase.succ_m1	40
Coq.Numbers.Integer.Abstract.ZPow.pow_twice_r	40
Coq.Numbers.Integer.Abstract.ZPow.even_pow	40
Coq.Numbers.Integer.Abstract.ZPow.odd_pow	40
Coq.Numbers.Integer.Abstract.ZPow.pow_opp_even	40
Coq.Numbers.Integer.Abstract.ZPow.pow_opp_odd	40
Coq.Numbers.Integer.Abstract.ZPow.pow_even_abs	40
Coq.Numbers.Integer.Abstract.ZPow.pow_even_nonneg	40
Coq.Numbers.Integer.Abstract.ZPow.pow_odd_abs_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.pow_odd_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.abs_pow	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_opp_r	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_1_r_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_1_r	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_antisym_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_antisym	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_sub_r	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_add_cancel_r	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_opp_r	40	1.0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: rewrite and_comm; only 1: rewrite and_comm; only 1: apply gcd_divide_iff).	0.0437340736389	11
Coq.Numbers.Integer.Abstract.ZGcd.gcd_abs_l	40	1.0.0.1.4.7.0.1.3.1	search with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: apply gcd_divide_iff; only 1: rewrite H; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	31.4014561176	20683
Coq.Numbers.Integer.Abstract.ZGcd.gcd_abs_r	40	1.1.0.1.3.7.0.1.6.0	search with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: apply gcd_divide_iff; only 1: rewrite H; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	20.4805910587	15018
Coq.Numbers.Integer.Abstract.ZGcd.gcd_0_l	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_0_r	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_diag	40	3.0.3.1.11.1.0	search with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: now apply divide_abs_l, divide_abs_r; only 1: trivial).	13.9301030636	10205
Coq.Numbers.Integer.Abstract.ZGcd.gcd_add_mult_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_add_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_sub_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.Bezout_wd	40
Coq.Numbers.Integer.Abstract.ZGcd.bezout_1_gcd	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_bezout	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_mul_mono_r_nonneg	40	0.4.1.0	search with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm; only 1: trivial).	0.0804271697998	17
Coq.Numbers.Integer.Abstract.ZGcd.gauss	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_mul_split	40
Coq.Numbers.Integer.Abstract.ZLcm.quot_div_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.rem_mod_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.quot_div	40
Coq.Numbers.Integer.Abstract.ZLcm.rem_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.mod_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.rem_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.rem_mod_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.quot_div_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.divide_div_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.divide_quot_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.gcd_div_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.gcd_quot_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.gcd_div_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.gcd_quot_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.gcd_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.gcd_rem	40	0.1.1.9.0	search with cache (only 1: intros a b Hb; only 1: rewrite !rem_eq by trivial; only 1: rewrite <- add_opp_r, mul_comm, <- mul_opp_l; only 1: rewrite (gcd_comm _ b); only 1: apply gcd_add_mult_diag_r).	5.54619598389	2097
Coq.Numbers.Integer.Abstract.ZLcm.lcm_wd	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_equiv1	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_equiv2	40
Coq.Numbers.Integer.Abstract.ZLcm.gcd_div_swap	40
Coq.Numbers.Integer.Abstract.ZLcm.divide_lcm_l	40
Coq.Numbers.Integer.Abstract.ZLcm.divide_lcm_r	40
Coq.Numbers.Integer.Abstract.ZLcm.divide_div	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_least	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_nonneg	40	12.1	search with cache (only 1: unfold lcm; only 1: trivial using gcd_nonneg, abs_nonneg).	0.558711051941	313
Coq.Numbers.Integer.Abstract.ZLcm.lcm_comm	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_divide_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_unique	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_unique_alt	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_assoc	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_0_l	40	0.0.1.0.1.1.1.3	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: solve_proper; only 1: exists 0; only 1: now nzsimpl; only 1: exists 0; only 1: now nzsimpl; only 1: trivial).	0.583467006683	460
Coq.Numbers.Integer.Abstract.ZLcm.lcm_0_r	40	0.0.1.0.1.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: solve_proper; only 1: exists 0; only 1: now nzsimpl; only 1: exists 0; only 1: now nzsimpl; only 1: trivial).	0.211002111435	88
Coq.Numbers.Integer.Abstract.ZLcm.lcm_1_l_nonneg	40	0.0.5.1.0.1.5	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: trivial using divide_1_l, le_0_1; only 1: apply divide_refl; only 1: intros p Hn Hm; only 1: trivial).	2.09279108047	1753
Coq.Numbers.Integer.Abstract.ZLcm.lcm_1_r_nonneg	40	0.0.5.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: apply divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl).	0.192883014679	88
Coq.Numbers.Integer.Abstract.ZLcm.lcm_diag_nonneg	40	0.4.0.1.2.0	search with cache (only 1: intros; only 1: apply divide_antisym_nonneg; only 1: apply lcm_nonneg; only 1: trivial; only 1: now apply lcm_least; only 1: apply divide_lcm_l).	0.79187297821	639
Coq.Numbers.Integer.Abstract.ZLcm.lcm_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.divide_lcm_eq_r	40	0.4.0.1.0.2	search with cache (only 1: intros; only 1: apply divide_antisym_nonneg; only 1: apply lcm_nonneg; only 1: trivial; only 1: now apply lcm_least; only 1: apply divide_lcm_r).	0.28401684761	269
Coq.Numbers.Integer.Abstract.ZLcm.divide_lcm_iff	40	1.2.4.1.0.0.0.0.1.0.0.4.0.3	search with cache (only 1: intros n m Hn; only 1: split; only 1: intros EQ; only 1: apply lcm_unique_alt; only 1: trivial; only 1: intros q; only 1: split; only 1: split; only 1: now transitivity m; only 1: trivial; only 1: now destruct 1; only 1: intros EQ; only 1: rewrite <- EQ; only 1: trivial using divide_lcm_l).	38.8007750511	24322
Coq.Numbers.Integer.Abstract.ZLcm.lcm_opp_l	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_opp_r	40	0.0.0.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	0.0179979801178	7
Coq.Numbers.Integer.Abstract.ZLcm.lcm_abs_l	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_abs_r	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_1_l	40	0.1.2.8.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: trivial using divide_1_l, le_0_1; only 1: now apply divide_abs_l; only 1: intros p Hn Hm; only 1: now apply divide_abs_l).	2.95939087868	1830
Coq.Numbers.Integer.Abstract.ZLcm.lcm_1_r	40	0.1.10.2.0.3.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: trivial using divide_1_l, le_0_1; only 1: intros p Hn Hm; only 1: now apply divide_abs_l).	28.6357679367	19626
Coq.Numbers.Integer.Abstract.ZLcm.lcm_diag	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_mul_mono_r_nonneg	40	0.9.1.0	search with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), lcm_mul_mono_l, mul_comm; only 1: trivial).	9.05250406265	946
Coq.Numbers.Integer.Abstract.ZLcm.gcd_1_lcm_mul	40
Coq.Numbers.Integer.Abstract.ZMaxMin.succ_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.succ_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.pred_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.pred_min_distr	40	0.0.1.0.0.0.1.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: trivial; only 1: rewrite 2!min_r; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: trivial).	1.33413386345	758
Coq.Numbers.Integer.Abstract.ZMaxMin.add_max_distr_l	40	1.0.0.0.1.0.0.1.1.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now f_equiv; only 1: trivial; only 1: now apply add_le_mono; only 1: rewrite 2!max_l; only 1: now f_equiv; only 1: trivial; only 1: now apply add_le_mono).	3.29783391953	1089
Coq.Numbers.Integer.Abstract.ZMaxMin.add_max_distr_r	40	3.0.0.0.3.0.0.1.1.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: trivial; only 1: now apply add_le_mono; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: trivial; only 1: now apply add_le_mono).	6.6799428463	3824
Coq.Numbers.Integer.Abstract.ZMaxMin.add_min_distr_l	40	0.0.0.0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: trivial; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: trivial; only 1: now rewrite <- ?add_le_mono_l).	0.782924890518	241
Coq.Numbers.Integer.Abstract.ZMaxMin.add_min_distr_r	40	1.0.0.0.1.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: trivial; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: trivial; only 1: now rewrite <- ?add_le_mono_r).	1.88793587685	742
Coq.Numbers.Integer.Abstract.ZMaxMin.opp_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.opp_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.sub_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.sub_max_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.sub_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.sub_min_distr_r	40	0.0.5.7.0.0.5.8.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: trivial; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: trivial; only 1: now apply sub_le_mono_r).	30.9932219982	22049
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_max_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_max_distr_nonneg_r	40	1.3.0.1.0.1.3.0.1.1.1.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!max_l; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).	29.2396931648	20334
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_min_distr_nonneg_l	40	1.0.1.0.1.0.1.1.2.4	search with cache (only 1: intros n m H1 H2; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: trivial; only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!min_r; only 1: order; only 1: trivial; only 1: now apply mul_le_mono_nonneg_l).	25.9358868599	14716
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_min_distr_nonneg_r	40	3.0.1.0.3.0.1.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_r).	8.7353079319	5697
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_max_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_max_distr_nonpos_r	40	0.1.2.2.2.0.0.1.2.2.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l by trivial; only 1: rewrite max_l; only 1: reflexivity; only 1: apply mul_le_mono_nonpos_r; only 1: assumption; only 1: order; only 1: rewrite min_r by trivial; only 1: rewrite max_r; only 1: reflexivity; only 1: apply mul_le_mono_nonpos_r; only 1: assumption; only 1: order).	33.9642028809	21983
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_min_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_min_distr_nonpos_r	40
Coq.Numbers.Integer.Abstract.ZLt.neg_pos_cases	40	1.0.0.0.22.7	search with cache (only 1: split; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: intuition order; only 1: intuition order; only 1: intuition order; only 1: intuition order).	2.23312497139	1897
Coq.Numbers.Integer.Abstract.ZLt.nonpos_pos_cases	40	0.3.0.17.2	search with cache (only 1: intro; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: intuition order; only 1: intuition order; only 1: intuition order).	0.527241945267	712
Coq.Numbers.Integer.Abstract.ZLt.neg_nonneg_cases	40	1.4.1.18.0	search with cache (only 1: intro; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: intuition order; only 1: intuition order; only 1: intuition order).	0.635622024536	962
Coq.Numbers.Integer.Abstract.ZLt.nonpos_nonneg_cases	40	1.1.1	search with cache (only 1: intro; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0336270332336	6
Coq.Numbers.Integer.Abstract.ZLt.lt_pred_l	40	17.4.1	search with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	0.630227088928	729
Coq.Numbers.Integer.Abstract.ZLt.le_pred_l	40	27.4.1	search with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: now apply le_le_succ_r).	1.49303412437	1878
Coq.Numbers.Integer.Abstract.ZLt.lt_le_pred	40
Coq.Numbers.Integer.Abstract.ZLt.nle_pred_r	40	0.0.9.1	search with cache (only 1: intro; only 1: rewrite nle_gt; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	0.224122047424	248
Coq.Numbers.Integer.Abstract.ZLt.lt_pred_le	40
Coq.Numbers.Integer.Abstract.ZLt.lt_lt_pred	40
Coq.Numbers.Integer.Abstract.ZLt.le_le_pred	40	0.0.1.5	search with cache (only 1: intros n m H; only 1: apply lt_le_incl; only 1: apply lt_pred_le; only 1: trivial).	0.212515115738	65
Coq.Numbers.Integer.Abstract.ZLt.lt_pred_lt	40	5.14.0.0.2	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl).	7.4630010128	5575
Coq.Numbers.Integer.Abstract.ZLt.le_pred_lt	40	0.0.0.4.1	search with cache (only 1: intros n m; only 1: rewrite <- lt_le_pred; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).	0.251646995544	55
Coq.Numbers.Integer.Abstract.ZLt.pred_lt_mono	40
Coq.Numbers.Integer.Abstract.ZLt.pred_le_mono	40	0.1.0.8.1.0	search with cache (only 1: intros n m; only 1: symmetry; only 1: rewrite <- lt_le_pred; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply le_succ_l).	4.7944290638	2391
Coq.Numbers.Integer.Abstract.ZLt.lt_succ_lt_pred	40	6.2.0	search with cache (only 1: intros; only 1: rewrite lt_le_pred; only 1: apply le_succ_l).	0.236681938171	72
Coq.Numbers.Integer.Abstract.ZLt.le_succ_le_pred	40	1.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- lt_pred_le; only 1: rewrite pred_succ; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: apply lt_succ_r).	0.0391919612885	7
Coq.Numbers.Integer.Abstract.ZLt.lt_pred_lt_succ	40	0.1.0.2.0.3.2.0	search with cache (only 1: intros n m; only 1: symmetry; only 1: rewrite lt_le_pred; only 1: rewrite pred_succ; only 1: symmetry; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply le_succ_l).	1.94434189796	1103
Coq.Numbers.Integer.Abstract.ZLt.le_pred_lt_succ	40	5.1.3.0	search with cache (only 1: intros n m; only 1: symmetry; only 1: rewrite <- lt_pred_le; only 1: apply lt_succ_r).	1.06850099564	618
Coq.Numbers.Integer.Abstract.ZLt.neq_pred_l	40	20.3.9.6	search with cache (only 1: intro; only 1: apply lt_gt_cases; only 1: rewrite lt_pred_le; only 1: now left).	20.6079440117	23613
Coq.Numbers.Integer.Abstract.ZLt.lt_m1_r	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_eq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_neq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_null	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_pos	40	3.0.0.0.0.0	search with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order').	0.0324828624725	9
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_neg	40	0.0.0.0.0.0	search with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.0308401584625	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_max	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_neq'	40	0.1.1.20.4.0	search with cache (only 1: intros n; only 1: rewrite opp_nonneg_nonpos; only 1: intros; only 1: rewrite abs_neq; only 1: auto with relations; only 1: order).	32.5214400291	26095
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_nonneg	40	0.0.0.0.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: order; only 1: rewrite opp_nonneg_nonpos; only 1: order).	0.0417561531067	5
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_eq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_neq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_opp	40	0.0.1.9.0.3.14.1.1.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: rewrite abs_neq; only 1: now rewrite opp_involutive; only 1: rewrite opp_nonpos_nonneg; only 1: order; only 1: rewrite abs_eq; only 1: auto with relations; only 1: rewrite opp_nonneg_nonpos; only 1: order).	36.0105628967	37936
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_0	40	2.3	search with cache (only 1: apply abs_eq; only 1: solve_proper).	0.0138280391693	7
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_0_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_eq_or_opp	40	8.8.2.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: auto with relations).	3.59847378731	2469
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_or_opp_abs	40	19.17.0.0.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: right; only 1: now rewrite opp_involutive).	18.7654500008	29164
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_involutive	40	1.6.0	search with cache (only 1: intros; only 1: apply abs_eq; only 1: apply abs_nonneg).	0.109287977219	22
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_case_strong	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_case	40	0.0.0.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: auto).	0.0726630687714	4
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_eq_cases	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_lt	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_le	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_sub_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_square	40	8.1.0.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: apply eq_refl; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	1.04091477394	446
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_0	40	6.5.1.3.6.5.1.3.2	search with cache (only 1: rewrite sgn_null; only 1: rewrite <- abs_0_iff; only 1: apply abs_eq; only 1: apply opp_nonpos_nonneg; only 1: now rewrite opp_nonpos_nonneg; only 1: rewrite <- abs_0_iff; only 1: apply abs_eq; only 1: apply opp_nonpos_nonneg; only 1: now rewrite opp_nonpos_nonneg).	7.20366096497	17934
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_pos_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_null_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_neg_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_nonpos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_sgn	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_sgn	40	0.1.1.0.0.0.0.1	search with cache (only 1: intros n; only 1: destruct_sgn n; only 1: apply sgn_pos; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).	0.327143907547	177
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_eq	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_opp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_nonneg	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_nonpos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_sign	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_pos	40	0.0.6	search with cache (only 1: intros a b c; only 1: apply NZQuot.div_pos; only 1: trivial).	0.252977132797	38
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_str_pos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_quot_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_quot_ge	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_succ_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_pred_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_pred_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_succ_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_lt_upper_bound	40	0.0.0.16.0.0.2	search with cache (only 1: intros a b c Ha Hb Hc; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply NZQuot.mul_div_le; only 1: auto; only 1: auto; only 1: auto).	16.5770900249	13089
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_le_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_le_lower_bound	40	1.0.1.4.0	search with cache (only 1: intros; only 1: rewrite <- (quot_mul q b) by order; only 1: apply quot_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.521534919739	193
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_add_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_rem_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_rem_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.add_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.add_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.add_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_mul_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_unique_pos	40	0.1.0.5.1.0.1.1.1.1	search with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: trivial; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	13.3248639107	7977
Coq.Numbers.Integer.Abstract.ZDivFloor.div_unique_neg	40	0.1.3.0	search with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).	0.0609860420227	24
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_unique_pos	40	0.1.0.5.1.1.1.1.1	search with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	8.55651402473	5733
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_unique_neg	40	0.1.2.0	search with cache (only 1: intros; only 1: apply mod_unique with q; only 1: auto; only 1: auto).	0.0283110141754	7
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_bound_or	40	0.7.3.0.5.1.12.1	search with cache (only 1: intros; only 1: destruct (abs_spec b) as [(LE, EQ)| (LE, EQ)]; only 1: left; only 1: apply mod_pos_bound; only 1: order; only 1: right; only 1: apply mod_neg_bound; only 1: order).	26.7711131573	29959
Coq.Numbers.Integer.Abstract.ZDivFloor.opp_mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_sign	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_small	40	1.0.0.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: intuition; only 1: intuition; only 1: now nzsimpl).	0.0543661117554	8
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_small	40	1.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: intuition; only 1: intuition; only 1: now nzsimpl).	0.113461971283	28
Coq.Numbers.Integer.Abstract.ZDivFloor.div_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_1_r	40	1.0.3.0.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: intuition; only 1: apply lt_0_1; only 1: now nzsimpl).	0.422941923141	371
Coq.Numbers.Integer.Abstract.ZDivFloor.div_1_l	40	0.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0235161781311	5
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_1_l	40	0.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0236840248108	5
Coq.Numbers.Integer.Abstract.ZDivFloor.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_mul	40	1.0.0.0.0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: intuition; only 1: right; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: apply mul_comm).	2.32333922386	1023
Coq.Numbers.Integer.Abstract.ZDivFloor.div_unique_exact	40	0.0.11.0.1.9.2.20	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: now try split; only 1: intuition order; only 1: nzsimpl; only 1: now try split).	8.1156129837	7246
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_le	40	0.0.3.0	search with cache (only 1: intros; only 1: apply mod_le; only 1: trivial; only 1: trivial).	0.622643947601	176
Coq.Numbers.Integer.Abstract.ZDivFloor.div_pos	40	1.1	search with cache (only 1: intros; only 1: auto using div_pos).	0.294239997864	36
Coq.Numbers.Integer.Abstract.ZDivFloor.div_str_pos	40	0.3.0	search with cache (only 1: intros a b (Hb, Hab); only 1: apply div_str_pos; only 1: auto).	0.18404507637	65
Coq.Numbers.Integer.Abstract.ZDivFloor.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_div_le	40	0.0.4.0.0.2.0	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_pos_bound a b); only 1: trivial; only 1: trivial).	0.805666923523	343
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_div_ge	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_succ_div_gt	40	0.0.2.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: destruct (mod_pos_bound a b); only 1: trivial; only 1: intuition).	0.0547440052032	9
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_succ_div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_exact	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0585939884186	4
Coq.Numbers.Integer.Abstract.ZDivFloor.div_lt_upper_bound	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	0.0334610939026	6
Coq.Numbers.Integer.Abstract.ZDivFloor.div_le_upper_bound	40	1.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: auto).	0.0960609912872	12
Coq.Numbers.Integer.Abstract.ZDivFloor.div_le_lower_bound	40	1.0.0.1.0	search with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply Private_NZDiv.div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.157670021057	42
Coq.Numbers.Integer.Abstract.ZDivFloor.div_le_compat_l	40	0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0	search with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).	35.4622540474	12797
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_add	40	0.0.5.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_bound_or; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	1.21182799339	480
Coq.Numbers.Integer.Abstract.ZDivFloor.div_add	40	1.1.0.0.0.2.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: intuition; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.296396970749	85
Coq.Numbers.Integer.Abstract.ZDivFloor.div_add_l	40	0.0.2.0	search with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: order).	0.0311069488525	6
Coq.Numbers.Integer.Abstract.ZDivFloor.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_mul_cancel_l	40	6.4.1	search with cache (only 1: intros a b c; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r).	8.28152084351	1749
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_mod_distr_r	40	6.7.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	16.2833991051	2528
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_mod_idemp_r	40	2.5.8	search with cache (only 1: intros a b Hb; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l).	14.053965807	4459
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.add_mod_idemp_r	40	3.2.3	search with cache (only 1: intros a b c; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l).	1.21425890923	305
Coq.Numbers.Integer.Abstract.ZDivFloor.add_mod	40	0.0.11.4.4	search with cache (only 1: intros a b Hb H; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: tauto; only 1: tauto).	28.0039789677	14729
Coq.Numbers.Integer.Abstract.ZDivFloor.div_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.rem_mul_r	40	0.1.1.3.1.0.2.1	search with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: tauto).	32.4372909069	3656
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_mul_le	40	0.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: auto).	0.0742950439453	9
Coq.Numbers.Integer.Abstract.ZAdd.add_pred_l	40
Coq.Numbers.Integer.Abstract.ZAdd.add_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.add_opp_r	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_succ_l	40	5.8.3.0.1	search with cache (only 1: intro n; only 1: intro m; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now nzsimpl).	12.5389051437	5339
Coq.Numbers.Integer.Abstract.ZAdd.sub_pred_l	40	0.1.1.1.1	search with cache (only 1: intro n; only 1: intro m; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).	0.0307590961456	9
Coq.Numbers.Integer.Abstract.ZAdd.sub_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.opp_pred	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_diag	40	0.0.5.0.0.1.14.1	search with cache (only 1: intro m; only 1: nzinduct m; only 1: rewrite <- add_opp_r; only 1: now nzsimpl; only 1: intro m; only 1: rewrite sub_succ_r; only 1: rewrite sub_succ_l; only 1: now rewrite pred_succ).	12.0450959206	6871
Coq.Numbers.Integer.Abstract.ZAdd.add_opp_diag_l	40
Coq.Numbers.Integer.Abstract.ZAdd.add_opp_diag_r	40	1.1.8.1.0.8.2	search with cache (only 1: intro m; only 1: nzinduct m; only 1: now nzsimpl; only 1: intro n; only 1: split; only 1: now rewrite add_comm, add_opp_r, sub_diag; only 1: now rewrite add_comm, add_opp_r, sub_diag).	3.38195705414	1860
Coq.Numbers.Integer.Abstract.ZAdd.add_opp_l	40	8.1.4.4.1	search with cache (only 1: intro m; only 1: intro n; only 1: rewrite <- add_opp_r; only 1: rewrite add_comm; only 1: now nzsimpl).	22.6630730629	8902
Coq.Numbers.Integer.Abstract.ZAdd.add_sub_assoc	40
Coq.Numbers.Integer.Abstract.ZAdd.opp_involutive	40
Coq.Numbers.Integer.Abstract.ZAdd.opp_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.opp_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.opp_inj	40
Coq.Numbers.Integer.Abstract.ZAdd.opp_inj_wd	40	0.0.4.5.0.0.12	search with cache (only 1: intros n1 n2; only 1: split; only 1: intros; only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H; only 1: intros; only 1: now f_equiv).	5.61139512062	4225
Coq.Numbers.Integer.Abstract.ZAdd.eq_opp_l	40	3.4.0.3.4.0.0.1	search with cache (only 1: intros n m; only 1: split; only 1: intros; only 1: apply opp_inj; only 1: now rewrite opp_involutive; only 1: intros; only 1: apply opp_inj; only 1: now rewrite opp_involutive).	13.0143208504	7294
Coq.Numbers.Integer.Abstract.ZAdd.eq_opp_r	40	0.1	search with cache (only 1: intros n m; only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive).	0.0661590099335	19
Coq.Numbers.Integer.Abstract.ZAdd.sub_add_distr	40	0.0.0.0	search with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr; only 1: now rewrite add_assoc).	0.0346648693085	4
Coq.Numbers.Integer.Abstract.ZAdd.sub_sub_distr	40	2.7.2.0	search with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: now rewrite opp_involutive).	2.16832995415	688
Coq.Numbers.Integer.Abstract.ZAdd.sub_opp_l	40	8.0.0.0.0	search with cache (only 1: intro n; only 1: intro m; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now rewrite add_comm).	1.56438183784	517
Coq.Numbers.Integer.Abstract.ZAdd.sub_opp_r	40	0.0.0	search with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: now rewrite opp_involutive).	0.0254781246185	3
Coq.Numbers.Integer.Abstract.ZAdd.add_sub_swap	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_cancel_l	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_cancel_r	40
Coq.Numbers.Integer.Abstract.ZAdd.add_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.add_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_move_l	40	7.14.4	search with cache (only 1: intros n m p; only 1: rewrite <- add_opp_r; only 1: now apply add_move_l).	18.6632320881	13292
Coq.Numbers.Integer.Abstract.ZAdd.sub_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.add_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.add_move_0_r	40	0.15.0	search with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: now rewrite add_move_l, sub_0_l).	1.92531204224	820
Coq.Numbers.Integer.Abstract.ZAdd.sub_move_0_l	40	4.0.0.1	search with cache (only 1: intro n; only 1: intro m; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).	0.0298211574554	9
Coq.Numbers.Integer.Abstract.ZAdd.sub_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.add_simpl_l	40	0.1	search with cache (only 1: intros n m; only 1: now rewrite add_comm, <- add_sub_assoc, sub_diag, add_0_r).	0.0287981033325	3
Coq.Numbers.Integer.Abstract.ZAdd.add_simpl_r	40	5.1.0	search with cache (only 1: intros; only 1: rewrite add_comm; only 1: now rewrite add_comm, <- add_sub_assoc, sub_diag, add_0_r).	0.0794010162354	18
Coq.Numbers.Integer.Abstract.ZAdd.sub_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_simpl_r	40	1.0.1.3	search with cache (only 1: nzinduct m; only 1: now nzsimpl; only 1: intro m; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.208595991135	37
Coq.Numbers.Integer.Abstract.ZAdd.sub_add	40	4.0	search with cache (only 1: intros; only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.0420749187469	6
Coq.Numbers.Integer.Abstract.ZAdd.add_add_simpl_l_l	40
Coq.Numbers.Integer.Abstract.ZAdd.add_add_simpl_l_r	40
Coq.Numbers.Integer.Abstract.ZAdd.add_add_simpl_r_l	40	3.9.0.4	search with cache (only 1: intro m; only 1: intros; only 1: rewrite add_comm; only 1: apply add_add_simpl_l_l).	9.93231892586	4716
Coq.Numbers.Integer.Abstract.ZAdd.add_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_add_simpl_r_r	40	0.16.0	search with cache (only 1: intros n m p; only 1: rewrite (add_comm p m); only 1: now rewrite <- sub_sub_distr, sub_add_distr, sub_diag, sub_0_l, sub_opp_r).	1.23570990562	771
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_same	40	1.4.2.2.7.1.19	search with cache (only 1: intuition; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with 0; only 1: split; only 1: intuition; only 1: now rewrite abs_pos; only 1: now nzsimpl).	9.47988200188	18750
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_small	40	0.5.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: apply div_small; only 1: intuition).	0.249387979507	52
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_small	40	0.7.0	search with cache (only 1: intros; only 1: apply mod_small; only 1: intuition).	0.308605909348	75
Coq.Numbers.Integer.Abstract.ZDivEucl.div_0_l	40	0.0.1.0.1.2.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.133802890778	55
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_1_r	40	1.0.0.3.0.3.0.5.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: apply opp_nonpos_nonneg; only 1: now rewrite opp_nonpos_nonneg; only 1: rewrite abs_eq; only 1: apply lt_0_1; only 1: apply le_0_1; only 1: now nzsimpl).	1.42732715607	2425
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_1_r	40	1.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: now nzsimpl).	0.0718770027161	10
Coq.Numbers.Integer.Abstract.ZDivEucl.div_1_l	40	0.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0243189334869	5
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_1_l	40	0.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0242431163788	5
Coq.Numbers.Integer.Abstract.ZDivEucl.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_mul	40	1.0.1.2.0.3.2.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).	1.39222979546	789
Coq.Numbers.Integer.Abstract.ZDivEucl.div_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_pos	40	0.1	search with cache (only 1: intros; only 1: auto using div_pos).	0.0177841186523	3
Coq.Numbers.Integer.Abstract.ZDivEucl.div_str_pos	40	0.4.0	search with cache (only 1: intros a b (Hb, Hab); only 1: apply div_str_pos; only 1: auto).	0.213060855865	79
Coq.Numbers.Integer.Abstract.ZDivEucl.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_div_le	40	1.2.1.18.0	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: now apply mod_always_pos).	1.3266711235	1446
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_succ_div_gt	40	0.0.2.0.0.9.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: destruct (mod_always_pos a b); only 1: intuition; only 1: order; only 1: rewrite abs_eq in *; only 1: auto; only 1: intuition order).	11.430505991	5640
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_pred_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_exact	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0362210273743	4
Coq.Numbers.Integer.Abstract.ZDivEucl.div_lt_upper_bound	40	0.0.0.1.0.0.0	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: intuition; only 1: order; only 1: auto).	0.0477089881897	8
Coq.Numbers.Integer.Abstract.ZDivEucl.div_le_upper_bound	40	1.0.0.0.1.0.0.0	search with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: auto).	0.100975990295	11
Coq.Numbers.Integer.Abstract.ZDivEucl.div_le_lower_bound	40	1.0.0.1.0	search with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply Private_NZDiv.div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.174431085587	42
Coq.Numbers.Integer.Abstract.ZDivEucl.div_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_add	40	1.0.1.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_always_pos; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.252554893494	60
Coq.Numbers.Integer.Abstract.ZDivEucl.div_add	40	1.1.2.2.0.2.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: intuition; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	1.17606282234	703
Coq.Numbers.Integer.Abstract.ZDivEucl.div_add_l	40	0.0.2.0	search with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: trivial).	0.0286679267883	6
Coq.Numbers.Integer.Abstract.ZDivEucl.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_mul_cancel_l	40	2.0.4.5.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: trivial; only 1: auto using Private_NZDiv.div_pos).	14.2336030006	3656
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_mod_distr_r	40	5.6.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	3.49608492851	641
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_mod_idemp_r	40	0.6.7.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: auto).	16.282184124	5235
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_mod	40	0.0.4.8.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now rewrite mul_comm; only 1: auto; only 1: auto).	5.9165930748	2412
Coq.Numbers.Integer.Abstract.ZDivEucl.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.add_mod_idemp_r	40	3.4.4	search with cache (only 1: intros a b c; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l).	11.730576992	3420
Coq.Numbers.Integer.Abstract.ZDivEucl.add_mod	40	0.0.9.6.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: auto; only 1: auto).	16.4563000202	7500
Coq.Numbers.Integer.Abstract.ZDivEucl.div_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_div	40	1.0.0.0.0.0.0.1.0.1.0.4.0.6.0	search with cache (only 1: intros; only 1: pos_or_neg b; only 1: apply div_small; only 1: destruct (mod_always_pos a b); only 1: trivial; only 1: split; only 1: intuition order; only 1: rewrite abs_eq in *; only 1: intuition order; only 1: order; only 1: apply opp_inj; only 1: rewrite opp_0, <- div_opp_r by trivial; only 1: apply div_small; only 1: rewrite <- (abs_neq' b) by order; only 1: now apply mod_always_pos).	34.5675399303	16229
Coq.Numbers.Integer.Abstract.ZDivEucl.div_mul_le	40	0.0.1.0.2.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: intuition; only 1: order).	1.46563220024	454
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_divides	40
Coq.Numbers.Integer.Binary.ZBinary.test	40	18.2	search with cache (only 1: intros a b c0; only 1: Z.order').	2.44320297241	1134
Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40
Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40
Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	40	0.0.0.0.0.1.0.0.0	search with cache (only 1: unfold eqb31; only 1: intros x y; only 1: rewrite spec_compare; only 1: case Z.compare_spec; only 1: intuition; only 1: apply Int31_canonic; only 1: auto; only 1: easy; only 1: easy).	0.0576491355896	10
Coq.Numbers.Cyclic.Int31.Ring31.test	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iszero_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iszero_not_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sneakl_shiftr	40	4.2.0	search with cache (only 1: destruct x; only 1: simpl; only 1: reflexivity).	0.0252361297607	9
Coq.Numbers.Cyclic.Int31.Cyclic31.sneakr_shiftl	40	2.0	search with cache (only 1: destruct x; only 1: auto).	0.0211169719696	4
Coq.Numbers.Cyclic.Int31.Cyclic31.twice_zero	40
Coq.Numbers.Cyclic.Int31.Cyclic31.twice_or_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_S	40	4.0.1.0	search with cache (only 1: intros; only 1: destruct x; only 1: simpl in *; only 1: auto).	0.031702041626	9
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_S_tail	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_n_0	40	0.9.0.0.5.0.0.0	search with cache (only 1: intros; only 1: elim n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: now f_equal).	3.72198104858	3448
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_size	40	5.4	search with cache (only 1: destruct x; only 1: auto).	3.05279707909	37
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_S	40	2.0.2.0.0.0	search with cache (only 1: intros n; only 1: elim n; only 1: simpl; only 1: intros; only 1: now f_equal; only 1: reflexivity).	0.0647940635681	27
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_S_tail	40	0.2.1.0.2.2	search with cache (only 1: intros n; only 1: elim n; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: now f_equal).	0.837678194046	506
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_n_0	40	1.1.1.2.4	search with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: rewrite IHn; only 1: auto).	1.26194310188	882
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_size	40	5.3	search with cache (only 1: destruct x; only 1: auto).	2.0342040062	24
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.firstr_firstl	40	6.0.1	search with cache (only 1: destruct x; only 1: simpl; only 1: auto).	1.03678202629	19
Coq.Numbers.Cyclic.Int31.Cyclic31.firstl_firstr	40	2.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: auto).	0.0282161235809	5
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_predsize_0_firstl	40	3.2.0.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: intros; only 1: injection H; only 1: auto).	0.0508139133453	15
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_0_propagates	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.int31_ind_sneakl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.int31_ind_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_aux_eqn	40	6.5.0.0.1	search with cache (only 1: destruct x; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: auto).	3.80861902237	3094
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_aux_converges	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_eqn	40	8.6.0.2.0.11	search with cache (only 1: destruct x; only 1: simpl; only 1: compute; only 1: intros; only 1: rewrite H; only 1: auto).	14.2417330742	4056
Coq.Numbers.Cyclic.Int31.Cyclic31.recrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recrbis_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_equiv	40	2.2.0	search with cache (only 1: intros; only 1: apply recrbis_aux_equiv; only 1: auto).	0.023402929306	7
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_pos	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_nonneg	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_zero	40	4.2.0	search with cache (only 1: destruct x; only 1: compute; only 1: auto).	0.0582120418549	26
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_le	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_length	40	7.0	search with cache (only 1: intros; only 1: auto).	0.0228700637817	9
Coq.Numbers.Cyclic.Int31.Cyclic31.l2i_i2l	40	4.0.2.0	search with cache (only 1: intros; only 1: destruct x; only 1: compute; only 1: auto).	0.0308260917664	10
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_sneakr	40	2.1.0.1	search with cache (only 1: destruct x; only 1: compute; only 1: intros; only 1: auto).	1.18423819542	23
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_sneakl	40	0.0.0	search with cache (only 1: destruct x; only 1: compute; only 1: auto).	0.0281529426575	3
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_l2i	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_nshiftl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_i2l	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_shiftr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_incrbis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_double_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_double	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_phi_aux	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2ibis_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2ibis_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_positive_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.double_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.double_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2i_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.positive_to_int31_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.positive_to_int31_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv_negative	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.wB_pos	40	0	search with cache (only 1: auto with zarith).	0.0166928768158	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_zdigits	40	0	search with cache (only 1: auto).	0.015153169632	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_more_than_1_digit	40	0	search with cache (only 1: reflexivity).	0.0162401199341	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_0	40	0	search with cache (only 1: auto).	0.0148010253906	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_1	40	0	search with cache (only 1: reflexivity).	0.0147840976715	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_m1	40	1	search with cache (only 1: auto with zarith).	0.0181128978729	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_compare	40	0	search with cache (only 1: auto).	0.0148119926453	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_succ_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add	40	1.0.4.8.7	search with cache (only 1: intros; only 1: unfold add31c, add31, interp_carry; only 1: rewrite phi_phi_inv; only 1: generalize (phi_bounded x), (phi_bounded y); only 1: lia).	10.4100091457	6841
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_succ	40	2.1	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.130626916885	53
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub	40	4.3	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.10226392746	39
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_carry	40	0.0.0.14	search with cache (only 1: unfold sub31carryc, sub31, interp_carry; only 1: intros; only 1: repeat rewrite phi_phi_inv; only 1: apply Zplus_mod_idemp_l).	4.33175897598	2614
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp	40	1.1	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.134701967239	41
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pred_c	40	0.0	search with cache (only 1: intros; only 1: apply spec_sub_c).	0.0229740142822	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pred	40	1.1	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.235593080521	73
Coq.Numbers.Cyclic.Int31.Cyclic31.phi2_phi_inv2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mul_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mul	40	1.2	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0236148834229	5
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_square_c	40	0.0.4.0.0.0.0	search with cache (only 1: unfold mul31c; only 1: intros; only 1: rewrite phi2_phi_inv2; only 1: apply Zmod_small; only 1: generalize (phi_bounded x); only 1: intros; only 1: nia).	10.6618680954	185
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_div21	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter_int31_iter_nat	40
Coq.Numbers.Cyclic.Int31.Cyclic31.addmuldiv31_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_mul_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pos_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_head00	40
Coq.Numbers.Cyclic.Int31.Cyclic31.head031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_nz	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_head0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_tail00	40	0.0.0.0.0.2.0	search with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).	0.0481250286102	9
Coq.Numbers.Cyclic.Int31.Cyclic31.tail031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_tail0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.quotient_by_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_main	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_init	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_test_true	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_test_false	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt31_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.div31_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt31_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter31_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sqrt	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_lower_bound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.div312_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter312_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sqrt2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_is_even	40
Coq.Numbers.Cyclic.Int31.Cyclic31.log2_phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_lor	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_land	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_lxor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_more_than_1_digit	40	9	search with cache (only 1: lia).	0.0300331115723	10
Coq.Numbers.Cyclic.ZModulo.ZModulo.wB_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z_2	40	0.0.0.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0169219970703	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z	40	0.0.0.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0185408592224	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_of_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_zdigits	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_0	40	0.4.0.0.0.0	search with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: unfold wB, base; only 1: split; only 1: auto with zarith; only 1: auto with zarith).	0.0242409706116	10
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_1	40	0.0.8.2.0.0.0.0	search with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: unfold wB, base; only 1: split; only 1: auto with zarith; only 1: apply Z.pow_gt_1; only 1: auto with zarith; only 1: auto with zarith).	2.16955304146	2363
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_Bm1	40	0.5.0.0	search with cache (only 1: unfold to_Z, one; only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: lia).	0.0526230335236	34
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_compare	40	0.0.0.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0192852020264	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_eq0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Zmod_equal	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_succ_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_succ	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pred_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pred	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub	40	5.3.9.0.0	search with cache (only 1: intros; only 1: unfold pred, to_Z, Z.pred; only 1: rewrite <- Zminus_mod_idemp_r; only 1: rewrite <- Zminus_mod_idemp_l; only 1: lia).	26.7348690033	16116
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_mul_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_mul	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_square_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_modulo	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_modulo_gt	40	0.0.1.2.1.7.15	search with cache (only 1: destruct 1; only 1: intros; only 1: apply Zmod_small; only 1: assert ([|b|] > 0) by lia; only 1: generalize (Z_mod_lt [|a|] [|b|] H0), (Z_mod_lt b wB wB_pos); only 1: fold [|b|]; only 1: lia).	26.511496067	15426
Coq.Numbers.Cyclic.ZModulo.ZModulo.Zgcd_bound	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_gcd	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_gcd_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div21	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_mul_div	40	5	search with cache (only 1: split).	0.891926050186	233
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pos_mod	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_is_even	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sqrt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sqrt2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.two_p_power2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_head00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_head0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Ptail_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Ptail_bounded	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_tail00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_tail0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_lor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_land	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_lxor	40
Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40
Coq.Numbers.Cyclic.Int63.Cyclic63.P	40
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	40	0.0.1.0.1.0.0.0.0.0.0.0	search with cache (only 1: intros n p a H; only 1: rewrite Zmod_eq by auto with zarith; only 1: unfold Z.sub at 1; only 1: rewrite Z_div_plus_full_l by auto with zarith; only 1: replace (2 ^ n) with (2 ^ (n - p) * 2 ^ p) by (rewrite <- Zpower_exp; [ f_equal |  |  ]; lia); only 1: rewrite <- Zdiv_Zdiv, Z_div_mult by auto with zarith; only 1: rewrite (Z.mul_comm (2 ^ (n - p))), Z.mul_assoc; only 1: rewrite Zopp_mult_distr_l; only 1: rewrite Z_div_mult by auto with zarith; only 1: symmetry; only 1: apply Zmod_eq; only 1: auto with zarith).	7.04778313637	1598
Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40
Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	2.1.2	search with cache (only 1: intros; only 1: apply Z.lt_gt; only 1: auto with zarith).	0.0286898612976	8
Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40
Coq.Numbers.Cyclic.Int63.Int63.wB_diff_0	40	0.0	search with cache (only 1: intros h; only 1: now Z.nzsimpl).	0.0429451465607	2
Coq.Numbers.Cyclic.Int63.Int63.wB_pos	40	9	search with cache (only 1: repeat split).	0.082181930542	10
Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	1	search with cache (only 1: now Z.nzsimpl).	0.0376307964325	2
Coq.Numbers.Cyclic.Int63.Int63.to_Z_1	40	0	search with cache (only 1: reflexivity).	0.0154659748077	1
Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	133	search with cache (only 1: congruence).	3.77605581284	15577
Coq.Numbers.Cyclic.Int63.Int63.to_Z_inj	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	0.1.0	search with cache (only 1: intros; only 1: rewrite <- not_true_iff_false, eqb_spec; only 1: trivial).	0.0392110347748	4
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_correct	40	0.0.1	search with cache (only 1: intros x y; only 1: rewrite eqb_false_spec; only 1: trivial).	0.0334901809692	13
Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40
Coq.Numbers.Cyclic.Int63.Int63.cast_refl	40
Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40	0.0.1.0.5	search with cache (only 1: unfold eqo; only 1: intros; only 1: generalize (eqb_correct i j); only 1: rewrite H; only 1: trivial).	0.263082027435	128
Coq.Numbers.Cyclic.Int63.Int63.eqbP	40
Coq.Numbers.Cyclic.Int63.Int63.ltbP	40
Coq.Numbers.Cyclic.Int63.Int63.lebP	40
Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_zero_spec	40	0.9.2.0.0	search with cache (only 1: split; only 1: auto using eqb_correct, eqb_complete; only 1: intros; only 1: rewrite H; only 1: trivial).	0.453994035721	431
Coq.Numbers.Cyclic.Int63.Int63.diveucl_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succ_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.pred_spec	40
Coq.Numbers.Cyclic.Int63.Int63.predc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.oppc_spec	40	1	search with cache (only 1: apply subc_spec).	0.015928030014	2
Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40	3	search with cache (only 1: apply sub_spec).	0.0283379554749	4
Coq.Numbers.Cyclic.Int63.Int63.oppcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_gcd	40
Coq.Numbers.Cyclic.Int63.Int63.gcd_spec	40
Coq.Numbers.Cyclic.Int63.Int63.head00_spec	40
Coq.Numbers.Cyclic.Int63.Int63.tail00_spec	40	0	search with cache (only 1: now intros h; rewrite (to_Z_inj _ 0 h)).	0.0181369781494	1
Coq.Numbers.Cyclic.Int63.Int63.eqm_mod	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_sub	40
Coq.Numbers.Cyclic.Int63.Int63.eqmE	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40
Coq.Numbers.Cyclic.Int63.Int63.int_eqm	40	2.1.0.4.1.24	search with cache (only 1: intros h; only 1: subst y; only 1: eapply eqm_trans; only 1: apply eqm_sym; only 1: apply Zmod_eqm; only 1: apply Zmod_eqm).	7.48038506508	8107
Coq.Numbers.Cyclic.Int63.Int63.eqmI	40	3.3.0.12.9.0	search with cache (only 1: unfold eqm; only 1: rewrite Zmod_small; only 1: rewrite Zmod_small; only 1: apply to_Z_inj; only 1: apply to_Z_rec_bounded; only 1: apply to_Z_rec_bounded).	33.7089149952	21738
Coq.Numbers.Cyclic.Int63.Int63.add_assoc	40
Coq.Numbers.Cyclic.Int63.Int63.add_comm	40
Coq.Numbers.Cyclic.Int63.Int63.add_le_r	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_l	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_r	40	0.0.0.0.0.0.0	search with cache (only 1: intros h; only 1: apply int_eqm in h; only 1: rewrite !add_spec in h; only 1: apply eqm_mod, eqm_sub in h; only 1: replace (_ + _ - _) with (φ (y) - φ (z)) in h by lia; only 1: rewrite <- eqm_subE in h; only 1: apply eqmI, h).	0.0397119522095	7
Coq.Numbers.Cyclic.Int63.Int63.lsr0	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	8.1.0.0	search with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: rewrite to_Z_0; only 1: auto with zarith).	0.170475959778	189
Coq.Numbers.Cyclic.Int63.Int63.lsr_1	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_add	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_M_r	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0_spec	40
Coq.Numbers.Cyclic.Int63.Int63.bit_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.bit_b2i	40
Coq.Numbers.Cyclic.Int63.Int63.bit_1	40	7.0.0	search with cache (only 1: unfold bit; only 1: rewrite lsr_1; only 1: now case eqbP).	0.0283250808716	10
Coq.Numbers.Cyclic.Int63.Int63.to_Z_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_M	40
Coq.Numbers.Cyclic.Int63.Int63.bit_half	40
Coq.Numbers.Cyclic.Int63.Int63.bit_ext	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40
Coq.Numbers.Cyclic.Int63.Int63.lor_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.lor_le	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0	40
Coq.Numbers.Cyclic.Int63.Int63.bit_add_or	40
Coq.Numbers.Cyclic.Int63.Int63.addmuldiv_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_bit	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	6.0	search with cache (only 1: unfold is_even; only 1: auto).	0.038341999054	23
Coq.Numbers.Cyclic.Int63.Int63.is_even_lsl_1	40
Coq.Numbers.Cyclic.Int63.Int63.quotient_by_2	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_false	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_spec	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_def	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_lower_bound	40
Coq.Numbers.Cyclic.Int63.Int63.diveucl_21_spec_aux	40
Coq.Numbers.Cyclic.Int63.Int63.div2_phi	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_spec	40
Coq.Numbers.Cyclic.Int63.Int63.of_pos_rec_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_int	40
Coq.Numbers.Cyclic.Int63.Int63.of_Z_spec	40
Coq.Numbers.Cyclic.Int63.Int63.negbE	40
Coq.Numbers.Cyclic.Int63.Int63.Z_oddE	40
Coq.Numbers.Cyclic.Int63.Int63.Z_evenE	40
Coq.Numbers.Cyclic.Int63.Int63.is_zeroE	40
Coq.Numbers.Cyclic.Int63.Int63.bitE	40
Coq.Numbers.Cyclic.Int63.Int63.lt_pow_lt_log	40
Coq.Numbers.Cyclic.Int63.Int63.land_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lxor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.landC	40
Coq.Numbers.Cyclic.Int63.Int63.landA	40
Coq.Numbers.Cyclic.Int63.Int63.land0	40
Coq.Numbers.Cyclic.Int63.Int63.land0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lorC	40
Coq.Numbers.Cyclic.Int63.Int63.lorA	40
Coq.Numbers.Cyclic.Int63.Int63.lor0	40
Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lxorC	40
Coq.Numbers.Cyclic.Int63.Int63.lxorA	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0_r	40
Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	40
Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40
Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	40	10.0.0.1.0.0.6.4	search with cache (only 1: intros x; only 1: intros i; only 1: case eqbP; only 1: intros h; only 1: apply to_Z_inj in h; only 1: intros; only 1: trivial; only 1: easy || Lia.lia).	4.34864902496	8752
Coq.Numbers.Cyclic.Int63.Ring63.test	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.spec_WO	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.spec_OW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.spec_WW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.of_pos_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.of_Z_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.add_0_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.add_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.add_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.mul_1_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.mul_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.mul_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.mul_add_distr_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.add_opp_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.add_opp_diag_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.eqb_eq	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.eqb_correct	40	1.1.1.0.0.0.23	search with cache (only 1: intros f w; only 1: unfold eqb, eq; only 1: rewrite ZnZ.spec_compare; only 1: case Z.compare_spec; only 1: easy || lia; only 1: easy || lia; only 1: easy || lia).	3.39235401154	3928
Coq.Numbers.Cyclic.Abstract.NZCyclic.eq_equiv	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.gt_wB_1	40	0.1.19	search with cache (only 1: apply Z.pow_gt_1; only 1: easy; only 1: auto with zarith).	0.137308120728	234
Coq.Numbers.Cyclic.Abstract.NZCyclic.gt_wB_0	40	2.0	search with cache (only 1: unfold base; only 1: auto with zarith).	0.0144109725952	15
Coq.Numbers.Cyclic.Abstract.NZCyclic.one_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.succ_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.pred_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZ_to_Z_mod	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.pred_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.one_succ	40	0.0.6.11.1	search with cache (only 1: zify; only 1: pose proof gt_wB_1; only 1: rewrite Zmod_small; only 1: lia; only 1: lia).	8.07118821144	2990
Coq.Numbers.Cyclic.Abstract.NZCyclic.two_succ	40	2.3.1.0	search with cache (only 1: zify; only 1: rewrite <- one_mod_wB  at 2; only 1: simpl Z.add; only 1: now rewrite one_mod_wB).	0.123232841492	18
Coq.Numbers.Cyclic.Abstract.NZCyclic.B0	40	11	search with cache (only 1: easy).	0.050626039505	36
Coq.Numbers.Cyclic.Abstract.NZCyclic.BS	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.Zbounded_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.B_holds	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.bi_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.add_0_l	40	4.1.0	search with cache (only 1: intro n; only 1: zify; only 1: apply NZ_to_Z_mod).	0.0451970100403	20
Coq.Numbers.Cyclic.Abstract.NZCyclic.add_succ_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.sub_0_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.sub_succ_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.mul_0_l	40	0.7.8.0.0	search with cache (only 1: intro n; only 1: zify; only 1: apply Zmod_small; only 1: pose proof gt_wB_1; only 1: lia).	1.03903198242	1386
Coq.Numbers.Cyclic.Abstract.NZCyclic.mul_succ_l	40
Coq.Numbers.DecimalString.uint_of_char_spec	40
Coq.Numbers.DecimalString.usu	40
Coq.Numbers.DecimalString.sus	40
Coq.Numbers.DecimalString.isi	40
Coq.Numbers.DecimalString.sis	40
Coq.Numbers.DecimalString.uint_of_string_nonnil	40
Coq.Numbers.DecimalString.sus	40
Coq.Numbers.DecimalString.usu	40
Coq.Numbers.DecimalString.usu_nil	40	2.5	search with cache (only 1: simpl; only 1: auto).	0.0108489990234	9
Coq.Numbers.DecimalString.usu_gen	40
Coq.Numbers.DecimalString.isi	40
Coq.Numbers.DecimalString.isi_posnil	40	3.3	search with cache (only 1: unfold int_of_string; only 1: trivial).	0.0506649017334	17
Coq.Numbers.DecimalString.isi_negnil	40	2.0	search with cache (only 1: simpl; only 1: reflexivity).	0.00913405418396	4
Coq.Numbers.DecimalString.sis	40
Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40
Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40
Coq.Numbers.Natural.Abstract.NOrder.lt_wf_0	40
Coq.Numbers.Natural.Abstract.NOrder.nlt_0_r	40	4.5.9	search with cache (only 1: intros; only 1: rewrite nlt_ge; only 1: apply le_0_l).	0.302918195724	507
Coq.Numbers.Natural.Abstract.NOrder.nle_succ_0	40	4.3.13.0	search with cache (only 1: intro n; only 1: rewrite nle_gt; only 1: apply lt_succ_r; only 1: apply le_0_l).	0.908238172531	1682
Coq.Numbers.Natural.Abstract.NOrder.le_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.lt_0_succ	40	4.3.8	search with cache (only 1: intro n; only 1: apply lt_succ_r; only 1: apply le_0_l).	0.225069999695	231
Coq.Numbers.Natural.Abstract.NOrder.neq_0_lt_0	40	1.4.2.3.5.2.4.3	search with cache (only 1: split; only 1: cases n; only 1: intro H; only 1: now elim H; only 1: intros n _; only 1: rewrite lt_succ_r; only 1: apply le_0_l; only 1: intuition order).	12.4499390125	26703
Coq.Numbers.Natural.Abstract.NOrder.eq_0_gt_0_cases	40	1.1.22.1	search with cache (only 1: cases ltac:(n); only 1: now left; only 1: right; only 1: apply lt_0_succ).	0.931040048599	1903
Coq.Numbers.Natural.Abstract.NOrder.zero_one	40
Coq.Numbers.Natural.Abstract.NOrder.lt_1_r	40	0.0.7.1.0.0.0.7.2.0	search with cache (only 1: setoid_rewrite one_succ; only 1: intro n; only 1: rewrite lt_succ_r; only 1: split; only 1: intro H; only 1: le_elim H; only 1: false_hyp H nlt_0_r; only 1: assumption; only 1: intro H; only 1: now apply eq_le_incl).	10.8638811111	12461
Coq.Numbers.Natural.Abstract.NOrder.le_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.lt_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.lt_1_l'	40
Coq.Numbers.Natural.Abstract.NOrder.le_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.lt_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.succ_pred_pos	40	0.0.3.0.0.0	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: false_hyp H nlt_0_r; only 1: intros; only 1: now rewrite pred_succ).	0.0357549190521	9
Coq.Numbers.Natural.Abstract.NOrder.le_pred_l	40	0.1.4.0.2.1.4	search with cache (only 1: cases ltac:(n); only 1: rewrite pred_0; only 1: solve_proper; only 1: intro n; only 1: rewrite pred_succ; only 1: apply le_le_succ_r; only 1: order).	0.789613962173	806
Coq.Numbers.Natural.Abstract.NOrder.lt_pred_l	40	0.4.1.1.0.2	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intros n _; only 1: rewrite pred_succ; only 1: apply lt_succ_diag_r).	1.12485098839	722
Coq.Numbers.Natural.Abstract.NOrder.le_le_pred	40	0.7.1.0.0.0.2.0	search with cache (only 1: cases ltac:(n); only 1: intros; only 1: rewrite pred_0; only 1: order; only 1: intros; only 1: rewrite pred_succ; only 1: apply lt_le_incl; only 1: now apply le_succ_l).	4.06116485596	3006
Coq.Numbers.Natural.Abstract.NOrder.lt_lt_pred	40	0.0.0.1.8.0.0	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: rewrite pred_0; only 1: order'; only 1: intros; only 1: rewrite pred_succ; only 1: now apply lt_succ_l).	1.58911800385	1744
Coq.Numbers.Natural.Abstract.NOrder.lt_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.lt_pred_le	40	0.0.1.0.9.1	search with cache (only 1: cases ltac:(n); only 1: intros x y; only 1: apply le_0_l; only 1: intros m IH; only 1: rewrite pred_succ; only 1: now apply le_succ_l).	2.14307498932	2223
Coq.Numbers.Natural.Abstract.NOrder.lt_pred_lt	40	4.0.1.1.2.3.9	search with cache (only 1: intro H; only 1: cases ltac:(m); only 1: rewrite pred_0; only 1: order'; only 1: intros n IH; only 1: rewrite pred_succ in IH; only 1: now apply lt_lt_succ_r).	32.3294398785	40640
Coq.Numbers.Natural.Abstract.NOrder.le_pred_le	40	7.2.0.0.2.0.0	search with cache (only 1: intro n; only 1: cases ltac:(m); only 1: rewrite pred_0; only 1: order; only 1: intros m IH; only 1: rewrite pred_succ in IH; only 1: now apply le_le_succ_r).	3.91695594788	3700
Coq.Numbers.Natural.Abstract.NOrder.pred_le_mono	40
Coq.Numbers.Natural.Abstract.NOrder.pred_lt_mono	40
Coq.Numbers.Natural.Abstract.NOrder.lt_succ_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.le_succ_le_pred	40	1.0.5.0.0.0.0.0.6.1	search with cache (only 1: intros; only 1: elim H using le_ind; only 1: solve_proper; only 1: rewrite pred_succ; only 1: now apply eq_le_incl; only 1: intros k H1 H2; only 1: apply le_succ_l in H1; only 1: rewrite pred_succ; only 1: apply lt_le_incl in H1; only 1: auto).	6.70331692696	6372
Coq.Numbers.Natural.Abstract.NOrder.lt_pred_lt_succ	40	1.0.1.5.0.4	search with cache (only 1: cases ltac:(n); only 1: intros n m; only 1: apply lt_0_succ; only 1: intros n m; only 1: rewrite pred_succ; only 1: now rewrite <- succ_lt_mono).	8.05363798141	7100
Coq.Numbers.Natural.Abstract.NOrder.le_pred_le_succ	40	0.0.0.0.1.0.0.0.0.1.0.7.0.4	search with cache (only 1: cases ltac:(n); only 1: intro n; only 1: rewrite pred_0; only 1: split; only 1: apply le_le_succ_r; only 1: intro H; only 1: apply le_succ_r in H; only 1: destruct H as [H| H]; only 1: order; only 1: symmetry in H; only 1: false_hyp H neq_succ_0; only 1: intros; only 1: rewrite pred_succ; only 1: now rewrite <- succ_le_mono).	12.4695298672	14224
Coq.Numbers.Natural.Abstract.NDiv.mod_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.mod_eq	40
Coq.Numbers.Natural.Abstract.NDiv.div_mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.div_unique	40
Coq.Numbers.Natural.Abstract.NDiv.mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.div_unique_exact	40	0.0.2.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: now try split).	0.0302429199219	7
Coq.Numbers.Natural.Abstract.NDiv.div_same	40	3.1.0.2.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: auto'; only 1: now nzsimpl).	0.07319688797	55
Coq.Numbers.Natural.Abstract.NDiv.mod_same	40	1.0.29.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: now nzsimpl).	3.75429010391	11688
Coq.Numbers.Natural.Abstract.NDiv.div_small	40	1.0.0.1.1	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: intuition; only 1: now nzsimpl).	0.0271799564362	8
Coq.Numbers.Natural.Abstract.NDiv.mod_small	40	0.0.1	search with cache (only 1: intros; only 1: apply mod_small; only 1: auto').	0.0111420154572	4
Coq.Numbers.Natural.Abstract.NDiv.div_0_l	40	0.3.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto').	0.0114200115204	6
Coq.Numbers.Natural.Abstract.NDiv.mod_0_l	40	0.4.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').	0.0209078788757	16
Coq.Numbers.Natural.Abstract.NDiv.div_1_r	40	2.2.3.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: intuition; only 1: order'; only 1: now nzsimpl).	0.319668054581	379
Coq.Numbers.Natural.Abstract.NDiv.mod_1_r	40	1.1.1.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: apply lt_0_1; only 1: now nzsimpl).	0.0509629249573	27
Coq.Numbers.Natural.Abstract.NDiv.div_1_l	40	0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto).	0.0101428031921	3
Coq.Numbers.Natural.Abstract.NDiv.mod_1_l	40	0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto).	0.0100829601288	3
Coq.Numbers.Natural.Abstract.NDiv.div_mul	40	9.2.3.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: order; only 1: apply mul_comm).	0.944232940674	1543
Coq.Numbers.Natural.Abstract.NDiv.mod_mul	40	0.0.7.0	search with cache (only 1: intros; only 1: apply mod_mul; only 1: auto'; only 1: auto').	0.174535989761	129
Coq.Numbers.Natural.Abstract.NDiv.mod_le	40	0.0.13.0	search with cache (only 1: intros; only 1: apply mod_le; only 1: auto'; only 1: auto').	0.234688997269	324
Coq.Numbers.Natural.Abstract.NDiv.div_str_pos	40	0.4.0	search with cache (only 1: intros a b (Hb, Hab); only 1: apply div_str_pos; only 1: auto).	0.0853281021118	41
Coq.Numbers.Natural.Abstract.NDiv.div_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.mod_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.div_str_pos_iff	40	1.11.1.0.1.0.1.3.1.0.0	search with cache (only 1: intros; only 1: split; only 1: intros Hab; only 1: destruct (lt_ge_cases a b) as [LT| LE]; only 1: rewrite <- Private_NZDiv.div_small_iff in LT; only 1: order; only 1: order; only 1: order; only 1: intros Hab; only 1: apply Private_NZDiv.div_str_pos; only 1: auto').	14.0663559437	15218
Coq.Numbers.Natural.Abstract.NDiv.div_lt	40
Coq.Numbers.Natural.Abstract.NDiv.div_le_mono	40
Coq.Numbers.Natural.Abstract.NDiv.mul_div_le	40	0.0.7.0	search with cache (only 1: intros; only 1: apply mul_div_le; only 1: auto'; only 1: auto').	0.0535719394684	49
Coq.Numbers.Natural.Abstract.NDiv.mul_succ_div_gt	40	0.0.0.2.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').	0.0377280712128	9
Coq.Numbers.Natural.Abstract.NDiv.div_exact	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0244770050049	4
Coq.Numbers.Natural.Abstract.NDiv.div_lt_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.div_le_upper_bound	40	0.0.1.0.0.1.0	search with cache (only 1: intros; only 1: rewrite <- (Private_NZDiv.div_mul q b); only 1: apply Private_NZDiv.div_le_mono; only 1: order; only 1: rewrite mul_comm; only 1: auto'; only 1: order).	0.0506510734558	21
Coq.Numbers.Natural.Abstract.NDiv.div_le_lower_bound	40	0.0.1.0.1.2.0	search with cache (only 1: intros; only 1: rewrite <- (Private_NZDiv.div_mul q b); only 1: apply Private_NZDiv.div_le_mono; only 1: order; only 1: rewrite mul_comm; only 1: auto'; only 1: order).	0.248608112335	127
Coq.Numbers.Natural.Abstract.NDiv.div_le_compat_l	40
Coq.Numbers.Natural.Abstract.NDiv.mod_add	40	2.0.0.0.2.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: apply mod_bound_pos; only 1: auto'; only 1: auto'; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.516410112381	356
Coq.Numbers.Natural.Abstract.NDiv.div_add	40	0.0.0.5.0	search with cache (only 1: intros; only 1: apply div_add; only 1: auto'; only 1: auto'; only 1: auto').	0.306313037872	106
Coq.Numbers.Natural.Abstract.NDiv.div_add_l	40	1.0.2.0	search with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: order).	0.0242669582367	7
Coq.Numbers.Natural.Abstract.NDiv.div_mul_cancel_r	40	0.0.0.5.0	search with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').	0.104686021805	25
Coq.Numbers.Natural.Abstract.NDiv.div_mul_cancel_l	40	2.3.3	search with cache (only 1: intros a b c; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r).	0.241313934326	99
Coq.Numbers.Natural.Abstract.NDiv.mul_mod_distr_r	40	2.1.0.2.0.1.1.2.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: order; only 1: intuition).	5.78918600082	1712
Coq.Numbers.Natural.Abstract.NDiv.mul_mod_distr_l	40	0.1.0.2.0.1.2.0	search with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: order; only 1: intuition).	1.39844894409	471
Coq.Numbers.Natural.Abstract.NDiv.mod_mod	40	1.12.0.0.0	search with cache (only 1: intros; only 1: destruct (mod_bound_pos a n); only 1: auto'; only 1: auto'; only 1: now rewrite Private_NZDiv.mod_small_iff).	0.504188776016	650
Coq.Numbers.Natural.Abstract.NDiv.mul_mod_idemp_l	40	0.0.0.8.0	search with cache (only 1: intros; only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.573502063751	216
Coq.Numbers.Natural.Abstract.NDiv.mul_mod_idemp_r	40	0.0.3.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).	0.0191550254822	7
Coq.Numbers.Natural.Abstract.NDiv.mul_mod	40	0.0.9.4.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	1.2131550312	720
Coq.Numbers.Natural.Abstract.NDiv.add_mod_idemp_l	40	0.0.0.4.0	search with cache (only 1: intros; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.170992851257	34
Coq.Numbers.Natural.Abstract.NDiv.add_mod_idemp_r	40	0.0.2.0	search with cache (only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).	0.0202848911285	6
Coq.Numbers.Natural.Abstract.NDiv.add_mod	40	0.0.5.2.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.564642906189	176
Coq.Numbers.Natural.Abstract.NDiv.div_div	40
Coq.Numbers.Natural.Abstract.NDiv.mod_mul_r	40	0.0.2.0.0.0.1	search with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: now apply div_mod).	0.0706090927124	14
Coq.Numbers.Natural.Abstract.NDiv.div_mul_le	40	1.0.0.1.0.1.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: order; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	0.152041196823	73
Coq.Numbers.Natural.Abstract.NDiv.mod_divides	40	0.0.0.0.1.0.0.0.1.0	search with cache (only 1: split; only 1: intros; only 1: exists (a / b); only 1: rewrite Private_NZDiv.div_exact; only 1: auto; only 1: order; only 1: intros (c, Hc); only 1: rewrite Hc, mul_comm; only 1: apply Private_NZDiv.mod_mul; only 1: order).	0.942502975464	265
Coq.Numbers.Natural.Abstract.NBase.neq_succ_0	40
Coq.Numbers.Natural.Abstract.NBase.neq_0_succ	40
Coq.Numbers.Natural.Abstract.NBase.le_0_l	40
Coq.Numbers.Natural.Abstract.NBase.induction	40
Coq.Numbers.Natural.Abstract.NBase.case_analysis	40	0.0.0.0.0.0.0	search with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).	0.0248630046844	7
Coq.Numbers.Natural.Abstract.NBase.neq_0	40	3.5	search with cache (only 1: intro n; only 1: now apply (neq_succ_diag_l 0)).	0.0130610466003	10
Coq.Numbers.Natural.Abstract.NBase.neq_0_r	40
Coq.Numbers.Natural.Abstract.NBase.zero_or_succ	40
Coq.Numbers.Natural.Abstract.NBase.eq_pred_0	40
Coq.Numbers.Natural.Abstract.NBase.succ_pred	40	1.0.0.1.0.1	search with cache (only 1: cases ltac:(n); only 1: rewrite pred_0; only 1: intro H; only 1: now elim H; only 1: intro n; only 1: now rewrite pred_succ).	0.107771873474	18
Coq.Numbers.Natural.Abstract.NBase.pred_inj	40
Coq.Numbers.Natural.Abstract.NBase.pair_induction	40
Coq.Numbers.Natural.Abstract.NBase.two_dim_induction	40
Coq.Numbers.Natural.Abstract.NBase.double_induction	40	0.8.9.0.1.3.0.0	search with cache (only 1: intros H1 H2 H3; only 1: induct ltac:(n); only 1: exact H1; only 1: intros n IH; only 1: induct ltac:(m); only 1: auto; only 1: intros; only 1: now apply H3).	17.3590710163	10478
Coq.Numbers.Natural.Abstract.NDefOps.if_zero_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.if_zero_0	40	2.0.0.0	search with cache (only 1: intros; only 1: unfold if_zero; only 1: rewrite recursion_0; only 1: auto).	0.0174331665039	6
Coq.Numbers.Natural.Abstract.NDefOps.if_zero_succ	40	0.2.4.2.0.0	search with cache (only 1: unfold if_zero; only 1: intros; only 1: rewrite recursion_succ; only 1: auto; only 1: auto; only 1: f_equiv').	0.505004882812	522
Coq.Numbers.Natural.Abstract.NDefOps.def_add_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.def_add_0_l	40	5.1.0	search with cache (only 1: unfold def_add; only 1: intros; only 1: now rewrite recursion_0).	0.0217308998108	12
Coq.Numbers.Natural.Abstract.NDefOps.def_add_succ_l	40
Coq.Numbers.Natural.Abstract.NDefOps.def_add_add	40
Coq.Numbers.Natural.Abstract.NDefOps.def_mul_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.def_mul_0_r	40	1.3.0	search with cache (only 1: unfold def_mul; only 1: intro y; only 1: now rewrite recursion_0).	0.0192248821259	7
Coq.Numbers.Natural.Abstract.NDefOps.def_mul_succ_r	40
Coq.Numbers.Natural.Abstract.NDefOps.def_mul_mul	40
Coq.Numbers.Natural.Abstract.NDefOps.ltb_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.ltb_base	40	0.2.1.1	search with cache (only 1: unfold ltb; only 1: intros; only 1: rewrite recursion_0; only 1: f_equiv').	1.02711200714	8
Coq.Numbers.Natural.Abstract.NDefOps.ltb_step	40
Coq.Numbers.Natural.Abstract.NDefOps.ltb_0	40
Coq.Numbers.Natural.Abstract.NDefOps.ltb_0_succ	40	6.7.6.0	search with cache (only 1: intro n; only 1: rewrite ltb_base; only 1: unfold if_zero; only 1: now rewrite recursion_succ).	1.94595098495	2430
Coq.Numbers.Natural.Abstract.NDefOps.succ_ltb_mono	40
Coq.Numbers.Natural.Abstract.NDefOps.ltb_lt	40
Coq.Numbers.Natural.Abstract.NDefOps.ltb_ge	40
Coq.Numbers.Natural.Abstract.NDefOps.even_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.even_0	40	1.15	search with cache (only 1: unfold even; only 1: now rewrite recursion_0).	0.0613970756531	127
Coq.Numbers.Natural.Abstract.NDefOps.even_succ	40	6.0.3	search with cache (only 1: intro n; only 1: unfold even; only 1: now rewrite recursion_succ).	0.156284093857	101
Coq.Numbers.Natural.Abstract.NDefOps.half_aux_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.half_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.half_aux_0	40	5.4	search with cache (only 1: compute in *; only 1: now rewrite recursion_0).	4.09076499939	84
Coq.Numbers.Natural.Abstract.NDefOps.half_aux_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.half_aux_spec	40
Coq.Numbers.Natural.Abstract.NDefOps.half_aux_spec2	40
Coq.Numbers.Natural.Abstract.NDefOps.half_0	40	4.0.0.0	search with cache (only 1: unfold half; only 1: rewrite half_aux_0; only 1: simpl; only 1: solve_proper).	0.0183320045471	8
Coq.Numbers.Natural.Abstract.NDefOps.half_1	40	4.0.0.0.1.0.4	search with cache (only 1: rewrite one_succ; only 1: unfold half; only 1: rewrite half_aux_succ; only 1: simpl; only 1: rewrite half_aux_0; only 1: simpl; only 1: solve_proper).	1.27011013031	864
Coq.Numbers.Natural.Abstract.NDefOps.half_double	40
Coq.Numbers.Natural.Abstract.NDefOps.half_upper_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.half_lower_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.half_nz	40
Coq.Numbers.Natural.Abstract.NDefOps.half_decrease	40
Coq.Numbers.Natural.Abstract.NDefOps.pow_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.pow_0	40	2.6.3	search with cache (only 1: unfold pow; only 1: intros; only 1: now rewrite recursion_0).	0.906486034393	353
Coq.Numbers.Natural.Abstract.NDefOps.pow_succ	40	0.4.1.2.0.0	search with cache (only 1: intros; only 1: unfold pow; only 1: rewrite recursion_succ; only 1: f_equiv'; only 1: auto with *; only 1: f_equiv').	23.4769058228	416
Coq.Numbers.Natural.Abstract.NDefOps.log_prewd	40
Coq.Numbers.Natural.Abstract.NDefOps.log_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.log_good_step	40
Coq.Numbers.Natural.Abstract.NDefOps.log_init	40
Coq.Numbers.Natural.Abstract.NDefOps.log_step	40
Coq.Numbers.Natural.Abstract.NDefOps.pow2_log	40
Coq.Numbers.Natural.Abstract.NMulOrder.square_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.square_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.mul_le_mono_l	40	1.1.1.3.2.3	search with cache (only 1: intros n m H1 H2; only 1: apply mul_le_mono_nonneg; only 1: apply le_0_l; only 1: solve_proper; only 1: apply le_0_l; only 1: trivial).	1.26679801941	1104
Coq.Numbers.Natural.Abstract.NMulOrder.mul_le_mono_r	40	1.0.1.2.4	search with cache (only 1: intros; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: trivial).	0.34098315239	280
Coq.Numbers.Natural.Abstract.NMulOrder.mul_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.mul_le_mono	40	3.1.1.4.3.3	search with cache (only 1: intros n m H1 H2; only 1: intro; only 1: apply mul_le_mono_nonneg; only 1: apply le_0_l; only 1: trivial; only 1: apply le_0_l).	2.54134178162	2083
Coq.Numbers.Natural.Abstract.NMulOrder.lt_0_mul'	40
Coq.Numbers.Natural.Abstract.NMulOrder.eq_mul_1	40
Coq.Numbers.Natural.Abstract.NBits.pow_sub_r	40
Coq.Numbers.Natural.Abstract.NBits.pow_div_l	40
Coq.Numbers.Natural.Abstract.NBits.b2n_proper	40	0.4	search with cache (only 1: intros a a' Ha; only 1: now rewrite ?Ha).	0.139201879501	87
Coq.Numbers.Natural.Abstract.NBits.exists_div2	40
Coq.Numbers.Natural.Abstract.NBits.testbit_0_r	40
Coq.Numbers.Natural.Abstract.NBits.testbit_succ_r	40
Coq.Numbers.Natural.Abstract.NBits.testbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.testbit_spec	40
Coq.Numbers.Natural.Abstract.NBits.testbit_true	40
Coq.Numbers.Natural.Abstract.NBits.testbit_false	40	0.0.1.0.0.0.0.2.0.0.0	search with cache (only 1: intros a n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: simpl; only 1: split; only 1: now try order'; only 1: now try order'; only 1: split; only 1: simpl; only 1: now try order'; only 1: split).	2.11653208733	1282
Coq.Numbers.Natural.Abstract.NBits.testbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.b2n_inj	40
Coq.Numbers.Natural.Abstract.NBits.add_b2n_double_div2	40
Coq.Numbers.Natural.Abstract.NBits.add_b2n_double_bit0	40
Coq.Numbers.Natural.Abstract.NBits.b2n_div2	40
Coq.Numbers.Natural.Abstract.NBits.b2n_bit0	40	0.0.0.0.16	search with cache (only 1: intros a0; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; order')).	0.336517095566	225
Coq.Numbers.Natural.Abstract.NBits.testbit_unique	40
Coq.Numbers.Natural.Abstract.NBits.bits_0	40	0.0.3.0.0.3.8	search with cache (only 1: intros a0; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: now nzsimpl; only 1: order'; only 1: order_nz).	0.501827955246	352
Coq.Numbers.Natural.Abstract.NBits.bit0_odd	40
Coq.Numbers.Natural.Abstract.NBits.bit0_eqb	40
Coq.Numbers.Natural.Abstract.NBits.bit0_mod	40	0.0.0.1.0.0.0.1.0	search with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).	0.218836069107	73
Coq.Numbers.Natural.Abstract.NBits.testbit_odd	40
Coq.Numbers.Natural.Abstract.NBits.bit_log2	40
Coq.Numbers.Natural.Abstract.NBits.bits_above_log2	40
Coq.Numbers.Natural.Abstract.NBits.div2_bits	40
Coq.Numbers.Natural.Abstract.NBits.div_pow2_bits	40
Coq.Numbers.Natural.Abstract.NBits.double_bits_succ	40	0.0	search with cache (only 1: intros; only 1: apply testbit_even_succ, le_0_l).	0.0091450214386	2
Coq.Numbers.Natural.Abstract.NBits.mul_pow2_bits_add	40
Coq.Numbers.Natural.Abstract.NBits.mul_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.mul_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.mod_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.mod_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.eqf_equiv	40
Coq.Numbers.Natural.Abstract.NBits.testbit_eqf	40	1.0.3.0.6.0.3	search with cache (only 1: repeat red; only 1: intros a Ha; only 1: intros; only 1: apply b2n_inj; only 1: rewrite H  at 1; only 1: rewrite testbit_spec' by trivial; only 1: f_equiv).	12.2078039646	6415
Coq.Numbers.Natural.Abstract.NBits.bits_inj_0	40
Coq.Numbers.Natural.Abstract.NBits.bits_inj	40
Coq.Numbers.Natural.Abstract.NBits.bits_inj_iff	40
Coq.Numbers.Natural.Abstract.NBits.are_bits	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_spec'	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_spec_high'	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_mul_pow2	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_spec_alt	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_wd	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_wd	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_shiftl_l	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_shiftl_r	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_1_l	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_0_r	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_0_r	40	0.1.3.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec'; only 1: now nzsimpl).	0.0338950157166	8
Coq.Numbers.Natural.Abstract.NBits.shiftl_0_l	40	12.0.0	search with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).	0.65402507782	355
Coq.Numbers.Natural.Abstract.NBits.shiftr_0_l	40	0.6.0.2.0	search with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: order_nz; only 1: order_nz).	0.369021892548	286
Coq.Numbers.Natural.Abstract.NBits.shiftl_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_eq_0	40	0.0.0.0.0.1	search with cache (only 1: intros; only 1: rewrite shiftr_div_pow2, div_small_iff by order_nz; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: trivial; only 1: trivial using le_0_l).	0.308583021164	99
Coq.Numbers.Natural.Abstract.NBits.div2_div	40
Coq.Numbers.Natural.Abstract.NBits.div2_wd	40	2.0.4.0.8	search with cache (only 1: intros a a' Ha; only 1: rewrite div2_spec, shiftr_div_pow2; only 1: rewrite div2_spec, shiftr_div_pow2; only 1: f_equiv; only 1: now rewrite ?Ha).	8.95058298111	5551
Coq.Numbers.Natural.Abstract.NBits.div2_odd	40
Coq.Numbers.Natural.Abstract.NBits.lxor_wd	40
Coq.Numbers.Natural.Abstract.NBits.land_wd	40	0.2.1	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0437450408936	18
Coq.Numbers.Natural.Abstract.NBits.lor_wd	40	0.2.1	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0583608150482	18
Coq.Numbers.Natural.Abstract.NBits.ldiff_wd	40	0.2.1	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0753538608551	18
Coq.Numbers.Natural.Abstract.NBits.lxor_eq	40
Coq.Numbers.Natural.Abstract.NBits.lxor_nilpotent	40
Coq.Numbers.Natural.Abstract.NBits.lxor_eq_0_iff	40	1.0.13.2.0.0.0.2.3.2	search with cache (only 1: intros a n; only 1: split; only 1: intros; only 1: bitwise; only 1: apply xorb_eq; only 1: now rewrite <- lxor_spec, H, bits_0; only 1: intros; only 1: rewrite H  at 1; only 1: bitwise; only 1: apply xorb_nilpotent).	37.1449759007	33857
Coq.Numbers.Natural.Abstract.NBits.lxor_0_l	40
Coq.Numbers.Natural.Abstract.NBits.lxor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0182368755341	3
Coq.Numbers.Natural.Abstract.NBits.lxor_comm	40
Coq.Numbers.Natural.Abstract.NBits.lxor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.lor_0_l	40	1.6.0.2.0.3.3	search with cache (only 1: intros; only 1: destruct (eq_decidable a 0) as [EQ| NEQ]; only 1: bitwise; only 1: now rewrite EQ, bits_0; only 1: bitwise; only 1: apply xorb_eq; only 1: apply xorb_nilpotent).	1.30333399773	1049
Coq.Numbers.Natural.Abstract.NBits.lor_0_r	40	2.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0469160079956	5
Coq.Numbers.Natural.Abstract.NBits.lor_comm	40
Coq.Numbers.Natural.Abstract.NBits.lor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.lor_diag	40
Coq.Numbers.Natural.Abstract.NBits.lor_eq_0_l	40
Coq.Numbers.Natural.Abstract.NBits.lor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.land_0_l	40	9.0.5	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.390326023102	246
Coq.Numbers.Natural.Abstract.NBits.land_0_r	40
Coq.Numbers.Natural.Abstract.NBits.land_comm	40
Coq.Numbers.Natural.Abstract.NBits.land_assoc	40
Coq.Numbers.Natural.Abstract.NBits.land_diag	40
Coq.Numbers.Natural.Abstract.NBits.ldiff_0_l	40	1.0.5	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0145909786224	9
Coq.Numbers.Natural.Abstract.NBits.ldiff_0_r	40	5.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply andb_comm).	0.0144331455231	8
Coq.Numbers.Natural.Abstract.NBits.ldiff_diag	40
Coq.Numbers.Natural.Abstract.NBits.lor_land_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.lor_land_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.land_lor_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.land_lor_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.ldiff_ldiff_l	40
Coq.Numbers.Natural.Abstract.NBits.lor_ldiff_and	40
Coq.Numbers.Natural.Abstract.NBits.land_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.setbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.clearbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.setbit_wd	40	0.0.4.1	search with cache (only 1: intros a a' Ha b b' Hb; only 1: unfold setbit; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.161701917648	34
Coq.Numbers.Natural.Abstract.NBits.clearbit_wd	40	0.0.4.2	search with cache (only 1: intros a a' Ha b b' Hb; only 1: unfold clearbit; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.235743045807	30
Coq.Numbers.Natural.Abstract.NBits.pow2_bits_true	40
Coq.Numbers.Natural.Abstract.NBits.pow2_bits_false	40
Coq.Numbers.Natural.Abstract.NBits.pow2_bits_eqb	40
Coq.Numbers.Natural.Abstract.NBits.setbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.setbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.setbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.setbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.clearbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.clearbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.clearbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.clearbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_lxor	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_lxor	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_land	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_land	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_lor	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_lor	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.ones_wd	40
Coq.Numbers.Natural.Abstract.NBits.lnot_wd	40
Coq.Numbers.Natural.Abstract.NBits.ones_equiv	40	0.1.23	search with cache (only 1: unfold ones; only 1: intros; only 1: now rewrite shiftl_mul_pow2, mul_1_l).	0.761219978333	841
Coq.Numbers.Natural.Abstract.NBits.ones_add	40
Coq.Numbers.Natural.Abstract.NBits.ones_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.ones_mod_pow2	40
Coq.Numbers.Natural.Abstract.NBits.ones_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.ones_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.ones_spec_iff	40
Coq.Numbers.Natural.Abstract.NBits.lnot_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.lnot_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.lnot_involutive	40
Coq.Numbers.Natural.Abstract.NBits.lnot_0_l	40	0.2.9.2	search with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_false_r).	2.56874799728	1083
Coq.Numbers.Natural.Abstract.NBits.lnot_ones	40	6.0.0	search with cache (only 1: intros; only 1: unfold lnot; only 1: apply lxor_nilpotent).	0.0117919445038	11
Coq.Numbers.Natural.Abstract.NBits.lor_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.land_ones	40
Coq.Numbers.Natural.Abstract.NBits.land_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.ldiff_ones_r	40
Coq.Numbers.Natural.Abstract.NBits.ldiff_ones_r_low	40
Coq.Numbers.Natural.Abstract.NBits.ldiff_ones_l_low	40
Coq.Numbers.Natural.Abstract.NBits.lor_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.lor_lnot_diag_low	40	0.0.1.1.0.0.1.0.0.1.0.0	search with cache (only 1: intros a n H; only 1: bitwise; only 1: destruct (le_gt_cases n m); only 1: rewrite ones_spec_high, lnot_spec_high, bits_above_log2; only 1: trivial; only 1: now apply lt_le_trans with n; only 1: trivial; only 1: trivial; only 1: rewrite lnot_spec_low, ones_spec_low; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial).	2.58323097229	2181
Coq.Numbers.Natural.Abstract.NBits.land_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.land_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.lnot_lor_low	40
Coq.Numbers.Natural.Abstract.NBits.lnot_land_low	40
Coq.Numbers.Natural.Abstract.NBits.ldiff_land_low	40
Coq.Numbers.Natural.Abstract.NBits.lnot_ldiff_low	40
Coq.Numbers.Natural.Abstract.NBits.lxor_lnot_lnot	40
Coq.Numbers.Natural.Abstract.NBits.lnot_lxor_l	40
Coq.Numbers.Natural.Abstract.NBits.lnot_lxor_r	40	0.0.8.7	search with cache (only 1: intros a n H; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_assoc_reverse).	9.03427195549	8492
Coq.Numbers.Natural.Abstract.NBits.lxor_lor	40
Coq.Numbers.Natural.Abstract.NBits.log2_bits_unique	40
Coq.Numbers.Natural.Abstract.NBits.log2_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.log2_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.log2_lor	40
Coq.Numbers.Natural.Abstract.NBits.log2_land	40
Coq.Numbers.Natural.Abstract.NBits.log2_lxor	40
Coq.Numbers.Natural.Abstract.NBits.add_bit0	40
Coq.Numbers.Natural.Abstract.NBits.add3_bit0	40
Coq.Numbers.Natural.Abstract.NBits.add3_bits_div2	40
Coq.Numbers.Natural.Abstract.NBits.add_carry_div2	40
Coq.Numbers.Natural.Abstract.NBits.add_carry_bits	40
Coq.Numbers.Natural.Abstract.NBits.add_bit1	40
Coq.Numbers.Natural.Abstract.NBits.nocarry_equiv	40
Coq.Numbers.Natural.Abstract.NBits.add_nocarry_lxor	40
Coq.Numbers.Natural.Abstract.NBits.ldiff_le	40
Coq.Numbers.Natural.Abstract.NBits.sub_nocarry_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.add_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.lnot_sub_low	40
Coq.Numbers.Natural.Abstract.NBits.add_nocarry_lt_pow2	40
Coq.Numbers.Natural.Abstract.NBits.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Natural.Abstract.NGcd.divide_add_cancel_r	40
Coq.Numbers.Natural.Abstract.NGcd.divide_sub_r	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_add_mult_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_add_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_sub_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.Bezout_wd	40
Coq.Numbers.Natural.Abstract.NGcd.bezout_1_gcd	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_bezout_pos_pos	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_bezout_pos	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_bezout	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NGcd.gauss	40
Coq.Numbers.Natural.Abstract.NGcd.divide_mul_split	40
Coq.Numbers.Natural.Abstract.NIso.natural_isomorphism_wd	40
Coq.Numbers.Natural.Abstract.NIso.natural_isomorphism_0	40
Coq.Numbers.Natural.Abstract.NIso.natural_isomorphism_succ	40
Coq.Numbers.Natural.Abstract.NIso.hom_nat_iso	40	0.0.1.0.0.0.0.11.3.0	search with cache (only 1: unfold natural_isomorphism; only 1: repeat red; only 1: intuition; only 1: now rewrite N1.recursion_0; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).	0.534858942032	812
Coq.Numbers.Natural.Abstract.NIso.inverse_nat_iso	40
Coq.Numbers.Natural.Abstract.NIso.iso_nat_iso	40
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_spec'	40
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_square	40	1.2.19	search with cache (only 1: intro n; only 1: apply sqrt_square; only 1: apply le_0_l).	1.15213298798	1486
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_le_square	40
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_lt_square	40	2.1.4.2.1.4.0.2	search with cache (only 1: intros n m; only 1: split; only 1: apply sqrt_lt_square; only 1: apply le_0_l; only 1: apply le_0_l; only 1: apply sqrt_lt_square; only 1: apply le_0_l; only 1: apply le_0_l).	17.1252560616	14952
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_le_lin	40
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_mul_above	40
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_succ_le	40
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_succ_or	40
Coq.Numbers.Natural.Abstract.NSqrt.add_sqrt_le	40
Coq.Numbers.Natural.Abstract.NAdd.eq_add_0	40
Coq.Numbers.Natural.Abstract.NAdd.eq_add_succ	40
Coq.Numbers.Natural.Abstract.NAdd.eq_add_1	40
Coq.Numbers.Natural.Abstract.NAdd.succ_add_discr	40
Coq.Numbers.Natural.Abstract.NAdd.add_pred_l	40	0.3.4.0.1.0.0.0.4	search with cache (only 1: intros n IH; only 1: cases n; only 1: intros H; only 1: exfalso; only 1: now apply H; only 1: intros n _; only 1: rewrite pred_succ; only 1: nzsimpl; only 1: solve_proper).	15.4132089615	14738
Coq.Numbers.Natural.Abstract.NAdd.add_pred_r	40
Coq.Numbers.Natural.Abstract.NParity.odd_pred	40
Coq.Numbers.Natural.Abstract.NParity.even_pred	40	2.2.4.1.0.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	2.60724711418	1616
Coq.Numbers.Natural.Abstract.NParity.even_sub	40
Coq.Numbers.Natural.Abstract.NParity.odd_sub	40
Coq.Numbers.Natural.Abstract.NAddOrder.le_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.lt_lt_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.lt_lt_add_l	40	1.0.1.0.11.3	search with cache (only 1: intros n m H1 H2; only 1: rewrite add_comm; only 1: rewrite <- (add_0_r n); only 1: apply add_lt_le_mono; only 1: trivial; only 1: now apply le_0_l).	11.4833569527	6653
Coq.Numbers.Natural.Abstract.NAddOrder.add_pos_l	40	5.19	search with cache (only 1: intros m H; only 1: apply lt_lt_add_r).	21.4480378628	10475
Coq.Numbers.Natural.Abstract.NAddOrder.add_pos_r	40	3.6.4.11.0	search with cache (only 1: intros n m H; only 1: rewrite add_comm; only 1: apply add_pos_nonneg; only 1: assumption; only 1: now apply le_0_l).	33.175330162	16609
Coq.Numbers.Natural.Abstract.NPow.pow_succ_r'	40	5.12.0.9	search with cache (only 1: intros n IH; only 1: nzsimpl; only 1: solve_proper; only 1: apply le_0_l).	6.36576199532	3212
Coq.Numbers.Natural.Abstract.NPow.pow_0_l	40	0.1.1.0.0	search with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: order; only 1: now apply pow_0_l).	0.0347330570221	7
Coq.Numbers.Natural.Abstract.NPow.pow_1_l	40	30.1.6.2	search with cache (only 1: intros; only 1: nzsimpl; only 1: order'; only 1: apply le_0_l).	4.57897996902	4506
Coq.Numbers.Natural.Abstract.NPow.pow_add_r	40
Coq.Numbers.Natural.Abstract.NPow.pow_mul_l	40	0.0.0.2.1.0.0.0.0.0.0.0.0.2.0	search with cache (only 1: intros a b c; only 1: destruct (lt_ge_cases c 0) as [Hc| Hc]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: now nzsimpl; only 1: apply le_ind with (4 := Hc); only 1: solve_proper; only 1: now nzsimpl; only 1: clear c Hc; only 1: intros c Hc IH; only 1: nzsimpl; only 1: rewrite IH; only 1: apply mul_shuffle1; only 1: trivial; only 1: trivial; only 1: trivial).	4.64643883705	1753
Coq.Numbers.Natural.Abstract.NPow.pow_mul_r	40
Coq.Numbers.Natural.Abstract.NPow.pow_eq_0	40
Coq.Numbers.Natural.Abstract.NPow.pow_nonzero	40	0.0.4.7.2.8.0	search with cache (only 1: intros a b Ha Hb; only 1: contradict Ha; only 1: apply Private_NZPow.pow_eq_0 with b; only 1: intros H; only 1: rewrite H, pow_0_r in Hb; only 1: order'; only 1: trivial).	4.05299186707	6322
Coq.Numbers.Natural.Abstract.NPow.pow_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NPow.pow_lt_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.pow_le_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.pow_gt_1	40	0.2.0.0.3	search with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: order; only 1: trivial).	0.0591399669647	22
Coq.Numbers.Natural.Abstract.NPow.pow_lt_mono_r	40	5.2.0.9.0	search with cache (only 1: intros a b Ha Hb; only 1: apply pow_lt_mono_r; only 1: trivial; only 1: clear b Hb; only 1: apply le_0_l).	4.05733680725	2458
Coq.Numbers.Natural.Abstract.NPow.pow_le_mono_r	40	1.15.11.2	search with cache (only 1: intros; only 1: apply pow_le_mono_r; only 1: auto'; only 1: trivial).	16.1980288029	10701
Coq.Numbers.Natural.Abstract.NPow.pow_le_mono	40	0.1.0.6.1.0.3	search with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: intuition order).	2.41142106056	1936
Coq.Numbers.Natural.Abstract.NPow.pow_inj_l	40	0.3.0.0.1.5.2	search with cache (only 1: intros; only 1: destruct (lt_trichotomy a b) as [LT| [EQ'| GT]]; only 1: assert (a ^ c < b ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order; only 1: trivial; only 1: assert (b ^ c < a ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order).	0.883775949478	888
Coq.Numbers.Natural.Abstract.NPow.pow_inj_r	40	0.1.0.0.2.4.4	search with cache (only 1: intros a b c Ha Hc; only 1: destruct (lt_trichotomy b c) as [LT| [EQ'| GT]]; only 1: assert (a ^ b < a ^ c) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order).	0.952917098999	805
Coq.Numbers.Natural.Abstract.NPow.pow_lt_mono_l_iff	40	0.0.1.5.0.0.1.16.0.0.4	search with cache (only 1: intros; only 1: split; only 1: intro LT; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: order; only 1: eauto; only 1: intro LT; only 1: destruct (le_gt_cases b a) as [LE| GT]; only 1: assert (b ^ c <= a ^ c) by (apply Private_NZPow.pow_le_mono_l; try split; order); only 1: order; only 1: trivial).	9.52151489258	14661
Coq.Numbers.Natural.Abstract.NPow.pow_le_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.pow_lt_mono_r_iff	40	0.0.2.1.0.1.0.0.8	search with cache (only 1: intros; only 1: split; only 1: intro LT; only 1: now apply Private_NZPow.pow_lt_mono_r; only 1: intro LT; only 1: destruct (le_gt_cases c b) as [LE| GT]; only 1: assert (a ^ c <= a ^ b) by (apply Private_NZPow.pow_le_mono_r; order'); only 1: order; only 1: trivial).	5.49323296547	5528
Coq.Numbers.Natural.Abstract.NPow.pow_le_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.pow_gt_lin_r	40
Coq.Numbers.Natural.Abstract.NPow.pow_add_lower	40
Coq.Numbers.Natural.Abstract.NPow.pow_add_upper	40
Coq.Numbers.Natural.Abstract.NPow.even_pow	40
Coq.Numbers.Natural.Abstract.NPow.odd_pow	40
Coq.Numbers.Natural.Abstract.NMaxMin.max_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.max_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.min_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.min_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.succ_max_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.succ_min_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.add_max_distr_l	40	1.0.1.0.1.0.1.1.1.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now apply add_cancel_l; only 1: now rewrite <- ?succ_le_mono; only 1: now apply add_le_mono_l; only 1: rewrite 2!max_l; only 1: now apply add_cancel_l; only 1: now rewrite <- ?succ_le_mono; only 1: now apply add_le_mono_l).	11.5585920811	1595
Coq.Numbers.Natural.Abstract.NMaxMin.add_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.add_min_distr_l	40	0.0.0.1.0.0.0.0.2.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?succ_le_mono; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?succ_le_mono; only 1: now rewrite <- ?add_le_mono_l).	2.089812994	655
Coq.Numbers.Natural.Abstract.NMaxMin.add_min_distr_r	40	1.0.2.1.1.0.2.0.2.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?succ_le_mono; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?succ_le_mono; only 1: now rewrite <- ?add_le_mono_r).	11.724640131	3611
Coq.Numbers.Natural.Abstract.NMaxMin.mul_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.mul_max_distr_r	40	0.0.1.0.0.0.0.0.1.0.1.1.1.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: now rewrite <- ?succ_le_mono; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?succ_le_mono; only 1: rewrite 2!max_l; only 1: order; only 1: now rewrite <- ?succ_le_mono; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?succ_le_mono).	8.9349629879	6312
Coq.Numbers.Natural.Abstract.NMaxMin.mul_min_distr_l	40	3.0.1.1.3.0.0.0.2.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?succ_le_mono; only 1: now apply mul_le_mono_l; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?succ_le_mono; only 1: now apply mul_le_mono_l).	11.9820101261	7685
Coq.Numbers.Natural.Abstract.NMaxMin.mul_min_distr_r	40	0.0.3.1.0.0.2.0.2.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?succ_le_mono; only 1: now apply mul_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?succ_le_mono; only 1: now apply mul_le_mono_r).	4.38221001625	2873
Coq.Numbers.Natural.Abstract.NMaxMin.sub_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.sub_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.sub_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.sub_min_distr_r	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec_alt	40	0.2	search with cache (only 1: intros; only 1: auto).	0.00701498985291	4
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec0_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec0_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec0_succ	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec_0	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite !strong_rec_alt; only 1: unfold strong_rec0; only 1: f_equiv; only 1: rewrite recursion_succ; only 1: f_equiv'; only 1: rewrite recursion_0; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').	0.0614597797394	10
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec0_more_steps	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec0_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec_fixpoint	40	0.0.1.2.0.0.0.0.1.2.0.2.0	search with cache (only 1: intros; only 1: rewrite strong_rec_alt, strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: symmetry; only 1: setoid_replace n with (S m + (n - S m)); only 1: apply strong_rec0_more_steps; only 1: apply lt_succ_diag_r; only 1: rewrite add_comm; only 1: symmetry; only 1: apply sub_add; only 1: rewrite le_succ_l; only 1: auto).	10.1700088978	6507
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec_0_any	40	0.1.0.1.1.0	search with cache (only 1: intros; only 1: rewrite strong_rec_alt; only 1: rewrite strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).	0.0186250209808	9
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec_any_fst_arg	40
Coq.Numbers.Natural.Abstract.NLcm.mod_divide	40
Coq.Numbers.Natural.Abstract.NLcm.divide_div_mul_exact	40
Coq.Numbers.Natural.Abstract.NLcm.gcd_div_factor	40
Coq.Numbers.Natural.Abstract.NLcm.gcd_div_gcd	40
Coq.Numbers.Natural.Abstract.NLcm.gcd_mod	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_wd	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_equiv1	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_equiv2	40
Coq.Numbers.Natural.Abstract.NLcm.gcd_div_swap	40
Coq.Numbers.Natural.Abstract.NLcm.divide_lcm_l	40	2.1.9	search with cache (only 1: intros n; only 1: intros; only 1: now apply divide_mul_l).	0.636804819107	400
Coq.Numbers.Natural.Abstract.NLcm.divide_lcm_r	40
Coq.Numbers.Natural.Abstract.NLcm.divide_div	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_least	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_comm	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_divide_iff	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_unique	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_unique_alt	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_assoc	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_0_l	40	0.6.3	search with cache (only 1: intros; only 1: unfold lcm; only 1: now nzsimpl).	0.110909938812	101
Coq.Numbers.Natural.Abstract.NLcm.lcm_0_r	40	0.0.1.0.1.5.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: exists 0; only 1: now nzsimpl; only 1: trivial).	0.40598487854	353
Coq.Numbers.Natural.Abstract.NLcm.lcm_1_l	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_1_r	40	0.0.0.1.22.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: exists n; only 1: now nzsimpl; only 1: intros p Hn Hm; only 1: trivial).	18.4772231579	21811
Coq.Numbers.Natural.Abstract.NLcm.lcm_diag	40	2.9.4.0	search with cache (only 1: intros; only 1: apply divide_antisym; only 1: now apply lcm_least; only 1: trivial using divide_lcm_l).	1.13482880592	1347
Coq.Numbers.Natural.Abstract.NLcm.lcm_eq_0	40
Coq.Numbers.Natural.Abstract.NLcm.divide_lcm_eq_r	40	0.3.1.2	search with cache (only 1: intros; only 1: apply divide_antisym; only 1: now apply lcm_least; only 1: apply divide_lcm_r).	0.029983997345	16
Coq.Numbers.Natural.Abstract.NLcm.divide_lcm_iff	40	1.2.0.0.3.2.0.0.1	search with cache (only 1: intros; only 1: split; only 1: intros EQ; only 1: apply divide_antisym; only 1: now apply lcm_least; only 1: apply divide_lcm_r; only 1: intros EQ; only 1: rewrite <- EQ; only 1: trivial using divide_lcm_l).	2.20977377892	2067
Coq.Numbers.Natural.Abstract.NLcm.lcm_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NLcm.gcd_1_lcm_mul	40
Coq.Numbers.Natural.Abstract.NSub.sub_0_l	40
Coq.Numbers.Natural.Abstract.NSub.sub_succ	40
Coq.Numbers.Natural.Abstract.NSub.sub_diag	40
Coq.Numbers.Natural.Abstract.NSub.sub_gt	40
Coq.Numbers.Natural.Abstract.NSub.add_sub_assoc	40
Coq.Numbers.Natural.Abstract.NSub.sub_succ_l	40
Coq.Numbers.Natural.Abstract.NSub.add_sub	40	7.8.3.22.2	search with cache (only 1: induct ltac:(m); only 1: now nzsimpl; only 1: intros m IH; only 1: rewrite add_succ_r; only 1: now rewrite sub_succ).	34.6792349815	46051
Coq.Numbers.Natural.Abstract.NSub.sub_add	40
Coq.Numbers.Natural.Abstract.NSub.add_sub_eq_l	40
Coq.Numbers.Natural.Abstract.NSub.add_sub_eq_r	40
Coq.Numbers.Natural.Abstract.NSub.add_sub_eq_nz	40
Coq.Numbers.Natural.Abstract.NSub.sub_add_distr	40
Coq.Numbers.Natural.Abstract.NSub.add_sub_swap	40	0.5.1.5.1.2	search with cache (only 1: intros n m H; only 1: intro; only 1: rewrite add_comm; only 1: symmetry; only 1: rewrite add_comm; only 1: now apply add_sub_assoc).	17.3341419697	11066
Coq.Numbers.Natural.Abstract.NSub.le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.sub_0_le	40
Coq.Numbers.Natural.Abstract.NSub.sub_add_le	40
Coq.Numbers.Natural.Abstract.NSub.le_sub_le_add_r	40
Coq.Numbers.Natural.Abstract.NSub.le_sub_le_add_l	40
Coq.Numbers.Natural.Abstract.NSub.lt_sub_lt_add_r	40
Coq.Numbers.Natural.Abstract.NSub.lt_sub_lt_add_l	40
Coq.Numbers.Natural.Abstract.NSub.le_add_le_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.le_add_le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.lt_add_lt_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.lt_add_lt_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.sub_lt	40
Coq.Numbers.Natural.Abstract.NSub.sub_le_mono_r	40
Coq.Numbers.Natural.Abstract.NSub.sub_le_mono_l	40
Coq.Numbers.Natural.Abstract.NSub.mul_pred_r	40
Coq.Numbers.Natural.Abstract.NSub.mul_sub_distr_r	40
Coq.Numbers.Natural.Abstract.NSub.mul_sub_distr_l	40
Coq.Numbers.Natural.Abstract.NSub.le_equiv	40
Coq.Numbers.Natural.Abstract.NSub.lt_equiv	40
Coq.Numbers.Natural.Abstract.NSub.le_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.lt_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.le_alt_dichotomy	40
Coq.Numbers.Natural.Abstract.NSub.add_dichotomy	40
Coq.Numbers.DecimalZ.of_to	40
Coq.Numbers.DecimalZ.to_of	40
Coq.Numbers.DecimalZ.to_int_inj	40
Coq.Numbers.DecimalZ.to_int_surj	40
Coq.Numbers.DecimalZ.of_int_norm	40
Coq.Numbers.DecimalZ.of_inj	40
Coq.Numbers.DecimalZ.of_iff	40
Coq.Numbers.NatInt.NZSqrt.sqrt_spec_nonneg	40
Coq.Numbers.NatInt.NZSqrt.sqrt_nonneg	40
Coq.Numbers.NatInt.NZSqrt.sqrt_unique	40
Coq.Numbers.NatInt.NZSqrt.sqrt_wd	40
Coq.Numbers.NatInt.NZSqrt.sqrt_spec_alt	40
Coq.Numbers.NatInt.NZSqrt.sqrt_unique'	40
Coq.Numbers.NatInt.NZSqrt.sqrt_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_pred_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_le_mono	40
Coq.Numbers.NatInt.NZSqrt.sqrt_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.sqrt_le_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_lt_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_0	40	0.15.4	search with cache (only 1: apply sqrt_unique' with 0; only 1: now nzsimpl'; only 1: now nzsimpl).	0.494155168533	491
Coq.Numbers.NatInt.NZSqrt.sqrt_1	40
Coq.Numbers.NatInt.NZSqrt.sqrt_2	40
Coq.Numbers.NatInt.NZSqrt.sqrt_pos	40
Coq.Numbers.NatInt.NZSqrt.sqrt_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.sqrt_le_lin	40
Coq.Numbers.NatInt.NZSqrt.sqrt_mul_below	40
Coq.Numbers.NatInt.NZSqrt.sqrt_mul_above	40
Coq.Numbers.NatInt.NZSqrt.sqrt_succ_le	40
Coq.Numbers.NatInt.NZSqrt.sqrt_succ_or	40
Coq.Numbers.NatInt.NZSqrt.sqrt_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_add_le	40
Coq.Numbers.NatInt.NZSqrt.add_sqrt_le	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_eqn0	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_eqn	40	0.0.0.0.3.0	search with cache (only 1: intros a Ha; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.0313029289246	9
Coq.Numbers.NatInt.NZSqrt.sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_nonneg	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_wd	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_unique	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_succ_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_0	40	0.0.0.0.1	search with cache (only 1: unfold sqrt_up; only 1: case compare_spec; only 1: tauto; only 1: order; only 1: order).	0.019758939743	6
Coq.Numbers.NatInt.NZSqrt.sqrt_up_1	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_2	40
Coq.Numbers.NatInt.NZSqrt.le_sqrt_sqrt_up	40
Coq.Numbers.NatInt.NZSqrt.le_sqrt_up_succ_sqrt	40
Coq.Numbers.NatInt.NZSqrt.sqrt_sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.sqrt_sqrt_up_exact	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_le_mono	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_lt_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_le_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_pos	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_le_lin	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_mul_above	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_mul_below	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_succ_le	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_succ_or	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_add_le	40
Coq.Numbers.NatInt.NZSqrt.add_sqrt_up_le	40
Coq.Numbers.NatInt.NZDiv.div_mod_unique	40
Coq.Numbers.NatInt.NZDiv.div_unique	40
Coq.Numbers.NatInt.NZDiv.mod_unique	40	0.0.0.1.0.0.1.0.4.0	search with cache (only 1: intros a b q r Ha (Hb, Hr) EQ; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: apply mod_bound_pos; only 1: order; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).	3.13891100883	1776
Coq.Numbers.NatInt.NZDiv.div_unique_exact	40
Coq.Numbers.NatInt.NZDiv.div_same	40
Coq.Numbers.NatInt.NZDiv.mod_same	40
Coq.Numbers.NatInt.NZDiv.div_small	40
Coq.Numbers.NatInt.NZDiv.mod_small	40
Coq.Numbers.NatInt.NZDiv.div_0_l	40	1.0.0.3.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: order; only 1: intuition; only 1: now nzsimpl).	0.215220928192	122
Coq.Numbers.NatInt.NZDiv.mod_0_l	40	1.0.0.2.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with 0; only 1: order; only 1: intuition; only 1: now nzsimpl).	0.137562036514	58
Coq.Numbers.NatInt.NZDiv.div_1_r	40	1.0.3.2.0.1.0.1	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: order; only 1: intuition; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: now nzsimpl).	1.83181810379	1544
Coq.Numbers.NatInt.NZDiv.mod_1_r	40
Coq.Numbers.NatInt.NZDiv.div_1_l	40	6.0.2.0	search with cache (only 1: intros; only 1: apply div_small; only 1: intuition; only 1: apply lt_le_incl, lt_0_1).	0.253990888596	266
Coq.Numbers.NatInt.NZDiv.mod_1_l	40	0.0.0.4.0	search with cache (only 1: intros; only 1: apply mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0727958679199	65
Coq.Numbers.NatInt.NZDiv.div_mul	40
Coq.Numbers.NatInt.NZDiv.mod_mul	40
Coq.Numbers.NatInt.NZDiv.mod_le	40
Coq.Numbers.NatInt.NZDiv.div_pos	40
Coq.Numbers.NatInt.NZDiv.div_str_pos	40
Coq.Numbers.NatInt.NZDiv.div_small_iff	40
Coq.Numbers.NatInt.NZDiv.mod_small_iff	40	1.0.0.2.3.2.0.0.4.2.0	search with cache (only 1: intros; only 1: split; only 1: destruct (mod_bound_pos a b); only 1: order; only 1: trivial; only 1: order; only 1: symmetry; only 1: apply mod_unique with 0; only 1: auto; only 1: auto; only 1: now nzsimpl).	18.4561049938	17602
Coq.Numbers.NatInt.NZDiv.div_str_pos_iff	40
Coq.Numbers.NatInt.NZDiv.div_lt	40
Coq.Numbers.NatInt.NZDiv.div_le_mono	40
Coq.Numbers.NatInt.NZDiv.mul_div_le	40
Coq.Numbers.NatInt.NZDiv.mul_succ_div_gt	40
Coq.Numbers.NatInt.NZDiv.div_exact	40
Coq.Numbers.NatInt.NZDiv.div_lt_upper_bound	40
Coq.Numbers.NatInt.NZDiv.div_le_upper_bound	40
Coq.Numbers.NatInt.NZDiv.div_le_lower_bound	40
Coq.Numbers.NatInt.NZDiv.div_le_compat_l	40
Coq.Numbers.NatInt.NZDiv.mod_add	40
Coq.Numbers.NatInt.NZDiv.div_add	40
Coq.Numbers.NatInt.NZDiv.div_add_l	40
Coq.Numbers.NatInt.NZDiv.div_mul_cancel_r	40
Coq.Numbers.NatInt.NZDiv.div_mul_cancel_l	40
Coq.Numbers.NatInt.NZDiv.mul_mod_distr_l	40
Coq.Numbers.NatInt.NZDiv.mul_mod_distr_r	40
Coq.Numbers.NatInt.NZDiv.mod_mod	40	0.0.1.8.0	search with cache (only 1: intros a b Ha Hb; only 1: apply mod_small; only 1: apply mod_bound_pos; only 1: order; only 1: trivial).	0.406509160995	334
Coq.Numbers.NatInt.NZDiv.mul_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.mul_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.mul_mod	40
Coq.Numbers.NatInt.NZDiv.add_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.add_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.add_mod	40
Coq.Numbers.NatInt.NZDiv.div_div	40
Coq.Numbers.NatInt.NZDiv.mod_mul_r	40
Coq.Numbers.NatInt.NZDiv.div_mul_le	40
Coq.Numbers.NatInt.NZDiv.mod_divides	40
Coq.Numbers.NatInt.NZAdd.add_0_r	40
Coq.Numbers.NatInt.NZAdd.add_succ_r	40	0.1.0.0.1.7.0.0	search with cache (only 1: intro; only 1: intro; only 1: nzinduct n; only 1: nzsimpl; only 1: now rewrite succ_inj_wd; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	2.15714693069	1252
Coq.Numbers.NatInt.NZAdd.add_succ_comm	40	0.0.0.0.1.0.0	search with cache (only 1: intros n m; only 1: nzsimpl; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.108192920685	8
Coq.Numbers.NatInt.NZAdd.add_comm	40	0.0.0.0.2.0	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.102787971497	8
Coq.Numbers.NatInt.NZAdd.add_1_l	40
Coq.Numbers.NatInt.NZAdd.add_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0341730117798	2
Coq.Numbers.NatInt.NZAdd.add_assoc	40	0.0.0.0.2.0.0.0	search with cache (only 1: intro n; only 1: intro; only 1: intro; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0950860977173	10
Coq.Numbers.NatInt.NZAdd.add_cancel_l	40
Coq.Numbers.NatInt.NZAdd.add_cancel_r	40	0.0.0.0.1.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0990509986877	7
Coq.Numbers.NatInt.NZAdd.add_shuffle0	40	0.0.0.0.4.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.181580066681	19
Coq.Numbers.NatInt.NZAdd.add_shuffle1	40	0.0.0.0.3.5.0.0	search with cache (only 1: intros n m p; only 1: intro; only 1: nzinduct p; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	9.73823595047	3254
Coq.Numbers.NatInt.NZAdd.add_shuffle2	40	0.0.0.2.6.7.0	search with cache (only 1: intros n m p q; only 1: nzinduct p; only 1: nzsimpl; only 1: apply add_shuffle0; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	21.9015729427	9302
Coq.Numbers.NatInt.NZAdd.add_shuffle3	40	0.0.0.0.3.1	search with cache (only 1: intros n m p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.125574827194	10
Coq.Numbers.NatInt.NZAdd.sub_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0363991260529	2
Coq.Numbers.NatInt.NZOrder.le_wd	40
Coq.Numbers.NatInt.NZOrder.lt_le_incl	40
Coq.Numbers.NatInt.NZOrder.le_refl	40	30.0.0	search with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: intuition).	6.1522769928	6365
Coq.Numbers.NatInt.NZOrder.lt_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.le_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.neq_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.neq_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.nlt_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.nle_succ_diag_l	40	2.1.0.3	search with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: tauto).	0.043242931366	35
Coq.Numbers.NatInt.NZOrder.le_succ_l	40
Coq.Numbers.NatInt.NZOrder.le_gt_cases	40
Coq.Numbers.NatInt.NZOrder.lt_trichotomy	40
Coq.Numbers.NatInt.NZOrder.lt_asymm	40
Coq.Numbers.NatInt.NZOrder.lt_trans	40
Coq.Numbers.NatInt.NZOrder.le_trans	40
Coq.Numbers.NatInt.NZOrder.lt_strorder	40	4.0.7.0.0.0.1.1.1.5.0.0	search with cache (only 1: split; only 1: compute; only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: false_hyp H lt_irrefl; only 1: intro n; only 1: intro m; only 1: intro p; only 1: generalize (lt_trans n m p); only 1: intros H H1 H2; only 1: now apply H).	30.0043039322	33307
Coq.Numbers.NatInt.NZOrder.le_preorder	40
Coq.Numbers.NatInt.NZOrder.le_partialorder	40
Coq.Numbers.NatInt.NZOrder.lt_neq	40	3.2.0.6	search with cache (only 1: intros n H; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl).	1.28039288521	766
Coq.Numbers.NatInt.NZOrder.le_neq	40
Coq.Numbers.NatInt.NZOrder.eq_le_incl	40	1.1.1	search with cache (only 1: intros x y; only 1: intro EQ; only 1: now rewrite EQ).	0.0501530170441	15
Coq.Numbers.NatInt.NZOrder.lt_stepl	40	0.1	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.150576114655	50
Coq.Numbers.NatInt.NZOrder.lt_stepr	40	1.1	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.157248020172	52
Coq.Numbers.NatInt.NZOrder.le_stepl	40	0.3.0	search with cache (only 1: intros x y z; only 1: rewrite 2!lt_eq_cases; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0984349250793	13
Coq.Numbers.NatInt.NZOrder.le_stepr	40	0.3.0	search with cache (only 1: intros x y z; only 1: rewrite 2!lt_eq_cases; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0640079975128	13
Coq.Numbers.NatInt.NZOrder.le_lt_trans	40	7	search with cache (only 1: intuition order).	0.167418003082	127
Coq.Numbers.NatInt.NZOrder.lt_le_trans	40	7	search with cache (only 1: order).	0.190948009491	123
Coq.Numbers.NatInt.NZOrder.le_antisymm	40	2	search with cache (only 1: order).	0.0663058757782	40
Coq.Numbers.NatInt.NZOrder.le_succ_r	40
Coq.Numbers.NatInt.NZOrder.lt_succ_l	40	0.1.1.2	search with cache (only 1: intros n H; only 1: intro m; only 1: apply le_succ_l; only 1: now apply lt_le_incl).	0.0751588344574	71
Coq.Numbers.NatInt.NZOrder.le_le_succ_r	40	6.2.6	search with cache (only 1: intros n m H; only 1: apply lt_le_incl; only 1: now rewrite lt_succ_r).	4.39705395699	2996
Coq.Numbers.NatInt.NZOrder.lt_lt_succ_r	40	0.1.4.1	search with cache (only 1: intro m; only 1: intros n H; only 1: rewrite lt_succ_r; only 1: now apply lt_le_incl).	0.139530181885	57
Coq.Numbers.NatInt.NZOrder.succ_lt_mono	40	0.0.20.0.0	search with cache (only 1: intro m; only 1: intro n; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).	7.6479549408	7217
Coq.Numbers.NatInt.NZOrder.succ_le_mono	40	4.3.0.1.0.0	search with cache (only 1: intro n; only 1: intro m; only 1: symmetry; only 1: rewrite lt_eq_cases; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: now rewrite succ_inj_wd).	3.19462680817	1686
Coq.Numbers.NatInt.NZOrder.lt_0_1	40
Coq.Numbers.NatInt.NZOrder.le_0_1	40	0.18.0	search with cache (only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.272657155991	350
Coq.Numbers.NatInt.NZOrder.lt_1_2	40
Coq.Numbers.NatInt.NZOrder.lt_0_2	40	0.15.0	search with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl, lt_0_1).	0.298563957214	325
Coq.Numbers.NatInt.NZOrder.le_0_2	40	0.19.1.0.1	search with cache (only 1: transitivity 1; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite two_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	1.92151117325	3700
Coq.Numbers.NatInt.NZOrder.lt_1_l	40
Coq.Numbers.NatInt.NZOrder.lt_ge_cases	40	2.0.1.1.1	search with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intuition).	0.0802900791168	21
Coq.Numbers.NatInt.NZOrder.le_ge_cases	40	0.0.1.0.2.1	search with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: tauto).	0.0637140274048	19
Coq.Numbers.NatInt.NZOrder.lt_gt_cases	40	5.5.0	search with cache (only 1: intros; only 1: generalize (le_gt_cases n m); only 1: intuition order).	0.730459213257	202
Coq.Numbers.NatInt.NZOrder.eq_decidable	40
Coq.Numbers.NatInt.NZOrder.eq_dne	40	0.0.0.0	search with cache (only 1: intros; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.0336859226227	4
Coq.Numbers.NatInt.NZOrder.le_ngt	40	6.0.1	search with cache (only 1: intro n; only 1: intro m; only 1: intuition order).	0.0343549251556	13
Coq.Numbers.NatInt.NZOrder.nlt_ge	40	0	search with cache (only 1: intuition order).	0.0163979530334	1
Coq.Numbers.NatInt.NZOrder.lt_decidable	40
Coq.Numbers.NatInt.NZOrder.lt_dne	40	0.0.0.1	search with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.0433170795441	5
Coq.Numbers.NatInt.NZOrder.nle_gt	40	0	search with cache (only 1: intuition order).	0.0178079605103	1
Coq.Numbers.NatInt.NZOrder.lt_nge	40	0	search with cache (only 1: intuition order).	0.0168750286102	1
Coq.Numbers.NatInt.NZOrder.le_decidable	40	0.0.6.1.15	search with cache (only 1: compute; only 1: intros n m; only 1: destruct (le_gt_cases n m); only 1: intuition order; only 1: intuition order).	14.8488910198	3856
Coq.Numbers.NatInt.NZOrder.le_dne	40	0.0.0.1.1	search with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.0884311199188	7
Coq.Numbers.NatInt.NZOrder.nlt_succ_r	40	0.0.0.0.2.0.3.2	search with cache (only 1: intro m; only 1: split; only 1: intro n; only 1: apply le_succ_l; only 1: order; only 1: intro n; only 1: rewrite lt_succ_r; only 1: order).	2.35927200317	1945
Coq.Numbers.NatInt.NZOrder.lt_exists_pred_strong	40
Coq.Numbers.NatInt.NZOrder.lt_exists_pred	40
Coq.Numbers.NatInt.NZOrder.lt_succ_pred	40
Coq.Numbers.NatInt.NZOrder.rs_rs'	40
Coq.Numbers.NatInt.NZOrder.rs'_rs''	40
Coq.Numbers.NatInt.NZOrder.rbase	40
Coq.Numbers.NatInt.NZOrder.A'A_right	40
Coq.Numbers.NatInt.NZOrder.strong_right_induction	40
Coq.Numbers.NatInt.NZOrder.right_induction	40
Coq.Numbers.NatInt.NZOrder.right_induction'	40
Coq.Numbers.NatInt.NZOrder.strong_right_induction'	40
Coq.Numbers.NatInt.NZOrder.ls_ls'	40
Coq.Numbers.NatInt.NZOrder.ls'_ls''	40
Coq.Numbers.NatInt.NZOrder.lbase	40
Coq.Numbers.NatInt.NZOrder.A'A_left	40
Coq.Numbers.NatInt.NZOrder.strong_left_induction	40
Coq.Numbers.NatInt.NZOrder.left_induction	40
Coq.Numbers.NatInt.NZOrder.left_induction'	40
Coq.Numbers.NatInt.NZOrder.strong_left_induction'	40
Coq.Numbers.NatInt.NZOrder.order_induction	40
Coq.Numbers.NatInt.NZOrder.order_induction'	40
Coq.Numbers.NatInt.NZOrder.lt_ind	40
Coq.Numbers.NatInt.NZOrder.le_ind	40	0.9.4.1	search with cache (only 1: intros Az AS AP n; only 1: apply right_induction; only 1: trivial; only 1: assumption).	0.931947946548	918
Coq.Numbers.NatInt.NZOrder.Rlt_wd	40
Coq.Numbers.NatInt.NZOrder.Rgt_wd	40
Coq.Numbers.NatInt.NZOrder.lt_wf	40
Coq.Numbers.NatInt.NZOrder.gt_wf	40
Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40	0.5.0.4.5.8	search with cache (only 1: intro m; only 1: intros P H0 HS; only 1: induction n; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	29.5524849892	2008
Coq.Numbers.NatInt.NZDomain.itersucc_or_itersucc	40
Coq.Numbers.NatInt.NZDomain.succ_swap_pred	40
Coq.Numbers.NatInt.NZDomain.itersucc_or_iterpred	40
Coq.Numbers.NatInt.NZDomain.itersucc0_or_iterpred0	40
Coq.Numbers.NatInt.NZDomain.initial_alt	40
Coq.Numbers.NatInt.NZDomain.initial_alt2	40
Coq.Numbers.NatInt.NZDomain.initial_unique	40
Coq.Numbers.NatInt.NZDomain.initial_ancestor	40
Coq.Numbers.NatInt.NZDomain.succ_pred_approx	40
Coq.Numbers.NatInt.NZDomain.succ_onto_gives_succ_pred	40
Coq.Numbers.NatInt.NZDomain.succ_onto_pred_injective	40
Coq.Numbers.NatInt.NZDomain.bi_induction_pred	40
Coq.Numbers.NatInt.NZDomain.central_induction_pred	40
Coq.Numbers.NatInt.NZDomain.ofnat_zero	40	8	search with cache (only 1: solve_proper).	0.0103900432587	9
Coq.Numbers.NatInt.NZDomain.ofnat_succ	40	0	search with cache (only 1: reflexivity).	0.0104360580444	1
Coq.Numbers.NatInt.NZDomain.ofnat_pred	40
Coq.Numbers.NatInt.NZDomain.ofnat_S_gt_0	40
Coq.Numbers.NatInt.NZDomain.ofnat_S_neq_0	40
Coq.Numbers.NatInt.NZDomain.ofnat_injective	40
Coq.Numbers.NatInt.NZDomain.ofnat_eq	40
Coq.Numbers.NatInt.NZDomain.ofnat_lt	40
Coq.Numbers.NatInt.NZDomain.ofnat_le	40
Coq.Numbers.NatInt.NZDomain.ofnat_add_l	40
Coq.Numbers.NatInt.NZDomain.ofnat_add	40	0.0.0.0.0.8.4.0	search with cache (only 1: induction n; only 1: unfold ofnat; only 1: symmetry; only 1: apply add_0_l; only 1: intros; only 1: rewrite ofnat_succ, add_succ_l; only 1: simpl; only 1: now f_equiv).	1.5291800499	1695
Coq.Numbers.NatInt.NZDomain.ofnat_mul	40
Coq.Numbers.NatInt.NZDomain.ofnat_sub_r	40
Coq.Numbers.NatInt.NZDomain.ofnat_sub	40
Coq.Numbers.NatInt.NZPow.pow_0_l	40
Coq.Numbers.NatInt.NZPow.pow_0_l'	40
Coq.Numbers.NatInt.NZPow.pow_1_r	40
Coq.Numbers.NatInt.NZPow.pow_1_l	40
Coq.Numbers.NatInt.NZPow.pow_2_r	40	0.7.2.35.4	search with cache (only 1: intro n; only 1: rewrite two_succ; only 1: nzsimpl; only 1: now f_equiv; only 1: apply lt_le_incl, lt_0_1).	39.5713129044	22164
Coq.Numbers.NatInt.NZPow.pow_eq_0	40
Coq.Numbers.NatInt.NZPow.pow_nonzero	40
Coq.Numbers.NatInt.NZPow.pow_eq_0_iff	40
Coq.Numbers.NatInt.NZPow.pow_add_r	40
Coq.Numbers.NatInt.NZPow.pow_mul_l	40
Coq.Numbers.NatInt.NZPow.pow_mul_r	40
Coq.Numbers.NatInt.NZPow.pow_nonneg	40
Coq.Numbers.NatInt.NZPow.pow_pos_nonneg	40
Coq.Numbers.NatInt.NZPow.pow_lt_mono_l	40
Coq.Numbers.NatInt.NZPow.pow_le_mono_l	40
Coq.Numbers.NatInt.NZPow.pow_gt_1	40
Coq.Numbers.NatInt.NZPow.pow_lt_mono_r	40
Coq.Numbers.NatInt.NZPow.pow_le_mono_r	40
Coq.Numbers.NatInt.NZPow.pow_le_mono	40
Coq.Numbers.NatInt.NZPow.pow_lt_mono	40
Coq.Numbers.NatInt.NZPow.pow_inj_l	40
Coq.Numbers.NatInt.NZPow.pow_inj_r	40
Coq.Numbers.NatInt.NZPow.pow_lt_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.pow_le_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.pow_lt_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.pow_le_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.pow_gt_lin_r	40
Coq.Numbers.NatInt.NZPow.pow_add_lower	40
Coq.Numbers.NatInt.NZPow.pow_add_upper	40
Coq.Numbers.NatInt.NZGcd.divide_wd	40
Coq.Numbers.NatInt.NZGcd.divide_1_l	40
Coq.Numbers.NatInt.NZGcd.divide_0_r	40	19.15.1	search with cache (only 1: unfold divide; only 1: exists 0; only 1: now nzsimpl).	15.8226659298	20408
Coq.Numbers.NatInt.NZGcd.divide_0_l	40
Coq.Numbers.NatInt.NZGcd.eq_mul_1_nonneg	40
Coq.Numbers.NatInt.NZGcd.eq_mul_1_nonneg'	40
Coq.Numbers.NatInt.NZGcd.divide_1_r_nonneg	40
Coq.Numbers.NatInt.NZGcd.divide_refl	40
Coq.Numbers.NatInt.NZGcd.divide_trans	40
Coq.Numbers.NatInt.NZGcd.divide_antisym_nonneg	40
Coq.Numbers.NatInt.NZGcd.mul_divide_mono_l	40
Coq.Numbers.NatInt.NZGcd.mul_divide_mono_r	40
Coq.Numbers.NatInt.NZGcd.mul_divide_cancel_l	40
Coq.Numbers.NatInt.NZGcd.mul_divide_cancel_r	40	0.0.0.2.0.5.3	search with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: split; only 1: intros (q, Hq); only 1: exists q; only 1: now rewrite mul_shuffle3, mul_cancel_l in Hq; only 1: apply mul_divide_mono_l).	1.64890408516	1758
Coq.Numbers.NatInt.NZGcd.divide_add_r	40
Coq.Numbers.NatInt.NZGcd.divide_mul_l	40
Coq.Numbers.NatInt.NZGcd.divide_mul_r	40
Coq.Numbers.NatInt.NZGcd.divide_factor_l	40	0.5.6.1	search with cache (only 1: intros; only 1: apply divide_mul_l; only 1: exists 1; only 1: now nzsimpl).	0.207056999207	238
Coq.Numbers.NatInt.NZGcd.divide_factor_r	40	1.8.1	search with cache (only 1: intros; only 1: rewrite mul_comm; only 1: apply divide_mul_l, divide_refl).	0.0895349979401	95
Coq.Numbers.NatInt.NZGcd.divide_pos_le	40
Coq.Numbers.NatInt.NZGcd.gcd_unique	40
Coq.Numbers.NatInt.NZGcd.gcd_wd	40
Coq.Numbers.NatInt.NZGcd.gcd_divide_iff	40
Coq.Numbers.NatInt.NZGcd.gcd_unique_alt	40
Coq.Numbers.NatInt.NZGcd.gcd_comm	40	2.9.6.7.0.1.2	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: apply gcd_nonneg; only 1: trivial using gcd_divide_r; only 1: trivial using gcd_divide_l; only 1: intros; only 1: now apply gcd_greatest).	3.40401816368	8824
Coq.Numbers.NatInt.NZGcd.gcd_assoc	40
Coq.Numbers.NatInt.NZGcd.gcd_0_l_nonneg	40	0.18.1.0.0.1.2	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	18.0511651039	14969
Coq.Numbers.NatInt.NZGcd.gcd_0_r_nonneg	40	0.1.1.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.0217671394348	8
Coq.Numbers.NatInt.NZGcd.gcd_1_l	40	3.0.0.10.0.3.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: apply lt_le_incl, lt_0_1; only 1: now nzsimpl; only 1: exists n; only 1: now nzsimpl; only 1: trivial).	3.85240387917	3744
Coq.Numbers.NatInt.NZGcd.gcd_1_r	40	0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).	0.0424358844757	12
Coq.Numbers.NatInt.NZGcd.gcd_diag_nonneg	40	0.1.1.0.1.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).	0.0211451053619	9
Coq.Numbers.NatInt.NZGcd.gcd_eq_0_l	40
Coq.Numbers.NatInt.NZGcd.gcd_eq_0_r	40	1.7.0.4.1.0	search with cache (only 1: intros; only 1: apply divide_0_l; only 1: transitivity (gcd n m); only 1: rewrite H; only 1: apply divide_0_r; only 1: trivial using gcd_divide_r).	3.96611189842	3565
Coq.Numbers.NatInt.NZGcd.gcd_eq_0	40
Coq.Numbers.NatInt.NZGcd.gcd_mul_diag_l	40	0.6.1.0.1.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: trivial using divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial).	0.757625102997	628
Coq.Numbers.NatInt.NZGcd.divide_gcd_iff	40
Coq.Numbers.NatInt.NZParity.Even_wd	40
Coq.Numbers.NatInt.NZParity.Odd_wd	40
Coq.Numbers.NatInt.NZParity.even_wd	40
Coq.Numbers.NatInt.NZParity.odd_wd	40
Coq.Numbers.NatInt.NZParity.Even_or_Odd	40
Coq.Numbers.NatInt.NZParity.double_below	40
Coq.Numbers.NatInt.NZParity.double_above	40	0.0.0.0.0.0	search with cache (only 1: intros n m; only 1: rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: now rewrite le_succ_l; only 1: order').	0.201594829559	6
Coq.Numbers.NatInt.NZParity.Even_Odd_False	40
Coq.Numbers.NatInt.NZParity.orb_even_odd	40
Coq.Numbers.NatInt.NZParity.negb_odd	40
Coq.Numbers.NatInt.NZParity.negb_even	40	0.0.0.0.0.0.0.0.0.0.2.0	search with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	5.21721601486	1624
Coq.Numbers.NatInt.NZParity.even_0	40
Coq.Numbers.NatInt.NZParity.odd_0	40
Coq.Numbers.NatInt.NZParity.odd_1	40
Coq.Numbers.NatInt.NZParity.even_1	40
Coq.Numbers.NatInt.NZParity.even_2	40
Coq.Numbers.NatInt.NZParity.odd_2	40
Coq.Numbers.NatInt.NZParity.Odd_succ	40
Coq.Numbers.NatInt.NZParity.odd_succ	40
Coq.Numbers.NatInt.NZParity.even_succ	40
Coq.Numbers.NatInt.NZParity.Even_succ	40	0.0.0.0.0	search with cache (only 1: split; only 1: rewrite <- even_spec, <- odd_spec; only 1: now rewrite <- negb_odd, odd_succ, negb_even; only 1: rewrite <- even_spec, <- odd_spec; only 1: now rewrite <- negb_odd, odd_succ, negb_even).	0.0710871219635	5
Coq.Numbers.NatInt.NZParity.Even_succ_succ	40
Coq.Numbers.NatInt.NZParity.Odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.even_succ_succ	40	0.13.0	search with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!even_spec; only 1: now rewrite Even_succ, Odd_succ).	2.04461407661	795
Coq.Numbers.NatInt.NZParity.odd_succ_succ	40	0.15.0	search with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!odd_spec; only 1: now rewrite Odd_succ, Even_succ).	2.15960097313	2047
Coq.Numbers.NatInt.NZParity.even_add	40
Coq.Numbers.NatInt.NZParity.odd_add	40
Coq.Numbers.NatInt.NZParity.even_mul	40
Coq.Numbers.NatInt.NZParity.odd_mul	40
Coq.Numbers.NatInt.NZParity.even_add_even	40
Coq.Numbers.NatInt.NZParity.odd_add_even	40	0.0.1.0.1	search with cache (only 1: intros n m Hm; only 1: rewrite <- !negb_even; only 1: apply even_spec in Hm; only 1: rewrite even_add, Hm; only 1: now destruct (even n)).	0.193678855896	62
Coq.Numbers.NatInt.NZParity.even_add_mul_even	40
Coq.Numbers.NatInt.NZParity.odd_add_mul_even	40	6.4.1.1.2.1	search with cache (only 1: intros; only 1: rewrite <- !negb_even; only 1: rewrite even_add; only 1: rewrite even_mul; only 1: rewrite <- even_spec in H; only 1: now destruct (even n), (even m)).	22.9773080349	7902
Coq.Numbers.NatInt.NZParity.even_add_mul_2	40
Coq.Numbers.NatInt.NZParity.odd_add_mul_2	40
Coq.Numbers.NatInt.NZAddOrder.add_lt_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.add_lt_mono_r	40	0.0.0.0.2.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	0.143215894699	8
Coq.Numbers.NatInt.NZAddOrder.add_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.add_le_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.add_le_mono_r	40	0.0.0.0.2.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).	0.120468854904	8
Coq.Numbers.NatInt.NZAddOrder.add_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.add_lt_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.add_le_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.add_pos_pos	40
Coq.Numbers.NatInt.NZAddOrder.add_pos_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.add_nonneg_pos	40
Coq.Numbers.NatInt.NZAddOrder.add_nonneg_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.lt_add_pos_l	40	0.0.0.0.4.1.6	search with cache (only 1: intro; only 1: intro p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	1.38098406792	574
Coq.Numbers.NatInt.NZAddOrder.lt_add_pos_r	40	0.0.0.1.5.3.8	search with cache (only 1: intro; only 1: intro p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	6.25424098969	2900
Coq.Numbers.NatInt.NZAddOrder.le_lt_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.lt_le_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.le_le_add_le	40
Coq.Numbers.NatInt.NZAddOrder.add_lt_cases	40
Coq.Numbers.NatInt.NZAddOrder.add_le_cases	40
Coq.Numbers.NatInt.NZAddOrder.add_neg_cases	40
Coq.Numbers.NatInt.NZAddOrder.add_pos_cases	40	0.0.0	search with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: now nzsimpl).	0.0337138175964	3
Coq.Numbers.NatInt.NZAddOrder.add_nonpos_cases	40
Coq.Numbers.NatInt.NZAddOrder.add_nonneg_cases	40	0.0.0	search with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0368030071259	3
Coq.Numbers.NatInt.NZAddOrder.le_exists_sub	40
Coq.Numbers.NatInt.NZMul.mul_0_r	40	1.1.0.0.1	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now nzsimpl).	0.0609250068665	8
Coq.Numbers.NatInt.NZMul.mul_succ_r	40
Coq.Numbers.NatInt.NZMul.mul_comm	40	0.0.0.0.2.1	search with cache (only 1: intros; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: nzsimpl; only 1: now rewrite add_cancel_r).	0.164031028748	30
Coq.Numbers.NatInt.NZMul.mul_add_distr_r	40
Coq.Numbers.NatInt.NZMul.mul_add_distr_l	40
Coq.Numbers.NatInt.NZMul.mul_assoc	40
Coq.Numbers.NatInt.NZMul.mul_1_l	40	9.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.364213943481	72
Coq.Numbers.NatInt.NZMul.mul_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0348451137543	2
Coq.Numbers.NatInt.NZMul.mul_shuffle0	40
Coq.Numbers.NatInt.NZMul.mul_shuffle1	40
Coq.Numbers.NatInt.NZMul.mul_shuffle2	40
Coq.Numbers.NatInt.NZMul.mul_shuffle3	40
Coq.Numbers.NatInt.NZLog.log2_nonneg	40
Coq.Numbers.NatInt.NZLog.log2_unique	40
Coq.Numbers.NatInt.NZLog.log2_wd	40
Coq.Numbers.NatInt.NZLog.log2_spec_alt	40
Coq.Numbers.NatInt.NZLog.log2_unique'	40
Coq.Numbers.NatInt.NZLog.log2_pow2	40
Coq.Numbers.NatInt.NZLog.log2_pred_pow2	40
Coq.Numbers.NatInt.NZLog.log2_1	40	2.0.0.0.10.2.13	search with cache (only 1: apply log2_unique; only 1: order_pos; only 1: nzsimpl; only 1: split; only 1: order; only 1: order'; only 1: order_pos).	6.48196005821	4463
Coq.Numbers.NatInt.NZLog.log2_2	40	1.2.2.2.0.3	search with cache (only 1: apply log2_unique' with 0; only 1: order'; only 1: split; only 1: order_pos; only 1: order_pos; only 1: now nzsimpl).	2.14156007767	620
Coq.Numbers.NatInt.NZLog.log2_pos	40
Coq.Numbers.NatInt.NZLog.log2_null	40
Coq.Numbers.NatInt.NZLog.log2_le_mono	40
Coq.Numbers.NatInt.NZLog.log2_lt_cancel	40
Coq.Numbers.NatInt.NZLog.log2_le_pow2	40
Coq.Numbers.NatInt.NZLog.log2_lt_pow2	40
Coq.Numbers.NatInt.NZLog.log2_lt_lin	40
Coq.Numbers.NatInt.NZLog.log2_le_lin	40
Coq.Numbers.NatInt.NZLog.log2_mul_below	40
Coq.Numbers.NatInt.NZLog.log2_mul_above	40
Coq.Numbers.NatInt.NZLog.log2_mul_pow2	40
Coq.Numbers.NatInt.NZLog.log2_double	40
Coq.Numbers.NatInt.NZLog.log2_same	40
Coq.Numbers.NatInt.NZLog.log2_succ_le	40
Coq.Numbers.NatInt.NZLog.log2_succ_or	40
Coq.Numbers.NatInt.NZLog.log2_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.log2_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.log2_succ_double	40
Coq.Numbers.NatInt.NZLog.log2_add_le	40
Coq.Numbers.NatInt.NZLog.add_log2_lt	40
Coq.Numbers.NatInt.NZLog.log2_up_eqn0	40
Coq.Numbers.NatInt.NZLog.log2_up_eqn	40	0.0.0.0.2.0	search with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.0341749191284	8
Coq.Numbers.NatInt.NZLog.log2_up_spec	40
Coq.Numbers.NatInt.NZLog.log2_up_nonpos	40
Coq.Numbers.NatInt.NZLog.log2_up_wd	40
Coq.Numbers.NatInt.NZLog.log2_up_nonneg	40	0.15.0.2.1.0	search with cache (only 1: intros; only 1: unfold log2_up; only 1: case compare; only 1: order; only 1: order_pos; only 1: order).	6.95382189751	4958
Coq.Numbers.NatInt.NZLog.log2_up_unique	40
Coq.Numbers.NatInt.NZLog.log2_up_pow2	40
Coq.Numbers.NatInt.NZLog.log2_up_succ_pow2	40
Coq.Numbers.NatInt.NZLog.log2_up_1	40	0.1	search with cache (only 1: apply log2_up_eqn0; only 1: order).	0.0118911266327	3
Coq.Numbers.NatInt.NZLog.log2_up_2	40	0.0.0.13.7.4.3	search with cache (only 1: apply log2_up_unique; only 1: order'; only 1: split; only 1: rewrite one_succ; only 1: nzsimpl; only 1: order_pos; only 1: now nzsimpl').	3.07786893845	3036
Coq.Numbers.NatInt.NZLog.le_log2_log2_up	40
Coq.Numbers.NatInt.NZLog.le_log2_up_succ_log2	40
Coq.Numbers.NatInt.NZLog.log2_log2_up_spec	40
Coq.Numbers.NatInt.NZLog.log2_log2_up_exact	40
Coq.Numbers.NatInt.NZLog.log2_up_pos	40
Coq.Numbers.NatInt.NZLog.log2_up_null	40
Coq.Numbers.NatInt.NZLog.log2_up_le_mono	40
Coq.Numbers.NatInt.NZLog.log2_up_lt_cancel	40
Coq.Numbers.NatInt.NZLog.log2_up_lt_pow2	40
Coq.Numbers.NatInt.NZLog.log2_up_le_pow2	40
Coq.Numbers.NatInt.NZLog.log2_up_lt_lin	40
Coq.Numbers.NatInt.NZLog.log2_up_le_lin	40
Coq.Numbers.NatInt.NZLog.log2_up_mul_above	40
Coq.Numbers.NatInt.NZLog.log2_up_mul_below	40
Coq.Numbers.NatInt.NZLog.log2_up_mul_pow2	40
Coq.Numbers.NatInt.NZLog.log2_up_double	40
Coq.Numbers.NatInt.NZLog.log2_up_same	40
Coq.Numbers.NatInt.NZLog.log2_up_succ_le	40
Coq.Numbers.NatInt.NZLog.log2_up_succ_or	40
Coq.Numbers.NatInt.NZLog.log2_up_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.log2_up_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.log2_up_succ_double	40
Coq.Numbers.NatInt.NZLog.log2_up_add_le	40
Coq.Numbers.NatInt.NZLog.add_log2_up_lt	40
Coq.Numbers.NatInt.NZBase.eq_sym_iff	40	2	search with cache (only 1: simpl_relation).	0.0170900821686	3
Coq.Numbers.NatInt.NZBase.neq_sym	40	4.0	search with cache (only 1: intros; only 1: simpl_relation).	0.0164890289307	6
Coq.Numbers.NatInt.NZBase.eq_stepl	40
Coq.Numbers.NatInt.NZBase.succ_inj	40
Coq.Numbers.NatInt.NZBase.succ_inj_wd	40
Coq.Numbers.NatInt.NZBase.succ_inj_wd_neg	40
Coq.Numbers.NatInt.NZBase.central_induction	40
Coq.Numbers.NatInt.NZMulOrder.mul_lt_pred	40
Coq.Numbers.NatInt.NZMulOrder.mul_lt_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_lt_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.mul_lt_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_lt_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_nonneg_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_nonpos_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_nonneg_r	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_nonpos_r	40	0.1.0.0.0.0.0.0.1.0.0	search with cache (only 1: intros n m p H1 H2; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_neg_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: apply eq_le_incl; only 1: rewrite H1; only 1: now do 2 rewrite mul_0_l).	2.57638192177	700
Coq.Numbers.NatInt.NZMulOrder.mul_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.mul_id_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_id_r	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_pos_r	40	1.0.0.15.0	search with cache (only 1: intros n m p H; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_pos_l p n m) by assumption; only 1: now rewrite (mul_cancel_l n m p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl)).	3.35059309006	3277
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_neg_r	40	0.1.0.1.0.1.0	search with cache (only 1: intros n m p H; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_neg_l p n m); only 1: rewrite (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl); only 1: now setoid_replace (n == m) with (m == n) by split; now intro; only 1: order).	0.122003078461	26
Coq.Numbers.NatInt.NZMulOrder.mul_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.mul_pos_pos	40
Coq.Numbers.NatInt.NZMulOrder.mul_neg_neg	40
Coq.Numbers.NatInt.NZMulOrder.mul_pos_neg	40	1.0.2	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).	0.0260169506073	15
Coq.Numbers.NatInt.NZMulOrder.mul_neg_pos	40	0.0.2	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r).	0.0197448730469	14
Coq.Numbers.NatInt.NZMulOrder.mul_nonneg_nonneg	40	4.1.0.0.1.0.0.0.4.1.7	search with cache (only 1: intros n m H1 H2; only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r; only 1: rewrite <- H2; only 1: now nzsimpl; only 1: apply eq_le_incl; only 1: rewrite <- H1; only 1: now nzsimpl).	18.4981369972	8732
Coq.Numbers.NatInt.NZMulOrder.mul_pos_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_pos_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.mul_nonneg_cancel_l	40	2.2.5.1.6.1	search with cache (only 1: intros n m p; only 1: rewrite <- (mul_0_r n)  at 1; only 1: symmetry; only 1: apply mul_le_mono_pos_l; only 1: rewrite <- (add_0_l 0); only 1: now nzsimpl).	6.33523011208	4878
Coq.Numbers.NatInt.NZMulOrder.mul_nonneg_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.lt_1_mul_pos	40
Coq.Numbers.NatInt.NZMulOrder.eq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.neq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.eq_square_0	40
Coq.Numbers.NatInt.NZMulOrder.eq_mul_0_l	40	0.1.19.2	search with cache (only 1: intros n m; only 1: rewrite eq_mul_0; only 1: intro H; only 1: intuition order).	24.2942349911	20022
Coq.Numbers.NatInt.NZMulOrder.eq_mul_0_r	40	1.2.2	search with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: tauto).	0.130259037018	56
Coq.Numbers.NatInt.NZMulOrder.lt_0_mul	40
Coq.Numbers.NatInt.NZMulOrder.square_lt_mono_nonneg	40	0.3	search with cache (only 1: intros n m p H; only 1: now apply mul_lt_mono_nonneg).	0.0223579406738	12
Coq.Numbers.NatInt.NZMulOrder.square_le_mono_nonneg	40	0.2.0.0.2.4	search with cache (only 1: intros n m H1 H2; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_nonneg; only 1: rewrite H2; only 1: now apply eq_le_incl).	0.463557004929	395
Coq.Numbers.NatInt.NZMulOrder.square_lt_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.square_le_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.mul_2_mono_l	40
Coq.Numbers.NatInt.NZMulOrder.add_le_mul	40
Coq.Numbers.NatInt.NZMulOrder.square_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.crossmul_le_addsquare	40
Coq.Numbers.NatInt.NZMulOrder.add_square_le	40
Coq.Numbers.NatInt.NZMulOrder.square_add_le	40
Coq.Numbers.NatInt.NZMulOrder.quadmul_le_squareadd	40
Coq.Structures.OrdersTac.eq_refl	40	6	search with cache (only 1: solve_proper).	0.0108790397644	7
Coq.Structures.OrdersTac.le_refl	40
Coq.Structures.OrdersTac.lt_irrefl	40	8.38.5.1	search with cache (only 1: intros; only 1: intuition; only 1: elim (CRelationClasses.StrictOrder_Irreflexive x); only 1: simpl_relation).	5.15685009956	12925
Coq.Structures.OrdersTac.eq_sym	40	6.1	search with cache (only 1: intros; only 1: simpl_relation).	0.0161850452423	9
Coq.Structures.OrdersTac.le_antisym	40
Coq.Structures.OrdersTac.neq_sym	40	0	search with cache (only 1: auto with *).	0.0126729011536	1
Coq.Structures.OrdersTac.trans	40
Coq.Structures.OrdersTac.eq_neq	40
Coq.Structures.OrdersTac.neq_eq	40	0	search with cache (only 1: eauto using eq_trans, eq_sym).	0.0147769451141	1
Coq.Structures.OrdersTac.not_neq_eq	40
Coq.Structures.OrdersTac.not_ge_lt	40	0.0.1.0.1.6.4.0.2	search with cache (only 1: intros x y; only 1: rewrite ?P.le_lteq; only 1: intro H; only 1: destruct (P.lt_total x y) as [H'| [H'| H']]; only 1: auto; only 1: destruct H; only 1: intuition; only 1: destruct H; only 1: intuition auto; subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	10.3039698601	10005
Coq.Structures.OrdersTac.not_gt_le	40	0.0.9.0.0	search with cache (only 1: intros x y H; only 1: rewrite P.le_lteq; only 1: destruct (P.lt_total x y); only 1: intuition; only 1: intuition).	1.38831019402	1336
Coq.Structures.OrdersTac.le_neq_lt	40	0.0.0.2	search with cache (only 1: intros x y; only 1: rewrite ?P.le_lteq; only 1: generalize (P.lt_total x y); only 1: intuition).	0.337615966797	95
Coq.Structures.OrdersEx.lt_strorder	40
Coq.Structures.OrdersEx.lt_compat	40
Coq.Structures.OrdersEx.compare_spec	40
Coq.Structures.OrdersEx.bits_lt_antirefl	40
Coq.Structures.OrdersEx.bits_lt_trans	40
Coq.Structures.OrdersEx.lt_compat	40	1	search with cache (only 1: solve_proper).	0.0764877796173	2
Coq.Structures.OrdersEx.lt_strorder	40
Coq.Structures.OrdersEx.compare_spec	40
Coq.Structures.OrderedTypeEx.lt_trans	40	25.9	search with cache (only 1: intros; only 1: now try rewrite H).	16.0714092255	21585
Coq.Structures.OrderedTypeEx.lt_not_eq	40
Coq.Structures.OrderedTypeEx.compare	40
Coq.Structures.OrderedTypeEx.lt_trans	40	7.20	search with cache (only 1: intros ? ? LT ->; only 1: auto).	0.58718085289	1221
Coq.Structures.OrderedTypeEx.lt_not_eq	40
Coq.Structures.OrderedTypeEx.compare	40
Coq.Structures.OrderedTypeEx.lt_not_eq	40
Coq.Structures.OrderedTypeEx.compare	40
Coq.Structures.OrderedTypeEx.compare	40
Coq.Structures.OrderedTypeEx.eq_refl	40	15.6	search with cache (only 1: intro H; only 1: now subst).	0.161442995071	451
Coq.Structures.OrderedTypeEx.eq_sym	40	1.11.2.3	search with cache (only 1: intros x y H; only 1: destruct H; only 1: red; only 1: auto with ordered_type).	1.27500295639	3075
Coq.Structures.OrderedTypeEx.eq_trans	40
Coq.Structures.OrderedTypeEx.lt_trans	40
Coq.Structures.OrderedTypeEx.lt_not_eq	40	0.0.1.3	search with cache (only 1: unfold eq, lt; only 1: intuition; only 1: MO1.order; only 1: MO2.order).	0.727855920792	150
Coq.Structures.OrderedTypeEx.compare	40
Coq.Structures.OrderedTypeEx.eq_dec	40
Coq.Structures.OrderedTypeEx.bits_lt_trans	40
Coq.Structures.OrderedTypeEx.lt_trans	40
Coq.Structures.OrderedTypeEx.bits_lt_antirefl	40	0.3.0.2.0.2.2	search with cache (only 1: induction x; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: intros H; only 1: eauto).	0.564805030823	560
Coq.Structures.OrderedTypeEx.lt_not_eq	40
Coq.Structures.OrderedTypeEx.compare	40
Coq.Structures.OrderedTypeEx.eq_dec	40
Coq.Structures.OrderedTypeEx.nat_of_ascii_inverse	40
Coq.Structures.OrderedTypeEx.lts_tail_unique	40
Coq.Structures.OrderedTypeEx.lt_trans	40
Coq.Structures.OrderedTypeEx.lt_not_eq	40
Coq.Structures.OrderedTypeEx.compare	40
Coq.Structures.Orders.eqb_eq	40
Coq.Structures.Orders.le_lteq	40	0.7.0	search with cache (only 1: Bool.destr_bool; only 1: compute; only 1: intuition).	0.0312440395355	21
Coq.Structures.Orders.lt_total	40
Coq.Structures.Orders.leb_le	40
Coq.Structures.Orders.leb_total	40
Coq.Structures.Orders.leb_trans	40
Coq.Structures.Orders.compare_spec	40
Coq.Structures.Orders.eqb_eq	40
Coq.Structures.Orders.eq_equiv	40
Coq.Structures.Orders.lt_strorder	40
Coq.Structures.Orders.lt_compat	40
Coq.Structures.Orders.le_lteq	40	0.0.0.2.1.7.0.0	search with cache (only 1: intros; only 1: unfold eq, eqb, le; only 1: unfold lt, le; only 1: case leb; only 1: case leb; only 1: intuition; only 1: intuition; only 1: intuition).	11.8963389397	7082
Coq.Structures.DecidableTypeEx.eq_refl	40	17.6	search with cache (only 1: intro H; only 1: now subst).	0.245412826538	618
Coq.Structures.DecidableTypeEx.eq_sym	40	1.3.0.0.16	search with cache (only 1: induction y; only 1: red; only 1: simpl; only 1: intros (x1, x2); only 1: auto).	2.21848201752	5954
Coq.Structures.DecidableTypeEx.eq_trans	40
Coq.Structures.DecidableTypeEx.eq_dec	40
Coq.Structures.DecidableTypeEx.eq_dec	40
Coq.Structures.Equalities.eq_equiv	40
Coq.Structures.Equalities.eqb_eq	40
Coq.Structures.Equalities.eq_dec	40
Coq.Structures.Equalities.eqb_compat	40
Coq.Structures.Equalities.eqb_spec	40
Coq.Structures.Equalities.eqb_neq	40
Coq.Structures.Equalities.eqb_refl	40	14.1	search with cache (only 1: apply eqb_eq; only 1: simpl_relation).	0.818263053894	1084
Coq.Structures.Equalities.eqb_sym	40
Coq.Structures.OrderedType.eq_dec	40
Coq.Structures.OrderedType.eq_equiv	40
Coq.Structures.OrderedType.lt_antirefl	40
Coq.Structures.OrderedType.lt_strorder	40
Coq.Structures.OrderedType.lt_eq	40
Coq.Structures.OrderedType.eq_lt	40
Coq.Structures.OrderedType.lt_compat	40
Coq.Structures.OrderedType.lt_total	40
Coq.Structures.OrderedType.le_lteq	40	0.0.9	search with cache (only 1: split; only 1: auto; only 1: auto).	0.108901023865	109
Coq.Structures.OrderedType.le_eq	40
Coq.Structures.OrderedType.eq_le	40	0	search with cache (only 1: order).	0.0155119895935	1
Coq.Structures.OrderedType.neq_eq	40	0	search with cache (only 1: order).	0.01580286026	1
Coq.Structures.OrderedType.eq_neq	40	0	search with cache (only 1: order).	0.0158131122589	1
Coq.Structures.OrderedType.le_lt_trans	40	0	search with cache (only 1: order).	0.0143859386444	1
Coq.Structures.OrderedType.lt_le_trans	40	0	search with cache (only 1: order).	0.0143678188324	1
Coq.Structures.OrderedType.le_neq	40	0	search with cache (only 1: order).	0.014527797699	1
Coq.Structures.OrderedType.le_trans	40	0	search with cache (only 1: order).	0.0151000022888	1
Coq.Structures.OrderedType.le_antisym	40	0	search with cache (only 1: order).	0.0148370265961	1
Coq.Structures.OrderedType.neq_sym	40	0	search with cache (only 1: order).	0.0142850875854	1
Coq.Structures.OrderedType.lt_le	40	0	search with cache (only 1: order).	0.0136580467224	1
Coq.Structures.OrderedType.gt_not_eq	40	0	search with cache (only 1: order).	0.0143089294434	1
Coq.Structures.OrderedType.eq_not_lt	40	0	search with cache (only 1: order).	0.0146360397339	1
Coq.Structures.OrderedType.eq_not_gt	40	0	search with cache (only 1: order).	0.014347076416	1
Coq.Structures.OrderedType.lt_not_gt	40	0	search with cache (only 1: order).	0.0137569904327	1
Coq.Structures.OrderedType.elim_compare_eq	40
Coq.Structures.OrderedType.elim_compare_lt	40	0.0.0.0.0.0.3.2.0.2.2	search with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exists H'; only 1: auto; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order).	1.96775603294	2936
Coq.Structures.OrderedType.elim_compare_gt	40	3.2.0.0.0.0.0.1.0.2.1	search with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).	3.22445416451	3981
Coq.Structures.OrderedType.lt_dec	40
Coq.Structures.OrderedType.eqb_alt	40
Coq.Structures.OrderedType.In_eq	40
Coq.Structures.OrderedType.ListIn_In	40	6.2.0.9.1.3.1.1	search with cache (only 1: simple induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: constructor; only 1: subst; only 1: auto with ordered_type).	15.3247549534	24580
Coq.Structures.OrderedType.Inf_lt	40
Coq.Structures.OrderedType.Inf_eq	40	19.3	search with cache (only 1: intros; only 1: now rewrite H).	5.31584596634	6268
Coq.Structures.OrderedType.Sort_Inf_In	40
Coq.Structures.OrderedType.ListIn_Inf	40	1.0.3.0.3.2.4	search with cache (only 1: simple induction l; only 1: simpl; only 1: intros; only 1: constructor; only 1: simpl; only 1: intros; only 1: auto).	0.715231895447	680
Coq.Structures.OrderedType.In_Inf	40	0.0.0.0.18	search with cache (only 1: apply InA_InfA; only 1: split; only 1: exact eq_refl; only 1: auto with *; only 1: exact eq_trans).	0.725578069687	1010
Coq.Structures.OrderedType.Inf_alt	40
Coq.Structures.OrderedType.Sort_NoDup	40
Coq.Structures.OrderedType.eqke_eqk	40	0.50.0	search with cache (only 1: intros; only 1: destruct H; only 1: auto with ordered_type).	1.19482517242	4984
Coq.Structures.OrderedType.ltk_right_r	40	0	search with cache (only 1: intuition).	0.016273021698	1
Coq.Structures.OrderedType.ltk_right_l	40	0	search with cache (only 1: auto).	0.0128719806671	1
Coq.Structures.OrderedType.eqk_refl	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0172669887543	2
Coq.Structures.OrderedType.eqke_refl	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0186929702759	2
Coq.Structures.OrderedType.eqk_sym	40	0	search with cache (only 1: auto with ordered_type).	0.0122270584106	1
Coq.Structures.OrderedType.eqke_sym	40	0.1	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0285830497742	3
Coq.Structures.OrderedType.eqk_trans	40
Coq.Structures.OrderedType.eqke_trans	40	3.4.3.0.9.0	search with cache (only 1: unfold eqke; only 1: intros; only 1: intuition; only 1: compute; only 1: eauto with ordered_type; only 1: congruence).	20.4591810703	14948
Coq.Structures.OrderedType.ltk_trans	40	1.2	search with cache (only 1: intuition; only 1: eauto with ordered_type).	0.0303559303284	5
Coq.Structures.OrderedType.ltk_not_eqk	40	1	search with cache (only 1: eauto with ordered_type).	0.0235280990601	2
Coq.Structures.OrderedType.ltk_not_eqke	40	2.3.22.0.2.0	search with cache (only 1: unfold eqk, ltk; only 1: unfold eqke; only 1: intuition; only 1: simpl in *; only 1: destruct H2; only 1: order).	9.67498683929	16286
Coq.Structures.OrderedType.eqk_equiv	40	2.0.0.0.0.8	search with cache (only 1: split; only 1: unfold eqk, ltk; only 1: intuition; only 1: unfold eqk, ltk; only 1: intuition; only 1: eauto with ordered_type).	0.53401517868	384
Coq.Structures.OrderedType.eqke_equiv	40	0.0.0.0	search with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.0404479503632	4
Coq.Structures.OrderedType.ltk_strorder	40	0.4.0.29.0.26.0.7	search with cache (only 1: constructor; only 1: unfold eqk, ltk; only 1: intros H'; only 1: intuition; only 1: intros H'; only 1: simpl in *; only 1: order; only 1: eauto with ordered_type).	11.6049089432	50658
Coq.Structures.OrderedType.ltk_compat	40
Coq.Structures.OrderedType.ltk_compat'	40
Coq.Structures.OrderedType.eqk_not_ltk	40	1.0	search with cache (only 1: unfold eqk, ltk; only 1: auto with ordered_type).	0.0442609786987	18
Coq.Structures.OrderedType.ltk_eqk	40	0.0.0	search with cache (only 1: unfold eqk, ltk; only 1: intuition; only 1: eauto with ordered_type).	0.0320990085602	3
Coq.Structures.OrderedType.eqk_ltk	40	0.0.0	search with cache (only 1: unfold eqk, ltk; only 1: intuition; only 1: eauto with ordered_type).	0.0256690979004	3
Coq.Structures.OrderedType.InA_eqke_eqk	40
Coq.Structures.OrderedType.In_alt	40
Coq.Structures.OrderedType.MapsTo_eq	40
Coq.Structures.OrderedType.In_eq	40
Coq.Structures.OrderedType.Inf_eq	40	27.5	search with cache (only 1: firstorder; only 1: now rewrite H).	5.09794521332	8615
Coq.Structures.OrderedType.Inf_lt	40
Coq.Structures.OrderedType.Sort_Inf_In	40
Coq.Structures.OrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrderedType.Sort_NoDupA	40
Coq.Structures.OrderedType.Sort_In_cons_1	40
Coq.Structures.OrderedType.Sort_In_cons_2	40
Coq.Structures.OrderedType.Sort_In_cons_3	40
Coq.Structures.OrderedType.In_inv	40
Coq.Structures.OrderedType.In_inv_2	40	0.8.1	search with cache (only 1: inversion 1; only 1: intuition; only 1: eauto with ordered_type).	0.227307081223	113
Coq.Structures.OrderedType.In_inv_3	40	0.0.3.1	search with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: eauto with *).	0.0540380477905	13
Coq.Structures.OrdersFacts.compare_eq_iff	40
Coq.Structures.OrdersFacts.compare_eq	40	0.0.0.0.0.0.0	search with cache (only 1: case compare_spec; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).	0.030485868454	7
Coq.Structures.OrdersFacts.compare_lt_iff	40
Coq.Structures.OrdersFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.compare_nlt_iff	40	0.0.0.1.0.0.1.0.0.0.1.1.0.0.0	search with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).	15.3093597889	6141
Coq.Structures.OrdersFacts.compare_ngt_iff	40	2.1.0.0.0.1.2.0.0.1.1.0.0.1	search with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: easy).	16.9693050385	10896
Coq.Structures.OrdersFacts.compare_compat	40
Coq.Structures.OrdersFacts.compare_refl	40	1.0	search with cache (only 1: autorewrite with order; only 1: easy).	0.0161798000336	3
Coq.Structures.OrdersFacts.compare_antisym	40
Coq.Structures.OrdersFacts.le_compat	40
Coq.Structures.OrdersFacts.le_preorder	40	5.1.5.1.8	search with cache (only 1: split; only 1: repeat red; only 1: iorder; only 1: repeat red; only 1: iorder).	0.411535978317	715
Coq.Structures.OrdersFacts.le_order	40	0.1.0	search with cache (only 1: repeat red; only 1: compute; only 1: iorder).	0.031044960022	4
Coq.Structures.OrdersFacts.le_antisym	40	3.0	search with cache (only 1: compute; only 1: iorder).	0.0264918804169	18
Coq.Structures.OrdersFacts.le_not_gt_iff	40	7	search with cache (only 1: iorder).	0.0256028175354	18
Coq.Structures.OrdersFacts.lt_not_ge_iff	40	0	search with cache (only 1: iorder).	0.0166079998016	1
Coq.Structures.OrdersFacts.le_or_gt	40	0.22.21.2.0	search with cache (only 1: intros; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: iorder; only 1: iorder; only 1: intuition).	31.9784982204	36529
Coq.Structures.OrdersFacts.lt_or_ge	40	0.0.1.0.0.0	search with cache (only 1: intros; only 1: rewrite le_lteq; only 1: destruct (compare_spec x y); only 1: intuition; only 1: intuition; only 1: intuition).	0.0423741340637	7
Coq.Structures.OrdersFacts.eq_is_le_ge	40	0	search with cache (only 1: iorder).	0.0200419425964	1
Coq.Structures.OrdersFacts.compare_le_iff	40	0.0	search with cache (only 1: rewrite compare_gt_iff; only 1: iorder).	0.0205590724945	2
Coq.Structures.OrdersFacts.compare_ge_iff	40	0.0.0	search with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).	0.0224869251251	3
Coq.Structures.OrdersFacts.lt_dec	40
Coq.Structures.OrdersFacts.if_eq_dec	40
Coq.Structures.OrdersFacts.eqb_alt	40
Coq.Structures.OrdersFacts.eqb_compat	40
Coq.Structures.OrdersFacts.lt_not_eq	40	6.3	search with cache (only 1: intuition; only 1: order).	0.242372989655	103
Coq.Structures.OrdersFacts.lt_eq	40	0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0223729610443	1
Coq.Structures.OrdersFacts.eq_lt	40	0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0195660591125	1
Coq.Structures.OrdersFacts.le_eq	40	1	search with cache (only 1: order).	1.01244091988	2
Coq.Structures.OrdersFacts.eq_le	40	0	search with cache (only 1: order).	0.0134749412537	1
Coq.Structures.OrdersFacts.neq_eq	40	2	search with cache (only 1: order).	0.0869112014771	41
Coq.Structures.OrdersFacts.eq_neq	40	0	search with cache (only 1: order).	0.0135669708252	1
Coq.Structures.OrdersFacts.le_lt_trans	40	0	search with cache (only 1: order).	0.0128450393677	1
Coq.Structures.OrdersFacts.lt_le_trans	40	0	search with cache (only 1: order).	0.0126829147339	1
Coq.Structures.OrdersFacts.le_trans	40	0	search with cache (only 1: order).	0.0135500431061	1
Coq.Structures.OrdersFacts.le_antisym	40	0	search with cache (only 1: order).	0.0134990215302	1
Coq.Structures.OrdersFacts.le_neq	40	0	search with cache (only 1: order).	0.0128788948059	1
Coq.Structures.OrdersFacts.neq_sym	40	5.0	search with cache (only 1: intro H; only 1: intuition).	0.0596940517426	31
Coq.Structures.OrdersFacts.lt_le	40	5	search with cache (only 1: order).	0.0489208698273	20
Coq.Structures.OrdersFacts.gt_not_eq	40	0	search with cache (only 1: order).	0.0127398967743	1
Coq.Structures.OrdersFacts.eq_not_lt	40	0	search with cache (only 1: order).	0.0124888420105	1
Coq.Structures.OrdersFacts.eq_not_gt	40	0	search with cache (only 1: order).	0.0126709938049	1
Coq.Structures.OrdersFacts.lt_not_gt	40	5	search with cache (only 1: order).	0.0479259490967	20
Coq.Structures.OrdersFacts.eq_is_nlt_ngt	40	12.6.6.3	search with cache (only 1: intuition; only 1: order; only 1: order; only 1: order).	18.9396882057	18654
Coq.Structures.OrdersFacts.lt_strorder	40	2.2.7.14.0.8.37.1.0.0	search with cache (only 1: split; only 1: compute; only 1: intuition; only 1: elim (CRelationClasses.StrictOrder_Irreflexive x); only 1: simpl_relation; only 1: compute; only 1: simpl_relation; only 1: transitivity ltac:(y); only 1: auto with sets; only 1: auto with sets).	36.4883029461	93016
Coq.Structures.OrdersFacts.lt_compat	40	0.14	search with cache (only 1: unfold lt; only 1: auto with *).	2.58076620102	2052
Coq.Structures.OrdersFacts.le_lteq	40
Coq.Structures.OrdersFacts.compare_spec	40
Coq.Structures.OrdersFacts.compare_spec	40
Coq.Structures.OrdersFacts.compare_eq	40	1.0	search with cache (only 1: intros H; only 1: now apply compare_eq_iff).	0.0152478218079	3
Coq.Structures.OrdersFacts.compare_refl	40	4.0.0.0.0	search with cache (only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: now apply compare_eq_iff).	0.0389499664307	24
Coq.Structures.OrdersFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.compare_ge_iff	40
Coq.Structures.OrdersFacts.compare_ngt_iff	40	0	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0159599781036	1
Coq.Structures.OrdersFacts.compare_nlt_iff	40	3	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0211861133575	4
Coq.Structures.OrdersFacts.compare_nle_iff	40
Coq.Structures.OrdersFacts.compare_nge_iff	40
Coq.Structures.OrdersFacts.lt_irrefl	40
Coq.Structures.OrdersFacts.lt_eq_cases	40
Coq.Structures.OrdersFacts.leb_spec0	40
Coq.Structures.OrdersFacts.leb_spec	40
Coq.Structures.OrdersFacts.ltb_spec0	40
Coq.Structures.OrdersFacts.ltb_spec	40
Coq.Structures.OrdersFacts.leb_nle	40	0.4.5	search with cache (only 1: case leb_spec0; only 1: intuition; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).	0.880983829498	333
Coq.Structures.OrdersFacts.leb_gt	40	0.1.1.3.1.4	search with cache (only 1: case leb_spec0; only 1: symmetry; only 1: now rewrite <- compare_lt_iff, compare_nge_iff; only 1: constructor; only 1: now rewrite <- compare_lt_iff, compare_nge_iff; only 1: trivial).	1.60347986221	633
Coq.Structures.OrdersFacts.ltb_nlt	40	6.6.7	search with cache (only 1: case ltb_spec0; only 1: intuition; only 1: intuition).	2.89059495926	2419
Coq.Structures.OrdersFacts.ltb_ge	40	0.2.9	search with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).	0.797067165375	261
Coq.Structures.OrdersFacts.leb_refl	40	1.0.9.0	search with cache (only 1: apply leb_le; only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- compare_lt_iff, compare_refl).	0.430041790009	327
Coq.Structures.OrdersFacts.leb_antisym	40	1.2.3.4.0.8	search with cache (only 1: case ltb_spec0; only 1: now rewrite leb_nle, <- compare_lt_iff, compare_nge_iff; only 1: symmetry; only 1: symmetry; only 1: apply leb_le; only 1: now rewrite <- compare_le_iff, compare_ngt_iff).	2.2844991684	2371
Coq.Structures.OrdersFacts.ltb_irrefl	40	3.22.13	search with cache (only 1: case ltb_spec0; only 1: now rewrite <- compare_lt_iff, compare_refl; only 1: constructor).	14.3921408653	18259
Coq.Structures.OrdersFacts.ltb_antisym	40	1.0.8.1.6.0.11	search with cache (only 1: case leb_spec0; only 1: now rewrite ltb_nlt, <- compare_le_iff, compare_ngt_iff; only 1: symmetry; only 1: apply eq_true_iff_eq; only 1: intuition; only 1: apply ltb_lt; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	16.069480896	15364
Coq.Structures.OrdersFacts.eqb_compare	40
Coq.Structures.OrdersFacts.ltb_compare	40
Coq.Structures.OrdersFacts.leb_compare	40	1.1.1.0.1.0.6.20	search with cache (only 1: case leb_spec0; only 1: rewrite <- compare_le_iff; only 1: now destruct compare; only 1: rewrite <- compare_le_iff; only 1: destruct compare; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: split).	6.2418859005	7650
Coq.Structures.OrdersLists.In_eq	40	2.4.0.0.0.7	search with cache (only 1: simple induction l; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: intros; only 1: destruct H0; only 1: auto).	1.82011413574	1923
Coq.Structures.OrdersLists.ListIn_In	40	0.8.16.0	search with cache (only 1: intros; only 1: apply In_InA; only 1: intuition; only 1: auto).	3.33701586723	6666
Coq.Structures.OrdersLists.Inf_lt	40	4.0.2.0.0.3	search with cache (only 1: destruct l; only 1: intros; only 1: constructor; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: now rewrite H).	2.91387605667	1338
Coq.Structures.OrdersLists.Inf_eq	40	3.1	search with cache (only 1: intros; only 1: now rewrite H).	0.0405621528625	6
Coq.Structures.OrdersLists.Sort_Inf_In	40
Coq.Structures.OrdersLists.ListIn_Inf	40	1.0.3.6.4	search with cache (only 1: simple induction l; only 1: auto; only 1: simpl; only 1: intros; only 1: auto).	0.917410850525	556
Coq.Structures.OrdersLists.In_Inf	40	13.5.8	search with cache (only 1: simple induction l; only 1: auto; only 1: intuition).	3.12179803848	1902
Coq.Structures.OrdersLists.Inf_alt	40
Coq.Structures.OrdersLists.Sort_NoDup	40
Coq.Structures.OrdersLists.ltk_compat	40	1.2.1.0	search with cache (only 1: intros x x' Hx l l' Hl; only 1: setoid_rewrite Hl; only 1: setoid_rewrite Hx; only 1: intuition).	0.0436201095581	8
Coq.Structures.OrdersLists.ltk_compat'	40	1.8.7.3	search with cache (only 1: intros x x' Hx l l' Hl; only 1: setoid_rewrite Hl; only 1: setoid_rewrite Hx; only 1: eauto with *).	15.0599629879	1955
Coq.Structures.OrdersLists.pair_compat	40	1.2	search with cache (only 1: intros x x' Hx l l' Hl; only 1: intuition).	0.0503878593445	24
Coq.Structures.OrdersLists.ltk_not_eqk	40
Coq.Structures.OrdersLists.ltk_not_eqke	40	1.0.0	search with cache (only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: elim (StrictOrder_Irreflexive _ LT)).	0.0317318439484	4
Coq.Structures.OrdersLists.Inf_eq	40	19	search with cache (only 1: now intros <-).	0.277400016785	245
Coq.Structures.OrdersLists.Inf_lt	40
Coq.Structures.OrdersLists.Sort_Inf_In	40
Coq.Structures.OrdersLists.Sort_Inf_NotIn	40
Coq.Structures.OrdersLists.Sort_NoDupA	40
Coq.Structures.OrdersLists.Sort_In_cons_1	40
Coq.Structures.OrdersLists.Sort_In_cons_2	40
Coq.Structures.OrdersLists.Sort_In_cons_3	40
Coq.Structures.EqualitiesFacts.eqke_eqk	40	0	search with cache (only 1: firstorder).	0.01398396492	1
Coq.Structures.EqualitiesFacts.eqke_def	40	0	search with cache (only 1: firstorder).	0.0117909908295	1
Coq.Structures.EqualitiesFacts.eqke_def'	40	0	search with cache (only 1: reflexivity).	0.0117690563202	1
Coq.Structures.EqualitiesFacts.eqke_1	40	1	search with cache (only 1: firstorder).	0.0148499011993	2
Coq.Structures.EqualitiesFacts.eqke_2	40	1	search with cache (only 1: now destruct 1).	0.013748884201	2
Coq.Structures.EqualitiesFacts.eqk_def	40	0	search with cache (only 1: reflexivity).	0.0115029811859	1
Coq.Structures.EqualitiesFacts.eqk_def'	40	0	search with cache (only 1: reflexivity).	0.0114321708679	1
Coq.Structures.EqualitiesFacts.eqk_1	40	2	search with cache (only 1: firstorder).	0.0131311416626	3
Coq.Structures.EqualitiesFacts.InA_eqke_eqk	40	1.4	search with cache (only 1: do 2 rewrite InA_alt; only 1: firstorder).	0.0557889938354	15
Coq.Structures.EqualitiesFacts.InA_eqk_eqke	40	0.0.0	search with cache (only 1: induction 1; only 1: firstorder; only 1: firstorder).	0.0310339927673	3
Coq.Structures.EqualitiesFacts.InA_eqk	40
Coq.Structures.EqualitiesFacts.In_alt	40
Coq.Structures.EqualitiesFacts.In_alt'	40
Coq.Structures.EqualitiesFacts.In_alt2	40
Coq.Structures.EqualitiesFacts.In_nil	40	1.2.0	search with cache (only 1: rewrite In_alt; only 1: firstorder; only 1: now compute).	0.0819270610809	36
Coq.Structures.EqualitiesFacts.In_cons	40
Coq.Structures.EqualitiesFacts.MapsTo_compat	40
Coq.Structures.EqualitiesFacts.In_compat	40
Coq.Structures.EqualitiesFacts.MapsTo_eq	40	26.0	search with cache (only 1: unfold MapsTo; only 1: now intros <-).	4.90920495987	3813
Coq.Structures.EqualitiesFacts.In_eq	40	1	search with cache (only 1: now intros <-).	0.0925090312958	14
Coq.Structures.EqualitiesFacts.In_inv	40	0.0	search with cache (only 1: rewrite !In_alt2, Exists_cons; only 1: intuition).	0.0625011920929	2
Coq.Structures.EqualitiesFacts.In_inv_2	40	1.8.35.4	search with cache (only 1: firstorder; only 1: invlist InA; only 1: now compute; only 1: auto).	25.1403579712	21249
Coq.Structures.EqualitiesFacts.In_inv_3	40	2.2.34.0	search with cache (only 1: firstorder; only 1: invlist InA; only 1: firstorder; only 1: firstorder).	16.4082269669	14671
Coq.Structures.EqualitiesFacts.eq_dec	40
Coq.Structures.EqualitiesFacts.eq_dec	40
Coq.Structures.DecidableType.eqke_eqk	40	9.29.0	search with cache (only 1: intros; only 1: destruct H; only 1: intuition).	0.495399951935	1684
Coq.Structures.DecidableType.eqk_refl	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0161080360413	2
Coq.Structures.DecidableType.eqke_refl	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0174539089203	2
Coq.Structures.DecidableType.eqk_sym	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0180380344391	2
Coq.Structures.DecidableType.eqke_sym	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0245110988617	2
Coq.Structures.DecidableType.eqk_trans	40	47.0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition; only 1: eauto).	21.8141438961	48412
Coq.Structures.DecidableType.eqke_trans	40	3.4.3.0.10.0	search with cache (only 1: unfold eqke; only 1: intros; only 1: intuition; only 1: compute; only 1: eauto; only 1: congruence).	32.5845398903	10909
Coq.Structures.DecidableType.eqk_equiv	40	1.0.0.12.0	search with cache (only 1: unfold eqk, eqke; only 1: split; only 1: intuition; only 1: intuition; only 1: eauto).	0.14409995079	237
Coq.Structures.DecidableType.eqke_equiv	40	0.0.0.0	search with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).	0.0390839576721	4
Coq.Structures.DecidableType.InA_eqke_eqk	40
Coq.Structures.DecidableType.InA_eqk	40	0.4.2.38	search with cache (only 1: intros x l' H H0; only 1: induction 1; only 1: eauto; only 1: intuition).	6.59388303757	13266
Coq.Structures.DecidableType.In_alt	40
Coq.Structures.DecidableType.MapsTo_eq	40
Coq.Structures.DecidableType.In_eq	40
Coq.Structures.DecidableType.In_inv	40
Coq.Structures.DecidableType.In_inv_2	40	0.7.0	search with cache (only 1: inversion 1; only 1: intuition; only 1: eauto).	0.0399889945984	10
Coq.Structures.DecidableType.In_inv_3	40	0.0.3.2.0	search with cache (only 1: inversion_clear 1; only 1: intuition; only 1: compute in H0; only 1: intuition; only 1: auto using eqke_equiv).	0.0486960411072	10
Coq.Structures.OrdersAlt.lt_strorder	40
Coq.Structures.OrdersAlt.lt_compat	40
Coq.Structures.OrdersAlt.compare_spec	40
Coq.Structures.OrdersAlt.lt_not_eq	40	1.0.3.11.0.51	search with cache (only 1: intros x l' H H0; only 1: apply (StrictOrder_Irreflexive x); only 1: contradict H; only 1: rewrite <- H0; only 1: red; only 1: apply (StrictOrder_Irreflexive x)).	22.2742660046	36884
Coq.Structures.OrdersAlt.lt_trans	40	1.4.13.0	search with cache (only 1: intros x y L E; only 1: intros; only 1: rewrite E; only 1: auto).	0.231189012527	443
Coq.Structures.OrdersAlt.compare	40
Coq.Structures.OrdersAlt.eq_equiv	40
Coq.Structures.OrdersAlt.lt_strorder	40
Coq.Structures.OrdersAlt.lt_eq	40
Coq.Structures.OrdersAlt.eq_lt	40
Coq.Structures.OrdersAlt.lt_compat	40
Coq.Structures.OrdersAlt.compare_spec	40
Coq.Structures.OrdersAlt.eq_dec	40
Coq.Structures.OrdersAlt.compare_sym	40
Coq.Structures.OrdersAlt.compare_Eq	40
Coq.Structures.OrdersAlt.compare_Lt	40
Coq.Structures.OrdersAlt.compare_Gt	40
Coq.Structures.OrdersAlt.compare_trans	40
Coq.Structures.GenericMinMax.ge_not_lt	40
Coq.Structures.GenericMinMax.max_l	40
Coq.Structures.GenericMinMax.max_r	40
Coq.Structures.GenericMinMax.min_l	40
Coq.Structures.GenericMinMax.min_r	40	1.0.0.0.0.2.0.0.0	search with cache (only 1: intros; only 1: unfold min, gmin; only 1: case compare_spec; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt x y); only 1: auto; only 1: auto; only 1: auto with relations).	0.719636917114	610
Coq.Structures.GenericMinMax.max_spec	40
Coq.Structures.GenericMinMax.max_spec_le	40	0.0.0.0.0.0.5.0.0.5.3.0.2	search with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).	29.5530459881	24550
Coq.Structures.GenericMinMax.Proper_instance_0	40	10.1.1.1.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros R R' EQ a a' Ha WF; only 1: order).	3.32959389687	4055
Coq.Structures.GenericMinMax.max_compat	40
Coq.Structures.GenericMinMax.max_unicity	40
Coq.Structures.GenericMinMax.max_unicity_ext	40
Coq.Structures.GenericMinMax.max_mono	40
Coq.Structures.GenericMinMax.max_id	40	3.11	search with cache (only 1: apply max_r; only 1: order).	0.0878958702087	97
Coq.Structures.GenericMinMax.max_assoc	40
Coq.Structures.GenericMinMax.max_comm	40
Coq.Structures.GenericMinMax.le_max_l	40	3.0.3.0.6	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).	0.71307015419	525
Coq.Structures.GenericMinMax.le_max_r	40	0	search with cache (only 1: solve_max).	0.0193090438843	1
Coq.Structures.GenericMinMax.max_l_iff	40	11	search with cache (only 1: solve_max).	0.423621177673	213
Coq.Structures.GenericMinMax.max_r_iff	40	0	search with cache (only 1: solve_max).	0.0306921005249	1
Coq.Structures.GenericMinMax.max_le	40	0.0.3.0.0.3.5	search with cache (only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order).	14.5484349728	9759
Coq.Structures.GenericMinMax.max_le_iff	40
Coq.Structures.GenericMinMax.max_lt_iff	40
Coq.Structures.GenericMinMax.max_lub_l	40	3	search with cache (only 1: solve_max).	0.0210468769073	4
Coq.Structures.GenericMinMax.max_lub_r	40	3	search with cache (only 1: solve_max).	0.0212841033936	4
Coq.Structures.GenericMinMax.max_lub	40	3	search with cache (only 1: solve_max).	0.0217781066895	4
Coq.Structures.GenericMinMax.max_lub_iff	40	3.3.0	search with cache (only 1: split; only 1: solve_max; only 1: solve_max).	0.0434908866882	9
Coq.Structures.GenericMinMax.max_lub_lt	40	0.0.0.0.1	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order)).	0.0498740673065	20
Coq.Structures.GenericMinMax.max_lub_lt_iff	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.0817248821259	25
Coq.Structures.GenericMinMax.max_le_compat_l	40
Coq.Structures.GenericMinMax.max_le_compat_r	40	0.0.0	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0321910381317	3
Coq.Structures.GenericMinMax.max_le_compat	40	0.1.6	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0750229358673	17
Coq.Structures.GenericMinMax.min_spec	40
Coq.Structures.GenericMinMax.min_spec_le	40	0.0.0.0.0.3.0.3.3.0.2	search with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: order; only 1: apply min_l; only 1: order; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: intuition; only 1: now apply min_r).	20.4730870724	10866
Coq.Structures.GenericMinMax.min_compat	40
Coq.Structures.GenericMinMax.min_unicity	40
Coq.Structures.GenericMinMax.min_unicity_ext	40
Coq.Structures.GenericMinMax.min_mono	40
Coq.Structures.GenericMinMax.min_id	40	4.1	search with cache (only 1: apply min_l; only 1: order).	0.0200860500336	7
Coq.Structures.GenericMinMax.min_assoc	40
Coq.Structures.GenericMinMax.min_comm	40
Coq.Structures.GenericMinMax.le_min_r	40	3.3.0.3	search with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).	0.385589122772	202
Coq.Structures.GenericMinMax.le_min_l	40	0	search with cache (only 1: solve_min).	0.0189800262451	1
Coq.Structures.GenericMinMax.min_l_iff	40	12	search with cache (only 1: solve_min).	0.775543928146	444
Coq.Structures.GenericMinMax.min_r_iff	40	0	search with cache (only 1: solve_min).	0.0231239795685	1
Coq.Structures.GenericMinMax.min_le	40	0.3.2.3.0.7	search with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: left; only 1: order; only 1: right; only 1: order).	7.78843402863	6048
Coq.Structures.GenericMinMax.min_le_iff	40
Coq.Structures.GenericMinMax.min_lt_iff	40	0.1.0.1.1.0.0.4	search with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order; only 1: order; only 1: order || (right; order) || (left; order); only 1: order; only 1: order).	3.66251301765	1694
Coq.Structures.GenericMinMax.min_glb_l	40	0	search with cache (only 1: solve_min).	0.0210127830505	1
Coq.Structures.GenericMinMax.min_glb_r	40	0	search with cache (only 1: solve_min).	0.0209500789642	1
Coq.Structures.GenericMinMax.min_glb	40	0	search with cache (only 1: solve_min).	0.0214159488678	1
Coq.Structures.GenericMinMax.min_glb_iff	40	0.0.0	search with cache (only 1: split; only 1: solve_min; only 1: solve_min).	0.0605049133301	3
Coq.Structures.GenericMinMax.min_glb_lt	40	0.0.0.0.1	search with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order)).	0.054582118988	21
Coq.Structures.GenericMinMax.min_glb_lt_iff	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.077663898468	25
Coq.Structures.GenericMinMax.min_le_compat_l	40
Coq.Structures.GenericMinMax.min_le_compat_r	40	0.0.0	search with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.0325400829315	3
Coq.Structures.GenericMinMax.min_le_compat	40	3.4.0	search with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.0400519371033	10
Coq.Structures.GenericMinMax.min_max_absorption	40	0.0	search with cache (only 1: apply max_r || apply max_l; only 1: solve_min).	0.0208020210266	2
Coq.Structures.GenericMinMax.max_min_absorption	40	5.5	search with cache (only 1: apply min_l; only 1: solve_max).	0.151176929474	90
Coq.Structures.GenericMinMax.max_min_distr	40
Coq.Structures.GenericMinMax.min_max_distr	40
Coq.Structures.GenericMinMax.max_min_modular	40
Coq.Structures.GenericMinMax.min_max_modular	40
Coq.Structures.GenericMinMax.max_min_disassoc	40
Coq.Structures.GenericMinMax.max_min_antimono	40	0.2.1.5.0.0.0.1.5.0.1.0	search with cache (only 1: intros Eqf Lef x y; only 1: destruct (min_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: order; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: order; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).	21.2215890884	15124
Coq.Structures.GenericMinMax.min_max_antimono	40
Coq.Structures.GenericMinMax.max_case_strong	40
Coq.Structures.GenericMinMax.max_case	40
Coq.Structures.GenericMinMax.max_dec	40
Coq.Structures.GenericMinMax.min_case_strong	40
Coq.Structures.GenericMinMax.min_case	40
Coq.Structures.GenericMinMax.min_dec	40	4.4.0.0.0.0.0.0.0.15	search with cache (only 1: apply min_case_strong; only 1: intros x y H [E| E]; only 1: left; only 1: rewrite <- H; only 1: auto; only 1: right; only 1: rewrite <- H; only 1: auto; only 1: auto with relations; only 1: auto with relations).	35.0116939545	69195
Coq.Structures.GenericMinMax.max_monotone	40	1.35	search with cache (only 1: apply max_mono; only 1: eauto with *).	2.73551917076	4608
Coq.Structures.GenericMinMax.min_monotone	40	0.37	search with cache (only 1: apply min_mono; only 1: congruence).	3.21670389175	5704
Coq.Structures.GenericMinMax.min_max_antimonotone	40
Coq.Structures.GenericMinMax.max_min_antimonotone	40
Coq.Structures.GenericMinMax.max_case_strong	40	0.0.0.5.0	search with cache (only 1: intros Compat Hl Hr; only 1: apply max_case_strong; only 1: intros; only 1: rewrite <- H; only 1: auto).	0.0214958190918	14
Coq.Structures.GenericMinMax.max_case	40	0.0.1.0	search with cache (only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: auto; only 1: auto).	0.018981218338	5
Coq.Structures.GenericMinMax.max_dec	40	6.6.0.8	search with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).	0.827569007874	1543
Coq.Structures.GenericMinMax.min_case_strong	40	0.6.1	search with cache (only 1: intros Compat Hl Hr; only 1: apply min_case_strong; only 1: congruence).	0.0937068462372	39
Coq.Structures.GenericMinMax.min_case	40	0.0.2.0	search with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: auto; only 1: auto).	0.0184540748596	6
Coq.Structures.GenericMinMax.min_dec	40	6.6.0.1	search with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).	0.447844028473	571
Coq.Structures.GenericMinMax.compare_spec	40
Coq.Structures.OrderedTypeAlt.eq_refl	40
Coq.Structures.OrderedTypeAlt.eq_sym	40
Coq.Structures.OrderedTypeAlt.lt_not_eq	40	0.1.0.1.0	search with cache (only 1: intro x; only 1: unfold eq; only 1: intros; only 1: rewrite H; only 1: discriminate).	0.311647176743	19
Coq.Structures.OrderedTypeAlt.compare	40
Coq.Structures.OrderedTypeAlt.eq_dec	40
Coq.Structures.OrderedTypeAlt.compare_sym	40
Coq.Structures.OrderedTypeAlt.compare_trans	40
Coq.ZArith.Znat.nat_N_Z	40	0.0.2.3	search with cache (only 1: induction n; only 1: now f_equal; only 1: simpl; only 1: trivial).	0.0209538936615	14
Coq.ZArith.Znat.N_nat_Z	40	0.0.0.1.0.0.2.1.1.27	search with cache (only 1: induction n; only 1: trivial; only 1: simpl N.to_nat; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	0.857283115387	1650
Coq.ZArith.Znat.positive_nat_Z	40	0.0.0.0.0	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.0143718719482	5
Coq.ZArith.Znat.positive_N_Z	40	0	search with cache (only 1: trivial).	0.0057520866394	1
Coq.ZArith.Znat.positive_N_nat	40	1.0	search with cache (only 1: simpl N.to_nat; only 1: trivial).	0.00650191307068	3
Coq.ZArith.Znat.positive_nat_N	40	0.0.0.0.0.0.1	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	0.0168790817261	8
Coq.ZArith.Znat.Z_N_nat	40	0.0.0.3	search with cache (only 1: induction n; only 1: now f_equal; only 1: trivial; only 1: trivial).	0.016086101532	7
Coq.ZArith.Znat.Z_nat_N	40	0.1.0.0.0.1.1.0.20	search with cache (only 1: induction n; only 1: now f_equal; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: simpl; only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: trivial).	0.807021856308	827
Coq.ZArith.Znat.Zabs_N_nat	40	0	search with cache (only 1: now destruct n).	0.00713419914246	1
Coq.ZArith.Znat.Zabs_nat_N	40	1.0.1.0.0.0.1	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply positive_nat_N; only 1: simpl; only 1: apply positive_nat_N).	0.0164721012115	10
Coq.ZArith.Znat.id	40	0.0.1.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: trivial).	0.00978803634644	5
Coq.ZArith.Znat.inj	40
Coq.ZArith.Znat.inj_iff	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3	search with cache (only 1: split; only 1: destruct n, m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: destruct n, m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	8.6713988781	14492
Coq.ZArith.Znat.is_nonneg	40	6	search with cache (only 1: now destruct n).	0.0242459774017	15
Coq.ZArith.Znat.inj_0	40	0	search with cache (only 1: trivial).	0.00543999671936	1
Coq.ZArith.Znat.inj_pos	40	0	search with cache (only 1: reflexivity).	0.00517511367798	1
Coq.ZArith.Znat.inj_compare	40	0.0.0.0.0.0.0.0.2	search with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0670878887177	62
Coq.ZArith.Znat.inj_le	40	6	search with cache (only 1: now destruct n, m).	0.119068861008	65
Coq.ZArith.Znat.inj_lt	40	7	search with cache (only 1: now destruct n, m).	0.0710530281067	43
Coq.ZArith.Znat.inj_ge	40	8	search with cache (only 1: now destruct n, m).	0.0580480098724	32
Coq.ZArith.Znat.inj_gt	40	0.5	search with cache (only 1: unfold Z.lt, Z.gt; only 1: now rewrite inj_compare).	0.0270318984985	16
Coq.ZArith.Znat.inj_abs_N	40
Coq.ZArith.Znat.inj_add	40	1.0.0.0.0.0.2	search with cache (only 1: destruct n, m; only 1: trivial; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: trivial).	0.020546913147	11
Coq.ZArith.Znat.inj_mul	40	0.0.0.0.0.0.0.2	search with cache (only 1: destruct n, m; only 1: trivial; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: reflexivity).	0.0201108455658	10
Coq.ZArith.Znat.inj_sub_max	40
Coq.ZArith.Znat.inj_sub	40
Coq.ZArith.Znat.inj_succ	40	0.2.0.7	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.0493829250336	65
Coq.ZArith.Znat.inj_pred_max	40	0.0.0.0.0.0.20.0.0.15	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	1.4120759964	4157
Coq.ZArith.Znat.inj_pred	40	0.0.0.0.0.0.8.0.0.11	search with cache (only 1: destruct n; only 1: unfold Z.pred; only 1: now rewrite N.pred_sub, inj_sub_max; only 1: destruct p; only 1: unfold Z.pred; only 1: now rewrite N.pred_sub, inj_sub_max; only 1: unfold Z.pred; only 1: now rewrite N.pred_sub, inj_sub_max; only 1: unfold Z.pred; only 1: now rewrite N.pred_sub, inj_sub_max).	3.90410590172	4749
Coq.ZArith.Znat.inj_min	40
Coq.ZArith.Znat.inj_max	40
Coq.ZArith.Znat.inj_div	40
Coq.ZArith.Znat.inj_mod	40
Coq.ZArith.Znat.inj_quot	40
Coq.ZArith.Znat.inj_rem	40
Coq.ZArith.Znat.inj_div2	40	0.0.0.35.4.0.18	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	6.55644893646	23330
Coq.ZArith.Znat.inj_quot2	40	1.0.0	search with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: now destruct p).	0.0111482143402	4
Coq.ZArith.Znat.inj_pow	40
Coq.ZArith.Znat.inj_testbit	40
Coq.ZArith.Znat.id	40	4.2	search with cache (only 1: intros; only 1: now destruct n).	0.0134451389313	8
Coq.ZArith.Znat.inj	40	0.0.0.0.1.0.1.0.1.3.0.1.0.0.5	search with cache (only 1: destruct n, m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: easy; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: now destruct 1 || trivial; only 1: now destruct 1 || trivial; only 1: now destruct 1 || trivial).	11.1444649696	11767
Coq.ZArith.Znat.inj_iff	40	0.0.0.0.0.3.0	search with cache (only 1: intros; only 1: split; only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now f_equal; only 1: intros; only 1: now f_equal).	0.0732669830322	19
Coq.ZArith.Znat.inj_0	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.00614094734192	2
Coq.ZArith.Znat.inj_pos	40	0.0	search with cache (only 1: simpl; only 1: f_equal).	0.00634694099426	2
Coq.ZArith.Znat.inj_neg	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.00606799125671	2
Coq.ZArith.Znat.inj_add	40	14.10.0	search with cache (only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now destruct n, m).	7.33171606064	7653
Coq.ZArith.Znat.inj_mul	40	1.0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2).	1.43310308456	620
Coq.ZArith.Znat.inj_succ	40	1.0.3.0.3	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: now destruct 1 || now destruct 2).	0.212574005127	145
Coq.ZArith.Znat.inj_sub	40
Coq.ZArith.Znat.inj_pred	40	0.1.0.0.6.0.8	search with cache (only 1: destruct n; only 1: Nat2N.nat2N; only 1: destruct p; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: trivial).	0.820763111115	716
Coq.ZArith.Znat.inj_compare	40	7.0	search with cache (only 1: intros; only 1: now destruct n, m).	0.0341501235962	13
Coq.ZArith.Znat.inj_le	40	16.3	search with cache (only 1: unfold Z.le; only 1: now destruct n, m).	8.89166998863	7613
Coq.ZArith.Znat.inj_lt	40	22.2	search with cache (only 1: unfold Z.le, N.le; only 1: now destruct n, m).	10.4294071198	11153
Coq.ZArith.Znat.inj_min	40
Coq.ZArith.Znat.inj_max	40
Coq.ZArith.Znat.inj_div	40
Coq.ZArith.Znat.inj_mod	40
Coq.ZArith.Znat.inj_quot	40
Coq.ZArith.Znat.inj_rem	40
Coq.ZArith.Znat.inj_div2	40	0.10.0.11	search with cache (only 1: destruct n; only 1: Nat2N.nat2N; only 1: now destruct p; only 1: trivial).	0.689046859741	566
Coq.ZArith.Znat.inj_quot2	40	1.1.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	0.0130341053009	6
Coq.ZArith.Znat.inj_pow	40
Coq.ZArith.Znat.inj_testbit	40
Coq.ZArith.Znat.abs_N_spec	40	0.0.0.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.114518880844	7
Coq.ZArith.Znat.abs_N_nonneg	40	0	search with cache (only 1: now destruct n).	0.108736991882	1
Coq.ZArith.Znat.id_abs	40	1	search with cache (only 1: now destruct n).	0.00846600532532	2
Coq.ZArith.Znat.id	40	4	search with cache (only 1: now destruct n).	0.00694298744202	5
Coq.ZArith.Znat.inj_0	40	0	search with cache (only 1: trivial).	0.00522804260254	1
Coq.ZArith.Znat.inj_pos	40	0	search with cache (only 1: trivial).	0.00550198554993	1
Coq.ZArith.Znat.inj_neg	40	0	search with cache (only 1: trivial).	0.00541019439697	1
Coq.ZArith.Znat.inj_opp	40	0.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: trivial).	0.0103528499603	4
Coq.ZArith.Znat.inj_succ	40	1.0.3.1.1	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: now destruct 1).	0.433791875839	246
Coq.ZArith.Znat.inj_add	40	0.1.0.1.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).	1.53835511208	819
Coq.ZArith.Znat.inj_mul	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.0242829322815	10
Coq.ZArith.Znat.inj_sub	40
Coq.ZArith.Znat.inj_pred	40	0.3.0.0.0.5.2.3.3	search with cache (only 1: destruct n; only 1: simpl; only 1: easy; only 1: destruct p; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r).	22.3910570145	22784
Coq.ZArith.Znat.inj_compare	40	6.0	search with cache (only 1: intros Hn Hm; only 1: now destruct n, m).	0.0348701477051	17
Coq.ZArith.Znat.inj_le	40	0.0.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).	0.00996780395508	3
Coq.ZArith.Znat.inj_lt	40	0.0.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.lt, N.lt; only 1: now rewrite inj_compare).	0.0099151134491	3
Coq.ZArith.Znat.inj_min	40
Coq.ZArith.Znat.inj_max	40
Coq.ZArith.Znat.inj_quot	40
Coq.ZArith.Znat.inj_rem	40
Coq.ZArith.Znat.inj_pow	40
Coq.ZArith.Znat.inj_succ_abs	40	0.1.0.1.0.1.15.4	search with cache (only 1: unfold Z.succ; only 1: destruct n; only 1: rewrite Z2N.inj_add by easy; only 1: apply N.add_1_r; only 1: rewrite Z2N.inj_add by easy; only 1: apply N.add_1_r; only 1: rewrite Z2N.inj_add by easy; only 1: apply N.add_1_r).	4.08913183212	5164
Coq.ZArith.Znat.inj_add_abs	40	7	search with cache (only 1: now destruct n, m).	0.0738711357117	59
Coq.ZArith.Znat.inj_mul_abs	40	0	search with cache (only 1: now destruct n, m).	0.00978302955627	1
Coq.ZArith.Znat.inj_0	40	0	search with cache (only 1: trivial).	0.00625610351562	1
Coq.ZArith.Znat.inj_succ	40	0.0.1.4.0	search with cache (only 1: simpl; only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.0139100551605	10
Coq.ZArith.Znat.is_nonneg	40	5.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: now destruct n).	0.0254621505737	25
Coq.ZArith.Znat.id	40	3.0.0.1.1	search with cache (only 1: destruct n; only 1: trivial; only 1: destruct n; only 1: trivial; only 1: apply SuccNat2Pos.id_succ).	0.0213251113892	16
Coq.ZArith.Znat.inj	40	11.0.6	search with cache (only 1: intros; only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial; only 1: now f_equal).	0.6283390522	1048
Coq.ZArith.Znat.inj_iff	40	3.0.0.0.3	search with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros H; only 1: now f_equal).	0.141618013382	57
Coq.ZArith.Znat.inj_compare	40
Coq.ZArith.Znat.inj_le	40
Coq.ZArith.Znat.inj_lt	40
Coq.ZArith.Znat.inj_ge	40
Coq.ZArith.Znat.inj_gt	40
Coq.ZArith.Znat.inj_abs_nat	40
Coq.ZArith.Znat.inj_add	40
Coq.ZArith.Znat.inj_mul	40
Coq.ZArith.Znat.inj_sub_max	40
Coq.ZArith.Znat.inj_sub	40
Coq.ZArith.Znat.inj_pred_max	40
Coq.ZArith.Znat.inj_pred	40
Coq.ZArith.Znat.inj_min	40
Coq.ZArith.Znat.inj_max	40
Coq.ZArith.Znat.id	40	0.1.0.0.0.1.1.3.6.0.1	search with cache (only 1: destruct n; only 1: reflexivity; only 1: intros; only 1: now destruct Hn || now destruct Hm || clear; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: simpl; only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: now destruct 1 || trivial).	8.67496609688	12645
Coq.ZArith.Znat.inj	40	2.0.0	search with cache (only 1: intros; only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial; only 1: now f_equal).	0.0176451206207	5
Coq.ZArith.Znat.inj_iff	40	0.0.0.0.0.2.0	search with cache (only 1: intros; only 1: split; only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now f_equal; only 1: intros; only 1: now f_equal).	0.0277659893036	9
Coq.ZArith.Znat.inj_0	40	1	search with cache (only 1: now subst).	0.00544595718384	2
Coq.ZArith.Znat.inj_pos	40	0	search with cache (only 1: now subst).	0.00542783737183	1
Coq.ZArith.Znat.inj_neg	40	0	search with cache (only 1: reflexivity).	0.00538611412048	1
Coq.ZArith.Znat.inj_add	40	0.1.0.1.2.0.3.0.0.0.0.1	search with cache (only 1: destruct n, m; only 1: reflexivity; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros; only 1: now destruct Hn || now destruct Hm || clear; only 1: apply Pos2Nat.inj_add; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).	22.7089190483	19887
Coq.ZArith.Znat.inj_mul	40	1.0.0.0.2.0.2.0.0.0.0.1	search with cache (only 1: destruct n, m; only 1: reflexivity; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros Hn Hm; only 1: now destruct Hn || now destruct Hm || clear; only 1: apply Pos2Nat.inj_mul; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2).	15.0229549408	14236
Coq.ZArith.Znat.inj_succ	40
Coq.ZArith.Znat.inj_sub	40
Coq.ZArith.Znat.inj_pred	40
Coq.ZArith.Znat.inj_compare	40
Coq.ZArith.Znat.inj_le	40
Coq.ZArith.Znat.inj_lt	40
Coq.ZArith.Znat.inj_min	40
Coq.ZArith.Znat.inj_max	40
Coq.ZArith.Znat.abs_nat_spec	40	0	search with cache (only 1: now destruct n).	0.00741195678711	1
Coq.ZArith.Znat.abs_nat_nonneg	40	0	search with cache (only 1: now destruct n).	0.0091700553894	1
Coq.ZArith.Znat.id_abs	40	1.0.0.0.1.0.1.0.0.0.1.0.0.0.4	search with cache (only 1: destruct n; only 1: simpl; only 1: now subst; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	3.94658708572	5996
Coq.ZArith.Znat.id	40	1.0.5	search with cache (only 1: destruct n; only 1: trivial; only 1: apply SuccNat2Pos.id_succ).	0.00873494148254	9
Coq.ZArith.Znat.inj_0	40	0	search with cache (only 1: trivial).	0.00513696670532	1
Coq.ZArith.Znat.inj_pos	40	0	search with cache (only 1: trivial).	0.00454497337341	1
Coq.ZArith.Znat.inj_neg	40	0	search with cache (only 1: reflexivity).	0.00510787963867	1
Coq.ZArith.Znat.inj_succ	40
Coq.ZArith.Znat.inj_add	40	1.1.0.1.2.0.3.0.0.0.0.2	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros; only 1: now destruct Hn || now destruct Hm || clear; only 1: apply Pos2Nat.inj_add; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: now destruct 1).	16.5379500389	15990
Coq.ZArith.Znat.inj_mul	40	4.4.0.4.2.0.0.0.0.7	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: apply Pos2Nat.inj_mul; only 1: apply Pos2Nat.inj_mul; only 1: trivial; only 1: apply Pos2Nat.inj_mul; only 1: apply Pos2Nat.inj_mul).	9.3614449501	19129
Coq.ZArith.Znat.inj_sub	40
Coq.ZArith.Znat.inj_pred	40
Coq.ZArith.Znat.inj_compare	40
Coq.ZArith.Znat.inj_le	40	0.0.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.le; only 1: now rewrite nat_compare_le, Z2Nat.inj_compare).	0.0112490653992	3
Coq.ZArith.Znat.inj_lt	40	0.0.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).	0.0107479095459	3
Coq.ZArith.Znat.inj_min	40
Coq.ZArith.Znat.inj_max	40
Coq.ZArith.Znat.inj_succ_abs	40	0.0.1.3	search with cache (only 1: destruct n; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ).	0.0286509990692	8
Coq.ZArith.Znat.inj_add_abs	40	1.1.1.1.1.1.1.1.1.7	search with cache (only 1: destruct n, m; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add).	10.9703640938	6754
Coq.ZArith.Znat.inj_mul_abs	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul).	13.1023361683	17814
Coq.ZArith.Znat.inj_neq	40
Coq.ZArith.Znat.inj_minus2	40
Coq.ZArith.Wf_Z.Z_of_nat_complete	40
Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40	0.1.0.0	search with cache (only 1: intros H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	0.0234129428864	5
Coq.ZArith.Wf_Z.Z_of_nat_prop	40
Coq.ZArith.Wf_Z.Z_of_nat_set	40
Coq.ZArith.Wf_Z.natlike_ind	40
Coq.ZArith.Wf_Z.natlike_rec	40
Coq.ZArith.Wf_Z.R_wf	40
Coq.ZArith.Wf_Z.natlike_rec2	40
Coq.ZArith.Wf_Z.natlike_rec3	40	0.0.1.0.1.2.4.5.1.1.3.0.0.0.0.0.0	search with cache (only 1: intros P Ho Hrec; only 1: induction z as [z IH] using (well_founded_induction_type R_wf); only 1: destruct z; only 1: intros Hz; only 1: apply Ho; only 1: intros Hz; only 1: set (y := Z.pred (Z.pos p)); only 1: assert (LE : 0 <= y) by (unfold y; now apply Z.lt_le_pred); only 1: assert (EQ : Z.pos p = Z.succ y) by (unfold y; now rewrite Z.succ_pred); only 1: apply Hrec, IH; only 1: split; only 1: split; only 1: trivial; only 1: apply Z.lt_pred_l; only 1: trivial; only 1: intros Hz; only 1: now destruct Hz).	37.9271860123	75910
Coq.ZArith.Wf_Z.Zlt_0_rec	40
Coq.ZArith.Wf_Z.Zlt_0_ind	40	0.1.2.0.7.0.0	search with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial).	3.57024478912	3183
Coq.ZArith.Wf_Z.Z_lt_rec	40	0.0.0.1.0.0.0.0.0.1.0.0.1.0.0.0.1	search with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: destruct x; only 1: intros Hz; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: assert (0 < 0) by now apply Z.le_lt_trans with y; only 1: discriminate; only 1: intros Hz; only 1: assert (EQ : 0 <= Z.pred (Z.pos p)) by now apply Z.lt_le_pred; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: intros Hz; only 1: now destruct Hz).	13.8459358215	10124
Coq.ZArith.Wf_Z.Z_lt_induction	40	2.4.1	search with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: auto).	0.101362228394	69
Coq.ZArith.Wf_Z.Zlt_lower_bound_rec	40
Coq.ZArith.Wf_Z.Zlt_lower_bound_ind	40	0.0.0.0.0.0.0.0.0.1.1.0.0.0.0.1	search with cache (only 1: intros P z Hrec x Hx; only 1: rewrite <- (Z.sub_simpl_r x z); only 1: apply Z.le_0_sub in Hx; only 1: pattern (x - z); only 1: apply Zlt_0_rec; only 1: clear x Hx; only 1: intros x IH Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: rewrite <- (Z.sub_simpl_r y z); only 1: apply IH; only 1: split; only 1: now rewrite Z.le_0_sub; only 1: now apply Z.lt_sub_lt_add_r; only 1: now rewrite <- (Z.add_le_mono_r 0 x z); only 1: trivial).	6.46421098709	7169
Coq.ZArith.Zpow_facts.Zpower_pos_1_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_pos	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone	40
Coq.ZArith.Zpow_facts.Zpower_lt_monotone	40
Coq.ZArith.Zpow_facts.Zpower_gt_1	40
Coq.ZArith.Zpow_facts.Zmult_power	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	40
Coq.ZArith.Zpow_facts.Zpower2_lt_lin	40
Coq.ZArith.Zpow_facts.Zpower2_le_lin	40
Coq.ZArith.Zpow_facts.Zpower2_Psize	40
Coq.ZArith.Zpow_facts.Zpower_mod	40
Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	40
Coq.ZArith.Zpow_facts.Zpow_mod_correct	40
Coq.ZArith.Zpow_facts.Zpower_divide	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower	40
Coq.ZArith.Zpow_facts.prime_power_prime	40
Coq.ZArith.Zpow_facts.Zdivide_power_2	40
Coq.ZArith.Zpow_def.Zpower_theory	40
Coq.ZArith.Zcompare.Zcompare_Gt_trans	40
Coq.ZArith.Zcompare.Zcompare_opp	40	1.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite <- Pos.compare_antisym; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite <- Pos.compare_antisym).	28.8926920891	31323
Coq.ZArith.Zcompare.Zcompare_Gt_spec	40
Coq.ZArith.Zcompare.Zcompare_plus_compat	40
Coq.ZArith.Zcompare.Zplus_compare_compat	40
Coq.ZArith.Zcompare.Zcompare_succ_Gt	40
Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40
Coq.ZArith.Zcompare.Zcompare_succ_compat	40
Coq.ZArith.Zcompare.Zcompare_mult_compat	40
Coq.ZArith.Zcompare.Zmult_compare_compat_l	40
Coq.ZArith.Zcompare.Zmult_compare_compat_r	40
Coq.ZArith.Zcompare.Zcompare_elim	40
Coq.ZArith.Zcompare.Zcompare_eq_case	40
Coq.ZArith.Zcompare.Zle_compare	40	1.3.0.1.8	search with cache (only 1: intros n Hn IH; only 1: case Z.compare_spec; only 1: trivial; only 1: now Z.swap_greater; only 1: Z.order).	1.16330909729	1421
Coq.ZArith.Zcompare.Zlt_compare	40	1.0.1.0.9	search with cache (only 1: intros n Hn; only 1: case Z.compare_spec; only 1: Z.order; only 1: trivial; only 1: Z.order).	0.497899055481	528
Coq.ZArith.Zcompare.Zge_compare	40	0.0.0.0.1	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: trivial).	0.0889871120453	31
Coq.ZArith.Zcompare.Zgt_compare	40	0.1	search with cache (only 1: intros x y H; only 1: now rewrite H).	0.0563051700592	20
Coq.ZArith.Zquot.Zquot_0_r	40
Coq.ZArith.Zquot.Zrem_0_r	40	12	search with cache (only 1: now destruct a).	0.0310809612274	46
Coq.ZArith.Zquot.Zrem_0_l	40	0	search with cache (only 1: now destruct a).	0.0139288902283	1
Coq.ZArith.Zquot.Zquot_0_l	40	0	search with cache (only 1: now destruct a).	0.0139329433441	1
Coq.ZArith.Zquot.Z_rem_same	40
Coq.ZArith.Zquot.Z_rem_mult	40
Coq.ZArith.Zquot.Zquot_opp_l	40
Coq.ZArith.Zquot.Zquot_opp_r	40
Coq.ZArith.Zquot.Zrem_opp_l	40
Coq.ZArith.Zquot.Zrem_opp_r	40
Coq.ZArith.Zquot.Zquot_opp_opp	40
Coq.ZArith.Zquot.Zrem_opp_opp	40
Coq.ZArith.Zquot.Zrem_sgn	40
Coq.ZArith.Zquot.Zrem_sgn2	40
Coq.ZArith.Zquot.Zrem_lt_pos	40
Coq.ZArith.Zquot.Zrem_lt_neg	40
Coq.ZArith.Zquot.Zrem_lt_pos_pos	40	0.1.0.1.0.0	search with cache (only 1: intros; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: intros; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: generalize (Z.rem_nonneg a b), (Z.rem_bound_abs a b); only 1: lia).	0.0615980625153	8
Coq.ZArith.Zquot.Zrem_lt_pos_neg	40	0.0.0	search with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: lia).	0.0268049240112	3
Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.1.0.1.0.0	search with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).	0.0489919185638	8
Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.2.0.1.0.0	search with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).	0.296132087708	13
Coq.ZArith.Zquot.Remainder_equiv	40
Coq.ZArith.Zquot.Zquot_mod_unique_full	40
Coq.ZArith.Zquot.Zquot_unique_full	40
Coq.ZArith.Zquot.Zrem_unique_full	40	0.0.0.1.1	search with cache (only 1: intros; only 1: destruct (Zquot_mod_unique_full a b q r); only 1: auto; only 1: auto; only 1: auto).	0.113072156906	42
Coq.ZArith.Zquot.Z_quot_pos	40
Coq.ZArith.Zquot.Z_quot_lt	40
Coq.ZArith.Zquot.Z_quot_monotone	40
Coq.ZArith.Zquot.Z_mult_quot_le	40
Coq.ZArith.Zquot.Z_mult_quot_ge	40
Coq.ZArith.Zquot.Z_quot_exact_full	40
Coq.ZArith.Zquot.Zrem_le	40
Coq.ZArith.Zquot.Zquot_le_upper_bound	40
Coq.ZArith.Zquot.Zquot_lt_upper_bound	40
Coq.ZArith.Zquot.Zquot_le_lower_bound	40
Coq.ZArith.Zquot.Zquot_sgn	40
Coq.ZArith.Zquot.Z_rem_plus	40
Coq.ZArith.Zquot.Z_quot_plus	40
Coq.ZArith.Zquot.Z_quot_plus_l	40
Coq.ZArith.Zquot.Zquot_mult_cancel_r	40
Coq.ZArith.Zquot.Zquot_mult_cancel_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_r	40
Coq.ZArith.Zquot.Zrem_rem	40
Coq.ZArith.Zquot.Zmult_rem	40
Coq.ZArith.Zquot.Zplus_rem	40
Coq.ZArith.Zquot.Zplus_rem_idemp_l	40
Coq.ZArith.Zquot.Zplus_rem_idemp_r	40
Coq.ZArith.Zquot.Zmult_rem_idemp_l	40
Coq.ZArith.Zquot.Zmult_rem_idemp_r	40
Coq.ZArith.Zquot.Zquot_Zquot	40
Coq.ZArith.Zquot.Zquot_mult_le	40
Coq.ZArith.Zquot.Zrem_divides	40
Coq.ZArith.Zquot.Zquot2_odd_remainder	40
Coq.ZArith.Zquot.Zrem_odd	40
Coq.ZArith.Zquot.Zrem_even	40
Coq.ZArith.Zquot.Zeven_rem	40	0.0.0.0.0.3.0.5	search with cache (only 1: intros [| p| p]; only 1: rewrite Zrem_odd, Zodd_even_bool; only 1: simpl; only 1: tauto; only 1: rewrite Zrem_odd, Zodd_even_bool; only 1: now destruct Z.even; only 1: rewrite Zrem_odd, Zodd_even_bool; only 1: now destruct Z.even).	1.06385397911	1099
Coq.ZArith.Zquot.Zodd_rem	40	1.1.0.0.0.0	search with cache (only 1: intros a; only 1: rewrite Zrem_even; only 1: destruct a as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	0.035276889801	8
Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	40
Coq.ZArith.Zquot.Zquot_Zdiv_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_zero	40
Coq.ZArith.Zdigits.binary_value	40	14.15.9.7.13	search with cache (only 1: generalize 1%positive; only 1: generalize 1%positive; only 1: intros Ha H; only 1: intros g c; only 1: constructor).	13.5055761337	46617
Coq.ZArith.Zdigits.two_compl_value	40	0.0.0.2.0.1	search with cache (only 1: refine (nat_rect _ _ _); only 1: intros; only 1: exact 0%Z; only 1: intros; only 1: inversion H0; only 1: exact (bit_value h + 2 * H H2)%Z).	0.0347008705139	18
Coq.ZArith.Zdigits.Zmod2_twice	40
Coq.ZArith.Zdigits.Z_to_binary	40
Coq.ZArith.Zdigits.Z_to_two_compl	40
Coq.ZArith.Zdigits.binary_value_Sn	40	3.1	search with cache (only 1: simpl; only 1: trivial).	0.018462896347	6
Coq.ZArith.Zdigits.Z_to_binary_Sn	40
Coq.ZArith.Zdigits.binary_value_pos	40
Coq.ZArith.Zdigits.two_compl_value_Sn	40	0.0.0	search with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.0218920707703	3
Coq.ZArith.Zdigits.Z_to_two_compl_Sn	40
Coq.ZArith.Zdigits.Z_to_binary_Sn_z	40	2.0.1.0.0.1	search with cache (only 1: destruct z; only 1: simpl; only 1: auto; only 1: auto; only 1: simpl; only 1: auto).	0.0357391834259	20
Coq.ZArith.Zdigits.Z_div2_value	40	0.1.0.1.0.0.0.0.0.0.0.0.3	search with cache (only 1: intros; only 1: destruct z; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: auto; only 1: auto; only 1: simpl; only 1: elim H; only 1: trivial).	15.7498559952	10411
Coq.ZArith.Zdigits.Pdiv2	40	1.1.3.2.0.0.0.0.0	search with cache (only 1: destruct z as [| p| p]; only 1: auto; only 1: destruct p; only 1: auto; only 1: auto; only 1: simpl; only 1: intro H; only 1: discriminate; only 1: auto).	18.9294819832	12775
Coq.ZArith.Zdigits.Zdiv2_two_power_nat	40
Coq.ZArith.Zdigits.Z_to_two_compl_Sn_z	40	0.1.0.0.0.0.1	search with cache (only 1: destruct z as [| p| p]; only 1: auto; only 1: auto; only 1: destruct p as [p| p| ]; only 1: auto; only 1: auto; only 1: auto).	0.0557160377502	16
Coq.ZArith.Zdigits.Zeven_bit_value	40
Coq.ZArith.Zdigits.Zodd_bit_value	40	0.0.0.0.0.0.3.0.0.3.0.0	search with cache (only 1: destruct z; only 1: unfold bit_value; only 1: tauto || (intro H; elim H); only 1: destruct p; only 1: auto; only 1: tauto || (intro H; elim H); only 1: auto; only 1: unfold bit_value; only 1: destruct p; only 1: tauto || (intro H; elim H); only 1: tauto || (intro H; elim H); only 1: tauto || (intro H; elim H)).	6.11594581604	4203
Coq.ZArith.Zdigits.Zge_minus_two_power_nat_S	40
Coq.ZArith.Zdigits.Zlt_two_power_nat_S	40	0.0.0.0.0.0.1.0.1.1	search with cache (only 1: intros n z; only 1: rewrite (two_power_nat_S n); only 1: generalize (Zmod2_twice z); only 1: destruct (Zeven_odd_dec z) as [H| H]; only 1: rewrite (Zeven_bit_value z H); only 1: intros; only 1: lia; only 1: rewrite (Zodd_bit_value z H); only 1: intros; only 1: lia).	0.568356990814	277
Coq.ZArith.Zdigits.binary_to_Z_to_binary	40
Coq.ZArith.Zdigits.two_compl_to_Z_to_two_compl	40
Coq.ZArith.Zdigits.Z_to_binary_to_Z	40
Coq.ZArith.Zdigits.Z_to_two_compl_to_Z	40
Coq.ZArith.BinInt.eq_dec	40
Coq.ZArith.BinInt.pos_sub_spec	40
Coq.ZArith.BinInt.pos_sub_discr	40
Coq.ZArith.BinInt.pos_sub_diag	40	0.1.0.1.1.1.0.1.1.1.1	search with cache (only 1: induction p; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.747154951096	908
Coq.ZArith.BinInt.pos_sub_lt	40
Coq.ZArith.BinInt.pos_sub_gt	40
Coq.ZArith.BinInt.pos_sub_opp	40
Coq.ZArith.BinInt.add_0_r	40
Coq.ZArith.BinInt.mul_0_r	40	4	search with cache (only 1: now destruct n).	0.0146450996399	5
Coq.ZArith.BinInt.mul_1_l	40	0	search with cache (only 1: now destruct n).	0.0140688419342	1
Coq.ZArith.BinInt.add_comm	40
Coq.ZArith.BinInt.opp_add_distr	40
Coq.ZArith.BinInt.opp_inj	40
Coq.ZArith.BinInt.pos_sub_add	40
Coq.ZArith.BinInt.add_assoc_pos	40
Coq.ZArith.BinInt.add_assoc	40
Coq.ZArith.BinInt.add_opp_diag_r	40	0.0.0.0.0.0.5	search with cache (only 1: destruct n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl).	0.0942800045013	62
Coq.ZArith.BinInt.mul_opp_r	40	0.0.0.0.0.0.0.0.0.0.0.1.0.1.0.1.0.1.1	search with cache (only 1: destruct n, m; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	2.63871502876	4546
Coq.ZArith.BinInt.mul_add_distr_pos	40
Coq.ZArith.BinInt.mul_add_distr_r	40
Coq.ZArith.BinInt.one_succ	40	1	search with cache (only 1: trivial).	0.0118579864502	2
Coq.ZArith.BinInt.two_succ	40	0	search with cache (only 1: reflexivity).	0.01211810112	1
Coq.ZArith.BinInt.add_0_l	40	0	search with cache (only 1: now destruct n).	0.012228012085	1
Coq.ZArith.BinInt.add_succ_l	40
Coq.ZArith.BinInt.opp_0	40	0.0	search with cache (only 1: simpl; only 1: now f_equal).	0.0138809680939	2
Coq.ZArith.BinInt.opp_succ	40	0.0.2.0.0.1.0.3.0	search with cache (only 1: unfold succ; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: rewrite !opp_add_distr; only 1: simpl; only 1: trivial).	1.42492985725	1169
Coq.ZArith.BinInt.succ_pred	40
Coq.ZArith.BinInt.pred_succ	40	0.0	search with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).	0.016058921814	2
Coq.ZArith.BinInt.sub_0_r	40	0	search with cache (only 1: now destruct n).	0.0135090351105	1
Coq.ZArith.BinInt.sub_succ_r	40
Coq.ZArith.BinInt.mul_0_l	40	0	search with cache (only 1: now destruct n).	0.0140039920807	1
Coq.ZArith.BinInt.mul_succ_l	40
Coq.ZArith.BinInt.eqb_eq	40
Coq.ZArith.BinInt.ltb_lt	40
Coq.ZArith.BinInt.leb_le	40
Coq.ZArith.BinInt.compare_eq_iff	40
Coq.ZArith.BinInt.compare_sub	40
Coq.ZArith.BinInt.compare_antisym	40	0.1.0.0.0.0.0.0.0.1.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n| n], m as [| m| m]; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: simpl; only 1: rewrite <- ?Pos.compare_antisym, ?pos_sub_spec; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- ?Pos.compare_antisym, ?pos_sub_spec; only 1: trivial).	8.3575899601	9438
Coq.ZArith.BinInt.compare_lt_iff	40	0.0.0.0.1	search with cache (only 1: unfold ltb, lt; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	0.45868897438	168
Coq.ZArith.BinInt.compare_le_iff	40	0.0.0.0.1	search with cache (only 1: unfold leb, le; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	0.4102871418	102
Coq.ZArith.BinInt.lt_succ_r	40
Coq.ZArith.BinInt.max_l	40
Coq.ZArith.BinInt.max_r	40
Coq.ZArith.BinInt.min_l	40
Coq.ZArith.BinInt.min_r	40	0.0.0.1.1.0	search with cache (only 1: unfold le, min; only 1: rewrite (compare_antisym n m); only 1: case compare_spec; only 1: intuition; only 1: intuition; only 1: intuition).	0.389815092087	131
Coq.ZArith.BinInt.peano_ind	40
Coq.ZArith.BinInt.bi_induction	40
Coq.ZArith.BinInt.abs_eq	40
Coq.ZArith.BinInt.abs_neq	40	0.1.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1; only 1: trivial).	0.0266489982605	5
Coq.ZArith.BinInt.sgn_null	40	25.6.3.0.15	search with cache (only 1: destruct n; only 1: tauto; only 1: intros m; only 1: now f_equiv; only 1: easy).	20.4081919193	21217
Coq.ZArith.BinInt.sgn_pos	40
Coq.ZArith.BinInt.sgn_neg	40	0	search with cache (only 1: now destruct n).	0.0236551761627	1
Coq.ZArith.BinInt.pow_0_r	40	0	search with cache (only 1: now destruct n).	0.0154139995575	1
Coq.ZArith.BinInt.pow_succ_r	40
Coq.ZArith.BinInt.pow_neg_r	40
Coq.ZArith.BinInt.pow_pos_fold	40	1.0.1	search with cache (only 1: simpl; only 1: unfold pow_pos; only 1: trivial).	0.0207779407501	5
Coq.ZArith.BinInt.square_spec	40
Coq.ZArith.BinInt.sqrtrem_spec	40
Coq.ZArith.BinInt.sqrt_spec	40
Coq.ZArith.BinInt.sqrt_neg	40	9	search with cache (only 1: now destruct n).	0.137429952621	95
Coq.ZArith.BinInt.sqrtrem_sqrt	40
Coq.ZArith.BinInt.log2_spec	40
Coq.ZArith.BinInt.log2_nonpos	40	0.0.0.2.0.7	search with cache (only 1: destruct n; only 1: easy; only 1: destruct 1; only 1: trivial; only 1: intros Hn; only 1: easy).	2.71527194977	3049
Coq.ZArith.BinInt.even_spec	40
Coq.ZArith.BinInt.odd_spec	40
Coq.ZArith.BinInt.double_spec	40	0	search with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.0170071125031	1
Coq.ZArith.BinInt.succ_double_spec	40	9	search with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.382910966873	106
Coq.ZArith.BinInt.pred_double_spec	40	0	search with cache (only 1: now destruct n).	0.014897108078	1
Coq.ZArith.BinInt.pos_div_eucl_eq	40
Coq.ZArith.BinInt.div_eucl_eq	40
Coq.ZArith.BinInt.div_mod	40
Coq.ZArith.BinInt.pos_div_eucl_bound	40
Coq.ZArith.BinInt.mod_pos_bound	40
Coq.ZArith.BinInt.mod_neg_bound	40
Coq.ZArith.BinInt.quotrem_eq	40
Coq.ZArith.BinInt.quot_rem'	40
Coq.ZArith.BinInt.quot_rem	40	0.0.1.0.0.0.0.0	search with cache (only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: now destruct quotrem).	0.113401889801	24
Coq.ZArith.BinInt.rem_bound_pos	40
Coq.ZArith.BinInt.rem_opp_l'	40
Coq.ZArith.BinInt.rem_opp_r'	40
Coq.ZArith.BinInt.rem_opp_l	40
Coq.ZArith.BinInt.rem_opp_r	40
Coq.ZArith.BinInt.divide_Zpos	40
Coq.ZArith.BinInt.divide_Zpos_Zneg_r	40
Coq.ZArith.BinInt.divide_Zpos_Zneg_l	40
Coq.ZArith.BinInt.ggcd_gcd	40
Coq.ZArith.BinInt.ggcd_correct_divisors	40
Coq.ZArith.BinInt.gcd_divide_l	40
Coq.ZArith.BinInt.gcd_divide_r	40
Coq.ZArith.BinInt.gcd_greatest	40
Coq.ZArith.BinInt.gcd_nonneg	40
Coq.ZArith.BinInt.ggcd_opp	40
Coq.ZArith.BinInt.testbit_of_N	40
Coq.ZArith.BinInt.testbit_of_N'	40	1.0.0.0.1.0.0.0.0.0.0.0.0	search with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a).	2.47262597084	2077
Coq.ZArith.BinInt.testbit_Zpos	40	1.0.0.0.0.0.0	search with cache (only 1: intro Hn; only 1: rewrite <- testbit_of_N; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).	0.0371599197388	8
Coq.ZArith.BinInt.testbit_Zneg	40
Coq.ZArith.BinInt.div2_spec	40	11	search with cache (only 1: trivial).	0.0301878452301	34
Coq.ZArith.BinInt.testbit_0_l	40	0.1.0.0.0.0.2	search with cache (only 1: destruct n as [| n| n]; only 1: unfold testbit; only 1: trivial; only 1: simpl; only 1: trivial; only 1: unfold testbit; only 1: trivial).	0.0307669639587	18
Coq.ZArith.BinInt.testbit_neg_r	40	0	search with cache (only 1: now destruct n).	0.0233409404755	1
Coq.ZArith.BinInt.testbit_odd_0	40
Coq.ZArith.BinInt.testbit_even_0	40	0	search with cache (only 1: now destruct a as [| a| [a| a| ]]).	0.0165319442749	1
Coq.ZArith.BinInt.testbit_odd_succ	40
Coq.ZArith.BinInt.testbit_even_succ	40
Coq.ZArith.BinInt.shiftr_spec_aux	40
Coq.ZArith.BinInt.shiftl_spec_low	40
Coq.ZArith.BinInt.shiftl_spec_high	40
Coq.ZArith.BinInt.shiftr_spec	40
Coq.ZArith.BinInt.lor_spec	40
Coq.ZArith.BinInt.land_spec	40
Coq.ZArith.BinInt.ldiff_spec	40
Coq.ZArith.BinInt.lxor_spec	40
Coq.ZArith.BinInt.gt_lt_iff	40
Coq.ZArith.BinInt.gt_lt	40	0.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0244228839874	2
Coq.ZArith.BinInt.lt_gt	40	0.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0239000320435	2
Coq.ZArith.BinInt.ge_le_iff	40	13.13.2	search with cache (only 1: split; only 1: apply le_ngt; only 1: apply le_ngt).	8.75135397911	6505
Coq.ZArith.BinInt.ge_le	40	0.0	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0240459442139	2
Coq.ZArith.BinInt.le_ge	40	0.0	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0242462158203	2
Coq.ZArith.BinInt.gtb_ltb	40
Coq.ZArith.BinInt.geb_leb	40
Coq.ZArith.BinInt.gtb_lt	40	1.2.1.5	search with cache (only 1: unfold lt, gt; only 1: unfold gtb, ltb; only 1: rewrite compare_antisym; only 1: now case compare).	1.59498691559	482
Coq.ZArith.BinInt.geb_le	40	1.2.1.7	search with cache (only 1: unfold le, ge; only 1: unfold geb, leb; only 1: rewrite compare_antisym; only 1: now case compare).	1.98324799538	949
Coq.ZArith.BinInt.gtb_spec	40
Coq.ZArith.BinInt.geb_spec	40
Coq.ZArith.BinInt.add_reg_l	40
Coq.ZArith.BinInt.mul_reg_l	40
Coq.ZArith.BinInt.mul_reg_r	40
Coq.ZArith.BinInt.opp_eq_mul_m1	40
Coq.ZArith.BinInt.add_diag	40	10	search with cache (only 1: now nzsimpl').	0.656605005264	36
Coq.ZArith.BinInt.compare_opp	40
Coq.ZArith.BinInt.add_compare_mono_l	40
Coq.ZArith.BinInt.testbit_mod_pow2	40
Coq.ZArith.BinInt.testbit_ones	40
Coq.ZArith.BinInt.testbit_ones_nonneg	40	0.0.0.0.3	search with cache (only 1: destruct (ltb_spec i n); only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial).	0.217972993851	72
Coq.ZArith.BinInt.id	40	3.0	search with cache (only 1: simpl; only 1: trivial).	0.0176889896393	5
Coq.ZArith.BinInt.inj	40
Coq.ZArith.BinInt.inj_iff	40	5.5.8.0.7	search with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: rewrite ?Z.add_0_l, ?Z.add_0_r, ?H; only 1: Z.order').	0.898269891739	1044
Coq.ZArith.BinInt.is_pos	40	1	search with cache (only 1: now f_equal).	0.0148329734802	2
Coq.ZArith.BinInt.is_nonneg	40	2	search with cache (only 1: now f_equal).	0.0215041637421	3
Coq.ZArith.BinInt.inj_1	40	2	search with cache (only 1: trivial).	0.0129249095917	3
Coq.ZArith.BinInt.inj_xO	40	3.0	search with cache (only 1: change 2 with (1 + 1); only 1: f_equiv).	0.234763145447	5
Coq.ZArith.BinInt.inj_xI	40	0	search with cache (only 1: reflexivity).	0.0138921737671	1
Coq.ZArith.BinInt.inj_succ	40
Coq.ZArith.BinInt.inj_add	40	1	search with cache (only 1: now f_equal).	0.0138459205627	2
Coq.ZArith.BinInt.inj_sub	40
Coq.ZArith.BinInt.inj_sub_max	40
Coq.ZArith.BinInt.inj_pred	40
Coq.ZArith.BinInt.inj_mul	40	0	search with cache (only 1: reflexivity).	0.135046005249	1
Coq.ZArith.BinInt.inj_pow_pos	40
Coq.ZArith.BinInt.inj_pow	40	0	search with cache (only 1: now apply Pos.iter_swap_gen).	0.0145919322968	1
Coq.ZArith.BinInt.inj_square	40	0	search with cache (only 1: now f_equal).	0.0143010616302	1
Coq.ZArith.BinInt.inj_compare	40	1.1.0.1.0.0	search with cache (only 1: simpl; only 1: case Pos.compare_spec; only 1: intros; only 1: now f_equal; only 1: trivial; only 1: trivial).	0.0404019355774	16
Coq.ZArith.BinInt.inj_leb	40	0	search with cache (only 1: now f_equal).	0.0138049125671	1
Coq.ZArith.BinInt.inj_ltb	40	0	search with cache (only 1: reflexivity).	0.0135531425476	1
Coq.ZArith.BinInt.inj_eqb	40	0	search with cache (only 1: reflexivity).	0.0131690502167	1
Coq.ZArith.BinInt.inj_max	40
Coq.ZArith.BinInt.inj_min	40
Coq.ZArith.BinInt.inj_sqrt	40	0	search with cache (only 1: now f_equal).	0.0140039920807	1
Coq.ZArith.BinInt.inj_gcd	40	0	search with cache (only 1: now f_equal).	0.0129730701447	1
Coq.ZArith.BinInt.inj_divide	40
Coq.ZArith.BinInt.inj_testbit	40
Coq.ZArith.BinInt.inj_neg	40	0	search with cache (only 1: now injection 1).	0.0138871669769	1
Coq.ZArith.BinInt.inj_neg_iff	40	0.1.0.1	search with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.0242331027985	6
Coq.ZArith.BinInt.inj_pos	40	0	search with cache (only 1: now injection 1).	0.0139760971069	1
Coq.ZArith.BinInt.inj_pos_iff	40	0.1.0.0	search with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.0247809886932	5
Coq.ZArith.BinInt.neg_is_neg	40	1	search with cache (only 1: now f_equal).	0.014631986618	2
Coq.ZArith.BinInt.neg_is_nonpos	40	2	search with cache (only 1: now f_equal).	0.0207321643829	3
Coq.ZArith.BinInt.pos_is_pos	40	0	search with cache (only 1: reflexivity).	0.0144200325012	1
Coq.ZArith.BinInt.pos_is_nonneg	40	0	search with cache (only 1: easy).	0.0200028419495	1
Coq.ZArith.BinInt.neg_le_pos	40	0	search with cache (only 1: easy).	0.0206198692322	1
Coq.ZArith.BinInt.neg_lt_pos	40	0	search with cache (only 1: easy).	0.0143430233002	1
Coq.ZArith.BinInt.neg_le_neg	40	1.1.79	search with cache (only 1: unfold Z.le, Z.ge; only 1: simpl; only 1: now rewrite <- Pos.compare_antisym).	11.8999381065	15764
Coq.ZArith.BinInt.neg_lt_neg	40	0.0.87	search with cache (only 1: unfold Z.lt, Z.gt; only 1: simpl; only 1: now rewrite <- Pos.compare_antisym).	13.409580946	15899
Coq.ZArith.BinInt.pos_le_pos	40	4.0.0.0	search with cache (only 1: intros; only 1: unfold Z.le; only 1: simpl; only 1: trivial).	0.0239040851593	8
Coq.ZArith.BinInt.pos_lt_pos	40	5.0.1.0	search with cache (only 1: intros; only 1: unfold Z.lt; only 1: simpl; only 1: now destruct (p - q)%positive).	0.0248351097107	10
Coq.ZArith.BinInt.neg_xO	40	0	search with cache (only 1: reflexivity).	0.013415813446	1
Coq.ZArith.BinInt.neg_xI	40	0	search with cache (only 1: reflexivity).	0.0138130187988	1
Coq.ZArith.BinInt.pos_xO	40	0	search with cache (only 1: reflexivity).	0.0136079788208	1
Coq.ZArith.BinInt.pos_xI	40	0	search with cache (only 1: reflexivity).	0.0138759613037	1
Coq.ZArith.BinInt.opp_neg	40	0.0	search with cache (only 1: simpl; only 1: now f_equal).	0.0163810253143	2
Coq.ZArith.BinInt.opp_pos	40	0	search with cache (only 1: reflexivity).	0.0130341053009	1
Coq.ZArith.BinInt.add_neg_neg	40	0	search with cache (only 1: reflexivity).	0.0131070613861	1
Coq.ZArith.BinInt.add_pos_neg	40	2	search with cache (only 1: reflexivity).	0.0990869998932	39
Coq.ZArith.BinInt.add_neg_pos	40	0	search with cache (only 1: reflexivity).	0.0132880210876	1
Coq.ZArith.BinInt.add_pos_pos	40	0	search with cache (only 1: reflexivity).	0.0134229660034	1
Coq.ZArith.BinInt.divide_pos_neg_r	40
Coq.ZArith.BinInt.divide_pos_neg_l	40
Coq.ZArith.BinInt.testbit_neg	40
Coq.ZArith.BinInt.testbit_pos	40	0	search with cache (only 1: apply Z.testbit_Zpos).	0.0142028331757	1
Coq.ZArith.BinInt.id	40
Coq.ZArith.BinInt.inj	40
Coq.ZArith.BinInt.inj_iff	40
Coq.ZArith.BinInt.to_pos_nonpos	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: easy; only 1: simpl; only 1: destruct p; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: simpl; only 1: easy).	0.0421249866486	10
Coq.ZArith.BinInt.inj_1	40	0	search with cache (only 1: trivial).	0.012913942337	1
Coq.ZArith.BinInt.inj_double	40	0.0.0.0.0.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: easy || now destruct 1; only 1: simpl; only 1: easy || now destruct 1; only 1: simpl; only 1: easy).	0.0375421047211	7
Coq.ZArith.BinInt.inj_succ_double	40	0.0.0.0.0.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: easy || now destruct 1; only 1: simpl; only 1: easy || now destruct 1; only 1: simpl; only 1: easy).	0.11497592926	7
Coq.ZArith.BinInt.inj_succ	40	0.0.0.0.0.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: easy || now destruct 1; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: simpl; only 1: easy).	0.115437984467	7
Coq.ZArith.BinInt.inj_add	40
Coq.ZArith.BinInt.inj_sub	40
Coq.ZArith.BinInt.inj_pred	40	0.0.0.0.0.0.0	search with cache (only 1: destruct x; only 1: easy; only 1: destruct p; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: easy).	0.0335788726807	7
Coq.ZArith.BinInt.inj_mul	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy; only 1: easy || now destruct y; only 1: easy).	0.0591990947723	4
Coq.ZArith.BinInt.inj_pow	40
Coq.ZArith.BinInt.inj_pow_pos	40
Coq.ZArith.BinInt.inj_compare	40	0.1.1.1	search with cache (only 1: destruct x; only 1: easy; only 1: easy || now destruct y; only 1: easy).	0.13999915123	16
Coq.ZArith.BinInt.inj_leb	40	0.1.1.1	search with cache (only 1: destruct x; only 1: easy; only 1: easy || now destruct y; only 1: easy).	0.0706658363342	16
Coq.ZArith.BinInt.inj_ltb	40	0.1.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0591089725494	5
Coq.ZArith.BinInt.inj_eqb	40	0.1.1.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0588510036469	6
Coq.ZArith.BinInt.inj_max	40
Coq.ZArith.BinInt.inj_min	40
Coq.ZArith.BinInt.inj_sqrt	40	0.0.0.3	search with cache (only 1: destruct x; only 1: trivial; only 1: reflexivity; only 1: trivial).	0.0260100364685	7
Coq.ZArith.BinInt.inj_gcd	40	0.0.0.1	search with cache (only 1: destruct x; only 1: easy; only 1: easy || now destruct y; only 1: easy).	0.0973119735718	19
Coq.ZArith.BinInt.Zplus_minus_eq	40
Coq.ZArith.BinInt.Zpos_eq	40	0.2	search with cache (only 1: intros; only 1: now f_equal).	0.017541885376	4
Coq.ZArith.BinInt.ZL0	40	6	search with cache (only 1: now f_equal).	0.0130500793457	7
Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40	2.0	search with cache (only 1: change 2 with (1 + 1); only 1: now Z.nzsimpl').	0.164589881897	4
Coq.ZArith.BinInt.Z_eq_mult	40	9.25.19	search with cache (only 1: intros EQ; only 1: rewrite EQ in *; only 1: now destruct n).	8.60350894928	11199
Coq.ZArith.Zcomplements.floor_gt0	40	1.0.0	search with cache (only 1: intros; only 1: Z.swap_greater; only 1: easy).	0.0223970413208	4
Coq.ZArith.Zcomplements.floor_ok	40
Coq.ZArith.Zcomplements.Z_lt_abs_rec	40
Coq.ZArith.Zcomplements.Z_lt_abs_induction	40
Coq.ZArith.Zcomplements.Zcase_sign	40
Coq.ZArith.Zcomplements.sqr_pos	40	5.6.3.5.3.12	search with cache (only 1: destruct n; only 1: Z.swap_greater; only 1: auto with zarith; only 1: simpl; only 1: easy; only 1: easy).	5.93668103218	6893
Coq.ZArith.Zcomplements.Zlength_correct	40
Coq.ZArith.Zcomplements.Zlength_nil	40	0.0	search with cache (only 1: unfold Zlength; only 1: auto with zarith).	0.0158648490906	2
Coq.ZArith.Zcomplements.Zlength_cons	40
Coq.ZArith.Zcomplements.Zlength_nil_inv	40
Coq.ZArith.Zeven.Zeven_equiv	40
Coq.ZArith.Zeven.Zodd_equiv	40
Coq.ZArith.Zeven.Zeven_bool_iff	40
Coq.ZArith.Zeven.Zodd_bool_iff	40
Coq.ZArith.Zeven.Zodd_even_bool	40
Coq.ZArith.Zeven.Zeven_odd_bool	40
Coq.ZArith.Zeven.Zeven_odd_dec	40
Coq.ZArith.Zeven.Zeven_dec	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right).	6.25083589554	4342
Coq.ZArith.Zeven.Zodd_dec	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right).	5.3380920887	4087
Coq.ZArith.Zeven.Zeven_not_Zodd	40	1.0.1.0.1.0.0.1.0.1.0.1.0.1.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: easy || now destruct 1; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	12.3693971634	16550
Coq.ZArith.Zeven.Zodd_not_Zeven	40	0.0.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: intuition).	0.0397531986237	5
Coq.ZArith.Zeven.Zeven_Sn	40	1.0.1.0.1.0.1.0.1.0.1.0.1.1	search with cache (only 1: destruct n as [| p| p]; only 1: easy; only 1: destruct p; only 1: reflexivity; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: reflexivity; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	31.3354890347	29921
Coq.ZArith.Zeven.Zodd_Sn	40
Coq.ZArith.Zeven.Zeven_pred	40	1.0.1.0.1.0.1.1.1.0.5.0.1	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: destruct p; only 1: reflexivity; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	27.951900959	29051
Coq.ZArith.Zeven.Zodd_pred	40
Coq.ZArith.Zeven.Zeven_div2	40
Coq.ZArith.Zeven.Zodd_div2	40
Coq.ZArith.Zeven.Zquot2_odd_eqn	40
Coq.ZArith.Zeven.Zeven_quot2	40	0	search with cache (only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.0218539237976	1
Coq.ZArith.Zeven.Zodd_quot2	40	0	search with cache (only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.0269119739532	1
Coq.ZArith.Zeven.Zodd_quot2_neg	40	5.0.0.0	search with cache (only 1: intros Hn Hn'; only 1: apply Zodd_bool_iff in Hn'; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.453461885452	49
Coq.ZArith.Zeven.Zquot2_opp	40	5	search with cache (only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.0405900478363	14
Coq.ZArith.Zeven.Zquot2_quot	40
Coq.ZArith.Zeven.Z_modulo_2	40
Coq.ZArith.Zeven.Zsplit2	40
Coq.ZArith.Zeven.Zeven_ex	40	0.0.0	search with cache (only 1: intros Hn; only 1: exists (Z.div2 n); only 1: exact (Zeven_div2 n Hn)).	0.0218060016632	3
Coq.ZArith.Zeven.Zodd_ex	40	0.0.7	search with cache (only 1: intros Hn; only 1: exists (Z.div2 n); only 1: exact (Zodd_div2 n Hn)).	0.306391954422	69
Coq.ZArith.Zeven.Zeven_2p	40	0.0.0.0.1.0.2.1.2	search with cache (only 1: boolify_even_odd; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	0.430018901825	401
Coq.ZArith.Zeven.Zodd_2p_plus_1	40	1.0.0.0.0.1.0.0.1.1.1.3.21.2	search with cache (only 1: boolify_even_odd; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intuition; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: intuition).	5.55627202988	2937
Coq.ZArith.Zeven.Zeven_plus_Zodd	40
Coq.ZArith.Zeven.Zeven_plus_Zeven	40	0.1.0.1.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: now rewrite Z.odd_add, Ha, Hb).	0.079393863678	19
Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0560638904572	4
Coq.ZArith.Zeven.Zodd_plus_Zodd	40	0.0.0.1	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.110232114792	47
Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40
Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40
Coq.ZArith.Zeven.Zodd_mult_Zodd	40
Coq.ZArith.Zmisc.iter_nat_of_Z	40
Coq.ZArith.Znumtheory.Zdivide_opp_r	40
Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0	search with cache (only 1: apply Z.divide_opp_r).	0.0128049850464	1
Coq.ZArith.Znumtheory.Zdivide_opp_l	40
Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	40	0	search with cache (only 1: apply Z.divide_opp_l).	0.0125510692596	1
Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40
Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	40	0	search with cache (only 1: apply Z.divide_abs_l).	0.0119590759277	1
Coq.ZArith.Znumtheory.Zmult_one	40
Coq.ZArith.Znumtheory.Zdivide_bounds	40
Coq.ZArith.Znumtheory.Zmod_divide	40	0.1.2.3	search with cache (only 1: intros b Hb a; only 1: rewrite Z.mod_divide; only 1: trivial; only 1: trivial).	0.152831077576	68
Coq.ZArith.Znumtheory.Zdivide_mod	40	0.6.1.1.1.1	search with cache (only 1: intros a b; only 1: intros (c, Hc); only 1: subst; only 1: zero_or_not b; only 1: apply Z.mod_mul; only 1: trivial).	1.95309710503	1461
Coq.ZArith.Znumtheory.Zdivide_dec	40
Coq.ZArith.Znumtheory.Z_lt_neq	40	18	search with cache (only 1: Z.order).	1.35192298889	408
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40
Coq.ZArith.Znumtheory.Zdivide_le	40	13.1.0	search with cache (only 1: intros Hb; only 1: intros; only 1: now apply Z.divide_pos_le).	1.59077596664	809
Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	40
Coq.ZArith.Znumtheory.Zmod_div_mod	40
Coq.ZArith.Znumtheory.Zmod_divide_minus	40
Coq.ZArith.Znumtheory.Zdivide_mod_minus	40
Coq.ZArith.Znumtheory.Zis_gcd_sym	40
Coq.ZArith.Znumtheory.Zis_gcd_0	40	0.1.7.1	search with cache (only 1: constructor; only 1: intuition; only 1: apply Z.divide_0_r; only 1: intuition).	0.153382062912	127
Coq.ZArith.Znumtheory.Zis_gcd_1	40	0.4.8.1	search with cache (only 1: constructor; only 1: intuition; only 1: easy; only 1: intuition).	0.289557218552	383
Coq.ZArith.Znumtheory.Zis_gcd_refl	40	0.7.7.1	search with cache (only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.32969212532	506
Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.0.0.0.0	search with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.0424811840057	5
Coq.ZArith.Znumtheory.Zis_gcd_opp	40	0.0.0.0.0	search with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.0778398513794	5
Coq.ZArith.Znumtheory.Zis_gcd_0_abs	40
Coq.ZArith.Znumtheory.Zis_gcd_unique	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	40
Coq.ZArith.Znumtheory.euclid_rec	40
Coq.ZArith.Znumtheory.euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.0.0.0	search with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).	0.0235750675201	4
Coq.ZArith.Znumtheory.Zis_gcd_bezout	40
Coq.ZArith.Znumtheory.Zis_gcd_mult	40
Coq.ZArith.Znumtheory.rel_prime_bezout	40
Coq.ZArith.Znumtheory.bezout_rel_prime	40
Coq.ZArith.Znumtheory.Gauss	40
Coq.ZArith.Znumtheory.rel_prime_mult	40
Coq.ZArith.Znumtheory.rel_prime_cross_prod	40
Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_sym	40	3.0	search with cache (only 1: intros a b; only 1: now apply Zis_gcd_sym).	0.16974401474	13
Coq.ZArith.Znumtheory.rel_prime_div	40
Coq.ZArith.Znumtheory.rel_prime_1	40	2.1.0.3	search with cache (only 1: constructor; only 1: apply Z.divide_1_l; only 1: apply Z.divide_1_l; only 1: auto with zarith).	0.0434358119965	32
Coq.ZArith.Znumtheory.not_rel_prime_0	40
Coq.ZArith.Znumtheory.rel_prime_mod	40
Coq.ZArith.Znumtheory.rel_prime_mod_rev	40
Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	40
Coq.ZArith.Znumtheory.prime_divisors	40
Coq.ZArith.Znumtheory.prime_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_le_prime	40	7.14	search with cache (only 1: destruct 1; only 1: intuition).	9.97884297371	2692
Coq.ZArith.Znumtheory.prime_mult	40
Coq.ZArith.Znumtheory.not_prime_0	40	0.19.3	search with cache (only 1: destruct 1; only 1: contradict H; only 1: discriminate).	1.45225715637	2518
Coq.ZArith.Znumtheory.not_prime_1	40	22.1	search with cache (only 1: destruct 1; only 1: discriminate).	0.475157022476	903
Coq.ZArith.Znumtheory.prime_2	40
Coq.ZArith.Znumtheory.prime_3	40
Coq.ZArith.Znumtheory.prime_ge_2	40
Coq.ZArith.Znumtheory.Z_0_1_more	40
Coq.ZArith.Znumtheory.prime_alt	40
Coq.ZArith.Znumtheory.square_not_prime	40
Coq.ZArith.Znumtheory.prime_div_prime	40
Coq.ZArith.Znumtheory.Zgcd_is_gcd	40
Coq.ZArith.Znumtheory.Zgcd_spec	40
Coq.ZArith.Znumtheory.Zdivide_Zgcd	40	0.4	search with cache (only 1: intros n Hn Hnp; only 1: apply Z.gcd_greatest).	0.0168569087982	6
Coq.ZArith.Znumtheory.Zis_gcd_gcd	40
Coq.ZArith.Znumtheory.Zgcd_div_swap0	40
Coq.ZArith.Znumtheory.Zgcd_div_swap	40
Coq.ZArith.Znumtheory.Zgcd_ass	40
Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_dec	40
Coq.ZArith.Znumtheory.prime_dec_aux	40
Coq.ZArith.Znumtheory.prime_dec	40
Coq.ZArith.Znumtheory.not_prime_divide	40
Coq.ZArith.Zdiv.Z_div_mod_POS	40
Coq.ZArith.Zdiv.Z_div_mod	40
Coq.ZArith.Zdiv.Remainder_equiv	40
Coq.ZArith.Zdiv.Z_div_mod_full	40
Coq.ZArith.Zdiv.Z_mod_remainder	40	0.0.1.0.0.0.0.0.1.0.1.0.0	search with cache (only 1: intros Hb; only 1: unfold Z.modulo; only 1: generalize (Z.div_eucl_eq a b Hb), (Z.mod_pos_bound a b), (Z.mod_neg_bound a b); only 1: unfold Z.modulo; only 1: destruct Z.div_eucl as (q, r); only 1: intros EQ POS NEG; only 1: red; only 1: destruct b; only 1: now destruct Hb; only 1: left; only 1: now apply POS; only 1: right; only 1: now apply NEG).	7.15770792961	4253
Coq.ZArith.Zdiv.Z_div_mod_eq	40
Coq.ZArith.Zdiv.Zmod_eq_full	40
Coq.ZArith.Zdiv.Zmod_eq	40	0.10.1.0	search with cache (only 1: intros; only 1: rewrite Z.mul_comm; only 1: assert (Hb' : b <> 0) by now destruct b; only 1: now apply Z.mod_eq).	2.42321109772	1231
Coq.ZArith.Zdiv.Zdiv_eucl_exist	40
Coq.ZArith.Zdiv.Zdiv_mod_unique	40
Coq.ZArith.Zdiv.Zdiv_unique	40
Coq.ZArith.Zdiv.Zmod_unique	40
Coq.ZArith.Zdiv.Zmod_0_l	40	9.0	search with cache (only 1: intros; only 1: trivial).	0.207479000092	90
Coq.ZArith.Zdiv.Zmod_0_r	40	0.0.1.0	search with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.168527126312	5
Coq.ZArith.Zdiv.Zdiv_0_l	40	4.2	search with cache (only 1: intros Hb; only 1: trivial).	0.0216000080109	17
Coq.ZArith.Zdiv.Zdiv_0_r	40	0.0.1.0	search with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0228798389435	5
Coq.ZArith.Zdiv.Zmod_1_r	40
Coq.ZArith.Zdiv.Zdiv_1_r	40
Coq.ZArith.Zdiv.Z_mod_same_full	40
Coq.ZArith.Zdiv.Z_mod_mult	40
Coq.ZArith.Zdiv.Z_div_pos	40
Coq.ZArith.Zdiv.Z_div_ge0	40	0.0.0.7.0	search with cache (only 1: intros; only 1: Z.swap_greater; only 1: apply Z.div_pos; only 1: auto using Z.gt_lt; only 1: auto using Z.gt_lt).	0.414123058319	201
Coq.ZArith.Zdiv.Z_div_lt	40
Coq.ZArith.Zdiv.Z_div_ge	40
Coq.ZArith.Zdiv.Z_div_le	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).	0.0223178863525	4
Coq.ZArith.Zdiv.Z_mult_div_ge	40
Coq.ZArith.Zdiv.Z_mult_div_ge_neg	40
Coq.ZArith.Zdiv.Z_div_exact_full_1	40
Coq.ZArith.Zdiv.Z_div_exact_full_2	40	0.0.0.0.0	search with cache (only 1: intros a b; only 1: intros; only 1: rewrite Z.div_exact; only 1: auto; only 1: auto).	0.0256240367889	5
Coq.ZArith.Zdiv.Zmod_le	40
Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40
Coq.ZArith.Zdiv.Zdiv_le_compat_l	40
Coq.ZArith.Zdiv.Zdiv_sgn	40
Coq.ZArith.Zdiv.Z_mod_plus_full	40
Coq.ZArith.Zdiv.Zdiv_opp_opp	40
Coq.ZArith.Zdiv.Zmod_opp_opp	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_r	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_r	40
Coq.ZArith.Zdiv.Z_div_zero_opp_full	40
Coq.ZArith.Zdiv.Z_div_nz_opp_full	40
Coq.ZArith.Zdiv.Z_div_zero_opp_r	40
Coq.ZArith.Zdiv.Z_div_nz_opp_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_r	40
Coq.ZArith.Zdiv.Zmod_mod	40
Coq.ZArith.Zdiv.Zmult_mod	40
Coq.ZArith.Zdiv.Zplus_mod	40
Coq.ZArith.Zdiv.Zminus_mod	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	3.2.0	search with cache (only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: auto).	0.112072944641	45
Coq.ZArith.Zdiv.Zminus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zminus_mod_idemp_r	40	0.1.1.1.0	search with cache (only 1: intros; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: replace (a - b) with (a + -1 * b); only 1: auto with zarith; only 1: auto with zarith).	0.18004989624	53
Coq.ZArith.Zdiv.Zmult_mod_idemp_l	40
Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	3.0.0	search with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: auto).	0.037278175354	13
Coq.ZArith.Zdiv.eqm_refl	40	19	search with cache (only 1: constructor).	0.284013986588	666
Coq.ZArith.Zdiv.eqm_sym	40	0.0	search with cache (only 1: unfold eqm; only 1: auto).	0.0143640041351	2
Coq.ZArith.Zdiv.eqm_trans	40
Coq.ZArith.Zdiv.eqm_setoid	40	0.0.1.0.1.62	search with cache (only 1: constructor; only 1: unfold eqm; only 1: auto; only 1: unfold eqm; only 1: auto; only 1: now unfold eqm; intros a b c ->).	5.96582889557	24524
Coq.ZArith.Zdiv.Zplus_eqm	40
Coq.ZArith.Zdiv.Zminus_eqm	40
Coq.ZArith.Zdiv.Zmult_eqm	40
Coq.ZArith.Zdiv.Zopp_eqm	40
Coq.ZArith.Zdiv.Zmod_eqm	40	4.2.1.0	search with cache (only 1: repeat red; only 1: intros; only 1: repeat rewrite Zmod_mod; only 1: auto).	0.0699779987335	78
Coq.ZArith.Zdiv.Zdiv_Zdiv	40
Coq.ZArith.Zdiv.Zmod_div	40
Coq.ZArith.Zdiv.Zdiv_mult_le	40
Coq.ZArith.Zdiv.Zmod_divides	40
Coq.ZArith.Zdiv.Zmod_odd	40
Coq.ZArith.Zdiv.Zmod_even	40
Coq.ZArith.Zdiv.Zodd_mod	40	0.2.0	search with cache (only 1: intros a; only 1: rewrite Zmod_odd, Zodd_even_bool; only 1: now destruct Z.even).	0.0231091976166	5
Coq.ZArith.Zdiv.Zeven_mod	40	0.2.0	search with cache (only 1: intros a; only 1: rewrite Zmod_odd, Zodd_even_bool; only 1: now destruct Z.even).	0.125355005264	13
Coq.ZArith.Zdiv.Z_mod_same	40	1.7.2	search with cache (only 1: intros; only 1: apply Z.mod_same; only 1: now intros ->).	0.215834140778	164
Coq.ZArith.Zdiv.Z_div_same	40
Coq.ZArith.Zdiv.Z_div_plus	40
Coq.ZArith.Zdiv.Z_div_mult	40
Coq.ZArith.Zdiv.Z_mod_plus	40	4.0.2	search with cache (only 1: intros; only 1: apply Z.mod_add; only 1: now intros ->).	0.043231010437	27
Coq.ZArith.Zdiv.Z_div_exact_1	40	0.3.2.0.0	search with cache (only 1: intros a b; only 1: intros Hb; only 1: rewrite Z.div_exact; only 1: now destruct b; only 1: now destruct b).	0.0409119129181	10
Coq.ZArith.Zdiv.Z_div_exact_2	40	4.0.0.0	search with cache (only 1: intros; only 1: rewrite Z.div_exact; only 1: auto; only 1: now destruct b).	0.0454449653625	13
Coq.ZArith.Zdiv.Z_mod_zero_opp	40	0.0.0.0.0	search with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: auto; only 1: auto).	0.0280890464783	5
Coq.ZArith.Zdiv.Zmod_POS_correct	40
Coq.ZArith.Zdiv.Zmod'_correct	40
Coq.ZArith.Zdiv.Zdiv_eucl_extended	40
Coq.ZArith.Zdiv.div_Zdiv	40
Coq.ZArith.Zdiv.mod_Zmod	40
Coq.ZArith.Zeuclid.mod_wd	40	1	search with cache (only 1: solve_proper).	0.0527708530426	2
Coq.ZArith.Zeuclid.div_wd	40	0	search with cache (only 1: congruence).	0.0141530036926	1
Coq.ZArith.Zeuclid.div_mod	40
Coq.ZArith.Zeuclid.mod_always_pos	40
Coq.ZArith.Zeuclid.mod_bound_pos	40
Coq.ZArith.Zabs.Zabs_ind	40
Coq.ZArith.Zabs.Zabs_intro	40	4	search with cache (only 1: now destruct n).	0.0219161510468	14
Coq.ZArith.Zabs.Zabs_dec	40
Coq.ZArith.Zabs.Zabs_spec	40	0.1.1.0.13.5.25	search with cache (only 1: unfold Z.gt; only 1: destruct x; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: auto).	33.5827460289	99737
Coq.ZArith.Zabs.Zsgn_spec	40
Coq.ZArith.Zabs.Zabs_nat_le	40
Coq.ZArith.Zabs.Zabs_nat_lt	40
Coq.ZArith.Int.eqb_eq	40
Coq.ZArith.Int.eqb_neq	40
Coq.ZArith.Int.ltb_lt	40
Coq.ZArith.Int.ltb_nlt	40
Coq.ZArith.Int.leb_le	40
Coq.ZArith.Int.leb_nle	40
Coq.ZArith.Int.norm_ei_correct	40
Coq.ZArith.Int.norm_ez_correct	40
Coq.ZArith.Int.norm_ep_correct	40
Coq.ZArith.Int.norm_ep_correct2	40
Coq.ZArith.Int.gt_le_dec	40
Coq.ZArith.Int.ge_lt_dec	40
Coq.ZArith.Int.i2z_eq	40	25	search with cache (only 1: now rewrite ?Pos.max_1_r, <- ?Pos2Z.inj_max).	0.155234098434	387
Coq.ZArith.Int.i2z_0	40	0	search with cache (only 1: trivial).	0.00709319114685	1
Coq.ZArith.Int.i2z_1	40	0	search with cache (only 1: trivial).	0.00754117965698	1
Coq.ZArith.Int.i2z_2	40	0	search with cache (only 1: reflexivity).	0.00782299041748	1
Coq.ZArith.Int.i2z_3	40	0	search with cache (only 1: reflexivity).	0.00753998756409	1
Coq.ZArith.Int.i2z_add	40	0	search with cache (only 1: trivial).	0.0082700252533	1
Coq.ZArith.Int.i2z_opp	40	0	search with cache (only 1: reflexivity).	0.00741505622864	1
Coq.ZArith.Int.i2z_sub	40	0	search with cache (only 1: reflexivity).	0.00818800926208	1
Coq.ZArith.Int.i2z_mul	40	0	search with cache (only 1: reflexivity).	0.00770807266235	1
Coq.ZArith.Int.i2z_max	40	0	search with cache (only 1: reflexivity).	0.00771999359131	1
Coq.ZArith.Int.i2z_eqb	40	0	search with cache (only 1: reflexivity).	0.00767588615417	1
Coq.ZArith.Int.i2z_leb	40	0	search with cache (only 1: reflexivity).	0.00779795646667	1
Coq.ZArith.Int.i2z_ltb	40	0	search with cache (only 1: reflexivity).	0.0075159072876	1
Coq.ZArith.Zpower.Zpower_nat_0_r	40	0	search with cache (only 1: trivial).	0.0100200176239	1
Coq.ZArith.Zpower.Zpower_nat_succ_r	40	0	search with cache (only 1: reflexivity).	0.0112800598145	1
Coq.ZArith.Zpower.Zpower_nat_is_exp	40
Coq.ZArith.Zpower.Zpower_pos_nat	40
Coq.ZArith.Zpower.Zpower_nat_Z	40
Coq.ZArith.Zpower.Zpower_nat_Zpower	40	3.5.10.1.0	search with cache (only 1: induction n; only 1: trivial; only 1: intros; only 1: apply Pos2Nat.inj_iter; only 1: now f_equal).	2.84204792976	2983
Coq.ZArith.Zpower.Zpower_pos_is_exp	40
Coq.ZArith.Zpower.Zpower_exp	40
Coq.ZArith.Zpower.shift_nat_equiv	40	1	search with cache (only 1: now f_equal).	0.0109088420868	2
Coq.ZArith.Zpower.shift_pos_equiv	40	0	search with cache (only 1: reflexivity).	0.0107169151306	1
Coq.ZArith.Zpower.shift_equiv	40
Coq.ZArith.Zpower.two_power_nat_equiv	40
Coq.ZArith.Zpower.two_power_pos_equiv	40	4	search with cache (only 1: now apply Pos.iter_swap_gen).	0.0123150348663	5
Coq.ZArith.Zpower.two_p_equiv	40	2.0.1.88	search with cache (only 1: destruct x; only 1: trivial; only 1: now apply Pos.iter_swap_gen; only 1: trivial).	19.4395360947	62398
Coq.ZArith.Zpower.two_power_nat_S	40	2	search with cache (only 1: trivial).	0.028263092041	25
Coq.ZArith.Zpower.shift_nat_plus	40	6.0.1.10	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: now f_equal).	0.348564147949	315
Coq.ZArith.Zpower.shift_nat_correct	40
Coq.ZArith.Zpower.two_power_nat_correct	40
Coq.ZArith.Zpower.shift_pos_nat	40	4	search with cache (only 1: apply Pos2Nat.inj_iter).	0.0143568515778	5
Coq.ZArith.Zpower.two_power_pos_nat	40
Coq.ZArith.Zpower.shift_pos_correct	40
Coq.ZArith.Zpower.two_power_pos_correct	40	1	search with cache (only 1: now apply Pos.iter_swap_gen).	0.0115120410919	2
Coq.ZArith.Zpower.two_power_pos_is_exp	40
Coq.ZArith.Zpower.two_p_is_exp	40
Coq.ZArith.Zpower.two_p_gt_ZERO	40	1.0.2.4	search with cache (only 1: destruct x; only 1: easy; only 1: easy; only 1: now destruct 1).	0.129674911499	85
Coq.ZArith.Zpower.two_p_S	40
Coq.ZArith.Zpower.two_p_pred	40
Coq.ZArith.Zpower.Zdiv_rest_correct1	40
Coq.ZArith.Zpower.Zdiv_rest_correct2	40
Coq.ZArith.Zpower.Zdiv_rest_correct	40
Coq.ZArith.Zpower.Zdiv_rest_ok	40
Coq.ZArith.Zpower.Zdiv_rest_shiftr	40
Coq.ZArith.Zwf.Zwf_well_founded	40
Coq.ZArith.Zwf.Zwf_up_well_founded	40
Coq.ZArith.auxiliary.Zne_left	40
Coq.ZArith.auxiliary.Zegal_left	40	0	search with cache (only 1: now rewrite <- Z.sub_move_0_r).	0.0112340450287	1
Coq.ZArith.auxiliary.Zle_left	40	8	search with cache (only 1: apply Z.le_0_sub).	0.0110731124878	9
Coq.ZArith.auxiliary.Zle_left_rev	40	0	search with cache (only 1: apply Z.le_0_sub).	0.00805497169495	1
Coq.ZArith.auxiliary.Zlt_left_rev	40	14	search with cache (only 1: apply Z.lt_0_sub).	0.10079908371	111
Coq.ZArith.auxiliary.Zlt_left_lt	40	0	search with cache (only 1: apply Z.lt_0_sub).	0.00734305381775	1
Coq.ZArith.auxiliary.Zlt_left	40
Coq.ZArith.auxiliary.Zge_left	40	0.16	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_0_sub).	0.327157974243	325
Coq.ZArith.auxiliary.Zgt_left	40	0.2.1.2.0	search with cache (only 1: change (-1) with (- Z.succ 0); only 1: Z.swap_greater; only 1: intros; only 1: rewrite Z.add_shuffle0; only 1: now apply Z.le_0_sub, Z.le_succ_l, Z.lt_0_sub).	0.0255138874054	10
Coq.ZArith.auxiliary.Zgt_left_gt	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0191130638123	3
Coq.ZArith.auxiliary.Zgt_left_rev	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.017110824585	2
Coq.ZArith.auxiliary.Zle_mult_approx	40	47.3.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order_pos).	7.74554896355	10788
Coq.ZArith.auxiliary.Zmult_le_approx	40
Coq.ZArith.Zmax.Zmax_spec	40
Coq.ZArith.Zmax.Zmax_left	40
Coq.ZArith.Zmax.Zpos_max_1	40	0.0.0.82	search with cache (only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	2.10994005203	5438
Coq.ZArith.Zmin.Zmin_spec	40
Coq.ZArith.Zmin.Zmin_irreducible	40
Coq.ZArith.Zmin.Zmin_le_prime_inf	40	8.2.9.1.0	search with cache (only 1: destruct (Z.min_dec n m); only 1: left; only 1: Z.order; only 1: right; only 1: Z.order).	2.60446715355	2843
Coq.ZArith.Zmin.Zpos_min_1	40	0.0.0.83	search with cache (only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	8.95885014534	27146
Coq.ZArith.Zgcd_alt.Zgcdn_pos	40
Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	40
Coq.ZArith.Zgcd_alt.fibonacci_pos	40
Coq.ZArith.Zgcd_alt.fibonacci_incr	40
Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	40	4.4.1.7.12	search with cache (only 1: compute; only 1: destruct a; only 1: auto; only 1: lia; only 1: lia).	2.24724292755	2112
Coq.ZArith.Zgcd_alt.Zgcdn_opp	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	40
Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	40
Coq.ZArith.Zorder.Ztrichotomy_inf	40
Coq.ZArith.Zorder.Ztrichotomy	40
Coq.ZArith.Zorder.dec_Zne	40
Coq.ZArith.Zorder.dec_Zgt	40
Coq.ZArith.Zorder.dec_Zge	40	3.1.1.2.3.1.0.3.0	search with cache (only 1: unfold Z.le, Z.ge; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: left; only 1: now subst; only 1: right; only 1: auto; only 1: left; only 1: now subst).	35.7966909409	36161
Coq.ZArith.Zorder.not_Zeq	40
Coq.ZArith.Zorder.Zle_not_lt	40	15	search with cache (only 1: Z.order).	0.186266183853	118
Coq.ZArith.Zorder.Zlt_not_le	40	16	search with cache (only 1: Z.order).	0.192532062531	134
Coq.ZArith.Zorder.Zle_not_gt	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_ngt).	0.0261030197144	2
Coq.ZArith.Zorder.Zgt_not_le	40	2	search with cache (only 1: auto).	0.0150961875916	3
Coq.ZArith.Zorder.Znot_ge_lt	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_nge).	0.0238189697266	2
Coq.ZArith.Zorder.Znot_lt_ge	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_ngt).	0.0252668857574	2
Coq.ZArith.Zorder.Znot_gt_le	40	0	search with cache (only 1: trivial).	0.0124220848083	1
Coq.ZArith.Zorder.Znot_le_gt	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).	0.0257189273834	2
Coq.ZArith.Zorder.not_Zne	40	7.1.0.4	search with cache (only 1: destruct (Z.eq_decidable n m); only 1: subst; only 1: auto; only 1: now subst).	0.277070045471	273
Coq.ZArith.Zorder.Zgt_asym	40	12.1	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.836699962616	328
Coq.ZArith.Zorder.Zgt_irrefl	40	15.1	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.564692020416	543
Coq.ZArith.Zorder.Zle_lt_or_eq	40
Coq.ZArith.Zorder.Zgt_trans	40	0.0.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now transitivity m).	0.0437481403351	3
Coq.ZArith.Zorder.Zle_gt_trans	40	2.10.1	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order).	1.1903898716	422
Coq.ZArith.Zorder.Zgt_le_trans	40	0.0	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0663239955902	2
Coq.ZArith.Zorder.Zge_trans	40	0.4	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0770471096039	15
Coq.ZArith.Zorder.Zsucc_le_compat	40
Coq.ZArith.Zorder.Zsucc_lt_compat	40
Coq.ZArith.Zorder.Zsucc_gt_compat	40	0.8	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.109828948975	40
Coq.ZArith.Zorder.Zsucc_gt_reg	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0295090675354	2
Coq.ZArith.Zorder.Zsucc_le_reg	40	0	search with cache (only 1: apply Z.succ_le_mono).	0.013072013855	1
Coq.ZArith.Zorder.Zsucc_lt_reg	40	0	search with cache (only 1: apply Z.succ_lt_mono).	0.0129539966583	1
Coq.ZArith.Zorder.Zgt_succ	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono; only 1: apply Z.succ_lt_mono; only 1: apply Z.succ_lt_mono; only 1: apply Z.succ_lt_mono; only 1: apply Z.succ_lt_mono; only 1: apply Z.succ_lt_mono; only 1: apply Z.succ_lt_mono; only 1: apply Z.lt_succ_diag_r).	0.0382571220398	11
Coq.ZArith.Zorder.Znot_le_succ	40	1.0.0.0.0.0.0.1	search with cache (only 1: apply Z.nle_gt; only 1: apply Z.succ_lt_mono; only 1: apply Z.succ_lt_mono; only 1: apply Z.succ_lt_mono; only 1: apply Z.succ_lt_mono; only 1: apply Z.succ_lt_mono; only 1: apply Z.succ_lt_mono; only 1: apply Z.lt_succ_diag_r).	0.0364470481873	11
Coq.ZArith.Zorder.Zgt_le_succ	40	9.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.21099281311	71
Coq.ZArith.Zorder.Zle_gt_succ	40
Coq.ZArith.Zorder.Zle_lt_succ	40	0	search with cache (only 1: apply Z.lt_succ_r).	0.0129919052124	1
Coq.ZArith.Zorder.Zlt_le_succ	40	0	search with cache (only 1: apply Z.le_succ_l).	0.0131051540375	1
Coq.ZArith.Zorder.Zgt_succ_le	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	0.0235631465912	2
Coq.ZArith.Zorder.Zlt_succ_le	40	0	search with cache (only 1: apply Z.lt_succ_r).	0.0138010978699	1
Coq.ZArith.Zorder.Zle_succ_gt	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.0256519317627	2
Coq.ZArith.Zorder.Zle_succ_le	40
Coq.ZArith.Zorder.Zgt_succ_pred	40
Coq.ZArith.Zorder.Zlt_succ_pred	40	0	search with cache (only 1: apply Z.lt_succ_lt_pred).	0.0139269828796	1
Coq.ZArith.Zorder.Zlt_0_le_0_pred	40
Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	0.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.0247950553894	3
Coq.ZArith.Zorder.Zle_neg_pos	40	0	search with cache (only 1: easy).	0.0905718803406	1
Coq.ZArith.Zorder.Zgt_pos_0	40	0.1.4	search with cache (only 1: intros; only 1: Z.swap_greater; only 1: easy).	0.0870800018311	8
Coq.ZArith.Zorder.Zle_0_pos	40	3	search with cache (only 1: easy).	0.089390039444	4
Coq.ZArith.Zorder.Zlt_neg_0	40	0	search with cache (only 1: easy).	0.0137639045715	1
Coq.ZArith.Zorder.Zle_0_nat	40	8.2.22	search with cache (only 1: induction n; only 1: easy; only 1: now apply Z.lt_le_incl).	0.958933115005	992
Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40
Coq.ZArith.Zorder.Zplus_gt_compat_l	40
Coq.ZArith.Zorder.Zplus_gt_compat_r	40
Coq.ZArith.Zorder.Zplus_le_compat_l	40
Coq.ZArith.Zorder.Zplus_le_compat_r	40
Coq.ZArith.Zorder.Zplus_lt_compat_l	40	0	search with cache (only 1: apply Z.add_lt_mono_l).	0.0139589309692	1
Coq.ZArith.Zorder.Zplus_lt_compat_r	40	1	search with cache (only 1: apply Z.add_lt_mono_r).	0.015645980835	2
Coq.ZArith.Zorder.Zplus_le_reg_l	40	1	search with cache (only 1: apply Z.add_le_mono_l).	0.0150039196014	2
Coq.ZArith.Zorder.Zplus_le_reg_r	40	0	search with cache (only 1: apply Z.add_le_mono_r).	0.0132410526276	1
Coq.ZArith.Zorder.Zplus_lt_reg_l	40	0	search with cache (only 1: apply Z.add_lt_mono_l).	0.0131640434265	1
Coq.ZArith.Zorder.Zplus_lt_reg_r	40	1	search with cache (only 1: apply Z.add_lt_mono_r).	0.0146870613098	2
Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	0.0303900241852	2
Coq.ZArith.Zorder.Zplus_gt_reg_r	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	0.0316390991211	3
Coq.ZArith.Zorder.Zmult_le_compat_r	40
Coq.ZArith.Zorder.Zmult_le_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_r	40
Coq.ZArith.Zorder.Zmult_gt_compat_r	40	0.7	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.287626028061	123
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40	0.2	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.132468938828	51
Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40	0.3.1.4.0	search with cache (only 1: intros; only 1: destruct p; only 1: now apply Z.mul_le_mono_nonneg_r; only 1: now apply Z.mul_le_mono_nonneg_r; only 1: discriminate).	0.653450012207	295
Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0619270801544	1
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_l	40	0	search with cache (only 1: apply Z.mul_lt_mono_pos_l).	0.0147058963776	1
Coq.ZArith.Zorder.Zmult_gt_compat_l	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.0420880317688	2
Coq.ZArith.Zorder.Zmult_ge_compat_r	40	1.0.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_r).	0.0440819263458	4
Coq.ZArith.Zorder.Zmult_ge_compat_l	40	0.0.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_l).	0.0433309078217	3
Coq.ZArith.Zorder.Zmult_ge_compat	40
Coq.ZArith.Zorder.Zmult_le_compat	40	0.0	search with cache (only 1: intros; only 1: now apply Z.mul_le_mono_nonneg).	0.0166399478912	2
Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0921359062195	3
Coq.ZArith.Zorder.Zmult_lt_reg_r	40	1	search with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.0151679515839	2
Coq.ZArith.Zorder.Zmult_le_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0251078605652	2
Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	0	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0134761333466	1
Coq.ZArith.Zorder.Zmult_ge_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0416610240936	2
Coq.ZArith.Zorder.Zmult_gt_reg_r	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0426299571991	3
Coq.ZArith.Zorder.Zmult_lt_compat	40
Coq.ZArith.Zorder.Zmult_lt_compat2	40
Coq.ZArith.Zorder.Zmult_gt_0_compat	40	2.0.24	search with cache (only 1: rewrite Z.mul_comm; only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	4.67616009712	3593
Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0255870819092	2
Coq.ZArith.Zorder.Zmult_le_0_reg_r	40
Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40
Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	3.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	0.0270190238953	5
Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40
Coq.ZArith.Zorder.Zlt_square_simpl	40
Coq.ZArith.Zorder.Zgt_square_simpl	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).	0.0426189899445	3
Coq.ZArith.Zorder.Zeq_plus_swap	40
Coq.ZArith.Zorder.Zlt_0_minus_lt	40
Coq.ZArith.Zorder.Zle_0_minus_le	40
Coq.ZArith.Zorder.Zle_minus_le_0	40	0	search with cache (only 1: apply Z.le_0_sub).	0.0131781101227	1
Coq.ZArith.Zbool.Zle_cases	40
Coq.ZArith.Zbool.Zlt_cases	40
Coq.ZArith.Zbool.Zge_cases	40
Coq.ZArith.Zbool.Zgt_cases	40
Coq.ZArith.Zbool.Zle_bool_imp_le	40	0.0.1.0	search with cache (only 1: case Z.leb_spec; only 1: intros H; only 1: auto; only 1: discriminate).	0.0197169780731	5
Coq.ZArith.Zbool.Zle_imp_le_bool	40	0	search with cache (only 1: apply Z.leb_le).	0.0112450122833	1
Coq.ZArith.Zbool.Zle_bool_antisym	40	2.2.15.8.1.2	search with cache (only 1: case Z.leb_spec; only 1: case Z.leb_spec; only 1: symmetry; only 1: Z.order; only 1: discriminate; only 1: discriminate).	6.56630587578	13566
Coq.ZArith.Zbool.Zle_bool_trans	40	1.1	search with cache (only 1: rewrite !Z.leb_le; only 1: Z.order).	0.0456919670105	11
Coq.ZArith.Zbool.Zle_bool_total	40
Coq.ZArith.Zbool.Zle_bool_plus_mono	40
Coq.ZArith.Zbool.Zone_pos	40	12	search with cache (only 1: auto).	0.0293011665344	46
Coq.ZArith.Zbool.Zone_min_pos	40
Coq.ZArith.Zbool.Zle_is_le_bool	40	2.1	search with cache (only 1: rewrite !Z.leb_le; only 1: now Z.swap_greater).	0.0216681957245	5
Coq.ZArith.Zbool.Zge_is_le_bool	40	0.2.1.1.1	search with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: rewrite !Z.leb_le; only 1: now Z.swap_greater).	0.0382928848267	12
Coq.ZArith.Zbool.Zlt_is_lt_bool	40
Coq.ZArith.Zbool.Zgt_is_gt_bool	40	0.4.1.0	search with cache (only 1: rewrite Z.gtb_ltb; only 1: symmetry; only 1: Z.swap_greater; only 1: apply Z.ltb_lt).	0.072026014328	26
Coq.ZArith.Zbool.Zlt_is_le_bool	40
Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.1.0	search with cache (only 1: rewrite Z.leb_le; only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.0221879482269	4
Coq.ZArith.Zbool.Zeq_is_eq_bool	40
Coq.ZArith.Zbool.Zeq_bool_eq	40	6.5.1.0.0.0	search with cache (only 1: unfold Zeq_bool; only 1: rewrite <- Z.compare_eq_iff; only 1: destruct Z.compare; only 1: now split; only 1: discriminate; only 1: discriminate).	14.0916781425	13159
Coq.ZArith.Zbool.Zeq_bool_neq	40
Coq.ZArith.Zbool.Zeq_bool_if	40
Coq.ZArith.ZArith_dec.Dcompare_inf	40
Coq.ZArith.ZArith_dec.Zcompare_rect	40	4.4.4.0	search with cache (only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	4.31598901749	3654
Coq.ZArith.ZArith_dec.Zcompare_rec	40	1.1.1.0.0	search with cache (only 1: intros H1 H2 H3; only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.433891057968	120
Coq.ZArith.ZArith_dec.Z_lt_dec	40
Coq.ZArith.ZArith_dec.Z_le_dec	40
Coq.ZArith.ZArith_dec.Z_gt_dec	40	0.0.1.0.17	search with cache (only 1: unfold Z.gt, Z.lt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	13.6281969547	8843
Coq.ZArith.ZArith_dec.Z_ge_dec	40
Coq.ZArith.ZArith_dec.Z_lt_ge_dec	40	0.0.0.0.2.0	search with cache (only 1: unfold Z.ge; only 1: unfold Z.lt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	0.556892156601	153
Coq.ZArith.ZArith_dec.Z_lt_le_dec	40
Coq.ZArith.ZArith_dec.Z_le_gt_dec	40	0.0.0.0.1.0	search with cache (only 1: unfold Z.gt; only 1: unfold Z.le; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	0.29039311409	83
Coq.ZArith.ZArith_dec.Z_gt_le_dec	40	0.0.0.0.1.5	search with cache (only 1: unfold Z.le; only 1: unfold Z.gt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	2.02391600609	669
Coq.ZArith.ZArith_dec.Z_ge_lt_dec	40	0.0.0.0.2.2	search with cache (only 1: unfold Z.ge; only 1: unfold Z.lt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	0.435675144196	99
Coq.ZArith.ZArith_dec.Z_le_lt_eq_dec	40
Coq.ZArith.ZArith_dec.Zlt_cotrans	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	40
Coq.ZArith.ZArith_dec.not_Zeq_inf	40
Coq.ZArith.ZArith_dec.Z_dec	40	0.1.1.1.2.2.0.1.0.0	search with cache (only 1: intros; only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: auto; only 1: left; only 1: auto; only 1: left; only 1: auto).	34.8521690369	28187
Coq.ZArith.ZArith_dec.Z_dec'	40
Coq.ZArith.ZArith_dec.Z_zerop	40
Coq.ZArith.Zpow_alt.Piter_mul_acc	40
Coq.ZArith.Zpow_alt.Piter_op_square	40
Coq.ZArith.Zpow_alt.Zpower_equiv	40
Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	0	search with cache (only 1: trivial).	0.0136258602142	1
Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40	0.0.0.4.0.0.0.0.0	search with cache (only 1: destruct b as [| b| b]; only 1: intros Hb; only 1: simpl; only 1: Z.order'; only 1: intros Hb; only 1: now elim Hb; only 1: intros Hb; only 1: simpl; only 1: now elim Hb).	1.43642187119	988
Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40
Coq.Program.Wf.Fix_F_eq	40	0.6.1	search with cache (only 1: intro p; only 1: destruct r using Acc_inv_dep; only 1: auto).	0.0185551643372	13
Coq.Program.Wf.Fix_F_inv	40	0.18.10.2.0	search with cache (only 1: destruct r using Acc_inv_dep; only 1: intros; only 1: simpl in *; only 1: rewrite <- Wf.Fix_F_eq; only 1: auto).	10.8101110458	21823
Coq.Program.Wf.Fix_eq	40
Coq.Program.Wf.fix_sub_eq	40	0.0.0.0.0.0	search with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.0233228206635	6
Coq.Program.Wf.measure_wf	40
Coq.Program.Wf.F_unfold	40	0.3	search with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).	0.0142230987549	5
Coq.Program.Wf.Fix_F_sub_rect	40	0.6.4.1	search with cache (only 1: intros; only 1: induction (Rwf x); only 1: rewrite <- Fix_F_eq; only 1: auto).	0.26086807251	268
Coq.Program.Wf.eq_Fix_F_sub	40	2.12	search with cache (only 1: apply Fix_F_inv; only 1: auto).	0.370116949081	313
Coq.Program.Wf.Fix_sub_rect	40
Coq.Program.Wf.fix_sub_eq_ext	40
Coq.Program.Subset.subset_eq	40
Coq.Program.Subset.match_eq_rewrite	40	8.3.3.1.15.2.33	search with cache (only 1: intro; only 1: intro; only 1: intros Hfst Hsnd; only 1: intro p; only 1: destruct p; only 1: subst; only 1: reflexivity).	10.3053848743	53002
Coq.Program.Equality.JMeq_eq_refl	40	3	search with cache (only 1: apply UIP).	0.00562000274658	4
Coq.Program.Equality.UIP_refl_refl	40	6	search with cache (only 1: apply UIP).	0.00896811485291	13
Coq.Program.Equality.inj_pairT2_refl	40	16	search with cache (only 1: apply UIP).	0.0342729091644	108
Coq.Program.Equality.solution_left	40	1.0.1.18	search with cache (only 1: intros Hfst Hsnd; only 1: intros; only 1: destruct H; only 1: trivial).	0.0735840797424	293
Coq.Program.Equality.solution_right	40	3.0.0	search with cache (only 1: intros; only 1: subst; only 1: trivial).	0.00853800773621	6
Coq.Program.Equality.deletion	40	1.0	search with cache (only 1: intros; only 1: assumption).	0.00631880760193	3
Coq.Program.Equality.simplification_heq	40	0.3.14.6	search with cache (only 1: intros h1 h2; only 1: subst; only 1: apply h1; only 1: trivial).	0.181006193161	641
Coq.Program.Equality.simplification_existT2	40	0.1.0.18.3.23	search with cache (only 1: intro Streicher_K; only 1: intros; only 1: apply Streicher_K; only 1: apply eq_dep_eq; only 1: apply eq_sigT_eq_dep; only 1: assumption).	1.32484102249	7081
Coq.Program.Equality.simplification_existT1	40	0.16.3.28.14.27	search with cache (only 1: intro Streicher_K; only 1: intros; only 1: apply Streicher_K; only 1: dependent rewrite H; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT; only 1: assumption).	8.35465598106	54583
Coq.Program.Equality.simplification_K	40	12.3.7	search with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: assumption).	0.487656116486	933
Coq.Program.Combinators.compose_id_left	40	6	search with cache (only 1: trivial).	0.0129749774933	19
Coq.Program.Combinators.compose_id_right	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0067150592804	2
Coq.Program.Combinators.compose_assoc	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00692987442017	2
Coq.Program.Combinators.flip_flip	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00678896903992	2
Coq.Program.Combinators.prod_uncurry_curry	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00699210166931	2
Coq.Program.Combinators.prod_curry_uncurry	40	0.26.21.1.13.0.21	search with cache (only 1: intro H; only 1: intros; only 1: apply functional_extensionality_dep_good; only 1: intros; only 1: apply functional_extensionality_dep_good; only 1: intros [HypL HypR]; only 1: reflexivity).	11.0720560551	88183
Coq.Sorting.PermutEq.multiplicity_In	40
Coq.Sorting.PermutEq.multiplicity_In_O	40
Coq.Sorting.PermutEq.multiplicity_In_S	40	0.0.0.0.0	search with cache (only 1: intros; only 1: eapply In_InA, multiplicity_InA in H; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances).	0.0404810905457	5
Coq.Sorting.PermutEq.multiplicity_NoDup	40
Coq.Sorting.PermutEq.NoDup_permut	40
Coq.Sorting.PermutEq.permut_In_In	40
Coq.Sorting.PermutEq.permut_cons_In	40
Coq.Sorting.PermutEq.permut_nil	40
Coq.Sorting.PermutEq.permutation_Permutation	40
Coq.Sorting.PermutEq.permut_length_1	40
Coq.Sorting.PermutEq.permut_length_2	40
Coq.Sorting.PermutEq.permut_length	40	0.0.0.1.0.0.0.0.0.0.6.0.1.0.0.0.0	search with cache (only 1: intro l; only 1: induction l; only 1: intros l2 H; only 1: rewrite (PermutSetoid.permut_nil (eqA:=permut_sym (eqA_dec:=H))); only 1: auto; only 1: intros; only 1: destruct (in_split _ _ (permut_cons_In H)) as (h2, (t2, H1)); only 1: subst l2; only 1: rewrite app_length; only 1: simpl; only 1: rewrite <- plus_n_Sm; only 1: f_equal; only 1: rewrite <- app_length; only 1: apply IHl; only 1: apply permut_remove_hd with a; only 1: auto with typeclass_instances; only 1: auto with typeclass_instances).	21.9004662037	21440
Coq.Sorting.PermutEq.permutation_map	40
Coq.Sorting.Mergesort.Sorted_merge	40
Coq.Sorting.Mergesort.Permuted_merge	40
Coq.Sorting.Mergesort.Sorted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Permuted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sorted_merge_stack	40	0.0.0.0.0.0.0.0.0.0.7.0.0.0	search with cache (only 1: induction stack as [| [| ]]; only 1: intros; only 1: simpl; only 1: constructor; only 1: intros; only 1: simpl; only 1: apply Sorted_merge; only 1: destruct H; only 1: auto; only 1: destruct H; only 1: auto; only 1: intros; only 1: simpl; only 1: auto).	1.39207196236	1945
Coq.Sorting.Mergesort.Permuted_merge_stack	40
Coq.Sorting.Mergesort.Sorted_iter_merge	40
Coq.Sorting.Mergesort.Permuted_iter_merge	40
Coq.Sorting.Mergesort.Sorted_sort	40
Coq.Sorting.Mergesort.LocallySorted_sort	40
Coq.Sorting.Mergesort.Permuted_sort	40
Coq.Sorting.Mergesort.StronglySorted_sort	40
Coq.Sorting.Mergesort.leb_total	40
Coq.Sorting.Permutation.Permutation_nil	40
Coq.Sorting.Permutation.Permutation_nil_cons	40
Coq.Sorting.Permutation.Permutation_refl	40
Coq.Sorting.Permutation.Permutation_sym	40
Coq.Sorting.Permutation.Permutation_trans	40	4.0	search with cache (only 1: intros l l' Hperm; only 1: apply perm_trans with (l' := l')).	0.0178618431091	14
Coq.Sorting.Permutation.Permutation_cons	40	0.1.6.0	search with cache (only 1: intros l x HF; only 1: induction HF; only 1: constructor; only 1: auto).	0.0712101459503	41
Coq.Sorting.Permutation.Permutation_in	40
Coq.Sorting.Permutation.Permutation_in'	40
Coq.Sorting.Permutation.Permutation_app_tail	40
Coq.Sorting.Permutation.Permutation_app_head	40	0.0.0.0.1.11	search with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: auto).	2.86728000641	822
Coq.Sorting.Permutation.Permutation_app	40
Coq.Sorting.Permutation.Permutation_app'	40
Coq.Sorting.Permutation.Permutation_add_inside	40
Coq.Sorting.Permutation.Permutation_cons_append	40
Coq.Sorting.Permutation.Permutation_app_comm	40
Coq.Sorting.Permutation.Permutation_cons_app	40
Coq.Sorting.Permutation.Permutation_Add	40
Coq.Sorting.Permutation.Permutation_middle	40	0.0.3	search with cache (only 1: intros; only 1: rewrite app_comm_cons, Permutation_cons_append; only 1: now rewrite <- app_assoc).	0.116086006165	14
Coq.Sorting.Permutation.Permutation_rev	40	2.3.7.1.10	search with cache (only 1: induction l; only 1: constructor; only 1: simpl; only 1: rewrite <- IHl; only 1: auto).	8.1879029274	1833
Coq.Sorting.Permutation.Permutation_rev'	40
Coq.Sorting.Permutation.Permutation_length	40
Coq.Sorting.Permutation.Permutation_length'	40	0.0.0.0.0.3.0.0.0	search with cache (only 1: repeat red; only 1: intros l l' Hperm; only 1: induction Hperm; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).	0.384004116058	199
Coq.Sorting.Permutation.Permutation_ind_bis	40
Coq.Sorting.Permutation.Permutation_nil_app_cons	40
Coq.Sorting.Permutation.Permutation_Add_inv	40
Coq.Sorting.Permutation.Permutation_app_inv	40
Coq.Sorting.Permutation.Permutation_cons_inv	40
Coq.Sorting.Permutation.Permutation_cons_app_inv	40	0.1.0.0.2	search with cache (only 1: intros; only 1: eapply Permutation_Add_inv; only 1: eauto using Add_app; only 1: eauto using Add_head; only 1: eauto using Add_app).	0.0270390510559	8
Coq.Sorting.Permutation.Permutation_app_inv_l	40
Coq.Sorting.Permutation.Permutation_app_inv_r	40
Coq.Sorting.Permutation.Permutation_length_1_inv	40
Coq.Sorting.Permutation.Permutation_length_1	40
Coq.Sorting.Permutation.Permutation_length_2_inv	40
Coq.Sorting.Permutation.Permutation_length_2	40
Coq.Sorting.Permutation.NoDup_Permutation	40
Coq.Sorting.Permutation.NoDup_Permutation_bis	40
Coq.Sorting.Permutation.Permutation_NoDup	40
Coq.Sorting.Permutation.Permutation_NoDup'	40
Coq.Sorting.Permutation.Permutation_map	40
Coq.Sorting.Permutation.Permutation_map'	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: repeat red; only 1: induction 1; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: eauto).	0.103947162628	9
Coq.Sorting.Permutation.nat_bijection_Permutation	40
Coq.Sorting.Permutation.adapt_injective	40
Coq.Sorting.Permutation.adapt_ok	40
Coq.Sorting.Permutation.Permutation_nth_error	40
Coq.Sorting.Permutation.Permutation_nth_error_bis	40
Coq.Sorting.Permutation.Permutation_nth	40
Coq.Sorting.PermutSetoid.list_contents_app	40
Coq.Sorting.PermutSetoid.permut_refl	40	5.2.10.0	search with cache (only 1: simple induction l; only 1: split; only 1: intros; only 1: constructor).	1.03765797615	843
Coq.Sorting.PermutSetoid.permut_sym	40	1.0	search with cache (only 1: unfold permutation; only 1: auto with datatypes).	0.0230309963226	3
Coq.Sorting.PermutSetoid.permut_trans	40	9.0.0	search with cache (only 1: unfold permutation, meq; only 1: intros; only 1: congruence).	1.0624268055	417
Coq.Sorting.PermutSetoid.permut_cons_eq	40
Coq.Sorting.PermutSetoid.permut_cons	40	0.0.0	search with cache (only 1: unfold permutation; only 1: simpl; only 1: auto with datatypes).	0.0296969413757	3
Coq.Sorting.PermutSetoid.permut_app	40
Coq.Sorting.PermutSetoid.permut_add_inside_eq	40
Coq.Sorting.PermutSetoid.permut_add_inside	40
Coq.Sorting.PermutSetoid.permut_add_cons_inside_eq	40
Coq.Sorting.PermutSetoid.permut_add_cons_inside	40
Coq.Sorting.PermutSetoid.permut_middle	40
Coq.Sorting.PermutSetoid.permut_sym_app	40	3.0.4.0.1	search with cache (only 1: unfold permutation, meq in *; only 1: intros; only 1: repeat rewrite list_contents_app in *; only 1: simpl; only 1: auto with arith).	0.956305027008	202
Coq.Sorting.PermutSetoid.permut_rev	40
Coq.Sorting.PermutSetoid.permut_conv_inv	40	1.2.0.2.0.0.2.3.0.1.2	search with cache (only 1: unfold permutation, meq in *; only 1: intro a; only 1: intros; only 1: generalize (H a0); only 1: clear H; only 1: simpl; only 1: destruct (eqA_dec a a0); only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	24.4873449802	15013
Coq.Sorting.PermutSetoid.permut_app_inv1	40
Coq.Sorting.PermutSetoid.if_eqA_then	40	0.0.5.6	search with cache (only 1: intros; only 1: destruct (eqA_dec a a'); only 1: trivial; only 1: congruence).	0.335456132889	212
Coq.Sorting.PermutSetoid.permut_app_inv2	40	3.0.0.0.1.0.0.1	search with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: apply plus_reg_l).	3.18230390549	931
Coq.Sorting.PermutSetoid.permut_remove_hd_eq	40
Coq.Sorting.PermutSetoid.permut_remove_hd	40
Coq.Sorting.PermutSetoid.if_eqA_else	40	1.3.11.0	search with cache (only 1: intros; only 1: destruct (eqA_dec a a'); only 1: congruence; only 1: auto).	1.38456702232	1278
Coq.Sorting.PermutSetoid.if_eqA_refl	40	28.0.2.0.0.1	search with cache (only 1: intros H a; only 1: intros; only 1: destruct eqA_dec as [_| NEQ]; only 1: auto; only 1: contradict NEQ; only 1: reflexivity).	21.8256671429	37996
Coq.Sorting.PermutSetoid.if_eqA	40
Coq.Sorting.PermutSetoid.if_eqA_rewrite_l	40
Coq.Sorting.PermutSetoid.if_eqA_rewrite_r	40
Coq.Sorting.PermutSetoid.multiplicity_eqA	40
Coq.Sorting.PermutSetoid.multiplicity_InA	40
Coq.Sorting.PermutSetoid.multiplicity_InA_O	40
Coq.Sorting.PermutSetoid.multiplicity_InA_S	40	0.0.0.0.0	search with cache (only 1: intros l a; only 1: rewrite multiplicity_InA; only 1: destruct (multiplicity (list_contents l) a); only 1: auto with *; only 1: auto with arith).	0.052649974823	5
Coq.Sorting.PermutSetoid.multiplicity_NoDupA	40
Coq.Sorting.PermutSetoid.permut_InA_InA	40	2.4.1.2.2.7.2	search with cache (only 1: intros a'; only 1: intros l a; only 1: rewrite multiplicity_InA; only 1: intros H; only 1: rewrite multiplicity_InA; only 1: specialize (H a); only 1: omega).	21.5764980316	13154
Coq.Sorting.PermutSetoid.permut_cons_InA	40	1.0.0.1.1.0.0.5.2	search with cache (only 1: unfold permutation, meq; only 1: intros a'; only 1: intros l a; only 1: rewrite multiplicity_InA; only 1: simpl; only 1: intros; only 1: specialize (H a); only 1: rewrite if_eqA_refl in H; only 1: omega).	9.86874008179	5724
Coq.Sorting.PermutSetoid.permut_nil	40
Coq.Sorting.PermutSetoid.permut_length_1	40
Coq.Sorting.PermutSetoid.permut_length_2	40
Coq.Sorting.PermutSetoid.permut_length	40
Coq.Sorting.PermutSetoid.NoDupA_equivlistA_permut	40
Coq.Sorting.PermutSetoid.permut_map	40
Coq.Sorting.PermutSetoid.Permutation_impl_permutation	40
Coq.Sorting.PermutSetoid.permut_eqA	40	1.0.0.6.0.0	search with cache (only 1: induction 1; only 1: apply permut_refl; only 1: apply permut_cons_eq; only 1: trivial; only 1: trivial; only 1: trivial).	0.268074989319	144
Coq.Sorting.PermutSetoid.permutation_Permutation	40
Coq.Sorting.Sorted.HdRel_inv	40	0.19.4	search with cache (only 1: intros; only 1: inversion H; only 1: trivial).	1.11801791191	2607
Coq.Sorting.Sorted.Sorted_inv	40	0.0	search with cache (only 1: inversion 1; only 1: auto).	0.0125460624695	2
Coq.Sorting.Sorted.Sorted_rect	40
Coq.Sorting.Sorted.Sorted_LocallySorted_iff	40
Coq.Sorting.Sorted.StronglySorted_inv	40	0.3	search with cache (only 1: inversion 1; only 1: auto).	0.0345149040222	18
Coq.Sorting.Sorted.StronglySorted_rect	40
Coq.Sorting.Sorted.StronglySorted_rec	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).	0.014228105545	3
Coq.Sorting.Sorted.StronglySorted_Sorted	40	2.3.1.0.11	search with cache (only 1: induction 1 as [| a l [| ]]; only 1: auto using Sorted, LocallySorted, HdRel; only 1: auto using Sorted, LocallySorted, HdRel; only 1: inversion H1; only 1: auto using Sorted, LocallySorted, HdRel).	8.02520394325	5994
Coq.Sorting.Sorted.Sorted_extends	40
Coq.Sorting.Sorted.Sorted_StronglySorted	40
Coq.Sorting.Heap.leA_Tree_Leaf	40	25	search with cache (only 1: split).	0.882609844208	1129
Coq.Sorting.Heap.leA_Tree_Node	40	1.0	search with cache (only 1: simpl; only 1: auto with datatypes).	0.0250999927521	3
Coq.Sorting.Heap.invert_heap	40	1.5.16	search with cache (only 1: intros; only 1: inversion H; only 1: auto with datatypes).	1.12755203247	880
Coq.Sorting.Heap.is_heap_rect	40
Coq.Sorting.Heap.is_heap_rec	40	0.2.0.0.4.0.0.1.3.1.0.0	search with cache (only 1: simple induction T; only 1: auto with datatypes; only 1: intros a G PG D PD PN; only 1: elim (invert_heap a G D); only 1: intros H1 H2; only 1: elim H2; only 1: intros H3 H4; only 1: elim H4; only 1: intros; only 1: elim H2; only 1: auto with datatypes; only 1: auto with datatypes).	9.80016088486	7696
Coq.Sorting.Heap.low_trans	40
Coq.Sorting.Heap.Equivalence_instance_0	40
Coq.Sorting.Heap.Proper_instance_0	40	2.4.1.1.0.0	search with cache (only 1: red; only 1: red; only 1: red; only 1: red; only 1: simpl in *; only 1: auto with datatypes).	0.650677919388	305
Coq.Sorting.Heap.merge	40
Coq.Sorting.Heap.insert	40	0.8	search with cache (only 1: fix merge0 1; only 1: auto with datatypes).	0.0732178688049	34
Coq.Sorting.Heap.list_to_heap	40	3.2.1	search with cache (only 1: fix merge0 1; only 1: fix merge 1; only 1: auto with datatypes).	0.0537209510803	29
Coq.Sorting.Heap.heap_to_list	40	0.16	search with cache (only 1: fix merge0 1; only 1: auto with datatypes).	0.509428977966	490
Coq.Sorting.Heap.treesort	40	4.0.3	search with cache (only 1: fix merge0 1; only 1: intros; only 1: auto with datatypes).	0.0451769828796	17
Coq.Init.Wf.Acc_inv	40	6.10	search with cache (only 1: destruct 1; only 1: auto).	0.10558795929	585
Coq.Init.Wf.well_founded_induction_type	40
Coq.Init.Wf.well_founded_induction	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.00651288032532	4
Coq.Init.Wf.well_founded_ind	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.00737023353577	4
Coq.Init.Wf.Fix_F_eq	40	0.119	search with cache (only 1: intros f [x]; only 1: trivial).	4.73550009727	78798
Coq.Init.Wf.Fix_F_inv	40
Coq.Init.Wf.Fix_eq	40
Coq.Init.Wf.well_founded_induction_type_2	40
Coq.Init.Tactics.decide_left	40	1.0.5.5.0.10.6.0.2	search with cache (only 1: intro A; only 1: unfold not; only 1: intro H1; only 1: elim H1; only 1: intro z; only 1: auto; only 1: intro H; only 1: intro z; only 1: destruct (H z)).	8.0663690567	68753
Coq.Init.Tactics.decide_right	40	1.1.0.0	search with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	0.00810694694519	6
Coq.Init.Peano.pred_Sn	40	2	search with cache (only 1: trivial).	0.0040180683136	3
Coq.Init.Peano.not_eq_S	40	15.2.8	search with cache (only 1: unfold not; only 1: intro A; only 1: auto).	1.63011312485	9826
Coq.Init.Peano.O_S	40	6	search with cache (only 1: discriminate).	0.00942397117615	29
Coq.Init.Peano.n_Sn	40
Coq.Init.Peano.plus_n_O	40	0.4.1.2	search with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	0.01997590065	44
Coq.Init.Peano.plus_O_n	40	0.0.1.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0062849521637	6
Coq.Init.Peano.plus_n_Sm	40	0.0.3.0.2	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.00763487815857	10
Coq.Init.Peano.plus_Sn_m	40	0.0.1.0.0.0	search with cache (only 1: intros n m; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.00743412971497	7
Coq.Init.Peano.mult_n_O	40	0.1.3	search with cache (only 1: induction n; only 1: auto; only 1: auto).	0.00548195838928	7
Coq.Init.Peano.mult_n_Sm	40
Coq.Init.Peano.le_pred	40
Coq.Init.Peano.le_S_n	40
Coq.Init.Peano.le_0_n	40	0.0.3	search with cache (only 1: induction n; only 1: auto; only 1: auto).	0.00641202926636	6
Coq.Init.Peano.le_n_S	40	1.0.2	search with cache (only 1: induction 1; only 1: constructor; only 1: auto).	0.0266871452332	71
Coq.Init.Peano.nat_case	40	0.0.4.1	search with cache (only 1: induction n; only 1: intros; only 1: trivial; only 1: auto).	0.0070788860321	9
Coq.Init.Peano.nat_double_ind	40	0.0.6.0.0	search with cache (only 1: induction n; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).	0.0254068374634	57
Coq.Init.Peano.max_l	40
Coq.Init.Peano.max_r	40	0.0.1.0.7.0.0.0.0.1.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: simpl; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: destruct m; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	39.4914879799	90334
Coq.Init.Peano.min_l	40	0.0.1.2.2.0.1.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: trivial; only 1: destruct m; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	3.13532996178	5909
Coq.Init.Peano.min_r	40	0.0.1.0.0.0.0.1.0.0.1.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: simpl; only 1: destruct m; only 1: trivial; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	3.36493301392	6469
Coq.Init.Peano.nat_rect_succ_r	40	1.14.2.2.13	search with cache (only 1: induction n as [| p H]; only 1: auto; only 1: simpl; only 1: destruct H; only 1: auto).	0.955873012543	5346
Coq.Init.Peano.nat_rect_plus	40	0.1.1.0.1.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: rewrite <- ?IHn; only 1: trivial).	0.0143799781799	9
Coq.Init.Datatypes.andb_prop	40
Coq.Init.Datatypes.andb_true_intro	40	0.0.3.19.78	search with cache (only 1: intro H; only 1: destruct 1; only 1: destruct H; only 1: assumption; only 1: assumption).	6.64970207214	115502
Coq.Init.Datatypes.eq_true_ind_r	40	0.52.15	search with cache (only 1: intros A P H; only 1: destruct 1; only 1: assumption).	0.413334131241	8880
Coq.Init.Datatypes.eq_true_rec_r	40	0.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00610494613647	3
Coq.Init.Datatypes.eq_true_rect_r	40	0.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00686097145081	3
Coq.Init.Datatypes.surjective_pairing	40	0.0.5	search with cache (only 1: intros; only 1: destruct p; only 1: reflexivity).	0.00824093818665	8
Coq.Init.Datatypes.injective_projections	40
Coq.Init.Datatypes.pair_equal_spec	40
Coq.Init.Datatypes.rew_pair	40	0.4	search with cache (only 1: destruct H; only 1: trivial).	0.00978684425354	6
Coq.Init.Datatypes.comparison_eq_stable	40
Coq.Init.Datatypes.CompOpp_involutive	40	2.2.2.0.1	search with cache (only 1: intro H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H).	0.0240550041199	86
Coq.Init.Datatypes.CompOpp_inj	40	0.2.2.2.0.2.2.2.0.2	search with cache (only 1: destruct c, c'; only 1: reflexivity; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: reflexivity; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: reflexivity).	2.38000512123	12935
Coq.Init.Datatypes.CompOpp_iff	40
Coq.Init.Datatypes.CompareSpec2Type	40
Coq.Init.Datatypes.CompSpec2Type	40
Coq.Init.Logic.proj1	40
Coq.Init.Logic.proj2	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00253200531006	2
Coq.Init.Logic.iff_refl	40
Coq.Init.Logic.iff_trans	40	2.2.1.2.2	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.0192241668701	118
Coq.Init.Logic.iff_sym	40	0.0.0.3	search with cache (only 1: destruct 1; only 1: split; only 1: trivial; only 1: trivial).	0.0049159526825	12
Coq.Init.Logic.and_iff_compat_l	40	0.0.2.0.0.0.1.0.1.3	search with cache (only 1: destruct 1; only 1: split; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.0445477962494	560
Coq.Init.Logic.and_iff_compat_r	40	0.1.1.0.0.0.1.0.0.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: auto; only 1: intros [? ?]; only 1: split; only 1: apply Hr; only 1: auto; only 1: auto).	0.0839459896088	1031
Coq.Init.Logic.or_iff_compat_l	40
Coq.Init.Logic.or_iff_compat_r	40	1.1.8.0.1.1.1.4.0.1.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: auto; only 1: right; only 1: auto; only 1: intros [?| ?]; only 1: left; only 1: auto; only 1: right; only 1: auto).	0.713547945023	15468
Coq.Init.Logic.imp_iff_compat_l	40	5.5.0.3	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	0.0333089828491	359
Coq.Init.Logic.imp_iff_compat_r	40	2.3.2.3.0.3	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros H ?; only 1: auto; only 1: intros H ?; only 1: auto).	0.0474760532379	587
Coq.Init.Logic.not_iff_compat	40	2.2.0.0	search with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: auto; only 1: auto).	0.00532698631287	8
Coq.Init.Logic.neg_false	40	2.10.13.0.1.2.0	search with cache (only 1: intros; only 1: split; only 1: split; only 1: trivial; only 1: destruct 1; only 1: intros [? ?]; only 1: trivial).	0.554759025574	8217
Coq.Init.Logic.and_cancel_l	40
Coq.Init.Logic.and_cancel_r	40
Coq.Init.Logic.and_comm	40	0.0.1.0.0.0.1.0.3	search with cache (only 1: split; only 1: intros [HypL HypR]; only 1: split; only 1: trivial; only 1: trivial; only 1: intros [HypL HypR]; only 1: split; only 1: trivial; only 1: trivial).	0.0571100711823	322
Coq.Init.Logic.and_assoc	40	5.1.3.0.0.0.3.4.0.3.0.0.1.0	search with cache (only 1: intros; only 1: split; only 1: intros [HypL HypR]; only 1: split; only 1: apply HypL; only 1: split; only 1: apply HypL; only 1: assumption; only 1: intros [HypL HypR]; only 1: split; only 1: split; only 1: apply HypL; only 1: apply HypR; only 1: apply HypR).	1.95124816895	18225
Coq.Init.Logic.or_cancel_l	40
Coq.Init.Logic.or_cancel_r	40
Coq.Init.Logic.or_comm	40	0.0.0.2.6.0.0.0.2.6.5	search with cache (only 1: split; only 1: intros [?| ?]; only 1: right; only 1: exact H; only 1: left; only 1: trivial; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: exact H).	0.66030216217	5677
Coq.Init.Logic.or_assoc	40
Coq.Init.Logic.iff_and	40	1.2	search with cache (only 1: intros; only 1: assumption).	0.00575685501099	5
Coq.Init.Logic.iff_to_and	40	0.0.4.2.5	search with cache (only 1: intros; only 1: apply and_iff_compat_r; only 1: split; only 1: trivial; only 1: trivial).	0.208483934402	942
Coq.Init.Logic.inst	40	2.0	search with cache (only 1: intros; only 1: trivial).	0.00596904754639	4
Coq.Init.Logic.gen	40	1.0	search with cache (only 1: unfold all; only 1: auto).	0.00500893592834	3
Coq.Init.Logic.absurd	40	4.2.11.2.0.1	search with cache (only 1: intro A; only 1: unfold not; only 1: intro H; only 1: intros; only 1: elim H1; only 1: trivial).	0.296172142029	4656
Coq.Init.Logic.eq_sym	40	0.39	search with cache (only 1: destruct 1; only 1: trivial).	0.243105888367	1735
Coq.Init.Logic.eq_trans	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00558114051819	2
Coq.Init.Logic.eq_trans_r	40	0.0	search with cache (only 1: destruct 2; only 1: trivial).	0.00514101982117	2
Coq.Init.Logic.f_equal	40	0.1	search with cache (only 1: destruct 1; only 1: trivial).	0.00574493408203	3
Coq.Init.Logic.not_eq_sym	40	0.5.1.4.4	search with cache (only 1: unfold not; only 1: intro H1; only 1: destruct 1; only 1: elim H1; only 1: trivial).	0.110873937607	868
Coq.Init.Logic.eq_sind_r	40	0.5	search with cache (only 1: destruct 2; only 1: trivial).	0.00643515586853	13
Coq.Init.Logic.eq_ind_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.0053288936615	3
Coq.Init.Logic.eq_rec_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00515198707581	3
Coq.Init.Logic.eq_rect_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00560116767883	3
Coq.Init.Logic.f_equal_dep	40
Coq.Init.Logic.f_equal_dep2	40	0.6.0	search with cache (only 1: destruct H; only 1: destruct 1; only 1: reflexivity).	0.00852799415588	9
Coq.Init.Logic.rew_opp_r	40	0.1	search with cache (only 1: destruct H; only 1: reflexivity).	0.0062530040741	3
Coq.Init.Logic.rew_opp_l	40	0.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.00639605522156	3
Coq.Init.Logic.f_equal2	40	1.6.1.0	search with cache (only 1: intros; only 1: destruct H; only 1: elim eq_sym with (1 := H0); only 1: trivial).	0.026535987854	105
Coq.Init.Logic.f_equal3	40	0.1.0.1	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.00993895530701	23
Coq.Init.Logic.f_equal4	40	0.1.0.0.1	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0111031532288	24
Coq.Init.Logic.f_equal5	40	0.1.0.0.0.1	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0124170780182	25
Coq.Init.Logic.f_equal_compose	40	0.4.6.3	search with cache (only 1: intros A x P H y H0; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).	0.0445580482483	288
Coq.Init.Logic.eq_trans_refl_l	40	0.1	search with cache (only 1: destruct e; only 1: reflexivity).	0.00628209114075	3
Coq.Init.Logic.eq_trans_refl_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00553679466248	2
Coq.Init.Logic.eq_sym_involutive	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00559592247009	2
Coq.Init.Logic.eq_trans_sym_inv_l	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00560998916626	2
Coq.Init.Logic.eq_trans_sym_inv_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00560903549194	2
Coq.Init.Logic.eq_trans_assoc	40	0.2.7.0	search with cache (only 1: destruct e; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).	0.0223278999329	124
Coq.Init.Logic.rew_map	40	0.0.1	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.00723910331726	4
Coq.Init.Logic.eq_trans_map	40	0.3.3.5.22.15.27	search with cache (only 1: intro H; only 1: intros ? ? ? Fl Fr; only 1: intros A C h1 h2; only 1: destruct h2; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	22.7496800423	231693
Coq.Init.Logic.map_subst	40	0.0	search with cache (only 1: destruct H; only 1: reflexivity).	0.00643706321716	2
Coq.Init.Logic.map_subst_map	40	0.0	search with cache (only 1: destruct H; only 1: reflexivity).	0.00641107559204	2
Coq.Init.Logic.rew_swap	40	0.3.2.1	search with cache (only 1: destruct H; only 1: intros; only 1: destruct H; only 1: reflexivity).	0.0102028846741	25
Coq.Init.Logic.rew_compose	40	2.0.0	search with cache (only 1: intros; only 1: destruct H2; only 1: trivial).	0.00677990913391	5
Coq.Init.Logic.eq_id_comm_l	40
Coq.Init.Logic.eq_id_comm_r	40
Coq.Init.Logic.eq_refl_map_distr	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0063579082489	2
Coq.Init.Logic.eq_trans_map_distr	40	0.5.2.20.1.2	search with cache (only 1: destruct e; only 1: simpl; only 1: intros; only 1: rewrite eq_trans_refl_l; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).	0.503561973572	4294
Coq.Init.Logic.eq_sym_map_distr	40	0.3	search with cache (only 1: destruct e; only 1: reflexivity).	0.00856614112854	19
Coq.Init.Logic.eq_trans_sym_distr	40	0.5.5	search with cache (only 1: destruct e'; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).	0.02889585495	144
Coq.Init.Logic.eq_trans_rew_distr	40	0.6	search with cache (only 1: destruct e'; only 1: reflexivity).	0.00782799720764	16
Coq.Init.Logic.rew_const	40	0.21	search with cache (only 1: destruct e; only 1: reflexivity).	0.118689775467	430
Coq.Init.Logic.unique_existence	40
Coq.Init.Logic.forall_exists_unique_domain_coincide	40
Coq.Init.Logic.forall_exists_coincide_unique_domain	40
Coq.Init.Logic.exists_inhabited	40	10.13.1	search with cache (only 1: intros A P H; only 1: destruct H; only 1: auto).	0.161489963531	2172
Coq.Init.Logic.inhabited_covariant	40	0.2.5	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.0057520866394	15
Coq.Init.Logic.eq_stepl	40	0.5.3.5	search with cache (only 1: intros; only 1: destruct H; only 1: symmetry; only 1: trivial).	0.0258531570435	182
Coq.Init.Logic.iff_stepl	40	13.1.19.4.2	search with cache (only 1: intros A B C [H1 H2] [H3 H4]; only 1: split; only 1: auto; only 1: intros; only 1: auto).	5.50794005394	42920
Coq.Init.Logic.eq_ex_uncurried	40
Coq.Init.Logic.rew_ex	40
Coq.Init.Logic.eq_ex2_uncurried	40	0.0.8.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct H; only 1: destruct p; only 1: reflexivity).	0.0474669933319	183
Coq.Init.Logic.rew_ex2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0070481300354	2
Coq.Init.Logic_Type.identity_sym	40	1.6	search with cache (only 1: destruct 1; only 1: trivial).	0.00702285766602	9
Coq.Init.Logic_Type.identity_trans	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.0056619644165	2
Coq.Init.Logic_Type.identity_congr	40	1.1	search with cache (only 1: destruct 1; only 1: trivial).	0.00698184967041	4
Coq.Init.Logic_Type.not_identity_sym	40	0.1.2.7	search with cache (only 1: intros h1 h2; only 1: destruct h2; only 1: apply h1; only 1: trivial).	0.055251121521	261
Coq.Init.Logic_Type.identity_ind_r	40	2.6.8	search with cache (only 1: intros A P H; only 1: destruct 2; only 1: trivial).	0.0492150783539	355
Coq.Init.Logic_Type.identity_rec_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.00666403770447	3
Coq.Init.Logic_Type.identity_rect_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.0066089630127	3
Coq.Init.Specif.sigT_eta	40	1.10	search with cache (only 1: destruct p; only 1: reflexivity).	0.0146310329437	47
Coq.Init.Specif.sig_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.00655293464661	2
Coq.Init.Specif.sigT2_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.00693702697754	2
Coq.Init.Specif.sig2_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.00702881813049	2
Coq.Init.Specif.exists_to_inhabited_sig	40	1.7.10.13	search with cache (only 1: destruct 1; only 1: split; only 1: exists x; only 1: trivial).	0.170658111572	1815
Coq.Init.Specif.inhabited_sig_to_exists	40	1.2.1.83.75	search with cache (only 1: intro H1; only 1: elim H1; only 1: intros [x y]; only 1: exists x; only 1: trivial).	2.55309391022	64696
Coq.Init.Specif.eq_existT_uncurried	40	0.0.1.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0102310180664	5
Coq.Init.Specif.eq_sigT_uncurried	40
Coq.Init.Specif.eq_existT_curried	40	0.0.0	search with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.00824403762817	3
Coq.Init.Specif.eq_existT_curried_map	40	0.0	search with cache (only 1: destruct p, q; only 1: reflexivity).	0.0108418464661	2
Coq.Init.Specif.eq_existT_curried_trans	40
Coq.Init.Specif.eq_existT_curried_congr	40	0.16.25.9	search with cache (only 1: destruct r, q, p; only 1: intros; only 1: destruct H; only 1: reflexivity).	6.21618795395	20998
Coq.Init.Specif.eq_sigT_uncurried_iff	40
Coq.Init.Specif.eq_sigT_rect	40
Coq.Init.Specif.rew_sigT	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0102958679199	2
Coq.Init.Specif.eq_exist_uncurried	40	0.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct p, q; only 1: reflexivity).	0.0108499526978	3
Coq.Init.Specif.eq_sig_uncurried	40	0.0.0.4.0.0	search with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: destruct pq as [p q]; only 1: simpl in *; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0304808616638	24
Coq.Init.Specif.eq_sig_rect	40
Coq.Init.Specif.eq_sig_uncurried_iff	40	1.1.1.3.1.2.0	search with cache (only 1: split; only 1: intro p; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: apply eq_exist_uncurried).	0.351327180862	692
Coq.Init.Specif.rew_sig	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0106339454651	2
Coq.Init.Specif.eq_existT2_uncurried	40
Coq.Init.Specif.eq_sigT2_uncurried	40	1.0.0.2.1.4	search with cache (only 1: destruct pqr as [p q r]; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.32687497139	372
Coq.Init.Specif.eq_sigT2_uncurried_iff	40	0.7.1.0.2.0.2.1	search with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: apply eq_existT2_uncurried).	0.875379085541	1215
Coq.Init.Specif.eq_sigT2_rect	40
Coq.Init.Specif.rew_sigT2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0106999874115	2
Coq.Init.Specif.eq_exist2_uncurried	40	1.0.0.0	search with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl in *; only 1: reflexivity).	0.0113649368286	5
Coq.Init.Specif.eq_sig2_uncurried	40	1.0.0.2.0.4	search with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: destruct pqr as [p q r]; only 1: simpl in *; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.487275123596	411
Coq.Init.Specif.eq_sig2_uncurried_iff	40	0.7.1.0.3.0.2.1	search with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: apply eq_exist2_uncurried).	1.05781912804	1406
Coq.Init.Specif.eq_sig2_rect	40
Coq.Init.Specif.rew_sig2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0107390880585	2
Coq.Init.Specif.Choice	40
Coq.Init.Specif.Choice2	40
Coq.Init.Specif.bool_choice	40
Coq.Init.Specif.dependent_choice	40
Coq.Init.Specif.absurd_set	40	0.1.1	search with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).	0.012228012085	26
Coq.QArith.QOrderedType.lt_strorder	40	0.0.0.0.2.0.2.54.56	search with cache (only 1: split; only 1: intro; only 1: apply Z.lt_irrefl; only 1: red; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: auto).	32.1525740623	93959
Coq.QArith.QOrderedType.lt_compat	40	0.0.0	search with cache (only 1: intros p q H r s H'; only 1: rewrite 2!Qlt_alt, H, H'; only 1: auto with *).	0.016284942627	3
Coq.QArith.Qreduction.Qred_correct	40
Coq.QArith.Qreduction.Qred_complete	40
Coq.QArith.Qreduction.Qred_eq_iff	40
Coq.QArith.Qreduction.Qred_comp_Proper	40
Coq.QArith.Qreduction.Qplus'_correct	40
Coq.QArith.Qreduction.Qmult'_correct	40	1.0	search with cache (only 1: intros; only 1: apply Qred_correct).	0.00716304779053	3
Coq.QArith.Qreduction.Qminus'_correct	40	1.0	search with cache (only 1: intros; only 1: apply Qred_correct).	0.00780510902405	3
Coq.QArith.Qreduction.Qplus'_comp_Proper	40
Coq.QArith.Qreduction.Qmult'_comp_Proper	40	1.0.4.0	search with cache (only 1: intros; only 1: unfold Qmult'; only 1: rewrite H, H0; only 1: auto with qarith).	0.0319900512695	9
Coq.QArith.Qreduction.Qminus'_comp_Proper	40	1.0.5.0	search with cache (only 1: intros; only 1: unfold Qminus'; only 1: rewrite H, H0; only 1: auto with qarith).	0.0335841178894	10
Coq.QArith.Qreduction.Qred_opp	40
Coq.QArith.Qreduction.Qred_compare	40	0.2	search with cache (only 1: intros; only 1: now rewrite !Qred_correct).	0.419068813324	196
Coq.QArith.Qreduction.Qred_le	40	10	search with cache (only 1: now rewrite !Qred_correct).	0.312783002853	98
Coq.QArith.Qreduction.Qred_lt	40	11	search with cache (only 1: now rewrite !Qred_correct).	0.37283706665	149
Coq.QArith.Qcabs.Qred_abs	40
Coq.QArith.Qcabs.Qcabs_canon	40
Coq.QArith.Qcabs.Qcabs_case	40
Coq.QArith.Qcabs.Qcabs_pos	40
Coq.QArith.Qcabs.Qcabs_neg	40
Coq.QArith.Qcabs.Qcabs_nonneg	40	4.0.0.0.0.9	search with cache (only 1: unfold Qcle, Qcminus; only 1: simpl in *; only 1: apply Qabs_case; only 1: intros; only 1: auto; only 1: apply (Qopp_le_compat x 0)).	1.22194385529	683
Coq.QArith.Qcabs.Qcabs_opp	40
Coq.QArith.Qcabs.Qcabs_triangle	40	1.0.0.0.5	search with cache (only 1: unfold Qcle, Qcminus; only 1: Qc_unfolds; only 1: fold (this x); only 1: repeat rewrite Qred_correct; only 1: apply Qabs_triangle).	0.256082057953	62
Coq.QArith.Qcabs.Qcabs_Qcmult	40
Coq.QArith.Qcabs.Qcabs_Qcminus	40
Coq.QArith.Qcabs.Qcle_Qcabs	40	21.0.1.5.4	search with cache (only 1: Qc_unfolds; only 1: fold (this x); only 1: set (K := canon [x]); only 1: simpl in K; only 1: apply Qle_Qabs).	32.5397770405	45042
Coq.QArith.Qcabs.Qcabs_triangle_reverse	40
Coq.QArith.Qcabs.Qcabs_Qcle_condition	40	3.1.2.0.3	search with cache (only 1: unfold Qcle, Qcabs, Qcminus, Qcplus, Qcopp, Q2Qc, this; only 1: fold (this x) (this y) (this (- x)) (this (- y)); only 1: repeat rewrite Qred_correct; only 1: rewrite Qabs_Qle_condition; only 1: intuition).	0.508594036102	324
Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_null	40
Coq.QArith.Qpower.Qpower_positive_1	40
Coq.QArith.Qpower.Qpower_1	40
Coq.QArith.Qpower.Qpower_positive_0	40	3.0.0.0.0.0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: simpl; only 1: reflexivity).	0.584222078323	297
Coq.QArith.Qpower.Qpower_0	40
Coq.QArith.Qpower.Qpower_not_0_positive	40
Coq.QArith.Qpower.Qpower_pos_positive	40
Coq.QArith.Qpower.Qpower_pos	40
Coq.QArith.Qpower.Qmult_power_positive	40
Coq.QArith.Qpower.Qmult_power	40
Coq.QArith.Qpower.Qinv_power_positive	40	3.1.0.0.0.1.2.2.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: repeat rewrite IHn; only 1: rewrite Qinv_mult_distr; only 1: rewrite Qinv_mult_distr; only 1: ring; only 1: simpl; only 1: repeat rewrite IHn; only 1: rewrite Qinv_mult_distr; only 1: ring; only 1: reflexivity).	6.06299304962	2582
Coq.QArith.Qpower.Qinv_power	40
Coq.QArith.Qpower.Qdiv_power	40
Coq.QArith.Qpower.Qinv_power_n	40
Coq.QArith.Qpower.Qpower_plus_positive	40
Coq.QArith.Qpower.Qpower_opp	40
Coq.QArith.Qpower.Qpower_minus_positive	40
Coq.QArith.Qpower.Qpower_plus	40
Coq.QArith.Qpower.Qpower_plus'	40
Coq.QArith.Qpower.Qpower_mult_positive	40
Coq.QArith.Qpower.Qpower_mult	40
Coq.QArith.Qpower.Zpower_Qpower	40
Coq.QArith.Qpower.Qsqr_nonneg	40	10.2.0.4.11.39	search with cache (only 1: intros (H, H'); only 1: elim H; only 1: discriminate; only 1: simpl; only 1: discriminate; only 1: discriminate).	12.969627142	15301
Coq.QArith.Qpower.Qpower_decomp	40
Coq.QArith.Qfield.Qsrt	40
Coq.QArith.Qfield.Qsft	40
Coq.QArith.Qfield.Qpower_theory	40	1.0.0.0.0.2.0.0	search with cache (only 1: constructor; only 1: intros; only 1: red; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.38575387001	178
Coq.QArith.Qfield.ex1	40	0	search with cache (only 1: exact Qmult_plus_distr_l).	0.014083147049	1
Coq.QArith.Qfield.ex2	40	9	search with cache (only 1: exact Qplus_comm).	0.043986082077	18
Coq.QArith.Qfield.ex3	40	0.0	search with cache (only 1: intros; only 1: ring).	0.032420873642	2
Coq.QArith.Qfield.ex4	40	1	search with cache (only 1: ring).	0.0229449272156	2
Coq.QArith.Qfield.ex5	40	0	search with cache (only 1: ring).	0.0243670940399	1
Coq.QArith.Qfield.ex6	40	0	search with cache (only 1: ring).	0.0243768692017	1
Coq.QArith.Qfield.ex7	40	0.1	search with cache (only 1: intros; only 1: ring).	0.0284540653229	3
Coq.QArith.Qfield.ex8	40	0.1	search with cache (only 1: intro; only 1: ring).	0.0288510322571	3
Coq.QArith.Qfield.ex9	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0283551216125	2
Coq.QArith.Qfield.ex10	40
Coq.QArith.Qfield.Qopp_plus	40	0.0.0.0.0	search with cache (only 1: red; only 1: simpl; only 1: intro; only 1: intro; only 1: ring).	0.0868651866913	5
Coq.QArith.Qfield.Qopp_opp	40	0.0.0.0	search with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).	0.0678248405457	4
Coq.QArith.Qcanon.Qred_identity	40
Coq.QArith.Qcanon.Qred_identity2	40
Coq.QArith.Qcanon.Qred_iff	40
Coq.QArith.Qcanon.Qc_is_canon	40
Coq.QArith.Qcanon.Qc_decomp	40	0.0.0.3.2.0.0	search with cache (only 1: intros (q, hq) (q', hq') H; only 1: simpl in *; only 1: subst q'; only 1: f_equal; only 1: apply eq_proofs_unicity; only 1: intros; only 1: repeat decide equality).	0.124688148499	138
Coq.QArith.Qcanon.Qred_involutive	40	4.1.4	search with cache (only 1: intros; only 1: apply Qred_complete; only 1: apply Qred_correct).	0.348640918732	412
Coq.QArith.Qcanon.Q2Qc_eq_iff	40
Coq.QArith.Qcanon.Qceq_alt	40
Coq.QArith.Qcanon.Qclt_alt	40	1.1.4	search with cache (only 1: split; only 1: auto; only 1: auto).	0.0998039245605	81
Coq.QArith.Qcanon.Qcgt_alt	40
Coq.QArith.Qcanon.Qcle_alt	40	13	search with cache (only 1: intuition).	0.272907972336	402
Coq.QArith.Qcanon.Qcge_alt	40
Coq.QArith.Qcanon.Qc_eq_dec	40
Coq.QArith.Qcanon.Q_apart_0_1	40	4.0	search with cache (only 1: intro H; only 1: discriminate).	0.0118510723114	6
Coq.QArith.Qcanon.Qcplus_assoc	40
Coq.QArith.Qcanon.Qcplus_0_l	40
Coq.QArith.Qcanon.Qcplus_0_r	40
Coq.QArith.Qcanon.Qcplus_comm	40
Coq.QArith.Qcanon.Qcopp_involutive	40
Coq.QArith.Qcanon.Qcplus_opp_r	40
Coq.QArith.Qcanon.Qcmult_assoc	40
Coq.QArith.Qcanon.Qcmult_0_l	40	3.3.5.0	search with cache (only 1: intros; only 1: apply Qc_is_canon; only 1: simpl; only 1: auto with qarith).	0.892106056213	797
Coq.QArith.Qcanon.Qcmult_0_r	40
Coq.QArith.Qcanon.Qcmult_1_l	40
Coq.QArith.Qcanon.Qcmult_1_r	40	0.1.0.0	search with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_1_l).	0.0206339359283	5
Coq.QArith.Qcanon.Qcmult_comm	40	6.5.0.0	search with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: split).	0.393809080124	364
Coq.QArith.Qcanon.Qcmult_plus_distr_r	40
Coq.QArith.Qcanon.Qcmult_plus_distr_l	40
Coq.QArith.Qcanon.Qcmult_integral	40
Coq.QArith.Qcanon.Qcmult_integral_l	40
Coq.QArith.Qcanon.Qcmult_inv_r	40
Coq.QArith.Qcanon.Qcmult_inv_l	40	0.0.5.0.0	search with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).	0.0291728973389	10
Coq.QArith.Qcanon.Qcinv_mult_distr	40
Coq.QArith.Qcanon.Qcdiv_mult_l	40
Coq.QArith.Qcanon.Qcmult_div_r	40
Coq.QArith.Qcanon.Qcle_refl	40
Coq.QArith.Qcanon.Qcle_antisym	40	7.0.1	search with cache (only 1: unfold Qcle; only 1: intros; only 1: auto with qarith).	0.274359941483	173
Coq.QArith.Qcanon.Qcle_trans	40
Coq.QArith.Qcanon.Qclt_not_eq	40
Coq.QArith.Qcanon.Qclt_le_weak	40	8.0.2.1	search with cache (only 1: unfold Qclt; only 1: unfold Qcle; only 1: intros; only 1: auto with qarith).	1.36140203476	1314
Coq.QArith.Qcanon.Qcle_lt_trans	40
Coq.QArith.Qcanon.Qclt_le_trans	40
Coq.QArith.Qcanon.Qclt_trans	40	2.0.2.0.0	search with cache (only 1: intros; only 1: eapply Qle_lt_trans; only 1: apply Qlt_le_weak; only 1: eauto; only 1: eauto).	0.0455379486084	35
Coq.QArith.Qcanon.Qcnot_lt_le	40	12.0.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: auto with qarith).	1.16143798828	1564
Coq.QArith.Qcanon.Qcnot_le_lt	40	14.0.1	search with cache (only 1: unfold Qclt; only 1: intros; only 1: auto with qarith).	2.56753706932	4142
Coq.QArith.Qcanon.Qclt_not_le	40	5.0.2.1.1	search with cache (only 1: unfold Qclt; only 1: intros; only 1: intro; only 1: destruct (Qlt_not_eq _ _ H); only 1: auto with qarith).	0.517945051193	742
Coq.QArith.Qcanon.Qcle_not_lt	40	1.5.0.2	search with cache (only 1: intros; only 1: contradict H; only 1: apply Qlt_not_le; only 1: auto).	0.317812919617	382
Coq.QArith.Qcanon.Qcle_lt_or_eq	40
Coq.QArith.Qcanon.Qc_dec	40
Coq.QArith.Qcanon.Qclt_le_dec	40
Coq.QArith.Qcanon.Qcopp_le_compat	40
Coq.QArith.Qcanon.Qcle_minus_iff	40
Coq.QArith.Qcanon.Qclt_minus_iff	40
Coq.QArith.Qcanon.Qcplus_le_compat	40
Coq.QArith.Qcanon.Qcmult_le_compat_r	40
Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40
Coq.QArith.Qcanon.Qcmult_lt_compat_r	40
Coq.QArith.Qcanon.Qcpower_1	40
Coq.QArith.Qcanon.Qcpower_0	40	1.0.8.0	search with cache (only 1: induction n; only 1: tauto; only 1: simpl; only 1: auto with qarith).	0.516992092133	470
Coq.QArith.Qcanon.Qcpower_pos	40
Coq.QArith.Qcanon.Qc_eq_bool_correct	40
Coq.QArith.Qcanon.Qcrt	40
Coq.QArith.Qcanon.Qcft	40
Coq.QArith.Qcanon.test_field	40	0.0.4.3.0.0	search with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_r; only 1: auto).	0.379147052765	323
Coq.QArith.Qreals.IZR_nz	40	1	search with cache (only 1: auto with real).	0.00869011878967	2
Coq.QArith.Qreals.eqR_Qeq	40
Coq.QArith.Qreals.Qeq_eqR	40
Coq.QArith.Qreals.Rle_Qle	40
Coq.QArith.Qreals.Qle_Rle	40
Coq.QArith.Qreals.Rlt_Qlt	40
Coq.QArith.Qreals.Qlt_Rlt	40
Coq.QArith.Qreals.Q2R_plus	40
Coq.QArith.Qreals.Q2R_mult	40
Coq.QArith.Qreals.Q2R_opp	40
Coq.QArith.Qreals.Q2R_minus	40
Coq.QArith.Qreals.Q2R_inv	40
Coq.QArith.Qreals.Q2R_div	40
Coq.QArith.QArith_base.inject_Z_injective	40
Coq.QArith.QArith_base.Qeq_alt	40
Coq.QArith.QArith_base.Qlt_alt	40	3.1.1.1	search with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: reflexivity).	0.0198199748993	12
Coq.QArith.QArith_base.Qgt_alt	40
Coq.QArith.QArith_base.Qle_alt	40	3.1.1.1	search with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: reflexivity).	0.0199820995331	12
Coq.QArith.QArith_base.Qge_alt	40
Coq.QArith.QArith_base.Qcompare_antisym	40
Coq.QArith.QArith_base.Qcompare_spec	40
Coq.QArith.QArith_base.Qeq_refl	40	1.0	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: now constructor).	0.0082311630249	3
Coq.QArith.QArith_base.Qeq_sym	40	1	search with cache (only 1: auto with qarith).	0.0155730247498	17
Coq.QArith.QArith_base.Qeq_trans	40
Coq.QArith.QArith_base.Q_Setoid	40
Coq.QArith.QArith_base.Qeq_dec	40
Coq.QArith.QArith_base.Qeq_bool_iff	40
Coq.QArith.QArith_base.Qeq_bool_eq	40	1	search with cache (only 1: apply Zeq_is_eq_bool).	0.0471849441528	50
Coq.QArith.QArith_base.Qeq_eq_bool	40	0	search with cache (only 1: apply Qeq_bool_iff).	0.00553798675537	1
Coq.QArith.QArith_base.Qeq_bool_neq	40
Coq.QArith.QArith_base.Qle_bool_iff	40
Coq.QArith.QArith_base.Qle_bool_imp_le	40	0	search with cache (only 1: apply Zle_is_le_bool).	0.00636601448059	1
Coq.QArith.QArith_base.Qnot_eq_sym	40	2.1.3	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: intros XY YZ; only 1: auto with qarith).	0.0329160690308	25
Coq.QArith.QArith_base.Qeq_bool_comm	40
Coq.QArith.QArith_base.Qeq_bool_refl	40	4.1.0.0.0	search with cache (only 1: apply Qeq_bool_iff; only 1: apply Qeq_bool_iff; only 1: apply Qeq_bool_iff; only 1: unfold Qeq, Qlt, Qcompare; only 1: now constructor).	0.0568130016327	45
Coq.QArith.QArith_base.Qeq_bool_sym	40	5.3	search with cache (only 1: rewrite !Qeq_bool_iff; only 1: now symmetry).	0.052059173584	37
Coq.QArith.QArith_base.Qeq_bool_trans	40	0.0.0.0.0.3	search with cache (only 1: rewrite !Qeq_bool_iff; only 1: unfold Qeq; only 1: intros XY YZ; only 1: apply Z.mul_reg_r with (QDen y); only 1: auto with qarith; only 1: now rewrite Z.mul_shuffle0, XY, Z.mul_shuffle0, YZ, Z.mul_shuffle0).	0.114552021027	23
Coq.QArith.QArith_base.Qmake_Qdiv	40	7.0.0.0	search with cache (only 1: unfold Qeq; only 1: simpl; only 1: rewrite !Z.mul_1_r; only 1: now constructor).	0.121958971024	83
Coq.QArith.QArith_base.Qplus_comp	40
Coq.QArith.QArith_base.Qopp_comp	40
Coq.QArith.QArith_base.Qminus_comp	40
Coq.QArith.QArith_base.Qmult_comp	40
Coq.QArith.QArith_base.Qinv_comp	40
Coq.QArith.QArith_base.Qdiv_comp	40
Coq.QArith.QArith_base.Qcompare_comp	40
Coq.QArith.QArith_base.Qle_comp	40
Coq.QArith.QArith_base.Qlt_compat	40
Coq.QArith.QArith_base.Qeqb_comp	40	5.0.5.8.1	search with cache (only 1: intros x x' Hx y y' Hy; only 1: apply eq_true_iff_eq; only 1: rewrite !Qeq_bool_iff; only 1: rewrite Hx, Hy; only 1: now symmetry).	17.3004720211	14845
Coq.QArith.QArith_base.Qleb_comp	40
Coq.QArith.QArith_base.Q_apart_0_1	40	0	search with cache (only 1: now subst).	0.00971412658691	1
Coq.QArith.QArith_base.Qplus_assoc	40	5.0.0.0.4.2	search with cache (only 1: unfold Qeq, Qplus; only 1: intros (p1, p2) (q1, q2) EQ; only 1: simpl in *; only 1: simpl_mult; only 1: ring_simplify; only 1: ring).	5.15525484085	1313
Coq.QArith.QArith_base.Qplus_0_l	40	8.25.1.1	search with cache (only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: ring).	6.53216600418	5181
Coq.QArith.QArith_base.Qplus_0_r	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.0223789215088	5
Coq.QArith.QArith_base.Qplus_comm	40	0.0.23.0.0.1	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: simpl_mult; only 1: ring).	8.19068813324	5179
Coq.QArith.QArith_base.Qopp_involutive	40	3.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.0186619758606	7
Coq.QArith.QArith_base.Qplus_opp_r	40	1.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.0198121070862	5
Coq.QArith.QArith_base.Qplus_inj_r	40
Coq.QArith.QArith_base.Qplus_inj_l	40
Coq.QArith.QArith_base.Qmult_assoc	40	0.0.0.0.6	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.69557595253	179
Coq.QArith.QArith_base.Qmult_0_l	40	0.0.0	search with cache (only 1: red; only 1: simpl in *; only 1: now subst).	0.00952792167664	3
Coq.QArith.QArith_base.Qmult_0_r	40	0.0.2.0	search with cache (only 1: intros; only 1: red; only 1: simpl in *; only 1: ring).	0.0632209777832	14
Coq.QArith.QArith_base.Qmult_1_l	40
Coq.QArith.QArith_base.Qmult_1_r	40	2.2.4.0.0.0	search with cache (only 1: intro; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).	1.80218505859	1055
Coq.QArith.QArith_base.Qmult_comm	40	6.5.0.2.0	search with cache (only 1: intros; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	5.91503596306	2503
Coq.QArith.QArith_base.Qmult_plus_distr_r	40	0.0.0.0.3	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.932122945786	117
Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.066535949707	5
Coq.QArith.QArith_base.Qmult_integral	40
Coq.QArith.QArith_base.Qmult_integral_l	40
Coq.QArith.QArith_base.inject_Z_plus	40	2.23.0.3.0.0	search with cache (only 1: generalize x, y; only 1: intros; only 1: unfold Qeq, Qplus; only 1: simpl; only 1: rewrite !Z.mul_1_r; only 1: now subst).	20.5491549969	51487
Coq.QArith.QArith_base.inject_Z_mult	40	0.0.5.0	search with cache (only 1: unfold Qplus, inject_Z; only 1: unfold Qeq, Qmult; only 1: simpl; only 1: f_equal).	0.0120470523834	9
Coq.QArith.QArith_base.inject_Z_opp	40	4.0	search with cache (only 1: unfold Qplus, inject_Z; only 1: now subst).	0.00621199607849	6
Coq.QArith.QArith_base.Qinv_involutive	40
Coq.QArith.QArith_base.Qmult_inv_r	40
Coq.QArith.QArith_base.Qinv_mult_distr	40
Coq.QArith.QArith_base.Qdiv_mult_l	40
Coq.QArith.QArith_base.Qmult_div_r	40
Coq.QArith.QArith_base.Qinv_plus_distr	40	1.1.0.0.0	search with cache (only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: simpl_mult; only 1: ring).	0.0280120372772	7
Coq.QArith.QArith_base.Qinv_minus_distr	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	0.0250489711761	5
Coq.QArith.QArith_base.Qmult_inj_r	40
Coq.QArith.QArith_base.Qmult_inj_l	40
Coq.QArith.QArith_base.Qle_refl	40
Coq.QArith.QArith_base.Qle_antisym	40
Coq.QArith.QArith_base.Qle_trans	40
Coq.QArith.QArith_base.Qlt_irrefl	40	0.14	search with cache (only 1: apply Z.ge_le_iff; only 1: auto with zarith).	0.137944936752	190
Coq.QArith.QArith_base.Qlt_not_eq	40
Coq.QArith.QArith_base.Zle_Qle	40	0.0.0.0.15	search with cache (only 1: unfold Qle; only 1: simpl; only 1: f_equal; only 1: ring; only 1: ring).	0.35849905014	663
Coq.QArith.QArith_base.Zlt_Qlt	40	0.0.6	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: simpl; only 1: now rewrite !Z.mul_1_r).	0.0144078731537	18
Coq.QArith.QArith_base.Qle_lteq	40
Coq.QArith.QArith_base.Qlt_le_weak	40
Coq.QArith.QArith_base.Qle_lt_trans	40
Coq.QArith.QArith_base.Qlt_le_trans	40
Coq.QArith.QArith_base.Qlt_trans	40
Coq.QArith.QArith_base.Qnot_lt_le	40	14	search with cache (only 1: apply Z.ge_le_iff).	0.0654740333557	150
Coq.QArith.QArith_base.Qnot_le_lt	40
Coq.QArith.QArith_base.Qlt_not_le	40	0	search with cache (only 1: apply Z.nle_gt).	0.00610613822937	1
Coq.QArith.QArith_base.Qle_not_lt	40	0	search with cache (only 1: apply Z.nlt_ge).	0.00513100624084	1
Coq.QArith.QArith_base.Qle_lt_or_eq	40
Coq.QArith.QArith_base.Q_dec	40
Coq.QArith.QArith_base.Qlt_le_dec	40
Coq.QArith.QArith_base.Qarchimedean	40
Coq.QArith.QArith_base.Qopp_le_compat	40
Coq.QArith.QArith_base.Qle_minus_iff	40
Coq.QArith.QArith_base.Qlt_minus_iff	40
Coq.QArith.QArith_base.Qplus_le_compat	40
Coq.QArith.QArith_base.Qplus_lt_le_compat	40
Coq.QArith.QArith_base.Qplus_le_l	40
Coq.QArith.QArith_base.Qplus_le_r	40	0.0.0.0.0.0.0.1.0.0.0.6	search with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_le_compat; only 1: auto with *; only 1: auto with *).	22.8015890121	5115
Coq.QArith.QArith_base.Qplus_lt_l	40
Coq.QArith.QArith_base.Qplus_lt_r	40	0.0.0.0.0.0.1.0.0.0.0.7	search with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *).	10.7291040421	3755
Coq.QArith.QArith_base.Qmult_le_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	40
Coq.QArith.QArith_base.Qmult_le_r	40
Coq.QArith.QArith_base.Qmult_le_l	40	0.0.0.0.0.0.0.3	search with cache (only 1: rewrite (Qmult_comm z x), (Qmult_comm z y); only 1: split; only 1: intro; only 1: now apply Qmult_lt_0_le_reg_r with z; only 1: intro; only 1: apply Qmult_le_compat_r; only 1: auto with qarith; only 1: auto with qarith).	0.441783905029	136
Coq.QArith.QArith_base.Qmult_lt_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_r	40
Coq.QArith.QArith_base.Qmult_lt_l	40
Coq.QArith.QArith_base.Qmult_le_0_compat	40	1.1.0.0.1.0.1.0.2	search with cache (only 1: unfold Qle, Qlt; only 1: simpl; only 1: intro; only 1: rewrite Z.mul_1_r; only 1: intro; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: intros; only 1: now apply Z.mul_nonneg_nonneg).	5.51354002953	4088
Coq.QArith.QArith_base.Qinv_le_0_compat	40	2.0.1.0.0.0.0.1.0.2.3	search with cache (only 1: intros (x1, x2); only 1: unfold Qle; only 1: case x1; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: discriminate; only 1: simpl; only 1: auto).	13.225728035	13283
Coq.QArith.QArith_base.Qle_shift_div_l	40
Coq.QArith.QArith_base.Qle_shift_inv_l	40
Coq.QArith.QArith_base.Qle_shift_div_r	40
Coq.QArith.QArith_base.Qle_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_0_compat	40	0.0.0.5	search with cache (only 1: intros [[| n| n] d] Ha; only 1: assumption; only 1: assumption; only 1: assumption).	0.0120139122009	9
Coq.QArith.QArith_base.Qlt_shift_div_l	40
Coq.QArith.QArith_base.Qlt_shift_inv_l	40
Coq.QArith.QArith_base.Qlt_shift_div_r	40
Coq.QArith.QArith_base.Qlt_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_contravar	40
Coq.QArith.QArith_base.Qpower_positive_comp	40
Coq.QArith.QArith_base.Qpower_comp	40
Coq.QArith.Qminmax.plus_max_distr_l	40
Coq.QArith.Qminmax.plus_max_distr_r	40
Coq.QArith.Qminmax.plus_min_distr_l	40
Coq.QArith.Qminmax.plus_min_distr_r	40	0.0.0.0.1.0.2.0	search with cache (only 1: intros; only 1: rewrite (Qplus_comm n p), (Qplus_comm m p), (Qplus_comm _ p); only 1: apply min_monotone; only 1: eauto with *; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).	0.247477054596	89
Coq.QArith.Qround.Qopp_lt_compat	40
Coq.QArith.Qround.Qfloor_Z	40	39.2.21	search with cache (only 1: simpl in *; only 1: intros; only 1: intuition).	1.98476004601	7816
Coq.QArith.Qround.Qceiling_Z	40
Coq.QArith.Qround.Qfloor_le	40
Coq.QArith.Qround.Qle_ceiling	40
Coq.QArith.Qround.Qle_floor_ceiling	40	0.0.0.2.0.0	search with cache (only 1: intros x; only 1: apply Qle_trans with (- - x); only 1: rewrite Qopp_involutive; only 1: auto with *; only 1: change (Qceiling x : Q) with (- Qfloor (- x)); only 1: auto with *).	0.0593280792236	8
Coq.QArith.Qround.Qlt_floor	40
Coq.QArith.Qround.Qceiling_lt	40
Coq.QArith.Qround.Qfloor_resp_le	40
Coq.QArith.Qround.Qceiling_resp_le	40
Coq.QArith.Qround.Qfloor_comp_Proper	40
Coq.QArith.Qround.Qceiling_comp_Proper	40	1.2.1.1.0	search with cache (only 1: intros x y H; only 1: apply Z.le_antisymm; only 1: auto with *; only 1: symmetry in H; only 1: auto with *).	0.299325227737	58
Coq.QArith.Qround.Zdiv_Qdiv	40
Coq.QArith.Qabs.Qabs_case	40
Coq.QArith.Qabs.Qabs_wd_Proper	40
Coq.QArith.Qabs.Qabs_pos	40
Coq.QArith.Qabs.Qabs_neg	40	1.2.2.0.0.1.0.0.1	search with cache (only 1: intros x H; only 1: apply Qabs_case; only 1: intros H0; only 1: setoid_replace x with 0; only 1: reflexivity; only 1: apply Qle_antisym; only 1: assumption; only 1: assumption; only 1: reflexivity).	1.28990888596	1308
Coq.QArith.Qabs.Qabs_nonneg	40	2.2.2.1.1	search with cache (only 1: intros x H; only 1: destruct x as [[| xn| xn] xd]; only 1: abstract (compute; discriminate); only 1: abstract (compute; discriminate); only 1: abstract (compute; discriminate)).	0.237228870392	213
Coq.QArith.Qabs.Zabs_Qabs	40	6.0.0	search with cache (only 1: unfold Qeq in *; only 1: simpl in *; only 1: congruence).	0.0186340808868	9
Coq.QArith.Qabs.Qabs_opp	40	3.3.2.5.5	search with cache (only 1: intros x; only 1: destruct x as [[| xn| xn] xd]; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	3.51042890549	4812
Coq.QArith.Qabs.Qabs_triangle	40
Coq.QArith.Qabs.Qabs_Qmult	40	2.4.0.1.0.4	search with cache (only 1: intros [xn xd] [yn yd]; only 1: simpl; only 1: unfold Qeq in *; only 1: simpl in *; only 1: repeat rewrite <- Z.abs_mul; only 1: congruence).	2.09393191338	2337
Coq.QArith.Qabs.Qabs_Qinv	40	3.3.2.2.1	search with cache (only 1: intros x; only 1: destruct x as [[| xn| xn] xd]; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	4.90659689903	3593
Coq.QArith.Qabs.Qabs_Qminus	40
Coq.QArith.Qabs.Qle_Qabs	40	1.1.0.0.0.0.0.1.3	search with cache (only 1: intros x; only 1: destruct x as [[| xn| xn] xd]; only 1: unfold Qle; only 1: simpl; only 1: auto with *; only 1: unfold Qle; only 1: simpl; only 1: auto with *; only 1: abstract (compute; discriminate)).	0.917409896851	754
Coq.QArith.Qabs.Qabs_triangle_reverse	40
Coq.QArith.Qabs.Qabs_Qle_condition	40
Coq.QArith.Qabs.Qabs_diff_Qle_condition	40
Coq.Classes.CMorphisms.eq_proper_proxy	40	1.4	search with cache (only 1: red; only 1: trivial).	0.00631499290466	7
Coq.Classes.CMorphisms.reflexive_proper_proxy	40	1	search with cache (only 1: firstorder).	0.00463914871216	2
Coq.Classes.CMorphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00387406349182	1
Coq.Classes.CMorphisms.pointwise_pointwise	40	7.6.13.6	search with cache (only 1: split; only 1: destruct 2; only 1: firstorder; only 1: firstorder).	2.61025691032	9641
Coq.Classes.CMorphisms.subrelation_id_proper	40	0	search with cache (only 1: simpl_crelation).	0.00966596603394	1
Coq.Classes.CMorphisms.subrelation_respectful	40	0	search with cache (only 1: firstorder).	0.00733399391174	1
Coq.Classes.CMorphisms.subrelation_refl	40	1.0.0	search with cache (only 1: hnf; only 1: intros; only 1: assumption).	0.0088939666748	4
Coq.Classes.CMorphisms.subrelation_proper	40	0	search with cache (only 1: firstorder).	0.00596499443054	1
Coq.Classes.CMorphisms.proper_subrelation_proper_arrow	40	2	search with cache (only 1: simpl_crelation).	0.0319120883942	3
Coq.Classes.CMorphisms.pointwise_subrelation	40	2	search with cache (only 1: simpl_crelation).	0.0126299858093	3
Coq.Classes.CMorphisms.forall_subrelation	40	6.1	search with cache (only 1: simpl_crelation; only 1: firstorder).	0.0168740749359	9
Coq.Classes.CMorphisms.iff_impl_subrelation	40	4.1.0.0	search with cache (only 1: hnf; only 1: intros; only 1: destruct H; only 1: trivial).	0.0115008354187	9
Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00588917732239	1
Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	1	search with cache (only 1: firstorder).	0.00824594497681	11
Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0	search with cache (only 1: firstorder).	0.0062460899353	1
Coq.Classes.CMorphisms.respectful_per_obligation_2	40
Coq.Classes.CMorphisms.flip_proper_obligation_1	40	6	search with cache (only 1: firstorder).	0.0137679576874	7
Coq.Classes.CMorphisms.trans_contra_co_type_morphism_obligation_1	40	11	search with cache (only 1: firstorder).	1.74297189713	351
Coq.Classes.CMorphisms.trans_contra_inv_impl_type_morphism_obligation_1	40	11	search with cache (only 1: firstorder).	4.03231692314	2030
Coq.Classes.CMorphisms.trans_co_impl_type_morphism_obligation_1	40	8	search with cache (only 1: firstorder).	1.25777387619	708
Coq.Classes.CMorphisms.trans_sym_co_inv_impl_type_morphism_obligation_1	40	12	search with cache (only 1: firstorder).	0.960206031799	987
Coq.Classes.CMorphisms.trans_sym_contra_arrow_morphism_obligation_1	40	12	search with cache (only 1: firstorder).	10.2087538242	7649
Coq.Classes.CMorphisms.per_partial_app_type_morphism_obligation_1	40	13	search with cache (only 1: firstorder).	0.924567937851	547
Coq.Classes.CMorphisms.trans_co_eq_inv_arrow_morphism_obligation_1	40	12	search with cache (only 1: firstorder).	0.74844288826	703
Coq.Classes.CMorphisms.PER_type_morphism_obligation_1	40	12	search with cache (only 1: firstorder).	5.27893686295	2619
Coq.Classes.CMorphisms.symmetric_equiv_flip	40	4.3.0	search with cache (only 1: hnf; only 1: unfold flip; only 1: firstorder).	0.0203030109406	10
Coq.Classes.CMorphisms.compose_proper_obligation_1	40	9	search with cache (only 1: firstorder).	0.0170900821686	10
Coq.Classes.CMorphisms.reflexive_eq_dom_reflexive	40	1.0	search with cache (only 1: intros; only 1: simpl_crelation).	0.0192060470581	3
Coq.Classes.CMorphisms.respectful_morphism	40
Coq.Classes.CMorphisms.Reflexive_partial_app_morphism	40	9	search with cache (only 1: simpl_crelation).	0.0196239948273	10
Coq.Classes.CMorphisms.flip_respectful	40	2.2.1.0	search with cache (only 1: unfold respectful, relation_equivalence in *; only 1: split; only 1: firstorder; only 1: firstorder).	0.0211589336395	9
Coq.Classes.CMorphisms.flip1	40	1.1.1	search with cache (only 1: hnf; only 1: intros; only 1: auto).	0.0158050060272	6
Coq.Classes.CMorphisms.flip2	40	0	search with cache (only 1: firstorder).	0.0100479125977	1
Coq.Classes.CMorphisms.eq_subrelation	40	1	search with cache (only 1: simpl_crelation).	0.0155839920044	2
Coq.Classes.CMorphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.0104780197144	1
Coq.Classes.CMorphisms.proper_eq	40	0	search with cache (only 1: firstorder).	0.0101220607758	1
Coq.Classes.CMorphisms.proper_proper	40	0.0.1	search with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.0198910236359	4
Coq.Classes.CMorphisms.proper_normalizes_proper	40	7	search with cache (only 1: firstorder).	0.0358870029449	19
Coq.Classes.CMorphisms.flip_atom	40	0	search with cache (only 1: firstorder).	0.0112509727478	1
Coq.Classes.CMorphisms.flip_arrow	40
Coq.Classes.CMorphisms.proper_sym_flip	40	0.1	search with cache (only 1: intros A B R R' HRR' S S' HSS' f g; only 1: simpl_crelation).	0.024041891098	3
Coq.Classes.CMorphisms.proper_sym_flip_2	40	7.3.0	search with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: unfold flip, respectful; only 1: firstorder).	1.48103308678	516
Coq.Classes.CMorphisms.proper_sym_impl_iff	40	8.9.5	search with cache (only 1: intros x x' Hxx'; only 1: simpl_crelation; only 1: firstorder).	3.63043498993	2372
Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.0.1.0.1	search with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0230457782745	7
Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40	0.0.1.0.3	search with cache (only 1: intros A R Sym B R' Sym' f Hf x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0573291778564	41
Coq.Classes.CMorphisms.PartialOrder_proper_type	40
Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40
Coq.Classes.CMorphisms.StrictOrder_PreOrder	40
Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40
Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40
Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40
Coq.Classes.Morphisms_Prop.well_founded_morphism	40
Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	0.0.2.7	search with cache (only 1: firstorder; only 1: transitivity y; only 1: auto; only 1: auto).	2.38528203964	150
Coq.Classes.CEquivalence.respecting_equiv_obligation_3	40
Coq.Classes.CEquivalence.pointwise_reflexive	40	0	search with cache (only 1: simpl_crelation).	0.00776195526123	1
Coq.Classes.CEquivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.00508594512939	1
Coq.Classes.CEquivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.0066339969635	1
Coq.Classes.CEquivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.260677099228	1
Coq.Classes.CRelationClasses.complement_inverse	40	4	search with cache (only 1: trivial).	0.00541996955872	5
Coq.Classes.CRelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.CRelationClasses.subrelation_symmetric	40	1	search with cache (only 1: firstorder).	0.0071280002594	2
Coq.Classes.CRelationClasses.flip_Reflexive	40	5.0	search with cache (only 1: hnf; only 1: firstorder).	0.00855493545532	7
Coq.Classes.CRelationClasses.flip_Antisymmetric	40	6.1	search with cache (only 1: hnf; only 1: firstorder).	0.0206730365753	18
Coq.Classes.CRelationClasses.flip_PreOrder	40	3	search with cache (only 1: firstorder).	0.0177750587463	4
Coq.Classes.CRelationClasses.flip_StrictOrder	40	3	search with cache (only 1: firstorder).	0.018492937088	4
Coq.Classes.CRelationClasses.flip_PER	40	3	search with cache (only 1: firstorder).	0.0291049480438	4
Coq.Classes.CRelationClasses.flip_Equivalence	40	0	search with cache (only 1: firstorder).	0.0330009460449	1
Coq.Classes.CRelationClasses.complement_Irreflexive	40	4.3	search with cache (only 1: hnf; only 1: firstorder).	0.0126180648804	9
Coq.Classes.CRelationClasses.complement_Symmetric	40	0	search with cache (only 1: firstorder).	0.00872611999512	1
Coq.Classes.CRelationClasses.iffT_Reflexive	40	4.26.14	search with cache (only 1: hnf; only 1: red; only 1: auto).	0.553716897964	2742
Coq.Classes.CRelationClasses.iffT_Symmetric	40	0	search with cache (only 1: firstorder).	0.00917291641235	1
Coq.Classes.CRelationClasses.iffT_Transitive	40	0	search with cache (only 1: firstorder).	0.0106699466705	1
Coq.Classes.CRelationClasses.relation_equivalence_equivalence	40
Coq.Classes.CRelationClasses.relation_implication_preorder	40	5	search with cache (only 1: firstorder).	0.0211582183838	16
Coq.Classes.CRelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.0157830715179	1
Coq.Classes.CRelationClasses.PartialOrder_inverse	40	0	search with cache (only 1: firstorder).	0.0432760715485	1
Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	0.0.0.0	search with cache (only 1: simpl_relation; only 1: transitivity y; only 1: auto; only 1: auto).	0.0138418674469	4
Coq.Classes.Equivalence.respecting_equiv_obligation_3	40
Coq.Classes.Equivalence.pointwise_reflexive	40	0	search with cache (only 1: simpl_relation).	0.00681781768799	1
Coq.Classes.Equivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.00376892089844	1
Coq.Classes.Equivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.00481510162354	1
Coq.Classes.Equivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.239260911942	1
Coq.Classes.EquivDec.unit_eqdec_obligation_1	40
Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40
Coq.Classes.EquivDec.list_eqdec_obligation_5	40
Coq.Classes.RelationClasses.complement_inverse	40	4	search with cache (only 1: trivial).	0.00519895553589	5
Coq.Classes.RelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.RelationClasses.subrelation_symmetric	40	1	search with cache (only 1: firstorder).	0.00621509552002	2
Coq.Classes.RelationClasses.flip_Reflexive	40	5.0.1.0	search with cache (only 1: hnf; only 1: intros; only 1: hnf; only 1: firstorder).	0.0105209350586	10
Coq.Classes.RelationClasses.flip_Antisymmetric	40	6.1	search with cache (only 1: hnf; only 1: firstorder).	0.0294871330261	26
Coq.Classes.RelationClasses.flip_PreOrder	40	3	search with cache (only 1: firstorder).	0.019758939743	4
Coq.Classes.RelationClasses.flip_StrictOrder	40	3	search with cache (only 1: firstorder).	0.0206258296967	4
Coq.Classes.RelationClasses.flip_PER	40	3	search with cache (only 1: firstorder).	0.0302031040192	4
Coq.Classes.RelationClasses.flip_Equivalence	40	0	search with cache (only 1: firstorder).	0.0306849479675	1
Coq.Classes.RelationClasses.complement_Irreflexive	40	4.2	search with cache (only 1: hnf; only 1: firstorder).	0.0139391422272	11
Coq.Classes.RelationClasses.complement_Symmetric	40	0	search with cache (only 1: firstorder).	0.0079460144043	1
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	0.0.1	search with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0227379798889	4
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	1.0.5	search with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0233061313629	12
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.1.0.0.5	search with cache (only 1: induction l; only 1: firstorder; only 1: intros; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).	0.523604154587	35
Coq.Classes.RelationClasses.relation_equivalence_equivalence	40
Coq.Classes.RelationClasses.relation_implication_preorder	40	3	search with cache (only 1: firstorder).	0.0120899677277	4
Coq.Classes.RelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.016951084137	1
Coq.Classes.RelationClasses.PartialOrder_inverse	40	0	search with cache (only 1: firstorder).	0.0471611022949	1
Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	0	search with cache (only 1: firstorder).	0.0174999237061	1
Coq.Classes.Morphisms.eq_proper_proxy	40	1.4	search with cache (only 1: red; only 1: trivial).	0.00748205184937	7
Coq.Classes.Morphisms.reflexive_proper_proxy	40	1	search with cache (only 1: firstorder).	0.0064480304718	2
Coq.Classes.Morphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00534391403198	1
Coq.Classes.Morphisms.pointwise_pointwise	40	1.6.0.0.5	search with cache (only 1: intros Hfst Hsnd; only 1: compute; only 1: firstorder; only 1: elim eq_sym with (1 := H0); only 1: trivial).	0.648741960526	1051
Coq.Classes.Morphisms.subrelation_id_proper	40	0.1	search with cache (only 1: reduce; only 1: firstorder).	0.00854110717773	3
Coq.Classes.Morphisms.subrelation_respectful	40	0	search with cache (only 1: firstorder).	0.00845909118652	1
Coq.Classes.Morphisms.subrelation_refl	40	0.0	search with cache (only 1: compute; only 1: firstorder).	0.00756502151489	2
Coq.Classes.Morphisms.subrelation_proper	40	0	search with cache (only 1: firstorder).	0.00675916671753	1
Coq.Classes.Morphisms.proper_subrelation_proper	40	3.4.2	search with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.429228067398	84
Coq.Classes.Morphisms.pointwise_subrelation	40	1.0.1	search with cache (only 1: unfold subrelation in *; only 1: intros; only 1: firstorder).	0.0110030174255	5
Coq.Classes.Morphisms.forall_subrelation	40	1.3.0.0	search with cache (only 1: unfold subrelation; only 1: intro x; only 1: intros; only 1: firstorder).	0.0137069225311	8
Coq.Classes.Morphisms.iff_impl_subrelation	40	1.0	search with cache (only 1: reduce; only 1: firstorder).	0.00823092460632	3
Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.0070219039917	1
Coq.Classes.Morphisms.respectful_per_obligation_2	40
Coq.Classes.Morphisms.complement_proper_obligation_1	40
Coq.Classes.Morphisms.flip_proper_obligation_1	40	8	search with cache (only 1: firstorder).	0.018807888031	9
Coq.Classes.Morphisms.trans_contra_co_morphism_obligation_1	40	13	search with cache (only 1: firstorder).	0.467658996582	273
Coq.Classes.Morphisms.trans_contra_inv_impl_morphism_obligation_1	40	9	search with cache (only 1: firstorder).	0.618251085281	368
Coq.Classes.Morphisms.trans_co_impl_morphism_obligation_1	40	3.3.2	search with cache (only 1: transitivity x0; only 1: intuition; only 1: intuition).	2.81327199936	2076
Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism_obligation_1	40	0.2.3.1	search with cache (only 1: symmetry; only 1: transitivity y; only 1: intuition; only 1: intuition).	0.0566649436951	28
Coq.Classes.Morphisms.trans_sym_contra_impl_morphism_obligation_1	40	3.3.3	search with cache (only 1: transitivity x0; only 1: intuition; only 1: intuition).	3.13171601295	2509
Coq.Classes.Morphisms.per_partial_app_morphism_obligation_1	40	11	search with cache (only 1: firstorder).	1.65717601776	1129
Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism_obligation_1	40	2.3.3	search with cache (only 1: transitivity y; only 1: intuition; only 1: intuition).	0.257930994034	182
Coq.Classes.Morphisms.PER_morphism_obligation_1	40
Coq.Classes.Morphisms.symmetric_equiv_flip	40	4.0.0.0	search with cache (only 1: hnf; only 1: compute; only 1: intros; only 1: intuition).	0.0239911079407	8
Coq.Classes.Morphisms.compose_proper_obligation_1	40	10	search with cache (only 1: firstorder).	0.0286400318146	21
Coq.Classes.Morphisms.reflexive_eq_dom_reflexive	40	7.1	search with cache (only 1: reduce; only 1: simpl_relation).	0.0246500968933	13
Coq.Classes.Morphisms.respectful_morphism	40
Coq.Classes.Morphisms.Reflexive_partial_app_morphism	40	9	search with cache (only 1: firstorder).	0.0128281116486	10
Coq.Classes.Morphisms.flip_respectful	40	0.0.0.2.1	search with cache (only 1: split; only 1: simpl_relation; only 1: reduce; only 1: apply H; only 1: simpl_relation).	0.159533023834	41
Coq.Classes.Morphisms.flip1	40	3.0.0.0.1	search with cache (only 1: reduce; only 1: red in H0; only 1: red in H0; only 1: apply H; only 1: intuition).	0.0223231315613	9
Coq.Classes.Morphisms.flip2	40	0	search with cache (only 1: firstorder).	0.0108878612518	1
Coq.Classes.Morphisms.eq_subrelation	40	0.2.0.1	search with cache (only 1: unfold subrelation; only 1: firstorder; only 1: subst; only 1: firstorder).	0.0212619304657	7
Coq.Classes.Morphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.0108070373535	1
Coq.Classes.Morphisms.proper_eq	40	0	search with cache (only 1: firstorder).	0.0108780860901	1
Coq.Classes.Morphisms.proper_proper	40	3.1.0.0	search with cache (only 1: reduce; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: subst; only 1: firstorder).	0.123522996902	63
Coq.Classes.Morphisms.proper_normalizes_proper	40	7	search with cache (only 1: firstorder).	0.0809831619263	26
Coq.Classes.Morphisms.flip_atom	40	0	search with cache (only 1: firstorder).	0.0125119686127	1
Coq.Classes.Morphisms.flip_arrow	40
Coq.Classes.Morphisms.proper_sym_flip	40	0	search with cache (only 1: simpl_relation).	0.0219600200653	1
Coq.Classes.Morphisms.proper_sym_flip_2	40	1.3	search with cache (only 1: unfold flip, respectful; only 1: simpl_relation).	0.257285118103	90
Coq.Classes.Morphisms.proper_sym_impl_iff	40	18.2	search with cache (only 1: simpl_relation; only 1: firstorder).	3.16950798035	2451
Coq.Classes.Morphisms.proper_sym_impl_iff_2	40
Coq.Classes.Morphisms.PartialOrder_proper	40
Coq.Classes.Morphisms.PartialOrder_StrictOrder	40
Coq.Classes.Morphisms.StrictOrder_PreOrder	40
Coq.Classes.Morphisms.StrictOrder_PartialOrder	40
Coq.Classes.RelationPairs.RelCompFun_Reflexive	40	3.71	search with cache (only 1: repeat red; only 1: auto).	1.31326985359	5000
Coq.Classes.RelationPairs.RelCompFun_Symmetric	40	0	search with cache (only 1: firstorder).	0.013904094696	1
Coq.Classes.RelationPairs.RelCompFun_Transitive	40	0	search with cache (only 1: firstorder).	0.0439538955688	1
Coq.Classes.RelationPairs.RelCompFun_Irreflexive	40	0	search with cache (only 1: firstorder).	0.0131959915161	1
Coq.Classes.RelationPairs.RelProd_Reflexive	40	0	search with cache (only 1: firstorder).	0.0139861106873	1
Coq.Classes.RelationPairs.RelProd_Symmetric	40	0	search with cache (only 1: firstorder).	0.0219669342041	1
Coq.Classes.RelationPairs.RelProd_Transitive	40	0	search with cache (only 1: firstorder).	0.446444034576	1
Coq.Classes.RelationPairs.FstRel_ProdRel	40	0	search with cache (only 1: firstorder).	0.0172591209412	1
Coq.Classes.RelationPairs.SndRel_ProdRel	40	0	search with cache (only 1: firstorder).	0.0172200202942	1
Coq.Classes.RelationPairs.FstRel_sub	40	0	search with cache (only 1: firstorder).	0.0145680904388	1
Coq.Classes.RelationPairs.SndRel_sub	40	0	search with cache (only 1: firstorder).	0.0145978927612	1
Coq.Classes.RelationPairs.pair_compat	40	0	search with cache (only 1: firstorder).	0.0148351192474	1
Coq.Classes.RelationPairs.fst_compat	40	0	search with cache (only 1: firstorder).	0.0145881175995	1
Coq.Classes.RelationPairs.snd_compat	40	0	search with cache (only 1: firstorder).	0.0148949623108	1
Coq.Classes.RelationPairs.RelCompFun_compat	40	2.0.0.2	search with cache (only 1: repeat red; only 1: firstorder; only 1: compute in *; only 1: intuition).	0.12021112442	8
Coq.Classes.DecidableClass.Decidable_sound	40	0.9.0.27.34	search with cache (only 1: intros n m; only 1: elim m; only 1: intro H; only 1: intros [? ?]; only 1: assumption).	7.66450500488	77379
Coq.Classes.DecidableClass.Decidable_complete	40	0.10.2.29.35	search with cache (only 1: intros n m; only 1: elim m; only 1: intro H; only 1: intros [? ?]; only 1: assumption).	9.9356739521	90030
Coq.Classes.DecidableClass.Decidable_sound_alt	40
Coq.Classes.DecidableClass.Decidable_complete_alt	40
Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	40
Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40
Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40
Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40
Coq.Classes.SetoidDec.unit_eqdec_obligation_1	40	1.102.49	search with cache (only 1: destruct x; only 1: destruct y; only 1: now subst).	29.1058609486	327166
Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	40
Coq.Classes.SetoidClass.setoid_refl	40	2	search with cache (only 1: now f_equal).	0.0150330066681	3
Coq.Classes.SetoidClass.setoid_sym	40	0	search with cache (only 1: typeclasses eauto).	0.0121929645538	1
Coq.Classes.SetoidClass.setoid_trans	40	0	search with cache (only 1: typeclasses eauto).	0.0124850273132	1
Coq.Classes.SetoidClass.nequiv_equiv_trans	40
Coq.Classes.SetoidClass.equiv_nequiv_trans	40	3.0.1.11.3.11	search with cache (only 1: intros m n v1; only 1: revert n; only 1: intros n1 le_mn1; only 1: intro; only 1: intro; only 1: now rewrite H).	34.3100240231	69296
Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40
Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	0	search with cache (only 1: firstorder).	0.515800952911	1
Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	0	search with cache (only 1: firstorder).	0.0144140720367	1
Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	1.0	search with cache (only 1: do 2 red; only 1: auto).	0.0145189762115	3
Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	0	search with cache (only 1: firstorder).	0.013594865799	1
Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	4.1.1.0	search with cache (only 1: intro; only 1: intro; only 1: intro; only 1: auto).	0.0566771030426	15
Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	3	search with cache (only 1: firstorder).	0.073361158371	31
Coq.PArith.Pnat.inj_succ	40
Coq.PArith.Pnat.inj_add	40
Coq.PArith.Pnat.inj_mul	40
Coq.PArith.Pnat.inj_1	40	1.0	search with cache (only 1: unfold to_nat; only 1: trivial).	0.00847983360291	3
Coq.PArith.Pnat.inj_xO	40
Coq.PArith.Pnat.inj_xI	40
Coq.PArith.Pnat.is_succ	40
Coq.PArith.Pnat.is_pos	40	0.5.0.4.14.4	search with cache (only 1: unfold to_nat; only 1: induction p using peano_ind; only 1: auto; only 1: rewrite iter_op_succ; only 1: auto; only 1: apply Nat.add_assoc).	0.574753046036	1768
Coq.PArith.Pnat.id	40
Coq.PArith.Pnat.inj	40
Coq.PArith.Pnat.inj_iff	40
Coq.PArith.Pnat.inj_compare	40
Coq.PArith.Pnat.inj_lt	40
Coq.PArith.Pnat.inj_le	40
Coq.PArith.Pnat.inj_gt	40
Coq.PArith.Pnat.inj_ge	40
Coq.PArith.Pnat.inj_sub	40
Coq.PArith.Pnat.inj_sub_max	40
Coq.PArith.Pnat.inj_pred	40
Coq.PArith.Pnat.inj_pred_max	40
Coq.PArith.Pnat.inj_min	40
Coq.PArith.Pnat.inj_max	40
Coq.PArith.Pnat.inj_iter	40
Coq.PArith.Pnat.id	40
Coq.PArith.Pnat.id_max	40	7.0.0.0.2.8.8	search with cache (only 1: induction n as [| n H]; only 1: trivial; only 1: simpl Pos.of_nat; only 1: destruct n; only 1: trivial; only 1: rewrite Pos2Nat.inj_succ; only 1: now rewrite H).	0.647131204605	1545
Coq.PArith.Pnat.inj	40
Coq.PArith.Pnat.inj_iff	40
Coq.PArith.Pnat.inj_succ	40	0.1.0	search with cache (only 1: destruct n; only 1: now destruct 1; only 1: trivial).	0.0114378929138	4
Coq.PArith.Pnat.inj_pred	40
Coq.PArith.Pnat.inj_add	40
Coq.PArith.Pnat.inj_mul	40
Coq.PArith.Pnat.inj_compare	40
Coq.PArith.Pnat.inj_sub	40
Coq.PArith.Pnat.inj_min	40
Coq.PArith.Pnat.inj_max	40
Coq.PArith.Pnat.id_succ	40
Coq.PArith.Pnat.pred_id	40
Coq.PArith.Pnat.id_succ	40	6.0.4.0.9	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite Pos2Nat.inj_succ; only 1: now rewrite IHn).	0.920795917511	1884
Coq.PArith.Pnat.pred_id	40	2.0.4.1.6.0	search with cache (only 1: rewrite Pos.of_nat_succ; only 1: simpl Pos.of_nat; only 1: destruct n; only 1: trivial; only 1: rewrite Pos2Nat.inj_succ; only 1: now apply Nat2Pos.id).	0.401667118073	584
Coq.PArith.Pnat.inj	40
Coq.PArith.Pnat.inj_iff	40	5.0.0.0.0.0.1	search with cache (only 1: split; only 1: intro H; only 1: apply (f_equal Pos.to_nat) in H; only 1: rewrite !id_succ in H; only 1: now injection H; only 1: intro H; only 1: now subst).	0.25154709816	262
Coq.PArith.Pnat.inv	40
Coq.PArith.Pnat.inj_succ	40	0.3	search with cache (only 1: simpl; only 1: f_equal).	0.00792908668518	5
Coq.PArith.Pnat.inj_compare	40
Coq.PArith.Pnat.Pmult_nat_mult	40
Coq.PArith.Pnat.Pmult_nat_succ_morphism	40
Coq.PArith.Pnat.Pmult_nat_l_plus_morphism	40
Coq.PArith.Pnat.Pmult_nat_plus_carry_morphism	40
Coq.PArith.Pnat.Pmult_nat_r_plus_morphism	40
Coq.PArith.Pnat.ZL6	40
Coq.PArith.Pnat.le_Pmult_nat	40
Coq.PArith.BinPos.eq_dec	40
Coq.PArith.BinPos.xI_succ_xO	40	30	search with cache (only 1: solve_proper).	0.203652143478	1499
Coq.PArith.BinPos.succ_discr	40
Coq.PArith.BinPos.pred_double_spec	40	0	search with cache (only 1: reflexivity).	0.00523900985718	1
Coq.PArith.BinPos.succ_pred_double	40
Coq.PArith.BinPos.pred_double_succ	40	0.0.0.1.0.4	search with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: reflexivity).	0.0522909164429	35
Coq.PArith.BinPos.double_succ	40	1	search with cache (only 1: reflexivity).	0.00693488121033	2
Coq.PArith.BinPos.pred_double_xO_discr	40	0.0.0.0.0.0.2	search with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	0.0254549980164	9
Coq.PArith.BinPos.succ_not_1	40	0	search with cache (only 1: now destruct p).	0.0132369995117	1
Coq.PArith.BinPos.pred_succ	40	2.0.0.0.0.0.0.0.0.2.0.3	search with cache (only 1: induction p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: reflexivity).	2.06403303146	1495
Coq.PArith.BinPos.succ_pred_or	40
Coq.PArith.BinPos.succ_pred	40
Coq.PArith.BinPos.succ_inj	40
Coq.PArith.BinPos.pred_N_succ	40	1.0.0.0.3.10.0.5	search with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: apply pred_double_succ; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	3.87101197243	4366
Coq.PArith.BinPos.add_1_r	40	0	search with cache (only 1: now destruct p).	0.00618815422058	1
Coq.PArith.BinPos.add_1_l	40	0	search with cache (only 1: now destruct p).	0.00553488731384	1
Coq.PArith.BinPos.add_carry_spec	40
Coq.PArith.BinPos.add_comm	40
Coq.PArith.BinPos.add_succ_r	40
Coq.PArith.BinPos.add_succ_l	40
Coq.PArith.BinPos.add_no_neutral	40
Coq.PArith.BinPos.add_carry_add	40
Coq.PArith.BinPos.add_reg_r	40
Coq.PArith.BinPos.add_reg_l	40
Coq.PArith.BinPos.add_cancel_r	40
Coq.PArith.BinPos.add_cancel_l	40
Coq.PArith.BinPos.add_carry_reg_r	40	4.1.1	search with cache (only 1: rewrite add_carry_spec, <- add_succ_r; only 1: rewrite add_carry_spec, <- add_succ_r; only 1: apply add_reg_r).	0.0956189632416	77
Coq.PArith.BinPos.add_carry_reg_l	40
Coq.PArith.BinPos.add_assoc	40
Coq.PArith.BinPos.add_xO	40	0.1	search with cache (only 1: simpl; only 1: f_equal).	0.00700616836548	3
Coq.PArith.BinPos.add_xI_pred_double	40
Coq.PArith.BinPos.add_xO_pred_double	40
Coq.PArith.BinPos.add_diag	40	1.1.1.1.0.1.5.1.1.4	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: rewrite ?add_carry_spec, ?pred_double_succ, ?add_xI_pred_double; only 1: f_equal; only 1: rewrite IHp; only 1: auto; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	1.37477993965	1764
Coq.PArith.BinPos.peano_rect_succ	40
Coq.PArith.BinPos.peano_rect_base	40	0.0	search with cache (only 1: revert P a f; only 1: trivial).	0.00765085220337	2
Coq.PArith.BinPos.peano_case	40
Coq.PArith.BinPos.eq_dep_eq_positive	40
Coq.PArith.BinPos.PeanoViewUnique	40
Coq.PArith.BinPos.peano_equiv	40
Coq.PArith.BinPos.mul_1_l	40	1.5.0.0	search with cache (only 1: destruct p; only 1: auto using add_carry_add; only 1: auto; only 1: trivial).	0.0121741294861	10
Coq.PArith.BinPos.mul_1_r	40	0.5.4.3.5.4.6.6	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: reflexivity).	14.802738905	29388
Coq.PArith.BinPos.mul_xO_r	40	1.0.0.5.0.3	search with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?add_carry_spec, ?IHp; only 1: simpl; only 1: now f_equal; only 1: now f_equal).	0.346876859665	165
Coq.PArith.BinPos.mul_xI_r	40
Coq.PArith.BinPos.mul_comm	40
Coq.PArith.BinPos.mul_add_distr_l	40
Coq.PArith.BinPos.mul_add_distr_r	40
Coq.PArith.BinPos.mul_assoc	40
Coq.PArith.BinPos.mul_succ_l	40
Coq.PArith.BinPos.mul_succ_r	40
Coq.PArith.BinPos.mul_xI_mul_xO_discr	40
Coq.PArith.BinPos.mul_xO_discr	40
Coq.PArith.BinPos.mul_reg_r	40
Coq.PArith.BinPos.mul_reg_l	40
Coq.PArith.BinPos.mul_cancel_r	40
Coq.PArith.BinPos.mul_cancel_l	40	1.2.3.0	search with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).	0.106250047684	93
Coq.PArith.BinPos.mul_eq_1_l	40
Coq.PArith.BinPos.mul_eq_1_r	40	0	search with cache (only 1: now destruct p, q).	0.0166640281677	1
Coq.PArith.BinPos.square_xO	40	2.0.5	search with cache (only 1: simpl; only 1: f_equal; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r).	0.0342679023743	27
Coq.PArith.BinPos.square_xI	40
Coq.PArith.BinPos.iter_swap_gen	40
Coq.PArith.BinPos.iter_swap	40	0.1.1.0.0.1.0.0.0	search with cache (only 1: induction p; only 1: simpl; only 1: intros; only 1: now rewrite ?H, ?IHp; only 1: simpl; only 1: intros; only 1: now rewrite ?H, ?IHp; only 1: simpl; only 1: trivial).	0.512465953827	357
Coq.PArith.BinPos.iter_succ	40
Coq.PArith.BinPos.iter_add	40
Coq.PArith.BinPos.iter_invariant	40
Coq.PArith.BinPos.pow_1_r	40
Coq.PArith.BinPos.pow_succ_r	40
Coq.PArith.BinPos.square_spec	40
Coq.PArith.BinPos.sub_mask_succ_r	40
Coq.PArith.BinPos.sub_mask_carry_spec	40
Coq.PArith.BinPos.sub_mask_spec	40
Coq.PArith.BinPos.sub_mask_nul_iff	40
Coq.PArith.BinPos.sub_mask_diag	40	3.0.0.0.0.0.0	search with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp).	0.0149269104004	10
Coq.PArith.BinPos.sub_mask_add	40
Coq.PArith.BinPos.sub_mask_add_diag_l	40
Coq.PArith.BinPos.sub_mask_pos_iff	40
Coq.PArith.BinPos.sub_mask_add_diag_r	40
Coq.PArith.BinPos.sub_mask_neg_iff	40
Coq.PArith.BinPos.eqb_eq	40
Coq.PArith.BinPos.ltb_lt	40
Coq.PArith.BinPos.leb_le	40
Coq.PArith.BinPos.compare_cont_spec	40
Coq.PArith.BinPos.compare_cont_Eq	40
Coq.PArith.BinPos.compare_cont_Lt_Gt	40
Coq.PArith.BinPos.compare_cont_Lt_Lt	40	0.0.0.0.1.4	search with cache (only 1: unfold leb, le; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.707587957382	192
Coq.PArith.BinPos.compare_cont_Gt_Lt	40	0.1.0.2.4	search with cache (only 1: unfold ltb, lt; only 1: unfold compare; only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: now destruct (compare_cont Eq p q)).	1.03566908836	317
Coq.PArith.BinPos.compare_cont_Gt_Gt	40
Coq.PArith.BinPos.compare_cont_Lt_not_Lt	40	0.0.0.0.0.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold gt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.0276620388031	6
Coq.PArith.BinPos.compare_cont_Lt_not_Gt	40	0.0.0.0.0.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold le; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.026878118515	6
Coq.PArith.BinPos.compare_cont_Gt_not_Lt	40	0.0.0.0.0.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold ge; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.0264961719513	6
Coq.PArith.BinPos.compare_cont_Gt_not_Gt	40	0.0.0.0.0.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.0295939445496	6
Coq.PArith.BinPos.compare_xO_xO	40	1.1.1.0	search with cache (only 1: destruct compare; only 1: easy'; only 1: trivial; only 1: trivial).	0.00989294052124	7
Coq.PArith.BinPos.compare_xI_xI	40	0	search with cache (only 1: reflexivity).	0.00441789627075	1
Coq.PArith.BinPos.compare_xI_xO	40	0.1.9.0.7	search with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: now destruct (compare_cont Eq p q)).	4.42007899284	4631
Coq.PArith.BinPos.compare_xO_xI	40	0.1.9.0.7	search with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: now destruct (compare_cont Eq p q)).	1.86676001549	2008
Coq.PArith.BinPos.compare_sub_mask	40
Coq.PArith.BinPos.lt_iff_add	40
Coq.PArith.BinPos.gt_iff_add	40
Coq.PArith.BinPos.compare_cont_refl	40	6.4.4.6.1.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: induction p; only 1: trivial; only 1: trivial; only 1: trivial).	1.09428811073	2506
Coq.PArith.BinPos.compare_cont_antisym	40
Coq.PArith.BinPos.compare_eq_iff	40
Coq.PArith.BinPos.compare_antisym	40
Coq.PArith.BinPos.compare_lt_iff	40	0.2.0.1.0	search with cache (only 1: unfold lt; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	0.0141599178314	8
Coq.PArith.BinPos.compare_le_iff	40	0.0.0.0.1	search with cache (only 1: unfold le; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	0.0139501094818	6
Coq.PArith.BinPos.gt_lt_iff	40	7.3	search with cache (only 1: unfold gt; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.585961103439	354
Coq.PArith.BinPos.gt_lt	40	0.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.00921297073364	2
Coq.PArith.BinPos.lt_gt	40	0.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.00894904136658	2
Coq.PArith.BinPos.ge_le_iff	40	4.1.2	search with cache (only 1: unfold ge; only 1: unfold le; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0314140319824	23
Coq.PArith.BinPos.ge_le	40	0.0	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.010852098465	2
Coq.PArith.BinPos.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.00441098213196	1
Coq.PArith.BinPos.compare_succ_r	40
Coq.PArith.BinPos.compare_succ_l	40
Coq.PArith.BinPos.lt_succ_r	40
Coq.PArith.BinPos.lt_succ_diag_r	40
Coq.PArith.BinPos.compare_succ_succ	40
Coq.PArith.BinPos.le_1_l	40	8.4	search with cache (only 1: unfold lt, le; only 1: now destruct compare || now destruct p).	1.29144287109	1115
Coq.PArith.BinPos.nlt_1_r	40	10.9	search with cache (only 1: unfold ltb, lt; only 1: apply compare_succ_l || apply compare_succ_r || now destruct p || now destruct q).	1.6854159832	1637
Coq.PArith.BinPos.lt_1_succ	40	1	search with cache (only 1: now destruct p).	0.0767729282379	26
Coq.PArith.BinPos.le_nlt	40	1.0	search with cache (only 1: unfold lt, le; only 1: now rewrite compare_antisym, CompOpp_iff).	0.476154088974	167
Coq.PArith.BinPos.lt_nle	40	6.3	search with cache (only 1: unfold ge, lt, compare; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).	1.38158583641	526
Coq.PArith.BinPos.lt_le_incl	40	0.0.0.4.2	search with cache (only 1: unfold lt, le; only 1: destruct compare; only 1: discriminate; only 1: discriminate; only 1: discriminate).	0.939713001251	423
Coq.PArith.BinPos.lt_lt_succ	40
Coq.PArith.BinPos.succ_lt_mono	40
Coq.PArith.BinPos.succ_le_mono	40	0.5	search with cache (only 1: unfold lt, le; only 1: now rewrite compare_succ_succ).	0.00795483589172	7
Coq.PArith.BinPos.lt_trans	40
Coq.PArith.BinPos.lt_ind	40
Coq.PArith.BinPos.lt_strorder	40
Coq.PArith.BinPos.lt_compat	40	4.2.1.4	search with cache (only 1: intros H; only 1: intros A n AB AS m; only 1: subst; only 1: reflexivity).	0.695266962051	532
Coq.PArith.BinPos.lt_total	40
Coq.PArith.BinPos.le_refl	40	0.9	search with cache (only 1: apply le_lteq; only 1: intuition).	0.376626014709	261
Coq.PArith.BinPos.le_lt_trans	40
Coq.PArith.BinPos.lt_le_trans	40
Coq.PArith.BinPos.le_trans	40
Coq.PArith.BinPos.le_succ_l	40
Coq.PArith.BinPos.le_antisym	40
Coq.PArith.BinPos.le_preorder	40
Coq.PArith.BinPos.le_partorder	40
Coq.PArith.BinPos.add_compare_mono_l	40
Coq.PArith.BinPos.add_compare_mono_r	40
Coq.PArith.BinPos.lt_add_diag_r	40
Coq.PArith.BinPos.add_lt_mono_l	40	0.0.3.0.0.0.2.0	search with cache (only 1: unfold lt; only 1: revert p q r; only 1: induction p using peano_ind; only 1: intros q r; only 1: rewrite 2!add_1_l; only 1: now rewrite compare_succ_succ; only 1: intros q r; only 1: now rewrite 2!add_succ_l, compare_succ_succ).	0.84043097496	612
Coq.PArith.BinPos.add_lt_mono_r	40	1.0.1.0	search with cache (only 1: unfold lt; only 1: rewrite 2!(add_comm _ p); only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	0.0115339756012	6
Coq.PArith.BinPos.add_lt_mono	40
Coq.PArith.BinPos.add_le_mono_l	40	1.0.6	search with cache (only 1: unfold lt, le; only 1: rewrite add_compare_mono_l; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0322020053864	11
Coq.PArith.BinPos.add_le_mono_r	40	1.1.0	search with cache (only 1: unfold le; only 1: rewrite add_compare_mono_r; only 1: apply iff_refl).	0.00909495353699	5
Coq.PArith.BinPos.add_le_mono	40
Coq.PArith.BinPos.mul_compare_mono_l	40
Coq.PArith.BinPos.mul_compare_mono_r	40
Coq.PArith.BinPos.mul_lt_mono_l	40
Coq.PArith.BinPos.mul_lt_mono_r	40	2.0.3.0	search with cache (only 1: unfold lt; only 1: rewrite 2!(mul_comm _ p); only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.030336856842	24
Coq.PArith.BinPos.mul_lt_mono	40
Coq.PArith.BinPos.mul_le_mono_l	40	2.1.0	search with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.00962090492249	6
Coq.PArith.BinPos.mul_le_mono_r	40	2.1.0	search with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).	0.00905895233154	6
Coq.PArith.BinPos.mul_le_mono	40
Coq.PArith.BinPos.lt_add_r	40	1.1	search with cache (only 1: rewrite lt_iff_add; only 1: now exists q).	0.00745987892151	4
Coq.PArith.BinPos.lt_not_add_l	40
Coq.PArith.BinPos.pow_gt_1	40
Coq.PArith.BinPos.sub_1_r	40	0.0.0.0.0.3	search with cache (only 1: destruct (sub_mask p q) as [| [r| r| ]| ] || destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: auto).	0.0139110088348	9
Coq.PArith.BinPos.pred_sub	40	0	search with cache (only 1: now destruct p).	0.00561094284058	1
Coq.PArith.BinPos.sub_succ_r	40
Coq.PArith.BinPos.sub_mask_pos'	40
Coq.PArith.BinPos.sub_mask_pos	40	1.0.0.0	search with cache (only 1: rewrite lt_iff_add; only 1: intros (r, Hr); only 1: exists r; only 1: now apply sub_mask_pos_iff).	0.0152730941772	5
Coq.PArith.BinPos.sub_add	40
Coq.PArith.BinPos.add_sub	40
Coq.PArith.BinPos.mul_sub_distr_l	40
Coq.PArith.BinPos.mul_sub_distr_r	40
Coq.PArith.BinPos.sub_lt_mono_l	40
Coq.PArith.BinPos.sub_compare_mono_l	40
Coq.PArith.BinPos.sub_compare_mono_r	40
Coq.PArith.BinPos.sub_lt_mono_r	40
Coq.PArith.BinPos.sub_decr	40
Coq.PArith.BinPos.add_sub_assoc	40
Coq.PArith.BinPos.sub_add_distr	40
Coq.PArith.BinPos.sub_sub_distr	40
Coq.PArith.BinPos.sub_xO_xO	40
Coq.PArith.BinPos.sub_xI_xI	40	0.1.0.0	search with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.016135931015	5
Coq.PArith.BinPos.sub_xI_xO	40	1.0.0.0	search with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0110039710999	5
Coq.PArith.BinPos.sub_xO_xI	40	2.0.0.0.2.0.6.1.24.14.0.0	search with cache (only 1: unfold sub; only 1: simpl; only 1: rewrite ?sub_mask_carry_spec; only 1: case sub_mask_spec; only 1: auto; only 1: intros r H; only 1: subst; only 1: destruct r; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	21.9870178699	51554
Coq.PArith.BinPos.sub_mask_neg_iff'	40	0.2.0.4.0.0.0.0.3	search with cache (only 1: rewrite lt_iff_add; only 1: split; only 1: case sub_mask_spec; only 1: discriminate; only 1: discriminate; only 1: intros r Hr _; only 1: now exists r; only 1: intros (r, <-); only 1: apply sub_mask_add_diag_r).	3.57751107216	3578
Coq.PArith.BinPos.sub_mask_neg	40	1.0	search with cache (only 1: rewrite lt_iff_add; only 1: apply sub_mask_neg_iff).	0.0141441822052	11
Coq.PArith.BinPos.sub_le	40
Coq.PArith.BinPos.sub_lt	40	0.0.0.0.0.18.2	search with cache (only 1: unfold le, sub; only 1: unfold lt; only 1: rewrite compare_sub_mask; only 1: destruct sub_mask; only 1: easy'; only 1: easy'; only 1: easy').	39.3464639187	39230
Coq.PArith.BinPos.sub_diag	40	0.0.13.3.0.7.2	search with cache (only 1: unfold le, sub; only 1: case sub_mask_spec; only 1: congruence; only 1: intros r H; only 1: rewrite add_comm in H; only 1: elim (add_no_neutral _ _ H); only 1: trivial).	4.18093419075	12211
Coq.PArith.BinPos.size_nat_monotone	40
Coq.PArith.BinPos.size_gt	40
Coq.PArith.BinPos.size_le	40
Coq.PArith.BinPos.max_l	40
Coq.PArith.BinPos.max_r	40	0.0.1.0.2.0.0.0	search with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).	0.45686006546	211
Coq.PArith.BinPos.min_l	40
Coq.PArith.BinPos.min_r	40	0.0.0.1.2.0.3.2.2.0.0	search with cache (only 1: unfold le, min; only 1: intros x y; only 1: rewrite compare_gt_iff; only 1: intros H; only 1: apply le_nlt in H; only 1: case compare_spec; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H; only 1: auto).	8.89133214951	8526
Coq.PArith.BinPos.max_1_l	40
Coq.PArith.BinPos.max_1_r	40	0.8	search with cache (only 1: apply max_l; only 1: apply le_1_l).	0.0633509159088	85
Coq.PArith.BinPos.min_1_l	40	0.32	search with cache (only 1: apply min_r || apply min_l; only 1: apply le_1_l).	0.318173885345	969
Coq.PArith.BinPos.min_1_r	40	0.8	search with cache (only 1: apply min_r; only 1: apply le_1_l).	0.0591530799866	81
Coq.PArith.BinPos.succ_max_distr	40
Coq.PArith.BinPos.succ_min_distr	40
Coq.PArith.BinPos.add_max_distr_l	40
Coq.PArith.BinPos.add_max_distr_r	40
Coq.PArith.BinPos.add_min_distr_l	40
Coq.PArith.BinPos.add_min_distr_r	40	0.0.0.2	search with cache (only 1: rewrite 3!(add_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	0.0124318599701	6
Coq.PArith.BinPos.mul_max_distr_l	40	4.0.15	search with cache (only 1: apply max_monotone; only 1: intros x x'; only 1: now apply mul_le_mono_l).	1.39747714996	1025
Coq.PArith.BinPos.mul_max_distr_r	40
Coq.PArith.BinPos.mul_min_distr_l	40	0.0.21	search with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	1.62205386162	1004
Coq.PArith.BinPos.mul_min_distr_r	40	0.0.0.1	search with cache (only 1: rewrite 3!(mul_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.0117189884186	5
Coq.PArith.BinPos.iter_op_succ	40
Coq.PArith.BinPos.of_nat_succ	40
Coq.PArith.BinPos.pred_of_succ_nat	40
Coq.PArith.BinPos.succ_of_nat	40	1.1.1.3.0.1.5.2	search with cache (only 1: destruct n; only 1: simpl; only 1: easy'; only 1: simpl; only 1: induction n; only 1: trivial; only 1: simpl; only 1: now rewrite IHn).	3.50233507156	1165
Coq.PArith.BinPos.sqrtrem_step_spec	40
Coq.PArith.BinPos.sqrtrem_spec	40
Coq.PArith.BinPos.sqrt_spec	40
Coq.PArith.BinPos.divide_add_cancel_l	40
Coq.PArith.BinPos.divide_xO_xI	40
Coq.PArith.BinPos.divide_xO_xO	40
Coq.PArith.BinPos.divide_mul_l	40
Coq.PArith.BinPos.divide_mul_r	40
Coq.PArith.BinPos.ggcdn_gcdn	40
Coq.PArith.BinPos.ggcd_gcd	40	0.40	search with cache (only 1: fix sqrtrem_spec 1; only 1: trivial).	13.0251479149	8670
Coq.PArith.BinPos.ggcdn_correct_divisors	40
Coq.PArith.BinPos.ggcd_correct_divisors	40
Coq.PArith.BinPos.gcd_divide_l	40	1.47	search with cache (only 1: fix sqrtrem_spec 1; only 1: trivial).	2.59939193726	9493
Coq.PArith.BinPos.gcd_divide_r	40
Coq.PArith.BinPos.gcdn_greatest	40
Coq.PArith.BinPos.gcd_greatest	40
Coq.PArith.BinPos.ggcd_greatest	40
Coq.PArith.BinPos.Peqb_true_eq	40	0.188	search with cache (only 1: fix sqrtrem_spec 1; only 1: auto with relations).	6.60277199745	55146
Coq.PArith.BinPos.Pcompare_eq_Gt	40	8	search with cache (only 1: intuition).	0.00863599777222	12
Coq.PArith.BinPos.Pminus_mask_Gt	40
Coq.PArith.BinPos.Pplus_minus	40
Coq.PArith.BinPos.Dcompare	40	8.54	search with cache (only 1: fix sqrtrem_spec 1; only 1: auto).	5.10023999214	18827
Coq.Arith.Le.le_n_0_eq	40
Coq.Arith.Le.le_elim_rel	40
Coq.Arith.Even.even_equiv	40
Coq.Arith.Even.odd_equiv	40	19.2	search with cache (only 1: fix even_equiv 1; only 1: trivial).	0.777633905411	1686
Coq.Arith.Even.even_or_odd	40
Coq.Arith.Even.even_odd_dec	40	0.0.0.0.0	search with cache (only 1: induction n; only 1: auto with arith; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith).	0.0166809558868	5
Coq.Arith.Even.not_even_and_odd	40	1.4.5.2.3.0	search with cache (only 1: induction n; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto with arith).	0.641553163528	1053
Coq.Arith.Even.even_plus_split	40
Coq.Arith.Even.odd_plus_split	40	0	search with cache (only 1: parity_binop).	0.121099948883	1
Coq.Arith.Even.even_even_plus	40	0	search with cache (only 1: parity_binop).	0.044182062149	1
Coq.Arith.Even.odd_plus_l	40	0	search with cache (only 1: parity_binop).	0.0442130565643	1
Coq.Arith.Even.odd_plus_r	40	0	search with cache (only 1: parity_binop).	0.0453341007233	1
Coq.Arith.Even.odd_even_plus	40	0	search with cache (only 1: parity_binop).	0.0447568893433	1
Coq.Arith.Even.even_plus_aux	40	0	search with cache (only 1: parity_binop).	0.190304040909	1
Coq.Arith.Even.even_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.0458090305328	1
Coq.Arith.Even.even_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0444490909576	1
Coq.Arith.Even.even_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.0590329170227	1
Coq.Arith.Even.even_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.0731799602509	1
Coq.Arith.Even.odd_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0441529750824	1
Coq.Arith.Even.odd_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.0439550876617	1
Coq.Arith.Even.odd_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.0760898590088	1
Coq.Arith.Even.odd_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.0447270870209	1
Coq.Arith.Even.even_mult_aux	40	0	search with cache (only 1: parity_binop).	0.145801067352	1
Coq.Arith.Even.even_mult_l	40	0	search with cache (only 1: parity_binop).	0.030012845993	1
Coq.Arith.Even.even_mult_r	40	0	search with cache (only 1: parity_binop).	0.0299260616302	1
Coq.Arith.Even.even_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.0866410732269	1
Coq.Arith.Even.even_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.041002035141	1
Coq.Arith.Even.odd_mult	40	0	search with cache (only 1: parity_binop).	0.0414040088654	1
Coq.Arith.Even.odd_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.0270180702209	1
Coq.Arith.Even.odd_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.0274510383606	1
Coq.Arith.Minus.minus_n_O	40	64	search with cache (only 1: now Nat.nzsimpl).	2.89333701134	24403
Coq.Arith.Minus.minus_Sn_m	40
Coq.Arith.Minus.pred_of_minus	40	9	search with cache (only 1: now Nat.nzsimpl').	0.0452580451965	22
Coq.Arith.Minus.minus_diag_reverse	40	9.1.3.1.0.97	search with cache (only 1: Nat.induct ltac:(n); only 1: symmetry; only 1: apply Nat.sub_0_r; only 1: symmetry; only 1: symmetry; only 1: trivial).	34.2984108925	173315
Coq.Arith.Minus.minus_plus_simpl_l_reverse	40
Coq.Arith.Minus.plus_minus	40
Coq.Arith.Minus.minus_plus	40	12	search with cache (only 1: now apply Nat.add_sub_eq_l).	0.0650501251221	91
Coq.Arith.Minus.le_plus_minus_r	40	0.1.3.0.1.3.2.2.9.14.30	search with cache (only 1: revert m; only 1: induction n as [| n IH]; only 1: simpl; only 1: intros; only 1: apply Nat.sub_0_r; only 1: intros m Le; only 1: elim Le; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	26.1357440948	102654
Coq.Arith.Minus.le_plus_minus	40	0.2.12.0	search with cache (only 1: rewrite Nat.add_comm; only 1: symmetry; only 1: apply Nat.sub_add; only 1: trivial).	1.0308508873	1380
Coq.Arith.Minus.lt_O_minus_lt	40
Coq.Arith.Minus.not_le_minus_0	40
Coq.Arith.Between.bet_eq	40	1.7.6.10	search with cache (only 1: intros a n; only 1: intros EQ; only 1: rewrite EQ; only 1: now left).	0.750250101089	1977
Coq.Arith.Between.between_le	40	0.0.3.2.14.4.34	search with cache (only 1: intros n; only 1: induction n; only 1: auto with arith; only 1: intros m Le; only 1: elim Le; only 1: auto with arith; only 1: auto with arith).	15.6417000294	28478
Coq.Arith.Between.between_Sk_l	40
Coq.Arith.Between.between_restr	40	0.0.0.0	search with cache (only 1: induction 1 as [| * [| ]]; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.0237629413605	4
Coq.Arith.Between.exists_le_S	40	1.1.0.0	search with cache (only 1: induction 1 as [| * [| ]]; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.0243120193481	6
Coq.Arith.Between.exists_S_le	40
Coq.Arith.Between.in_int_intro	40	0.0.2.1.8	search with cache (only 1: intros a b c0; only 1: intros Ha Hb; only 1: repeat split; only 1: PeanoNat.Nat.order; only 1: trivial).	0.366590023041	459
Coq.Arith.Between.in_int_lt	40	6.36	search with cache (only 1: induction 1; only 1: PeanoNat.Nat.order').	2.50750207901	9456
Coq.Arith.Between.in_int_p_Sq	40
Coq.Arith.Between.in_int_S	40	0.0	search with cache (only 1: intros p q r []; only 1: auto with arith).	0.0140759944916	2
Coq.Arith.Between.in_int_Sp_q	40	0.0	search with cache (only 1: intros p q r []; only 1: auto with arith).	0.0141050815582	2
Coq.Arith.Between.between_in_int	40
Coq.Arith.Between.in_int_between	40	0.0.1.0.0	search with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: intros; only 1: auto with arith).	0.0242099761963	6
Coq.Arith.Between.exists_in_int	40
Coq.Arith.Between.in_int_exists	40
Coq.Arith.Between.between_or_exists	40
Coq.Arith.Between.between_not_exists	40
Coq.Arith.Between.nth_le	40
Coq.Arith.Between.event_O	40
Coq.Arith.Peano_dec.O_or_S	40
Coq.Arith.Peano_dec.dec_eq_nat	40
Coq.Arith.Peano_dec.le_unique	40
Coq.Arith.Mult.mult_assoc_reverse	40
Coq.Arith.Mult.mult_is_O	40	0.0.13.7.16.11	search with cache (only 1: destruct n; only 1: now left; only 1: destruct m as [| m]; only 1: right; only 1: trivial; only 1: discriminate).	12.0738251209	19563
Coq.Arith.Mult.mult_is_one	40
Coq.Arith.Mult.mult_O_le	40
Coq.Arith.Mult.mult_le_compat_l	40
Coq.Arith.Mult.mult_le_compat_r	40
Coq.Arith.Mult.mult_le_compat	40
Coq.Arith.Mult.mult_S_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_r	40
Coq.Arith.Mult.mult_S_le_reg_l	40
Coq.Arith.Mult.odd_even_lem	40
Coq.Arith.Mult.mult_acc_aux	40
Coq.Arith.Mult.mult_tail_mult	40
Coq.Arith.Div2.ind_0_1_SS	40
Coq.Arith.Div2.lt_div2	40
Coq.Arith.Div2.even_div2	40	0.1.5.3.20.11	search with cache (only 1: simpl; only 1: Nat.induct n; only 1: auto with arith; only 1: fix even_equiv 1; only 1: intros; only 1: auto with arith).	12.2237942219	18076
Coq.Arith.Div2.odd_div2	40	1.7.5.35.15	search with cache (only 1: simpl; only 1: Nat.induct n; only 1: inversion_clear 1; only 1: fix odd_equiv 1; only 1: trivial).	18.0503060818	36216
Coq.Arith.Div2.div2_even	40	12.23.5.0	search with cache (only 1: rewrite even_equiv; only 1: simpl; only 1: fix even_equiv 1; only 1: trivial).	22.2735929489	53099
Coq.Arith.Div2.div2_odd	40	5.37.9.0	search with cache (only 1: rewrite odd_equiv; only 1: simpl; only 1: fix odd_equiv 1; only 1: trivial).	25.4827418327	71862
Coq.Arith.Div2.even_odd_div2	40
Coq.Arith.Div2.double_S	40
Coq.Arith.Div2.double_plus	40
Coq.Arith.Div2.even_odd_double	40
Coq.Arith.Div2.even_2n	40	4.0.0.0.1	search with cache (only 1: fix even_odd_double 1; only 1: destruct n as [| [| n]]; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.0411732196808	28
Coq.Arith.Div2.odd_S2n	40	0.0.0	search with cache (only 1: intros n H; only 1: exists (Nat.div2 n); only 1: auto with arith).	0.0193290710449	3
Coq.Arith.Div2.div2_double	40	1	search with cache (only 1: apply Nat.div2_double).	0.0123839378357	2
Coq.Arith.Div2.div2_double_plus_one	40	2.0	search with cache (only 1: rewrite Nat.div2_succ_double; only 1: trivial).	0.0155210494995	4
Coq.Arith.Plus.plus_assoc_reverse	40	4.4.1.0.0.0.0	search with cache (only 1: revert m; only 1: induction n as [| n IH]; only 1: trivial; only 1: simpl; only 1: intros; only 1: f_equal; only 1: trivial).	2.07985401154	2085
Coq.Arith.Plus.plus_reg_l	40
Coq.Arith.Plus.plus_le_reg_l	40
Coq.Arith.Plus.plus_lt_reg_l	40
Coq.Arith.Plus.plus_le_compat_l	40	0	search with cache (only 1: apply Nat.add_le_mono_l).	0.0123000144958	1
Coq.Arith.Plus.plus_le_compat_r	40
Coq.Arith.Plus.plus_lt_compat_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.0124762058258	1
Coq.Arith.Plus.plus_lt_compat_r	40
Coq.Arith.Plus.plus_le_compat	40
Coq.Arith.Plus.plus_le_lt_compat	40
Coq.Arith.Plus.plus_lt_le_compat	40	0	search with cache (only 1: apply Nat.add_le_mono).	0.0108959674835	1
Coq.Arith.Plus.plus_lt_compat	40	1.0.13	search with cache (only 1: intros H; only 1: apply Nat.add_le_lt_mono; only 1: Nat.order).	0.107387065887	112
Coq.Arith.Plus.le_plus_l	40
Coq.Arith.Plus.le_plus_r	40
Coq.Arith.Plus.le_plus_trans	40
Coq.Arith.Plus.lt_plus_trans	40
Coq.Arith.Plus.plus_is_O	40	9.10.5.6.5	search with cache (only 1: Nat.induct n; only 1: repeat split; only 1: trivial; only 1: intros Ha Hb; only 1: now Nat.nzsimpl').	7.09457707405	13961
Coq.Arith.Plus.plus_is_one	40
Coq.Arith.Plus.plus_tail_plus	40
Coq.Arith.Plus.succ_plus_discr	40
Coq.Arith.Lt.lt_le_S	40	0	search with cache (only 1: trivial).	0.0106360912323	1
Coq.Arith.Lt.lt_n_Sm_le	40
Coq.Arith.Lt.le_lt_n_Sm	40	0	search with cache (only 1: apply Nat.lt_succ_r).	0.0117959976196	1
Coq.Arith.Lt.le_not_lt	40	6	search with cache (only 1: Nat.order).	0.0315058231354	34
Coq.Arith.Lt.lt_not_le	40	2.1	search with cache (only 1: intro H'; only 1: Nat.order).	0.0181429386139	5
Coq.Arith.Lt.neq_0_lt	40
Coq.Arith.Lt.lt_0_neq	40	0.0	search with cache (only 1: intros; only 1: Nat.order).	0.0172679424286	2
Coq.Arith.Lt.lt_n_S	40	0	search with cache (only 1: apply Nat.lt_succ_r).	0.0113580226898	1
Coq.Arith.Lt.lt_S_n	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.011549949646	1
Coq.Arith.Lt.S_pred	40	0.3.3.58	search with cache (only 1: Nat.induct n; only 1: now Nat.nzsimpl'; only 1: intros a b c0; only 1: trivial).	4.69086503983	10335
Coq.Arith.Lt.S_pred_pos	40	2.1.3.0.52	search with cache (only 1: Nat.induct n; only 1: intros; only 1: now Nat.nzsimpl'; only 1: intros; only 1: trivial).	21.0838458538	61215
Coq.Arith.Lt.lt_pred	40
Coq.Arith.Lt.lt_pred_n_n	40
Coq.Arith.Lt.le_lt_or_eq	40
Coq.Arith.Lt.nat_total_order	40
Coq.Arith.Wf_nat.well_founded_ltof	40
Coq.Arith.Wf_nat.well_founded_gtof	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: assert (H : forall (n : nat) (a : A), f a < n -> Acc ltof a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	4.83746695518	5693
Coq.Arith.Wf_nat.induction_ltof1	40
Coq.Arith.Wf_nat.induction_gtof1	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0	search with cache (only 1: intros P F; only 1: assert (H : forall (n : nat) (a : A), f a < n -> P a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply F; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	4.58997797966	5490
Coq.Arith.Wf_nat.induction_ltof2	40	5.1	search with cache (only 1: unfold ltof at 1; only 1: exact induction_ltof1).	0.189194917679	120
Coq.Arith.Wf_nat.induction_gtof2	40	0	search with cache (only 1: exact induction_ltof1).	0.0113439559937	1
Coq.Arith.Wf_nat.well_founded_lt_compat	40
Coq.Arith.Wf_nat.lt_wf	40
Coq.Arith.Wf_nat.lt_wf_rec1	40
Coq.Arith.Wf_nat.lt_wf_rec	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.0116639137268	1
Coq.Arith.Wf_nat.lt_wf_ind	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).	0.0118629932404	1
Coq.Arith.Wf_nat.gt_wf_rec	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).	0.0114760398865	1
Coq.Arith.Wf_nat.lt_wf_double_rec	40
Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.0.0.0.0.0.2	search with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rec; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rec; only 1: auto with arith).	0.0942060947418	27
Coq.Arith.Wf_nat.acc_lt_rel	40
Coq.Arith.Wf_nat.well_founded_inv_lt_rel_compat	40
Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40
Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40
Coq.Arith.Factorial.lt_O_fact	40
Coq.Arith.Factorial.fact_neq_0	40	0.0.0.0.0.8.12	search with cache (only 1: apply Nat.lt_gt_cases; only 1: right; only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	4.43585014343	5341
Coq.Arith.Factorial.fact_le	40
Coq.Arith.Compare_dec.zerop	40
Coq.Arith.Compare_dec.lt_eq_lt_dec	40
Coq.Arith.Compare_dec.gt_eq_gt_dec	40	1.1.1.0.2.0.0.0.0.0.0	search with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: destruct H; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	2.62764692307	1435
Coq.Arith.Compare_dec.le_lt_dec	40	1.1.2.0.0.1.0	search with cache (only 1: induction n in m |- *; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: auto with arith; only 1: auto with arith).	0.711433887482	321
Coq.Arith.Compare_dec.le_le_S_dec	40	0.2.0.0.1.0.0.3.2.0.4	search with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	19.3878858089	13470
Coq.Arith.Compare_dec.le_ge_dec	40	0.2.0.0.1.0.0.1.2.0.0	search with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	2.55340313911	2396
Coq.Arith.Compare_dec.le_gt_dec	40	8	search with cache (only 1: exact (le_lt_dec n m)).	0.0192029476166	19
Coq.Arith.Compare_dec.le_lt_eq_dec	40
Coq.Arith.Compare_dec.le_dec	40	2.0.0.0.6	search with cache (only 1: elim (le_lt_dec n m); only 1: intro H'; only 1: left; only 1: trivial; only 1: auto with arith).	0.489737033844	427
Coq.Arith.Compare_dec.lt_dec	40	1.1.4.0.1.0.1.1.4	search with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: auto with arith; only 1: auto with arith).	14.4669151306	11813
Coq.Arith.Compare_dec.gt_dec	40	4	search with cache (only 1: apply le_dec).	0.00893306732178	5
Coq.Arith.Compare_dec.ge_dec	40	3	search with cache (only 1: apply le_dec).	0.0959079265594	46
Coq.Arith.Compare_dec.dec_le	40	1.0.1.16	search with cache (only 1: destruct (le_gt_dec n m); only 1: now left; only 1: right; only 1: now apply gt_not_le).	1.38255190849	1436
Coq.Arith.Compare_dec.dec_lt	40	23	search with cache (only 1: apply Nat.le_decidable).	13.1341319084	10426
Coq.Arith.Compare_dec.dec_gt	40	18	search with cache (only 1: apply Nat.lt_decidable).	0.108516931534	149
Coq.Arith.Compare_dec.dec_ge	40	4	search with cache (only 1: apply Nat.le_decidable).	0.0229001045227	23
Coq.Arith.Compare_dec.not_eq	40	0	search with cache (only 1: apply Nat.lt_gt_cases).	0.00850796699524	1
Coq.Arith.Compare_dec.not_le	40	0	search with cache (only 1: apply Nat.lt_nge).	0.0075900554657	1
Coq.Arith.Compare_dec.not_gt	40	0	search with cache (only 1: apply Nat.le_ngt).	0.00759196281433	1
Coq.Arith.Compare_dec.not_ge	40	5	search with cache (only 1: apply Nat.lt_nge).	0.0388391017914	15
Coq.Arith.Compare_dec.not_lt	40	5	search with cache (only 1: apply Nat.le_ngt).	0.0253059864044	13
Coq.Arith.Compare_dec.nat_compare_lt	40
Coq.Arith.Compare_dec.nat_compare_gt	40
Coq.Arith.Compare_dec.nat_compare_le	40
Coq.Arith.Compare_dec.nat_compare_ge	40
Coq.Arith.Compare_dec.nat_compare_eq	40
Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	0	search with cache (only 1: apply Nat.compare_lt_iff).	0.00905585289001	1
Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	0	search with cache (only 1: apply Nat.compare_gt_iff).	0.00835704803467	1
Coq.Arith.Compare_dec.nat_compare_equiv	40
Coq.Arith.Compare_dec.leb_iff_conv	40
Coq.Arith.Compare_dec.leb_correct	40
Coq.Arith.Compare_dec.leb_complete	40	0	search with cache (only 1: apply Nat.leb_le).	0.0083920955658	1
Coq.Arith.Compare_dec.leb_correct_conv	40	0.0	search with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.lt_nge).	0.0162210464478	2
Coq.Arith.Compare_dec.leb_complete_conv	40	0	search with cache (only 1: apply leb_iff_conv).	0.00915312767029	1
Coq.Arith.Compare_dec.leb_compare	40
Coq.Arith.EqNat.eq_nat_refl	40	8.10.110	search with cache (only 1: induction n as [| n IH]; only 1: Morphisms.solve_proper; only 1: trivial).	0.91250705719	8855
Coq.Arith.EqNat.eq_nat_is_eq	40
Coq.Arith.EqNat.eq_eq_nat	40	0.1.0.1.0.1	search with cache (only 1: intros <-; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.107907056808	104
Coq.Arith.EqNat.eq_nat_eq	40	4.0	search with cache (only 1: revert m; only 1: apply eq_nat_is_eq).	0.305559158325	93
Coq.Arith.EqNat.eq_nat_elim	40
Coq.Arith.EqNat.eq_nat_decide	40	0.0.0.0.0.1.0.1.0.0	search with cache (only 1: induction n; only 1: destruct m; only 1: simpl; only 1: auto; only 1: contradiction || auto; only 1: destruct m; only 1: simpl; only 1: contradiction || auto; only 1: simpl; only 1: contradiction || auto).	0.413162946701	414
Coq.Arith.EqNat.beq_nat_refl	40	1.0.6.107	search with cache (only 1: Nat.induct n; only 1: trivial; only 1: intros; only 1: now rewrite H).	0.599164009094	7728
Coq.Arith.EqNat.beq_nat_true	40
Coq.Arith.EqNat.beq_nat_false	40
Coq.Arith.EqNat.beq_nat_eq	40	1.29.0	search with cache (only 1: intros; only 1: apply Nat.eqb_eq; only 1: now rewrite H).	0.566696882248	2022
Coq.Arith.Euclid.eucl_dev	40
Coq.Arith.Euclid.quotient	40
Coq.Arith.Euclid.modulo	40
Coq.Arith.PeanoNat.bi_induction	40
Coq.Arith.PeanoNat.recursion_wd	40
Coq.Arith.PeanoNat.recursion_0	40	2.0	search with cache (only 1: simpl; only 1: auto).	0.0115520954132	4
Coq.Arith.PeanoNat.recursion_succ	40	0.0.0.2.1.28	search with cache (only 1: unfold Basics.flip, respectful; only 1: simpl_relation; only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	20.0773041248	47747
Coq.Arith.PeanoNat.pred_succ	40	0	search with cache (only 1: auto).	0.00850391387939	1
Coq.Arith.PeanoNat.pred_0	40	0	search with cache (only 1: reflexivity).	0.0081570148468	1
Coq.Arith.PeanoNat.one_succ	40	1	search with cache (only 1: reflexivity).	0.00824999809265	2
Coq.Arith.PeanoNat.two_succ	40	0	search with cache (only 1: reflexivity).	0.00814700126648	1
Coq.Arith.PeanoNat.add_0_l	40	0	search with cache (only 1: reflexivity).	0.00824117660522	1
Coq.Arith.PeanoNat.add_succ_l	40	0	search with cache (only 1: reflexivity).	0.00847601890564	1
Coq.Arith.PeanoNat.sub_0_r	40	1.0.3	search with cache (only 1: induction n; only 1: reflexivity; only 1: reflexivity).	0.0144698619843	7
Coq.Arith.PeanoNat.sub_succ_r	40
Coq.Arith.PeanoNat.mul_0_l	40	0	search with cache (only 1: auto).	0.00902009010315	1
Coq.Arith.PeanoNat.mul_succ_l	40
Coq.Arith.PeanoNat.lt_succ_r	40
Coq.Arith.PeanoNat.eqb_eq	40
Coq.Arith.PeanoNat.leb_le	40
Coq.Arith.PeanoNat.ltb_lt	40
Coq.Arith.PeanoNat.eq_dec	40
Coq.Arith.PeanoNat.compare_eq_iff	40	0.1.0.0.2.0.0.1.0.0.0.1.0.0.2.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: split; only 1: easy; only 1: easy; only 1: split; only 1: easy; only 1: easy; only 1: destruct m; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: rewrite ?IHn; only 1: split; only 1: now intros ->; only 1: now injection 1).	32.0189809799	36809
Coq.Arith.PeanoNat.compare_lt_iff	40
Coq.Arith.PeanoNat.compare_le_iff	40
Coq.Arith.PeanoNat.compare_antisym	40	3.0.0.0.0.1.0.1.1.0.0.1	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy).	3.05797696114	4627
Coq.Arith.PeanoNat.compare_succ	40	0.1	search with cache (only 1: simpl; only 1: trivial).	0.0133159160614	3
Coq.Arith.PeanoNat.max_l	40
Coq.Arith.PeanoNat.max_r	40	0.3.6.4.2.1.0.2.1	search with cache (only 1: induction n; only 1: auto; only 1: destruct m; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: rewrite ?IHn; only 1: auto; only 1: now apply le_S_n).	33.9098141193	49829
Coq.Arith.PeanoNat.min_l	40
Coq.Arith.PeanoNat.min_r	40
Coq.Arith.PeanoNat.pow_neg_r	40	8.7	search with cache (only 1: intros; only 1: false_hyp ltac:(H) nle_succ_0).	0.164340019226	245
Coq.Arith.PeanoNat.pow_0_r	40	20	search with cache (only 1: split).	0.13628911972	214
Coq.Arith.PeanoNat.pow_succ_r	40	0.0.0	search with cache (only 1: inversion 1; only 1: reflexivity; only 1: reflexivity).	0.0239889621735	3
Coq.Arith.PeanoNat.square_spec	40	8.0.2.1	search with cache (only 1: induct n; only 1: apply mul_0_l; only 1: intros n IH; only 1: now apply add_cancel_l).	0.329231023788	275
Coq.Arith.PeanoNat.Even_1	40
Coq.Arith.PeanoNat.Even_2	40
Coq.Arith.PeanoNat.Odd_0	40	0.0.0.10	search with cache (only 1: intros ([| ], H); only 1: discriminate; only 1: simpl in H; only 1: now rewrite <- plus_n_Sm in H).	0.0817630290985	87
Coq.Arith.PeanoNat.Odd_2	40
Coq.Arith.PeanoNat.even_spec	40
Coq.Arith.PeanoNat.odd_spec	40	5.0	search with cache (only 1: fix even_spec 1; only 1: trivial).	0.112989187241	79
Coq.Arith.PeanoNat.divmod_spec	40
Coq.Arith.PeanoNat.div_mod	40
Coq.Arith.PeanoNat.mod_bound_pos	40
Coq.Arith.PeanoNat.sqrt_iter_spec	40
Coq.Arith.PeanoNat.sqrt_specif	40
Coq.Arith.PeanoNat.sqrt_neg	40	0	search with cache (only 1: inversion 1).	0.014230966568	1
Coq.Arith.PeanoNat.log2_iter_spec	40
Coq.Arith.PeanoNat.log2_spec	40
Coq.Arith.PeanoNat.log2_nonpos	40	2.8	search with cache (only 1: inversion 1; only 1: trivial).	0.388989925385	257
Coq.Arith.PeanoNat.gcd_divide	40	13.0.45	search with cache (only 1: fix even_spec 1; only 1: intros Hq Hr; only 1: auto).	35.3363621235	132984
Coq.Arith.PeanoNat.gcd_divide_l	40	0.0.1.0.0.0.0.0	search with cache (only 1: intros [| a] b; only 1: simpl; only 1: now exists 0; only 1: simpl; only 1: fold (b mod S a); only 1: destruct (gcd_divide (b mod S a) (S a)) as (H, H'); only 1: set (a' := S a) in *; only 1: auto).	0.034677028656	13
Coq.Arith.PeanoNat.gcd_divide_r	40	0.0	search with cache (only 1: intros; only 1: apply gcd_divide).	0.0143399238586	2
Coq.Arith.PeanoNat.gcd_greatest	40	8.2	search with cache (only 1: fix gcd_divide 1; only 1: auto).	0.246272802353	222
Coq.Arith.PeanoNat.gcd_nonneg	40	10	search with cache (only 1: apply le_0_l).	0.0532190799713	36
Coq.Arith.PeanoNat.div2_double	40
Coq.Arith.PeanoNat.div2_succ_double	40	0.0.0.1.0.0	search with cache (only 1: induction n; only 1: trivial; only 1: simpl mul; only 1: rewrite add_succ_r; only 1: simpl; only 1: now f_equal).	0.0350141525269	7
Coq.Arith.PeanoNat.le_div2	40
Coq.Arith.PeanoNat.lt_div2	40	5.0.5.2.0.2	search with cache (only 1: destruct n; only 1: simpl; only 1: inversion 1; only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	4.18328404427	4314
Coq.Arith.PeanoNat.div2_decr	40	1.1.3	search with cache (only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	0.0276529788971	16
Coq.Arith.PeanoNat.double_twice	40	0.3.4	search with cache (only 1: simpl; only 1: intuition; only 1: now rewrite !add_0_r).	0.0244779586792	10
Coq.Arith.PeanoNat.testbit_0_l	40	6.6	search with cache (only 1: fix even_spec 1; only 1: trivial).	0.111001014709	172
Coq.Arith.PeanoNat.testbit_odd_0	40
Coq.Arith.PeanoNat.testbit_even_0	40
Coq.Arith.PeanoNat.testbit_odd_succ'	40
Coq.Arith.PeanoNat.testbit_even_succ'	40
Coq.Arith.PeanoNat.shiftr_specif	40	0.0.5.1	search with cache (only 1: unfold testbit; only 1: fix even_spec 1; only 1: fold testbit; only 1: now induction n).	0.123615980148	54
Coq.Arith.PeanoNat.shiftl_specif_high	40	4.1.5	search with cache (only 1: unfold testbit, odd; only 1: fix odd_spec 1; only 1: trivial).	0.493671894073	324
Coq.Arith.PeanoNat.shiftl_spec_low	40	8.2.9	search with cache (only 1: unfold testbit, odd; only 1: fix odd_spec 1; only 1: trivial).	9.48517918587	8384
Coq.Arith.PeanoNat.div2_bitwise	40	0.12.11	search with cache (only 1: intros Hq Hr; only 1: fix le_div2 1; only 1: trivial).	1.05002307892	1605
Coq.Arith.PeanoNat.odd_bitwise	40	3.1.1.11	search with cache (only 1: intros m H; only 1: unfold odd; only 1: fix odd_spec 1; only 1: trivial).	33.6780378819	32075
Coq.Arith.PeanoNat.testbit_bitwise_1	40
Coq.Arith.PeanoNat.testbit_bitwise_2	40
Coq.Arith.PeanoNat.land_spec	40
Coq.Arith.PeanoNat.ldiff_spec	40	0.0.1	search with cache (only 1: apply testbit_bitwise_1; only 1: trivial; only 1: trivial).	0.0188419818878	4
Coq.Arith.PeanoNat.lor_spec	40
Coq.Arith.PeanoNat.lxor_spec	40	1.0.0.0.0.5.1.1.0.0.0.0.5.1.3.1	search with cache (only 1: apply testbit_bitwise_2; only 1: trivial; only 1: destruct (compare_spec a b); only 1: subst; only 1: now rewrite max_r; only 1: apply lt_le_incl in H; only 1: now rewrite max_r; only 1: apply lt_le_incl in H; only 1: now rewrite max_l; only 1: destruct (compare_spec a b); only 1: subst; only 1: now rewrite max_r; only 1: apply lt_le_incl in H; only 1: now rewrite max_r; only 1: apply lt_le_incl in H; only 1: now rewrite max_l).	34.9475979805	51050
Coq.Arith.PeanoNat.div2_spec	40	9	search with cache (only 1: eauto).	0.0174880027771	10
Coq.Arith.PeanoNat.testbit_neg_r	40	1	search with cache (only 1: inversion H).	0.0155248641968	2
Coq.Arith.PeanoNat.tail_add_spec	40
Coq.Arith.PeanoNat.tail_addmul_spec	40
Coq.Arith.PeanoNat.tail_mul_spec	40
Coq.Arith.PeanoNat.test	40	1.6	search with cache (only 1: intros n m H; only 1: Nat.order).	0.0287690162659	24
Coq.Arith.Compare.discrete_nat	40
Coq.Arith.Gt.gt_n_S	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.0131869316101	1
Coq.Arith.Gt.gt_S_n	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.0125260353088	1
Coq.Arith.Gt.gt_S	40	3.4.1.6	search with cache (only 1: intros EQ; only 1: apply Nat.lt_eq_cases; only 1: apply Nat.lt_succ_r; only 1: auto with arith).	0.382467985153	265
Coq.Arith.Gt.gt_pred	40	3	search with cache (only 1: apply Nat.lt_succ_lt_pred).	0.0683858394623	32
Coq.Arith.Gt.le_not_gt	40	5	search with cache (only 1: apply Nat.le_ngt).	0.043527841568	20
Coq.Arith.Gt.gt_not_le	40	1.1.1	search with cache (only 1: intro H'; only 1: apply Nat.lt_nge; only 1: trivial).	0.022675037384	6
Coq.Arith.Gt.le_S_gt	40	1.1.2	search with cache (only 1: intro; only 1: apply Nat.succ_lt_mono; only 1: auto with arith).	0.0271241664886	7
Coq.Arith.Gt.gt_S_le	40	6	search with cache (only 1: apply Nat.lt_succ_r).	0.0267980098724	12
Coq.Arith.Gt.gt_le_S	40	0	search with cache (only 1: apply Nat.le_succ_l).	0.0127620697021	1
Coq.Arith.Gt.le_gt_S	40	0	search with cache (only 1: apply Nat.succ_le_mono).	0.0132718086243	1
Coq.Arith.Gt.le_gt_trans	40	0.3.5.4.9	search with cache (only 1: intros; only 1: apply Nat.le_succ_l; only 1: apply Nat.lt_le_trans with m; only 1: trivial; only 1: trivial).	1.54089999199	1385
Coq.Arith.Gt.gt_le_trans	40
Coq.Arith.Gt.gt_trans	40	4.11.0.11.0	search with cache (only 1: intros; only 1: apply Nat.lt_le_trans with m; only 1: now apply Nat.lt_le_trans with m; only 1: apply Nat.succ_le_mono; only 1: auto with arith).	15.5599348545	9088
Coq.Arith.Gt.gt_trans_S	40	3.5.3	search with cache (only 1: intros; only 1: apply Nat.succ_lt_mono; only 1: now apply Nat.le_lt_trans with m).	0.441826820374	165
Coq.Arith.Gt.gt_0_eq	40	1.3.0.11.2	search with cache (only 1: apply Nat.lt_eq_cases; only 1: apply Nat.lt_succ_r; only 1: apply Nat.succ_lt_mono; only 1: apply Nat.lt_succ_r; only 1: auto with arith).	0.635237932205	616
Coq.Arith.Gt.plus_gt_reg_l	40	5	search with cache (only 1: apply Nat.add_lt_mono_l).	0.126802921295	23
Coq.Arith.Gt.plus_gt_compat_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.0134110450745	1
Coq.Logic.SetoidChoice.setoid_choice	40
Coq.Logic.SetoidChoice.representative_choice	40
Coq.Logic.PropFacts.injection_is_involution_in_Prop	40
Coq.Logic.JMeq.JMeq_sym	40	3.4.25	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.227138996124	1353
Coq.Logic.JMeq.JMeq_trans	40	1.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.00770282745361	4
Coq.Logic.JMeq.JMeq_ind	40
Coq.Logic.JMeq.JMeq_rec	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.00852608680725	3
Coq.Logic.JMeq.JMeq_rect	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0084011554718	3
Coq.Logic.JMeq.JMeq_ind_r	40
Coq.Logic.JMeq.JMeq_rec_r	40	0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0100898742676	4
Coq.Logic.JMeq.JMeq_rect_r	40	0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0102059841156	4
Coq.Logic.JMeq.JMeq_congr	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0106070041656	3
Coq.Logic.JMeq.JMeq_eq_dep_id	40	2.0.1	search with cache (only 1: intros; only 1: destruct H; only 1: apply eq_dep_intro).	0.0111060142517	6
Coq.Logic.JMeq.eq_dep_id_JMeq	40	1.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00882387161255	3
Coq.Logic.JMeq.eq_dep_JMeq	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00915884971619	2
Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40
Coq.Logic.JMeq.JMeq_eq_dep	40	0.1.5.0	search with cache (only 1: destruct 1; only 1: intros; only 1: dependent rewrite H; only 1: trivial).	0.0181541442871	10
Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	0.3.0.58	search with cache (only 1: intros n m; only 1: revert m; only 1: destruct m; only 1: trivial).	1.12850689888	10762
Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40
Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.0.0.0	search with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).	0.0120801925659	4
Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40
Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40
Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40
Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40
Coq.Logic.Classical_Prop.NNPP	40
Coq.Logic.Classical_Prop.Peirce	40
Coq.Logic.Classical_Prop.not_imply_elim	40	6.0.1	search with cache (only 1: intros A; only 1: intros; only 1: tauto).	0.0261509418488	19
Coq.Logic.Classical_Prop.not_imply_elim2	40	1.6.0	search with cache (only 1: intros A; only 1: intros nna a; only 1: tauto).	0.0296621322632	20
Coq.Logic.Classical_Prop.imply_to_or	40	0.2.10.0	search with cache (only 1: intros A; only 1: pose (P := fun n : nat => n = 0 /\ A \/ n = 1); only 1: intuition; only 1: tauto).	0.65408706665	408
Coq.Logic.Classical_Prop.imply_to_and	40	0.2.4	search with cache (only 1: intro b; only 1: intros A; only 1: tauto).	0.0907039642334	44
Coq.Logic.Classical_Prop.or_to_imply	40	3.0	search with cache (only 1: intros A; only 1: tauto).	0.0203411579132	12
Coq.Logic.Classical_Prop.not_and_or	40	1.1.0.2	search with cache (only 1: intros; only 1: elim (classic P); only 1: auto; only 1: auto).	0.117029905319	42
Coq.Logic.Classical_Prop.or_not_and	40	1	search with cache (only 1: tauto).	0.0208370685577	11
Coq.Logic.Classical_Prop.not_or_and	40	0	search with cache (only 1: tauto).	0.018128156662	1
Coq.Logic.Classical_Prop.and_not_or	40	0	search with cache (only 1: tauto).	0.0181210041046	1
Coq.Logic.Classical_Prop.imply_and_or	40	0	search with cache (only 1: tauto).	0.0151989459991	1
Coq.Logic.Classical_Prop.imply_and_or2	40	0	search with cache (only 1: tauto).	0.0189790725708	1
Coq.Logic.Classical_Prop.eq_rect_eq	40
Coq.Logic.Hurkens.Omega	40
Coq.Logic.Hurkens.lemma1	40
Coq.Logic.Hurkens.lemma2	40
Coq.Logic.Hurkens.paradox	40
Coq.Logic.Hurkens.paradox	40
Coq.Logic.Hurkens.strength	40
Coq.Logic.Hurkens.modal	40	3.6.107	search with cache (only 1: intro p; only 1: destruct p; only 1: eauto).	4.00739192963	37014
Coq.Logic.Hurkens.Forall	40
Coq.Logic.Hurkens.paradox	40
Coq.Logic.Hurkens.paradox	40
Coq.Logic.Hurkens.mparadox	40	1.1.2.1.1.3.1.0.2.2.3	search with cache (only 1: intros B; only 1: unshelve refine ((fun h => _) (NoRetractToModalProposition.paradox _ _ _ _ _ _ _ _)); only 1: easy; only 1: exact bool; only 1: exact p2b; only 1: auto; only 1: easy; only 1: exact h; only 1: easy; only 1: auto; only 1: auto).	9.80785989761	3328
Coq.Logic.Hurkens.paradox	40
Coq.Logic.Hurkens.paradox	40
Coq.Logic.Hurkens.up_down	40
Coq.Logic.Hurkens.paradox	40
Coq.Logic.Hurkens.paradox	40
Coq.Logic.ClassicalChoice.singleton_choice	40
Coq.Logic.ClassicalChoice.choice	40
Coq.Logic.Eqdep_dec.trans_sym_eq	40	0.14.45.28	search with cache (only 1: intro; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).	2.0601541996	20273
Coq.Logic.Eqdep_dec.nu_constant	40
Coq.Logic.Eqdep_dec.nu_left_inv_on	40
Coq.Logic.Eqdep_dec.eq_proofs_unicity_on	40
Coq.Logic.Eqdep_dec.K_dec_on	40
Coq.Logic.Eqdep_dec.inj_right_pair_on	40
Coq.Logic.Eqdep_dec.K_dec_type	40
Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	0.0.2.0.1.0.0.2.0	search with cache (only 1: intros A eq_dec x P H p; only 1: elim p using K_dec; only 1: intros; only 1: case (eq_dec x0 y); only 1: left; only 1: assumption; only 1: right; only 1: assumption; only 1: trivial).	0.739814996719	684
Coq.Logic.Eqdep_dec.inj_pairP2	40
Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40
Coq.Logic.Eqdep_dec.UIP_refl_unit	40
Coq.Logic.Eqdep_dec.UIP_refl_bool	40
Coq.Logic.Eqdep_dec.UIP_refl_nat	40
Coq.Logic.ConstructiveEpsilon.linear_search_smallest	40
Coq.Logic.ConstructiveEpsilon.epsilon_smallest	40
Coq.Logic.ConstructiveEpsilon.P_implies_acc	40
Coq.Logic.ConstructiveEpsilon.P_eventually_implies_acc	40
Coq.Logic.ConstructiveEpsilon.P_eventually_implies_acc_ex	40
Coq.Logic.ConstructiveEpsilon.acc_implies_P_eventually	40
Coq.Logic.ConstructiveEpsilon.constructive_indefinite_ground_description_nat_Acc	40
Coq.Logic.ConstructiveEpsilon.P'_decidable	40
Coq.Logic.ConstructiveEpsilon.constructive_indefinite_ground_description	40
Coq.Logic.ConstructiveEpsilon.constructive_definite_ground_description	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40
Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40	1.1.1.5.5.31	search with cache (only 1: intros OAC_rel A B P R H; only 1: firstorder; only 1: destruct (OAC_rel A B R) as (f, Hf); only 1: eauto; only 1: exists f; only 1: auto).	21.7231099606	38051
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40
Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40	2.4.28	search with cache (only 1: compute; only 1: intros A P H; only 1: eauto).	1.32487893105	5245
Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40	0.1.1.2.6.1	search with cache (only 1: intros D_epsilon A P H; only 1: firstorder; only 1: destruct D_epsilon with (P := P) as (x, H1); only 1: auto; only 1: exists x; only 1: assumption).	0.299551963806	387
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40
Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40
Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40
Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40
Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40	0.0.4.10	search with cache (only 1: intros AC_depfun A B R H; only 1: destruct (AC_depfun A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	0.394326925278	936
Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0.0.0.0.0.0.1.2.0.1.13	search with cache (only 1: Record.split; only 1: intros AC_fun A B R H; only 1: pose (B' := {x : A & B x}); only 1: pose (R' := fun (x : A) (y : B') => projT1 y = x /\ R (projT1 y) (projT2 y)); only 1: destruct (AC_fun A B' R') as (f, Hf); only 1: intros x; only 1: destruct (H x) as (y, (Hy, Huni)); only 1: exists (existT (fun x => B x) x y); only 1: repeat split; only 1: trivial; only 1: intros (x', y') (Heqx', Hy'); only 1: simpl in *; only 1: destruct Heqx'; only 1: rewrite (Huni y'); only 1: trivial; only 1: trivial; only 1: exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))); only 1: intro x; only 1: destruct (Hf x) as (Heq, HR) using and_indd; only 1: destruct (f x); only 1: simpl in *; only 1: destruct Heq using eq_indd; only 1: trivial; only 1: intros DepFunReify A B R H; only 1: destruct (DepFunReify A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	7.27347803116	18968
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40
Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40
Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40
Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	40
Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40	0	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	1.83953690529	11
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40
Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	40	0.0.10.0.0.0.1	search with cache (only 1: intros A B SetoidFunChoice T Hexists; only 1: destruct SetoidFunChoice with (R := eq) (T := T) as (f, Hf); only 1: apply eq_equivalence; only 1: now intros * ->; only 1: firstorder; only 1: exists f; only 1: firstorder).	1.76300001144	832
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	40
Coq.Logic.PropExtensionality.proof_irrelevance	40
Coq.Logic.StrictProp.Spr1_inj	40	18.34.14.155	search with cache (only 1: destruct a, b; only 1: simpl in *; only 1: subst; only 1: reflexivity).	4.18593478203	57322
Coq.Logic.ClassicalFacts.prop_degen_ext	40
Coq.Logic.ClassicalFacts.prop_degen_em	40
Coq.Logic.ClassicalFacts.prop_ext_em_degen	40
Coq.Logic.ClassicalFacts.provable_prop_ext	40	10.0.0.4.1	search with cache (only 1: intros Ext EM A; only 1: apply Ext; only 1: split; only 1: exact (fun _ => I); only 1: trivial).	0.0818099975586	504
Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	31	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.680207967758	1722
Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40
Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40
Coq.Logic.ClassicalFacts.aux	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_gen	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cc	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cic	40
Coq.Logic.ClassicalFacts.p2p1	40
Coq.Logic.ClassicalFacts.p2p2	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.wp2p1	40
Coq.Logic.ClassicalFacts.wp2p2	40
Coq.Logic.ClassicalFacts.wproof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.wem_proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40	20.1.0.3.12.0	search with cache (only 1: intros H A; only 1: intro z; only 1: destruct (H z); only 1: auto; only 1: right; only 1: easy).	18.6905369759	59831
Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40
Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40
Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40
Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40
Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40
Coq.Logic.ClassicalFacts.unrestricted_minimization_entails_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_entails_unrestricted_minimization	40
Coq.Logic.ClassicalFacts.undecidable_predicate_with_the_minimization_property	40
Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40
Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40
Coq.Logic.Classical_Pred_Type.not_all_not_ex	40
Coq.Logic.Classical_Pred_Type.not_all_ex_not	40
Coq.Logic.Classical_Pred_Type.not_ex_all_not	40	0.0.3.0.0	search with cache (only 1: intros P notall; only 1: intros n H; only 1: apply notall; only 1: exists n; only 1: exact H).	0.0235159397125	8
Coq.Logic.Classical_Pred_Type.not_ex_not_all	40	1.0.5.5.6.5.1.0	search with cache (only 1: unfold not; only 1: intros P notall; only 1: intro n; only 1: apply NNPP; only 1: intro all; only 1: apply notall; only 1: exists n; only 1: trivial).	8.35049510002	26347
Coq.Logic.Classical_Pred_Type.ex_not_not_all	40	11.10.12	search with cache (only 1: simple induction 1; only 1: intro n; only 1: auto with arith).	38.7122139931	69886
Coq.Logic.Classical_Pred_Type.all_not_not_ex	40
Coq.Logic.ProofIrrelevanceFacts.eq_rect_eq	40
Coq.Logic.ProofIrrelevanceFacts.subset_eq_compat	40
Coq.Logic.ProofIrrelevanceFacts.subsetT_eq_compat	40	0.0.4.0	search with cache (only 1: intros; only 1: rewrite M.proof_irrelevance with (p1 := q) (p2 := (eq_rect x P p y H)); only 1: elim H using eq_indd; only 1: reflexivity).	0.0180380344391	8
Coq.Logic.FinFun.Finite_alt	40
Coq.Logic.FinFun.Injective_map_NoDup	40
Coq.Logic.FinFun.Injective_list_carac	40
Coq.Logic.FinFun.Injective_carac	40
Coq.Logic.FinFun.Surjective_list_carac	40
Coq.Logic.FinFun.Surjective_carac	40
Coq.Logic.FinFun.Endo_Injective_Surjective	40
Coq.Logic.FinFun.Finite_Empty_or_not	40	2.8.47.3	search with cache (only 1: intros (l, F); only 1: induction l; only 1: intuition; only 1: now right).	7.28673100471	22241
Coq.Logic.FinFun.Surjective_inverse	40
Coq.Logic.FinFun.Injective_Surjective_Bijective	40
Coq.Logic.FinFun.Fin_Finite	40
Coq.Logic.FinFun.extend_ok	40
Coq.Logic.FinFun.extend_f2n	40
Coq.Logic.FinFun.extend_n2f	40
Coq.Logic.FinFun.restrict_f2n	40
Coq.Logic.FinFun.restrict_n2f	40
Coq.Logic.FinFun.extend_surjective	40
Coq.Logic.FinFun.extend_injective	40
Coq.Logic.FinFun.restrict_surjective	40
Coq.Logic.FinFun.restrict_injective	40
Coq.Logic.FinFun.bInjective_bSurjective	40
Coq.Logic.FinFun.bSurjective_bBijective	40
Coq.Logic.Diaconescu.prop_ext	40
Coq.Logic.Diaconescu.proof_irrel	40
Coq.Logic.Diaconescu.guarded_rel_choice	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0	search with cache (only 1: red; only 1: intros A B P R H; only 1: destruct (rel_choice _ _ (fun (x : {x : _ & P x}) (y : B) => R (projT1 x) y)) as (R', (HR'R, H0)); only 1: intros (x, HPx); only 1: destruct (H x HPx) as (y, HRxy); only 1: exists y; only 1: exact HRxy; only 1: set (R'' := fun (x : A) (y : B) => exists H : P x, R' (existT P x H) y); only 1: exists R''; only 1: Notations.split; only 1: intros x y (HPx, HR'xy); only 1: change x with (projT1 (existT P x HPx)); only 1: apply HR'R; only 1: exact HR'xy; only 1: intros x HPx; only 1: destruct (H0 (existT P x HPx)) as (y, (HR'xy, Huniq)); only 1: exists y; only 1: Notations.split; only 1: exists HPx; only 1: exact HR'xy; only 1: intros y' (H'Px, HR'xy'); only 1: apply Huniq; only 1: rewrite proof_irrel with (a1 := HPx) (a2 := H'Px); only 1: exact HR'xy').	11.5592370033	5950
Coq.Logic.Diaconescu.AC_bool_subset_to_bool	40
Coq.Logic.Diaconescu.pred_ext_and_rel_choice_imp_EM	40
Coq.Logic.Diaconescu.a1'	40
Coq.Logic.Diaconescu.a2'	40	0.0	search with cache (only 1: exists a1; only 1: auto).	0.0146889686584	2
Coq.Logic.Diaconescu.projT1_injective	40
Coq.Logic.Diaconescu.decide	40
Coq.Logic.Diaconescu.proof_irrel_rel_choice_imp_eq_dec	40
Coq.Logic.Diaconescu.proof_irrel_rel_choice_imp_eq_dec'	40
Coq.Logic.Diaconescu.extensional_epsilon_imp_EM	40
Coq.Logic.FunctionalExtensionality.equal_f	40	1.1.2	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0132718086243	21
Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.0.2	search with cache (only 1: intros; only 1: rewrite H; only 1: auto).	0.0114078521729	19
Coq.Logic.FunctionalExtensionality.functional_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	2.1.0	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.0116469860077	6
Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	2.1.0	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.0117559432983	6
Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40
Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40
Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40	10.4.0	search with cache (only 1: apply forall_eq_rect with (H := H); only 1: rewrite functional_extensionality_dep_good_refl; only 1: reflexivity).	0.40534901619	599
Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	20	search with cache (only 1: reflexivity).	0.0477769374847	186
Coq.Logic.FunctionalExtensionality.eta_expansion	40	9	search with cache (only 1: reflexivity).	0.00805711746216	10
Coq.Logic.HLevels.forall_hprop	40
Coq.Logic.HLevels.and_hprop	40
Coq.Logic.HLevels.impl_hprop	40	0.0.1.1	search with cache (only 1: intros A P H p q; only 1: apply functional_extensionality_dep; only 1: intro x; only 1: apply H).	0.0222020149231	24
Coq.Logic.HLevels.false_hprop	40	0.0	search with cache (only 1: intros p q; only 1: destruct p, q).	0.00748801231384	2
Coq.Logic.HLevels.true_hprop	40	14.0.0	search with cache (only 1: intros p q; only 1: destruct p, q; only 1: trivial).	0.0698900222778	290
Coq.Logic.HLevels.not_hprop	40	0.5.1.0	search with cache (only 1: intros p q; only 1: intro x; only 1: apply functional_extensionality_dep; only 1: contradiction).	0.0118019580841	10
Coq.Logic.HLevels.hset_hprop	40
Coq.Logic.HLevels.eq_trans_cancel	40	7.14.14.15.23	search with cache (only 1: destruct p; only 1: intros H x0; only 1: rewrite eq_trans_refl_l; only 1: rewrite eq_trans_refl_l; only 1: trivial).	24.4490008354	152408
Coq.Logic.HLevels.hset_hOneType	40
Coq.Logic.HLevels.hprop_hprop	40
Coq.Logic.HLevels.hprop_hset	40
Coq.Logic.ClassicalUniqueChoice.unique_choice	40
Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40
Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40
Coq.Logic.WKL.is_path_from_characterization	40
Coq.Logic.WKL.is_path_from_restrict	40
Coq.Logic.WKL.inductively_barred_at_monotone	40
Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40
Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	40
Coq.Logic.WKL.find_left_path	40
Coq.Logic.WKL.Y_unique	40
Coq.Logic.WKL.Y_approx	40
Coq.Logic.WKL.PreWeakKonigsLemma	40
Coq.Logic.WKL.inductively_barred_at_decidable	40
Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	40
Coq.Logic.WKL.WeakKonigsLemma	40
Coq.Logic.Epsilon.constructive_indefinite_description	40
Coq.Logic.Epsilon.small_drinkers'_paradox	40
Coq.Logic.Epsilon.iota_statement	40
Coq.Logic.Epsilon.constructive_definite_description	40	4.0.0.0.16.0	search with cache (only 1: intros; only 1: destruct epsilon_statement with (P := P); only 1: destruct H; only 1: red in H; only 1: auto; only 1: firstorder).	0.51415014267	855
Coq.Logic.ClassicalDescription.excluded_middle_informative	40
Coq.Logic.ClassicalDescription.classical_definite_description	40
Coq.Logic.ClassicalDescription.dependent_unique_choice	40
Coq.Logic.ClassicalDescription.unique_choice	40	0.0.5.0.1.15.1	search with cache (only 1: intros A B R H; only 1: assert (Hexuni : forall x, exists ! y, R x y); only 1: intro x; only 1: apply H; only 1: exists (fun x => proj1_sig (constructive_definite_description (R x) (Hexuni x))); only 1: intro x; only 1: apply (proj2_sig (constructive_definite_description (R x) (Hexuni x)))).	0.829634904861	1685
Coq.Logic.EqdepFacts.eq_dep_sym	40	0.2.5.11	search with cache (only 1: intro x; only 1: intros; only 1: destruct H; only 1: reflexivity).	0.0924971103668	296
Coq.Logic.EqdepFacts.eq_dep_trans	40	0.0	search with cache (only 1: destruct 1; only 1: auto).	0.00522208213806	2
Coq.Logic.EqdepFacts.eq_dep1_dep	40
Coq.Logic.EqdepFacts.eq_dep_dep1	40	0.60.1	search with cache (only 1: destruct 1; only 1: exists eq_refl; only 1: reflexivity).	1.05169200897	9356
Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	7.28.67	search with cache (only 1: intros n m; only 1: inversion 1; only 1: apply eq_dep_intro).	27.9177658558	229111
Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	0.11	search with cache (only 1: destruct 1; only 1: reflexivity).	0.0348651409149	88
Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40	0.17.0.0.16.2	search with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	1.13178110123	5776
Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.0.7	search with cache (only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro).	0.00983381271362	10
Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	0.8	search with cache (only 1: destruct 1; only 1: reflexivity).	0.0121488571167	19
Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40	0.14.0.0.13.2	search with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	1.09708690643	4120
Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40
Coq.Logic.EqdepFacts.eq_sigT_fst	40	4.0.0.0.0	search with cache (only 1: intros; only 1: change x2 with (projT1 (existT P x2 H2)); only 1: destruct H; only 1: simpl; only 1: split).	0.0127499103546	9
Coq.Logic.EqdepFacts.eq_sigT_snd	40
Coq.Logic.EqdepFacts.eq_sig_fst	40	2.1.12.0	search with cache (only 1: intros; only 1: dependent rewrite H; only 1: destruct H; only 1: split).	1.05066990852	2544
Coq.Logic.EqdepFacts.eq_sig_snd	40
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep1_eq_on	40	13.3.11.26	search with cache (only 1: intros h1 h2; only 1: destruct 1; only 1: rewrite H; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	1.03043007851	3733
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep_eq_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__UIP_on	40
Coq.Logic.EqdepFacts.UIP_on__UIP_refl_on	40	11.0.0.0	search with cache (only 1: intro eq_dep_eq; only 1: red; only 1: intros; only 1: auto).	0.136686086655	486
Coq.Logic.EqdepFacts.UIP_refl_on__Streicher_K_on	40	5.10.0.1.0.2	search with cache (only 1: intros; only 1: red; only 1: intro eq_dep_eq; only 1: intros; only 1: rewrite H; only 1: apply eq_dep_eq).	0.924288034439	5221
Coq.Logic.EqdepFacts.Streicher_K_on__eq_rect_eq_on	40	7.1.0	search with cache (only 1: intro; only 1: intros eq_rect_eq; only 1: auto).	0.0315959453583	61
Coq.Logic.EqdepFacts.UIP_shift_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__inj_pair2_on	40	0.0	search with cache (only 1: red; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0102789402008	2
Coq.Logic.EqdepFacts.f_eq_dep	40	1.1	search with cache (only 1: destruct 1; only 1: trivial).	0.0303628444672	29
Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.1	search with cache (only 1: destruct 1; only 1: trivial).	0.033882856369	43
Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.1	search with cache (only 1: destruct 1; only 1: reflexivity).	0.0381500720978	43
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	6.0.1	search with cache (only 1: intros Ext A B Equiv; only 1: intros x; only 1: auto).	0.0164511203766	27
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	3	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.588695049286	4
Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	7	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.593981981277	39
Coq.Logic.IndefiniteDescription.constructive_definite_description	40
Coq.Logic.IndefiniteDescription.functional_choice	40
Coq.Logic.Berardi.AC_IF	40
Coq.Logic.Berardi.AC	40
Coq.Logic.Berardi.L1	40
Coq.Logic.Berardi.retract_pow_U_U	40
Coq.Logic.Berardi.not_has_fixpoint	40
Coq.Logic.Berardi.classical_proof_irrelevance	40
Coq.Logic.ClassicalEpsilon.constructive_definite_description	40
Coq.Logic.ClassicalEpsilon.excluded_middle_informative	40
Coq.Logic.ClassicalEpsilon.classical_indefinite_description	40
Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40
Coq.Logic.ClassicalEpsilon.choice	40
Coq.Logic.Decidable.dec_not_not	40	0.3.10.1	search with cache (only 1: intros; only 1: destruct H; only 1: exact H; only 1: contradiction).	0.348145961761	2012
Coq.Logic.Decidable.dec_True	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00407791137695	2
Coq.Logic.Decidable.dec_False	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0036768913269	2
Coq.Logic.Decidable.dec_or	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0117340087891	2
Coq.Logic.Decidable.dec_and	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0145471096039	2
Coq.Logic.Decidable.dec_not	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00710701942444	2
Coq.Logic.Decidable.dec_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00941205024719	2
Coq.Logic.Decidable.dec_iff	40	1.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0155260562897	3
Coq.Logic.Decidable.not_not	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00589203834534	2
Coq.Logic.Decidable.not_or	40	0	search with cache (only 1: tauto).	0.00581502914429	1
Coq.Logic.Decidable.not_and	40	0.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.0118248462677	3
Coq.Logic.Decidable.not_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0112969875336	2
Coq.Logic.Decidable.imp_simp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00805997848511	2
Coq.Logic.Decidable.not_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0256109237671	2
Coq.Logic.Decidable.not_true_iff	40	1.1.4	search with cache (only 1: split; only 1: auto; only 1: auto).	0.00651502609253	9
Coq.Logic.Decidable.not_false_iff	40	0	search with cache (only 1: tauto).	0.00344610214233	1
Coq.Logic.Decidable.not_not_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00664615631104	2
Coq.Logic.Decidable.contrapositive	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00895214080811	2
Coq.Logic.Decidable.or_not_l_iff_1	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0115649700165	2
Coq.Logic.Decidable.or_not_l_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0116729736328	2
Coq.Logic.Decidable.or_not_r_iff_1	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0114929676056	2
Coq.Logic.Decidable.or_not_r_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0116829872131	2
Coq.Logic.Decidable.imp_not_l	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0452630519867	2
Coq.Logic.Decidable.not_or_iff	40	0	search with cache (only 1: tauto).	0.00831699371338	1
Coq.Logic.Decidable.not_and_iff	40	0	search with cache (only 1: tauto).	0.00653910636902	1
Coq.Logic.Decidable.not_imp_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0143840312958	2
Coq.Logic.Decidable.not_imp_rev_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0152490139008	2
Coq.Logic.Decidable.dec_functional_relation	40
Coq.Logic.WeakFan.Y_unique	40
Coq.Logic.WeakFan.Y_approx	40
Coq.Logic.WeakFan.WeakFanTheorem	40
Coq.MSets.MSetRBT.singleton_spec	40
Coq.MSets.MSetRBT.singleton_ok	40	0.0	search with cache (only 1: unfold singleton; only 1: intuition_in).	0.0155010223389	2
Coq.MSets.MSetRBT.makeBlack_spec	40
Coq.MSets.MSetRBT.makeRed_spec	40	0.1.0.0	search with cache (only 1: destruct s; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.101803064346	12
Coq.MSets.MSetRBT.makeBlack_ok	40	1.0.1.0.0	search with cache (only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition_in).	0.063591003418	7
Coq.MSets.MSetRBT.makeRed_ok	40	0.0.0.0.0	search with cache (only 1: destruct s; only 1: simpl; only 1: ok; only 1: simpl; only 1: ok).	0.0295150279999	5
Coq.MSets.MSetRBT.rmatch	40
Coq.MSets.MSetRBT.rrmatch	40
Coq.MSets.MSetRBT.rrmatch'	40	0.1.0.0.0.0.0.0.0.0.0.0.1.0.1.0	search with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).	0.954825878143	1232
Coq.MSets.MSetRBT.lbal_match	40
Coq.MSets.MSetRBT.rbal_match	40	0	search with cache (only 1: exact (rrmatch _ _ _)).	0.0122900009155	1
Coq.MSets.MSetRBT.rbal'_match	40
Coq.MSets.MSetRBT.lbalS_match	40
Coq.MSets.MSetRBT.rbalS_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.0126678943634	1
Coq.MSets.MSetRBT.lbal_spec	40
Coq.MSets.MSetRBT.lbal_ok	40
Coq.MSets.MSetRBT.rbal_spec	40
Coq.MSets.MSetRBT.rbal_ok	40
Coq.MSets.MSetRBT.rbal'_spec	40
Coq.MSets.MSetRBT.rbal'_ok	40
Coq.MSets.MSetRBT.ins_spec	40
Coq.MSets.MSetRBT.ins_ok	40
Coq.MSets.MSetRBT.add_spec'	40
Coq.MSets.MSetRBT.add_spec	40	0.0	search with cache (only 1: unfold add; only 1: now autorew).	0.0600891113281	2
Coq.MSets.MSetRBT.add_ok	40	1.0.0.2.1	search with cache (only 1: unfold add; only 1: destruct s; only 1: simpl; only 1: auto; only 1: ok).	0.635766029358	60
Coq.MSets.MSetRBT.lbalS_spec	40
Coq.MSets.MSetRBT.lbalS_ok	40
Coq.MSets.MSetRBT.rbalS_spec	40
Coq.MSets.MSetRBT.rbalS_ok	40
Coq.MSets.MSetRBT.append_rr_match	40	4	search with cache (only 1: exact (rmatch _ _ _)).	0.128523826599	53
Coq.MSets.MSetRBT.append_bb_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.0131299495697	1
Coq.MSets.MSetRBT.append_spec	40
Coq.MSets.MSetRBT.append_ok	40
Coq.MSets.MSetRBT.del_spec	40
Coq.MSets.MSetRBT.del_ok	40
Coq.MSets.MSetRBT.remove_spec	40
Coq.MSets.MSetRBT.remove_ok	40	2.0	search with cache (only 1: unfold remove; only 1: auto_tc).	0.358602046967	30
Coq.MSets.MSetRBT.delmin_spec	40
Coq.MSets.MSetRBT.remove_min_spec1	40
Coq.MSets.MSetRBT.remove_min_spec2	40	3.0.0.0.0.0.0	search with cache (only 1: unfold remove_min; only 1: destruct s as [| c l y r]; only 1: easy; only 1: generalize (delmin_spec l y r c); only 1: destruct delmin as (x0, s0); only 1: intros D; only 1: inversion_clear 1).	0.0420820713043	10
Coq.MSets.MSetRBT.remove_min_ok	40
Coq.MSets.MSetRBT.treeify_zero_spec	40	0.2.16	search with cache (only 1: intros s Hs; only 1: simpl; only 1: auto).	0.0733828544617	192
Coq.MSets.MSetRBT.treeify_one_spec	40	3.0.21.0.3.21	search with cache (only 1: intros s Hs; only 1: induction s; only 1: simpl; only 1: easy; only 1: simpl; only 1: auto).	1.7941839695	7331
Coq.MSets.MSetRBT.treeify_cont_spec	40
Coq.MSets.MSetRBT.treeify_aux_spec	40
Coq.MSets.MSetRBT.plength_aux_spec	40
Coq.MSets.MSetRBT.plength_spec	40
Coq.MSets.MSetRBT.treeify_elements	40
Coq.MSets.MSetRBT.treeify_spec	40
Coq.MSets.MSetRBT.treeify_ok	40
Coq.MSets.MSetRBT.filter_aux_elements	40
Coq.MSets.MSetRBT.filter_elements	40
Coq.MSets.MSetRBT.filter_spec	40
Coq.MSets.MSetRBT.filter_ok	40
Coq.MSets.MSetRBT.partition_aux_spec	40
Coq.MSets.MSetRBT.partition_spec	40
Coq.MSets.MSetRBT.partition_spec1	40	0.2.0	search with cache (only 1: intros Hf; only 1: unfold partition, filter; only 1: now rewrite partition_aux_spec).	0.0415458679199	5
Coq.MSets.MSetRBT.partition_spec2	40	0	search with cache (only 1: now rewrite partition_spec).	0.0157308578491	1
Coq.MSets.MSetRBT.partition_ok1	40
Coq.MSets.MSetRBT.partition_ok2	40	0.1	search with cache (only 1: rewrite partition_spec; only 1: now apply filter_ok).	0.0232691764832	3
Coq.MSets.MSetRBT.INV_init	40
Coq.MSets.MSetRBT.INV_sym	40	8.0	search with cache (only 1: inversion_clear 1; only 1: now inA).	0.0512449741364	19
Coq.MSets.MSetRBT.INV_drop	40
Coq.MSets.MSetRBT.INV_eq	40
Coq.MSets.MSetRBT.INV_lt	40
Coq.MSets.MSetRBT.INV_rev	40
Coq.MSets.MSetRBT.union_list_ok	40
Coq.MSets.MSetRBT.linear_union_ok	40
Coq.MSets.MSetRBT.fold_add_ok	40
Coq.MSets.MSetRBT.union_ok	40
Coq.MSets.MSetRBT.union_list_spec	40
Coq.MSets.MSetRBT.linear_union_spec	40
Coq.MSets.MSetRBT.fold_add_spec	40
Coq.MSets.MSetRBT.union_spec'	40
Coq.MSets.MSetRBT.union_spec	40	0.1.0.1.1.0.0.10	search with cache (only 1: intros; only 1: unfold union; only 1: destruct compare_height; only 1: apply linear_union_spec; only 1: rewrite fold_add_spec; only 1: tauto; only 1: rewrite fold_add_spec; only 1: tauto).	6.11981201172	3084
Coq.MSets.MSetRBT.inter_list_ok	40
Coq.MSets.MSetRBT.linear_inter_ok	40
Coq.MSets.MSetRBT.inter_ok	40
Coq.MSets.MSetRBT.inter_list_spec	40
Coq.MSets.MSetRBT.linear_inter_spec	40
Coq.MSets.MSetRBT.mem_proper	40
Coq.MSets.MSetRBT.inter_spec	40
Coq.MSets.MSetRBT.diff_list_ok	40
Coq.MSets.MSetRBT.diff_inter_ok	40
Coq.MSets.MSetRBT.fold_remove_ok	40	0.0.0.0.0.0.0.0	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.037232875824	8
Coq.MSets.MSetRBT.diff_ok	40
Coq.MSets.MSetRBT.diff_list_spec	40
Coq.MSets.MSetRBT.linear_diff_spec	40
Coq.MSets.MSetRBT.fold_remove_spec	40
Coq.MSets.MSetRBT.diff_spec	40
Coq.MSets.MSetRBT.rr_nrr_rb	40
Coq.MSets.MSetRBT.arb_nrr_rb	40	1.0.16.3.35	search with cache (only 1: intros p; only 1: invrb; only 1: destruct p; only 1: auto; only 1: auto).	5.23579192162	16490
Coq.MSets.MSetRBT.arb_nr_rb	40	1.0.3.14.5.0.0	search with cache (only 1: destruct 1; only 1: auto; only 1: invrb; only 1: exfalso; only 1: revert H; only 1: destruct 1 as [l x r Hl Hr]; only 1: invrb).	2.01880407333	4634
Coq.MSets.MSetRBT.rb_maxdepth	40
Coq.MSets.MSetRBT.rb_mindepth	40
Coq.MSets.MSetRBT.maxdepth_upperbound	40
Coq.MSets.MSetRBT.maxdepth_lowerbound	40
Coq.MSets.MSetRBT.singleton_rb	40
Coq.MSets.MSetRBT.makeBlack_rb	40
Coq.MSets.MSetRBT.makeRed_rr	40	0.3.1.1.2	search with cache (only 1: destruct t; only 1: invrb; only 1: invrb; only 1: simpl; only 1: auto).	0.424691915512	248
Coq.MSets.MSetRBT.lbal_rb	40
Coq.MSets.MSetRBT.rbal_rb	40
Coq.MSets.MSetRBT.rbal'_rb	40
Coq.MSets.MSetRBT.lbalS_rb	40
Coq.MSets.MSetRBT.lbalS_arb	40
Coq.MSets.MSetRBT.rbalS_rb	40
Coq.MSets.MSetRBT.rbalS_arb	40
Coq.MSets.MSetRBT.ifred_notred	40
Coq.MSets.MSetRBT.ifred_or	40	1.0.1.0.0.1.1.0	search with cache (only 1: destruct s; only 1: simpl; only 1: intuition; only 1: descolor; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	0.40521812439	212
Coq.MSets.MSetRBT.ins_rr_rb	40
Coq.MSets.MSetRBT.ins_arb	40
Coq.MSets.MSetRBT.add_rb	40
Coq.MSets.MSetRBT.append_arb_rb	40
Coq.MSets.MSetRBT.del_arb	40	1	search with cache (only 1: auto).	0.0155310630798	2
Coq.MSets.MSetRBT.remove_rb	40
Coq.MSets.MSetRBT.treeify_zero_rb	40	49	search with cache (only 1: now auto_tc).	1.93893003464	6011
Coq.MSets.MSetRBT.treeify_one_rb	40
Coq.MSets.MSetRBT.treeify_cont_rb	40
Coq.MSets.MSetRBT.treeify_aux_rb	40
Coq.MSets.MSetRBT.treeify_rb	40
Coq.MSets.MSetRBT.filter_rb	40	19.0	search with cache (only 1: unfold partition, filter; only 1: inA).	1.07730913162	2019
Coq.MSets.MSetRBT.partition_rb1	40	0.8.1.1	search with cache (only 1: rewrite partition_spec; only 1: unfold partition, filter; only 1: simpl; only 1: auto_tc).	0.404347896576	322
Coq.MSets.MSetRBT.partition_rb2	40	1.0.0.2	search with cache (only 1: unfold partition; only 1: destruct partition_aux; only 1: simpl; only 1: auto_tc).	0.0429120063782	24
Coq.MSets.MSetRBT.fold_add_rb	40	0.1.0.2.2.0.1.0	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: unfold flip; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	1.19115304947	1128
Coq.MSets.MSetRBT.fold_remove_rb	40	1.0.0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.453105926514	236
Coq.MSets.MSetRBT.union_rb	40	3.3.8.0.0.0	search with cache (only 1: unfold union; only 1: destruct compare_height; only 1: unfold linear_union; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	22.9918990135	23909
Coq.MSets.MSetRBT.inter_rb	40	2.2.2.0.0.0	search with cache (only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.701924800873	537
Coq.MSets.MSetRBT.diff_rb	40	1.0.1.1.1.0.0	search with cache (only 1: unfold diff; only 1: destruct compare_height; only 1: unfold linear_diff; only 1: auto_tc; only 1: auto_tc; only 1: intros; only 1: auto_tc).	0.38482093811	208
Coq.MSets.MSetRBT.remove_min_spec1	40
Coq.MSets.MSetRBT.remove_min_spec2	40
Coq.MSets.MSetPositive.In_compat	40	1.0.0	search with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx, Hy; only 1: intuition).	0.0412509441376	4
Coq.MSets.MSetPositive.eq_equiv	40
Coq.MSets.MSetPositive.mem_spec	40	5	search with cache (only 1: intuition).	0.0103280544281	6
Coq.MSets.MSetPositive.mem_Leaf	40	1	search with cache (only 1: intuition).	0.00851702690125	2
Coq.MSets.MSetPositive.empty_spec	40	3.0	search with cache (only 1: intros a b; only 1: discriminate).	0.00895500183105	5
Coq.MSets.MSetPositive.mem_node	40
Coq.MSets.MSetPositive.is_empty_spec	40
Coq.MSets.MSetPositive.subset_Leaf_s	40	2.0.5.10.2	search with cache (only 1: intuition; only 1: intros EQ; only 1: unfold In; only 1: simpl; only 1: intuition discriminate).	0.909358024597	1775
Coq.MSets.MSetPositive.subset_spec	40
Coq.MSets.MSetPositive.equal_subset	40
Coq.MSets.MSetPositive.equal_spec	40
Coq.MSets.MSetPositive.eq_dec	40
Coq.MSets.MSetPositive.lex_Opp	40
Coq.MSets.MSetPositive.compare_bool_inv	40	0.0.14.0.0.15.30.64	search with cache (only 1: intros x y; only 1: destruct y; only 1: destruct x; only 1: trivial; only 1: trivial; only 1: destruct x; only 1: trivial; only 1: trivial).	16.4603281021	86150
Coq.MSets.MSetPositive.compare_inv	40
Coq.MSets.MSetPositive.lex_Eq	40
Coq.MSets.MSetPositive.compare_bool_Eq	40	2.2.2.2.0	search with cache (only 1: intros [| ] [| ]; only 1: intuition discriminate; only 1: intuition discriminate; only 1: intuition discriminate; only 1: intuition discriminate).	0.196682929993	170
Coq.MSets.MSetPositive.compare_equal	40
Coq.MSets.MSetPositive.compare_gt	40
Coq.MSets.MSetPositive.compare_eq	40
Coq.MSets.MSetPositive.compare_spec	40
Coq.MSets.MSetPositive.ct_cxe	40
Coq.MSets.MSetPositive.ct_xce	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0121219158173	4
Coq.MSets.MSetPositive.ct_lxl	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0117981433868	4
Coq.MSets.MSetPositive.ct_gxg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0117211341858	4
Coq.MSets.MSetPositive.ct_xll	40	0.1.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0119490623474	5
Coq.MSets.MSetPositive.ct_xgg	40	1.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0115249156952	5
Coq.MSets.MSetPositive.ct_lex	40
Coq.MSets.MSetPositive.ct_compare_bool	40
Coq.MSets.MSetPositive.compare_x_Leaf	40	5.0.1.0.1	search with cache (only 1: induction s as [| l IHl o r IHr]; only 1: unfold compare, equal; only 1: simpl; only 1: tauto; only 1: trivial).	0.284739971161	292
Coq.MSets.MSetPositive.compare_empty_x	40
Coq.MSets.MSetPositive.compare_x_empty	40
Coq.MSets.MSetPositive.ct_compare	40
Coq.MSets.MSetPositive.lt_strorder	40
Coq.MSets.MSetPositive.compare_compat_1	40
Coq.MSets.MSetPositive.compare_compat	40
Coq.MSets.MSetPositive.lt_compat	40	1.1.0.0.6	search with cache (only 1: unfold lt; only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx; only 1: rewrite compare_inv, Hy, <- compare_inv; only 1: reflexivity).	1.60915184021	467
Coq.MSets.MSetPositive.add_spec	40
Coq.MSets.MSetPositive.remove_spec	40
Coq.MSets.MSetPositive.singleton_spec	40
Coq.MSets.MSetPositive.union_spec	40
Coq.MSets.MSetPositive.inter_spec	40
Coq.MSets.MSetPositive.diff_spec	40
Coq.MSets.MSetPositive.fold_spec	40
Coq.MSets.MSetPositive.cardinal_spec	40
Coq.MSets.MSetPositive.xfilter_spec	40
Coq.MSets.MSetPositive.filter_spec	40
Coq.MSets.MSetPositive.xforall_spec	40
Coq.MSets.MSetPositive.for_all_spec	40
Coq.MSets.MSetPositive.xexists_spec	40
Coq.MSets.MSetPositive.exists_spec	40
Coq.MSets.MSetPositive.partition_filter	40
Coq.MSets.MSetPositive.partition_spec1	40
Coq.MSets.MSetPositive.partition_spec2	40	0.0.0	search with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).	0.0138900279999	3
Coq.MSets.MSetPositive.xelements_spec	40
Coq.MSets.MSetPositive.elements_spec1	40
Coq.MSets.MSetPositive.lt_rev_append	40
Coq.MSets.MSetPositive.elements_spec2	40
Coq.MSets.MSetPositive.elements_spec2w	40
Coq.MSets.MSetPositive.choose_spec1	40
Coq.MSets.MSetPositive.choose_spec2	40
Coq.MSets.MSetPositive.choose_empty	40
Coq.MSets.MSetPositive.choose_spec3'	40
Coq.MSets.MSetPositive.choose_spec3	40
Coq.MSets.MSetPositive.min_elt_spec1	40
Coq.MSets.MSetPositive.min_elt_spec3	40
Coq.MSets.MSetPositive.min_elt_spec2	40
Coq.MSets.MSetPositive.max_elt_spec1	40
Coq.MSets.MSetPositive.max_elt_spec3	40
Coq.MSets.MSetPositive.max_elt_spec2	40
Coq.MSets.MSetFacts.In_1	40	20.21.0	search with cache (only 1: intro; only 1: rewrite H; only 1: auto).	8.05254197121	31361
Coq.MSets.MSetFacts.mem_1	40
Coq.MSets.MSetFacts.mem_2	40
Coq.MSets.MSetFacts.equal_1	40
Coq.MSets.MSetFacts.equal_2	40
Coq.MSets.MSetFacts.subset_1	40
Coq.MSets.MSetFacts.subset_2	40
Coq.MSets.MSetFacts.is_empty_1	40
Coq.MSets.MSetFacts.is_empty_2	40
Coq.MSets.MSetFacts.add_1	40
Coq.MSets.MSetFacts.add_2	40	0.0.0	search with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto with relations).	0.0215239524841	3
Coq.MSets.MSetFacts.add_3	40
Coq.MSets.MSetFacts.remove_1	40
Coq.MSets.MSetFacts.remove_2	40	0.1.0	search with cache (only 1: intros; only 1: rewrite remove_spec; only 1: intuition).	0.0248651504517	4
Coq.MSets.MSetFacts.remove_3	40	0.1	search with cache (only 1: rewrite remove_spec; only 1: intuition).	0.0351309776306	12
Coq.MSets.MSetFacts.singleton_1	40
Coq.MSets.MSetFacts.singleton_2	40	0.1.0	search with cache (only 1: rewrite singleton_spec; only 1: intros; only 1: intuition).	0.0279340744019	4
Coq.MSets.MSetFacts.union_1	40
Coq.MSets.MSetFacts.union_2	40	1.0	search with cache (only 1: rewrite union_spec; only 1: auto).	0.0244898796082	3
Coq.MSets.MSetFacts.union_3	40	1.0	search with cache (only 1: rewrite union_spec; only 1: auto).	0.0244061946869	3
Coq.MSets.MSetFacts.inter_1	40
Coq.MSets.MSetFacts.inter_2	40	0.0	search with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0235660076141	2
Coq.MSets.MSetFacts.inter_3	40	0.0	search with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0286929607391	2
Coq.MSets.MSetFacts.diff_1	40
Coq.MSets.MSetFacts.diff_2	40	0.0	search with cache (only 1: rewrite diff_spec; only 1: intuition).	0.0249669551849	2
Coq.MSets.MSetFacts.diff_3	40	0.0	search with cache (only 1: rewrite diff_spec; only 1: intuition).	0.0302212238312	2
Coq.MSets.MSetFacts.filter_1	40
Coq.MSets.MSetFacts.filter_2	40	0.0.0.0	search with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.0332109928131	4
Coq.MSets.MSetFacts.filter_3	40	0.0.0.0	search with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.0398409366608	4
Coq.MSets.MSetFacts.for_all_1	40
Coq.MSets.MSetFacts.for_all_2	40
Coq.MSets.MSetFacts.exists_1	40
Coq.MSets.MSetFacts.exists_2	40
Coq.MSets.MSetFacts.elements_1	40
Coq.MSets.MSetFacts.elements_2	40
Coq.MSets.MSetFacts.In_eq_iff	40	1.0.0	search with cache (only 1: intros E; only 1: rewrite E; only 1: intuition).	0.0235469341278	4
Coq.MSets.MSetFacts.mem_iff	40	7	search with cache (only 1: intuition).	0.0358681678772	8
Coq.MSets.MSetFacts.not_mem_iff	40	4.65	search with cache (only 1: Ndec.eqb2eq; only 1: intuition).	18.884250164	18469
Coq.MSets.MSetFacts.equal_iff	40	6	search with cache (only 1: intuition).	0.0490539073944	11
Coq.MSets.MSetFacts.subset_iff	40	7	search with cache (only 1: intuition).	0.0461649894714	11
Coq.MSets.MSetFacts.empty_iff	40
Coq.MSets.MSetFacts.is_empty_iff	40	7	search with cache (only 1: intuition).	0.0442359447479	12
Coq.MSets.MSetFacts.singleton_iff	40	3.0	search with cache (only 1: rewrite singleton_spec; only 1: intuition).	0.0231580734253	5
Coq.MSets.MSetFacts.add_iff	40	5.0	search with cache (only 1: rewrite add_spec; only 1: intuition).	0.0345611572266	7
Coq.MSets.MSetFacts.add_neq_iff	40	0.2.1.0	search with cache (only 1: rewrite add_spec; only 1: intuition; only 1: elim H; only 1: intuition).	0.176516056061	7
Coq.MSets.MSetFacts.remove_iff	40	0.4	search with cache (only 1: rewrite remove_spec; only 1: intuition).	0.202908992767	14
Coq.MSets.MSetFacts.remove_neq_iff	40	1.0	search with cache (only 1: rewrite remove_spec; only 1: intuition).	0.0334298610687	3
Coq.MSets.MSetFacts.for_all_iff	40	5.0	search with cache (only 1: intros; only 1: intuition).	0.05122423172	7
Coq.MSets.MSetFacts.exists_iff	40	7.0	search with cache (only 1: intros; only 1: intuition).	0.0531580448151	9
Coq.MSets.MSetFacts.elements_iff	40	7	search with cache (only 1: intuition).	0.0238289833069	8
Coq.MSets.MSetFacts.mem_b	40
Coq.MSets.MSetFacts.empty_b	40
Coq.MSets.MSetFacts.add_b	40
Coq.MSets.MSetFacts.add_neq_b	40
Coq.MSets.MSetFacts.remove_b	40
Coq.MSets.MSetFacts.remove_neq_b	40
Coq.MSets.MSetFacts.singleton_b	40
Coq.MSets.MSetFacts.union_b	40
Coq.MSets.MSetFacts.inter_b	40
Coq.MSets.MSetFacts.diff_b	40
Coq.MSets.MSetFacts.elements_b	40
Coq.MSets.MSetFacts.filter_b	40
Coq.MSets.MSetFacts.for_all_b	40
Coq.MSets.MSetFacts.exists_b	40
Coq.MSets.MSetFacts.In_m	40
Coq.MSets.MSetFacts.Empty_m	40	8	search with cache (only 1: firstorder).	0.0437061786652	29
Coq.MSets.MSetFacts.is_empty_m	40
Coq.MSets.MSetFacts.mem_m	40
Coq.MSets.MSetFacts.singleton_m	40
Coq.MSets.MSetFacts.add_m	40
Coq.MSets.MSetFacts.remove_m	40
Coq.MSets.MSetFacts.union_m	40	0.3.10.0	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite union_spec; only 1: rewrite Hs, Hx  at 1; only 1: intuition).	8.13445305824	1714
Coq.MSets.MSetFacts.inter_m	40
Coq.MSets.MSetFacts.diff_m	40
Coq.MSets.MSetFacts.Subset_m	40	8.0	search with cache (only 1: unfold Equal; only 1: firstorder).	0.0666441917419	41
Coq.MSets.MSetFacts.subset_m	40
Coq.MSets.MSetFacts.equal_m	40
Coq.MSets.MSetFacts.SubsetSetoid	40	2.0	search with cache (only 1: unfold Equal, Subset; only 1: firstorder).	0.0168170928955	4
Coq.MSets.MSetFacts.In_s_m	40	1.0.0.13	search with cache (only 1: repeat red; only 1: intros x y H s s' H0; only 1: rewrite (In_eq_iff s H); only 1: auto).	24.5275540352	4596
Coq.MSets.MSetFacts.Empty_s_m	40	1.0.0.0.1	search with cache (only 1: repeat red; only 1: unfold Empty; only 1: intros s s' E; only 1: setoid_rewrite E; only 1: auto).	0.125104904175	16
Coq.MSets.MSetFacts.add_s_m	40	0.0.1	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !add_iff, Hx, Hs; only 1: intuition).	0.225519895554	17
Coq.MSets.MSetFacts.remove_s_m	40	0.0.1	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !remove_iff, Hx, Hs; only 1: intuition).	0.294175863266	31
Coq.MSets.MSetFacts.union_s_m	40	0.0.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !union_spec, Hs1, Hs2; only 1: intuition).	0.0787570476532	3
Coq.MSets.MSetFacts.inter_s_m	40	0.0.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !inter_spec, Hs1, Hs2; only 1: intuition).	0.0678970813751	3
Coq.MSets.MSetFacts.diff_s_m	40	0.0.1	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !diff_spec, Hs1, Hs2; only 1: intuition).	0.122927904129	4
Coq.MSets.MSetFacts.filter_equal	40
Coq.MSets.MSetFacts.filter_subset	40	0.0.0	search with cache (only 1: intros f Hf s s' Hs a; only 1: rewrite !filter_spec, Hs by auto; only 1: intuition).	0.0527651309967	3
Coq.MSets.MSetFacts.filter_ext	40
Coq.MSets.MSetProperties.In_dec	40	3.4.1.8.0	search with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	4.57973909378	1072
Coq.MSets.MSetProperties.Add_Equal	40
Coq.MSets.MSetProperties.equal_refl	40	1.1.4	search with cache (only 1: red; only 1: intros; only 1: fsetdec).	0.0434181690216	30
Coq.MSets.MSetProperties.equal_sym	40	5	search with cache (only 1: fsetdec).	0.121721029282	56
Coq.MSets.MSetProperties.equal_trans	40	16	search with cache (only 1: fsetdec).	12.0436339378	4663
Coq.MSets.MSetProperties.subset_refl	40	5.1.0	search with cache (only 1: apply -> subset_spec; only 1: apply <- subset_spec; only 1: fsetdec).	0.0417790412903	23
Coq.MSets.MSetProperties.subset_trans	40	1	search with cache (only 1: fsetdec).	0.0274350643158	2
Coq.MSets.MSetProperties.subset_antisym	40	6	search with cache (only 1: fsetdec).	0.123131036758	43
Coq.MSets.MSetProperties.subset_equal	40	0	search with cache (only 1: fsetdec).	0.0218958854675	1
Coq.MSets.MSetProperties.subset_empty	40	5.1.0	search with cache (only 1: apply -> subset_spec; only 1: apply <- subset_spec; only 1: fsetdec).	0.0508589744568	23
Coq.MSets.MSetProperties.subset_remove_3	40	0	search with cache (only 1: fsetdec).	0.0297529697418	1
Coq.MSets.MSetProperties.subset_diff	40	0	search with cache (only 1: fsetdec).	0.0286610126495	1
Coq.MSets.MSetProperties.subset_add_3	40	0	search with cache (only 1: fsetdec).	0.0735569000244	1
Coq.MSets.MSetProperties.subset_add_2	40	0	search with cache (only 1: fsetdec).	0.0234451293945	1
Coq.MSets.MSetProperties.in_subset	40	0	search with cache (only 1: fsetdec).	0.0222949981689	1
Coq.MSets.MSetProperties.double_inclusion	40
Coq.MSets.MSetProperties.empty_is_empty_1	40	5.0	search with cache (only 1: intros; only 1: fsetdec).	0.0844330787659	21
Coq.MSets.MSetProperties.empty_is_empty_2	40	0	search with cache (only 1: fsetdec).	0.0260879993439	1
Coq.MSets.MSetProperties.add_equal	40	0.6.0.0	search with cache (only 1: intros; only 1: red; only 1: intuition; only 1: fsetdec).	0.171548128128	36
Coq.MSets.MSetProperties.add_add	40	5	search with cache (only 1: fsetdec).	0.102990150452	11
Coq.MSets.MSetProperties.remove_equal	40	9	search with cache (only 1: fsetdec).	0.0948579311371	32
Coq.MSets.MSetProperties.Equal_remove	40	0	search with cache (only 1: fsetdec).	0.0735740661621	1
Coq.MSets.MSetProperties.add_remove	40	0	search with cache (only 1: fsetdec).	0.0780968666077	1
Coq.MSets.MSetProperties.remove_add	40	0	search with cache (only 1: fsetdec).	0.0919411182404	1
Coq.MSets.MSetProperties.singleton_equal_add	40	0.0	search with cache (only 1: red; only 1: fsetdec).	0.0545809268951	2
Coq.MSets.MSetProperties.remove_singleton_empty	40	0	search with cache (only 1: fsetdec).	0.186627864838	1
Coq.MSets.MSetProperties.union_sym	40
Coq.MSets.MSetProperties.union_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0438570976257	1
Coq.MSets.MSetProperties.union_equal_1	40	0	search with cache (only 1: fsetdec).	0.058837890625	1
Coq.MSets.MSetProperties.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.0714209079742	1
Coq.MSets.MSetProperties.union_assoc	40	0	search with cache (only 1: fsetdec).	0.086709022522	1
Coq.MSets.MSetProperties.add_union_singleton	40	0	search with cache (only 1: fsetdec).	0.0520811080933	1
Coq.MSets.MSetProperties.union_add	40	0	search with cache (only 1: fsetdec).	0.107792139053	1
Coq.MSets.MSetProperties.union_remove_add_1	40	0	search with cache (only 1: fsetdec).	0.18072104454	1
Coq.MSets.MSetProperties.union_remove_add_2	40	0	search with cache (only 1: fsetdec).	0.16494178772	1
Coq.MSets.MSetProperties.union_subset_1	40	0	search with cache (only 1: fsetdec).	0.0187649726868	1
Coq.MSets.MSetProperties.union_subset_2	40	0	search with cache (only 1: fsetdec).	0.031506061554	1
Coq.MSets.MSetProperties.union_subset_3	40	0	search with cache (only 1: fsetdec).	0.0348310470581	1
Coq.MSets.MSetProperties.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.0323679447174	1
Coq.MSets.MSetProperties.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.0321049690247	1
Coq.MSets.MSetProperties.empty_union_1	40	0	search with cache (only 1: fsetdec).	0.0415558815002	1
Coq.MSets.MSetProperties.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.0390989780426	1
Coq.MSets.MSetProperties.not_in_union	40	0.3	search with cache (only 1: rewrite union_spec; only 1: fsetdec).	3.33729887009	376
Coq.MSets.MSetProperties.inter_sym	40
Coq.MSets.MSetProperties.inter_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0401451587677	1
Coq.MSets.MSetProperties.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.0546460151672	1
Coq.MSets.MSetProperties.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.0621979236603	1
Coq.MSets.MSetProperties.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.0888230800629	1
Coq.MSets.MSetProperties.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.109065055847	1
Coq.MSets.MSetProperties.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.121148824692	1
Coq.MSets.MSetProperties.inter_add_1	40	4.0	search with cache (only 1: intros; only 1: fsetdec).	0.808817863464	65
Coq.MSets.MSetProperties.inter_add_2	40	0	search with cache (only 1: fsetdec).	0.0905210971832	1
Coq.MSets.MSetProperties.empty_inter_1	40	0	search with cache (only 1: fsetdec).	0.0298051834106	1
Coq.MSets.MSetProperties.empty_inter_2	40	0	search with cache (only 1: fsetdec).	0.0279052257538	1
Coq.MSets.MSetProperties.inter_subset_1	40	0	search with cache (only 1: fsetdec).	0.0195410251617	1
Coq.MSets.MSetProperties.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.0193469524384	1
Coq.MSets.MSetProperties.inter_subset_3	40	0	search with cache (only 1: fsetdec).	0.035355091095	1
Coq.MSets.MSetProperties.empty_diff_1	40	8	search with cache (only 1: fsetdec).	0.706563949585	169
Coq.MSets.MSetProperties.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.0415778160095	1
Coq.MSets.MSetProperties.diff_subset	40	0	search with cache (only 1: fsetdec).	0.0224571228027	1
Coq.MSets.MSetProperties.diff_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0777630805969	1
Coq.MSets.MSetProperties.remove_diff_singleton	40	0	search with cache (only 1: fsetdec).	0.0584349632263	1
Coq.MSets.MSetProperties.diff_inter_empty	40	0	search with cache (only 1: fsetdec).	0.101363897324	1
Coq.MSets.MSetProperties.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.088846206665	1
Coq.MSets.MSetProperties.Add_add	40	2.1.0.3	search with cache (only 1: red; only 1: intros; only 1: rewrite add_spec; only 1: intuition).	0.0295691490173	10
Coq.MSets.MSetProperties.Add_remove	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.0879580974579	2
Coq.MSets.MSetProperties.union_Add	40	0.1	search with cache (only 1: expAdd; only 1: fsetdec).	0.139132976532	3
Coq.MSets.MSetProperties.inter_Add	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.233880996704	2
Coq.MSets.MSetProperties.union_Equal	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.201935052872	2
Coq.MSets.MSetProperties.inter_Add_2	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.165605068207	2
Coq.MSets.MSetProperties.elements_Empty	40
Coq.MSets.MSetProperties.elements_empty	40
Coq.MSets.MSetProperties.of_list_1	40
Coq.MSets.MSetProperties.of_list_2	40
Coq.MSets.MSetProperties.of_list_3	40
Coq.MSets.MSetProperties.fold_spec_right	40
Coq.MSets.MSetProperties.fold_rec	40
Coq.MSets.MSetProperties.fold_rec_bis	40
Coq.MSets.MSetProperties.fold_rec_nodep	40	1.0.0.1.0.1.0	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: intros; only 1: auto with set; only 1: intros; only 1: rewrite Add_Equal in H1; only 1: auto with set).	0.231758117676	99
Coq.MSets.MSetProperties.fold_rec_weak	40
Coq.MSets.MSetProperties.fold_rel	40
Coq.MSets.MSetProperties.set_induction	40
Coq.MSets.MSetProperties.set_induction_bis	40
Coq.MSets.MSetProperties.fold_identity	40	6.0.3.3.5.0	search with cache (only 1: intros; only 1: apply fold_rec_bis; only 1: red; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	13.6291549206	6474
Coq.MSets.MSetProperties.fold_0	40	16.1.2.5.3.7.3	search with cache (only 1: intros; only 1: rewrite fold_spec_right; only 1: set (l := rev (elements s)); only 1: assert (Hdup : NoDup l) by (unfold l; eauto using elements_spec2w, NoDupA_rev with *); only 1: assert (Hsame : forall x, In x s <-> InA x l) by (unfold l; intros; rewrite elements_iff, InA_rev; intuition); only 1: clearbody l; only 1: eauto).	26.089936018	40500
Coq.MSets.MSetProperties.fold_1	40
Coq.MSets.MSetProperties.fold_2	40
Coq.MSets.MSetProperties.fold_1b	40	0.0.0.0.0.0.1.0.1.0.3.1.0.1.0.2	search with cache (only 1: unfold Empty; only 1: intros; only 1: destruct (fold_0 s i f) as (l, (H1, (H2, H3))); only 1: rewrite H3; only 1: clear H3; only 1: generalize H, H2; only 1: clear H H2; only 1: case l; only 1: simpl; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: elim (H e); only 1: elim (H2 e); only 1: intuition).	15.4161880016	13831
Coq.MSets.MSetProperties.fold_commutes	40
Coq.MSets.MSetProperties.fold_init	40
Coq.MSets.MSetProperties.fold_equal	40
Coq.MSets.MSetProperties.fold_empty	40
Coq.MSets.MSetProperties.fold_add	40	6.0.0.0.0.1.0	search with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: intuition).	0.910773992538	620
Coq.MSets.MSetProperties.add_fold	40
Coq.MSets.MSetProperties.remove_fold_1	40
Coq.MSets.MSetProperties.remove_fold_2	40	2.5.0	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set relations).	0.0872488021851	46
Coq.MSets.MSetProperties.fold_union_inter	40
Coq.MSets.MSetProperties.fold_diff_inter	40
Coq.MSets.MSetProperties.fold_union	40
Coq.MSets.MSetProperties.fold_plus	40
Coq.MSets.MSetProperties.cardinal_fold	40
Coq.MSets.MSetProperties.cardinal_0	40
Coq.MSets.MSetProperties.cardinal_1	40	0.0.3.9.0.0	search with cache (only 1: intros; only 1: rewrite cardinal_spec; only 1: rewrite elements_Empty in H; only 1: rewrite H; only 1: simpl; only 1: auto).	0.96035194397	1010
Coq.MSets.MSetProperties.cardinal_2	40
Coq.MSets.MSetProperties.cardinal_Empty	40
Coq.MSets.MSetProperties.cardinal_inv_1	40
Coq.MSets.MSetProperties.cardinal_inv_2	40
Coq.MSets.MSetProperties.cardinal_inv_2b	40
Coq.MSets.MSetProperties.Equal_cardinal	40
Coq.MSets.MSetProperties.cardinal_m	40
Coq.MSets.MSetProperties.empty_cardinal	40	0.0	search with cache (only 1: apply cardinal_1; only 1: auto with set).	0.00888299942017	2
Coq.MSets.MSetProperties.singleton_cardinal	40
Coq.MSets.MSetProperties.diff_inter_cardinal	40
Coq.MSets.MSetProperties.union_cardinal	40
Coq.MSets.MSetProperties.subset_cardinal	40
Coq.MSets.MSetProperties.subset_cardinal_lt	40
Coq.MSets.MSetProperties.union_inter_cardinal	40
Coq.MSets.MSetProperties.union_cardinal_inter	40
Coq.MSets.MSetProperties.union_cardinal_le	40	3.0.0	search with cache (only 1: intros; only 1: rewrite <- union_inter_cardinal; only 1: auto with arith).	0.0217971801758	13
Coq.MSets.MSetProperties.add_cardinal_1	40	0.0.0.2.0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (cardinal empty); only 1: replace 0 with (cardinal empty); only 1: replace 0 with (cardinal empty); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	0.0770859718323	30
Coq.MSets.MSetProperties.add_cardinal_2	40	0.0.1.0	search with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: auto; only 1: auto with set).	0.112821817398	60
Coq.MSets.MSetProperties.remove_cardinal_1	40	0.0.1.4.0	search with cache (only 1: intros; only 1: rewrite (cardinal_2 (s:=remove x s) (s':=s) (x:=x)); only 1: eauto with set relations; only 1: auto with set relations; only 1: auto with set relations).	0.0583078861237	26
Coq.MSets.MSetProperties.remove_cardinal_2	40	2.0	search with cache (only 1: intros; only 1: auto with set relations).	0.0377881526947	24
Coq.MSets.MSetProperties.sort_equivlistA_eqlistA	40
Coq.MSets.MSetProperties.gtb_1	40
Coq.MSets.MSetProperties.leb_1	40
Coq.MSets.MSetProperties.gtb_compat	40
Coq.MSets.MSetProperties.leb_compat	40	0.0.4.0	search with cache (only 1: intros a b H; only 1: unfold leb, gtb; only 1: rewrite H; only 1: auto).	0.0764329433441	8
Coq.MSets.MSetProperties.elements_split	40
Coq.MSets.MSetProperties.elements_Add	40
Coq.MSets.MSetProperties.elements_Add_Above	40
Coq.MSets.MSetProperties.elements_Add_Below	40
Coq.MSets.MSetProperties.set_induction_max	40
Coq.MSets.MSetProperties.set_induction_min	40
Coq.MSets.MSetProperties.fold_3	40
Coq.MSets.MSetProperties.fold_4	40
Coq.MSets.MSetProperties.fold_equal	40
Coq.MSets.MSetProperties.add_fold	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0151560306549	3
Coq.MSets.MSetProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0153238773346	3
Coq.MSets.MSetProperties.choose_equal	40
Coq.MSets.MSetAVL.singleton_spec	40
Coq.MSets.MSetAVL.singleton_ok	40	0.0	search with cache (only 1: unfold singleton; only 1: intuition_in).	0.0179419517517	2
Coq.MSets.MSetAVL.create_spec	40
Coq.MSets.MSetAVL.create_ok	40	0.0.0.0.9	search with cache (only 1: constructor; only 1: ok; only 1: ok; only 1: ok; only 1: ok).	1.74355506897	100
Coq.MSets.MSetAVL.bal_spec	40
Coq.MSets.MSetAVL.bal_ok	40
Coq.MSets.MSetAVL.add_spec'	40
Coq.MSets.MSetAVL.add_spec	40	0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induct ltac:(s) ltac:(x); only 1: intuition_in; only 1: intuition_in; only 1: setoid_replace y with x'; only 1: eauto; only 1: eauto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: intuition_in; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: intuition_in).	2.87958788872	313
Coq.MSets.MSetAVL.add_ok	40
Coq.MSets.MSetAVL.join_spec	40
Coq.MSets.MSetAVL.join_ok	40
Coq.MSets.MSetAVL.remove_min_spec	40
Coq.MSets.MSetAVL.remove_min_ok	40
Coq.MSets.MSetAVL.remove_min_gt_tree	40
Coq.MSets.MSetAVL.merge_spec	40
Coq.MSets.MSetAVL.merge_ok	40
Coq.MSets.MSetAVL.remove_spec	40
Coq.MSets.MSetAVL.remove_ok	40
Coq.MSets.MSetAVL.concat_spec	40
Coq.MSets.MSetAVL.concat_ok	40
Coq.MSets.MSetAVL.split_spec1	40
Coq.MSets.MSetAVL.split_spec2	40
Coq.MSets.MSetAVL.split_spec3	40
Coq.MSets.MSetAVL.split_ok	40
Coq.MSets.MSetAVL.split_ok1	40
Coq.MSets.MSetAVL.split_ok2	40	0.0.2	search with cache (only 1: destruct (@split_ok s x); only 1: auto; only 1: auto).	0.0214200019836	5
Coq.MSets.MSetAVL.inter_spec_ok	40
Coq.MSets.MSetAVL.inter_spec	40
Coq.MSets.MSetAVL.inter_ok	40	0.1.1.0	search with cache (only 1: destruct (@inter_spec_ok s1 s2); only 1: auto; only 1: auto; only 1: auto).	0.0301880836487	6
Coq.MSets.MSetAVL.diff_spec_ok	40
Coq.MSets.MSetAVL.diff_spec	40
Coq.MSets.MSetAVL.diff_ok	40	0.1.1.1	search with cache (only 1: destruct (@diff_spec_ok s1 s2); only 1: auto; only 1: auto; only 1: auto).	0.0252909660339	7
Coq.MSets.MSetAVL.union_spec	40
Coq.MSets.MSetAVL.union_ok	40
Coq.MSets.MSetAVL.filter_spec	40
Coq.MSets.MSetAVL.filter_weak_spec	40
Coq.MSets.MSetAVL.filter_ok	40
Coq.MSets.MSetAVL.partition_spec1'	40
Coq.MSets.MSetAVL.partition_spec2'	40	0.0.0.0.0.0	search with cache (only 1: induction s as [| h l Hl x r Hr]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Hl, <- Hr; only 1: now destruct (partition f l), (partition f r), (f x)).	0.0458521842957	6
Coq.MSets.MSetAVL.partition_spec1	40
Coq.MSets.MSetAVL.partition_spec2	40
Coq.MSets.MSetAVL.partition_ok1	40
Coq.MSets.MSetAVL.partition_ok2	40
Coq.MSets.MSetEqProperties.mem_eq	40
Coq.MSets.MSetEqProperties.equal_mem_1	40
Coq.MSets.MSetEqProperties.equal_mem_2	40
Coq.MSets.MSetEqProperties.subset_mem_1	40
Coq.MSets.MSetEqProperties.subset_mem_2	40
Coq.MSets.MSetEqProperties.empty_mem	40
Coq.MSets.MSetEqProperties.is_empty_equal_empty	40
Coq.MSets.MSetEqProperties.choose_mem_1	40	3.9	search with cache (only 1: generalize (FM.mem_iff (diff s s') x), (FM.mem_iff s x), (FM.mem_iff s' x), (diff_spec s s' x); only 1: intuition).	0.39187502861	243
Coq.MSets.MSetEqProperties.choose_mem_2	40	0	search with cache (only 1: auto with set).	0.0289828777313	1
Coq.MSets.MSetEqProperties.add_mem_1	40
Coq.MSets.MSetEqProperties.add_mem_2	40
Coq.MSets.MSetEqProperties.remove_mem_1	40	0.5	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set relations).	2.27939605713	807
Coq.MSets.MSetEqProperties.remove_mem_2	40
Coq.MSets.MSetEqProperties.singleton_equal_add	40	2	search with cache (only 1: auto with set).	0.0316522121429	3
Coq.MSets.MSetEqProperties.union_mem	40
Coq.MSets.MSetEqProperties.inter_mem	40
Coq.MSets.MSetEqProperties.diff_mem	40
Coq.MSets.MSetEqProperties.mem_3	40
Coq.MSets.MSetEqProperties.mem_4	40	1.9	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with *).	4.23342585564	1460
Coq.MSets.MSetEqProperties.equal_refl	40	1.1	search with cache (only 1: apply equal_1; only 1: auto with set).	0.0291550159454	14
Coq.MSets.MSetEqProperties.equal_sym	40	3.0.0.4.0.0.2.2	search with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	1.44293999672	588
Coq.MSets.MSetEqProperties.equal_trans	40	4.0.1.0	search with cache (only 1: do 2 rewrite <- equal_iff; only 1: intros; only 1: apply equal_1; only 1: Dec.fsetdec).	0.129649162292	9
Coq.MSets.MSetEqProperties.equal_equal	40	0.1.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0301051139832	4
Coq.MSets.MSetEqProperties.equal_cardinal	40	1.0.1	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.035737991333	5
Coq.MSets.MSetEqProperties.subset_refl	40	1.1	search with cache (only 1: apply subset_1; only 1: Dec.fsetdec).	0.0416538715363	12
Coq.MSets.MSetEqProperties.subset_antisym	40	5.0	search with cache (only 1: intros; only 1: auto with set).	0.0396430492401	11
Coq.MSets.MSetEqProperties.subset_trans	40
Coq.MSets.MSetEqProperties.subset_equal	40	0	search with cache (only 1: auto with set).	0.018651008606	1
Coq.MSets.MSetEqProperties.choose_mem_3	40
Coq.MSets.MSetEqProperties.choose_mem_4	40
Coq.MSets.MSetEqProperties.add_mem_3	40	1	search with cache (only 1: auto with set relations).	0.0198299884796	2
Coq.MSets.MSetEqProperties.add_equal	40	7.0.0	search with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).	0.080108165741	29
Coq.MSets.MSetEqProperties.remove_mem_3	40	5.13	search with cache (only 1: do 2 rewrite <- mem_iff; only 1: Dec.fsetdec).	1.03230381012	491
Coq.MSets.MSetEqProperties.remove_equal	40	1.1	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set relations).	0.0724320411682	4
Coq.MSets.MSetEqProperties.add_remove	40
Coq.MSets.MSetEqProperties.remove_add	40	0.0.1.4	search with cache (only 1: rewrite <- not_mem_iff; only 1: intros; only 1: apply equal_1; only 1: Dec.fsetdec).	0.386054039001	26
Coq.MSets.MSetEqProperties.is_empty_cardinal	40	0.0.0.0.0.1.5.1	search with cache (only 1: apply eq_true_iff_eq; only 1: rewrite <- is_empty_iff; only 1: rewrite elements_Empty, cardinal_spec; only 1: destruct (elements s); only 1: intuition; only 1: intuition; only 1: discriminate; only 1: discriminate).	1.7043390274	801
Coq.MSets.MSetEqProperties.singleton_mem_1	40	6	search with cache (only 1: auto with set relations).	0.127126932144	50
Coq.MSets.MSetEqProperties.singleton_mem_2	40	5.12	search with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	3.2831351757	435
Coq.MSets.MSetEqProperties.singleton_mem_3	40
Coq.MSets.MSetEqProperties.union_sym	40	3.2	search with cache (only 1: apply equal_1; only 1: auto with set).	0.024628162384	7
Coq.MSets.MSetEqProperties.union_subset_equal	40	0	search with cache (only 1: auto with set).	0.03297996521	1
Coq.MSets.MSetEqProperties.union_equal_1	40	0	search with cache (only 1: auto with set).	0.0196568965912	1
Coq.MSets.MSetEqProperties.union_equal_2	40	0	search with cache (only 1: auto with set).	0.0198569297791	1
Coq.MSets.MSetEqProperties.union_assoc	40	0	search with cache (only 1: auto with set).	0.0180349349976	1
Coq.MSets.MSetEqProperties.add_union_singleton	40	2	search with cache (only 1: auto with set).	0.0341291427612	3
Coq.MSets.MSetEqProperties.union_add	40	0	search with cache (only 1: auto with set).	0.0181031227112	1
Coq.MSets.MSetEqProperties.union_subset_1	40	0	search with cache (only 1: auto with set).	0.0174160003662	1
Coq.MSets.MSetEqProperties.union_subset_2	40	0	search with cache (only 1: auto with set).	0.0173969268799	1
Coq.MSets.MSetEqProperties.union_subset_3	40	0.0	search with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.0893559455872	2
Coq.MSets.MSetEqProperties.inter_sym	40	4.2	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.0892279148102	8
Coq.MSets.MSetEqProperties.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.0224540233612	1
Coq.MSets.MSetEqProperties.inter_equal_1	40	0	search with cache (only 1: auto with set).	0.0196690559387	1
Coq.MSets.MSetEqProperties.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.0197169780731	1
Coq.MSets.MSetEqProperties.inter_assoc	40	0	search with cache (only 1: auto with set).	0.0176799297333	1
Coq.MSets.MSetEqProperties.union_inter_1	40	0	search with cache (only 1: auto with set).	0.0179030895233	1
Coq.MSets.MSetEqProperties.union_inter_2	40	0	search with cache (only 1: auto with set).	0.0179538726807	1
Coq.MSets.MSetEqProperties.inter_add_1	40	0	search with cache (only 1: auto with set).	0.0193130970001	1
Coq.MSets.MSetEqProperties.inter_add_2	40	0.10	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.941755056381	84
Coq.MSets.MSetEqProperties.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.0173830986023	1
Coq.MSets.MSetEqProperties.inter_subset_2	40	0	search with cache (only 1: auto with set).	0.017119884491	1
Coq.MSets.MSetEqProperties.inter_subset_3	40	0	search with cache (only 1: auto with set).	0.0360260009766	1
Coq.MSets.MSetEqProperties.diff_subset	40	0.1	search with cache (only 1: apply subset_1; only 1: Dec.fsetdec).	0.0448169708252	3
Coq.MSets.MSetEqProperties.diff_subset_equal	40	0	search with cache (only 1: auto with set).	0.0221049785614	1
Coq.MSets.MSetEqProperties.remove_inter_singleton	40	0.2	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.123026847839	4
Coq.MSets.MSetEqProperties.diff_inter_empty	40	0	search with cache (only 1: auto with set).	0.0179409980774	1
Coq.MSets.MSetEqProperties.diff_inter_all	40	0	search with cache (only 1: auto with set).	0.0175478458405	1
Coq.MSets.MSetEqProperties.set_rec	40
Coq.MSets.MSetEqProperties.exclusive_set	40
Coq.MSets.MSetEqProperties.fold_empty	40	0.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.0255720615387	2
Coq.MSets.MSetEqProperties.fold_equal	40
Coq.MSets.MSetEqProperties.fold_add	40
Coq.MSets.MSetEqProperties.add_fold	40
Coq.MSets.MSetEqProperties.remove_fold_1	40	0.4.0.0.0.2.1	search with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set relations; only 1: auto with set relations).	3.0623998642	1217
Coq.MSets.MSetEqProperties.remove_fold_2	40
Coq.MSets.MSetEqProperties.fold_union	40
Coq.MSets.MSetEqProperties.add_cardinal_1	40	7.0	search with cache (only 1: intros; only 1: auto with set).	0.0568010807037	30
Coq.MSets.MSetEqProperties.add_cardinal_2	40	5.0.1.4.1	search with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto with set).	1.29845285416	1253
Coq.MSets.MSetEqProperties.remove_cardinal_1	40	0.0.1.8.0.0.1.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with set; only 1: auto).	0.710090875626	770
Coq.MSets.MSetEqProperties.remove_cardinal_2	40	0.2.17	search with cache (only 1: intros H a; only 1: rewrite <- not_mem_iff; only 1: auto with set).	23.0024189949	1525
Coq.MSets.MSetEqProperties.union_cardinal	40	0.0.1.5.1.1.10.1.1.1.0	search with cache (only 1: intros; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: split; only 1: auto; only 1: auto; only 1: congruence; only 1: congruence; only 1: auto; only 1: auto).	8.43993115425	8658
Coq.MSets.MSetEqProperties.subset_cardinal	40	6.0	search with cache (only 1: intros; only 1: auto with set).	0.0288689136505	8
Coq.MSets.MSetEqProperties.Comp'	40	0.10.0.1.1	search with cache (only 1: red; only 1: red; only 1: intros; only 1: rewrite H; only 1: auto).	0.743661165237	332
Coq.MSets.MSetEqProperties.filter_mem	40
Coq.MSets.MSetEqProperties.for_all_filter	40
Coq.MSets.MSetEqProperties.exists_filter	40
Coq.MSets.MSetEqProperties.partition_filter_1	40	16.0	search with cache (only 1: intros; only 1: auto with set).	0.4335501194	379
Coq.MSets.MSetEqProperties.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.0256171226501	1
Coq.MSets.MSetEqProperties.filter_add_1	40
Coq.MSets.MSetEqProperties.filter_add_2	40
Coq.MSets.MSetEqProperties.add_filter_1	40
Coq.MSets.MSetEqProperties.add_filter_2	40
Coq.MSets.MSetEqProperties.union_filter	40
Coq.MSets.MSetEqProperties.filter_union	40	0.0.0.0.1.0.0.0.1	search with cache (only 1: unfold Equal; only 1: intros; only 1: set_iff; only 1: repeat rewrite filter_spec; only 1: set_iff; only 1: intuition; only 1: auto; only 1: auto; only 1: auto).	3.60418200493	156
Coq.MSets.MSetEqProperties.for_all_mem_1	40	4.0.0.0.0	search with cache (only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intuition).	0.109348058701	22
Coq.MSets.MSetEqProperties.for_all_mem_2	40	0.10.7.0	search with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: intuition; only 1: auto).	1.09692001343	795
Coq.MSets.MSetEqProperties.for_all_mem_3	40
Coq.MSets.MSetEqProperties.for_all_mem_4	40
Coq.MSets.MSetEqProperties.for_all_exists	40
Coq.MSets.MSetEqProperties.Comp'	40	0.0.0.0	search with cache (only 1: repeat red; only 1: intros; only 1: f_equal; only 1: auto).	0.0347859859467	4
Coq.MSets.MSetEqProperties.exists_mem_1	40
Coq.MSets.MSetEqProperties.exists_mem_2	40
Coq.MSets.MSetEqProperties.exists_mem_3	40	3.4.0.1.0	search with cache (only 1: intros; only 1: apply exists_1; only 1: auto; only 1: exists x; only 1: intuition).	0.881186008453	406
Coq.MSets.MSetEqProperties.exists_mem_4	40
Coq.MSets.MSetEqProperties.sum_plus	40
Coq.MSets.MSetEqProperties.sum_filter	40
Coq.MSets.MSetEqProperties.fold_compat	40
Coq.MSets.MSetEqProperties.sum_compat	40
Coq.MSets.MSetDecide.test_push	40	0	search with cache (only 1: auto).	0.0179269313812	1
Coq.MSets.MSetDecide.test_pull	40	0.0.0	search with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.0989308357239	3
Coq.MSets.MSetDecide.eq_refl_iff	40	1	search with cache (only 1: intuition).	0.0145151615143	2
Coq.MSets.MSetDecide.dec_In	40	0.0.0.8.28	search with cache (only 1: simpl_relation; only 1: rewrite <- mem_spec; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	3.91989994049	2895
Coq.MSets.MSetDecide.dec_eq	40
Coq.MSets.MSetDecide.test_eq_trans_1	40
Coq.MSets.MSetDecide.test_eq_trans_2	40	2.1	search with cache (only 1: intros s s' E; only 1: fsetdec).	0.234997034073	20
Coq.MSets.MSetDecide.test_eq_neq_trans_1	40	0	search with cache (only 1: fsetdec).	0.12097287178	1
Coq.MSets.MSetDecide.test_eq_neq_trans_2	40	0	search with cache (only 1: fsetdec).	0.256610155106	1
Coq.MSets.MSetDecide.test_In_singleton	40	0	search with cache (only 1: fsetdec).	0.0202791690826	1
Coq.MSets.MSetDecide.test_add_In	40	0	search with cache (only 1: fsetdec).	0.0434808731079	1
Coq.MSets.MSetDecide.test_Subset_add_remove	40	0	search with cache (only 1: fsetdec).	0.042534828186	1
Coq.MSets.MSetDecide.test_eq_disjunction	40	0	search with cache (only 1: fsetdec).	0.0637278556824	1
Coq.MSets.MSetDecide.test_not_In_disj	40	0	search with cache (only 1: fsetdec).	0.124182224274	1
Coq.MSets.MSetDecide.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.0976819992065	1
Coq.MSets.MSetDecide.test_iff_conj	40	0	search with cache (only 1: fsetdec).	0.346307992935	1
Coq.MSets.MSetDecide.test_set_ops_1	40	0	search with cache (only 1: fsetdec).	0.183579921722	1
Coq.MSets.MSetDecide.eq_chain_test	40	0	search with cache (only 1: fsetdec).	0.24147605896	1
Coq.MSets.MSetDecide.test_too_complex	40	0.1.7.15	search with cache (only 1: intros x y H a; only 1: intros E; only 1: rewrite singleton_spec; only 1: intuition).	6.31112599373	5224
Coq.MSets.MSetDecide.function_test_1	40	0.1	search with cache (only 1: intros s s' E; only 1: fsetdec).	0.105629920959	20
Coq.MSets.MSetDecide.function_test_2	40	0	search with cache (only 1: fsetdec).	0.0620591640472	1
Coq.MSets.MSetDecide.test_baydemir	40	0	search with cache (only 1: fsetdec).	0.0569469928741	1
Coq.MSets.MSetGenTree.ltb_tree_iff	40
Coq.MSets.MSetGenTree.gtb_tree_iff	40
Coq.MSets.MSetGenTree.isok_iff	40
Coq.MSets.MSetGenTree.isok_Ok	40
Coq.MSets.MSetGenTree.In_1	40
Coq.MSets.MSetGenTree.In_compat	40
Coq.MSets.MSetGenTree.In_node_iff	40	0	search with cache (only 1: intuition_in).	0.0650429725647	1
Coq.MSets.MSetGenTree.In_leaf_iff	40	0	search with cache (only 1: intuition_in).	0.0293619632721	1
Coq.MSets.MSetGenTree.lt_leaf	40	0.1	search with cache (only 1: unfold lt_tree; only 1: intuition_in).	0.0181860923767	3
Coq.MSets.MSetGenTree.gt_leaf	40	0.1	search with cache (only 1: unfold gt_tree; only 1: intuition_in).	0.017676115036	3
Coq.MSets.MSetGenTree.lt_tree_node	40	0.0.4.0	search with cache (only 1: intuition_in; only 1: unfold lt_tree; only 1: intuition_in; only 1: order).	0.0581910610199	8
Coq.MSets.MSetGenTree.gt_tree_node	40	0.0.4.0	search with cache (only 1: intuition_in; only 1: unfold gt_tree; only 1: intuition_in; only 1: order).	0.0584881305695	8
Coq.MSets.MSetGenTree.lt_tree_not_in	40	0.1	search with cache (only 1: intuition_in; only 1: order).	0.166240930557	27
Coq.MSets.MSetGenTree.lt_tree_trans	40	4.0.0	search with cache (only 1: unfold lt_tree; only 1: intuition_in; only 1: eauto).	0.0242681503296	7
Coq.MSets.MSetGenTree.gt_tree_not_in	40	0.0.0	search with cache (only 1: intros; only 1: intro; only 1: order).	0.0163650512695	3
Coq.MSets.MSetGenTree.gt_tree_trans	40	4.0.0	search with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: eauto).	0.0244119167328	7
Coq.MSets.MSetGenTree.lt_tree_compat	40	0.0.0.1.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: subst; only 1: order).	0.0824429988861	8
Coq.MSets.MSetGenTree.gt_tree_compat	40	0.0.0.1.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: subst; only 1: order).	0.0324070453644	8
Coq.MSets.MSetGenTree.empty_spec	40	5.21	search with cache (only 1: intro H; only 1: auto).	0.157325983047	391
Coq.MSets.MSetGenTree.empty_ok	40	1	search with cache (only 1: intuition_in).	0.0102050304413	2
Coq.MSets.MSetGenTree.is_empty_spec	40
Coq.MSets.MSetGenTree.mem_spec	40
Coq.MSets.MSetGenTree.min_elt_spec1	40
Coq.MSets.MSetGenTree.min_elt_spec2	40
Coq.MSets.MSetGenTree.min_elt_spec3	40
Coq.MSets.MSetGenTree.max_elt_spec1	40
Coq.MSets.MSetGenTree.max_elt_spec2	40
Coq.MSets.MSetGenTree.max_elt_spec3	40	0.0.0.0.0.0.0.1	search with cache (only 1: functional induction (max_elt s); only 1: red; only 1: red; only 1: inversion 2; only 1: inversion 1; only 1: intro H0; only 1: destruct (IHo H0 _x3); only 1: auto).	0.361840009689	145
Coq.MSets.MSetGenTree.choose_spec1	40	2.1.1.0.1.45	search with cache (only 1: intro; only 1: functional induction (min_elt s); only 1: discriminate; only 1: inversion 1; only 1: auto; only 1: auto).	18.4172301292	25309
Coq.MSets.MSetGenTree.choose_spec2	40
Coq.MSets.MSetGenTree.choose_spec3	40
Coq.MSets.MSetGenTree.elements_spec1'	40
Coq.MSets.MSetGenTree.elements_spec1	40
Coq.MSets.MSetGenTree.elements_spec2'	40
Coq.MSets.MSetGenTree.elements_spec2	40
Coq.MSets.MSetGenTree.elements_spec2w	40
Coq.MSets.MSetGenTree.elements_aux_cardinal	40
Coq.MSets.MSetGenTree.elements_cardinal	40
Coq.MSets.MSetGenTree.elements_app	40
Coq.MSets.MSetGenTree.elements_node	40
Coq.MSets.MSetGenTree.rev_elements_app	40
Coq.MSets.MSetGenTree.rev_elements_node	40
Coq.MSets.MSetGenTree.rev_elements_rev	40
Coq.MSets.MSetGenTree.sorted_app_inv	40
Coq.MSets.MSetGenTree.elements_sort_ok	40
Coq.MSets.MSetGenTree.for_all_spec	40
Coq.MSets.MSetGenTree.exists_spec	40
Coq.MSets.MSetGenTree.fold_spec'	40
Coq.MSets.MSetGenTree.fold_spec	40
Coq.MSets.MSetGenTree.subsetl_spec	40
Coq.MSets.MSetGenTree.subsetr_spec	40
Coq.MSets.MSetGenTree.subset_spec	40
Coq.MSets.MSetGenTree.eq_equiv	40
Coq.MSets.MSetGenTree.eq_Leq	40
Coq.MSets.MSetGenTree.lt_strorder	40
Coq.MSets.MSetGenTree.lt_compat	40
Coq.MSets.MSetGenTree.flatten_e_elements	40	1.10.1	search with cache (only 1: intros; only 1: rewrite elements_node; only 1: now rewrite !app_assoc_reverse).	1.0504989624	660
Coq.MSets.MSetGenTree.cons_1	40
Coq.MSets.MSetGenTree.compare_end_Cmp	40
Coq.MSets.MSetGenTree.compare_more_Cmp	40	0.0.0.0.3.17.4.0	search with cache (only 1: intros; only 1: simpl; only 1: elim_compare x1 x2; only 1: auto; only 1: constructor; only 1: auto; only 1: constructor; only 1: auto).	6.44470310211	6677
Coq.MSets.MSetGenTree.compare_cont_Cmp	40
Coq.MSets.MSetGenTree.compare_Cmp	40
Coq.MSets.MSetGenTree.compare_spec	40
Coq.MSets.MSetGenTree.equal_spec	40
Coq.MSets.MSetGenTree.mindepth_maxdepth	40
Coq.MSets.MSetGenTree.maxdepth_cardinal	40
Coq.MSets.MSetGenTree.mindepth_cardinal	40
Coq.MSets.MSetGenTree.maxdepth_log_cardinal	40
Coq.MSets.MSetGenTree.mindepth_log_cardinal	40
Coq.MSets.MSetInterface.In_compat	40
Coq.MSets.MSetInterface.eq_equiv	40	1.2.1.15.47	search with cache (only 1: compute; only 1: split; only 1: firstorder; only 1: firstorder; only 1: firstorder).	0.70316195488	2800
Coq.MSets.MSetInterface.eq_dec	40
Coq.MSets.MSetInterface.mem_spec	40
Coq.MSets.MSetInterface.equal_spec	40
Coq.MSets.MSetInterface.subset_spec	40
Coq.MSets.MSetInterface.empty_spec	40
Coq.MSets.MSetInterface.is_empty_spec	40
Coq.MSets.MSetInterface.add_spec	40
Coq.MSets.MSetInterface.remove_spec	40
Coq.MSets.MSetInterface.singleton_spec	40
Coq.MSets.MSetInterface.union_spec	40
Coq.MSets.MSetInterface.inter_spec	40
Coq.MSets.MSetInterface.diff_spec	40
Coq.MSets.MSetInterface.fold_spec	40
Coq.MSets.MSetInterface.cardinal_spec	40
Coq.MSets.MSetInterface.filter_spec	40
Coq.MSets.MSetInterface.for_all_spec	40
Coq.MSets.MSetInterface.exists_spec	40
Coq.MSets.MSetInterface.partition_spec1	40
Coq.MSets.MSetInterface.partition_spec2	40
Coq.MSets.MSetInterface.elements_spec1	40
Coq.MSets.MSetInterface.elements_spec2w	40
Coq.MSets.MSetInterface.choose_spec1	40
Coq.MSets.MSetInterface.choose_spec2	40
Coq.MSets.MSetInterface.lt_strorder	40
Coq.MSets.MSetInterface.lt_compat	40
Coq.MSets.MSetInterface.compare_spec	40
Coq.MSets.MSetInterface.elements_spec2	40
Coq.MSets.MSetInterface.min_elt_spec1	40
Coq.MSets.MSetInterface.min_elt_spec2	40
Coq.MSets.MSetInterface.min_elt_spec3	40
Coq.MSets.MSetInterface.max_elt_spec1	40
Coq.MSets.MSetInterface.max_elt_spec2	40
Coq.MSets.MSetInterface.max_elt_spec3	40
Coq.MSets.MSetInterface.choose_spec3	40
Coq.MSets.MSetInterface.eq_equiv	40	0.1.0.12.46	search with cache (only 1: compute; only 1: split; only 1: firstorder; only 1: firstorder; only 1: firstorder).	0.973148107529	2180
Coq.MSets.MSetInterface.Proper_instance_0	40
Coq.MSets.MSetInterface.Proper_instance_1	40
Coq.MSets.MSetInterface.Proper_instance_2	40
Coq.MSets.MSetInterface.Proper_instance_3	40
Coq.MSets.MSetInterface.Proper_instance_4	40
Coq.MSets.MSetInterface.lt_compat	40
Coq.MSets.MSetInterface.lt_strorder	40
Coq.MSets.MSetInterface.lt_empty_r	40	11	search with cache (only 1: firstorder).	0.10560297966	87
Coq.MSets.MSetInterface.lt_empty_l	40
Coq.MSets.MSetInterface.lt_add_lt	40
Coq.MSets.MSetInterface.lt_add_eq	40
Coq.MSets.MSetInterface.lt_strorder	40
Coq.MSets.MSetInterface.lt_compat'	40
Coq.MSets.MSetInterface.eq_cons	40
Coq.MSets.MSetInterface.cons_CompSpec	40
Coq.MSets.MSetToFiniteSet.In_In	40	5.1	search with cache (only 1: intros; only 1: intuition).	0.0940580368042	45
Coq.MSets.MSetToFiniteSet.Subset_Included	40	1.0.1	search with cache (only 1: compute; only 1: intros; only 1: auto).	0.0210399627686	5
Coq.MSets.MSetToFiniteSet.Equal_Same_set	40	12.2	search with cache (only 1: unfold Subset, Included, In, mkEns; only 1: firstorder).	2.94290399551	1154
Coq.MSets.MSetToFiniteSet.empty_Empty_Set	40	3.0.1.0.2	search with cache (only 1: unfold Subset, Included, Same_set, In, mkEns; only 1: intuition; only 1: intro x; only 1: unfold In; only 1: Dec.fsetdec).	0.1673579216	59
Coq.MSets.MSetToFiniteSet.Empty_Empty_set	40	17	search with cache (only 1: firstorder).	9.98719096184	9216
Coq.MSets.MSetToFiniteSet.singleton_Singleton	40	0.2.0	search with cache (only 1: intros; only 1: unfold Subset, Included, Same_set, In, mkEns; only 1: intuition).	0.0325689315796	5
Coq.MSets.MSetToFiniteSet.union_Union	40
Coq.MSets.MSetToFiniteSet.inter_Intersection	40
Coq.MSets.MSetToFiniteSet.add_Add	40
Coq.MSets.MSetToFiniteSet.Add_Add	40
Coq.MSets.MSetToFiniteSet.remove_Subtract	40
Coq.MSets.MSetToFiniteSet.mkEns_Finite	40
Coq.MSets.MSetToFiniteSet.mkEns_cardinal	40
Coq.MSets.MSetToFiniteSet.Ens_to_MSet	40
Coq.MSets.MSetWeakList.In_compat	40
Coq.MSets.MSetWeakList.mem_spec	40
Coq.MSets.MSetWeakList.isok_iff	40
Coq.MSets.MSetWeakList.isok_Ok	40	0.0.0.0.1.0.2.0.0.0.0.5	search with cache (only 1: induction l; only 1: intuition; only 1: simpl; only 1: rewrite andb_true_iff; only 1: rewrite negb_true_iff; only 1: intros H; only 1: destruct H; only 1: constructors; only 1: rewrite <- mem_spec; only 1: congruence; only 1: auto; only 1: auto).	2.45404815674	1548
Coq.MSets.MSetWeakList.add_spec	40
Coq.MSets.MSetWeakList.add_ok	40
Coq.MSets.MSetWeakList.remove_spec	40
Coq.MSets.MSetWeakList.remove_ok	40
Coq.MSets.MSetWeakList.singleton_ok	40	1.0	search with cache (only 1: intros; only 1: intuition).	0.0226519107819	3
Coq.MSets.MSetWeakList.singleton_spec	40
Coq.MSets.MSetWeakList.empty_ok	40	3	search with cache (only 1: intuition).	0.0177218914032	4
Coq.MSets.MSetWeakList.empty_spec	40	0.0.7.0	search with cache (only 1: unfold empty; only 1: intro; only 1: intuition; only 1: inv).	0.0778350830078	31
Coq.MSets.MSetWeakList.is_empty_spec	40
Coq.MSets.MSetWeakList.elements_spec1	40	1.0	search with cache (only 1: intros; only 1: intuition).	0.0230829715729	3
Coq.MSets.MSetWeakList.elements_spec2w	40	2.1.0.0.0	search with cache (only 1: unfold elements; only 1: induction s; only 1: intros; only 1: intuition; only 1: auto).	0.0392639636993	12
Coq.MSets.MSetWeakList.fold_spec	40	2.0.2.0.0.0	search with cache (only 1: unfold elements; only 1: induction s; only 1: intros; only 1: split; only 1: intros; only 1: split).	0.0391569137573	10
Coq.MSets.MSetWeakList.union_ok	40
Coq.MSets.MSetWeakList.union_spec	40
Coq.MSets.MSetWeakList.inter_ok	40
Coq.MSets.MSetWeakList.inter_spec	40
Coq.MSets.MSetWeakList.diff_ok	40
Coq.MSets.MSetWeakList.diff_spec	40
Coq.MSets.MSetWeakList.subset_spec	40
Coq.MSets.MSetWeakList.equal_spec	40
Coq.MSets.MSetWeakList.choose_spec1	40
Coq.MSets.MSetWeakList.choose_spec2	40	0.0.0.1.2.0.0.0.3	search with cache (only 1: unfold Empty; only 1: destruct s; only 1: simpl; only 1: intros; only 1: intro; only 1: inv; only 1: simpl; only 1: intros; only 1: inversion H).	10.0484120846	3386
Coq.MSets.MSetWeakList.cardinal_spec	40	0.1.1.0.1.0	search with cache (only 1: unfold elements; only 1: induction s; only 1: intros; only 1: inv; only 1: intuition; only 1: auto).	0.0813679695129	17
Coq.MSets.MSetWeakList.filter_spec'	40
Coq.MSets.MSetWeakList.filter_spec	40
Coq.MSets.MSetWeakList.filter_ok	40
Coq.MSets.MSetWeakList.for_all_spec	40
Coq.MSets.MSetWeakList.exists_spec	40
Coq.MSets.MSetWeakList.partition_spec1	40
Coq.MSets.MSetWeakList.partition_spec2	40
Coq.MSets.MSetWeakList.partition_ok1'	40
Coq.MSets.MSetWeakList.partition_ok2'	40
Coq.MSets.MSetWeakList.partition_ok1	40
Coq.MSets.MSetWeakList.partition_ok2	40
Coq.MSets.MSetList.inf_iff	40
Coq.MSets.MSetList.isok_iff	40
Coq.MSets.MSetList.isok_Ok	40	0	search with cache (only 1: tauto).	0.00641703605652	1
Coq.MSets.MSetList.mem_spec	40
Coq.MSets.MSetList.add_inf	40
Coq.MSets.MSetList.add_ok	40
Coq.MSets.MSetList.add_spec	40
Coq.MSets.MSetList.remove_inf	40
Coq.MSets.MSetList.remove_ok	40	0.0.0.0.1.0.1.0.0.0.4	search with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s x; only 1: simple induction s; only 1: intuition; only 1: simpl; only 1: intros; only 1: inv; only 1: elim_compare x a; only 1: auto; only 1: auto; only 1: auto).	4.91613698006	1722
Coq.MSets.MSetList.remove_spec	40
Coq.MSets.MSetList.singleton_ok	40	2	search with cache (only 1: intuition).	0.00963401794434	3
Coq.MSets.MSetList.singleton_spec	40	0.0.0.14.0	search with cache (only 1: intros; only 1: unfold singleton; only 1: intuition; only 1: inv; only 1: auto).	0.510767936707	638
Coq.MSets.MSetList.union_inf	40
Coq.MSets.MSetList.union_ok	40
Coq.MSets.MSetList.union_spec	40
Coq.MSets.MSetList.inter_inf	40
Coq.MSets.MSetList.inter_ok	40
Coq.MSets.MSetList.inter_spec	40
Coq.MSets.MSetList.diff_inf	40
Coq.MSets.MSetList.diff_ok	40	0.0.0	search with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).	0.177196025848	3
Coq.MSets.MSetList.diff_spec	40
Coq.MSets.MSetList.equal_spec	40
Coq.MSets.MSetList.subset_spec	40
Coq.MSets.MSetList.empty_ok	40	8	search with cache (only 1: intuition).	0.0100200176239	9
Coq.MSets.MSetList.empty_spec	40	29	search with cache (only 1: easy).	1.3007941246	1172
Coq.MSets.MSetList.is_empty_spec	40
Coq.MSets.MSetList.elements_spec1	40	0.1	search with cache (only 1: intros; only 1: intuition).	0.00998592376709	3
Coq.MSets.MSetList.elements_spec2	40	2.3.0	search with cache (only 1: intuition; only 1: inv; only 1: auto).	0.0141620635986	8
Coq.MSets.MSetList.elements_spec2w	40	0.0.0	search with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).	0.0421569347382	3
Coq.MSets.MSetList.min_elt_spec1	40
Coq.MSets.MSetList.min_elt_spec2	40
Coq.MSets.MSetList.min_elt_spec3	40	0.0.1.0	search with cache (only 1: destruct s; only 1: inversion 2; only 1: simpl; only 1: inversion 1).	0.0185089111328	13
Coq.MSets.MSetList.max_elt_spec1	40
Coq.MSets.MSetList.max_elt_spec2	40
Coq.MSets.MSetList.max_elt_spec3	40
Coq.MSets.MSetList.choose_spec3	40
Coq.MSets.MSetList.fold_spec	40	0	search with cache (only 1: intuition).	0.008061170578	1
Coq.MSets.MSetList.cardinal_spec	40	0.0.0	search with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).	0.0137519836426	3
Coq.MSets.MSetList.filter_inf	40
Coq.MSets.MSetList.filter_ok	40
Coq.MSets.MSetList.filter_spec	40
Coq.MSets.MSetList.for_all_spec	40
Coq.MSets.MSetList.exists_spec	40
Coq.MSets.MSetList.partition_inf1	40
Coq.MSets.MSetList.partition_inf2	40
Coq.MSets.MSetList.partition_ok1	40
Coq.MSets.MSetList.partition_ok2	40
Coq.MSets.MSetList.partition_spec1	40
Coq.MSets.MSetList.partition_spec2	40
Coq.MSets.MSetList.In_compat	40	3.0	search with cache (only 1: intros x x' Hxx' y y' Hyy'; only 1: now rewrite Hxx', Hyy').	0.0185389518738	5
Coq.MSets.MSetList.lt_strorder	40
Coq.MSets.MSetList.lt_compat	40
Coq.MSets.MSetList.compare_spec_aux	40
Coq.MSets.MSetList.compare_spec	40
Coq.MSets.MSetList.eq_leibniz_list	40
Coq.MSets.MSetList.eq_leibniz	40
Coq.Floats.FloatAxioms.Prim2SF_inj	40
Coq.Floats.FloatAxioms.SF2Prim_inj	40
Coq.Floats.FloatLemmas.shift_value	40	10	search with cache (only 1: auto).	0.0277891159058	24
Coq.Floats.FloatLemmas.frexp_spec	40
Coq.Floats.FloatLemmas.ldexp_spec	40
Coq.Relations.Operators_Properties.clos_rt_is_preorder	40
Coq.Relations.Operators_Properties.clos_rt_idempotent	40
Coq.Relations.Operators_Properties.clos_rt_clos_rst	40
Coq.Relations.Operators_Properties.clos_r_clos_rt	40	1.0.0.0	search with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.0111501216888	5
Coq.Relations.Operators_Properties.clos_rt_t	40
Coq.Relations.Operators_Properties.clos_rst_is_equiv	40	2.0.0.1.5.1.2.8	search with cache (only 1: constructor; only 1: auto with sets; only 1: red; only 1: intros; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	1.92722296715	3007
Coq.Relations.Operators_Properties.clos_rst_idempotent	40	0.0.1.0.0.0.2.0	search with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets).	0.173671960831	145
Coq.Relations.Operators_Properties.clos_t1n_trans	40
Coq.Relations.Operators_Properties.clos_trans_t1n	40
Coq.Relations.Operators_Properties.clos_trans_t1n_iff	40
Coq.Relations.Operators_Properties.clos_tn1_trans	40	0.3.1.0.0.0.1	search with cache (only 1: induction 1; only 1: left; only 1: auto; only 1: right with y; only 1: auto; only 1: left; only 1: auto).	0.57225394249	759
Coq.Relations.Operators_Properties.clos_trans_tn1	40
Coq.Relations.Operators_Properties.clos_trans_tn1_iff	40	0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.3.1	search with cache (only 1: split; only 1: induction 1; only 1: left; only 1: auto; only 1: elim IHclos_trans2; only 1: intro y0; only 1: right with y; only 1: auto; only 1: auto; only 1: intros; only 1: right with y0; only 1: auto; only 1: auto; only 1: induction 1; only 1: left; only 1: auto; only 1: right with y; only 1: auto; only 1: left; only 1: assumption).	19.6882431507	33796
Coq.Relations.Operators_Properties.clos_rt1n_step	40	2.0.3.0	search with cache (only 1: intros; only 1: right with y; only 1: auto; only 1: left).	0.0114989280701	9
Coq.Relations.Operators_Properties.clos_rtn1_step	40	5.0.1.3.2	search with cache (only 1: intro y0; only 1: intros; only 1: right with y0; only 1: auto; only 1: left).	0.308216094971	668
Coq.Relations.Operators_Properties.clos_rt1n_rt	40	0.0.2.1.3	search with cache (only 1: induction 1; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	0.0598440170288	96
Coq.Relations.Operators_Properties.clos_rt_rt1n	40
Coq.Relations.Operators_Properties.clos_rt_rt1n_iff	40
Coq.Relations.Operators_Properties.clos_rtn1_rt	40	0.0.2.2.4	search with cache (only 1: induction 1; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	0.185244083405	311
Coq.Relations.Operators_Properties.clos_rt_rtn1	40
Coq.Relations.Operators_Properties.clos_rt_rtn1_iff	40	0.0.0.0.2.4.0.0.0.0.1.0.3.0.0.0.4.1	search with cache (only 1: split; only 1: induction 1; only 1: right with x; only 1: auto; only 1: left; only 1: left; only 1: elim IHclos_refl_trans2; only 1: auto; only 1: intros; only 1: right with y0; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: auto; only 1: constructor 1; only 1: assumption).	29.1034538746	47915
Coq.Relations.Operators_Properties.clos_refl_trans_ind_left	40
Coq.Relations.Operators_Properties.rt1n_ind_right	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_right	40	0.0.1.0.0.1.0.2.3.1.1.1.0.6.7.0	search with cache (only 1: intros; only 1: induction H1; only 1: apply H0 with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply IHclos_refl_trans1; only 1: auto with sets; only 1: intros; only 1: apply H0 with y0; only 1: auto with sets; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	6.42432403564	16413
Coq.Relations.Operators_Properties.clos_rst1n_rst	40
Coq.Relations.Operators_Properties.clos_rst1n_trans	40	0.2.5.5.0	search with cache (only 1: induction 1; only 1: auto with sets; only 1: right with y; only 1: auto; only 1: auto).	0.506594896317	989
Coq.Relations.Operators_Properties.clos_rst1n_sym	40
Coq.Relations.Operators_Properties.clos_rst_rst1n	40
Coq.Relations.Operators_Properties.clos_rst_rst1n_iff	40
Coq.Relations.Operators_Properties.clos_rstn1_rst	40	1.2.3.3.3.0.2.3	search with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 4 with y; only 1: auto; only 1: case H; only 1: auto with sets; only 1: constructor 3; only 1: auto with sets).	29.4653921127	31178
Coq.Relations.Operators_Properties.clos_rstn1_trans	40
Coq.Relations.Operators_Properties.clos_rstn1_sym	40
Coq.Relations.Operators_Properties.clos_rst_rstn1	40
Coq.Relations.Operators_Properties.clos_rst_rstn1_iff	40
Coq.Relations.Operators_Properties.clos_trans_transp_permute	40	0.1.1.0.0.8.0.1.0.3.0.8.0	search with cache (only 1: split; only 1: induction 1; only 1: left; only 1: auto with sets; only 1: right with y; only 1: auto; only 1: auto; only 1: induction 1; only 1: left; only 1: auto with sets; only 1: right with y; only 1: auto; only 1: auto).	21.4427390099	44083
Coq.Relations.Relations.inverse_image_of_equivalence	40
Coq.Relations.Relations.inverse_image_of_eq	40	1.2.0.1.2.0.1.0.0.0	search with cache (only 1: intros; only 1: split; only 1: red; only 1: reflexivity; only 1: red; only 1: destruct 1; only 1: trivial; only 1: red; only 1: destruct 1; only 1: trivial).	0.76881980896	1434
Coq.Sets.Uniset.leb_refl	40	0	search with cache (only 1: destr_bool).	0.00685119628906	1
Coq.Sets.Uniset.incl_left	40	2.6.7.13	search with cache (only 1: intros; only 1: intro z; only 1: destruct (H z); only 1: auto).	0.357983112335	1231
Coq.Sets.Uniset.incl_right	40	1.0.0.0	search with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.0119109153748	5
Coq.Sets.Uniset.seq_refl	40	4	search with cache (only 1: auto).	0.00641918182373	5
Coq.Sets.Uniset.seq_trans	40	0.1.2.15.0.0	search with cache (only 1: destruct x; only 1: unfold seq; only 1: intro z; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	1.56297492981	3544
Coq.Sets.Uniset.seq_sym	40	0.0.1.1.0.0	search with cache (only 1: destruct x; only 1: unfold seq; only 1: destruct y; only 1: simpl; only 1: intros; only 1: auto).	0.0178611278534	8
Coq.Sets.Uniset.union_empty_left	40	1.0.0	search with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).	0.0109169483185	4
Coq.Sets.Uniset.union_empty_right	40	2.0.0.11.0.0.0.0.2	search with cache (only 1: destruct x; only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: intros; only 1: destruct b; only 1: auto; only 1: simpl; only 1: auto).	4.26837897301	11812
Coq.Sets.Uniset.union_comm	40	27.0.0.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: intuition).	22.1741840839	65563
Coq.Sets.Uniset.union_ass	40	0.0.0.1.0.0.0	search with cache (only 1: unfold seq; only 1: unfold charac; only 1: unfold union; only 1: simpl; only 1: destruct x; only 1: destruct y; only 1: auto with bool).	0.0356020927429	19
Coq.Sets.Uniset.seq_left	40	0.0.3.1.0.1.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct x; only 1: intros; only 1: rewrite H; only 1: auto).	1.26872992516	965
Coq.Sets.Uniset.seq_right	40	1.0.2.0.0.1.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto).	0.682389974594	419
Coq.Sets.Uniset.union_rotate	40
Coq.Sets.Uniset.seq_congr	40
Coq.Sets.Uniset.union_perm_left	40
Coq.Sets.Uniset.uniset_twist1	40
Coq.Sets.Uniset.uniset_twist2	40
Coq.Sets.Uniset.treesort_twist1	40
Coq.Sets.Uniset.treesort_twist2	40
Coq.Sets.Multiset.meq_refl	40	0.26	search with cache (only 1: intros m Hm; only 1: trivial).	0.208947181702	452
Coq.Sets.Multiset.meq_trans	40
Coq.Sets.Multiset.meq_sym	40	0.1.1.0.0	search with cache (only 1: destruct x; only 1: unfold meq; only 1: destruct y; only 1: intros; only 1: auto).	0.0283720493317	7
Coq.Sets.Multiset.munion_empty_left	40	1.1.0.0	search with cache (only 1: destruct x; only 1: unfold meq; only 1: intros; only 1: auto).	0.0241529941559	6
Coq.Sets.Multiset.munion_empty_right	40	4.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).	0.0389740467072	16
Coq.Sets.Multiset.munion_comm	40
Coq.Sets.Multiset.munion_ass	40	0.0.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: destruct x; only 1: destruct y; only 1: auto with arith).	0.031968832016	6
Coq.Sets.Multiset.meq_left	40	1.1.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct z; only 1: destruct y; only 1: auto with arith).	0.0339751243591	8
Coq.Sets.Multiset.meq_right	40	0.0.1.1.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct z; only 1: destruct y; only 1: intros; only 1: elim H; only 1: auto with arith).	0.0411942005157	10
Coq.Sets.Multiset.munion_rotate	40
Coq.Sets.Multiset.meq_congr	40	0.0.1.1.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct z; only 1: destruct y; only 1: intros; only 1: elim H; only 1: auto with arith).	0.043753862381	10
Coq.Sets.Multiset.munion_perm_left	40
Coq.Sets.Multiset.multiset_twist1	40
Coq.Sets.Multiset.multiset_twist2	40
Coq.Sets.Multiset.treesort_twist1	40
Coq.Sets.Multiset.treesort_twist2	40
Coq.Sets.Multiset.meq_singleton	40
Coq.Sets.Integers.le_reflexive	40	4.0	search with cache (only 1: intro n'; only 1: auto with sets).	0.0140948295593	6
Coq.Sets.Integers.le_antisym	40	4.2	search with cache (only 1: red; only 1: auto with arith).	0.0753920078278	75
Coq.Sets.Integers.le_trans	40	0.0.5.3.11	search with cache (only 1: intro E; only 1: intros x y H H'; only 1: elim H'; only 1: auto; only 1: auto).	8.92540001869	13045
Coq.Sets.Integers.le_Order	40	0.0.1.0.0.0.0.0.0.3.0.0.3.0.347	search with cache (only 1: split; only 1: red; only 1: intros; only 1: auto; only 1: red; only 1: intros; only 1: apply PeanoNat.Nat.le_trans with y; only 1: auto; only 1: auto; only 1: red; only 1: intros x y H H'; only 1: rewrite (PeanoNat.Nat.le_antisymm x y); only 1: auto; only 1: auto; only 1: auto).	24.2063798904	180231
Coq.Sets.Integers.triv_nat	40	56	search with cache (only 1: split).	0.503285169601	3199
Coq.Sets.Integers.nat_po	40
Coq.Sets.Integers.le_total_order	40
Coq.Sets.Integers.Finite_subset_has_lub	40
Coq.Sets.Integers.Integers_has_no_ub	40
Coq.Sets.Integers.Integers_infinite	40
Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	10.1.4.4.24	search with cache (only 1: intro x; only 1: red; only 1: red; only 1: unfold not; only 1: auto).	0.955554962158	5655
Coq.Sets.Relations_1_facts.Equiv_from_preorder	40
Coq.Sets.Relations_1_facts.Equiv_from_order	40	3.1.0.1.0	search with cache (only 1: intros U R H'; only 1: elim H'; only 1: intros H'0 H'1; only 1: red in H'1; only 1: auto  10 with sets).	0.140576124191	62
Coq.Sets.Relations_1_facts.contains_is_preorder	40	11.31	search with cache (only 1: intros; only 1: auto  10 with sets).	0.39245891571	2195
Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40
Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	1.6.3.8.0	search with cache (only 1: unfold same_relation at 1; only 1: intro h; only 1: intros U R H'; only 1: elim H'; only 1: auto  10 with sets).	3.96795606613	10734
Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.0.0	search with cache (only 1: unfold Symmetric, Complement; only 1: unfold same_relation at 1; only 1: intuition).	0.012787103653	3
Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	0.1	search with cache (only 1: unfold same_relation at 1; only 1: intuition).	0.0242819786072	27
Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40
Coq.Sets.Relations_2_facts.Rstar_reflexive	40	0	search with cache (only 1: intuition).	0.00611805915833	1
Coq.Sets.Relations_2_facts.Rplus_contains_R	40	0	search with cache (only 1: intuition).	0.00585198402405	1
Coq.Sets.Relations_2_facts.Rstar_contains_R	40
Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40
Coq.Sets.Relations_2_facts.Rstar_transitive	40	0.0.0.10.0.0.5.2.2	search with cache (only 1: intro T; only 1: intros U R; only 1: intros x y H'; only 1: elim H'; only 1: auto with sets; only 1: intros; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).	5.81150698662	17673
Coq.Sets.Relations_2_facts.Rstar_cases	40
Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40
Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40
Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40
Coq.Sets.Relations_2_facts.star_monotone	40	0.0.2.3.0.0.1.2	search with cache (only 1: unfold contains; only 1: intros U R S H' x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).	2.00705218315	3559
Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40
Coq.Sets.Relations_2_facts.Lemma1	40
Coq.Sets.Permut.cong_congr	40
Coq.Sets.Permut.comm_right	40	4.2.0	search with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).	0.0379028320312	56
Coq.Sets.Permut.comm_left	40	3.2.0	search with cache (only 1: intros; only 1: apply cong_left; only 1: apply op_comm).	0.0311839580536	38
Coq.Sets.Permut.perm_right	40
Coq.Sets.Permut.perm_left	40
Coq.Sets.Permut.op_rotate	40
Coq.Sets.Permut.twist	40
Coq.Sets.Image.Im_def	40
Coq.Sets.Image.Im_add	40
Coq.Sets.Image.image_empty	40	3.0.1.0.0.0.0.0.5	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: destruct 1; only 1: red; only 1: destruct 1).	0.647468090057	516
Coq.Sets.Image.finite_image	40
Coq.Sets.Image.Im_inv	40	1.0.2.6.2	search with cache (only 1: intros H'6 H'7; only 1: destruct 1; only 1: exists x; only 1: rewrite H0; only 1: auto using Im_def with sets).	0.624711036682	645
Coq.Sets.Image.not_injective_elim	40
Coq.Sets.Image.cardinal_Im_intro	40
Coq.Sets.Image.In_Image_elim	40
Coq.Sets.Image.injective_preserves_cardinal	40
Coq.Sets.Image.cardinal_decreases	40
Coq.Sets.Image.Pigeonhole	40
Coq.Sets.Image.Pigeonhole_principle	40
Coq.Sets.Infinite_sets.make_new_approximant	40
Coq.Sets.Infinite_sets.approximants_grow	40
Coq.Sets.Infinite_sets.approximants_grow'	40
Coq.Sets.Infinite_sets.approximant_can_be_any_size	40
Coq.Sets.Infinite_sets.Image_set_continuous	40
Coq.Sets.Infinite_sets.Image_set_continuous'	40
Coq.Sets.Infinite_sets.Pigeonhole_bis	40
Coq.Sets.Infinite_sets.Pigeonhole_ter	40
Coq.Sets.Powerset.Empty_set_minimal	40	20.5.4	search with cache (only 1: red; only 1: intros; only 1: elim H).	1.11311197281	5800
Coq.Sets.Powerset.Power_set_Inhabited	40	1.2.2.0.8.76.61	search with cache (only 1: intro x; only 1: exists x; only 1: split; only 1: red; only 1: intros H'7 H'8; only 1: red; only 1: tauto).	9.08823013306	123066
Coq.Sets.Powerset.Inclusion_is_an_order	40	32	search with cache (only 1: auto  10 with sets).	0.923604011536	542
Coq.Sets.Powerset.Inclusion_is_transitive	40	0	search with cache (only 1: auto  6 with sets).	0.00701498985291	1
Coq.Sets.Powerset.Power_set_PO	40
Coq.Sets.Powerset.Strict_Rel_is_Strict_Included	40	1	search with cache (only 1: auto with sets).	0.00780391693115	2
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion_left	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive	40	0.3.0.0.0.0.0.1.3	search with cache (only 1: intros x y z H' H'0; only 1: elim Strict_Rel_is_Strict_Included; only 1: unfold contains; only 1: intros H'1 H'2; only 1: apply H'1; only 1: apply Strict_Rel_Transitive_with_Rel with (y := y); only 1: auto with sets; only 1: apply H'1; only 1: auto with sets).	31.8269500732	2009
Coq.Sets.Powerset.Empty_set_is_Bottom	40
Coq.Sets.Powerset.Union_minimal	40
Coq.Sets.Powerset.Intersection_maximal	40	0	search with cache (only 1: auto with sets).	0.00859808921814	1
Coq.Sets.Powerset.Union_increases_l	40	3.0.1	search with cache (only 1: red; only 1: intros x H'1; only 1: auto with sets).	0.0109300613403	7
Coq.Sets.Powerset.Union_increases_r	40	0	search with cache (only 1: auto with sets).	0.00748610496521	1
Coq.Sets.Powerset.Intersection_decreases_l	40	0.0.0.1.3.4	search with cache (only 1: elim Inclusion_is_an_order; only 1: intros a b X H' H'0; only 1: red; only 1: intros x H'1; only 1: elim H'1; only 1: auto with sets).	2.14291381836	407
Coq.Sets.Powerset.Intersection_decreases_r	40	0.1.0.0.0	search with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.0132699012756	6
Coq.Sets.Powerset.Union_is_Lub	40
Coq.Sets.Powerset.Intersection_is_Glb	40
Coq.Sets.Classical_sets.not_included_empty_Inhabited	40	1.0.0.0.6.5.0.1.4.1	search with cache (only 1: intros P notall; only 1: apply NNPP; only 1: intro abs; only 1: apply notall; only 1: intros n H; only 1: apply NNPP; only 1: intro all; only 1: apply abs; only 1: exists n; only 1: exact H).	6.32160997391	16019
Coq.Sets.Classical_sets.not_empty_Inhabited	40
Coq.Sets.Classical_sets.Inhabited_Setminus	40
Coq.Sets.Classical_sets.Strict_super_set_contains_new_element	40
Coq.Sets.Classical_sets.Subtract_intro	40	0.0.6.0	search with cache (only 1: intros; only 1: apply Setminus_intro; only 1: auto with sets; only 1: auto with sets).	0.0362191200256	19
Coq.Sets.Classical_sets.Subtract_inv	40	0.16.5.5	search with cache (only 1: intros x H; only 1: intro; only 1: simple destruct 1; only 1: auto with sets).	14.8200750351	25545
Coq.Sets.Classical_sets.Included_Strict_Included	40
Coq.Sets.Classical_sets.Strict_Included_inv	40
Coq.Sets.Classical_sets.not_SIncl_empty	40	1.1.0.10	search with cache (only 1: intros x H'; only 1: red in H'; only 1: elim H'; only 1: auto with sets).	0.394172906876	538
Coq.Sets.Classical_sets.Complement_Complement	40
Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40
Coq.Sets.Relations_3_facts.coherent_symmetric	40
Coq.Sets.Relations_3_facts.Strong_confluence	40
Coq.Sets.Relations_3_facts.Strong_confluence_direct	40
Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40
Coq.Sets.Relations_3_facts.Newman	40
Coq.Sets.Powerset_Classical_facts.sincl_add_x	40
Coq.Sets.Powerset_Classical_facts.incl_soustr_in	40	0.1.0.1.3.3	search with cache (only 1: intros A NI; only 1: intro H'0; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.844160795212	703
Coq.Sets.Powerset_Classical_facts.incl_soustr	40	0.1.0.0.1	search with cache (only 1: intros A x y H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	0.283967971802	109
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_l	40	3.0.8.10.1.7	search with cache (only 1: intros A x y H'; only 1: elim H'; only 1: intro H'0; only 1: elim H'0; only 1: auto with sets; only 1: tauto).	30.9564919472	48863
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_r	40
Coq.Sets.Powerset_Classical_facts.add_soustr_2	40
Coq.Sets.Powerset_Classical_facts.add_soustr_1	40	1.0.4.1.1.0.0.0.0.0	search with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros H'1 H'2; only 1: elim H'2; only 1: auto with sets; only 1: intros H'1 H'2; only 1: elim H'2; only 1: auto with sets).	3.28368496895	3657
Coq.Sets.Powerset_Classical_facts.add_soustr_xy	40
Coq.Sets.Powerset_Classical_facts.incl_st_add_soustr	40
Coq.Sets.Powerset_Classical_facts.Sub_Add_new	40
Coq.Sets.Powerset_Classical_facts.Simplify_add	40
Coq.Sets.Powerset_Classical_facts.Included_Add	40
Coq.Sets.Powerset_Classical_facts.setcover_inv	40
Coq.Sets.Powerset_Classical_facts.Add_covers	40
Coq.Sets.Powerset_Classical_facts.covers_Add	40
Coq.Sets.Powerset_Classical_facts.covers_is_Add	40
Coq.Sets.Powerset_Classical_facts.Singleton_atomic	40
Coq.Sets.Powerset_Classical_facts.less_than_singleton	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel_left	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive	40
Coq.Sets.Powerset_facts.Empty_set_zero	40	42	search with cache (only 1: auto  6 with sets).	1.64338803291	3785
Coq.Sets.Powerset_facts.Empty_set_zero_right	40	0	search with cache (only 1: auto  6 with sets).	0.0103511810303	1
Coq.Sets.Powerset_facts.Empty_set_zero'	40	0.7	search with cache (only 1: unfold Add at 1; only 1: auto  6 with sets).	0.0291800498962	25
Coq.Sets.Powerset_facts.less_than_empty	40	0	search with cache (only 1: auto with sets).	0.00911712646484	1
Coq.Sets.Powerset_facts.Union_commutative	40	0	search with cache (only 1: auto  6 with sets).	0.0112950801849	1
Coq.Sets.Powerset_facts.Union_associative	40	61	search with cache (only 1: auto  10 with sets).	33.3007190228	36061
Coq.Sets.Powerset_facts.Union_idempotent	40	0	search with cache (only 1: auto  6 with sets).	0.0125298500061	1
Coq.Sets.Powerset_facts.Union_absorbs	40	0	search with cache (only 1: auto  7 with sets).	0.0157980918884	1
Coq.Sets.Powerset_facts.Couple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_Couple	40	0.0.0.0.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.889544010162	845
Coq.Sets.Powerset_facts.Triple_as_Couple_Singleton	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	9.20954203606	7872
Coq.Sets.Powerset_facts.Intersection_commutative	40	0.0.0.5.0.0.0.5.4.19.4	search with cache (only 1: intros y H'1; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	28.8835589886	39666
Coq.Sets.Powerset_facts.Distributivity	40
Coq.Sets.Powerset_facts.Distributivity_l	40
Coq.Sets.Powerset_facts.Distributivity'	40
Coq.Sets.Powerset_facts.Union_add	40	9.1.1	search with cache (only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).	1.41837906837	1120
Coq.Sets.Powerset_facts.Non_disjoint_union	40	0.0.0.0.0.0.0.1.0.0.2.1	search with cache (only 1: unfold Add; only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: red; only 1: auto with sets).	1.3575129509	1116
Coq.Sets.Powerset_facts.Non_disjoint_union'	40
Coq.Sets.Powerset_facts.singlx	40	1.0.0.0.0.2.1	search with cache (only 1: unfold Add at 1; only 1: intros x y H'; only 1: elim H'; only 1: intros x1 H'0; only 1: elim H'0; only 1: intros x1 H'0; only 1: auto with sets).	0.19842505455	92
Coq.Sets.Powerset_facts.incl_add	40	0.0	search with cache (only 1: unfold Add; only 1: auto with sets).	0.0620820522308	2
Coq.Sets.Powerset_facts.incl_add_x	40
Coq.Sets.Powerset_facts.Add_commutative	40	8.0	search with cache (only 1: unfold Add; only 1: auto  9 with sets).	0.184353113174	48
Coq.Sets.Powerset_facts.Add_commutative'	40
Coq.Sets.Powerset_facts.Add_distributes	40
Coq.Sets.Powerset_facts.setcover_intro	40	0	search with cache (only 1: auto with sets).	0.0113639831543	1
Coq.Sets.Powerset_facts.Disjoint_Intersection	40
Coq.Sets.Powerset_facts.Intersection_Empty_set_l	40	1.1.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intuition; only 1: intuition).	0.0220501422882	7
Coq.Sets.Powerset_facts.Intersection_Empty_set_r	40	0.0	search with cache (only 1: intros; only 1: auto with sets).	0.0189590454102	2
Coq.Sets.Powerset_facts.Seminus_Empty_set_l	40	2.0.0.1.0.0.0.5	search with cache (only 1: intros X H'; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets).	1.54123401642	1744
Coq.Sets.Powerset_facts.Seminus_Empty_set_r	40	0.0.0.0.1.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).	0.0337390899658	9
Coq.Sets.Powerset_facts.Setminus_Union_l	40
Coq.Sets.Powerset_facts.Setminus_Union_r	40
Coq.Sets.Powerset_facts.Setminus_Disjoint_noop	40
Coq.Sets.Powerset_facts.Setminus_Included_empty	40	3.0.3.5.0.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: contradict H1; only 1: intuition; only 1: intuition).	3.36747503281	3707
Coq.Sets.Constructive_sets.Extension	40	1.7.1.7.4.0.8	search with cache (only 1: intros; only 1: destruct H; only 1: repeat split; only 1: intros Hfst Hsnd; only 1: trivial; only 1: intros Hfst Hsnd; only 1: trivial).	1.15061402321	7393
Coq.Sets.Constructive_sets.Noone_in_empty	40	16.6.5	search with cache (only 1: intros; only 1: intro H; only 1: destruct H).	0.692312955856	4255
Coq.Sets.Constructive_sets.Included_Empty	40	1.0.1	search with cache (only 1: red; only 1: red; only 1: destruct 1).	0.0107519626617	20
Coq.Sets.Constructive_sets.Add_intro1	40	0.13.3	search with cache (only 1: intros B C H'; only 1: left; only 1: auto with sets).	0.798667192459	2852
Coq.Sets.Constructive_sets.Add_intro2	40	0.0	search with cache (only 1: unfold Add at 1; only 1: auto with sets).	0.00664186477661	2
Coq.Sets.Constructive_sets.Inhabited_add	40	0.29.8.3.0	search with cache (only 1: unfold Add at 1; only 1: intro; only 1: intro; only 1: exists x; only 1: auto with sets).	1.97119998932	16519
Coq.Sets.Constructive_sets.Inhabited_not_empty	40
Coq.Sets.Constructive_sets.Add_not_Empty	40	0.17.4.9.0.2	search with cache (only 1: red; only 1: intro H'1; only 1: intros x H; only 1: elim (Noone_in_empty x); only 1: destruct H; only 1: auto using Add_intro2 with sets).	15.8285448551	89219
Coq.Sets.Constructive_sets.not_Empty_Add	40	0.2.4.1.2.0	search with cache (only 1: intros A x; only 1: red; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).	0.461410999298	733
Coq.Sets.Constructive_sets.Singleton_inv	40	2.4	search with cache (only 1: destruct 1; only 1: auto with sets).	0.0237650871277	31
Coq.Sets.Constructive_sets.Singleton_intro	40	1.5	search with cache (only 1: destruct 1; only 1: auto with sets).	0.035707950592	46
Coq.Sets.Constructive_sets.Union_inv	40	0.0.6	search with cache (only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).	0.0270938873291	26
Coq.Sets.Constructive_sets.Add_inv	40	0.15.0.0.1.0	search with cache (only 1: unfold Add at 1; only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets; only 1: destruct 1; only 1: auto with sets).	36.3039038181	36379
Coq.Sets.Constructive_sets.Intersection_inv	40	0.0.0	search with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets).	0.0110750198364	3
Coq.Sets.Constructive_sets.Couple_inv	40	0.0.3.5	search with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).	0.503373146057	628
Coq.Sets.Constructive_sets.Setminus_intro	40	0.0	search with cache (only 1: intros x H'0; only 1: auto with sets).	0.00923991203308	2
Coq.Sets.Constructive_sets.Strict_Included_intro	40	0.0.0	search with cache (only 1: intro; only 1: intros x H'0; only 1: auto with sets).	0.0103549957275	3
Coq.Sets.Constructive_sets.Strict_Included_strict	40	1.1.6.5	search with cache (only 1: intros X H'; only 1: elim H'; only 1: intros x H'0; only 1: auto with sets).	0.361603975296	1043
Coq.Sets.Finite_sets_facts.finite_cardinal	40
Coq.Sets.Finite_sets_facts.cardinal_finite	40	2.0.11.7.10	search with cache (only 1: intros X x; only 1: intro H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets).	2.62874293327	6824
Coq.Sets.Finite_sets_facts.Add_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Singleton_is_finite	40	1.33.63	search with cache (only 1: intro x; only 1: rewrite <- (Empty_set_zero' U x); only 1: auto with sets).	2.61525797844	20320
Coq.Sets.Finite_sets_facts.Union_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_downward_closed	40
Coq.Sets.Finite_sets_facts.Intersection_preserves_finite	40
Coq.Sets.Finite_sets_facts.cardinalO_empty	40
Coq.Sets.Finite_sets_facts.inh_card_gt_O	40
Coq.Sets.Finite_sets_facts.card_soustr_1	40
Coq.Sets.Finite_sets_facts.cardinal_is_functional	40
Coq.Sets.Finite_sets_facts.cardinal_Empty	40
Coq.Sets.Finite_sets_facts.cardinal_unicity	40
Coq.Sets.Finite_sets_facts.card_Add_gen	40
Coq.Sets.Finite_sets_facts.incl_st_card_lt	40
Coq.Sets.Finite_sets_facts.incl_card_le	40
Coq.Sets.Finite_sets_facts.G_aux	40
Coq.Sets.Finite_sets_facts.Generalized_induction_on_finite_sets	40
Coq.Sets.Finite_sets.cardinal_invert	40
Coq.Sets.Finite_sets.cardinal_elim	40	4.4.0	search with cache (only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.0490460395813	73