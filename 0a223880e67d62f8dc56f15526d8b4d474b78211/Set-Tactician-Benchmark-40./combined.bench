
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rplus_morph_Proper	40	14.36	synth with cache (only 1: intros x y H; only 1: simpl_relation).	5.23473906517	4912
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rtimes_morph_Proper	40	8.19.18	synth with cache (only 1: intros Q H H'; only 1: intros EQ EQ'; only 1: firstorder).	4.14267802238	4535
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.ropp_morph_Proper	40	5	synth with cache (only 1: firstorder).	0.0529599189758	13
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rle_morph_Proper	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rlt_morph_Proper	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rminus_morph_Proper	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rneq_symm	40	10.1.27	synth with cache (only 1: intros l1 l2; only 1: intros H0; only 1: intuition).	1.65653800964	1862
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_l	40	60	synth with cache (only 1: firstorder).	1.65023517609	3626
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_r	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0268709659576	2
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_r	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0280930995941	2
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_comm	40	0.1.8	synth with cache (only 1: intro; only 1: intro; only 1: ring).	0.0732748508453	36
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_l	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0281641483307	2
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_comm	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0294411182404	2
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rminus_eq_0	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_cancel_l	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_em	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_dne	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_eq	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_trans	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_trans	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_le_trans	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_gt_cases	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_neq	40	0.0.0.0	synth with cache (only 1: intros n m; only 1: intro H; only 1: rewrite Rlt_le_neq in H; only 1: now destruct H).	0.0385320186615	4
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_ngt	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_nge	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_l	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_r	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_l	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_r	40	0.0.0.3.1.0	synth with cache (only 1: intros n m p; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm n p); only 1: do 2 rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).	0.160888910294	29
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_le_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_lt_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_pos	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_pos	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_le_minus	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_minus	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_lt_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_pos_neg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_nonneg_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_pos_neg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neg_neg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_square_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neq_0	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_neg_pos	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_0_1	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_succ_r	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_succ	40
Coq.micromega.Ztac.eq_incl	40	0.0.1	synth with cache (only 1: intros x y; only 1: intro EQ; only 1: now rewrite EQ).	0.0368981361389	4
Coq.micromega.Ztac.elim_concl_eq	40	2.11	synth with cache (only 1: intros a n; only 1: intuition Z.order).	0.24426984787	282
Coq.micromega.Ztac.elim_concl_le	40	4.0	synth with cache (only 1: intros x y H; only 1: now apply Z.ge_le).	0.0224409103394	6
Coq.micromega.Ztac.elim_concl_lt	40	3.0	synth with cache (only 1: intros; only 1: now apply Z.nle_gt).	0.0830340385437	35
Coq.micromega.Ztac.Zlt_le_add_1	40	6.1	synth with cache (only 1: intros n m; only 1: apply Z.le_succ_l).	0.0917220115662	26
Coq.micromega.Ztac.add_le	40	3.0	synth with cache (only 1: intros n m H1 H2; only 1: now apply Z.add_nonneg_nonneg).	0.0236530303955	5
Coq.micromega.Ztac.mul_le	40	0.0.4.0	synth with cache (only 1: intros n m H1 H2; only 1: apply Z.mul_nonneg_nonneg; only 1: trivial; only 1: trivial).	0.0353348255157	8
Coq.micromega.ZifyInst.PropAnd	40	0.1.21	synth with cache (only 1: split; only 1: intros; only 1: intuition).	0.146307945251	286
Coq.micromega.ZifyInst.PropOr	40	4.0.4.48	synth with cache (only 1: split; only 1: induction 1; only 1: intros x; only 1: intuition).	1.00920796394	1967
Coq.micromega.ZifyInst.PropArrow	40	0.27	synth with cache (only 1: split; only 1: tauto).	0.808437108994	390
Coq.micromega.ZifyInst.PropIff	40	0.0	synth with cache (only 1: constructor; only 1: tauto).	0.0585269927979	2
Coq.micromega.ZifyInst.PropNot	40	0.0.0.3	synth with cache (only 1: constructor; only 1: intros; only 1: apply imp_iff_compat_r; only 1: tauto).	0.0333650112152	7
Coq.micromega.ZifyInst.of_nat_to_nat_eq	40	1.1.0.3.1	synth with cache (only 1: intros n; only 1: destruct n; only 1: trivial; only 1: now rewrite <- Z_N_nat, <- nat_N_Z, N2Nat.id, Z2N.id; only 1: trivial).	0.219172954559	64
Coq.micromega.ZifyInst.z_max_spec	40
Coq.micromega.ZifyInst.z_min_spec	40	7.1	synth with cache (only 1: intros n m; only 1: Z.solve_min).	0.223458051682	32
Coq.micromega.ZCoeff.InitialMorphism.req_refl	40
Coq.micromega.ZCoeff.InitialMorphism.req_sym	40
Coq.micromega.ZCoeff.InitialMorphism.req_trans	40
Coq.micromega.ZCoeff.InitialMorphism.rplus_morph_Proper	40	0	synth with cache (only 1: exact (SORplus_wd sor)).	0.0155129432678	1
Coq.micromega.ZCoeff.InitialMorphism.rtimes_morph_Proper	40	0	synth with cache (only 1: exact (SORtimes_wd sor)).	0.016163110733	1
Coq.micromega.ZCoeff.InitialMorphism.ropp_morph_Proper	40	0	synth with cache (only 1: exact (SORopp_wd sor)).	0.0156209468842	1
Coq.micromega.ZCoeff.InitialMorphism.rle_morph_Proper	40	0	synth with cache (only 1: exact (SORle_wd sor)).	0.0165998935699	1
Coq.micromega.ZCoeff.InitialMorphism.rlt_morph_Proper	40	0	synth with cache (only 1: exact (SORlt_wd sor)).	0.0170741081238	1
Coq.micromega.ZCoeff.InitialMorphism.rminus_morph_Proper	40	0.0.0.0.0	synth with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	0.0552618503571	5
Coq.micromega.ZCoeff.InitialMorphism.ring_ops_wd	40
Coq.micromega.ZCoeff.InitialMorphism.Zring_morph	40
Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_pos	40
Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_succ	40
Coq.micromega.ZCoeff.InitialMorphism.clt_pos_morph	40
Coq.micromega.ZCoeff.InitialMorphism.clt_morph	40
Coq.micromega.ZCoeff.InitialMorphism.Zcleb_morph	40
Coq.micromega.ZCoeff.InitialMorphism.Zcneqb_morph	40
Coq.micromega.Fourier_util.Rlt_mult_inv_pos	40	0.0.0.1.4	synth with cache (only 1: intros a b Ha Hb; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: apply Rinv_0_lt_compat; only 1: assumption).	0.950500965118	213
Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	40
Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	3.1.0	synth with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: auto with real).	0.171188831329	22
Coq.micromega.Fourier_util.Rle_mult_inv_pos	40	0.1.0.0	synth with cache (only 1: intros x y H H0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: ring).	0.149096012115	5
Coq.micromega.ZifyClasses.mkapp2	40
Coq.micromega.ZifyClasses.mkapp	40
Coq.micromega.ZifyClasses.mkapp0	40
Coq.micromega.ZifyClasses.mkrel	40
Coq.micromega.ZMicromega.eq_le_iff	40	0.0.0.3.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros; only 1: now subst; only 1: destruct 1; only 1: Z.order').	0.04678606987	17
Coq.micromega.ZMicromega.lt_le_iff	40	0.0	synth with cache (only 1: intros a; only 1: apply Z.lt_le_pred).	0.0119600296021	2
Coq.micromega.ZMicromega.le_0_iff	40	0.1.7.7	synth with cache (only 1: intros a b; only 1: split; only 1: apply Z.le_0_sub; only 1: apply Z.le_0_sub).	0.979679107666	1001
Coq.micromega.ZMicromega.le_neg	40	3.7.2.3.2.6.0.1.0	synth with cache (only 1: intro n; only 1: split; only 1: destruct n as [| p| p]; only 1: Z.order; only 1: simpl; only 1: now destruct 1; only 1: easy; only 1: intros; only 1: now destruct n).	13.2026491165	12568
Coq.micromega.ZMicromega.eq_cnf	40
Coq.micromega.ZMicromega.Zsor	40
Coq.micromega.ZMicromega.ZSORaddon	40
Coq.micromega.ZMicromega.ZNpower	40
Coq.micromega.ZMicromega.Zeval_expr_compat	40
Coq.micromega.ZMicromega.Zeval_formula_compat'	40
Coq.micromega.ZMicromega.Zeval_nformula_dec	40
Coq.micromega.ZMicromega.ZWeakChecker_sound	40
Coq.micromega.ZMicromega.eval_pol_sub	40
Coq.micromega.ZMicromega.eval_pol_add	40
Coq.micromega.ZMicromega.eval_pol_mul	40
Coq.micromega.ZMicromega.eval_pol_norm	40
Coq.micromega.ZMicromega.Zunsat_sound	40
Coq.micromega.ZMicromega.xnnormalise_correct	40
Coq.micromega.ZMicromega.eval_pol_Pc	40	1.0	synth with cache (only 1: intros; only 1: trivial).	0.0153260231018	3
Coq.micromega.ZMicromega.xnormalise_correct	40
Coq.micromega.ZMicromega.cnf_of_list_correct	40
Coq.micromega.ZMicromega.normalise_correct	40
Coq.micromega.ZMicromega.xnegate_correct	40
Coq.micromega.ZMicromega.negate_correct	40
Coq.micromega.ZMicromega.Zdivide_ceiling	40
Coq.micromega.ZMicromega.narrow_interval_lower_bound	40
Coq.micromega.ZMicromega.isZ0_0	40	0.0.0.0.0.0.17.2	synth with cache (only 1: intros; only 1: destruct x; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split).	5.209649086	2911
Coq.micromega.ZMicromega.isZ0_n0	40	2.3.0.0.14.8	synth with cache (only 1: intros n; only 1: destruct n; only 1: simpl; only 1: easy'; only 1: easy'; only 1: easy').	30.5001821518	16631
Coq.micromega.ZMicromega.Zdiv_pol_correct	40
Coq.micromega.ZMicromega.Zgcd_pol_ge	40
Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	40
Coq.micromega.ZMicromega.Zdivide_pol_one	40
Coq.micromega.ZMicromega.Zgcd_minus	40
Coq.micromega.ZMicromega.Zdivide_pol_sub	40
Coq.micromega.ZMicromega.Zdivide_pol_sub_0	40
Coq.micromega.ZMicromega.Zgcd_pol_div	40
Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	40
Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40
Coq.micromega.ZMicromega.pos_le_add	40
Coq.micromega.ZMicromega.max_var_le	40
Coq.micromega.ZMicromega.max_var_correct	40
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux	40
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux'	40
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_correct_aux	40
Coq.micromega.ZMicromega.max_var_nformalae_correct	40
Coq.micromega.ZMicromega.in_bdepth	40
Coq.micromega.ZMicromega.eval_Psatz_sound	40
Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40
Coq.micromega.ZMicromega.cutting_plane_sound	40
Coq.micromega.ZMicromega.genCuttingPlaneNone	40
Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40
Coq.micromega.ZMicromega.eval_nformula_bound_var	40	3.0.18	synth with cache (only 1: intros Az RS; only 1: rewrite xnnormalise_correct; only 1: easy || now destruct y).	3.30775785446	1552
Coq.micromega.ZMicromega.agree_env_subset	40
Coq.micromega.ZMicromega.agree_env_jump	40
Coq.micromega.ZMicromega.agree_env_tail	40
Coq.micromega.ZMicromega.max_var_acc	40
Coq.micromega.ZMicromega.agree_env_eval_nformula	40
Coq.micromega.ZMicromega.agree_env_eval_nformulae	40
Coq.micromega.ZMicromega.eq_true_iff_eq	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0344591140747	5
Coq.micromega.ZMicromega.ZChecker_sound	40
Coq.micromega.ZMicromega.ZTautoChecker_sound	40
Coq.micromega.ZifyBool.Z_of_bool_bound	40
Coq.micromega.ZifyBool.Z_eqb_isZero	40
Coq.micromega.ZifyBool.Z_leb_sub	40
Coq.micromega.ZifyBool.Z_ltb_leb	40
Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	40
Coq.micromega.ZifyBool.Z_eqb_ZSpec_ok	40
Coq.micromega.ZifyBool.leZeroSpec_ok	40
Coq.micromega.Env.S.jump_add	40
Coq.micromega.Env.S.jump_simpl	40
Coq.micromega.Env.S.jump_tl	40
Coq.micromega.Env.S.jump_succ	40	4.2	synth with cache (only 1: rewrite <- ?jump_add; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	0.0836298465729	39
Coq.micromega.Env.S.jump_pred_double	40
Coq.micromega.Env.S.nth_spec	40
Coq.micromega.Env.S.nth_jump	40	2.3	synth with cache (only 1: unfold jump; only 1: now destruct p).	0.0535299777985	24
Coq.micromega.Env.S.nth_pred_double	40
Coq.micromega.Tauto.S.eval_f_morph	40
Coq.micromega.Tauto.map_simpl	40	0.0.0.4.1	synth with cache (only 1: destr_bool; only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: auto).	0.0317430496216	19
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_X_inv	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_same	40	3	synth with cache (only 1: destr_bool).	0.00931596755981	4
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_cnf_ff	40	1	synth with cache (only 1: reflexivity).	0.0081250667572	2
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_cnf_ff	40	0	synth with cache (only 1: reflexivity).	0.00702500343323	1
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_inv	40	1.1.0.9.97	synth with cache (only 1: intro n; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: congruence).	23.9619050026	68933
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_inv	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_cnf_tt	40	1.0.1.0.26	synth with cache (only 1: intros [| n]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: congruence).	0.990811109543	1975
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_and_pol	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_or_pol	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_l	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff_r	40	1.1.0.0.0.0.6.0.3	synth with cache (only 1: unfold or_cnf_opt; only 1: intros; only 1: rewrite orb_comm; only 1: rewrite is_cnf_tt_cnf_ff; only 1: simpl; only 1: destruct (is_cnf_tt f) eqn:EQ; only 1: apply is_cnf_tt_inv in EQ; only 1: auto; only 1: reflexivity).	1.94974088669	1744
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_r	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_form_correct	40
Coq.micromega.Tauto.S.radd_term_term	40
Coq.micromega.Tauto.S.radd_term_term'	40
Coq.micromega.Tauto.S.xror_clause_clause	40
Coq.micromega.Tauto.S.ror_clause_clause	40
Coq.micromega.Tauto.S.ror_cnf_cnf	40
Coq.micromega.Tauto.S.ror_opt_cnf_cnf	40
Coq.micromega.Tauto.S.ratom_cnf	40
Coq.micromega.Tauto.S.rxcnf_xcnf	40
Coq.micromega.Tauto.S.eval_cnf_app	40
Coq.micromega.Tauto.S.eval_cnf_ff	40	0.1.0.2.5.1.6.9.0	synth with cache (only 1: unfold eval_cnf; only 1: clear; only 1: split; only 1: intros; only 1: apply H; only 1: simpl; only 1: reflexivity; only 1: intros; only 1: tauto).	5.18942213058	5625
Coq.micromega.Tauto.S.eval_cnf_tt	40	0.0.0	synth with cache (only 1: unfold cnf_ff, eval_cnf, eval_clause; only 1: simpl; only 1: tauto).	0.0242459774017	3
Coq.micromega.Tauto.S.eval_cnf_and_opt	40
Coq.micromega.Tauto.S.add_term_correct	40
Coq.micromega.Tauto.S.no_middle_eval_tt	40	51	synth with cache (only 1: eauto with arith).	1.72729206085	2472
Coq.micromega.Tauto.S.or_clause_correct	40
Coq.micromega.Tauto.S.or_clause_cnf_correct	40
Coq.micromega.Tauto.S.eval_cnf_cons	40	1.0.0.0.0.0.1.0.2.1.2	synth with cache (only 1: unfold eval_cnf; only 1: intros; only 1: unfold eval_clause; only 1: generalize nil as acc; only 1: induction f; only 1: simpl; only 1: intros; only 1: tauto; only 1: intros; only 1: simpl; only 1: tauto).	5.71715903282	1800
Coq.micromega.Tauto.S.eval_cnf_cons_iff	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: tauto).	0.0933570861816	5
Coq.micromega.Tauto.S.or_cnf_correct	40
Coq.micromega.Tauto.S.or_cnf_opt_correct	40
Coq.micromega.Tauto.S.xcnf_correct	40
Coq.micromega.Tauto.S.cnf_checker_sound	40
Coq.micromega.Tauto.S.tauto_checker_sound	40
Coq.micromega.Tauto.S.eval_bf_map	40
Coq.micromega.ZifyComparison.Z_of_comparison_bound	40	4.28.1.1.1	synth with cache (only 1: intro n; only 1: intuition; only 1: now destruct n; only 1: intros Hb; only 1: now destruct n).	11.3163280487	12504
Coq.micromega.ZifyComparison.Zcompare_spec	40
Coq.micromega.EnvRing.MakeRingPol.radd_ext_Proper	40	55.16	synth with cache (only 1: intros H1 m H2 H3; only 1: firstorder).	12.163916111	17354
Coq.micromega.EnvRing.MakeRingPol.rmul_ext_Proper	40	36.2	synth with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: firstorder).	4.04358100891	2970
Coq.micromega.EnvRing.MakeRingPol.ropp_ext_Proper	40	2	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0138709545135	3
Coq.micromega.EnvRing.MakeRingPol.rsub_ext_Proper	40	3.3	synth with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	0.0419161319733	8
Coq.micromega.EnvRing.MakeRingPol.Peq_ok	40
Coq.micromega.EnvRing.MakeRingPol.Peq_spec	40
Coq.micromega.EnvRing.MakeRingPol.Pphi0	40	58	synth with cache (only 1: firstorder).	3.95733213425	3864
Coq.micromega.EnvRing.MakeRingPol.Pphi1	40	84.0	synth with cache (only 1: simpl; only 1: simpl_relation).	5.39416313171	8581
Coq.micromega.EnvRing.MakeRingPol.env_morph	40
Coq.micromega.EnvRing.MakeRingPol.Pjump_add	40
Coq.micromega.EnvRing.MakeRingPol.Pjump_xO_tail	40
Coq.micromega.EnvRing.MakeRingPol.Pjump_pred_double	40
Coq.micromega.EnvRing.MakeRingPol.mkPinj_ok	40
Coq.micromega.EnvRing.MakeRingPol.pow_pos_add	40
Coq.micromega.EnvRing.MakeRingPol.ceqb_spec	40
Coq.micromega.EnvRing.MakeRingPol.mkPX_ok	40
Coq.micromega.EnvRing.MakeRingPol.PaddC_ok	40
Coq.micromega.EnvRing.MakeRingPol.PsubC_ok	40	0.2.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	10.4658851624	1470
Coq.micromega.EnvRing.MakeRingPol.PmulC_aux_ok	40
Coq.micromega.EnvRing.MakeRingPol.PmulC_ok	40
Coq.micromega.EnvRing.MakeRingPol.Popp_ok	40	0.3.0.0.0.0.0.0.1.0.0.1	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP1, IHP2; only 1: rsimpl).	16.3109469414	2398
Coq.micromega.EnvRing.MakeRingPol.PaddX_ok	40
Coq.micromega.EnvRing.MakeRingPol.Padd_ok	40
Coq.micromega.EnvRing.MakeRingPol.PsubX_ok	40
Coq.micromega.EnvRing.MakeRingPol.Psub_ok	40
Coq.micromega.EnvRing.MakeRingPol.PmulI_ok	40
Coq.micromega.EnvRing.MakeRingPol.Pmul_ok	40
Coq.micromega.EnvRing.MakeRingPol.Psquare_ok	40
Coq.micromega.EnvRing.MakeRingPol.Mphi_morph	40
Coq.micromega.EnvRing.MakeRingPol.Mjump_xO_tail	40
Coq.micromega.EnvRing.MakeRingPol.Mjump_pred_double	40	0.1.0.0	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: now jump_simpl).	0.0855798721313	5
Coq.micromega.EnvRing.MakeRingPol.Mjump_add	40	0.0.0.0.1	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.102576971054	6
Coq.micromega.EnvRing.MakeRingPol.mkZmon_ok	40	3.3.6.13	synth with cache (only 1: induction M; only 1: rsimpl; only 1: now jump_simpl; only 1: now jump_simpl).	3.13611316681	1048
Coq.micromega.EnvRing.MakeRingPol.zmon_pred_ok	40
Coq.micromega.EnvRing.MakeRingPol.mkVmon_ok	40
Coq.micromega.EnvRing.MakeRingPol.Mphi_ok	40
Coq.micromega.EnvRing.MakeRingPol.POneSubst_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubst1_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubst_ok	40
Coq.micromega.EnvRing.MakeRingPol.PSubstL1_ok	40
Coq.micromega.EnvRing.MakeRingPol.PSubstL_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubstL_ok	40
Coq.micromega.EnvRing.MakeRingPol.mkX_ok	40
Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_pos_ok	40
Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_N_ok	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40
Coq.micromega.RingMicromega.Micromega.rplus_morph_Proper	40	0	synth with cache (only 1: exact (SORplus_wd sor)).	0.01868891716	1
Coq.micromega.RingMicromega.Micromega.rtimes_morph_Proper	40	1	synth with cache (only 1: exact (SORtimes_wd sor)).	0.0222578048706	2
Coq.micromega.RingMicromega.Micromega.ropp_morph_Proper	40	2	synth with cache (only 1: exact (SORopp_wd sor)).	0.0256419181824	3
Coq.micromega.RingMicromega.Micromega.rle_morph_Proper	40	2	synth with cache (only 1: exact (SORle_wd sor)).	0.0237419605255	3
Coq.micromega.RingMicromega.Micromega.rlt_morph_Proper	40	3	synth with cache (only 1: exact (SORlt_wd sor)).	0.0260751247406	4
Coq.micromega.RingMicromega.Micromega.rminus_morph_Proper	40	0.0.0.0.4	synth with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	0.0676410198212	9
Coq.micromega.RingMicromega.Micromega.cleb_sound	40
Coq.micromega.RingMicromega.Micromega.cneqb_sound	40
Coq.micromega.RingMicromega.Micromega.cltb_sound	40
Coq.micromega.RingMicromega.Micromega.OpMult_sound	40
Coq.micromega.RingMicromega.Micromega.OpAdd_sound	40
Coq.micromega.RingMicromega.Micromega.pexpr_times_nformula_correct	40
Coq.micromega.RingMicromega.Micromega.nformula_times_nformula_correct	40
Coq.micromega.RingMicromega.Micromega.nformula_plus_nformula_correct	40
Coq.micromega.RingMicromega.Micromega.eval_Psatz_Sound	40
Coq.micromega.RingMicromega.Micromega.ge_bool_cases	40
Coq.micromega.RingMicromega.Micromega.extract_hyps_app	40
Coq.micromega.RingMicromega.Micromega.nhyps_of_psatz_correct	40
Coq.micromega.RingMicromega.Micromega.check_inconsistent_sound	40
Coq.micromega.RingMicromega.Micromega.checker_nf_sound	40
Coq.micromega.RingMicromega.Micromega.eval_pol_sub	40
Coq.micromega.RingMicromega.Micromega.eval_pol_add	40	27.5.9	synth with cache (only 1: intros x y H; only 1: rewrite (Padd_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: now try discriminate).	27.2792069912	4333
Coq.micromega.RingMicromega.Micromega.eval_pol_mul	40	19.3.5.7	synth with cache (only 1: intros x y H; only 1: unfold eval_pol; only 1: rewrite (Pmul_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: now try discriminate).	3.73487114906	3280
Coq.micromega.RingMicromega.Micromega.eval_pol_opp	40
Coq.micromega.RingMicromega.Micromega.eval_pol_norm	40
Coq.micromega.RingMicromega.Micromega.normalise_sound	40
Coq.micromega.RingMicromega.Micromega.negate_correct	40
Coq.micromega.RingMicromega.Micromega.cnf_of_list_correct	40
Coq.micromega.RingMicromega.Micromega.eq0_cnf	40
Coq.micromega.RingMicromega.Micromega.xnormalise_correct	40
Coq.micromega.RingMicromega.Micromega.xnegate_correct	40
Coq.micromega.RingMicromega.Micromega.cnf_normalise_correct	40
Coq.micromega.RingMicromega.Micromega.cnf_negate_correct	40
Coq.micromega.RingMicromega.Micromega.eval_nformula_dec	40
Coq.micromega.RingMicromega.Micromega.xdenorm_correct	40
Coq.micromega.RingMicromega.Micromega.denorm_correct	40
Coq.micromega.RingMicromega.Micromega.eval_pexprSC	40
Coq.micromega.RingMicromega.Micromega.eval_formulaSC	40
Coq.micromega.Refl.make_impl_true	40	0.1.1.2	synth with cache (only 1: induction l; only 1: constructor; only 1: simpl; only 1: firstorder).	0.0283977985382	8
Coq.micromega.Refl.make_impl_map	40	7.1.8.1	synth with cache (only 1: induction l; only 1: intuition; only 1: intro; only 1: firstorder).	5.15550398827	3149
Coq.micromega.Refl.make_conj_cons	40	10.4.4.9	synth with cache (only 1: intro n; only 1: simpl; only 1: intros a r; only 1: now induction l).	27.2728669643	30452
Coq.micromega.Refl.make_conj_impl	40
Coq.micromega.Refl.make_conj_in	40	2.0.2.1.8.1.0.0.0.0.0	synth with cache (only 1: induction l; only 1: induction 1; only 1: firstorder; only 1: simpl; only 1: destruct l; only 1: firstorder; only 1: simpl in *; only 1: now subst; only 1: firstorder; only 1: subst; only 1: firstorder).	29.1280269623	23839
Coq.micromega.Refl.make_conj_app	40
Coq.micromega.Refl.make_conj_rapp	40
Coq.micromega.Refl.not_make_conj_cons	40	0.0.1	synth with cache (only 1: intros a b c H H'; only 1: rewrite make_conj_cons; only 1: intuition).	0.104694128036	4
Coq.micromega.Refl.not_make_conj_app	40
Coq.micromega.QMicromega.Qsor	40
Coq.micromega.QMicromega.QSORaddon	40
Coq.micromega.QMicromega.Qeval_expr_simpl	40
Coq.micromega.QMicromega.QNpower	40	0.0.0	synth with cache (only 1: intros r [| n]; only 1: reflexivity; only 1: reflexivity).	0.0325789451599	3
Coq.micromega.QMicromega.Qeval_expr_compat	40
Coq.micromega.QMicromega.Qeval_formula_compat	40
Coq.micromega.QMicromega.Qeval_nformula_dec	40
Coq.micromega.QMicromega.QWeakChecker_sound	40
Coq.micromega.QMicromega.QTautoChecker_sound	40
Coq.micromega.RMicromega.Rsrt	40	0	synth with cache (only 1: exact RTheory).	0.0268189907074	1
Coq.micromega.RMicromega.Rsor	40
Coq.micromega.RMicromega.Rinv_1	40	1.2.14.0	synth with cache (only 1: intro; only 1: elim archimed with x; only 1: intros H1 _; only 1: field).	3.59682703018	1840
Coq.micromega.RMicromega.Qeq_true	40
Coq.micromega.RMicromega.Qeq_false	40
Coq.micromega.RMicromega.Qle_true	40
Coq.micromega.RMicromega.Q2R_0	40
Coq.micromega.RMicromega.Q2R_1	40
Coq.micromega.RMicromega.Q2R_inv_ext	40
Coq.micromega.RMicromega.QSORaddon	40
Coq.micromega.RMicromega.is_neg_true	40
Coq.micromega.RMicromega.is_neg_false	40
Coq.micromega.RMicromega.Q2R_m_Proper	40
Coq.micromega.RMicromega.Q2R_pow_pos	40
Coq.micromega.RMicromega.Q2R_pow_N	40
Coq.micromega.RMicromega.Qmult_integral	40	0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qmult; only 1: simpl; only 1: now rewrite <- Z.mul_eq_0, !Z.mul_1_r).	0.0627429485321	4
Coq.micromega.RMicromega.Qpower_positive_eq_zero	40
Coq.micromega.RMicromega.Qpower_positive_zero	40
Coq.micromega.RMicromega.Q2RpowerRZ	40
Coq.micromega.RMicromega.Qpower0	40
Coq.micromega.RMicromega.Q_of_RcstR	40
Coq.micromega.RMicromega.Reval_formula_compat	40
Coq.micromega.RMicromega.Reval_nformula_dec	40
Coq.micromega.RMicromega.RWeakChecker_sound	40
Coq.micromega.RMicromega.RTautoChecker_sound	40
Coq.rtauto.Bintree.Gt_Psucc	40
Coq.rtauto.Bintree.Psucc_Gt	40	0.0.0.2.2.1.0.2.2.1	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: Pos.simpl_compare; only 1: now rewrite IHp; only 1: rewrite <- Pos.compare_succ_succ; only 1: simpl; only 1: Pos.simpl_compare; only 1: now rewrite IHp; only 1: simpl; only 1: trivial).	3.23821306229	2211
Coq.rtauto.Bintree.map_app	40	0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).	0.0568161010742	7
Coq.rtauto.Bintree.length_map	40	0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0403959751129	5
Coq.rtauto.Bintree.Lget_map	40
Coq.rtauto.Bintree.Lget_app	40
Coq.rtauto.Bintree.Lget_app_Some	40
Coq.rtauto.Bintree.Store.Tget_Tempty	40	1	synth with cache (only 1: now intros []).	0.0184390544891	2
Coq.rtauto.Bintree.Store.Tget_Tadd	40
Coq.rtauto.Bintree.Store.get_empty	40	0.0.2.0.1.0.0	synth with cache (only 1: destruct i; only 1: reflexivity; only 1: destruct i; only 1: reflexivity; only 1: reflexivity || congruence; only 1: reflexivity; only 1: reflexivity).	0.0496830940247	10
Coq.rtauto.Bintree.Store.get_Full_Gt	40
Coq.rtauto.Bintree.Store.get_Full_Eq	40
Coq.rtauto.Bintree.Store.get_push_Full	40
Coq.rtauto.Bintree.Store.Full_push_compat	40
Coq.rtauto.Bintree.Store.Full_index_one_empty	40
Coq.rtauto.Bintree.Store.push_not_empty	40	3.6.9.4.4	synth with cache (only 1: unfold get, push, index; only 1: inversion 1; only 1: destr_eq H; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: auto).	13.2189807892	16881
Coq.rtauto.Bintree.Store.get_In	40
Coq.rtauto.Bintree.Map.Tget_Tmap	40
Coq.rtauto.Bintree.Map.Tmap_Tadd	40
Coq.rtauto.Bintree.Map.get_map	40
Coq.rtauto.Bintree.Map.map_push	40
Coq.rtauto.Bintree.Map.Full_map	40
Coq.rtauto.Rtauto.pos_eq_refl	40
Coq.rtauto.Rtauto.form_eq_refl	40
Coq.rtauto.Rtauto.with_env.compose0	40
Coq.rtauto.Rtauto.with_env.compose1	40
Coq.rtauto.Rtauto.with_env.compose2	40
Coq.rtauto.Rtauto.with_env.compose3	40
Coq.rtauto.Rtauto.with_env.weaken	40
Coq.rtauto.Rtauto.with_env.project_In	40
Coq.rtauto.Rtauto.with_env.project	40
Coq.rtauto.Rtauto.with_env.interp_proof	40
Coq.rtauto.Rtauto.with_env.Reflect	40
Coq.nsatz.Nsatz.nsatz1.psos_r1b	40
Coq.nsatz.Nsatz.nsatz1.psos_r1	40	1.0.1.0.1.0	synth with cache (only 1: intros x y H; only 1: assert (0 == - (0 : R)); only 1: cring; only 1: rewrite ring_sub_def; only 1: rewrite <- H; only 1: cring).	0.230343818665	9
Coq.nsatz.Nsatz.nsatz1.nsatzR_diff	40
Coq.nsatz.Nsatz.nsatz1.P0Z_correct	40	1.0	synth with cache (only 1: intro; only 1: trivial).	0.0416059494019	3
Coq.nsatz.Nsatz.nsatz1.Rext	40
Coq.nsatz.Nsatz.nsatz1.Rset	40	1.1.1.0	synth with cache (only 1: constructor; only 1: apply ring_setoid; only 1: apply ring_setoid; only 1: apply ring_setoid).	0.0751981735229	7
Coq.nsatz.Nsatz.nsatz1.Rtheory	40
Coq.nsatz.Nsatz.nsatz1.PolZadd_correct	40
Coq.nsatz.Nsatz.nsatz1.PolZmul_correct	40
Coq.nsatz.Nsatz.nsatz1.R_power_theory	40
Coq.nsatz.Nsatz.nsatz1.norm_correct	40
Coq.nsatz.Nsatz.nsatz1.PolZeq_correct	40
Coq.nsatz.Nsatz.nsatz1.mult_l_correct	40
Coq.nsatz.Nsatz.nsatz1.compute_list_correct	40
Coq.nsatz.Nsatz.nsatz1.check_correct	40
Coq.nsatz.Nsatz.Rsth	40	1.0.0.0.0.3	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: unfold Transitive; only 1: apply eq_trans).	0.131209850311	11
Coq.nsatz.Nsatz.Rri	40
Coq.nsatz.Nsatz.R_one_zero	40	0	synth with cache (only 1: exact R1_neq_R0).	0.0423579216003	1
Coq.nsatz.Nsatz.Rcri	40	0.25.1.2.10	synth with cache (only 1: cut (exp_in 0 (exp 0)); only 1: intros H2; only 1: red; only 1: apply Rmult_comm; only 1: exact (proj2_sig (exist_exp 0))).	30.7794518471	9978
Coq.nsatz.Nsatz.Rdi	40
Coq.nsatz.Nsatz.Qri	40
Coq.nsatz.Nsatz.Q_one_zero	40	2	synth with cache (only 1: discriminate).	0.0451080799103	3
Coq.nsatz.Nsatz.Qcri	40
Coq.nsatz.Nsatz.Qdi	40
Coq.nsatz.Nsatz.Z_one_zero	40	0.2	synth with cache (only 1: intro EQ; only 1: discriminate).	0.0768480300903	4
Coq.nsatz.Nsatz.Zcri	40	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).	0.0538828372955	2
Coq.nsatz.Nsatz.Zdi	40
Coq.omega.OmegaLemmas.Zred_factor0	40	0	synth with cache (only 1: now Z.nzsimpl).	0.0645041465759	1
Coq.omega.OmegaLemmas.Zred_factor1	40	3.2.0	synth with cache (only 1: change 2 with (1 + 1); only 1: rewrite Z.mul_comm; only 1: apply Z.add_diag).	0.0345590114594	11
Coq.omega.OmegaLemmas.Zred_factor2	40
Coq.omega.OmegaLemmas.Zred_factor3	40	3	synth with cache (only 1: now Z.nzsimpl).	0.38446187973	26
Coq.omega.OmegaLemmas.Zred_factor4	40
Coq.omega.OmegaLemmas.Zred_factor5	40	0	synth with cache (only 1: now Z.nzsimpl).	0.0660688877106	1
Coq.omega.OmegaLemmas.Zred_factor6	40	0	synth with cache (only 1: now destruct n).	0.0176978111267	1
Coq.omega.OmegaLemmas.new_var	40	0.4.2	synth with cache (only 1: intros; only 1: exists x; only 1: reflexivity).	0.0274820327759	9
Coq.omega.OmegaLemmas.OMEGA1	40	1.0	synth with cache (only 1: intros; only 1: Z.order).	0.0261590480804	3
Coq.omega.OmegaLemmas.OMEGA2	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0522210597992	4
Coq.omega.OmegaLemmas.OMEGA3	40
Coq.omega.OmegaLemmas.OMEGA4	40
Coq.omega.OmegaLemmas.OMEGA5	40	12.13	synth with cache (only 1: intros n m; only 1: now subst).	9.48722195625	2978
Coq.omega.OmegaLemmas.OMEGA6	40	4.42.4.5	synth with cache (only 1: intro; only 1: intros EQ; only 1: Tactics.program_simpl; only 1: now Z.nzsimpl).	17.183465004	8059
Coq.omega.OmegaLemmas.OMEGA7	40
Coq.omega.OmegaLemmas.OMEGA8	40
Coq.omega.OmegaLemmas.OMEGA9	40
Coq.omega.OmegaLemmas.OMEGA10	40
Coq.omega.OmegaLemmas.OMEGA11	40	2.0.0	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: now Z.nzsimpl).	0.38561797142	5
Coq.omega.OmegaLemmas.OMEGA12	40	0.0.33.34.0.64	synth with cache (only 1: Z.bitwise; only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: f_equal; only 1: Z.le_elim Hm; only 1: apply Z.add_shuffle3; only 1: apply Z.add_shuffle3).	38.967083931	44260
Coq.omega.OmegaLemmas.OMEGA13	40
Coq.omega.OmegaLemmas.OMEGA14	40	0.1.0.0.0.0.0.0.0	synth with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l, <- Pos2Z.opp_neg, Z.add_opp_diag_r; only 1: now Z.nzsimpl).	0.150475978851	13
Coq.omega.OmegaLemmas.OMEGA15	40
Coq.omega.OmegaLemmas.OMEGA16	40	3.3	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: now Z.nzsimpl).	0.0858728885651	8
Coq.omega.OmegaLemmas.OMEGA17	40	0.0	synth with cache (only 1: intros H ->; only 1: now Z.nzsimpl).	0.0933799743652	2
Coq.omega.OmegaLemmas.OMEGA18	40	33	synth with cache (only 1: easy || now destruct y).	6.55890512466	3723
Coq.omega.OmegaLemmas.OMEGA19	40
Coq.omega.OmegaLemmas.OMEGA20	40	0.0.0.0	synth with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now Z.nzsimpl).	0.0802059173584	4
Coq.omega.OmegaLemmas.intro_Z	40
Coq.omega.PreOmega.Z.mod_0_r_ext	40
Coq.omega.PreOmega.Z.div_0_r_ext	40
Coq.omega.PreOmega.Z.rem_0_r_ext	40	2.0.3.2.1.24.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: subst; only 1: destruct x; only 1: now Z.nzsimpl; only 1: trivial; only 1: split).	2.82201099396	3237
Coq.omega.PreOmega.Z.quot_0_r_ext	40	0.0.1.1.0.0	synth with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: now Z.nzsimpl; only 1: reflexivity; only 1: reflexivity).	0.0600090026855	8
Coq.omega.PreOmega.Z.rem_bound_pos_pos	40
Coq.omega.PreOmega.Z.rem_bound_neg_pos	40
Coq.omega.PreOmega.Z.rem_bound_pos_neg	40
Coq.omega.PreOmega.Z.rem_bound_neg_neg	40
Coq.btauto.Algebra.Decidable_sound	40	0.0.0	synth with cache (only 1: intros P H Hp; only 1: apply -> Decidable_spec; only 1: assumption).	0.0624279975891	3
Coq.btauto.Algebra.Decidable_complete	40	0.0.0	synth with cache (only 1: intros P H Hp; only 1: apply <- Decidable_spec; only 1: assumption).	0.0600798130035	3
Coq.btauto.Algebra.Decidable_sound_alt	40	0.0.0.0.0	synth with cache (only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).	0.0587701797485	5
Coq.btauto.Algebra.Decidable_complete_alt	40	0.0.0	synth with cache (only 1: intros P [wit spec] Hd Hc; only 1: simpl in *; only 1: intuition congruence).	0.044497013092	3
Coq.btauto.Algebra.Computational.Decidable_PosEq_obligation_1	40	0.1.0.0.4	synth with cache (only 1: split; only 1: apply Pos.eqb_eq; only 1: revert q; only 1: intro n; only 1: apply Pos.eqb_eq).	0.633214950562	145
Coq.btauto.Algebra.Computational.Decidable_PosLt_obligation_1	40	18.0	synth with cache (only 1: unfold Pos.ltb, Pos.lt; only 1: now case Pos.compare).	3.41688299179	2237
Coq.btauto.Algebra.Computational.Decidable_PosLe_obligation_1	40	8.13.0.6	synth with cache (only 1: revert q; only 1: unfold Pos.leb, Pos.le; only 1: intro m; only 1: now case Pos.compare).	18.1719801426	7974
Coq.btauto.Algebra.Computational.Decidable_eq_poly_obligation_1	40
Coq.btauto.Algebra.Computational.Decidable_null_obligation_3	40	5.0.0.0.22.29.5	synth with cache (only 1: split; only 1: destruct p; only 1: destruct b; only 1: easy; only 1: easy; only 1: first [ intuition congruence | auto ]; only 1: now destruct 1).	22.9447340965	26309
Coq.btauto.Algebra.Computational.Decidable_valid_obligation_1	40
Coq.btauto.Algebra.Validity.valid_le_compat	40	5.0.2.6.4.0.0.10.0	synth with cache (only 1: intros x y z; only 1: destruct 1; only 1: intro E; only 1: trivial; only 1: constructor; only 1: Pos.Private_Tac.order; only 1: now f_equal; only 1: intuition; only 1: intuition).	16.1241059303	16714
Coq.btauto.Algebra.Validity.linear_le_compat	40	0.1.0.6.6.0.3.2	synth with cache (only 1: intros x y H; only 1: simple destruct 1; only 1: trivial; only 1: right; only 1: Pos.Private_Tac.order; only 1: eauto; only 1: trivial; only 1: intuition).	4.70439696312	4336
Coq.btauto.Algebra.Validity.linear_valid_incl	40
Coq.btauto.Algebra.Evaluation.eval_null_zero	40	27	synth with cache (only 1: easy').	2.26902890205	2552
Coq.btauto.Algebra.Evaluation.eval_extensional_eq_compat	40	3.6.6.0.4.3	synth with cache (only 1: intros; only 1: induction p; only 1: simpl in *; only 1: trivial; only 1: simpl; only 1: first [ intuition congruence | auto ]).	3.39021801949	3512
Coq.btauto.Algebra.Evaluation.eval_suffix_compat	40
Coq.btauto.Algebra.Algebra.poly_add_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_cst_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_mon_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_compat	40
Coq.btauto.Algebra.Algebra.poly_add_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_cst_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_mon_null_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_mon_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_add_linear_compat	40
Coq.btauto.Algebra.Reduce.reduce_aux_eval_compat	40
Coq.btauto.Algebra.Reduce.reduce_eval_compat	40
Coq.btauto.Algebra.Reduce.reduce_aux_le_compat	40
Coq.btauto.Algebra.Reduce.linear_reduce_aux	40
Coq.btauto.Algebra.Reduce.linear_reduce	40
Coq.btauto.Reflect.Translation.poly_of_formula_eval_compat	40
Coq.btauto.Reflect.Translation.poly_of_formula_valid_compat	40
Coq.btauto.Reflect.Translation.poly_of_formula_sound	40
Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound	40
Coq.btauto.Reflect.Completeness.list_nth_base	40	2.1	synth with cache (only 1: intros; only 1: split).	0.0271010398865	5
Coq.btauto.Reflect.Completeness.list_nth_succ	40	0.0.8.16	synth with cache (only 1: intros m Hm; only 1: intros; only 1: unfold list_nth; only 1: now rewrite Pos.peano_rect_succ).	9.01239395142	9033
Coq.btauto.Reflect.Completeness.list_nth_nil	40
Coq.btauto.Reflect.Completeness.make_last_nth_1	40
Coq.btauto.Reflect.Completeness.make_last_nth_2	40
Coq.btauto.Reflect.Completeness.list_replace_nth_1	40
Coq.btauto.Reflect.Completeness.list_replace_nth_2	40
Coq.btauto.Reflect.Completeness.boolean_witness_nonzero	40
Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound_alt	40
Coq.funind.Recdef.le_lt_SS	40	31	synth with cache (only 1: intuition).	1.62066411972	1510
Coq.funind.Recdef.Splus_lt	40
Coq.funind.Recdef.SSplus_lt	40
Coq.funind.Recdef.max	40
Coq.setoid_ring.Rings_Z.Zcri	40	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).	0.0186259746552	2
Coq.setoid_ring.Rings_Z.Z_one_zero	40	6.1	synth with cache (only 1: intro EQ; only 1: Z.order_pos).	0.0344319343567	9
Coq.setoid_ring.Rings_Z.Zdi	40
Coq.setoid_ring.Integral_domain.integral_domain.integral_domain_minus_one_zero	40
Coq.setoid_ring.Integral_domain.integral_domain.pow_not_zero	40
Coq.setoid_ring.Integral_domain.integral_domain.Rintegral_domain_pow	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.cO	40	22	synth with cache (only 1: assumption).	0.148343086243	231
Coq.setoid_ring.Ncring_polynom.MakeRingPol.cI	40	0	synth with cache (only 1: exact ring0).	0.0219588279724	1
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Peq_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi0	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi1	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkPX_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddCl_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_aux_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Popp_ok	40	2.0.1.0.0.0.0.0.1	synth with cache (only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rewrite IHP1; only 1: rsimpl).	19.5689389706	502
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddXPX	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok2	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Padd_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psub_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pmul_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psquare_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkX_ok	40	10.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: Esimpl).	0.955298900604	185
Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_pos_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_N_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.norm_subst_ok	40	1.0.0	synth with cache (only 1: intros; only 1: unfold norm_subst; only 1: apply norm_aux_spec).	1.22451996803	43
Coq.setoid_ring.Ncring_polynom.MakeRingPol.ring_correct	40
Coq.setoid_ring.Ring.BoolTheory	40	0.0.0.0.0.0.0.0.0.9	synth with cache (only 1: split; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: reflexivity; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool).	1.24523591995	472
Coq.setoid_ring.Ring.bool_eq_ok	40	0	synth with cache (only 1: destr_bool).	0.0192329883575	1
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.radd_ext_Proper	40	36.8	synth with cache (only 1: intuition; only 1: firstorder).	5.88646197319	3421
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_ext_Proper	40	1	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0188539028168	2
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_ext_Proper	40	76	synth with cache (only 1: CRelationClasses.simpl_crelation).	38.8597679138	36456
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_ext_Proper	40	3	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0300779342651	4
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_ext_Proper	40	14	synth with cache (only 1: auto).	0.217962026596	96
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ceqb_spec	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEequiv_eq	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEeval_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_l	40	7	synth with cache (only 1: eauto).	0.0771701335907	8
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_simpl	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_reg_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.field_is_integral_domain	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_neq_0	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_r_r	40	27	synth with cache (only 1: eauto).	5.70569610596	1107
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv1	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv5	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv3b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv6	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_nz	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv8	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.cross_product_eq	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_N_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_0	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_1	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_cst	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_l	40	2.2.3.2.3.0	synth with cache (only 1: induction p; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: ring [ IHp ]; only 1: trivial).	26.8736410141	685
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_add_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_nz	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_div	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEadd_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsub_ext	40	0.0.0	synth with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.915219783783	3
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEmul_ext	40	0.0.0	synth with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.908451080322	3
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEopp_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_r	40	5.0.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: trivial).	1.26904201508	9
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_0_r	40	4.0.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: eauto).	1.23785996437	8
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_r	40	5.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).	0.753937005997	8
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_add_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_nz	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.if_true	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_semi_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_spec	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEadd_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEsub_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEopp_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEpow_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEmul_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsimp_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_l	40	0.0.2.0.0.0.0	synth with cache (only 1: destruct l1; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: destruct 1; only 1: trivial).	10.9658110142	20
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_r	40	2.0.0.0.0.0	synth with cache (only 1: rewrite PCond_cons; only 1: destruct l1; only 1: simpl; only 1: destruct 1; only 1: trivial; only 1: now destruct 1).	7.79315185547	12
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_app	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.absurd_PCond_bottom	40	3.1	synth with cache (only 1: intros; only 1: now destruct 1).	4.21649098396	11
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Z_pos_sub_gt	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.default_isIn_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.isIn_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok1	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Pcond_Fnorm	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_FEeval_PEeval	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_crossproduct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_pow_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_aux_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_in_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_in_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_impl.fcons_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons0_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons00_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.ceqb_spec'	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons1_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons2_fcons_inv	40
Coq.setoid_ring.Field_theory.Complete.radd_ext3_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.0240020751953	1
Coq.setoid_ring.Field_theory.Complete.rmul_ext3_Proper	40	1	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0197989940643	2
Coq.setoid_ring.Field_theory.Complete.ropp_ext3_Proper	40	0	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0165519714355	1
Coq.setoid_ring.Field_theory.Complete.AlmostField.add_inj_r	40
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiPOS_inj	40
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_inj	40
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_complete	40
Coq.setoid_ring.Field_theory.Complete.Field.ring_S_inj	40
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiPOS_discr_sgn	40
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_inj	40
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_complete	40
Coq.setoid_ring.Ncring_initial.Zsth	40	6	synth with cache (only 1: intuition).	0.177958965302	35
Coq.setoid_ring.Ncring_initial.Zr	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_gen	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_add	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_mult	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_genZ	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_Zeqb_ok	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ1_add_pos_neg	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.match_compOpp	40	2.0.7.0.0.5	synth with cache (only 1: destruct x; only 1: intros x y H7; only 1: reflexivity; only 1: reflexivity; only 1: intros x y H7; only 1: reflexivity).	2.52401208878	1256
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_add	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_opp	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_mul	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_ext	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_morph	40
Coq.setoid_ring.ArithRing.natSRth	40
Coq.setoid_ring.ArithRing.nat_morph_N	40
Coq.setoid_ring.Rings_R.Rsth	40	1.0.0.0.0.3	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: unfold Transitive; only 1: apply eq_trans).	0.134843826294	11
Coq.setoid_ring.Rings_R.Rri	40
Coq.setoid_ring.Rings_R.Rcri	40	1.14.11.32	synth with cache (only 1: intro H5; only 1: intros; only 1: rewrite Rmult_comm; only 1: let rec norm := gen_rewrite in norm).	8.24814510345	3980
Coq.setoid_ring.Rings_R.R_one_zero	40	0	synth with cache (only 1: exact R1_neq_R0).	0.0377600193024	1
Coq.setoid_ring.Rings_R.Rdi	40
Coq.setoid_ring.RealField.RTheory	40
Coq.setoid_ring.RealField.Rfield	40
Coq.setoid_ring.RealField.Rlt_n_Sn	40
Coq.setoid_ring.RealField.Rlt_0_2	40
Coq.setoid_ring.RealField.Rgen_phiPOS	40
Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	40
Coq.setoid_ring.RealField.Rdef_pow_add	40
Coq.setoid_ring.RealField.R_power_theory	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_swap	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_succ	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_add	40
Coq.setoid_ring.Ring_theory.Power.pow_N_pow_N	40	3	synth with cache (only 1: reflexivity).	0.0198550224304	4
Coq.setoid_ring.Ring_theory.DEFINITIONS.MORPHISM.get_sign_None_th	40	33.4	synth with cache (only 1: firstorder; only 1: inversion H).	11.4765281677	1341
Coq.setoid_ring.Ring_theory.DEFINITIONS.IDmorph	40	65	synth with cache (only 1: firstorder).	1.79034399986	4643
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eqsth	40	4.3.0.29	synth with cache (only 1: split; only 1: congruence; only 1: congruence; only 1: congruence).	1.00433802605	947
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_s_ext	40	0.1.4.3.3.49	synth with cache (only 1: split; only 1: intros x1 x2 H1 x3 x4 H2; only 1: CRelationClasses.simpl_crelation; only 1: intros n n' Hn m m' Hm; only 1: rewrite Hm, Hn; only 1: trivial).	2.15218687057	3154
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_ext	40	0.0.0.18	synth with cache (only 1: constructor 1; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.358088970184	212
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.radd_ext1_Proper	40	14	synth with cache (only 1: firstorder).	1.00215411186	195
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.rmul_ext1_Proper	40	23	synth with cache (only 1: firstorder).	1.23974394798	601
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_ext	40	7.1	synth with cache (only 1: intros a b H; only 1: firstorder).	0.0239238739014	10
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SReqe_Reqe	40	3	synth with cache (only 1: firstorder).	0.0640480518341	20
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_mul_l	40	8.4	synth with cache (only 1: intros n IH; only 1: firstorder).	0.141912937164	122
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_add	40	0	synth with cache (only 1: reflexivity).	0.014554977417	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRsub_def	40	0	synth with cache (only 1: reflexivity).	0.0178627967834	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRIDmorph	40	34	synth with cache (only 1: firstorder).	0.33389210701	588
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRmorph_Rmorph	40	7	synth with cache (only 1: firstorder).	0.0351779460907	8
Coq.setoid_ring.Ring_theory.ALMOST_RING.radd_ext2_Proper	40	8	synth with cache (only 1: firstorder).	0.101650953293	14
Coq.setoid_ring.Ring_theory.ALMOST_RING.rmul_ext2_Proper	40	10	synth with cache (only 1: firstorder).	0.079952955246	25
Coq.setoid_ring.Ring_theory.ALMOST_RING.ropp_ext2_Proper	40	19.10	synth with cache (only 1: intros; only 1: firstorder).	1.48425102234	1779
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Rmul_0_l	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_mul_l	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_add	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_opp	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cadd_ext_Proper	40	16.11.24	synth with cache (only 1: intros H x y Hxy; only 1: intros; only 1: firstorder).	8.93177700043	4193
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cmul_ext_Proper	40	16.11	synth with cache (only 1: intros; only 1: firstorder).	0.914041996002	781
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.copp_ext_Proper	40	11.16	synth with cache (only 1: intros x y H; only 1: firstorder).	1.00276684761	527
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.phi_ext1_Proper	40	13	synth with cache (only 1: auto).	0.081130027771	61
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_opp	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_sub	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARth_SRth	40	35	synth with cache (only 1: firstorder).	0.523242950439	621
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARsub_ext	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_0_r	40	24	synth with cache (only 1: firstorder).	0.137054920197	280
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_1_r	40	0	synth with cache (only 1: mrewrite).	0.0275340080261	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_0_r	40	0	synth with cache (only 1: mrewrite).	0.0287158489227	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARdistr_r	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc1	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc2	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc1	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc2	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_mul_r	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_zero	40
Coq.setoid_ring.InitialRing.Zth	40
Coq.setoid_ring.InitialRing.ZMORPHISM.radd_ext3_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.0206439495087	1
Coq.setoid_ring.InitialRing.ZMORPHISM.rmul_ext3_Proper	40	0	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.020183801651	1
Coq.setoid_ring.InitialRing.ZMORPHISM.ropp_ext3_Proper	40	0	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0213100910187	1
Coq.setoid_ring.InitialRing.ZMORPHISM.get_signZ_th	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.rsub_ext3_Proper	40	0.2	synth with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	0.0478940010071	4
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.same_gen	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_add	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_mult	40
Coq.setoid_ring.InitialRing.ZMORPHISM.rsub_ext4_Proper	40
Coq.setoid_ring.InitialRing.ZMORPHISM.same_genZ	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_Zeqb_ok	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ1_pos_sub	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_add	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_mul	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_ext	40	0.4.0	synth with cache (only 1: intros x y H; only 1: rewrite H; only 1: rrefl).	0.0458159446716	7
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_morph	40
Coq.setoid_ring.InitialRing.Nth	40
Coq.setoid_ring.InitialRing.Neqb_ok	40	0.2.0.0.0.0.0.1	synth with cache (only 1: intros [| ] [| ]; only 1: simpl; only 1: now try N.order'; only 1: now try N.order'; only 1: now try N.order'; only 1: simpl; only 1: rewrite Pos.eqb_eq; only 1: congruence).	0.850647926331	171
Coq.setoid_ring.InitialRing.NMORPHISM.radd_ext4_Proper	40	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0244300365448	1
Coq.setoid_ring.InitialRing.NMORPHISM.rmul_ext4_Proper	40	54.22	synth with cache (only 1: intros H l; only 1: firstorder).	14.2586860657	12219
Coq.setoid_ring.InitialRing.NMORPHISM.same_genN	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_add	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_mult	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_sub	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_morph	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.radd_ext5_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.0200049877167	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.rmul_ext5_Proper	40	0	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0204257965088	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.ropp_ext5_Proper	40	0	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0210881233215	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.rsub_ext7_Proper	40	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0189828872681	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword0_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_cons	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_Nwcons	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction w; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros; only 1: destruct n; only 1: norm; only 1: norm).	0.140665054321	10
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwadd_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwopp_ok	40	1.2.4	synth with cache (only 1: induction x; only 1: norm; only 1: norm).	0.0658330917358	24
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwscal_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwmul_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_morph	40
Coq.setoid_ring.InitialRing.GEN_DIV.radd_ext_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.0234768390656	1
Coq.setoid_ring.InitialRing.GEN_DIV.rmul_ext_Proper	40	1	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0252649784088	2
Coq.setoid_ring.InitialRing.GEN_DIV.ropp_ext_Proper	40	81	synth with cache (only 1: exact (Ropp_ext Reqe)).	13.3933639526	13660
Coq.setoid_ring.InitialRing.GEN_DIV.rsub_ext_Proper	40	2	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0282258987427	3
Coq.setoid_ring.InitialRing.GEN_DIV.triv_div_th	40
Coq.setoid_ring.InitialRing.GEN_DIV.Ztriv_div_th	40
Coq.setoid_ring.InitialRing.GEN_DIV.Ntriv_div_th	40
Coq.setoid_ring.Cring.cring.cring_eq_ext	40
Coq.setoid_ring.Cring.cring.cring_almost_ring_theory	40
Coq.setoid_ring.Cring.cring.cring_morph	40
Coq.setoid_ring.Cring.cring.cring_power_theory	40	1.47	synth with cache (only 1: split; only 1: reflexivity).	7.0727891922	1232
Coq.setoid_ring.Cring.cring.cring_div_theory	40
Coq.setoid_ring.Cring.Zcri	40	52.0.9	synth with cache (only 1: intros a Ha; only 1: apply Ncring_initial.Zsth; only 1: intuition).	13.0120229721	7934
Coq.setoid_ring.Ring_polynom.MakeRingPol.radd_ext_Proper	40	8.8.17	synth with cache (only 1: intros LS' n; only 1: intros; only 1: firstorder).	3.03102993965	2847
Coq.setoid_ring.Ring_polynom.MakeRingPol.rmul_ext_Proper	40	45.9	synth with cache (only 1: intros; only 1: firstorder).	2.85088014603	4216
Coq.setoid_ring.Ring_polynom.MakeRingPol.ropp_ext_Proper	40	50	synth with cache (only 1: CRelationClasses.simpl_crelation).	2.39096689224	3490
Coq.setoid_ring.Ring_polynom.MakeRingPol.rsub_ext_Proper	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pequiv_eq	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_ext	40	2.1.12.3	synth with cache (only 1: unfold Pequiv; only 1: elim ARth; only 1: intros; only 1: solve_proper).	10.6784079075	3493
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pinj_ext	40	18.3	synth with cache (only 1: unfold Pequiv; only 1: solve_proper).	12.2736787796	3325
Coq.setoid_ring.Ring_polynom.MakeRingPol.PX_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.jump_add'	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi0	40	120.6	synth with cache (only 1: simpl; only 1: firstorder).	32.2846148014	36081
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi1	40	116.0	synth with cache (only 1: simpl; only 1: firstorder).	30.8987689018	33769
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.pow_pos_add	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ceqb_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddC_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PsubC_ok	40	0.2.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	10.0868730545	1267
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_aux_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Popp_ok	40	0.3.0.0.0.0.0.3.1.0.0.1	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP1, IHP2; only 1: rsimpl).	28.2192389965	4862
Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Padd_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_opp	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulI_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pmul_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkZmon_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.zmon_pred_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkVmon_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Mcphi_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Mphi_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POneSubst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubstL_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_pos_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_N_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mon_of_pol_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.interp_PElist_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.norm_subst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_correct	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_rec_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmultm1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.r_list_pow_rev	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_pos_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkadd_mult_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_pow_list_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.Pphi_avoid_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.local_mkpow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_pow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_pow_correct	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkmult_pow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkpow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkopp_pow_ok	40	0.0.0.0.1.2.0.0.0.0.0.2	synth with cache (only 1: destruct p; only 1: simpl; only 1: Esimpl; only 1: rewrite !mkmult_pow_ok; only 1: Esimpl; only 1: simpl; only 1: rewrite mkmult_pow_ok; only 1: Esimpl; only 1: change x with (x ^ 1)  at 1; only 1: now rewrite <- pow_pos_add, Pos.add_1_r, Pos.succ_pred_double; only 1: simpl; only 1: now rewrite ?local_mkpow_ok).	28.2187311649	1651
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_correct	40
Coq.setoid_ring.BinList.MakeBinList.jump_tl	40
Coq.setoid_ring.BinList.MakeBinList.jump_succ	40
Coq.setoid_ring.BinList.MakeBinList.jump_add	40
Coq.setoid_ring.BinList.MakeBinList.jump_pred_double	40
Coq.setoid_ring.BinList.MakeBinList.nth_jump	40
Coq.setoid_ring.BinList.MakeBinList.nth_pred_double	40
Coq.setoid_ring.Ncring.Ring.pow_pos_comm	40
Coq.setoid_ring.Ncring.Ring.pow_pos_succ	40
Coq.setoid_ring.Ncring.Ring.pow_pos_add	40
Coq.setoid_ring.Ncring.Ring.pow_N_pow_N	40	0	synth with cache (only 1: reflexivity).	0.0192170143127	1
Coq.setoid_ring.Ncring.Ring.ring_mul_0_l	40
Coq.setoid_ring.Ncring.Ring.ring_mul_0_r	40
Coq.setoid_ring.Ncring.Ring.ring_opp_mul_l	40
Coq.setoid_ring.Ncring.Ring.ring_opp_mul_r	40
Coq.setoid_ring.Ncring.Ring.ring_opp_add	40
Coq.setoid_ring.Ncring.Ring.ring_opp_opp	40
Coq.setoid_ring.Ncring.Ring.ring_sub_ext	40	28	synth with cache (only 1: firstorder).	3.79718589783	2021
Coq.setoid_ring.Ncring.Ring.ring_add_0_r	40	0.0.1.0	synth with cache (only 1: intros x; only 1: rewrite (ring_add_comm x); only 1: rewrite ring_add_0_l; only 1: reflexivity).	0.0633430480957	5
Coq.setoid_ring.Ncring.Ring.ring_add_assoc1	40	1.5.9.2	synth with cache (only 1: intros; only 1: rewrite <- ring_add_assoc; only 1: rewrite (ring_add_comm x); only 1: reflexivity).	2.64701700211	662
Coq.setoid_ring.Ncring.Ring.ring_add_assoc2	40	0.1.0.7.0	synth with cache (only 1: intros; only 1: rewrite (ring_add_comm y); only 1: rewrite <- (ring_add_assoc x); only 1: rewrite (ring_add_comm x); only 1: reflexivity).	0.806241989136	94
Coq.setoid_ring.Ncring.Ring.ring_opp_zero	40
Coq.setoid_ring.Ncring_tac.Zeqb_ok	40	7.2.23	synth with cache (only 1: symmetry; only 1: pose proof (Zeq_bool_eq x y H) as H1; only 1: now Z.nzsimpl).	2.63593292236	1512
Coq.setoid_ring.Ncring_tac.comm	40
Coq.setoid_ring.Rings_Q.Qri	40
Coq.setoid_ring.Rings_Q.Qcri	40	1.0.1.7.1.10	synth with cache (only 1: intro EQ; only 1: intros; only 1: apply Ncring_initial.Zsth; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	9.75822591782	2180
Coq.setoid_ring.Rings_Q.Q_one_zero	40	0	synth with cache (only 1: discriminate).	0.0188510417938	1
Coq.setoid_ring.Rings_Q.Qdi	40
Coq.ssr.ssreflect.master_key	40	0	synth with cache (only 1: tauto).	0.0090639591217	1
Coq.ssr.ssreflect.lock	40
Coq.ssr.ssreflect.not_locked_false_eq_true	40	0.3	synth with cache (only 1: unlock; only 1: discriminate).	0.0323421955109	14
Coq.ssr.ssreflect.unlock	40
Coq.ssr.ssreflect.locked_withE	40
Coq.ssr.ssreflect.unlock_with	40	1	synth with cache (only 1: by case : k ).	0.01100897789	2
Coq.ssr.ssreflect.nary_congruence	40
Coq.ssr.ssreflect.ssr_congr_arrow	40	2.9	synth with cache (only 1: destruct 1; only 1: auto).	0.0797400474548	174
Coq.ssr.ssreflect.ApplyIff.iffLR	40	0	synth with cache (only 1: intuition).	0.0112941265106	1
Coq.ssr.ssreflect.ApplyIff.iffRL	40	0	synth with cache (only 1: by case : eqPQ ).	0.0104348659515	1
Coq.ssr.ssreflect.ApplyIff.iffLRn	40	2	synth with cache (only 1: intuition).	0.0217199325562	3
Coq.ssr.ssreflect.ApplyIff.iffRLn	40	0	synth with cache (only 1: by move  =>nP tQ; case : nP ; case : eqPQ tQ ).	0.0118079185486	1
Coq.ssr.ssreflect.abstract_context	40	1.124.77	synth with cache (only 1: intro H; only 1: apply H; only 1: split).	9.06505084038	115544
Coq.ssr.ssrbool.prop_congr	40	0	synth with cache (only 1: Bool.destr_bool).	0.013062953949	1
Coq.ssr.ssrbool.is_true_true	40	15	synth with cache (only 1: reflexivity).	0.0215101242065	91
Coq.ssr.ssrbool.not_false_is_true	40	0	synth with cache (only 1: discriminate).	0.00785207748413	1
Coq.ssr.ssrbool.is_true_locked_true	40	0.0	synth with cache (only 1: unlock; only 1: by [  ]).	0.0106060504913	2
Coq.ssr.ssrbool.negbT	40	0.1.0	synth with cache (only 1: intuition; only 1: subst; only 1: by [  ]).	0.015928030014	4
Coq.ssr.ssrbool.negbTE	40	0	synth with cache (only 1: by case : b ).	0.0116031169891	1
Coq.ssr.ssrbool.negbF	40	0	synth with cache (only 1: by case : b ).	0.0124518871307	1
Coq.ssr.ssrbool.negbFE	40	0	synth with cache (only 1: by case : b ).	0.0111119747162	1
Coq.ssr.ssrbool.negbK	40	3.30	synth with cache (only 1: intro H; only 1: Bool.destr_bool).	0.204638957977	591
Coq.ssr.ssrbool.negbNE	40	0	synth with cache (only 1: by case : b ).	0.0109050273895	1
Coq.ssr.ssrbool.negb_inj	40	0.29	synth with cache (only 1: intro H; only 1: Bool.destr_bool).	0.226576089859	517
Coq.ssr.ssrbool.negbLR	40	6	synth with cache (only 1: Bool.destr_bool).	0.0215530395508	7
Coq.ssr.ssrbool.negbRL	40	8	synth with cache (only 1: Bool.destr_bool).	0.0262310504913	14
Coq.ssr.ssrbool.contra	40	7.11	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.484091043472	384
Coq.ssr.ssrbool.contraL	40	0	synth with cache (only 1: by case : b  => //; case : c ).	0.0161709785461	1
Coq.ssr.ssrbool.contraR	40	0	synth with cache (only 1: by case : b  => //; case : c ).	0.0162489414215	1
Coq.ssr.ssrbool.contraLR	40	0	synth with cache (only 1: by case : b  => //; case : c ).	0.0165250301361	1
Coq.ssr.ssrbool.contraT	40	5.12	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.45768904686	206
Coq.ssr.ssrbool.wlog_neg	40	0	synth with cache (only 1: by case : b  => // ->).	0.0144040584564	1
Coq.ssr.ssrbool.contraFT	40	2.14	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.518335819244	129
Coq.ssr.ssrbool.contraFN	40	2.16	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.621766090393	168
Coq.ssr.ssrbool.contraTF	40	2.14	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.530428886414	129
Coq.ssr.ssrbool.contraNF	40	2.15	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.597659111023	148
Coq.ssr.ssrbool.contraFF	40	0.1.32.15	synth with cache (only 1: Bool.destr_bool; only 1: reflexivity || destruct H; only 1: intuition; only 1: intuition).	7.3039059639	9812
Coq.ssr.ssrbool.BoolIf.ifP	40
Coq.ssr.ssrbool.BoolIf.ifPn	40	0.23	synth with cache (only 1: intuition; only 1: by case  def_b: b ; constructor).	0.435171127319	280
Coq.ssr.ssrbool.BoolIf.ifT	40	2	synth with cache (only 1: by case : b ).	0.0208730697632	3
Coq.ssr.ssrbool.BoolIf.ifF	40	0	synth with cache (only 1: by move ->).	0.0122759342194	1
Coq.ssr.ssrbool.BoolIf.ifN	40	2	synth with cache (only 1: by case : b ).	0.0187828540802	3
Coq.ssr.ssrbool.BoolIf.if_same	40	0	synth with cache (only 1: by case  def_b: b ; constructor).	0.0143249034882	1
Coq.ssr.ssrbool.BoolIf.if_neg	40	2	synth with cache (only 1: by case b).	0.0132758617401	3
Coq.ssr.ssrbool.BoolIf.fun_if	40	0	synth with cache (only 1: by case b).	0.0134119987488	1
Coq.ssr.ssrbool.BoolIf.if_arg	40	0	synth with cache (only 1: by case b).	0.0132720470428	1
Coq.ssr.ssrbool.BoolIf.ifE	40	12	synth with cache (only 1: trivial).	0.048131942749	46
Coq.ssr.ssrbool.ReflectCore.introNTF	40
Coq.ssr.ssrbool.ReflectCore.introTF	40	0	synth with cache (only 1: by case c; case Hb).	0.0201108455658	1
Coq.ssr.ssrbool.ReflectCore.elimNTF	40	0	synth with cache (only 1: by case c; case Hb).	0.0203900337219	1
Coq.ssr.ssrbool.ReflectCore.elimTF	40	0	synth with cache (only 1: by move <-; case Hb).	0.0150392055511	1
Coq.ssr.ssrbool.ReflectCore.equivPif	40
Coq.ssr.ssrbool.ReflectCore.xorPif	40	0.0.37	synth with cache (only 1: intuition; only 1: by case Hb; auto; only 1: by case Hb; auto).	13.2332091331	1094
Coq.ssr.ssrbool.ReflectNegCore.introTFn	40
Coq.ssr.ssrbool.ReflectNegCore.elimTFn	40
Coq.ssr.ssrbool.ReflectNegCore.equivPifn	40
Coq.ssr.ssrbool.ReflectNegCore.xorPifn	40
Coq.ssr.ssrbool.Reflect.introT	40
Coq.ssr.ssrbool.Reflect.introF	40
Coq.ssr.ssrbool.Reflect.introN	40
Coq.ssr.ssrbool.Reflect.introNf	40
Coq.ssr.ssrbool.Reflect.introTn	40
Coq.ssr.ssrbool.Reflect.introFn	40
Coq.ssr.ssrbool.Reflect.elimT	40
Coq.ssr.ssrbool.Reflect.elimF	40
Coq.ssr.ssrbool.Reflect.elimN	40
Coq.ssr.ssrbool.Reflect.elimNf	40
Coq.ssr.ssrbool.Reflect.elimTn	40
Coq.ssr.ssrbool.Reflect.elimFn	40
Coq.ssr.ssrbool.Reflect.introP	40
Coq.ssr.ssrbool.Reflect.iffP	40
Coq.ssr.ssrbool.Reflect.equivP	40	0.21	synth with cache (only 1: intuition; only 1: by case : Pb ; constructor; auto).	0.279190063477	231
Coq.ssr.ssrbool.Reflect.sumboolP	40
Coq.ssr.ssrbool.Reflect.appP	40
Coq.ssr.ssrbool.Reflect.sameP	40
Coq.ssr.ssrbool.Reflect.decPcases	40
Coq.ssr.ssrbool.Reflect.decP	40
Coq.ssr.ssrbool.Reflect.rwP	40	13	synth with cache (only 1: by case Pb).	0.0716161727905	60
Coq.ssr.ssrbool.Reflect.rwP2	40
Coq.ssr.ssrbool.Reflect.altP	40
Coq.ssr.ssrbool.impliesP	40	5.53	synth with cache (only 1: destruct 1; only 1: auto).	1.04791593552	3275
Coq.ssr.ssrbool.impliesPn	40	0.39.23	synth with cache (only 1: Bool.destr_bool; only 1: destruct H; only 1: auto).	4.74308800697	11358
Coq.ssr.ssrbool.unlessL	40	9.3.34.3	synth with cache (only 1: repeat split; only 1: red; only 1: intros; only 1: auto).	1.11806511879	4075
Coq.ssr.ssrbool.unlessR	40	1.32.3	synth with cache (only 1: repeat split; only 1: intros H ?; only 1: auto).	0.587012052536	1967
Coq.ssr.ssrbool.unless_sym	40	13.1.8.7.57.5	synth with cache (only 1: split; only 1: red; only 1: intros; only 1: apply H; only 1: auto; only 1: auto).	3.0652179718	14647
Coq.ssr.ssrbool.unlessP	40
Coq.ssr.ssrbool.bind_unless	40
Coq.ssr.ssrbool.unless_contra	40
Coq.ssr.ssrbool.classicP	40
Coq.ssr.ssrbool.classicW	40	0.20.13	synth with cache (only 1: intro; only 1: red; only 1: auto).	0.430213928223	852
Coq.ssr.ssrbool.classic_bind	40
Coq.ssr.ssrbool.classic_EM	40
Coq.ssr.ssrbool.classic_pick	40
Coq.ssr.ssrbool.classic_imply	40
Coq.ssr.ssrbool.AllAnd.all_and2	40	0.0.0.0.0.0.1	synth with cache (only 1: repeat split; only 1: intro z; only 1: destruct (H z); only 1: auto; only 1: intro z; only 1: destruct (H z); only 1: auto).	0.0293719768524	8
Coq.ssr.ssrbool.AllAnd.all_and3	40	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0181720256805	1
Coq.ssr.ssrbool.AllAnd.all_and4	40	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0209460258484	1
Coq.ssr.ssrbool.AllAnd.all_and5	40	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0234298706055	1
Coq.ssr.ssrbool.pair_andP	40	6	synth with cache (only 1: intuition).	0.0304548740387	12
Coq.ssr.ssrbool.ReflectConnectives.idP	40
Coq.ssr.ssrbool.ReflectConnectives.boolP	40	0	synth with cache (only 1: by case b1; constructor).	0.014221906662	1
Coq.ssr.ssrbool.ReflectConnectives.idPn	40	0	synth with cache (only 1: by case b1; constructor).	0.0124139785767	1
Coq.ssr.ssrbool.ReflectConnectives.negP	40	0	synth with cache (only 1: by case b1; constructor).	0.0168108940125	1
Coq.ssr.ssrbool.ReflectConnectives.negPn	40	0	synth with cache (only 1: by case b1; constructor).	0.0117809772491	1
Coq.ssr.ssrbool.ReflectConnectives.negPf	40	0	synth with cache (only 1: by case b1; constructor; auto).	0.0132188796997	1
Coq.ssr.ssrbool.ReflectConnectives.andP	40
Coq.ssr.ssrbool.ReflectConnectives.and3P	40
Coq.ssr.ssrbool.ReflectConnectives.and4P	40
Coq.ssr.ssrbool.ReflectConnectives.and5P	40
Coq.ssr.ssrbool.ReflectConnectives.orP	40
Coq.ssr.ssrbool.ReflectConnectives.or3P	40
Coq.ssr.ssrbool.ReflectConnectives.or4P	40
Coq.ssr.ssrbool.ReflectConnectives.nandP	40	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0195469856262	1
Coq.ssr.ssrbool.ReflectConnectives.norP	40	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case; auto).	0.0195050239563	1
Coq.ssr.ssrbool.ReflectConnectives.implyP	40	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0141150951385	1
Coq.ssr.ssrbool.andTb	40	5	synth with cache (only 1: constructor).	0.0119690895081	6
Coq.ssr.ssrbool.andFb	40	0	synth with cache (only 1: by [  ]).	0.0106661319733	1
Coq.ssr.ssrbool.andbT	40	2.11	synth with cache (only 1: intro H; only 1: Bool.destr_bool).	0.0571479797363	78
Coq.ssr.ssrbool.andbF	40	2.9	synth with cache (only 1: intro H; only 1: Bool.destr_bool).	0.0474538803101	49
Coq.ssr.ssrbool.andbb	40	0	synth with cache (only 1: by case).	0.0119149684906	1
Coq.ssr.ssrbool.andbC	40	1.50	synth with cache (only 1: intro H; only 1: Bool.destr_bool).	0.529176950455	1387
Coq.ssr.ssrbool.andbA	40	0	synth with cache (only 1: by case).	0.0117990970612	1
Coq.ssr.ssrbool.andbCA	40	0	synth with cache (only 1: by do 2!case).	0.0142748355865	1
Coq.ssr.ssrbool.andbAC	40	1	synth with cache (only 1: by do 3!case).	0.0227539539337	2
Coq.ssr.ssrbool.andbACA	40	11	synth with cache (only 1: by do 3!case).	0.027508020401	33
Coq.ssr.ssrbool.orTb	40	0	synth with cache (only 1: reflexivity).	0.0110678672791	1
Coq.ssr.ssrbool.orFb	40	0	synth with cache (only 1: by [  ]).	0.011088848114	1
Coq.ssr.ssrbool.orbT	40	2	synth with cache (only 1: Bool.destr_bool).	0.0149621963501	3
Coq.ssr.ssrbool.orbF	40	0	synth with cache (only 1: by case).	0.0119340419769	1
Coq.ssr.ssrbool.orbb	40	0	synth with cache (only 1: by case).	0.0120191574097	1
Coq.ssr.ssrbool.orbC	40	0	synth with cache (only 1: by do 2!case).	0.0140209197998	1
Coq.ssr.ssrbool.orbA	40	0	synth with cache (only 1: by do 3!case).	0.0184450149536	1
Coq.ssr.ssrbool.orbCA	40	0	synth with cache (only 1: by do 3!case).	0.0185267925262	1
Coq.ssr.ssrbool.orbAC	40	0	synth with cache (only 1: by do 3!case).	0.0185561180115	1
Coq.ssr.ssrbool.orbACA	40	0	synth with cache (only 1: by do 4!case).	0.0263168811798	1
Coq.ssr.ssrbool.andbN	40	0	synth with cache (only 1: by case : b ).	0.0139467716217	1
Coq.ssr.ssrbool.andNb	40	0	synth with cache (only 1: by case : b ).	0.014219045639	1
Coq.ssr.ssrbool.orbN	40	0	synth with cache (only 1: by case : b ).	0.0423128604889	1
Coq.ssr.ssrbool.orNb	40	0	synth with cache (only 1: by case : b ).	0.0141751766205	1
Coq.ssr.ssrbool.andb_orl	40	4	synth with cache (only 1: by do 3!case).	0.0281131267548	5
Coq.ssr.ssrbool.andb_orr	40	0	synth with cache (only 1: by case).	0.0126690864563	1
Coq.ssr.ssrbool.orb_andl	40	0	synth with cache (only 1: by do 3!case).	0.0190179347992	1
Coq.ssr.ssrbool.orb_andr	40	0	synth with cache (only 1: by do 3!case).	0.0194108486176	1
Coq.ssr.ssrbool.andb_idl	40	8.7	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.282543897629	143
Coq.ssr.ssrbool.andb_idr	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0195739269257	1
Coq.ssr.ssrbool.andb_id2l	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0216789245605	1
Coq.ssr.ssrbool.andb_id2r	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.026878118515	1
Coq.ssr.ssrbool.orb_idl	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0200481414795	1
Coq.ssr.ssrbool.orb_idr	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0195519924164	1
Coq.ssr.ssrbool.orb_id2l	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0276169776917	1
Coq.ssr.ssrbool.orb_id2r	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0274479389191	1
Coq.ssr.ssrbool.negb_and	40	0	synth with cache (only 1: Bool.destr_bool).	0.0152080059052	1
Coq.ssr.ssrbool.negb_or	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0161921977997	1
Coq.ssr.ssrbool.andbK	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0154979228973	1
Coq.ssr.ssrbool.andKb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0159559249878	1
Coq.ssr.ssrbool.orbK	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0154221057892	1
Coq.ssr.ssrbool.orKb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0157089233398	1
Coq.ssr.ssrbool.implybT	40	0	synth with cache (only 1: by case : b ).	0.0124299526215	1
Coq.ssr.ssrbool.implybF	40	0	synth with cache (only 1: by case : b ).	0.0333690643311	1
Coq.ssr.ssrbool.implyFb	40	0	synth with cache (only 1: by case : b ).	0.0121428966522	1
Coq.ssr.ssrbool.implyTb	40	0	synth with cache (only 1: by case : b ).	0.0129888057709	1
Coq.ssr.ssrbool.implybb	40	0	synth with cache (only 1: by case : b ).	0.0123279094696	1
Coq.ssr.ssrbool.negb_imply	40	0	synth with cache (only 1: by case : a ; case : b ).	0.015928030014	1
Coq.ssr.ssrbool.implybE	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0157830715179	1
Coq.ssr.ssrbool.implyNb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0155999660492	1
Coq.ssr.ssrbool.implybN	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0155780315399	1
Coq.ssr.ssrbool.implybNN	40	0	synth with cache (only 1: by case : a ; case : b ).	0.015683889389	1
Coq.ssr.ssrbool.implyb_idl	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0194671154022	1
Coq.ssr.ssrbool.implyb_idr	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.019779920578	1
Coq.ssr.ssrbool.implyb_id2l	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0272669792175	1
Coq.ssr.ssrbool.addFb	40	0	synth with cache (only 1: by [  ]).	0.010978937149	1
Coq.ssr.ssrbool.addbF	40	0	synth with cache (only 1: by case).	0.0121190547943	1
Coq.ssr.ssrbool.addbb	40	1	synth with cache (only 1: by case).	0.0145490169525	2
Coq.ssr.ssrbool.addbC	40	0	synth with cache (only 1: by do 2!case).	0.0142879486084	1
Coq.ssr.ssrbool.addbA	40	0	synth with cache (only 1: by do 3!case).	0.0183310508728	1
Coq.ssr.ssrbool.addbCA	40	0	synth with cache (only 1: by do 3!case).	0.018660068512	1
Coq.ssr.ssrbool.addbAC	40	0	synth with cache (only 1: by do 3!case).	0.01873087883	1
Coq.ssr.ssrbool.addbACA	40	0	synth with cache (only 1: by do 4!case).	0.0270168781281	1
Coq.ssr.ssrbool.andb_addl	40	0	synth with cache (only 1: by do 3!case).	0.0190999507904	1
Coq.ssr.ssrbool.andb_addr	40	0	synth with cache (only 1: by do 3!case).	0.019161939621	1
Coq.ssr.ssrbool.addKb	40	1	synth with cache (only 1: by do 2!case).	0.0168089866638	2
Coq.ssr.ssrbool.addbK	40	0	synth with cache (only 1: by do 2!case).	0.0142199993134	1
Coq.ssr.ssrbool.addIb	40	1	synth with cache (only 1: by do 3!case).	0.0228209495544	2
Coq.ssr.ssrbool.addbI	40	2	synth with cache (only 1: by do 3!case).	0.0250999927521	3
Coq.ssr.ssrbool.addTb	40	0	synth with cache (only 1: by case : b ).	0.0132122039795	1
Coq.ssr.ssrbool.addbT	40	1	synth with cache (only 1: by case : b ).	0.0496690273285	2
Coq.ssr.ssrbool.addbN	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0157279968262	1
Coq.ssr.ssrbool.addNb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0159380435944	1
Coq.ssr.ssrbool.addbP	40	1.0.0.0.51	synth with cache (only 1: repeat match goal with | p:(_ * _)%type |- _ => destruct p | b:bool |- _ => destruct b end; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor).	2.28413486481	1628
Coq.ssr.ssrbool.subrelUl	40	0.13.0.9.25	synth with cache (only 1: intro H; only 1: simpl; only 1: Bool.destr_bool; only 1: elim eq_sym with (1 := H0); only 1: by [  ]).	1.25795793533	2613
Coq.ssr.ssrbool.subrelUr	40	12.2.14.38	synth with cache (only 1: red; only 1: red; only 1: Bool.destr_bool; only 1: intuition).	3.39490389824	8037
Coq.ssr.ssrbool.sub_refl	40	3.14	synth with cache (only 1: red; only 1: auto).	0.0692360401154	151
Coq.ssr.ssrbool.PredicateSimplification.mem_topred	40
Coq.ssr.ssrbool.PredicateSimplification.topredE	40	0	synth with cache (only 1: by case : pT pp ).	0.0149409770966	1
Coq.ssr.ssrbool.PredicateSimplification.app_predE	40
Coq.ssr.ssrbool.PredicateSimplification.in_applicative	40
Coq.ssr.ssrbool.PredicateSimplification.in_collective	40
Coq.ssr.ssrbool.PredicateSimplification.in_simpl	40	0	synth with cache (only 1: by case : msp  => _ /= ->).	0.0152227878571	1
Coq.ssr.ssrbool.PredicateSimplification.unfold_in	40	3	synth with cache (only 1: by rewrite -mem_topred).	0.0124139785767	4
Coq.ssr.ssrbool.PredicateSimplification.simpl_predE	40	2	synth with cache (only 1: by [  ]).	0.00961089134216	3
Coq.ssr.ssrbool.PredicateSimplification.mem_simpl	40	0	synth with cache (only 1: by [  ]).	0.00854086875916	1
Coq.ssr.ssrbool.PredicateSimplification.mem_mem	40
Coq.ssr.ssrbool.qualifE	40	1	synth with cache (only 1: by [  ]).	0.0125370025635	2
Coq.ssr.ssrbool.KeyPred.keyed_predE	40
Coq.ssr.ssrbool.KeyedQualifier.keyed_qualifier_suproof	40
Coq.ssr.ssrbool.all_tag_cond_dep	40
Coq.ssr.ssrbool.all_tag_cond	40
Coq.ssr.ssrbool.all_sig_cond_dep	40
Coq.ssr.ssrbool.all_sig_cond	40
Coq.ssr.ssrbool.RelationProperties.symmetric_from_pre	40
Coq.ssr.ssrbool.RelationProperties.PER.sym_left_transitive	40
Coq.ssr.ssrbool.RelationProperties.PER.sym_right_transitive	40
Coq.ssr.ssrbool.RelationProperties.equivalence_relP	40
Coq.ssr.ssrbool.rev_trans	40
Coq.ssr.ssrbool.LocalProperties.forE	40	1	synth with cache (only 1: reflexivity).	0.0124490261078	2
Coq.ssr.ssrbool.LocalGlobal.in1W	40	0.7	synth with cache (only 1: intro; only 1: by [  ]).	0.0241689682007	9
Coq.ssr.ssrbool.LocalGlobal.in2W	40	0	synth with cache (only 1: by move  =>? ?).	0.0138320922852	1
Coq.ssr.ssrbool.LocalGlobal.in3W	40	0	synth with cache (only 1: by move  =>? ?).	0.0154550075531	1
Coq.ssr.ssrbool.LocalGlobal.in1T	40	16	synth with cache (only 1: auto).	0.156531095505	147
Coq.ssr.ssrbool.LocalGlobal.in2T	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0193340778351	2
Coq.ssr.ssrbool.LocalGlobal.in3T	40	0	synth with cache (only 1: by move  =>? ?; auto).	0.0165889263153	1
Coq.ssr.ssrbool.LocalGlobal.sub_in1	40	0	synth with cache (only 1: by move  =>? ?; auto).	0.0138738155365	1
Coq.ssr.ssrbool.LocalGlobal.sub_in11	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0186898708344	2
Coq.ssr.ssrbool.LocalGlobal.sub_in111	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0201210975647	2
Coq.ssr.ssrbool.LocalGlobal.on1W	40	0	synth with cache (only 1: by move  =>? ?).	0.0149250030518	1
Coq.ssr.ssrbool.LocalGlobal.on1lW	40	0	synth with cache (only 1: by move  =>? ?).	0.0147578716278	1
Coq.ssr.ssrbool.LocalGlobal.on2W	40	0	synth with cache (only 1: by move  =>? ?).	0.0150380134583	1
Coq.ssr.ssrbool.LocalGlobal.on1T	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0195548534393	2
Coq.ssr.ssrbool.LocalGlobal.on1lT	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0204148292542	2
Coq.ssr.ssrbool.LocalGlobal.on2T	40	0	synth with cache (only 1: by move  =>? ?; auto).	0.0167279243469	1
Coq.ssr.ssrbool.LocalGlobal.subon1	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.020555973053	2
Coq.ssr.ssrbool.LocalGlobal.subon1l	40	0	synth with cache (only 1: by move  =>allQ x /sub2; apply : allQ ).	0.0185790061951	1
Coq.ssr.ssrbool.LocalGlobal.subon2	40	3	synth with cache (only 1: by move  =>? ?; auto).	0.0290927886963	4
Coq.ssr.ssrbool.LocalGlobal.can_in_inj	40
Coq.ssr.ssrbool.LocalGlobal.canLR_in	40	24.50.19	synth with cache (only 1: intros; only 1: subst; only 1: auto).	8.44319987297	17010
Coq.ssr.ssrbool.LocalGlobal.canRL_in	40
Coq.ssr.ssrbool.LocalGlobal.on_can_inj	40	0	synth with cache (only 1: by move  =>fK x y /fK {+2}<- /fK {+2}<- ->).	0.0234880447388	1
Coq.ssr.ssrbool.LocalGlobal.canLR_on	40	1	synth with cache (only 1: by move  =>fK D1y ->; rewrite fK).	0.0190119743347	2
Coq.ssr.ssrbool.LocalGlobal.canRL_on	40	2	synth with cache (only 1: by move  =>fK D1x <-; rewrite fK).	0.0200498104095	3
Coq.ssr.ssrbool.LocalGlobal.inW_bij	40
Coq.ssr.ssrbool.LocalGlobal.onW_bij	40	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0193798542023	1
Coq.ssr.ssrbool.LocalGlobal.inT_bij	40	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0220968723297	1
Coq.ssr.ssrbool.LocalGlobal.onT_bij	40	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0232980251312	1
Coq.ssr.ssrbool.LocalGlobal.sub_in_bij	40	0.70	synth with cache (only 1: intro x; only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	2.73656392097	4708
Coq.ssr.ssrbool.LocalGlobal.subon_bij	40	0	synth with cache (only 1: by move  =>subD [g' fK g'K]; exists g' => x; move /subD ; [ apply : fK  | apply : g'K  ]).	0.0280261039734	1
Coq.ssr.ssrbool.sub_in2	40	2.4.5	synth with cache (only 1: intros; only 1: intro; only 1: auto).	0.151622056961	99
Coq.ssr.ssrbool.sub_in3	40	12.14	synth with cache (only 1: red; only 1: auto).	0.81938791275	908
Coq.ssr.ssrbool.sub_in12	40	1.18	synth with cache (only 1: intros; only 1: by move  =>? ?; auto).	0.450031042099	187
Coq.ssr.ssrbool.sub_in21	40	0	synth with cache (only 1: by move  =>/= sub1 sub; apply : sub_in111 ).	0.0156428813934	1
Coq.ssr.ssrbool.equivalence_relP_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoW	40	4	synth with cache (only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).	0.0219869613647	13
Coq.ssr.ssrbool.MonoHomoMorphismTheory.mono2W	40	5	synth with cache (only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).	0.0123720169067	6
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoRL	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoLR	40	0	synth with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).	0.0160040855408	1
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homo_mono	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoLR	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoRL	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.can_mono	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoW_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.mono2W_in	40	0	synth with cache (only 1: by move  =>hf x ax; rewrite hf).	0.0156259536743	1
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoRL_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoLR_in	40	0	synth with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK_on //; apply).	0.0263409614563	1
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homo_mono_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoLR_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoRL_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.can_mono_in	40
Coq.ssr.ssrsetoid.compat_Reflexive	40	0.0	synth with cache (only 1: intros; only 1: tauto).	0.0141711235046	2
Coq.ssr.ssrfun.unitE	40	3.9.20	synth with cache (only 1: intro H; only 1: destruct H; only 1: reflexivity).	0.300282001495	737
Coq.ssr.ssrfun.ExtensionalEquality.frefl	40	2	synth with cache (only 1: split).	0.0106999874115	3
Coq.ssr.ssrfun.ExtensionalEquality.fsym	40	0.9	synth with cache (only 1: intros; only 1: by [  ]).	0.0251269340515	21
Coq.ssr.ssrfun.ExtensionalEquality.ftrans	40	4.49.77.13	synth with cache (only 1: intros; only 1: intro z; only 1: rewrite H; only 1: trivial).	22.3725857735	149586
Coq.ssr.ssrfun.ExtensionalEquality.rrefl	40	2.0	synth with cache (only 1: intros H ?; only 1: split).	0.0130219459534	4
Coq.ssr.ssrfun.Composition.eq_comp	40
Coq.ssr.ssrfun.all_tag	40
Coq.ssr.ssrfun.all_tag2	40	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).	0.0194239616394	1
Coq.ssr.ssrfun.Sig.svalP	40	2	synth with cache (only 1: apply proj2_sig).	0.011087179184	3
Coq.ssr.ssrfun.Sig.s2valP	40
Coq.ssr.ssrfun.Sig.s2valP'	40	0	synth with cache (only 1: by case : u ).	0.0121281147003	1
Coq.ssr.ssrfun.all_sig	40	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).	0.0144250392914	1
Coq.ssr.ssrfun.all_sig2	40	0	synth with cache (only 1: by case /all_tag =>f /all_pair []; exists f).	0.0199720859528	1
Coq.ssr.ssrfun.Injections.can_pcan	40	1.31.44	synth with cache (only 1: intros Hfst Hsnd; only 1: rewrite Hfst; only 1: auto).	4.13514614105	20449
Coq.ssr.ssrfun.Injections.pcan_inj	40
Coq.ssr.ssrfun.Injections.can_inj	40	1	synth with cache (only 1: by move  =>fK x y /(congr1 g); rewrite !fK => [[]]).	0.0148348808289	2
Coq.ssr.ssrfun.Injections.canLR	40	3.7.3	synth with cache (only 1: intros h1 h2; only 1: subst; only 1: trivial).	0.156474113464	236
Coq.ssr.ssrfun.Injections.canRL	40	7.2	synth with cache (only 1: destruct 2; only 1: auto).	0.0385980606079	35
Coq.ssr.ssrfun.Some_inj	40	0.0.20	synth with cache (only 1: inversion 1; only 1: destruct H; only 1: reflexivity).	0.594102859497	679
Coq.ssr.ssrfun.of_voidK	40	6.13	synth with cache (only 1: intro H1; only 1: intuition).	0.114618062973	207
Coq.ssr.ssrfun.esymK	40	0.0.43	synth with cache (only 1: intro H; only 1: destruct H; only 1: reflexivity).	0.35175204277	1037
Coq.ssr.ssrfun.etrans_id	40	0.13	synth with cache (only 1: subst; only 1: reflexivity).	0.0413310527802	75
Coq.ssr.ssrfun.InjectionsTheory.inj_id	40	1.15	synth with cache (only 1: red; only 1: Bool.destr_bool).	0.0810060501099	127
Coq.ssr.ssrfun.InjectionsTheory.inj_can_sym	40	10.33.28	synth with cache (only 1: intro; only 1: intros h1 h2; only 1: auto).	2.0966129303	7385
Coq.ssr.ssrfun.InjectionsTheory.inj_comp	40	2.59.14	synth with cache (only 1: intros Hfst Hsnd; only 1: intro x; only 1: auto).	1.88326406479	6137
Coq.ssr.ssrfun.InjectionsTheory.inj_compr	40
Coq.ssr.ssrfun.InjectionsTheory.can_comp	40	2.16.49	synth with cache (only 1: red; only 1: simpl; only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).	2.44527792931	7394
Coq.ssr.ssrfun.InjectionsTheory.pcan_pcomp	40
Coq.ssr.ssrfun.InjectionsTheory.eq_inj	40
Coq.ssr.ssrfun.InjectionsTheory.eq_can	40
Coq.ssr.ssrfun.InjectionsTheory.inj_can_eq	40
Coq.ssr.ssrfun.Bijections.bij_inj	40
Coq.ssr.ssrfun.Bijections.bij_can_sym	40
Coq.ssr.ssrfun.Bijections.bij_can_eq	40
Coq.ssr.ssrfun.BijectionsTheory.eq_bij	40
Coq.ssr.ssrfun.BijectionsTheory.bij_comp	40
Coq.ssr.ssrfun.BijectionsTheory.bij_can_bij	40
Coq.ssr.ssrfun.Involutions.inv_inj	40
Coq.ssr.ssrfun.Involutions.inv_bij	40	18.18.20	synth with cache (only 1: exists f; only 1: trivial; only 1: trivial).	0.932199001312	3566
Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	0.0	synth with cache (only 1: intros; only 1: trivial).	0.0113570690155	2
Coq.ssr.ssrunder.Under_rel.Under_relE	40	1	synth with cache (only 1: auto).	0.0112910270691	2
Coq.ssr.ssrunder.Under_rel.over_rel	40	0	synth with cache (only 1: now trivial).	0.00933194160461	1
Coq.ssr.ssrunder.Under_rel.over_rel_done	40	0	synth with cache (only 1: now trivial).	0.0102000236511	1
Coq.ssr.ssrunder.Under_rel.under_rel_done	40	0	synth with cache (only 1: now unfold Over_rel).	0.00866198539734	1
Coq.Vectors.VectorEq.BEQ.eqb_nat_eq	40
Coq.Vectors.VectorEq.BEQ.eqb_eq	40
Coq.Vectors.VectorEq.BEQ.eq_dec	40
Coq.Vectors.VectorEq.CAST.cast	40	8	synth with cache (only 1: congruence).	0.108561038971	80
Coq.Vectors.VectorDef.BASES.trunc	40
Coq.Vectors.VectorSpec.eta	40
Coq.Vectors.VectorSpec.eq_nth_iff	40
Coq.Vectors.VectorSpec.nth_order_last	40
Coq.Vectors.VectorSpec.shiftin_nth	40
Coq.Vectors.VectorSpec.shiftin_last	40
Coq.Vectors.VectorSpec.shiftrepeat_nth	40
Coq.Vectors.VectorSpec.shiftrepeat_last	40
Coq.Vectors.VectorSpec.const_nth	40
Coq.Vectors.VectorSpec.nth_map	40
Coq.Vectors.VectorSpec.nth_map2	40
Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40
Coq.Vectors.VectorSpec.to_list_of_list_opp	40
Coq.Vectors.VectorSpec.take_O	40	3.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0266389846802	5
Coq.Vectors.VectorSpec.take_idem	40
Coq.Vectors.VectorSpec.take_app	40	3.1.3.5.1	synth with cache (only 1: intros; only 1: induction v; only 1: reflexivity; only 1: simpl; only 1: now f_equal).	3.43183207512	1877
Coq.Vectors.VectorSpec.take_prf_irr	40	0.0.0.4.0.0.0.0.0	synth with cache (only 1: induction p; only 1: intros n v le le'; only 1: auto; only 1: intros n v le le'; only 1: destruct v; only 1: now simpl; only 1: simpl; only 1: apply f_equal; only 1: apply IHp).	2.3066110611	885
Coq.Vectors.VectorSpec.uncons_cons	40	0.3	synth with cache (only 1: intros m w le; only 1: now simpl).	0.0213088989258	5
Coq.Vectors.VectorSpec.append_comm_cons	40	0.1.1.0	synth with cache (only 1: intros; only 1: destruct v; only 1: reflexivity; only 1: reflexivity).	0.036731004715	6
Coq.Vectors.VectorSpec.splitat_append	40
Coq.Vectors.VectorSpec.append_splitat	40
Coq.Vectors.Fin.of_nat_ext	40
Coq.Vectors.Fin.of_nat_to_nat_inv	40
Coq.Vectors.Fin.to_nat_of_nat	40
Coq.Vectors.Fin.to_nat_inj	40
Coq.Vectors.Fin.L_sanity	40
Coq.Vectors.Fin.L_R	40
Coq.Vectors.Fin.R_sanity	40
Coq.Vectors.Fin.depair_sanity	40
Coq.Vectors.Fin.eqb_nat_eq	40
Coq.Vectors.Fin.eqb_eq	40
Coq.Vectors.Fin.eq_dec	40
Coq.Vectors.Fin.cast	40	10.4.4	synth with cache (only 1: intros x y; only 1: intro; only 1: now intros ->).	3.48618793488	2898
Coq.Setoids.Setoid.Seq_refl	40	0	synth with cache (only 1: firstorder).	0.0119540691376	1
Coq.Setoids.Setoid.Seq_sym	40	0.0	synth with cache (only 1: unfold Setoid_Theory in s; only 1: firstorder).	0.0149738788605	2
Coq.Setoids.Setoid.Seq_trans	40	2.0.0.0.0.0.0.0	synth with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: now transitivity y).	0.0508379936218	13
Coq.Setoids.Setoid.gen_st	40	4	synth with cache (only 1: simpl_relation).	0.0143001079559	5
Coq.Bool.IfProp.Iftrue_inv	40	1.0.1.14	synth with cache (only 1: intro H; only 1: destruct 1; only 1: intuition; only 1: discriminate).	0.465436935425	771
Coq.Bool.IfProp.Iffalse_inv	40	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: intros; only 1: case diff_true_false; only 1: auto with bool; only 1: intros; only 1: auto with bool).	0.0254101753235	6
Coq.Bool.IfProp.IfProp_true	40	1.35.17	synth with cache (only 1: intro p; only 1: inversion 1; only 1: auto with bool).	10.3653509617	43964
Coq.Bool.IfProp.IfProp_false	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: assumption).	0.0434710979462	11
Coq.Bool.IfProp.IfProp_or	40	0.1.0.0.0	synth with cache (only 1: destruct 1; only 1: left; only 1: auto with bool; only 1: right; only 1: auto with bool).	0.0324048995972	17
Coq.Bool.IfProp.IfProp_sum	40
Coq.Bool.Zerob.zerob_true_intro	40	7.1	synth with cache (only 1: intros; only 1: now subst).	0.0247781276703	10
Coq.Bool.Zerob.zerob_true_elim	40	0.0.0	synth with cache (only 1: destruct n; only 1: trivial with bool; only 1: inversion 1).	0.0319938659668	3
Coq.Bool.Zerob.zerob_false_intro	40	0.2.0	synth with cache (only 1: destruct n; only 1: Nat.order'; only 1: trivial).	0.140370845795	12
Coq.Bool.Zerob.zerob_false_elim	40	3.0.0.0	synth with cache (only 1: intros; only 1: intro H1; only 1: rewrite H1 in H; only 1: discriminate H).	0.14185500145	7
Coq.Bool.DecBool.ifdec_left	40	0.0.1.2.6.3	synth with cache (only 1: unfold not; only 1: destruct H; only 1: reflexivity; only 1: intros H ?; only 1: destruct H; only 1: assumption).	1.27739286423	2091
Coq.Bool.DecBool.ifdec_right	40	0.9.1.0.0	synth with cache (only 1: intros; only 1: case H; only 1: intro; only 1: contradiction; only 1: auto).	2.83517098427	2270
Coq.Bool.Sumbool.sumbool_of_bool	40	17.0.15.0	synth with cache (only 1: intro H; only 1: destruct H; only 1: auto; only 1: auto).	0.640795946121	2431
Coq.Bool.Sumbool.bool_eq_rec	40	1.1.4	synth with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.0293881893158	26
Coq.Bool.Sumbool.bool_eq_ind	40	0.0.0	synth with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.0172638893127	3
Coq.Bool.Sumbool.connectives.sumbool_and	40
Coq.Bool.Sumbool.connectives.sumbool_or	40	0.0.0.0.0.0.0	synth with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.0269289016724	7
Coq.Bool.Sumbool.connectives.sumbool_not	40	0.0.0.0.0.0.0	synth with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.0246999263763	7
Coq.Bool.Sumbool.bool_of_sumbool	40
Coq.Bool.Bool.bool_dec	40
Coq.Bool.Bool.diff_true_false	40	2	synth with cache (only 1: discriminate).	0.0094301700592	3
Coq.Bool.Bool.diff_false_true	40	0	synth with cache (only 1: discriminate).	0.00935411453247	1
Coq.Bool.Bool.eq_true_false_abs	40	1.1.13.0.10	synth with cache (only 1: intro; only 1: intro H; only 1: destruct b; only 1: discriminate; only 1: discriminate).	1.02530789375	3127
Coq.Bool.Bool.not_true_is_false	40	2.6.0	synth with cache (only 1: destr_bool; only 1: reflexivity || destruct H; only 1: exact eq_refl).	0.0397028923035	45
Coq.Bool.Bool.not_false_is_true	40	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.0181322097778	2
Coq.Bool.Bool.not_true_iff_false	40	0.0.0.5.4	synth with cache (only 1: intro A; only 1: split; only 1: destr_bool; only 1: intuition; only 1: destr_bool).	0.44932103157	363
Coq.Bool.Bool.not_false_iff_true	40	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0242879390717	3
Coq.Bool.Bool.leb_implb	40	2.0.2.1.2	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.379109144211	260
Coq.Bool.Bool.eqb_subst	40	0.3.1	synth with cache (only 1: intro H; only 1: intro z; only 1: destr_bool).	0.027284860611	13
Coq.Bool.Bool.eqb_reflx	40	0	synth with cache (only 1: destr_bool).	0.0128841400146	1
Coq.Bool.Bool.eqb_prop	40	0	synth with cache (only 1: destr_bool).	0.0137159824371	1
Coq.Bool.Bool.eqb_true_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0291838645935	5
Coq.Bool.Bool.eqb_false_iff	40	0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0336809158325	6
Coq.Bool.Bool.negb_orb	40	0.0.1.0.2	synth with cache (only 1: destruct b1; only 1: simpl; only 1: destr_bool; only 1: simpl; only 1: destr_bool).	0.0430240631104	23
Coq.Bool.Bool.negb_andb	40	0	synth with cache (only 1: destr_bool).	0.014111995697	1
Coq.Bool.Bool.negb_involutive	40	2	synth with cache (only 1: destr_bool).	0.0137720108032	3
Coq.Bool.Bool.negb_involutive_reverse	40	0	synth with cache (only 1: destr_bool).	0.0139889717102	1
Coq.Bool.Bool.negb_sym	40	0	synth with cache (only 1: destr_bool).	0.0131947994232	1
Coq.Bool.Bool.no_fixpoint_negb	40	0	synth with cache (only 1: destr_bool).	0.0148870944977	1
Coq.Bool.Bool.eqb_negb1	40	0	synth with cache (only 1: destr_bool).	0.0122561454773	1
Coq.Bool.Bool.eqb_negb2	40	0	synth with cache (only 1: destr_bool).	0.0123040676117	1
Coq.Bool.Bool.if_negb	40	0	synth with cache (only 1: destr_bool).	0.0131261348724	1
Coq.Bool.Bool.negb_true_iff	40	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0205368995667	3
Coq.Bool.Bool.negb_false_iff	40	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0205121040344	3
Coq.Bool.Bool.orb_true_iff	40	0.1.1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.091500043869	8
Coq.Bool.Bool.orb_false_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0384609699249	5
Coq.Bool.Bool.orb_true_elim	40	0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.0305931568146	5
Coq.Bool.Bool.orb_prop	40	0.0.0.2	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.125751018524	51
Coq.Bool.Bool.orb_true_intro	40	1.1.1.2.0	synth with cache (only 1: destruct b1; only 1: destr_bool; only 1: simpl; only 1: destr_bool; only 1: intuition).	0.322880029678	149
Coq.Bool.Bool.orb_false_intro	40	1.4.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: trivial).	0.0318229198456	16
Coq.Bool.Bool.orb_false_elim	40	0.0.3.1	synth with cache (only 1: destruct b1; only 1: destr_bool; only 1: simpl; only 1: auto).	0.306098937988	119
Coq.Bool.Bool.orb_diag	40	0	synth with cache (only 1: destr_bool).	0.0134038925171	1
Coq.Bool.Bool.orb_true_r	40	0	synth with cache (only 1: destr_bool).	0.0122001171112	1
Coq.Bool.Bool.orb_true_l	40	0	synth with cache (only 1: destr_bool).	0.0126540660858	1
Coq.Bool.Bool.orb_false_r	40	1	synth with cache (only 1: destr_bool).	0.0128800868988	2
Coq.Bool.Bool.orb_false_l	40	0	synth with cache (only 1: destr_bool).	0.0126230716705	1
Coq.Bool.Bool.orb_negb_r	40	0	synth with cache (only 1: destr_bool).	0.0122680664062	1
Coq.Bool.Bool.orb_comm	40	0	synth with cache (only 1: destr_bool).	0.0152461528778	1
Coq.Bool.Bool.orb_assoc	40	0	synth with cache (only 1: destr_bool).	0.0201871395111	1
Coq.Bool.Bool.andb_true_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0357749462128	5
Coq.Bool.Bool.andb_false_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0372319221497	5
Coq.Bool.Bool.andb_true_eq	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a, b; only 1: repeat split; only 1: repeat split; only 1: assumption; only 1: repeat split; only 1: assumption; only 1: repeat split; only 1: assumption; only 1: assumption).	0.0386798381805	9
Coq.Bool.Bool.andb_false_intro1	40	1.0.0.0.1.0.0	synth with cache (only 1: destruct b1; only 1: destruct b2; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destr_bool).	0.0438849925995	12
Coq.Bool.Bool.andb_false_intro2	40	0.0.0	synth with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.0185208320618	3
Coq.Bool.Bool.andb_false_r	40	1	synth with cache (only 1: destr_bool).	0.0126960277557	2
Coq.Bool.Bool.andb_false_l	40	0	synth with cache (only 1: destr_bool).	0.012866973877	1
Coq.Bool.Bool.andb_diag	40	0	synth with cache (only 1: destr_bool).	0.0122799873352	1
Coq.Bool.Bool.andb_true_r	40	1	synth with cache (only 1: destr_bool).	0.0122950077057	2
Coq.Bool.Bool.andb_true_l	40	0	synth with cache (only 1: destr_bool).	0.0122821331024	1
Coq.Bool.Bool.andb_false_elim	40	0.0.0.2	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).	0.0346479415894	15
Coq.Bool.Bool.andb_negb_r	40	0	synth with cache (only 1: destr_bool).	0.0134229660034	1
Coq.Bool.Bool.andb_comm	40	0	synth with cache (only 1: destr_bool).	0.0148110389709	1
Coq.Bool.Bool.andb_assoc	40	0	synth with cache (only 1: destr_bool).	0.0196950435638	1
Coq.Bool.Bool.andb_orb_distrib_r	40	0	synth with cache (only 1: destr_bool).	0.018100976944	1
Coq.Bool.Bool.andb_orb_distrib_l	40	0	synth with cache (only 1: destr_bool).	0.0186610221863	1
Coq.Bool.Bool.orb_andb_distrib_r	40	0	synth with cache (only 1: destr_bool).	0.0197970867157	1
Coq.Bool.Bool.orb_andb_distrib_l	40	0	synth with cache (only 1: destr_bool).	0.0427069664001	1
Coq.Bool.Bool.absorption_andb	40	0	synth with cache (only 1: destr_bool).	0.0144188404083	1
Coq.Bool.Bool.absorption_orb	40	0	synth with cache (only 1: destr_bool).	0.014955997467	1
Coq.Bool.Bool.xorb_false_r	40	0	synth with cache (only 1: destr_bool).	0.0145030021667	1
Coq.Bool.Bool.xorb_false_l	40	0	synth with cache (only 1: destr_bool).	0.0148341655731	1
Coq.Bool.Bool.xorb_true_r	40	0	synth with cache (only 1: destr_bool).	0.0133349895477	1
Coq.Bool.Bool.xorb_true_l	40	0	synth with cache (only 1: reflexivity).	0.0123569965363	1
Coq.Bool.Bool.xorb_nilpotent	40	0	synth with cache (only 1: destr_bool).	0.0123929977417	1
Coq.Bool.Bool.xorb_comm	40	0	synth with cache (only 1: destr_bool).	0.0161051750183	1
Coq.Bool.Bool.xorb_assoc_reverse	40	0	synth with cache (only 1: destr_bool).	0.0187149047852	1
Coq.Bool.Bool.xorb_eq	40	0	synth with cache (only 1: destr_bool).	0.017352104187	1
Coq.Bool.Bool.xorb_move_l_r_1	40	5.0	synth with cache (only 1: intros; only 1: destr_bool).	0.032662153244	12
Coq.Bool.Bool.xorb_move_l_r_2	40	0	synth with cache (only 1: destr_bool).	0.0207710266113	1
Coq.Bool.Bool.xorb_move_r_l_1	40	0	synth with cache (only 1: destr_bool).	0.020956993103	1
Coq.Bool.Bool.xorb_move_r_l_2	40	0	synth with cache (only 1: destr_bool).	0.021301984787	1
Coq.Bool.Bool.negb_xorb_l	40	0	synth with cache (only 1: destr_bool).	0.0153119564056	1
Coq.Bool.Bool.negb_xorb_r	40	0.0.0.0.0	synth with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.0286829471588	5
Coq.Bool.Bool.xorb_negb_negb	40	0	synth with cache (only 1: destr_bool).	0.0148029327393	1
Coq.Bool.Bool.eq_iff_eq_true	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0454518795013	5
Coq.Bool.Bool.eq_true_iff_eq	40	2.2.2	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.245051145554	92
Coq.Bool.Bool.eq_true_negb_classical	40	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.0171670913696	2
Coq.Bool.Bool.eq_true_not_negb	40	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.0171558856964	2
Coq.Bool.Bool.absurd_eq_bool	40	1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0245990753174	5
Coq.Bool.Bool.absurd_eq_true	40	1.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.0207281112671	3
Coq.Bool.Bool.trans_eq_bool	40	0	synth with cache (only 1: destr_bool).	0.0199890136719	1
Coq.Bool.Bool.Is_true_eq_true	40	1.1	synth with cache (only 1: destr_bool; only 1: intuition).	0.0204207897186	4
Coq.Bool.Bool.Is_true_eq_left	40	0	synth with cache (only 1: destr_bool).	0.0152440071106	1
Coq.Bool.Bool.Is_true_eq_right	40	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: auto with bool).	0.0199069976807	3
Coq.Bool.Bool.eqb_refl	40	0	synth with cache (only 1: destr_bool).	0.0142378807068	1
Coq.Bool.Bool.eqb_eq	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0232818126678	3
Coq.Bool.Bool.orb_prop_elim	40	1.0.4.4.4.0.2	synth with cache (only 1: destr_bool; only 1: left; only 1: apply H; only 1: intuition; only 1: intuition; only 1: left; only 1: apply H).	3.49854707718	5226
Coq.Bool.Bool.orb_prop_intro	40	7.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.0219039916992	9
Coq.Bool.Bool.andb_prop_intro	40	0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto).	0.0761108398438	4
Coq.Bool.Bool.andb_prop_elim	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.0791611671448	5
Coq.Bool.Bool.eq_bool_prop_intro	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0274629592896	3
Coq.Bool.Bool.eq_bool_prop_elim	40	0.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0244278907776	4
Coq.Bool.Bool.negb_prop_elim	40	0.0.0	synth with cache (only 1: destr_bool; only 1: auto; only 1: tauto).	0.0202698707581	3
Coq.Bool.Bool.negb_prop_intro	40	1.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.0172679424286	3
Coq.Bool.Bool.negb_prop_classical	40	0.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.0179550647736	2
Coq.Bool.Bool.negb_prop_involutive	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.02024102211	3
Coq.Bool.Bool.andb_if	40	1	synth with cache (only 1: destr_bool).	0.0191969871521	2
Coq.Bool.Bool.negb_if	40	0	synth with cache (only 1: destr_bool).	0.0134301185608	1
Coq.Bool.Bool.andb_lazy_alt	40	0	synth with cache (only 1: destr_bool).	0.0153179168701	1
Coq.Bool.Bool.orb_lazy_alt	40	0	synth with cache (only 1: reflexivity).	0.0113098621368	1
Coq.Bool.Bool.reflect_iff	40	3.0.0.0.2.12	synth with cache (only 1: red; only 1: intros A B []; only 1: auto; only 1: repeat split; only 1: intuition; only 1: discriminate).	1.92118215561	2293
Coq.Bool.Bool.iff_reflect	40	2.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0364918708801	15
Coq.Bool.Bool.reflect_dec	40	0.3.0.0	synth with cache (only 1: destruct 1; only 1: intuition; only 1: unfold not; only 1: intuition).	0.0268330574036	7
Coq.Bool.Bool.eqb_spec	40	1.0.0.0.0	synth with cache (only 1: repeat match goal with | p:(_ * _)%type |- _ => destruct p | b:bool |- _ => destruct b end; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0284359455109	6
Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_true	40	1.3.0	synth with cache (only 1: destr_bool; only 1: destruct H; only 1: auto).	0.0246250629425	7
Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_not_false	40
Coq.Bool.BoolEq.Bool_eq_dec.beq_false_not_eq	40
Coq.Bool.BoolEq.Bool_eq_dec.exists_beq_eq	40
Coq.Bool.BoolEq.Bool_eq_dec.not_eq_false_beq	40
Coq.Bool.BoolEq.Bool_eq_dec.eq_dec	40
Coq.Lists.ListSet.first_definitions.set_In_dec	40
Coq.Lists.ListSet.first_definitions.set_mem_ind	40
Coq.Lists.ListSet.first_definitions.set_mem_ind2	40
Coq.Lists.ListSet.first_definitions.set_mem_correct1	40	0.3.0.0.0.0.3.7.4.0.22.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: discriminate; only 1: simpl; only 1: intro; only 1: induction l; only 1: intro eq; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: auto with datatypes; only 1: elim (Aeq_dec a a0); only 1: auto; only 1: auto with datatypes).	25.5374588966	35577
Coq.Lists.ListSet.first_definitions.set_mem_correct2	40	0.0.0.1.4.0.0.1.1.2.0.2	synth with cache (only 1: unfold set_In; only 1: simple induction x; only 1: auto; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: unfold not; only 1: intro Hneg; only 1: intros [Hc1| Hc2]; only 1: auto with datatypes; only 1: auto with datatypes).	15.4015130997	10610
Coq.Lists.ListSet.first_definitions.set_mem_complete1	40
Coq.Lists.ListSet.first_definitions.set_mem_complete2	40
Coq.Lists.ListSet.first_definitions.set_add_intro1	40
Coq.Lists.ListSet.first_definitions.set_add_intro2	40
Coq.Lists.ListSet.first_definitions.set_add_intro	40	4	synth with cache (only 1: intuition).	0.157575845718	102
Coq.Lists.ListSet.first_definitions.set_add_elim	40
Coq.Lists.ListSet.first_definitions.set_add_elim2	40	0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: simple induction x; only 1: simpl; only 1: intros [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes; only 1: simpl; only 1: do 3 intro; only 1: elim (Aeq_dec b a0); only 1: tauto; only 1: intros H0 [| ]; only 1: auto with datatypes; only 1: tauto).	1.58774399757	778
Coq.Lists.ListSet.first_definitions.set_add_not_empty	40
Coq.Lists.ListSet.first_definitions.set_add_iff	40
Coq.Lists.ListSet.first_definitions.set_add_nodup	40
Coq.Lists.ListSet.first_definitions.set_remove_1	40	0.1.0.1.0.2.1.0.39	synth with cache (only 1: induction l; only 1: simpl; only 1: trivial; only 1: simpl; only 1: elim (Aeq_dec b a0); only 1: auto; only 1: intros H0 [| ]; only 1: tauto; only 1: auto with datatypes).	17.1942310333	19944
Coq.Lists.ListSet.first_definitions.set_remove_2	40
Coq.Lists.ListSet.first_definitions.set_remove_3	40
Coq.Lists.ListSet.first_definitions.set_remove_iff	40
Coq.Lists.ListSet.first_definitions.set_remove_nodup	40
Coq.Lists.ListSet.first_definitions.set_union_intro1	40
Coq.Lists.ListSet.first_definitions.set_union_intro2	40	1.0.2.0.5.0.0	synth with cache (only 1: simple induction y; only 1: simpl; only 1: destruct 1; only 1: simpl; only 1: intros a0 l H [Ha0a| Hal]; only 1: auto with datatypes; only 1: auto with datatypes).	1.32238888741	766
Coq.Lists.ListSet.first_definitions.set_union_intro	40	0.0.0.1.2.0.0	synth with cache (only 1: simple induction y; only 1: simpl; only 1: tauto; only 1: intros; only 1: elim H0; only 1: auto with datatypes; only 1: auto with datatypes).	0.086394071579	20
Coq.Lists.ListSet.first_definitions.set_union_elim	40
Coq.Lists.ListSet.first_definitions.set_union_iff	40
Coq.Lists.ListSet.first_definitions.set_union_nodup	40
Coq.Lists.ListSet.first_definitions.set_union_emptyL	40	0.0.0.0.0.0.0.0.1	synth with cache (only 1: simple induction x; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: generalize (set_add_elim _ _ _ H0); only 1: intros [H1| H1]; only 1: auto with datatypes; only 1: tauto).	0.057471036911	10
Coq.Lists.ListSet.first_definitions.set_union_emptyR	40	0.0.0.0	synth with cache (only 1: intros a x H; only 1: case (set_union_elim _ _ _ H); only 1: auto || contradiction; only 1: auto || contradiction).	0.021684885025	4
Coq.Lists.ListSet.first_definitions.set_inter_intro	40
Coq.Lists.ListSet.first_definitions.set_inter_elim1	40
Coq.Lists.ListSet.first_definitions.set_inter_elim2	40
Coq.Lists.ListSet.first_definitions.set_inter_elim	40	0.2.0.1.1	synth with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: intros; only 1: eauto with datatypes).	0.21782708168	58
Coq.Lists.ListSet.first_definitions.set_inter_iff	40
Coq.Lists.ListSet.first_definitions.set_inter_nodup	40
Coq.Lists.ListSet.first_definitions.set_diff_intro	40
Coq.Lists.ListSet.first_definitions.set_diff_elim1	40
Coq.Lists.ListSet.first_definitions.set_diff_elim2	40
Coq.Lists.ListSet.first_definitions.set_diff_iff	40
Coq.Lists.ListSet.first_definitions.set_diff_nodup	40
Coq.Lists.ListSet.first_definitions.set_diff_trivial	40	0.2.0.0.3.2	synth with cache (only 1: unfold set_In; only 1: intros a x y; only 1: eapply set_diff_elim2; only 1: eauto; only 1: eapply set_diff_elim1; only 1: eauto).	5.74546790123	1399
Coq.Lists.ListDec.Dec_in_Prop.In_decidable	40	8.0.3.10	synth with cache (only 1: induction l as [| a l IH]; only 1: intuition; only 1: simpl; only 1: intuition).	13.5755419731	1081
Coq.Lists.ListDec.Dec_in_Prop.incl_decidable	40
Coq.Lists.ListDec.Dec_in_Prop.NoDup_decidable	40
Coq.Lists.ListDec.Dec_in_Type.incl_dec	40
Coq.Lists.ListDec.Dec_in_Type.NoDup_dec	40
Coq.Lists.ListDec.uniquify_map	40
Coq.Lists.ListDec.uniquify	40
Coq.Lists.Streams.Streams.unfold_Stream	40	0.18.15	synth with cache (only 1: intro p; only 1: destruct p; only 1: reflexivity).	0.534600973129	1172
Coq.Lists.Streams.Streams.tl_nth_tl	40	1.0.0.7	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: trivial).	0.683902978897	365
Coq.Lists.Streams.Streams.Str_nth_tl_plus	40
Coq.Lists.Streams.Streams.Str_nth_plus	40
Coq.Lists.Streams.Streams.EqSt_reflex	40
Coq.Lists.Streams.Streams.sym_EqSt	40	2.2.7.5.0.4	synth with cache (only 1: intro x; only 1: coinduction ltac:(EqSt_reflex); only 1: symmetry; only 1: destruct H; only 1: trivial with datatypes; only 1: assumption).	1.69459605217	3622
Coq.Lists.Streams.Streams.trans_EqSt	40
Coq.Lists.Streams.Streams.eqst_ntheq	40
Coq.Lists.Streams.Streams.ntheq_eqst	40
Coq.Lists.Streams.Streams.Stream_Properties.ForAll_Str_nth_tl	40
Coq.Lists.Streams.Streams.Stream_Properties.Co_Induction_ForAll.ForAll_coind	40	7.8.2	synth with cache (only 1: coinduction ltac:(EqSt_reflex); only 1: auto; only 1: auto).	0.285460948944	344
Coq.Lists.Streams.Map.Str_nth_tl_map	40	0.0.0.0.0	synth with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0388958454132	5
Coq.Lists.Streams.Map.Str_nth_map	40	0.1.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros s; only 1: apply IHn).	0.0270628929138	5
Coq.Lists.Streams.Map.ForAll_map	40
Coq.Lists.Streams.Map.Exists_map	40
Coq.Lists.Streams.Zip.Str_nth_tl_zipWith	40	6.0.0.1.1.0	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros s; only 1: auto).	1.05395293236	704
Coq.Lists.Streams.Zip.Str_nth_zipWith	40	0.0.1.0.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: unfold Str_nth in *; only 1: simpl in *; only 1: apply IHn).	0.11620593071	7
Coq.Lists.List.Facts.nil_cons	40	10	synth with cache (only 1: discriminate).	0.109639167786	71
Coq.Lists.List.Facts.destruct_list	40
Coq.Lists.List.Facts.hd_error_tl_repr	40
Coq.Lists.List.Facts.hd_error_some_nil	40	0.0.0.0.12.10	synth with cache (only 1: intro H; only 1: destruct H; only 1: unfold hd_error, tl; only 1: firstorder  discriminate; only 1: intros; only 1: discriminate).	5.14016103745	6021
Coq.Lists.List.Facts.length_zero_iff_nil	40	0.12.2.9.7.3.7.3	synth with cache (only 1: split; only 1: intros; only 1: induction l as [| a tail]; only 1: reflexivity; only 1: simpl in *; only 1: now discriminate; only 1: inversion 1; only 1: reflexivity).	12.4279170036	18079
Coq.Lists.List.Facts.hd_error_nil	40	1	synth with cache (only 1: firstorder  discriminate).	0.0128262042999	2
Coq.Lists.List.Facts.hd_error_cons	40	2.0	synth with cache (only 1: unfold hd_error, tl; only 1: firstorder  discriminate).	0.0192308425903	4
Coq.Lists.List.Facts.in_eq	40	0.0	synth with cache (only 1: intros a r; only 1: firstorder  discriminate).	0.0200510025024	2
Coq.Lists.List.Facts.in_cons	40	1.2.4	synth with cache (only 1: destr_bool; only 1: right; only 1: trivial).	0.0823509693146	58
Coq.Lists.List.Facts.not_in_cons	40	7.3	synth with cache (only 1: simpl in *; only 1: intuition).	0.658257007599	168
Coq.Lists.List.Facts.in_nil	40	2.0.0	synth with cache (only 1: intro n; only 1: simpl; only 1: firstorder).	0.0220370292664	5
Coq.Lists.List.Facts.in_split	40
Coq.Lists.List.Facts.in_inv	40	0	synth with cache (only 1: auto).	0.0130269527435	1
Coq.Lists.List.Facts.in_dec	40
Coq.Lists.List.Facts.app_cons_not_nil	40	4.0.0.3.17	synth with cache (only 1: intros n IH; only 1: induction n; only 1: simpl; only 1: now discriminate; only 1: inversion 1).	2.47343993187	3511
Coq.Lists.List.Facts.app_nil_l	40	3.0	synth with cache (only 1: simpl; only 1: now destruct l).	0.0223460197449	5
Coq.Lists.List.Facts.app_nil_r	40
Coq.Lists.List.Facts.app_nil_end	40	0.0.0.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	0.0411818027496	7
Coq.Lists.List.Facts.app_assoc	40	0.0.3.4.0.0.1	synth with cache (only 1: induction l; only 1: intros a r; only 1: auto; only 1: intros; only 1: simpl; only 1: apply f_equal; only 1: auto).	1.67484211922	1295
Coq.Lists.List.Facts.app_assoc_reverse	40	0.0.0.0.0.0.0	synth with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.0466539859772	7
Coq.Lists.List.Facts.app_comm_cons	40	0	synth with cache (only 1: auto using app_assoc).	0.0155701637268	1
Coq.Lists.List.Facts.app_eq_nil	40	0.0.0.0.8	synth with cache (only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: now discriminate).	0.774964094162	350
Coq.Lists.List.Facts.app_eq_unit	40
Coq.Lists.List.Facts.app_inj_tail	40
Coq.Lists.List.Facts.app_length	40	0.0.1.1.3	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).	0.270354032516	82
Coq.Lists.List.Facts.in_app_or	40	8.1.0.0.6.9	synth with cache (only 1: intros n Hn; only 1: induction n; only 1: simpl; only 1: intuition; only 1: intros; only 1: firstorder  discriminate).	5.3972890377	5137
Coq.Lists.List.Facts.in_or_app	40	6.0.1.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	0.898082017899	559
Coq.Lists.List.Facts.in_app_iff	40
Coq.Lists.List.Facts.app_inv_head	40	1.16.1.1.0.4	synth with cache (only 1: induction l; only 1: simpl; only 1: now symmetry; only 1: simpl; only 1: inversion 1; only 1: auto).	37.6057040691	31227
Coq.Lists.List.Facts.app_inv_tail	40
Coq.Lists.List.Elts.nth_in_or_default	40
Coq.Lists.List.Elts.nth_S_cons	40	0.0.1	synth with cache (only 1: intros n l d; only 1: simpl; only 1: auto).	0.0267291069031	4
Coq.Lists.List.Elts.nth_default_eq	40
Coq.Lists.List.Elts.nth_In	40
Coq.Lists.List.Elts.In_nth	40
Coq.Lists.List.Elts.nth_overflow	40
Coq.Lists.List.Elts.nth_indep	40
Coq.Lists.List.Elts.app_nth1	40	0.0.5.0.0.0	synth with cache (only 1: induction l; only 1: inversion 1; only 1: simpl; only 1: destruct n; only 1: auto with arith; only 1: auto with arith).	0.378082990646	104
Coq.Lists.List.Elts.app_nth2	40	0.0.8.0.0.1.1.0.2.0	synth with cache (only 1: induction l; only 1: simpl; only 1: inversion 1; only 1: auto; only 1: auto with arith; only 1: intros l' d [| n]; only 1: simpl; only 1: now destruct l; only 1: simpl; only 1: auto with arith).	34.6813790798	18773
Coq.Lists.List.Elts.nth_split	40
Coq.Lists.List.Elts.nth_error_In	40
Coq.Lists.List.Elts.In_nth_error	40
Coq.Lists.List.Elts.nth_error_None	40
Coq.Lists.List.Elts.nth_error_Some	40
Coq.Lists.List.Elts.nth_error_split	40
Coq.Lists.List.Elts.nth_error_app1	40
Coq.Lists.List.Elts.nth_error_app2	40	0.0.0.1.0.3.1.0.0.4.0	synth with cache (only 1: revert l; only 1: revert n; only 1: induction n; only 1: intros [| a l] H; only 1: auto; only 1: now simpl; only 1: intros [| a l] H; only 1: auto; only 1: simpl in *; only 1: apply IHn; only 1: auto with arith).	11.5220580101	5541
Coq.Lists.List.Elts.nth_error_nth	40
Coq.Lists.List.Elts.nth_error_nth'	40	0.0.0.0.1.0.4.0.3.0	synth with cache (only 1: induction l; only 1: simpl; only 1: easy; only 1: intros [| n]; only 1: simpl; only 1: now auto with arith; only 1: simpl; only 1: intros; only 1: apply IHl; only 1: auto with arith).	13.1795608997	9024
Coq.Lists.List.Elts.remove_In	40
Coq.Lists.List.Elts.app_removelast_last	40
Coq.Lists.List.Elts.exists_last	40
Coq.Lists.List.Elts.removelast_app	40
Coq.Lists.List.Elts.count_occ_In	40
Coq.Lists.List.Elts.count_occ_not_In	40
Coq.Lists.List.Elts.count_occ_nil	40	2.0	synth with cache (only 1: simpl; only 1: split).	0.0222580432892	4
Coq.Lists.List.Elts.count_occ_inv_nil	40
Coq.Lists.List.Elts.count_occ_cons_eq	40
Coq.Lists.List.Elts.count_occ_cons_neq	40	0.0.0	synth with cache (only 1: intros H; only 1: simpl; only 1: now destruct (eq_dec x y)).	0.0305140018463	3
Coq.Lists.List.ListOps.rev_app_distr	40
Coq.Lists.List.ListOps.rev_unit	40
Coq.Lists.List.ListOps.rev_involutive	40
Coq.Lists.List.ListOps.in_rev	40
Coq.Lists.List.ListOps.rev_length	40
Coq.Lists.List.ListOps.rev_nth	40
Coq.Lists.List.ListOps.rev_append_rev	40
Coq.Lists.List.ListOps.rev_alt	40
Coq.Lists.List.ListOps.Reverse_Induction.rev_list_ind	40	5.0.16	synth with cache (only 1: induction l; only 1: trivial; only 1: auto with arith).	1.76235604286	2050
Coq.Lists.List.ListOps.Reverse_Induction.rev_ind	40
Coq.Lists.List.ListOps.concat_nil	40	0	synth with cache (only 1: split).	0.0136449337006	1
Coq.Lists.List.ListOps.concat_cons	40	0.0.0.0.0.0.0	synth with cache (only 1: induction x as [| a l IHl]; only 1: simpl; only 1: intros; only 1: auto; only 1: intro y; only 1: simpl; only 1: trivial).	0.046128988266	7
Coq.Lists.List.ListOps.concat_app	40
Coq.Lists.List.ListOps.list_eq_dec	40	12	synth with cache (only 1: decide equality).	0.277307033539	159
Coq.Lists.List.Map.map_cons	40	2.3	synth with cache (only 1: simpl; only 1: f_equal).	0.0201170444489	7
Coq.Lists.List.Map.in_map	40	1.0.1.0.0.0.0.11	synth with cache (only 1: induction l; only 1: intros a H; only 1: inversion_clear H; only 1: intros; only 1: simpl; only 1: firstorder; only 1: subst; only 1: intuition).	18.4281640053	12638
Coq.Lists.List.Map.in_map_iff	40	0.0.14.0.0.0	synth with cache (only 1: induction l; only 1: intro n; only 1: firstorder  (subst; auto); only 1: firstorder; only 1: subst; only 1: firstorder  (subst; auto)).	5.78180813789	4284
Coq.Lists.List.Map.map_length	40	0.0.0.2.0.0.0	synth with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: rewrite IHl; only 1: elim (length l); only 1: auto; only 1: auto).	0.0659849643707	17
Coq.Lists.List.Map.map_nth	40
Coq.Lists.List.Map.map_nth_error	40
Coq.Lists.List.Map.map_app	40	1.5.3.1.0.0.1.1	synth with cache (only 1: induction l; only 1: intros l2; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: intros l2; only 1: f_equal; only 1: trivial).	10.1851630211	7753
Coq.Lists.List.Map.map_rev	40
Coq.Lists.List.Map.map_eq_nil	40	3.0.1.1.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: intros; only 1: simpl in H; only 1: now f_equal).	0.544807910919	164
Coq.Lists.List.Map.count_occ_map	40
Coq.Lists.List.Map.in_flat_map	40
Coq.Lists.List.flat_map_concat_map	40	7.2.0.1.0.1	synth with cache (only 1: intros l2; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: now f_equal).	1.4599199295	1094
Coq.Lists.List.concat_map	40
Coq.Lists.List.map_id	40	1.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	0.0393009185791	7
Coq.Lists.List.map_map	40	1.0.1.0.0.5.5	synth with cache (only 1: intros ? ? ? Fl Fr; only 1: induction l as [| x l]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: auto).	2.55598902702	1588
Coq.Lists.List.map_ext_in	40
Coq.Lists.List.ext_in_map	40
Coq.Lists.List.map_ext_in_iff	40
Coq.Lists.List.map_ext	40	0.0.1.0.0.2.0	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: rewrite H by intuition; only 1: auto).	0.0517818927765	10
Coq.Lists.List.Fold_Left_Recursor.fold_left_app	40	4.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0375649929047	9
Coq.Lists.List.fold_left_length	40
Coq.Lists.List.fold_right_app	40	1.0.0.3.0.0.1.6	synth with cache (only 1: intros a b c; only 1: induction l; only 1: intros; only 1: auto; only 1: firstorder; only 1: simpl; only 1: rewrite IHl; only 1: auto).	2.98491287231	1789
Coq.Lists.List.fold_left_rev_right	40
Coq.Lists.List.fold_symmetric	40
Coq.Lists.List.Bool.existsb_exists	40
Coq.Lists.List.Bool.existsb_nth	40
Coq.Lists.List.Bool.existsb_app	40
Coq.Lists.List.Bool.forallb_forall	40
Coq.Lists.List.Bool.forallb_app	40	1.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l1; only 1: intros l2; only 1: simpl; only 1: solve [ auto ]; only 1: intros l2; only 1: simpl; only 1: case (f a); only 1: simpl; only 1: solve [ auto ]; only 1: simpl; only 1: solve [ auto ]).	0.873785972595	313
Coq.Lists.List.Bool.filter_In	40
Coq.Lists.List.Bool.filter_app	40	0.0.0.0.0.2.0.0.0.0.29	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: case_eq (f a); only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: f_equal; only 1: rewrite IHl; only 1: auto).	8.35133099556	10607
Coq.Lists.List.Bool.concat_filter_map	40
Coq.Lists.List.Bool.find_some	40
Coq.Lists.List.Bool.find_none	40	0.0.0.5.0.3.0.0.0	synth with cache (only 1: induction l as [| a l IH]; only 1: simpl; only 1: easy; only 1: simpl; only 1: case_eq (f a); only 1: congruence; only 1: intros Ha Eq; only 1: intuition; only 1: intuition congruence).	7.18770718575	2221
Coq.Lists.List.Bool.partition_cons1	40	0.1.1.0.16.1.0.1	synth with cache (only 1: firstorder; only 1: simpl; only 1: case_eq (f a); only 1: rewrite H; only 1: case_eq (f a); only 1: easy; only 1: easy; only 1: intuition congruence).	8.69050192833	6282
Coq.Lists.List.Bool.partition_cons2	40	0.0	synth with cache (only 1: simpl; only 1: now intros -> ->).	0.0230300426483	2
Coq.Lists.List.Bool.partition_length	40
Coq.Lists.List.Bool.partition_inv_nil	40
Coq.Lists.List.Bool.elements_in_partition	40
Coq.Lists.List.Filtering.filter_map	40
Coq.Lists.List.Filtering.filter_ext_in	40	0.1.1.0.7.0.0.0.3	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto; only 1: auto).	7.00708007812	4674
Coq.Lists.List.Filtering.ext_in_filter	40
Coq.Lists.List.Filtering.filter_ext_in_iff	40	1.1.1.5.1.1	synth with cache (only 1: induction l as [| a l IHl]; only 1: firstorder; only 1: rewrite filter_map; only 1: split; only 1: apply ext_in_map; only 1: apply map_ext_in).	5.7093269825	2456
Coq.Lists.List.Filtering.filter_ext	40	0.0.0.0	synth with cache (only 1: intros f g l H; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).	0.0274429321289	4
Coq.Lists.List.ListPairs.in_split_l	40
Coq.Lists.List.ListPairs.in_split_r	40	0.0.0.1.0.0.0.0.0.0.0.1.0	synth with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: intros; only 1: destruct p; only 1: destruct a; only 1: destruct (split l); only 1: simpl in *; only 1: destruct H; only 1: injection H; only 1: auto; only 1: right; only 1: apply (IHl (a0, b) H)).	8.36150693893	3357
Coq.Lists.List.ListPairs.split_nth	40
Coq.Lists.List.ListPairs.split_length_l	40
Coq.Lists.List.ListPairs.split_length_r	40	0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).	0.0542869567871	8
Coq.Lists.List.ListPairs.split_combine	40
Coq.Lists.List.ListPairs.combine_split	40
Coq.Lists.List.ListPairs.in_combine_l	40
Coq.Lists.List.ListPairs.in_combine_r	40
Coq.Lists.List.ListPairs.combine_length	40	1.0.0.0.3.1.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: easy; only 1: intros [| n]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	1.93474388123	789
Coq.Lists.List.ListPairs.combine_nth	40
Coq.Lists.List.ListPairs.in_prod_aux	40	0.0.8	synth with cache (only 1: induction l as [| v l IHl]; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	0.122844934464	85
Coq.Lists.List.ListPairs.in_prod	40
Coq.Lists.List.ListPairs.in_prod_iff	40
Coq.Lists.List.ListPairs.prod_length	40
Coq.Lists.List.length_order.lel_refl	40	31	synth with cache (only 1: RelationClasses.simpl_relation).	0.805655956268	1237
Coq.Lists.List.length_order.lel_trans	40
Coq.Lists.List.length_order.lel_cons_cons	40	1.0.0.0	synth with cache (only 1: unfold lel; only 1: simpl; only 1: intros; only 1: auto with arith).	0.0985698699951	16
Coq.Lists.List.length_order.lel_cons	40	0.0.0	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0223870277405	3
Coq.Lists.List.length_order.lel_tail	40	0.0.1	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0238800048828	4
Coq.Lists.List.length_order.lel_nil	40	7.0.10.0.7	synth with cache (only 1: destruct l' as [| y l']; only 1: trivial; only 1: unfold lel; only 1: simpl; only 1: inversion 1).	28.5642051697	13571
Coq.Lists.List.SetIncl.incl_refl	40	1	synth with cache (only 1: solve [ auto ]).	0.0162169933319	2
Coq.Lists.List.SetIncl.incl_tl	40	10.6	synth with cache (only 1: intros n m p; only 1: intuition).	1.14810490608	817
Coq.Lists.List.SetIncl.incl_tran	40	1	synth with cache (only 1: auto).	0.0135109424591	2
Coq.Lists.List.SetIncl.incl_appl	40	0	synth with cache (only 1: auto with datatypes).	0.0135381221771	1
Coq.Lists.List.SetIncl.incl_appr	40	0	synth with cache (only 1: auto with datatypes).	0.0142159461975	1
Coq.Lists.List.SetIncl.incl_cons	40	28.0	synth with cache (only 1: intros a b l H; only 1: firstorder  (subst; auto)).	4.48942494392	5342
Coq.Lists.List.SetIncl.incl_app	40	2.1.1.0.5	synth with cache (only 1: intros l m n; only 1: elim l; only 1: auto; only 1: intro H; only 1: firstorder).	5.20922994614	681
Coq.Lists.List.Cutting.firstn_nil	40	0.0.0.0.35	synth with cache (only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity).	0.353410005569	786
Coq.Lists.List.Cutting.firstn_cons	40	0.1	synth with cache (only 1: simpl; only 1: auto).	0.0202128887177	3
Coq.Lists.List.Cutting.firstn_all	40	4.0.0.1.4	synth with cache (only 1: induction l as [| x l IH]; only 1: now simpl; only 1: simpl; only 1: f_equal; only 1: now simpl).	0.526959180832	205
Coq.Lists.List.Cutting.firstn_all2	40
Coq.Lists.List.Cutting.firstn_O	40	0	synth with cache (only 1: now simpl).	0.0150768756866	1
Coq.Lists.List.Cutting.firstn_le_length	40
Coq.Lists.List.Cutting.firstn_length_le	40
Coq.Lists.List.Cutting.firstn_app	40
Coq.Lists.List.Cutting.firstn_app_2	40
Coq.Lists.List.Cutting.firstn_firstn	40
Coq.Lists.List.Cutting.firstn_skipn_comm	40
Coq.Lists.List.Cutting.skipn_firstn_comm	40
Coq.Lists.List.Cutting.skipn_O	40	0.0.0.0	synth with cache (only 1: induction l as [| a l IHl]; only 1: now simpl; only 1: simpl; only 1: auto).	0.0303812026978	4
Coq.Lists.List.Cutting.skipn_nil	40	0.0.0.2	synth with cache (only 1: intros; only 1: induction n; only 1: now simpl; only 1: now simpl).	0.0320408344269	6
Coq.Lists.List.Cutting.skipn_cons	40	0	synth with cache (only 1: now simpl).	0.0163149833679	1
Coq.Lists.List.Cutting.skipn_none	40	3.0.2.2	synth with cache (only 1: intros; only 1: induction l as [| ? ? H]; only 1: now simpl; only 1: now simpl).	0.112776041031	45
Coq.Lists.List.Cutting.skipn_all2	40	1.0.0.0.0.4.0.0.0	synth with cache (only 1: induction n as [| k iHk]; only 1: intro; only 1: now destruct l; only 1: destruct l; only 1: simpl; only 1: now reflexivity; only 1: simpl; only 1: intro H; only 1: auto with arith).	4.23320102692	1666
Coq.Lists.List.Cutting.firstn_skipn	40
Coq.Lists.List.Cutting.firstn_length	40	2.0.1.0.0.0.0.0.4	synth with cache (only 1: induction n as [| k iHk]; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct l as [| x xs]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto with arith).	2.73709511757	1242
Coq.Lists.List.Cutting.skipn_length	40	1.0.0.0.0.3.3	synth with cache (only 1: induction n; only 1: now induction l; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	3.50185799599	1366
Coq.Lists.List.Cutting.skipn_all	40	1.2.0.2	synth with cache (only 1: induction l as [| ? ? H]; only 1: now simpl; only 1: simpl; only 1: auto).	0.0316350460052	9
Coq.Lists.List.Cutting.skipn_app	40	0.0.0.5.0.0.0.0.0	synth with cache (only 1: induction n as [| k iHk]; only 1: intros l1 l2; only 1: now simpl; only 1: intros l1 l2; only 1: destruct l1 as [| x xs]; only 1: now rewrite 2!app_nil_l, <- minus_n_O; only 1: rewrite <- app_comm_cons; only 1: simpl; only 1: apply iHk).	1.81544494629	759
Coq.Lists.List.Cutting.firstn_skipn_rev	40
Coq.Lists.List.Cutting.firstn_rev	40
Coq.Lists.List.Cutting.skipn_rev	40
Coq.Lists.List.Cutting.removelast_firstn	40
Coq.Lists.List.Cutting.firstn_removelast	40
Coq.Lists.List.Combining.combine_nil	40	0.2.6.3	synth with cache (only 1: induction l; only 1: split; only 1: simpl; only 1: auto).	0.320476055145	243
Coq.Lists.List.Combining.combine_firstn_l	40	3.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: destruct l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: trivial).	2.19236397743	923
Coq.Lists.List.Combining.combine_firstn_r	40	0.0.0.0.0.1.0.0.0.0.1.2.3.0	synth with cache (only 1: induction l as [| x l IHl]; only 1: intros; only 1: simpl; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: intros l'; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: simpl; only 1: specialize IHl with (l' := l'); only 1: rewrite <- IHl; only 1: reflexivity).	8.94670796394	5218
Coq.Lists.List.Combining.combine_firstn	40
Coq.Lists.List.Add.Add_app	40
Coq.Lists.List.Add.Add_split	40
Coq.Lists.List.Add.Add_in	40	2.5.1.0.1.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: intuition; only 1: intros; only 1: simpl in *; only 1: firstorder  (subst; auto)).	5.43819689751	2037
Coq.Lists.List.Add.Add_length	40	0.0.0.1.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl in *; only 1: auto).	0.0422620773315	6
Coq.Lists.List.Add.Add_inv	40
Coq.Lists.List.Add.incl_Add_inv	40
Coq.Lists.List.ReDun.NoDup_Add	40
Coq.Lists.List.ReDun.NoDup_remove	40
Coq.Lists.List.ReDun.NoDup_remove_1	40
Coq.Lists.List.ReDun.NoDup_remove_2	40	0.0.18.5	synth with cache (only 1: revert l; only 1: intros l1; only 1: apply NoDup_Add; only 1: apply Add_app).	4.25236392021	4194
Coq.Lists.List.ReDun.NoDup_cons_iff	40	0.0.0.0	synth with cache (only 1: split; only 1: inversion_clear 1; only 1: now split; only 1: now constructor).	0.0496790409088	4
Coq.Lists.List.ReDun.nodup_fixed_point	40
Coq.Lists.List.ReDun.nodup_In	40
Coq.Lists.List.ReDun.NoDup_nodup	40
Coq.Lists.List.ReDun.nodup_inv	40
Coq.Lists.List.ReDun.NoDup_count_occ	40
Coq.Lists.List.ReDun.NoDup_count_occ'	40
Coq.Lists.List.ReDun.NoDup_nth_error	40
Coq.Lists.List.ReDun.NoDup_nth	40
Coq.Lists.List.ReDun.NoDup_incl_length	40
Coq.Lists.List.ReDun.NoDup_length_incl	40
Coq.Lists.List.NoDup_map_inv	40
Coq.Lists.List.NatSeq.seq_length	40
Coq.Lists.List.NatSeq.seq_nth	40
Coq.Lists.List.NatSeq.seq_shift	40
Coq.Lists.List.NatSeq.in_seq	40
Coq.Lists.List.NatSeq.seq_NoDup	40
Coq.Lists.List.NatSeq.seq_app	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_exists	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_nil	40	0.1.0.1	synth with cache (only 1: split; only 1: firstorder; only 1: inversion H; only 1: firstorder).	0.0324778556824	6
Coq.Lists.List.Exists_Forall.One_predicate.Exists_cons	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_dec	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_forall	40	1.0.0.0.10.0.1.0.0.1.0	synth with cache (only 1: split; only 1: induction 1; only 1: intros a H; only 1: inversion_clear H; only 1: intro y; only 1: intro HF; only 1: firstorder  (subst; auto); only 1: induction l; only 1: firstorder; only 1: simpl; only 1: auto).	20.5827538967	18262
Coq.Lists.List.Exists_Forall.One_predicate.Forall_inv	40	0.1.0.9.10	synth with cache (only 1: intro H; only 1: intro HF; only 1: inversion 1; only 1: subst; only 1: auto).	4.36626386642	4719
Coq.Lists.List.Exists_Forall.One_predicate.Forall_rect	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_dec	40
Coq.Lists.List.Exists_Forall.Forall_inv_tail	40	0.3	synth with cache (only 1: inversion 1; only 1: trivial).	0.0260190963745	5
Coq.Lists.List.Exists_Forall.Exists_impl	40	1.0.2.7.0.2.11.1.8.8	synth with cache (only 1: intro Pdec; only 1: intros y H0 H1; only 1: intro H; only 1: elim H; only 1: firstorder; only 1: constructor; only 1: auto; only 1: intro; only 1: firstorder; only 1: now apply Exists_cons_tl).	25.4608850479	36827
Coq.Lists.List.Exists_Forall.Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall.Exists_Forall_neg	40
Coq.Lists.List.Exists_Forall.neg_Forall_Exists_neg	40	0.1.3.0.7.1.0	synth with cache (only 1: intro Pdec; only 1: rewrite Forall_forall, Exists_exists; only 1: induction l as [| a l IH]; only 1: firstorder; only 1: destruct (Pdec a) as [Ha| Ha]; only 1: firstorder  (subst; auto); only 1: firstorder).	39.9403011799	3001
Coq.Lists.List.Exists_Forall.Forall_Exists_dec	40
Coq.Lists.List.Exists_Forall.Forall_impl	40	10.6.15.10.0.0	synth with cache (only 1: intros P Q H xs H0; only 1: induction H0; only 1: constructor; only 1: constructor; only 1: auto; only 1: firstorder).	11.5072510242	22193
Coq.Lists.List.Forall2.Forall2_refl	40	2	synth with cache (only 1: auto).	0.0141439437866	3
Coq.Lists.List.Forall2.Forall2_app_inv_l	40
Coq.Lists.List.Forall2.Forall2_app_inv_r	40
Coq.Lists.List.Forall2.Forall2_app	40
Coq.Lists.List.ForallPairs.ForallOrdPairs_In	40
Coq.Lists.List.ForallPairs.ForallPairs_ForallOrdPairs	40
Coq.Lists.List.ForallPairs.ForallOrdPairs_ForallPairs	40
Coq.Lists.List.Repeat.repeat_length	40	0.0.0.1.1	synth with cache (only 1: induction n as [| n IH]; only 1: simpl; only 1: reflexivity; only 1: simpl in *; only 1: now f_equal).	0.0381920337677	7
Coq.Lists.List.Repeat.repeat_spec	40	1.1.0.1.0.3.25	synth with cache (only 1: induction n; only 1: destruct 1; only 1: simpl; only 1: intros [H| H]; only 1: subst; only 1: trivial; only 1: auto).	3.40224099159	5329
Coq.Lists.SetoidPermutation.Permutation.Equivalence_instance_0	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons	40	0.0.2.1	synth with cache (only 1: repeat intro; only 1: apply permA_skip; only 1: auto; only 1: intuition).	0.0371639728546	7
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_head	40	0.0.0.2.2	synth with cache (only 1: induction l; only 1: intuition; only 1: intros; only 1: repeat rewrite <- app_comm_cons; only 1: intuition).	0.293655872345	66
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_tail	40	0.0.0.0.0.0.0.0.3	synth with cache (only 1: induction 1; only 1: easy; only 1: now apply permA_skip; only 1: etransitivity; only 1: rewrite <- !app_comm_cons; only 1: now apply permA_swap; only 1: rewrite !app_comm_cons; only 1: now apply PermutationA_app_head; only 1: do 2 (etransitivity; try eassumption)).	1.18434500694	332
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_append	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_comm	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_app	40	0.1.7.1	synth with cache (only 1: intuition; only 1: rewrite H; only 1: rewrite !app_comm_cons; only 1: now rewrite PermutationA_cons_append, <- app_assoc).	0.679727077484	196
Coq.Lists.SetoidPermutation.Permutation.PermutationA_middle	40	0	synth with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).	0.0251069068909	1
Coq.Lists.SetoidPermutation.Permutation.PermutationA_equivlistA	40
Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_PermutationA	40
Coq.Lists.SetoidPermutation.Permutation.Permutation_eqlistA_commute	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_decompose	40
Coq.Lists.SetoidPermutation.Permutation.Permutation_PermutationA	40
Coq.Lists.SetoidPermutation.Permutation.eqlistA_PermutationA	40	1.0.0	synth with cache (only 1: induction 1; only 1: intuition; only 1: auto).	0.0313670635223	4
Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_decompose	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_preserves_NoDupA	40
Coq.Lists.StreamMemo.MemoFunction.memo_get_correct	40
Coq.Lists.StreamMemo.MemoFunction.imemo_get_correct	40
Coq.Lists.StreamMemo.DependentMemoFunction.dmemo_get_correct	40
Coq.Lists.StreamMemo.DependentMemoFunction.dimemo_get_correct	40
Coq.Lists.SetoidList.Type_with_equality.InA_altdef	40	0.1.2.0.5.2.2.1.0.1	synth with cache (only 1: intros; only 1: split; only 1: induction 1 as [| a l [| ]]; only 1: auto; only 1: auto; only 1: firstorder; only 1: induction 1; only 1: constructor; only 1: auto; only 1: now constructor).	8.08179211617	8461
Coq.Lists.SetoidList.Type_with_equality.InA_cons	40	0.0.0.0.0.1.0.3	synth with cache (only 1: intros; only 1: split; only 1: inversion 1; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).	0.674455881119	156
Coq.Lists.SetoidList.Type_with_equality.InA_nil	40	5.2.0.3.1	synth with cache (only 1: split; only 1: intro H; only 1: inversion_clear H; only 1: intros H; only 1: inversion H).	0.807833194733	618
Coq.Lists.SetoidList.Type_with_equality.InA_alt	40	0.3.0.0.0.0.8.0.1	synth with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	19.8248579502	10291
Coq.Lists.SetoidList.Type_with_equality.NoDupA_altdef	40
Coq.Lists.SetoidList.Type_with_equality.incl_nil	40	18	synth with cache (only 1: inversion 1).	0.215390920639	145
Coq.Lists.SetoidList.Type_with_equality.eqlistA_altdef	40
Coq.Lists.SetoidList.Type_with_equality.equivlist_equiv	40	32	synth with cache (only 1: firstorder).	0.353420972824	529
Coq.Lists.SetoidList.Type_with_equality.eqlistA_equiv	40
Coq.Lists.SetoidList.Type_with_equality.eqlistA_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.InA_compat	40
Coq.Lists.SetoidList.Type_with_equality.InA_eqA	40	0.0.0.3.1.2.0	synth with cache (only 1: intros x y z H; only 1: induction 1; only 1: constructor; only 1: transitivity y; only 1: auto; only 1: auto; only 1: auto).	1.48505592346	298
Coq.Lists.SetoidList.Type_with_equality.In_InA	40	1.0.5	synth with cache (only 1: firstorder; only 1: rewrite InA_alt; only 1: firstorder).	0.122080802917	27
Coq.Lists.SetoidList.Type_with_equality.InA_split	40
Coq.Lists.SetoidList.Type_with_equality.InA_app	40
Coq.Lists.SetoidList.Type_with_equality.InA_app_iff	40
Coq.Lists.SetoidList.Type_with_equality.InA_rev	40
Coq.Lists.SetoidList.Type_with_equality.InA_singleton	40	0.0.3	synth with cache (only 1: intuition; only 1: invlist InA; only 1: auto).	0.0367159843445	6
Coq.Lists.SetoidList.Type_with_equality.InA_double_head	40	0.0	synth with cache (only 1: do 2 rewrite InA_alt; only 1: firstorder).	0.12729716301	2
Coq.Lists.SetoidList.Type_with_equality.InA_permute_heads	40	0.0	synth with cache (only 1: do 2 rewrite InA_alt; only 1: firstorder).	0.21946310997	2
Coq.Lists.SetoidList.Type_with_equality.InA_app_idem	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_app	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_rev	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_split	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_swap	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_singleton	40	1.1.0.8.0	synth with cache (only 1: constructor; only 1: rewrite InA_altdef, Exists_exists; only 1: intros (y, (H4, H5)); only 1: intuition; only 1: constructor).	0.432281970978	152
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_proper	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_proper	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_nil	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_nil_eq	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_double_head	40	0.0.1	synth with cache (only 1: intros E; only 1: rewrite !InA_cons; only 1: tauto).	0.0594689846039	4
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_permute_heads	40	1.0.1.0.0.3.19	synth with cache (only 1: induction l as [| a l' Hrec]; only 1: intros E; only 1: rewrite !InA_cons; only 1: tauto; only 1: intro; only 1: rewrite !InA_cons; only 1: tauto).	4.22605800629	1159
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_idem	40	0.0.10	synth with cache (only 1: intro; only 1: rewrite InA_app_iff; only 1: tauto).	0.0784199237823	47
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_NoDupA_split	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_eqlistA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.ForallOrdPairs_inclA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_commutes_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_equivlistA_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_add_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_commutes	40	1.0.0.0.0.7.0.0.2.1.1	synth with cache (only 1: induction s1; only 1: simpl; only 1: intros; only 1: auto with relations; only 1: simpl; only 1: intros; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: apply IHs1; only 1: auto with relations).	5.35617995262	2823
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_add	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_eqlistA2	40	0.0.1.0.0.0.1.16.34	synth with cache (only 1: intros l1 l2; only 1: intros ND Incl FOP; only 1: induction 1; only 1: simpl; only 1: auto with relations; only 1: simpl; only 1: apply Comp; only 1: auto; only 1: auto).	36.1376891136	10635
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_commutes_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_equivlistA_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_add_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_commutes2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_equivlistA2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_add2	40
Coq.Lists.SetoidList.Type_with_equality.Remove.InA_dec	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_filter	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_InA	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_NoDupA	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.InfA_ltA	40
Coq.Lists.SetoidList.Type_with_equality.InfA_compat	40
Coq.Lists.SetoidList.Type_with_equality.InfA_eqA	40
Coq.Lists.SetoidList.Type_with_equality.SortA_InfA_InA	40
Coq.Lists.SetoidList.Type_with_equality.In_InfA	40	3.1.1.0.0	synth with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: constructor; only 1: intuition).	0.174077987671	18
Coq.Lists.SetoidList.Type_with_equality.InA_InfA	40	0.0.1.0.1.0	synth with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intros; only 1: constructor; only 1: auto).	0.0467400550842	8
Coq.Lists.SetoidList.Type_with_equality.InfA_alt	40
Coq.Lists.SetoidList.Type_with_equality.InfA_app	40	1.0.1.1.2.22.6	synth with cache (only 1: intros H; only 1: induction 1; only 1: intros H; only 1: eauto; only 1: intros; only 1: constructor; only 1: eauto).	19.0573420525	15944
Coq.Lists.SetoidList.Type_with_equality.SortA_app	40
Coq.Lists.SetoidList.Type_with_equality.SortA_NoDupA	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_length	40	1.2.0.15.11	synth with cache (only 1: intro; only 1: induction 1; only 1: constructor; only 1: simpl; only 1: intuition).	16.2956600189	17351
Coq.Lists.SetoidList.Type_with_equality.EqlistA.app_eqlistA_compat	40	0.0.3.1.0.1.2.2.8	synth with cache (only 1: induction 1; only 1: induction 1; only 1: constructor; only 1: simpl; only 1: auto; only 1: simpl; only 1: constructor; only 1: auto; only 1: auto).	11.2416388988	1977
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_app	40	0.1.0.0.0.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: intuition; only 1: simpl; only 1: auto).	0.0548939704895	7
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev_app	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.rev_eqlistA_compat	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev	40	1.0.3.1.1.3	synth with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: apply eqlistA_rev_app; only 1: congruence; only 1: auto).	0.972935199738	396
Coq.Lists.SetoidList.Type_with_equality.EqlistA.SortA_equivlistA_eqlistA	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_sort	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_InA	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_split	40
Coq.Lists.SetoidList.Find.findA_NoDupA	40
Coq.NArith.BinNat.N.eq_dec	40
Coq.NArith.BinNat.N.discr	40
Coq.NArith.BinNat.N.peano_rect_base	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: revert P a f; only 1: intros; only 1: revert P a f; only 1: intros; only 1: revert P a f; only 1: intros; only 1: revert P a f; only 1: intros; only 1: now f_equal).	0.0387630462646	11
Coq.NArith.BinNat.N.peano_rect_succ	40
Coq.NArith.BinNat.N.peano_rec_base	40	0	synth with cache (only 1: reflexivity).	0.00888299942017	1
Coq.NArith.BinNat.N.peano_rec_succ	40	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).	0.0255680084229	5
Coq.NArith.BinNat.N.bi_induction	40
Coq.NArith.BinNat.N.recursion_wd	40
Coq.NArith.BinNat.N.recursion_0	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0107970237732	2
Coq.NArith.BinNat.N.recursion_succ	40
Coq.NArith.BinNat.N.one_succ	40	0	synth with cache (only 1: trivial).	0.00754809379578	1
Coq.NArith.BinNat.N.two_succ	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.00945591926575	2
Coq.NArith.BinNat.N.pred_0	40	0	synth with cache (only 1: trivial).	0.0068519115448	1
Coq.NArith.BinNat.N.pos_pred_spec	40	0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).	0.02201795578	6
Coq.NArith.BinNat.N.succ_pos_spec	40	0.0.5	synth with cache (only 1: induction n; only 1: reflexivity; only 1: reflexivity).	0.0142331123352	8
Coq.NArith.BinNat.N.pos_pred_succ	40	0.0.0.0.0.0.0.0.0.0.2.1.0.0.0.0.6	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	23.5762579441	13355
Coq.NArith.BinNat.N.succ_pos_pred	40	0.0.0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: reflexivity).	4.76452517509	2289
Coq.NArith.BinNat.N.pred_succ	40	0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Pos.pred_N_succ).	0.0127220153809	3
Coq.NArith.BinNat.N.pred_sub	40	7.0.6	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct p).	0.413027048111	221
Coq.NArith.BinNat.N.succ_0_discr	40	2.11.0	synth with cache (only 1: destruct n; only 1: discriminate; only 1: now destruct p).	0.331403970718	297
Coq.NArith.BinNat.N.add_0_l	40	0.0.0.0.0.1.0.0	synth with cache (only 1: destruct n; only 1: auto; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: reflexivity).	0.175544977188	9
Coq.NArith.BinNat.N.add_succ_l	40
Coq.NArith.BinNat.N.sub_0_r	40	0.4.1.1	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: auto).	0.170875072479	17
Coq.NArith.BinNat.N.sub_succ_r	40
Coq.NArith.BinNat.N.mul_0_l	40	0	synth with cache (only 1: reflexivity).	0.0078661441803	1
Coq.NArith.BinNat.N.mul_succ_l	40
Coq.NArith.BinNat.N.eqb_eq	40
Coq.NArith.BinNat.N.ltb_lt	40
Coq.NArith.BinNat.N.leb_le	40
Coq.NArith.BinNat.N.compare_eq_iff	40
Coq.NArith.BinNat.N.compare_lt_iff	40	0.0.0.0.0	synth with cache (only 1: unfold ltb, lt; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	0.0207629203796	5
Coq.NArith.BinNat.N.compare_le_iff	40	0.0	synth with cache (only 1: unfold leb, le; only 1: apply iff_refl).	0.0118799209595	2
Coq.NArith.BinNat.N.compare_antisym	40
Coq.NArith.BinNat.N.min_l	40
Coq.NArith.BinNat.N.min_r	40
Coq.NArith.BinNat.N.max_l	40
Coq.NArith.BinNat.N.max_r	40	0.1.0.0.0.0	synth with cache (only 1: unfold max, le; only 1: rewrite compare_antisym; only 1: case compare_spec; only 1: trivial; only 1: now destruct 2; only 1: trivial).	0.0258228778839	7
Coq.NArith.BinNat.N.lt_succ_r	40
Coq.NArith.BinNat.N.double_spec	40	5.1.13	synth with cache (only 1: nzinduct n; only 1: reflexivity; only 1: auto with *).	2.45031094551	437
Coq.NArith.BinNat.N.succ_double_spec	40	0.0.0.2.8.2	synth with cache (only 1: simpl; only 1: unfold succ, add; only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: trivial).	20.760848999	5810
Coq.NArith.BinNat.N.double_add	40	0.0.0.0.1.0.1.0.0	synth with cache (only 1: destruct n, m; only 1: now nzsimpl; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: unfold succ, add; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	0.612701892853	200
Coq.NArith.BinNat.N.succ_double_add	40	8.0.0.0	synth with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: now destruct n, m).	2.23387098312	263
Coq.NArith.BinNat.N.double_mul	40	0.1.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0334680080414	9
Coq.NArith.BinNat.N.succ_double_mul	40	2.7	synth with cache (only 1: rewrite add_comm; only 1: now destruct n, m).	2.18547296524	476
Coq.NArith.BinNat.N.div2_double	40	0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.0159530639648	3
Coq.NArith.BinNat.N.div2_succ_double	40	0	synth with cache (only 1: now destruct n).	0.00865888595581	1
Coq.NArith.BinNat.N.double_inj	40
Coq.NArith.BinNat.N.succ_double_inj	40
Coq.NArith.BinNat.N.succ_double_lt	40
Coq.NArith.BinNat.N.double_lt_mono	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intro H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: assumption).	0.0458948612213	11
Coq.NArith.BinNat.N.double_le_mono	40
Coq.NArith.BinNat.N.succ_double_lt_mono	40	0.0.0.0.0.0.0.0.5	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.805040121078	409
Coq.NArith.BinNat.N.succ_double_le_mono	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.0347130298615	9
Coq.NArith.BinNat.N.compare_0_r	40	5.15	synth with cache (only 1: inversion 1; only 1: false_hyp H nlt_0_r).	0.310307025909	298
Coq.NArith.BinNat.N.pow_0_r	40	0.1	synth with cache (only 1: simpl; only 1: trivial).	0.0116539001465	3
Coq.NArith.BinNat.N.pow_succ_r	40
Coq.NArith.BinNat.N.pow_neg_r	40	26	synth with cache (only 1: now destruct p).	8.40511703491	6031
Coq.NArith.BinNat.N.square_spec	40
Coq.NArith.BinNat.N.size_log2	40
Coq.NArith.BinNat.N.size_gt	40
Coq.NArith.BinNat.N.size_le	40
Coq.NArith.BinNat.N.log2_spec	40
Coq.NArith.BinNat.N.log2_nonpos	40	0.0.0.2.5.0	synth with cache (only 1: intro H; only 1: destruct n as [| [n| n| ]]; only 1: reflexivity; only 1: easy'; only 1: easy; only 1: easy).	0.750169038773	452
Coq.NArith.BinNat.N.even_spec	40
Coq.NArith.BinNat.N.odd_spec	40
Coq.NArith.BinNat.N.pos_div_eucl_spec	40
Coq.NArith.BinNat.N.div_eucl_spec	40
Coq.NArith.BinNat.N.div_mod'	40
Coq.NArith.BinNat.N.div_mod	40	0.10.0.1	synth with cache (only 1: generalize (div_eucl_spec a b); only 1: unfold div, modulo; only 1: intros H; only 1: now destruct div_eucl).	2.05685687065	1041
Coq.NArith.BinNat.N.pos_div_eucl_remainder	40
Coq.NArith.BinNat.N.mod_lt	40
Coq.NArith.BinNat.N.mod_bound_pos	40
Coq.NArith.BinNat.N.sqrtrem_sqrt	40
Coq.NArith.BinNat.N.sqrtrem_spec	40
Coq.NArith.BinNat.N.sqrt_spec	40
Coq.NArith.BinNat.N.sqrt_neg	40	1.0	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).	0.0113360881805	3
Coq.NArith.BinNat.N.ggcd_gcd	40
Coq.NArith.BinNat.N.ggcd_correct_divisors	40
Coq.NArith.BinNat.N.gcd_divide_l	40
Coq.NArith.BinNat.N.gcd_divide_r	40	1.0.2.3.0.0.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: intros (EQ, EQ'); only 1: exists bb; only 1: simpl; only 1: now rewrite Pos.mul_comm).	1.4937980175	700
Coq.NArith.BinNat.N.gcd_greatest	40
Coq.NArith.BinNat.N.gcd_nonneg	40	7.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: apply le_0_l).	0.182018041611	95
Coq.NArith.BinNat.N.testbit_even_0	40	2.2.24	synth with cache (only 1: induction a; only 1: split; only 1: split).	0.246201038361	470
Coq.NArith.BinNat.N.testbit_odd_0	40	0	synth with cache (only 1: now destruct a).	0.00841999053955	1
Coq.NArith.BinNat.N.testbit_succ_r_div2	40
Coq.NArith.BinNat.N.testbit_odd_succ	40	1.1.0.0.0.0.0.3.0.3.1	synth with cache (only 1: nzsimpl; only 1: destruct n; only 1: now destruct a; only 1: destruct a as [| a]; only 1: intros _; only 1: simpl; only 1: trivial; only 1: discriminate || intros _; only 1: simpl; only 1: f_equal; only 1: apply Pos.pred_N_succ).	11.7377359867	6087
Coq.NArith.BinNat.N.testbit_even_succ	40	0.0.0.0	synth with cache (only 1: intros H; only 1: rewrite testbit_succ_r_div2 by trivial; only 1: f_equal; only 1: now destruct a).	0.0215170383453	4
Coq.NArith.BinNat.N.testbit_neg_r	40	4	synth with cache (only 1: now induction n).	0.0172941684723	5
Coq.NArith.BinNat.N.shiftr_succ_r	40
Coq.NArith.BinNat.N.shiftl_succ_r	40
Coq.NArith.BinNat.N.shiftr_spec	40
Coq.NArith.BinNat.N.shiftl_spec_high	40
Coq.NArith.BinNat.N.shiftl_spec_low	40
Coq.NArith.BinNat.N.div2_spec	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0108499526978	2
Coq.NArith.BinNat.N.pos_lxor_spec	40
Coq.NArith.BinNat.N.lxor_spec	40
Coq.NArith.BinNat.N.pos_lor_spec	40
Coq.NArith.BinNat.N.lor_spec	40
Coq.NArith.BinNat.N.pos_land_spec	40
Coq.NArith.BinNat.N.land_spec	40
Coq.NArith.BinNat.N.pos_ldiff_spec	40
Coq.NArith.BinNat.N.ldiff_spec	40
Coq.NArith.BinNat.N.gt_lt_iff	40
Coq.NArith.BinNat.N.gt_lt	40	0.2.25	synth with cache (only 1: pose proof (le_sub_l n m) as LE'; only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	9.56091594696	6958
Coq.NArith.BinNat.N.lt_gt	40	0	synth with cache (only 1: apply gt_lt_iff).	0.00571513175964	1
Coq.NArith.BinNat.N.ge_le_iff	40	4.3.2.1.1.6.0	synth with cache (only 1: destruct n as [| p], m as [| q]; only 1: easy; only 1: easy'; only 1: easy'; only 1: revert q; only 1: intro n; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff).	30.642688036	16887
Coq.NArith.BinNat.N.ge_le	40	0.1	synth with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0119760036469	3
Coq.NArith.BinNat.N.le_ge	40	0	synth with cache (only 1: apply ge_le_iff).	0.00556612014771	1
Coq.NArith.BinNat.N.pos_pred_shiftl_low	40
Coq.NArith.BinNat.N.pos_pred_shiftl_high	40
Coq.NArith.BinNat.N.pred_div2_up	40	0.3.2.1.0.2	synth with cache (only 1: destruct p; only 1: simpl; only 1: apply Pos.pred_N_succ; only 1: now destruct p; only 1: simpl; only 1: trivial).	1.76089501381	885
Coq.NArith.Ndec.Peqb_complete	40	0	synth with cache (only 1: apply Pos.eqb_eq).	0.0179488658905	1
Coq.NArith.Ndec.Peqb_Pcompare	40	0.4	synth with cache (only 1: rewrite ?Pos.compare_eq_iff; only 1: now apply Pos.eqb_eq).	0.162333011627	31
Coq.NArith.Ndec.Pcompare_Peqb	40	0	synth with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).	0.11696600914	1
Coq.NArith.Ndec.Neqb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Neqb	40	0	synth with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).	0.0293741226196	1
Coq.NArith.Ndec.Neqb_complete	40	1	synth with cache (only 1: now rewrite N.eqb_eq, <- N.compare_eq_iff).	0.0292949676514	2
Coq.NArith.Ndec.Nxor_eq_true	40
Coq.NArith.Ndec.Nxor_eq_false	40
Coq.NArith.Ndec.Nodd_not_double	40
Coq.NArith.Ndec.Nnot_div2_not_double	40
Coq.NArith.Ndec.Neven_not_double_plus_one	40	0.0.19.17.0.1.7	synth with cache (only 1: intros Ha; only 1: intros n; only 1: eqb2eq; only 1: intros H; only 1: contradict Ha; only 1: subst; only 1: now destruct n).	37.0537760258	54235
Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	40
Coq.NArith.Ndec.Nbit0_neq	40	7.8.9.4	synth with cache (only 1: eqb2eq; only 1: intuition; only 1: rewrite H1 in H; only 1: now simpl in H).	13.6685941219	10504
Coq.NArith.Ndec.Ndiv2_eq	40	2.0.4	synth with cache (only 1: intros H0; only 1: eqb2eq; only 1: now subst).	0.0346069335938	9
Coq.NArith.Ndec.Ndiv2_neq	40	0.0.0	synth with cache (only 1: intros; only 1: eqb2eq; only 1: now intros <-).	0.0411689281464	3
Coq.NArith.Ndec.Ndiv2_bit_eq	40
Coq.NArith.Ndec.Ndiv2_bit_neq	40
Coq.NArith.Ndec.Nneq_elim	40
Coq.NArith.Ndec.Ndouble_or_double_plus_un	40
Coq.NArith.Ndec.Nleb_alt	40
Coq.NArith.Ndec.Nleb_Nle	40
Coq.NArith.Ndec.Nleb_refl	40	1.2.0.1.0.4.18	synth with cache (only 1: apply eq_iff_eq_true; only 1: split; only 1: auto; only 1: intuition; only 1: unfold Nleb; only 1: apply Nat.leb_le; only 1: left).	1.56958293915	911
Coq.NArith.Ndec.Nleb_antisym	40
Coq.NArith.Ndec.Nleb_trans	40
Coq.NArith.Ndec.Nleb_ltb_trans	40
Coq.NArith.Ndec.Nltb_leb_trans	40
Coq.NArith.Ndec.Nltb_trans	40
Coq.NArith.Ndec.Nltb_leb_weak	40
Coq.NArith.Ndec.Nleb_double_mono	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono	40
Coq.NArith.Ndec.Nleb_double_mono_conv	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_double_mono	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono	40
Coq.NArith.Ndec.Nltb_double_mono_conv	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Gt_Nltb	40
Coq.NArith.Ndec.Ncompare_Lt_Nltb	40
Coq.NArith.Ndec.Nmin_le_1	40
Coq.NArith.Ndec.Nmin_le_2	40
Coq.NArith.Ndec.Nmin_le_3	40
Coq.NArith.Ndec.Nmin_le_4	40	3.0	synth with cache (only 1: rewrite !Nleb_Nle; only 1: N.solve_min).	0.0657539367676	18
Coq.NArith.Ndec.Nmin_le_5	40	0.0	synth with cache (only 1: rewrite !Nleb_Nle; only 1: N.solve_min).	0.0594341754913	2
Coq.NArith.Ndec.Nmin_lt_3	40
Coq.NArith.Ndec.Nmin_lt_4	40	0.0.1	synth with cache (only 1: rewrite <- !not_true_iff_false, !Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).	0.0634329319	4
Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40
Coq.NArith.Ndist.Nplength_infty	40	1.0.1.2	synth with cache (only 1: destruct a; only 1: simpl; only 1: now try N.order'; only 1: now try N.order').	0.139958143234	31
Coq.NArith.Ndist.Nplength_zeros	40
Coq.NArith.Ndist.Nplength_one	40
Coq.NArith.Ndist.Nplength_first_one	40
Coq.NArith.Ndist.ni_min_idemp	40	0.0.1.3.11.4.1.25.12	synth with cache (only 1: intros n; only 1: destruct n; only 1: trivial; only 1: simpl; only 1: induction n as [| n H]; only 1: now simpl; only 1: f_equal; only 1: apply Nat.min_l || apply Nat.min_r; only 1: constructor).	33.4969131947	48474
Coq.NArith.Ndist.ni_min_comm	40
Coq.NArith.Ndist.ni_min_assoc	40
Coq.NArith.Ndist.ni_min_O_l	40	6.8	synth with cache (only 1: simpl; only 1: now intros []).	0.911234855652	383
Coq.NArith.Ndist.ni_min_O_r	40	0.0.2.0.0	synth with cache (only 1: simple induction d; only 1: trivial; only 1: simple induction n; only 1: trivial; only 1: trivial).	0.0500371456146	15
Coq.NArith.Ndist.ni_min_inf_l	40	0.0	synth with cache (only 1: intros; only 1: trivial).	0.0237879753113	2
Coq.NArith.Ndist.ni_min_inf_r	40	8.6	synth with cache (only 1: intros n; only 1: now destruct n).	0.344609022141	297
Coq.NArith.Ndist.ni_le_refl	40
Coq.NArith.Ndist.ni_le_antisym	40	7.1.4.4.3.7.0	synth with cache (only 1: intros x y; only 1: destruct x; only 1: intuition auto; BinInt.Z.Private_Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *; only 1: intro; only 1: inversion 1; only 1: rewrite ni_min_comm; only 1: auto with arith).	8.6864490509	8130
Coq.NArith.Ndist.ni_le_trans	40
Coq.NArith.Ndist.ni_le_min_1	40
Coq.NArith.Ndist.ni_le_min_2	40	0.2.1.0.0	synth with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).	0.0740258693695	31
Coq.NArith.Ndist.ni_min_case	40
Coq.NArith.Ndist.ni_le_total	40
Coq.NArith.Ndist.ni_le_min_induc	40
Coq.NArith.Ndist.le_ni_le	40	0.3.9.14.1	synth with cache (only 1: intros n m H; only 1: symmetry; only 1: unfold ni_min; only 1: rewrite Nat.min_l by trivial; only 1: reflexivity).	9.47646617889	7417
Coq.NArith.Ndist.ni_le_le	40
Coq.NArith.Ndist.Nplength_lb	40
Coq.NArith.Ndist.Nplength_ub	40
Coq.NArith.Ndist.Npdist_eq_1	40
Coq.NArith.Ndist.Npdist_eq_2	40
Coq.NArith.Ndist.Npdist_comm	40
Coq.NArith.Ndist.Nplength_ultra_1	40
Coq.NArith.Ndist.Nplength_ultra	40
Coq.NArith.Ndist.Npdist_ultra	40
Coq.NArith.Ndigits.Ptestbit_Pbit	40
Coq.NArith.Ndigits.Ntestbit_Nbit	40
Coq.NArith.Ndigits.Pbit_Ptestbit	40
Coq.NArith.Ndigits.Nbit_Ntestbit	40	0.0.2.3.11.18	synth with cache (only 1: intro n; only 1: intros q; only 1: destruct n as [| n]; only 1: trivial; only 1: simpl; only 1: now rewrite <- Ptestbit_Pbit, N2Nat.id).	22.7731359005	24465
Coq.NArith.Ndigits.Nshiftr_nat_S	40	2.0	synth with cache (only 1: intros a Ha; only 1: split).	0.0212678909302	4
Coq.NArith.Ndigits.Nshiftl_nat_S	40	2.0	synth with cache (only 1: intros a n; only 1: reflexivity).	0.0218789577484	4
Coq.NArith.Ndigits.Nshiftr_nat_equiv	40
Coq.NArith.Ndigits.Nshiftr_equiv_nat	40
Coq.NArith.Ndigits.Nshiftl_nat_equiv	40
Coq.NArith.Ndigits.Nshiftl_equiv_nat	40
Coq.NArith.Ndigits.Nshiftr_nat_spec	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_low	40
Coq.NArith.Ndigits.Pshiftl_nat_0	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0208041667938	2
Coq.NArith.Ndigits.Pshiftl_nat_S	40	0.0.0	synth with cache (only 1: intros q r; only 1: simpl; only 1: auto).	0.0256409645081	3
Coq.NArith.Ndigits.Pshiftl_nat_N	40
Coq.NArith.Ndigits.Pshiftl_nat_plus	40
Coq.NArith.Ndigits.Pxor_semantics	40
Coq.NArith.Ndigits.Nxor_semantics	40
Coq.NArith.Ndigits.Por_semantics	40
Coq.NArith.Ndigits.Nor_semantics	40
Coq.NArith.Ndigits.Pand_semantics	40
Coq.NArith.Ndigits.Nand_semantics	40	0.0.0.1.0.0.0.0.0.1	synth with cache (only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite andb_false_r; only 1: simpl; only 1: rewrite <- Ntestbit_Nbit, <- !Ptestbit_Pbit; only 1: apply N.pos_land_spec).	0.77002120018	344
Coq.NArith.Ndigits.Pdiff_semantics	40
Coq.NArith.Ndigits.Ndiff_semantics	40	0.0.1.0.0.0.0.0.0	synth with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: now rewrite N.ldiff_spec; only 1: simpl; only 1: apply N.pos_ldiff_spec).	0.0803430080414	14
Coq.NArith.Ndigits.Pbit_faithful_0	40
Coq.NArith.Ndigits.Pbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful_iff	40
Coq.NArith.Ndigits.Nbit0_correct	40	5.3.0.12.0.20	synth with cache (only 1: destruct n; only 1: trivial; only 1: induction p as [p IH| p IH| ]; only 1: trivial; only 1: trivial; only 1: trivial).	14.7399230003	26665
Coq.NArith.Ndigits.Ndouble_bit0	40	0.3.0.0.0.1	synth with cache (only 1: destruct n; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: trivial; only 1: now split).	0.0605728626251	29
Coq.NArith.Ndigits.Ndouble_plus_one_bit0	40	0.2.0	synth with cache (only 1: destruct n; only 1: split; only 1: trivial).	0.0287530422211	5
Coq.NArith.Ndigits.Ndiv2_double	40	6.0.0.2.0.1.3.0.1.0.0	synth with cache (only 1: destruct n; only 1: intro H; only 1: Nat2N.nat2N; only 1: intro H; only 1: vm_compute in H; only 1: destruct p; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l; only 1: simpl; only 1: trivial; only 1: now N.nzsimpl').	27.6828930378	18482
Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	1.14.2.0	synth with cache (only 1: intros; only 1: destruct n; only 1: now try N.order'; only 1: now destruct p).	1.84075403214	970
Coq.NArith.Ndigits.Ndiv2_correct	40	0.0.0.0.0.0.1.0.0.6	synth with cache (only 1: intros [| ] ?; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	6.2323410511	2970
Coq.NArith.Ndigits.Nxor_bit0	40
Coq.NArith.Ndigits.Nxor_div2	40
Coq.NArith.Ndigits.Nneg_bit0	40
Coq.NArith.Ndigits.Nneg_bit0_1	40
Coq.NArith.Ndigits.Nneg_bit0_2	40	1.0.0.2	synth with cache (only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: split).	0.0518589019775	24
Coq.NArith.Ndigits.Nsame_bit0	40
Coq.NArith.Ndigits.Nbit0_less	40
Coq.NArith.Ndigits.Nbit0_gt	40	0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (N.discr (N.lxor a a')) as [(p, H2)| H1]; only 1: unfold Nless; only 1: rewrite H2; only 1: destruct p; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H1 : N.odd (N.lxor a a') = false) by (rewrite H2; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H1; only 1: discriminate H1; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H2 : N.odd (N.lxor a a') = false) by (rewrite H1; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H2; only 1: discriminate H2).	9.13468909264	4701
Coq.NArith.Ndigits.Nless_not_refl	40
Coq.NArith.Ndigits.Nless_def_1	40
Coq.NArith.Ndigits.Nless_def_2	40	0.0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: destruct a; only 1: destruct a'; only 1: trivial; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	1.86249494553	438
Coq.NArith.Ndigits.Nless_def_3	40
Coq.NArith.Ndigits.Nless_def_4	40
Coq.NArith.Ndigits.Nless_z	40
Coq.NArith.Ndigits.N0_less_1	40	5.19.9.1.14	synth with cache (only 1: intros m H; only 1: destruct m; only 1: inversion H; only 1: vm_compute in H; only 1: now exists p).	9.20873022079	13741
Coq.NArith.Ndigits.N0_less_2	40
Coq.NArith.Ndigits.Nless_trans	40
Coq.NArith.Ndigits.Nless_total	40
Coq.NArith.Ndigits.Bv2N_N2Bv	40
Coq.NArith.Ndigits.Bv2N_Nsize	40
Coq.NArith.Ndigits.Bv2N_Nsize_1	40
Coq.NArith.Ndigits.Bv2N_upper_bound	40
Coq.NArith.Ndigits.ByteV2N_upper_bound	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	40
Coq.NArith.Ndigits.N2Bv_Bv2N	40
Coq.NArith.Ndigits.Nbit0_Blow	40
Coq.NArith.Ndigits.Bnth_Nbit	40
Coq.NArith.Ndigits.Nbit_Nsize	40
Coq.NArith.Ndigits.Nbit_Bth	40
Coq.NArith.Ndigits.Nxor_BVxor	40
Coq.NArith.Ndigits.Nand_BVand	40
Coq.NArith.Ndigits.N2Bv_sized_Nsize	40
Coq.NArith.Ndigits.N2Bv_sized_Bv2N	40
Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40
Coq.NArith.NArith.TestOrder.test	40	0	synth with cache (only 1: N.order).	0.0190899372101	1
Coq.NArith.Nnat.N2Nat.id	40
Coq.NArith.Nnat.N2Nat.inj	40
Coq.NArith.Nnat.N2Nat.inj_iff	40	4.2.1.0.0.0.2	synth with cache (only 1: split; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: now f_equal; only 1: intros EQ; only 1: rewrite EQ; only 1: trivial).	1.80563282967	778
Coq.NArith.Nnat.N2Nat.inj_double	40
Coq.NArith.Nnat.N2Nat.inj_succ_double	40
Coq.NArith.Nnat.N2Nat.inj_succ	40	1.0.1.0.0.0	synth with cache (only 1: destruct a; only 1: simpl N.to_nat; only 1: trivial; only 1: simpl; only 1: unfold Pos.to_nat; only 1: now rewrite !Pmult_nat_mult, Pos2Nat.inj_succ).	0.0385518074036	8
Coq.NArith.Nnat.N2Nat.inj_add	40
Coq.NArith.Nnat.N2Nat.inj_mul	40
Coq.NArith.Nnat.N2Nat.inj_sub	40
Coq.NArith.Nnat.N2Nat.inj_pred	40
Coq.NArith.Nnat.N2Nat.inj_div2	40
Coq.NArith.Nnat.N2Nat.inj_compare	40
Coq.NArith.Nnat.N2Nat.inj_max	40
Coq.NArith.Nnat.N2Nat.inj_min	40
Coq.NArith.Nnat.N2Nat.inj_iter	40
Coq.NArith.Nnat.Nat2N.id	40	0.4.0.2.5	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.371789932251	205
Coq.NArith.Nnat.Nat2N.inj	40
Coq.NArith.Nnat.Nat2N.inj_iff	40	3.0.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: now subst).	0.0408699512482	10
Coq.NArith.Nnat.Nat2N.inj_double	40
Coq.NArith.Nnat.Nat2N.inj_succ_double	40	0	synth with cache (only 1: nat2N).	0.0352210998535	1
Coq.NArith.Nnat.Nat2N.inj_succ	40	0	synth with cache (only 1: nat2N).	0.0297968387604	1
Coq.NArith.Nnat.Nat2N.inj_pred	40	0.1.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: clear IHn; only 1: nat2N).	0.0426659584045	5
Coq.NArith.Nnat.Nat2N.inj_add	40	0	synth with cache (only 1: nat2N).	0.0323548316956	1
Coq.NArith.Nnat.Nat2N.inj_sub	40	0.0.0.90	synth with cache (only 1: destruct n as [| [| n]]; only 1: nat2N; only 1: nat2N; only 1: nat2N).	18.8856608868	22079
Coq.NArith.Nnat.Nat2N.inj_mul	40	0	synth with cache (only 1: nat2N).	0.0312969684601	1
Coq.NArith.Nnat.Nat2N.inj_div2	40	0	synth with cache (only 1: nat2N).	0.0298449993134	1
Coq.NArith.Nnat.Nat2N.inj_compare	40
Coq.NArith.Nnat.Nat2N.inj_min	40	0	synth with cache (only 1: nat2N).	0.0332159996033	1
Coq.NArith.Nnat.Nat2N.inj_max	40	0	synth with cache (only 1: nat2N).	0.0324769020081	1
Coq.NArith.Nnat.Nat2N.inj_iter	40
Coq.Strings.Ascii.ascii_dec	40
Coq.Strings.Ascii.eqb_spec	40
Coq.Strings.Ascii.eqb_refl	40
Coq.Strings.Ascii.eqb_sym	40
Coq.Strings.Ascii.eqb_eq	40
Coq.Strings.Ascii.eqb_neq	40	0	synth with cache (only 1: now rewrite <- not_true_iff_false, Pos.eqb_eq).	0.0127749443054	1
Coq.Strings.Ascii.eqb_compat	40	0.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!N.eqb_eq, Exx', Eyy').	0.0200860500336	3
Coq.Strings.Ascii.ascii_N_embedding	40
Coq.Strings.Ascii.N_ascii_embedding	40
Coq.Strings.Ascii.N_ascii_bounded	40
Coq.Strings.Ascii.ascii_nat_embedding	40
Coq.Strings.Ascii.nat_ascii_embedding	40
Coq.Strings.Ascii.nat_ascii_bounded	40
Coq.Strings.Ascii.ascii_of_byte_of_ascii	40
Coq.Strings.Ascii.byte_of_ascii_of_byte	40
Coq.Strings.Ascii.ascii_of_byte_via_N	40
Coq.Strings.Ascii.ascii_of_byte_via_nat	40
Coq.Strings.Ascii.byte_of_ascii_via_N	40
Coq.Strings.Ascii.byte_of_ascii_via_nat	40
Coq.Strings.String.string_dec	40
Coq.Strings.String.eqb_spec	40
Coq.Strings.String.eqb_refl	40
Coq.Strings.String.eqb_sym	40
Coq.Strings.String.eqb_eq	40
Coq.Strings.String.eqb_neq	40	0	synth with cache (only 1: now rewrite <- not_true_iff_false, BinInt.Z.eqb_eq).	0.0227131843567	1
Coq.Strings.String.eqb_compat	40	0.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!BinInt.Z.eqb_eq, Exx', Eyy').	0.0308451652527	3
Coq.Strings.String.get_correct	40
Coq.Strings.String.append_correct1	40
Coq.Strings.String.append_correct2	40
Coq.Strings.String.substring_correct1	40
Coq.Strings.String.substring_correct2	40
Coq.Strings.String.prefix_correct	40
Coq.Strings.String.index_correct1	40
Coq.Strings.String.index_correct2	40
Coq.Strings.String.index_correct3	40
Coq.Strings.String.index_correct4	40
Coq.Strings.String.string_of_list_ascii_of_string	40	2.12.3.2.0.0.0	synth with cache (only 1: elim s; only 1: simpl; only 1: easy; only 1: simpl; only 1: intros m s1; only 1: intros ->; only 1: auto).	14.9594531059	15744
Coq.Strings.String.list_ascii_of_string_of_list_ascii	40
Coq.Strings.String.string_of_list_byte_of_string	40
Coq.Strings.String.list_byte_of_string_of_list_byte	40
Coq.Strings.Byte.byte_dec_lb	40
Coq.Strings.Byte.byte_dec_bl	40
Coq.Strings.Byte.eqb_false	40
Coq.Strings.Byte.nat.of_to_nat	40
Coq.Strings.Byte.nat.to_of_nat	40
Coq.Strings.Byte.nat.to_of_nat_iff	40
Coq.Strings.Byte.nat.to_of_nat_option_map	40
Coq.Strings.Byte.nat.to_nat_bounded	40
Coq.Strings.Byte.nat.of_nat_None_iff	40
Coq.Strings.Byte.N.of_to_N	40
Coq.Strings.Byte.N.to_of_N	40
Coq.Strings.Byte.N.to_of_N_iff	40
Coq.Strings.Byte.N.to_of_N_option_map	40
Coq.Strings.Byte.N.to_N_bounded	40
Coq.Strings.Byte.N.of_N_None_iff	40
Coq.Strings.Byte.N.to_N_via_nat	40
Coq.Strings.Byte.N.to_nat_via_N	40
Coq.Strings.Byte.N.of_N_via_nat	40
Coq.Strings.Byte.N.of_nat_via_N	40
Coq.Strings.HexString.Raw.to_N_of_pos	40	4	synth with cache (only 1: trivial).	0.0375089645386	5
Coq.Strings.HexString.to_N_of_N	40
Coq.Strings.HexString.to_Z_of_Z	40
Coq.Strings.HexString.to_nat_of_nat	40
Coq.Strings.HexString.to_pos_of_pos	40
Coq.Strings.OctalString.Raw.to_N_of_pos	40	1	synth with cache (only 1: trivial).	0.0191090106964	2
Coq.Strings.OctalString.to_N_of_N	40
Coq.Strings.OctalString.to_Z_of_Z	40
Coq.Strings.OctalString.to_nat_of_nat	40
Coq.Strings.OctalString.to_pos_of_pos	40
Coq.Strings.BinaryString.Raw.to_N_of_pos	40	4	synth with cache (only 1: easy).	0.0221018791199	5
Coq.Strings.BinaryString.to_N_of_N	40
Coq.Strings.BinaryString.Z_of_of_Z	40
Coq.Strings.BinaryString.to_nat_of_nat	40
Coq.Strings.BinaryString.to_pos_of_pos	40
Coq.Reals.Rdefinitions.total_order_T	40
Coq.Reals.Rdefinitions.Req_appart_dec	40
Coq.Reals.Rdefinitions.Rrepr_appart_0	40
Coq.Reals.Rdefinitions.up	40	179	synth with cache (only 1: constructor).	19.5289609432	78362
Coq.Reals.Rtrigo_alt.pre_sin_bound	40
Coq.Reals.Rtrigo_alt.pre_cos_bound	40
Coq.Reals.Ratan.Ropp_div	40	0.0.0	synth with cache (only 1: intros x y; only 1: unfold Rdiv; only 1: ring).	0.0941090583801	3
Coq.Reals.Ratan.pos_half_prf	40	1.1.0.0.1.0	synth with cache (only 1: assert (Hyp : 0 < 2); only 1: now apply (IZR_lt 0 2); only 1: generalize (sqrt_positivity 2 (Rlt_le 0 2 Hyp)); only 1: intro H1; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.766419172287	81
Coq.Reals.Ratan.Boule_half_to_interval	40
Coq.Reals.Ratan.Boule_lt	40
Coq.Reals.Ratan.Un_cv_ext	40
Coq.Reals.Ratan.Alt_first_term_bound	40
Coq.Reals.Ratan.Alt_CVU	40
Coq.Reals.Ratan.pow2_ge_0	40
Coq.Reals.Ratan.pow2_abs	40	0.4.0.1.18.1	synth with cache (only 1: intros; only 1: unfold Rabs; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: simpl; only 1: ring; only 1: reflexivity).	23.1679639816	8543
Coq.Reals.Ratan.derivable_pt_tan	40
Coq.Reals.Ratan.derive_pt_tan	40
Coq.Reals.Ratan.derive_increasing_interv	40
Coq.Reals.Ratan.plus_Rsqr_gt_0	40	0.0.0.0.0.0.0.0.1.0.0.10.0	synth with cache (only 1: unfold Rgt; only 1: intro; only 1: apply Rplus_lt_le_0_compat; only 1: apply Rlt_0_1; only 1: destruct (Rle_lt_dec 0 x); only 1: replace (x ^ 2) with (x * x) by field; only 1: apply Rmult_le_pos; only 1: auto; only 1: auto; only 1: replace (x ^ 2) with (- x * - x) by field; only 1: apply Rmult_le_pos; only 1: lra; only 1: lra).	38.9909989834	7839
Coq.Reals.Ratan.PI2_lower_bound	40
Coq.Reals.Ratan.PI2_3_2	40
Coq.Reals.Ratan.PI2_1	40
Coq.Reals.Ratan.tan_increasing	40
Coq.Reals.Ratan.tan_is_inj	40
Coq.Reals.Ratan.exists_atan_in_frame	40
Coq.Reals.Ratan.tan_1_gt_1	40
Coq.Reals.Ratan.frame_tan	40
Coq.Reals.Ratan.ub_opp	40	21.3	synth with cache (only 1: intro; only 1: lra).	5.08935117722	2734
Coq.Reals.Ratan.pos_opp_lt	40	2.0	synth with cache (only 1: intros; only 1: lra).	0.0530471801758	4
Coq.Reals.Ratan.tech_opp_tan	40
Coq.Reals.Ratan.pre_atan	40
Coq.Reals.Ratan.atan_bound	40
Coq.Reals.Ratan.atan_right_inv	40
Coq.Reals.Ratan.atan_opp	40
Coq.Reals.Ratan.derivable_pt_atan	40
Coq.Reals.Ratan.atan_increasing	40
Coq.Reals.Ratan.atan_0	40
Coq.Reals.Ratan.atan_1	40
Coq.Reals.Ratan.derive_pt_atan	40
Coq.Reals.Ratan.derivable_pt_lim_atan	40
Coq.Reals.Ratan.Ratan_seq_decreasing	40
Coq.Reals.Ratan.Ratan_seq_converging	40
Coq.Reals.Ratan.ps_atan_exists_01	40
Coq.Reals.Ratan.Ratan_seq_opp	40
Coq.Reals.Ratan.sum_Ratan_seq_opp	40
Coq.Reals.Ratan.ps_atan_exists_1	40
Coq.Reals.Ratan.in_int	40
Coq.Reals.Ratan.ps_atan0_0	40
Coq.Reals.Ratan.ps_atan_exists_1_opp	40
Coq.Reals.Ratan.ps_atan_opp	40
Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40
Coq.Reals.Ratan.pow_lt_1_compat	40
Coq.Reals.Ratan.Datan_seq_Rabs	40
Coq.Reals.Ratan.Datan_seq_pos	40	0.1.0.7	synth with cache (only 1: intros a b; only 1: intro; only 1: apply pow_lt; only 1: auto).	3.06500911713	623
Coq.Reals.Ratan.Datan_sum_eq	40
Coq.Reals.Ratan.Datan_seq_increasing	40
Coq.Reals.Ratan.Datan_seq_decreasing	40
Coq.Reals.Ratan.Datan_seq_CV_0	40
Coq.Reals.Ratan.Datan_lim	40
Coq.Reals.Ratan.Datan_CVU_prelim	40
Coq.Reals.Ratan.Datan_is_datan	40
Coq.Reals.Ratan.Ratan_CVU'	40
Coq.Reals.Ratan.Ratan_CVU	40
Coq.Reals.Ratan.Alt_PI_tg	40	0.2.0.0.1.0.5	synth with cache (only 1: intros Eq1; only 1: unfold Ratan_seq, PI_tg; only 1: simpl; only 1: rewrite pow1; only 1: unfold Rdiv; only 1: rewrite Rmult_1_l; only 1: ring).	8.05568289757	1861
Coq.Reals.Ratan.Ratan_is_ps_atan	40
Coq.Reals.Ratan.Datan_continuity	40
Coq.Reals.Ratan.derivable_pt_lim_ps_atan	40
Coq.Reals.Ratan.derivable_pt_ps_atan	40
Coq.Reals.Ratan.ps_atan_continuity_pt_1	40
Coq.Reals.Ratan.Datan_eq_DatanSeq_interv	40
Coq.Reals.Ratan.atan_eq_ps_atan	40
Coq.Reals.Ratan.Alt_PI_eq	40
Coq.Reals.Ratan.PI_ineq	40
Coq.Reals.RList.MaxRlist_P1	40
Coq.Reals.RList.MinRlist_P1	40
Coq.Reals.RList.AbsList_P1	40
Coq.Reals.RList.MinRlist_P2	40
Coq.Reals.RList.AbsList_P2	40
Coq.Reals.RList.MaxRlist_P2	40
Coq.Reals.RList.pos_Rl_P1	40	2.2.0.5.0	synth with cache (only 1: intros; only 1: simpl; only 1: inversion H; only 1: trivial; only 1: trivial).	1.57781100273	433
Coq.Reals.RList.pos_Rl_P2	40
Coq.Reals.RList.Rlist_P1	40
Coq.Reals.RList.RList_P0	40
Coq.Reals.RList.RList_P1	40
Coq.Reals.RList.RList_P2	40
Coq.Reals.RList.RList_P3	40
Coq.Reals.RList.RList_P4	40
Coq.Reals.RList.RList_P5	40
Coq.Reals.RList.RList_P6	40
Coq.Reals.RList.RList_P7	40
Coq.Reals.RList.RList_P8	40
Coq.Reals.RList.RList_P9	40
Coq.Reals.RList.RList_P10	40
Coq.Reals.RList.RList_P11	40
Coq.Reals.RList.RList_P12	40
Coq.Reals.RList.RList_P13	40
Coq.Reals.RList.RList_P14	40	1.5.0.3	synth with cache (only 1: induction l as [| r l Hrecl]; only 1: reflexivity; only 1: simpl; only 1: auto).	0.858330965042	330
Coq.Reals.RList.RList_P15	40
Coq.Reals.RList.RList_P16	40
Coq.Reals.RList.RList_P17	40
Coq.Reals.RList.RList_P18	40	1.0.0.0.1.28	synth with cache (only 1: intro; only 1: induction l as [| r l Hrecl]; only 1: intros a0; only 1: reflexivity; only 1: simpl; only 1: auto).	3.61253404617	3465
Coq.Reals.RList.RList_P19	40
Coq.Reals.RList.RList_P20	40
Coq.Reals.RList.RList_P21	40	1.6.0	synth with cache (only 1: intros; only 1: f_equal; only 1: assumption).	0.0445690155029	10
Coq.Reals.RList.RList_P22	40	6.9.4.0.0	synth with cache (only 1: intros; only 1: induction l1 as [| r l1 Hrecl1]; only 1: simpl; only 1: contradiction; only 1: reflexivity).	13.4820659161	3124
Coq.Reals.RList.RList_P23	40	3.1.2.0.0.0	synth with cache (only 1: simple induction l1; only 1: intro; only 1: reflexivity; only 1: simpl; only 1: intros n m p H; only 1: auto).	1.72312808037	518
Coq.Reals.RList.RList_P24	40
Coq.Reals.RList.RList_P25	40
Coq.Reals.RList.RList_P26	40
Coq.Reals.RList.RList_P27	40	3.0.0.3.1.16.7.0	synth with cache (only 1: intros; only 1: revert l1 l2; only 1: intros p q; only 1: induction p; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: trivial).	8.21593022346	9266
Coq.Reals.RList.RList_P28	40
Coq.Reals.RList.RList_P29	40
Coq.Reals.Sqrt_reg.sqrt_var_maj	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt	40
Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	40
Coq.Reals.Sqrt_reg.derivable_pt_sqrt	40
Coq.Reals.Sqrt_reg.derive_pt_sqrt	40
Coq.Reals.Sqrt_reg.continuity_pt_sqrt	40
Coq.Reals.Rsigma.Sigma.sigma_split	40
Coq.Reals.Rsigma.Sigma.sigma_diff	40
Coq.Reals.Rsigma.Sigma.sigma_diff_neg	40	0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros low high k H1 H2; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: rewrite (sigma_split H1 H2); only 1: ring).	0.148970127106	13
Coq.Reals.Rsigma.Sigma.sigma_first	40
Coq.Reals.Rsigma.Sigma.sigma_last	40
Coq.Reals.Rsigma.Sigma.sigma_eq_arg	40	8.0.0.0.5	synth with cache (only 1: intros H1; only 1: unfold sigma; only 1: rewrite <- minus_n_n; only 1: simpl; only 1: auto with real).	0.792750835419	634
Coq.Reals.Rbasic_fun.Rmin_case	40
Coq.Reals.Rbasic_fun.Rmin_case_strong	40	3.0.0.0.0.6.6.1	synth with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2); only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: unfold Rle; only 1: auto with real).	7.89938402176	4903
Coq.Reals.Rbasic_fun.Rmin_Rgt_l	40
Coq.Reals.Rbasic_fun.Rmin_Rgt_r	40	0.2.0.0.0.18	synth with cache (only 1: intuition; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: intro; only 1: assumption; only 1: auto).	4.53734397888	5155
Coq.Reals.Rbasic_fun.Rmin_Rgt	40
Coq.Reals.Rbasic_fun.Rmin_l	40
Coq.Reals.Rbasic_fun.Rmin_r	40	4.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro H1; only 1: auto with real; only 1: auto with real).	0.0612061023712	12
Coq.Reals.Rbasic_fun.Rmin_left	40	1.0.0.0.1	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with real; only 1: auto with real).	0.0809278488159	21
Coq.Reals.Rbasic_fun.Rmin_right	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0442028045654	4
Coq.Reals.Rbasic_fun.Rle_min_compat_r	40
Coq.Reals.Rbasic_fun.Rle_min_compat_l	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 (apply Rmin_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.0463180541992	6
Coq.Reals.Rbasic_fun.Rmin_comm	40
Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40
Coq.Reals.Rbasic_fun.Rmin_pos	40	0.0.0.0.1.1.1	synth with cache (only 1: intros x y; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intros; only 1: assumption; only 1: intros; only 1: assumption).	0.515380859375	156
Coq.Reals.Rbasic_fun.Rmin_glb	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intros; only 1: eauto using Rle_trans, Rle_refl; only 1: intro H1; only 1: eauto using Rle_trans, Rle_refl).	0.0488820075989	7
Coq.Reals.Rbasic_fun.Rmin_glb_lt	40	1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro; only 1: auto; only 1: intros Eq0; only 1: auto).	0.0692598819733	8
Coq.Reals.Rbasic_fun.Rmax_case	40
Coq.Reals.Rbasic_fun.Rmax_case_strong	40	0.0.0.1.0	synth with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).	0.0421750545502	6
Coq.Reals.Rbasic_fun.Rmax_Rle	40
Coq.Reals.Rbasic_fun.Rmax_comm	40
Coq.Reals.Rbasic_fun.Rmax_l	40
Coq.Reals.Rbasic_fun.Rmax_r	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro H1; only 1: auto with real; only 1: intro H1; only 1: auto with real).	0.0551948547363	7
Coq.Reals.Rbasic_fun.Rmax_left	40	0.0.0.1.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.046886920929	6
Coq.Reals.Rbasic_fun.Rmax_right	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0407569408417	4
Coq.Reals.Rbasic_fun.Rle_max_compat_r	40
Coq.Reals.Rbasic_fun.Rle_max_compat_l	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 (apply Rmax_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.0491411685944	6
Coq.Reals.Rbasic_fun.RmaxRmult	40	1.1.1.1.1.1.7.2.0	synth with cache (only 1: intros x y z; only 1: intro; only 1: do 2 (apply Rmax_case_strong; intro); only 1: case H0; only 1: auto with real; only 1: auto with real; only 1: auto with real; only 1: auto with real; only 1: auto with real).	4.54557108879	2474
Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40
Coq.Reals.Rbasic_fun.Rmax_lub	40	0.0.1.0.0.0.0.1.10	synth with cache (only 1: intros x y H; only 1: pattern x at 1; only 1: pattern x at 1; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intros Eq0; only 1: auto with real; only 1: intros; only 1: assumption).	17.8337640762	6536
Coq.Reals.Rbasic_fun.Rmax_lub_lt	40	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro; only 1: assumption; only 1: intro; only 1: assumption).	0.0496029853821	8
Coq.Reals.Rbasic_fun.Rmax_Rlt	40
Coq.Reals.Rbasic_fun.Rmax_neg	40	0.0.0.1.2.1	synth with cache (only 1: intros x y; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: intros; only 1: assumption).	0.666896104813	185
Coq.Reals.Rbasic_fun.Rcase_abs	40
Coq.Reals.Rbasic_fun.Rabs_R0	40
Coq.Reals.Rbasic_fun.Rabs_R1	40
Coq.Reals.Rbasic_fun.Rabs_no_R0	40
Coq.Reals.Rbasic_fun.Rabs_left	40
Coq.Reals.Rbasic_fun.Rabs_right	40	0.0.0.0.4.0.1.11.4	synth with cache (only 1: intro; only 1: intros E0; only 1: unfold Rabs; only 1: case (Rcase_abs r); only 1: intros H; only 1: absurd (r >= 0); only 1: exact (Rlt_not_ge r 0 H); only 1: assumption; only 1: trivial).	24.9339959621	16995
Coq.Reals.Rbasic_fun.Rabs_left1	40
Coq.Reals.Rbasic_fun.Rabs_pos	40
Coq.Reals.Rbasic_fun.Rle_abs	40
Coq.Reals.Rbasic_fun.Rabs_le	40
Coq.Reals.Rbasic_fun.Rabs_pos_eq	40
Coq.Reals.Rbasic_fun.Rabs_Rabsolu	40	0.0.0.1.0.0.3.6.1	synth with cache (only 1: intros; only 1: rewrite Rabs_right; only 1: auto with real; only 1: unfold Rabs; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real; only 1: assumption).	7.4509510994	4096
Coq.Reals.Rbasic_fun.Rabs_pos_lt	40
Coq.Reals.Rbasic_fun.Rabs_minus_sym	40
Coq.Reals.Rbasic_fun.Rabs_mult	40
Coq.Reals.Rbasic_fun.Rabs_Rinv	40
Coq.Reals.Rbasic_fun.Rabs_Ropp	40
Coq.Reals.Rbasic_fun.Rabs_triang	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv2	40
Coq.Reals.Rbasic_fun.Rabs_def1	40
Coq.Reals.Rbasic_fun.Rabs_def2	40
Coq.Reals.Rbasic_fun.RmaxAbs	40
Coq.Reals.Rbasic_fun.Rabs_Zabs	40
Coq.Reals.Rbasic_fun.abs_IZR	40
Coq.Reals.Rbasic_fun.Ropp_Rmax	40
Coq.Reals.Rbasic_fun.Ropp_Rmin	40	1.1.1.0.1.0.3.0.0.0	synth with cache (only 1: intros x y; only 1: apply Rmax_case_strong; only 1: intro H1; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto with real; only 1: intros H; only 1: apply Rmin_case_strong; only 1: auto with real; only 1: auto using Rle_antisym).	12.1421780586	2533
Coq.Reals.Rbasic_fun.Rmax_assoc	40
Coq.Reals.Rbasic_fun.Rminmax	40
Coq.Reals.Rbasic_fun.Rmin_assoc	40
Coq.Reals.ROrderedType.Req_dec	40	0.0.2.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	1.7983481884	159
Coq.Reals.ROrderedType.Reqb_eq	40
Coq.Reals.ROrderedType.Rcompare_spec	40
Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40
Coq.Reals.ROrderedType.R_as_OT.lt_compat	40	8	synth with cache (only 1: solve_proper).	0.506356954575	58
Coq.Reals.ROrderedType.R_as_OT.le_lteq	40	3.0	synth with cache (only 1: intros; only 1: intuition).	0.197205781937	34
Coq.Reals.SeqSeries.sum_maj1	40
Coq.Reals.SeqSeries.Rseries_CV_comp	40
Coq.Reals.SeqSeries.Cesaro	40
Coq.Reals.SeqSeries.Cesaro_1	40
Coq.Reals.Rtrigo_def.exp_cof_no_R0	40	2.6.0.6.0	synth with cache (only 1: intro; only 1: apply Rlt_dichotomy_converse; only 1: right; only 1: apply Rinv_0_lt_compat; only 1: apply INR_fact_lt_0).	7.11434793472	1802
Coq.Reals.Rtrigo_def.exist_exp	40
Coq.Reals.Rtrigo_def.pow_i	40	1.0.0.1.2.13.6	synth with cache (only 1: intro; only 1: intros [| n]; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: rewrite Rmult_0_l; only 1: trivial).	4.90844798088	3070
Coq.Reals.Rtrigo_def.exist_exp0	40
Coq.Reals.Rtrigo_def.exp_0	40
Coq.Reals.Rtrigo_def.cosh_0	40
Coq.Reals.Rtrigo_def.sinh_0	40
Coq.Reals.Rtrigo_def.simpl_cos_n	40
Coq.Reals.Rtrigo_def.archimed_cor1	40
Coq.Reals.Rtrigo_def.Alembert_cos	40
Coq.Reals.Rtrigo_def.cosn_no_R0	40	0.0.0.0.6.0	synth with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	0.646073102951	126
Coq.Reals.Rtrigo_def.exist_cos	40
Coq.Reals.Rtrigo_def.simpl_sin_n	40
Coq.Reals.Rtrigo_def.Alembert_sin	40
Coq.Reals.Rtrigo_def.sin_no_R0	40	0.0.0.0.11.0	synth with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	2.47283196449	889
Coq.Reals.Rtrigo_def.exist_sin	40
Coq.Reals.Rtrigo_def.cos_sym	40
Coq.Reals.Rtrigo_def.sin_antisym	40
Coq.Reals.Rtrigo_def.sin_0	40
Coq.Reals.Rtrigo_def.exist_cos0	40
Coq.Reals.Rtrigo_def.cos_0	40
Coq.Reals.NewtonInt.FTCN_step1	40
Coq.Reals.NewtonInt.FTC_Newton	40	9.0	synth with cache (only 1: intros; only 1: split).	0.32266497612	69
Coq.Reals.NewtonInt.NewtonInt_P1	40
Coq.Reals.NewtonInt.NewtonInt_P2	40
Coq.Reals.NewtonInt.NewtonInt_P3	40	1.5	synth with cache (only 1: intro; only 1: firstorder).	3.120844841	48
Coq.Reals.NewtonInt.NewtonInt_P4	40
Coq.Reals.NewtonInt.NewtonInt_P5	40
Coq.Reals.NewtonInt.antiderivative_P1	40
Coq.Reals.NewtonInt.NewtonInt_P6	40
Coq.Reals.NewtonInt.antiderivative_P2	40
Coq.Reals.NewtonInt.antiderivative_P3	40
Coq.Reals.NewtonInt.antiderivative_P4	40
Coq.Reals.NewtonInt.NewtonInt_P7	40
Coq.Reals.NewtonInt.NewtonInt_P8	40
Coq.Reals.NewtonInt.NewtonInt_P9	40
Coq.Reals.Runcountable.in_holed_interval_dec	40
Coq.Reals.Runcountable.middle_in_interval	40
Coq.Reals.Runcountable.point_in_holed_interval_works	40
Coq.Reals.Runcountable.first_in_holed_interval	40
Coq.Reals.Runcountable.first_in_holed_interval_works	40
Coq.Reals.Runcountable.split_couple_eq	40	24.0	synth with cache (only 1: intros; only 1: now injection H as [=->]).	12.506914854	8365
Coq.Reals.Runcountable.first_two_in_interval_works	40
Coq.Reals.Runcountable.tearing_sequences	40
Coq.Reals.Runcountable.tearing_sequences_projsig	40
Coq.Reals.Runcountable.tearing_sequences_inc_dec	40
Coq.Reals.Runcountable.split_lt_succ	40	2.3.14	synth with cache (only 1: inversion 1; only 1: auto; only 1: auto).	3.21465182304	1658
Coq.Reals.Runcountable.increase_seq_transit	40
Coq.Reals.Runcountable.decrease_seq_transit	40
Coq.Reals.Runcountable.tearing_sequences_ordered_forall	40
Coq.Reals.Runcountable.torn_number	40
Coq.Reals.Runcountable.torn_number_above_first_sequence	40
Coq.Reals.Runcountable.torn_number_below_second_sequence	40
Coq.Reals.Runcountable.limit_index_above_all_indices	40
Coq.Reals.Runcountable.first_indices_increasing	40
Coq.Reals.Runcountable.R_uncountable	40
Coq.Reals.Rfunctions.INR_fact_neq_0	40
Coq.Reals.Rfunctions.fact_simpl	40	0.0	synth with cache (only 1: simpl; only 1: reflexivity).	0.024080991745	2
Coq.Reals.Rfunctions.simpl_fact	40
Coq.Reals.Rfunctions.pow_O	40	0.0	synth with cache (only 1: intros p0; only 1: auto with real).	0.0270519256592	2
Coq.Reals.Rfunctions.pow_1	40	0.1.0.1	synth with cache (only 1: intros; only 1: simpl; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).	0.0440437793732	6
Coq.Reals.Rfunctions.pow_add	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: rewrite H'; only 1: auto with real).	0.0642621517181	8
Coq.Reals.Rfunctions.Rpow_mult_distr	40
Coq.Reals.Rfunctions.pow_nonzero	40
Coq.Reals.Rfunctions.pow_RN_plus	40
Coq.Reals.Rfunctions.pow_lt	40
Coq.Reals.Rfunctions.Rlt_pow_R1	40
Coq.Reals.Rfunctions.Rlt_pow	40
Coq.Reals.Rfunctions.tech_pow_Rmult	40	2.1.0.0.1	synth with cache (only 1: simpl; only 1: intros; only 1: induction n; only 1: auto with real; only 1: trivial).	0.0487310886383	11
Coq.Reals.Rfunctions.tech_pow_Rplus	40	0.1.3.3.0	synth with cache (only 1: intro; only 1: intro; only 1: intros H1; only 1: repeat rewrite S_INR; only 1: ring).	0.983814954758	316
Coq.Reals.Rfunctions.poly	40
Coq.Reals.Rfunctions.Power_monotonic	40
Coq.Reals.Rfunctions.RPow_abs	40
Coq.Reals.Rfunctions.Pow_x_infinity	40
Coq.Reals.Rfunctions.pow_ne_zero	40	1.1.0.6.1.1	synth with cache (only 1: simple induction n; only 1: simpl; only 1: now destruct 1; only 1: simpl; only 1: intros a b Hb; only 1: auto with real).	5.39729905128	1667
Coq.Reals.Rfunctions.Rinv_pow	40
Coq.Reals.Rfunctions.pow_lt_1_zero	40
Coq.Reals.Rfunctions.pow_R1	40
Coq.Reals.Rfunctions.pow_Rsqr	40
Coq.Reals.Rfunctions.pow_le	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: auto with real).	0.0915281772614	9
Coq.Reals.Rfunctions.pow_1_even	40
Coq.Reals.Rfunctions.pow_1_odd	40
Coq.Reals.Rfunctions.pow_1_abs	40
Coq.Reals.Rfunctions.pow_mult	40
Coq.Reals.Rfunctions.pow_incr	40
Coq.Reals.Rfunctions.pow_R1_Rle	40
Coq.Reals.Rfunctions.Rle_pow	40
Coq.Reals.Rfunctions.pow1	40
Coq.Reals.Rfunctions.pow_Rabs	40
Coq.Reals.Rfunctions.pow_maj_Rabs	40
Coq.Reals.Rfunctions.Rsqr_pow2	40	10.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.645888090134	244
Coq.Reals.Rfunctions.PowerRZ.Z_compl.intP	40
Coq.Reals.Rfunctions.PowerRZ.Zpower_NR0	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_O	40	0	synth with cache (only 1: reflexivity).	0.0202939510345	1
Coq.Reals.Rfunctions.PowerRZ.powerRZ_1	40	1.5.0	synth with cache (only 1: intros; only 1: simpl; only 1: auto with real).	0.0379979610443	9
Coq.Reals.Rfunctions.PowerRZ.powerRZ_NOR	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_pos_sub	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_add	40
Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ	40
Coq.Reals.Rfunctions.PowerRZ.Zpower_pos_powerRZ	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_lt	40	1.0.1.3.0.0.0.2.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: intros; only 1: apply pow_lt; only 1: auto with real; only 1: intros; only 1: simpl; only 1: auto with real).	21.7237479687	9723
Coq.Reals.Rfunctions.PowerRZ.powerRZ_le	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros x z; only 1: case z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	0.131188869476	8
Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ_absolu	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_R1	40
Coq.Reals.Rfunctions.PowerRZ.pow_powerRZ	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_ind	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_inv	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_neg	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_mult_distr	40
Coq.Reals.Rfunctions.GP_finite	40
Coq.Reals.Rfunctions.sum_f_R0_triangle	40
Coq.Reals.Rfunctions.R_dist_pos	40	5.0.12	synth with cache (only 1: intros a b; only 1: apply Rle_ge; only 1: apply Rabs_pos).	2.88758397102	1647
Coq.Reals.Rfunctions.R_dist_sym	40
Coq.Reals.Rfunctions.R_dist_refl	40
Coq.Reals.Rfunctions.R_dist_eq	40	0.0.1.0.0	synth with cache (only 1: intros H; only 1: unfold R_dist; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: apply Rabs_R0).	0.0631301403046	13
Coq.Reals.Rfunctions.R_dist_tri	40
Coq.Reals.Rfunctions.R_dist_plus	40
Coq.Reals.Rfunctions.R_dist_mult_l	40
Coq.Reals.Rprod.prod_SO_split	40
Coq.Reals.Rprod.prod_SO_pos	40
Coq.Reals.Rprod.prod_SO_Rle	40
Coq.Reals.Rprod.fact_prodSO	40
Coq.Reals.Rprod.le_n_2n	40	0.0.0.0.0.0	synth with cache (only 1: intro n; only 1: simpl; only 1: rewrite <- (Nat.add_0_r n); only 1: rewrite <- Nat.add_assoc; only 1: apply Nat.add_le_mono_l; only 1: apply Nat.le_0_l).	0.0610799789429	6
Coq.Reals.Rprod.RfactN_fact2N_factk	40
Coq.Reals.Rprod.INR_fact_lt_0	40	0.0.2.0.0.1.1	synth with cache (only 1: intros n; only 1: apply lt_0_INR; only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	0.393409967422	78
Coq.Reals.Rprod.C_maj	40
Coq.Reals.Exp_prop.E1_cvg	40
Coq.Reals.Exp_prop.exp_form	40
Coq.Reals.Exp_prop.div2_double	40	0.0	synth with cache (only 1: intros a; only 1: apply Nat.div2_double).	0.0417530536652	2
Coq.Reals.Exp_prop.div2_S_double	40	1.0	synth with cache (only 1: intro; only 1: apply Nat.div2_succ_double).	0.0438580513	3
Coq.Reals.Exp_prop.div2_not_R0	40
Coq.Reals.Exp_prop.Reste_E_maj	40
Coq.Reals.Exp_prop.maj_Reste_cv_R0	40
Coq.Reals.Exp_prop.Reste_E_cv	40
Coq.Reals.Exp_prop.exp_plus	40
Coq.Reals.Exp_prop.exp_pos_pos	40
Coq.Reals.Exp_prop.exp_pos	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp_0	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp	40
Coq.Reals.Rpower.P_Rmin	40	2.3.0.1	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto with real; only 1: auto with real).	0.14639210701	35
Coq.Reals.Rpower.exp_le_3	40
Coq.Reals.Rpower.exp_increasing	40
Coq.Reals.Rpower.exp_lt_inv	40
Coq.Reals.Rpower.exp_ineq1	40
Coq.Reals.Rpower.ln_exists1	40
Coq.Reals.Rpower.ln_exists	40
Coq.Reals.Rpower.exp_ln	40
Coq.Reals.Rpower.exp_inv	40
Coq.Reals.Rpower.exp_Ropp	40
Coq.Reals.Rpower.ln_increasing	40
Coq.Reals.Rpower.ln_exp	40
Coq.Reals.Rpower.ln_1	40
Coq.Reals.Rpower.ln_lt_inv	40
Coq.Reals.Rpower.ln_inv	40
Coq.Reals.Rpower.ln_mult	40
Coq.Reals.Rpower.ln_Rinv	40
Coq.Reals.Rpower.ln_continue	40
Coq.Reals.Rpower.Rpower_plus	40
Coq.Reals.Rpower.Rpower_mult	40
Coq.Reals.Rpower.Rpower_O	40
Coq.Reals.Rpower.Rpower_1	40
Coq.Reals.Rpower.Rpower_pow	40
Coq.Reals.Rpower.Rpower_lt	40
Coq.Reals.Rpower.Rpower_sqrt	40
Coq.Reals.Rpower.Rpower_Ropp	40
Coq.Reals.Rpower.powerRZ_Rpower	40
Coq.Reals.Rpower.Rle_Rpower	40
Coq.Reals.Rpower.ln_lt_2	40
Coq.Reals.Rpower.limit1_ext	40
Coq.Reals.Rpower.limit1_imp	40
Coq.Reals.Rpower.Rinv_Rdiv	40	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: auto).	0.0699391365051	3
Coq.Reals.Rpower.Dln	40
Coq.Reals.Rpower.derivable_pt_lim_ln	40
Coq.Reals.Rpower.D_in_imp	40
Coq.Reals.Rpower.D_in_ext	40	1.15.0.2	synth with cache (only 1: unfold D_in; only 1: intros; only 1: elim H; only 1: auto).	35.8462619781	11388
Coq.Reals.Rpower.Dpower	40
Coq.Reals.Rpower.derivable_pt_lim_power	40
Coq.Reals.Rpower.Rpower_mult_distr	40
Coq.Reals.Rpower.Rlt_Rpower_l	40
Coq.Reals.Rpower.Rle_Rpower_l	40
Coq.Reals.Rpower.arcsinh_sinh	40
Coq.Reals.Rpower.sinh_arcsinh	40
Coq.Reals.Rpower.derivable_pt_lim_arcsinh	40
Coq.Reals.Rpower.arcsinh_lt	40
Coq.Reals.Rpower.arcsinh_le	40
Coq.Reals.Rpower.arcsinh_0	40
Coq.Reals.ConstructiveRcomplete.CReal_absSmall	40
Coq.Reals.ConstructiveRcomplete.Un_cv_mod_eq	40
Coq.Reals.ConstructiveRcomplete.Rfloor	40
Coq.Reals.ConstructiveRcomplete.FQ_dense	40
Coq.Reals.ConstructiveRcomplete.RQ_limit	40
Coq.Reals.ConstructiveRcomplete.Rdiag_cauchy_sequence	40
Coq.Reals.ConstructiveRcomplete.doubleLeCovariant	40
Coq.Reals.ConstructiveRcomplete.CReal_cv_self	40
Coq.Reals.ConstructiveRcomplete.Un_cv_extens	40
Coq.Reals.ConstructiveRcomplete.R_has_all_rational_limits	40
Coq.Reals.ConstructiveRcomplete.Rcauchy_complete	40
Coq.Reals.ConstructiveRcomplete.CRealImplem	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_increasing_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_unique	40
Coq.Reals.ConstructiveRealsMorphisms.Endomorph_id	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_proper	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_compose	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le_inv	40	4.0.1.1.0	synth with cache (only 1: intros; only 1: intro abs; only 1: destruct H; only 1: apply CRmorph_increasing; only 1: eauto).	0.212697982788	79
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_one	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_opp	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos	40
Coq.Reals.ConstructiveRealsMorphisms.NatOfZ	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_int	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Ql	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphism	40
Coq.Reals.ConstructiveRealsMorphisms.RightBound	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphismInv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_surject	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inject	40
Coq.Reals.RIneq.Rle_refl	40	0.0.16	synth with cache (only 1: intro LS'; only 1: right; only 1: reflexivity).	0.515238046646	604
Coq.Reals.RIneq.Rge_refl	40	0.0.0	synth with cache (only 1: intro; only 1: right; only 1: reflexivity).	0.0283989906311	3
Coq.Reals.RIneq.Rlt_irrefl	40
Coq.Reals.RIneq.Rgt_irrefl	40	0.0.0.0	synth with cache (only 1: intros r H; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	0.0390288829803	4
Coq.Reals.RIneq.Rlt_not_eq	40	0.0.0.10.4.5.3	synth with cache (only 1: intros r H; only 1: intros LT; only 1: intro H1; only 1: destruct H1 as [p pmaj]; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	26.3179149628	8032
Coq.Reals.RIneq.Rgt_not_eq	40	14.0.0.0.0	synth with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply (Rlt_irrefl r1); only 1: rewrite H0; only 1: now subst).	2.33409500122	2195
Coq.Reals.RIneq.Rlt_dichotomy_converse	40
Coq.Reals.RIneq.Req_dec	40
Coq.Reals.RIneq.Rtotal_order	40
Coq.Reals.RIneq.Rdichotomy	40	0.0.1	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.132238149643	54
Coq.Reals.RIneq.Rlt_le	40	7.0.0	synth with cache (only 1: red; only 1: intros; only 1: now left).	0.0620529651642	25
Coq.Reals.RIneq.Rgt_ge	40	2.1.14	synth with cache (only 1: intros Hb; only 1: left; only 1: tauto).	0.977309942245	914
Coq.Reals.RIneq.Rle_ge	40	13.0.0	synth with cache (only 1: intros; only 1: red; only 1: firstorder).	1.72948598862	882
Coq.Reals.RIneq.Rge_le	40	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: red; only 1: tauto; only 1: red; only 1: auto with real).	0.0442900657654	5
Coq.Reals.RIneq.Rlt_gt	40	0.0	synth with cache (only 1: intros; only 1: auto with real).	0.0243120193481	2
Coq.Reals.RIneq.Rgt_lt	40	0	synth with cache (only 1: trivial).	0.0192680358887	1
Coq.Reals.RIneq.Rnot_le_lt	40
Coq.Reals.RIneq.Rnot_ge_gt	40	1.0.9.0.7.3.5.0.9	synth with cache (only 1: intros; only 1: red; only 1: generalize (Rtotal_order r1 r2); only 1: intro abs; only 1: destruct abs; only 1: trivial; only 1: destruct H; only 1: red; only 1: tauto).	29.383877039	28643
Coq.Reals.RIneq.Rnot_le_gt	40	0.0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: tauto).	0.0738320350647	4
Coq.Reals.RIneq.Rnot_ge_lt	40	0.0.0	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: auto with real).	0.0316479206085	3
Coq.Reals.RIneq.Rnot_lt_le	40	4.1.2.0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: intros n m; only 1: generalize (total_order_T r1 r2); only 1: intuition).	2.81699299812	915
Coq.Reals.RIneq.Rnot_gt_le	40	0.2.0.0	synth with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.0486531257629	6
Coq.Reals.RIneq.Rnot_gt_ge	40	0.0.8.0.1	synth with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	1.22260689735	482
Coq.Reals.RIneq.Rnot_lt_ge	40	0.2.0.0.0.0.0	synth with cache (only 1: intros r1 r2 H; only 1: destruct (Rtotal_order r1 r2) as [| [H0| H0]]; only 1: contradiction; only 1: subst; only 1: auto with rorders; only 1: red; only 1: tauto).	0.0530099868774	9
Coq.Reals.RIneq.Rlt_not_le	40
Coq.Reals.RIneq.Rgt_not_le	40	1.0	synth with cache (only 1: intros; only 1: auto with real).	0.0438859462738	13
Coq.Reals.RIneq.Rlt_not_ge	40
Coq.Reals.RIneq.Rgt_not_ge	40	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: auto with real).	0.0412940979004	5
Coq.Reals.RIneq.Rle_not_lt	40	0.0.0.0	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: unfold not; only 1: intuition eauto  3).	0.0428359508514	4
Coq.Reals.RIneq.Rge_not_lt	40	0.0.0.0.1	synth with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).	0.318619966507	72
Coq.Reals.RIneq.Rle_not_gt	40	0.2.0.0.0.2	synth with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intros; only 1: red; only 1: apply Rle_not_lt; only 1: tauto).	0.130015850067	13
Coq.Reals.RIneq.Rge_not_gt	40	0.0.2	synth with cache (only 1: intros; only 1: apply Rle_not_lt; only 1: auto with real).	0.222923994064	50
Coq.Reals.RIneq.Req_le	40	0.0.0	synth with cache (only 1: intros; only 1: red; only 1: auto with real).	0.0330669879913	3
Coq.Reals.RIneq.Req_ge	40	0.0.3	synth with cache (only 1: intros; only 1: red; only 1: auto with real).	0.0436480045319	18
Coq.Reals.RIneq.Req_le_sym	40	0.1.0	synth with cache (only 1: unfold Rle; only 1: intros; only 1: auto with real).	0.0358910560608	4
Coq.Reals.RIneq.Req_ge_sym	40	1.0	synth with cache (only 1: unfold Rge; only 1: auto).	0.0293481349945	3
Coq.Reals.RIneq.Rgt_asym	40	0.1.0	synth with cache (only 1: do 2 intro; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.0392670631409	4
Coq.Reals.RIneq.Rle_antisym	40
Coq.Reals.RIneq.Rge_antisym	40	1.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2); only 1: intuition).	0.0955591201782	4
Coq.Reals.RIneq.Rle_le_eq	40	1.1	synth with cache (only 1: intros a b; only 1: intuition).	0.188055038452	43
Coq.Reals.RIneq.Rge_ge_eq	40	0	synth with cache (only 1: intuition).	0.0441620349884	1
Coq.Reals.RIneq.Rlt_eq_compat	40	0.1.5	synth with cache (only 1: intros n m H1 H2; only 1: intros; only 1: now subst).	0.0821249485016	33
Coq.Reals.RIneq.Rgt_eq_compat	40	0.0.0.0.0	synth with cache (only 1: intros x x' y y'; only 1: intros; only 1: replace x with x'; only 1: replace y with y'; only 1: assumption).	0.0398559570312	5
Coq.Reals.RIneq.Rle_trans	40
Coq.Reals.RIneq.Rge_trans	40
Coq.Reals.RIneq.Rgt_trans	40	1.3.14.6.6.0	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intros EQ; only 1: intros n m H1 H2; only 1: intros A eq_dec; only 1: intros; only 1: firstorder).	16.4057860374	21248
Coq.Reals.RIneq.Rle_lt_trans	40
Coq.Reals.RIneq.Rlt_le_trans	40	1.0.0.0.3.0	synth with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intros op Hop; only 1: unfold Rle; only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  3).	2.15838384628	50
Coq.Reals.RIneq.Rge_gt_trans	40
Coq.Reals.RIneq.Rgt_ge_trans	40
Coq.Reals.RIneq.Rlt_dec	40	0.0.1.0.1.10	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	5.23413705826	1124
Coq.Reals.RIneq.Rle_dec	40	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.165095090866	3
Coq.Reals.RIneq.Rgt_dec	40	0.0.0.1	synth with cache (only 1: do 2 intro; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition eauto  4 with real; only 1: auto with real).	0.0982780456543	5
Coq.Reals.RIneq.Rge_dec	40	1.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.181297063828	16
Coq.Reals.RIneq.Rlt_le_dec	40	0.4.1.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.316197872162	25
Coq.Reals.RIneq.Rgt_ge_dec	40	1.1.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.0701360702515	5
Coq.Reals.RIneq.Rle_lt_dec	40	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.0974280834198	3
Coq.Reals.RIneq.Rge_gt_dec	40	0.1.0.1.1.0	synth with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.482795000076	85
Coq.Reals.RIneq.Rlt_or_le	40	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.0616290569305	3
Coq.Reals.RIneq.Rgt_or_ge	40	0.1.0.0.1.0	synth with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: left; only 1: eauto with rorders; only 1: right; only 1: eauto with rorders).	0.157197952271	49
Coq.Reals.RIneq.Rle_or_lt	40	0.0.1	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.316925048828	53
Coq.Reals.RIneq.Rge_or_gt	40	0.1.0.1.0.0	synth with cache (only 1: intros; only 1: edestruct Rlt_or_le; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.285506010056	68
Coq.Reals.RIneq.Rle_lt_or_eq_dec	40	1.0.5.0.3.6	synth with cache (only 1: intros x y; only 1: unfold Rle; only 1: destruct (total_order_T x y); only 1: intuition; only 1: right; only 1: intuition).	5.34769797325	2661
Coq.Reals.RIneq.inser_trans_R	40
Coq.Reals.RIneq.Rplus_0_r	40	0.3.0.0.6	synth with cache (only 1: intros a0; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_0; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_0_l).	34.2535851002	570
Coq.Reals.RIneq.Rplus_ne	40	1.1.3.1	synth with cache (only 1: intros; only 1: split; only 1: ring; only 1: ring).	1.25200605392	16
Coq.Reals.RIneq.Rplus_opp_l	40	0.2.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_opp, Rrepr_0; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_opp_r).	1.44484114647	7
Coq.Reals.RIneq.Rplus_opp_r_uniq	40
Coq.Reals.RIneq.Rplus_eq_compat_l	40	1.3.0	synth with cache (only 1: Bool.destr_bool; only 1: rewrite H; only 1: tauto).	0.0538380146027	11
Coq.Reals.RIneq.Rplus_eq_compat_r	40	1.3.1	synth with cache (only 1: Bool.destr_bool; only 1: rewrite H; only 1: tauto).	0.0549478530884	20
Coq.Reals.RIneq.Rplus_eq_reg_l	40
Coq.Reals.RIneq.Rplus_eq_reg_r	40
Coq.Reals.RIneq.Rplus_0_r_uniq	40
Coq.Reals.RIneq.Rplus_eq_0_l	40
Coq.Reals.RIneq.Rplus_eq_R0	40
Coq.Reals.RIneq.Rinv_r	40	0.4.0.0.0.0.0.1	synth with cache (only 1: intros; only 1: rewrite RinvImpl.Rinv_def; only 1: destruct (Req_appart_dec r R0); only 1: contradiction; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rquot2, Rrepr_1; only 1: rewrite CReal_inv_r; only 1: reflexivity).	7.49461603165	330
Coq.Reals.RIneq.Rinv_l_sym	40	0.0.1	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.051057100296	4
Coq.Reals.RIneq.Rinv_r_sym	40	0.0.1	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.0517141819	4
Coq.Reals.RIneq.Rmult_0_r	40	1.1	synth with cache (only 1: intros; only 1: field).	0.0751218795776	11
Coq.Reals.RIneq.Rmult_0_l	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0584709644318	2
Coq.Reals.RIneq.Rmult_ne	40	2.2.0.1.10	synth with cache (only 1: unfold IZR, IPR; only 1: repeat split; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l; only 1: apply Rmult_1_l).	5.80813789368	375
Coq.Reals.RIneq.Rmult_1_r	40	0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l).	0.134468078613	17
Coq.Reals.RIneq.Rmult_eq_compat_l	40	0.0	synth with cache (only 1: intros r r1 r2; only 1: apply f_equal).	0.0264101028442	2
Coq.Reals.RIneq.Rmult_eq_compat_r	40	1.6.4	synth with cache (only 1: intros r1 r2 H H0; only 1: subst; only 1: tauto).	1.09987807274	460
Coq.Reals.RIneq.Rmult_eq_reg_l	40
Coq.Reals.RIneq.Rmult_eq_reg_r	40
Coq.Reals.RIneq.Rmult_integral	40
Coq.Reals.RIneq.Rmult_eq_0_compat	40
Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	1.0	synth with cache (only 1: intros a b Hb; only 1: auto with real).	0.0340330600739	3
Coq.Reals.RIneq.Rmult_eq_0_compat_l	40	0	synth with cache (only 1: auto with real).	0.0216670036316	1
Coq.Reals.RIneq.Rmult_neq_0_reg	40	5.5	synth with cache (only 1: intros a m Hm; only 1: intuition).	0.733982086182	161
Coq.Reals.RIneq.Rmult_integral_contrapositive	40
Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	40	0.0	synth with cache (only 1: intros r1 r2 H; only 1: auto with real).	0.0410759449005	2
Coq.Reals.RIneq.Rmult_plus_distr_r	40	7.1	synth with cache (only 1: intros m n p; only 1: ring).	7.38876795769	257
Coq.Reals.RIneq.Rsqr_0	40
Coq.Reals.RIneq.Rsqr_0_uniq	40
Coq.Reals.RIneq.Ropp_eq_compat	40	2.0	synth with cache (only 1: intros x y H; only 1: now subst).	0.213010072708	40
Coq.Reals.RIneq.Ropp_0	40	2	synth with cache (only 1: ring).	0.0403530597687	11
Coq.Reals.RIneq.Ropp_eq_0_compat	40	0.22.7	synth with cache (only 1: intros m Hm; only 1: subst; only 1: ring).	2.7366809845	2350
Coq.Reals.RIneq.Ropp_involutive	40	1.1	synth with cache (only 1: intros; only 1: ring).	0.442832946777	20
Coq.Reals.RIneq.Ropp_neq_0_compat	40
Coq.Reals.RIneq.Ropp_plus_distr	40	1.2	synth with cache (only 1: intros; only 1: ring).	0.150735139847	23
Coq.Reals.RIneq.Ropp_mult_distr_l	40	1.11	synth with cache (only 1: intros a n; only 1: ring).	0.864961862564	320
Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0665431022644	2
Coq.Reals.RIneq.Rmult_opp_opp	40	1.2	synth with cache (only 1: intros n m; only 1: ring).	0.900271177292	108
Coq.Reals.RIneq.Ropp_mult_distr_r	40	6.11	synth with cache (only 1: intros a n; only 1: ring).	20.5441420078	2393
Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0385890007019	2
Coq.Reals.RIneq.Rminus_0_r	40	1.0	synth with cache (only 1: intros; only 1: ring).	0.0481290817261	11
Coq.Reals.RIneq.Rminus_0_l	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0330460071564	2
Coq.Reals.RIneq.Ropp_minus_distr	40	0.1	synth with cache (only 1: intros; only 1: ring).	0.0382928848267	3
Coq.Reals.RIneq.Ropp_minus_distr'	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0381600856781	2
Coq.Reals.RIneq.Rminus_diag_eq	40	1.10.0.3	synth with cache (only 1: intros; only 1: rewrite H; only 1: unfold Rminus; only 1: ring).	9.41615509987	4119
Coq.Reals.RIneq.Rminus_diag_uniq	40
Coq.Reals.RIneq.Rminus_diag_uniq_sym	40
Coq.Reals.RIneq.Rplus_minus	40	0.1	synth with cache (only 1: intros; only 1: ring).	0.0353989601135	3
Coq.Reals.RIneq.Rminus_eq_contra	40	2.1.1.0	synth with cache (only 1: intros; only 1: red; only 1: intro; only 1: auto with real).	0.129894018173	8
Coq.Reals.RIneq.Rminus_not_eq	40	2.0.1	synth with cache (only 1: intros; only 1: red; only 1: auto with real).	0.275949001312	64
Coq.Reals.RIneq.Rminus_not_eq_right	40	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: apply Rminus_diag_eq; only 1: auto).	0.0482380390167	5
Coq.Reals.RIneq.Rmult_minus_distr_l	40	1.0	synth with cache (only 1: intros; only 1: ring).	0.0606479644775	17
Coq.Reals.RIneq.Rinv_1	40
Coq.Reals.RIneq.Rinv_neq_0_compat	40
Coq.Reals.RIneq.Rinv_involutive	40	0.0.1	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.04447722435	4
Coq.Reals.RIneq.Rinv_mult_distr	40
Coq.Reals.RIneq.Ropp_inv_permute	40	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.0469830036163	3
Coq.Reals.RIneq.Rinv_r_simpl_r	40	1.5.16	synth with cache (only 1: intuition; only 1: field; only 1: trivial).	4.84110116959	1535
Coq.Reals.RIneq.Rinv_r_simpl_l	40	0.0.0.2.4.0.0	synth with cache (only 1: intros; only 1: transitivity (1 * r2); only 1: apply Rmult_eq_reg_l with r1; only 1: field; only 1: auto with real; only 1: auto with real; only 1: auto with real).	0.96369099617	178
Coq.Reals.RIneq.Rinv_r_simpl_m	40	0.0.0.4.6.0.0	synth with cache (only 1: intros; only 1: transitivity (r2 * 1); only 1: apply Rmult_eq_reg_l with r1; only 1: field; only 1: auto with real; only 1: auto with real; only 1: auto with real).	14.7393088341	4069
Coq.Reals.RIneq.Rinv_mult_simpl	40
Coq.Reals.RIneq.Rplus_gt_compat_l	40	1.7.0	synth with cache (only 1: intros; only 1: red; only 1: auto with real).	0.174304962158	89
Coq.Reals.RIneq.Rplus_lt_compat_r	40
Coq.Reals.RIneq.Rplus_gt_compat_r	40	1.1.1.6	synth with cache (only 1: intro Hz; only 1: do 2 intro; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.570784091949	321
Coq.Reals.RIneq.Rplus_le_compat_l	40	1.0.3	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition).	0.39710688591	27
Coq.Reals.RIneq.Rplus_ge_compat_l	40
Coq.Reals.RIneq.Rplus_le_compat_r	40	0.0.0.0.2.0.0.0.0.0	synth with cache (only 1: unfold Rle; only 1: intros; only 1: elim H; only 1: intro; only 1: left; only 1: auto with zarith real; only 1: intro; only 1: right; only 1: rewrite <- H0; only 1: auto with zarith real).	1.59118294716	409
Coq.Reals.RIneq.Rplus_ge_compat_r	40	3.1.0.6	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).	0.598707914352	286
Coq.Reals.RIneq.Rplus_lt_compat	40
Coq.Reals.RIneq.Rplus_le_compat	40
Coq.Reals.RIneq.Rplus_gt_compat	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rlt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.0366461277008	4
Coq.Reals.RIneq.Rplus_ge_compat	40
Coq.Reals.RIneq.Rplus_lt_le_compat	40
Coq.Reals.RIneq.Rplus_le_lt_compat	40
Coq.Reals.RIneq.Rplus_gt_ge_compat	40	0.0.1.25.2	synth with cache (only 1: intros; only 1: unfold Rgt, Z.pred; only 1: apply Rle_lt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	23.1944580078	15278
Coq.Reals.RIneq.Rplus_ge_gt_compat	40	0.6.1.3	synth with cache (only 1: intros; only 1: apply Rlt_le_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.400583028793	216
Coq.Reals.RIneq.Rplus_lt_0_compat	40
Coq.Reals.RIneq.Rplus_le_lt_0_compat	40
Coq.Reals.RIneq.Rplus_lt_le_0_compat	40
Coq.Reals.RIneq.Rplus_le_le_0_compat	40
Coq.Reals.RIneq.sum_inequa_Rle_lt	40	4.7	synth with cache (only 1: intros Ha'; only 1: auto with real).	0.234179019928	126
Coq.Reals.RIneq.Rplus_lt_reg_l	40
Coq.Reals.RIneq.Rplus_lt_reg_r	40
Coq.Reals.RIneq.Rplus_le_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_l	40
Coq.Reals.RIneq.Rplus_ge_reg_l	40	6.0.1.0.4.1.1.1.7	synth with cache (only 1: do 3 intro; only 1: generalize (Rtotal_order r1 r2); only 1: intuition; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: intuition; only 1: right; only 1: apply Rplus_eq_reg_l with r; only 1: auto with zarith real).	21.7564640045	7641
Coq.Reals.RIneq.Rplus_le_reg_pos_r	40
Coq.Reals.RIneq.Rplus_lt_reg_pos_r	40
Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_neg_r	40
Coq.Reals.RIneq.Ropp_gt_lt_contravar	40
Coq.Reals.RIneq.Ropp_lt_gt_contravar	40	4.2	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: intuition).	0.177374124527	64
Coq.Reals.RIneq.Ropp_lt_contravar	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp, Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	0.0643620491028	8
Coq.Reals.RIneq.Ropp_gt_contravar	40	6.1.0	synth with cache (only 1: intros; only 1: unfold Rgt; only 1: auto with real).	0.701288938522	49
Coq.Reals.RIneq.Ropp_le_ge_contravar	40	0.4.0.4.0	synth with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).	1.58025503159	368
Coq.Reals.RIneq.Ropp_ge_le_contravar	40	0.2	synth with cache (only 1: intros; only 1: auto with real).	0.216222047806	57
Coq.Reals.RIneq.Ropp_le_contravar	40	1.1.0.0.2.0	synth with cache (only 1: unfold Rle; only 1: intros; only 1: elim H; only 1: intro; only 1: auto with real; only 1: auto with real).	0.101935863495	16
Coq.Reals.RIneq.Ropp_ge_contravar	40	0.0.0.0	synth with cache (only 1: unfold Rge; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).	0.0682110786438	4
Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40
Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0353000164032	4
Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0280930995941	4
Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0286519527435	4
Coq.Reals.RIneq.Ropp_0_le_ge_contravar	40	0.0.0.1	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0267851352692	5
Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0321910381317	4
Coq.Reals.RIneq.Ropp_lt_cancel	40	0.5.0.7.1.1	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: intro Hnotz; only 1: eapply Rlt_not_le; only 1: eauto; only 1: auto with real).	5.2481751442	2144
Coq.Reals.RIneq.Ropp_gt_cancel	40	0.0.0.0.5	synth with cache (only 1: unfold Rgt; only 1: intros x y H'; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).	0.126734972	70
Coq.Reals.RIneq.Ropp_le_cancel	40
Coq.Reals.RIneq.Ropp_ge_cancel	40
Coq.Reals.RIneq.Rmult_lt_compat_r	40
Coq.Reals.RIneq.Rmult_gt_compat_r	40	0	synth with cache (only 1: auto using Rplus_lt_compat with rorders).	0.0376188755035	1
Coq.Reals.RIneq.Rmult_gt_compat_l	40	20	synth with cache (only 1: intuition).	1.69201397896	1188
Coq.Reals.RIneq.Rmult_le_compat_l	40
Coq.Reals.RIneq.Rmult_le_compat_r	40
Coq.Reals.RIneq.Rmult_ge_compat_l	40	14.6	synth with cache (only 1: intros x y; only 1: intuition).	3.9815120697	2896
Coq.Reals.RIneq.Rmult_ge_compat_r	40	15.7	synth with cache (only 1: intros x y; only 1: intuition).	14.6385219097	13191
Coq.Reals.RIneq.Rmult_le_compat	40
Coq.Reals.RIneq.Rmult_ge_compat	40	6.5.0	synth with cache (only 1: intros x y z t H' H'0 H'1 H'2; only 1: pattern x at 1; only 1: firstorder).	1.28453207016	328
Coq.Reals.RIneq.Rmult_gt_0_lt_compat	40
Coq.Reals.RIneq.Rmult_le_0_lt_compat	40
Coq.Reals.RIneq.Rmult_lt_0_compat	40
Coq.Reals.RIneq.Rmult_le_compat_neg_l	40
Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	40	0.2.0.1.0	synth with cache (only 1: intros; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).	0.177687883377	34
Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	40	0.1.0.9.0	synth with cache (only 1: intros; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).	0.624019145966	394
Coq.Reals.RIneq.Rmult_lt_reg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_r	40
Coq.Reals.RIneq.Rmult_gt_reg_l	40	5.0.0.0	synth with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: auto with real).	0.125669002533	31
Coq.Reals.RIneq.Rmult_le_reg_l	40
Coq.Reals.RIneq.Rmult_le_reg_r	40
Coq.Reals.RIneq.Rlt_minus	40
Coq.Reals.RIneq.Rgt_minus	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r).	0.0436689853668	4
Coq.Reals.RIneq.Rlt_Rminus	40
Coq.Reals.RIneq.Rle_minus	40	2.7.4.3	synth with cache (only 1: do 2 intro; only 1: generalize (Rtotal_order r1 r2); only 1: red; only 1: intuition).	19.4015600681	5435
Coq.Reals.RIneq.Rge_minus	40
Coq.Reals.RIneq.Rminus_lt	40
Coq.Reals.RIneq.Rminus_gt	40	0.0.0.4.2.4.0	synth with cache (only 1: intros; only 1: red; only 1: replace r2 with (0 + r2); only 1: replace r1 with (r1 - r2 + r2); only 1: auto with real; only 1: ring; only 1: auto with real).	5.83171892166	3364
Coq.Reals.RIneq.Rminus_gt_0_lt	40
Coq.Reals.RIneq.Rminus_le	40	0.0.0.0.0.1	synth with cache (only 1: intros; only 1: replace r2 with (0 + r2); only 1: replace r1 with (r1 - r2 + r2); only 1: auto with real; only 1: ring; only 1: auto with real).	0.44203209877	109
Coq.Reals.RIneq.Rminus_ge	40
Coq.Reals.RIneq.tech_Rplus	40
Coq.Reals.RIneq.Rle_0_sqr	40
Coq.Reals.RIneq.Rlt_0_sqr	40
Coq.Reals.RIneq.Rplus_sqr_eq_0_l	40
Coq.Reals.RIneq.Rplus_sqr_eq_0	40
Coq.Reals.RIneq.Rlt_0_1	40	0.0.1	synth with cache (only 1: replace 1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.0310809612274	4
Coq.Reals.RIneq.Rle_0_1	40	0.0.0.1	synth with cache (only 1: replace 1 with 1²; only 1: auto with real; only 1: unfold Rsqr; only 1: auto with real).	0.0329780578613	5
Coq.Reals.RIneq.Rinv_0_lt_compat	40
Coq.Reals.RIneq.Rinv_lt_0_compat	40	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: red; only 1: intros; only 1: absurd (1 <= 0); only 1: auto with real; only 1: replace 1 with (r * / r); only 1: replace 0 with (r * 0); only 1: auto with real; only 1: auto with real; only 1: auto with real).	0.753180027008	208
Coq.Reals.RIneq.Rinv_lt_contravar	40
Coq.Reals.RIneq.Rinv_1_lt_contravar	40
Coq.Reals.RIneq.Rle_lt_0_plus_1	40
Coq.Reals.RIneq.Rlt_plus_1	40
Coq.Reals.RIneq.tech_Rgt_minus	40	0.0.0.1.0.4.9	synth with cache (only 1: intros x y H'; only 1: pattern x at 1; only 1: rewrite <- (Rplus_0_r x); only 1: apply Rplus_lt_compat_l; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	8.657777071	3635
Coq.Reals.RIneq.S_INR	40	1.1.0.14	synth with cache (only 1: induction n; only 1: simpl; only 1: auto with real; only 1: auto with real).	3.2539088726	970
Coq.Reals.RIneq.S_O_plus_INR	40	4.0.4.0.0.2.1	synth with cache (only 1: intros; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros; only 1: field).	4.02056694031	1255
Coq.Reals.RIneq.plus_INR	40
Coq.Reals.RIneq.minus_INR	40
Coq.Reals.RIneq.mult_INR	40
Coq.Reals.RIneq.pow_INR	40
Coq.Reals.RIneq.lt_0_INR	40
Coq.Reals.RIneq.lt_INR	40
Coq.Reals.RIneq.lt_1_INR	40
Coq.Reals.RIneq.pos_INR_nat_of_P	40
Coq.Reals.RIneq.pos_INR	40	2.1.0.13.7	synth with cache (only 1: red; only 1: induction n; only 1: auto with real; only 1: repeat rewrite S_INR; only 1: auto with real).	24.3540768623	12887
Coq.Reals.RIneq.INR_lt	40
Coq.Reals.RIneq.le_INR	40
Coq.Reals.RIneq.INR_not_0	40	4.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: rewrite H0; only 1: auto with real).	0.0584030151367	12
Coq.Reals.RIneq.not_0_INR	40
Coq.Reals.RIneq.not_INR	40
Coq.Reals.RIneq.INR_eq	40
Coq.Reals.RIneq.INR_le	40
Coq.Reals.RIneq.not_1_INR	40
Coq.Reals.RIneq.IZN	40	0.1.0.9	synth with cache (only 1: intros x IH; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	0.330355882645	167
Coq.Reals.RIneq.INR_IPR	40
Coq.Reals.RIneq.INR_IZR_INZ	40
Coq.Reals.RIneq.plus_IZR_NEG_POS	40
Coq.Reals.RIneq.plus_IZR	40
Coq.Reals.RIneq.mult_IZR	40
Coq.Reals.RIneq.pow_IZR	40
Coq.Reals.RIneq.succ_IZR	40
Coq.Reals.RIneq.opp_IZR	40	1.0.0.0.1.15.22.4.4	synth with cache (only 1: intro; only 1: unfold IZR; only 1: destruct n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: ring).	20.2347340584	22200
Coq.Reals.RIneq.minus_IZR	40
Coq.Reals.RIneq.Z_R_minus	40
Coq.Reals.RIneq.lt_0_IZR	40
Coq.Reals.RIneq.lt_IZR	40
Coq.Reals.RIneq.eq_IZR_R0	40
Coq.Reals.RIneq.eq_IZR	40
Coq.Reals.RIneq.not_0_IZR	40
Coq.Reals.RIneq.le_0_IZR	40
Coq.Reals.RIneq.le_IZR	40
Coq.Reals.RIneq.le_IZR_R1	40
Coq.Reals.RIneq.IZR_ge	40
Coq.Reals.RIneq.IZR_le	40
Coq.Reals.RIneq.IZR_lt	40
Coq.Reals.RIneq.IZR_neq	40	1.2.2.0.4.0	synth with cache (only 1: intros n m H; only 1: red; only 1: intros H0; only 1: apply H; only 1: apply eq_IZR; only 1: auto).	2.63217496872	1014
Coq.Reals.RIneq.one_IZR_lt1	40
Coq.Reals.RIneq.one_IZR_r_R1	40
Coq.Reals.RIneq.single_z_r_R1	40
Coq.Reals.RIneq.tech_single_z_r_R1	40
Coq.Reals.RIneq.Rmult_le_pos	40	0.0.0.1	synth with cache (only 1: intros; only 1: replace 0 with (0 * r2); only 1: auto with real; only 1: auto with real).	0.436706066132	94
Coq.Reals.RIneq.Rinv_le_contravar	40
Coq.Reals.RIneq.Rle_Rinv	40
Coq.Reals.RIneq.Ropp_div	40
Coq.Reals.RIneq.double	40	5.2.0	synth with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: ring).	0.0791609287262	15
Coq.Reals.RIneq.double_var	40	3.16.7.16	synth with cache (only 1: Z.nzsimpl'; only 1: Bool.destr_bool; only 1: ring_simplify; only 1: field).	14.2570230961	7904
Coq.Reals.RIneq.R_rm	40
Coq.Reals.RIneq.Zeq_bool_IZR	40	1.2.2.1	synth with cache (only 1: intros; only 1: apply Zeq_is_eq_bool; only 1: apply eq_IZR; only 1: auto with zarith real).	0.109225034714	11
Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	40	0.0.1.0	synth with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 * r3); only 1: auto with real; only 1: auto with real).	0.206535816193	41
Coq.Reals.RIneq.le_epsilon	40
Coq.Reals.RIneq.completeness_weak	40
Coq.Reals.RIneq.Rdiv_lt_0_compat	40
Coq.Reals.RIneq.Rdiv_plus_distr	40	1.1.0.2.17.9	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intros a b; only 1: intros x y z; only 1: intro; only 1: unfold Rdiv; only 1: ring).	17.5951769352	10029
Coq.Reals.RIneq.Rdiv_minus_distr	40
Coq.Reals.RIneq.Req_EM_T	40	0.0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.0629019737244	4
Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40
Coq.Reals.ClassicalDedekindReals.lowerCutBelow	40
Coq.Reals.ClassicalDedekindReals.lowerCutAbove	40
Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40
Coq.Reals.ClassicalDedekindReals.DRealQlim	40
Coq.Reals.ClassicalDedekindReals.DRealAbstr	40
Coq.Reals.ClassicalDedekindReals.UpperAboveLower	40
Coq.Reals.ClassicalDedekindReals.DRealRepr	40
Coq.Reals.ClassicalDedekindReals.Rle_antisym	40
Coq.Reals.ClassicalDedekindReals.lowerUpper	40
Coq.Reals.ClassicalDedekindReals.DRealOpen	40
Coq.Reals.ClassicalDedekindReals.DRealReprQ	40
Coq.Reals.ClassicalDedekindReals.DRealReprQup	40
Coq.Reals.ClassicalDedekindReals.DRealQuot1	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	40
Coq.Reals.ClassicalDedekindReals.DRealQuot2	40
Coq.Reals.ArithProp.minus_neq_O	40
Coq.Reals.ArithProp.le_minusni_n	40
Coq.Reals.ArithProp.lt_minus_O_lt	40
Coq.Reals.ArithProp.even_odd_cor	40
Coq.Reals.ArithProp.le_double	40	0.0	synth with cache (only 1: intros n m; only 1: apply Nat.mul_le_mono_pos_l, Nat.lt_0_succ).	0.0267288684845	2
Coq.Reals.ArithProp.euclidian_division	40
Coq.Reals.ArithProp.tech8	40	9.0	synth with cache (only 1: intros; only 1: auto with arith).	0.576728820801	79
Coq.Reals.R_Ifp.tech_up	40
Coq.Reals.R_Ifp.up_tech	40
Coq.Reals.R_Ifp.fp_R0	40
Coq.Reals.R_Ifp.for_base_fp	40
Coq.Reals.R_Ifp.base_fp	40
Coq.Reals.R_Ifp.base_Int_part	40
Coq.Reals.R_Ifp.Int_part_INR	40
Coq.Reals.R_Ifp.fp_nat	40	15.8.5.12	synth with cache (only 1: intro z; only 1: unfold frac_part; only 1: unfold Rminus; only 1: intuition eauto  4 with real).	11.4779398441	15512
Coq.Reals.R_Ifp.R0_fp_O	40
Coq.Reals.R_Ifp.Rminus_Int_part1	40
Coq.Reals.R_Ifp.Rminus_Int_part2	40
Coq.Reals.R_Ifp.Rminus_fp1	40
Coq.Reals.R_Ifp.Rminus_fp2	40
Coq.Reals.R_Ifp.plus_Int_part1	40
Coq.Reals.R_Ifp.plus_Int_part2	40
Coq.Reals.R_Ifp.plus_frac_part1	40
Coq.Reals.R_Ifp.plus_frac_part2	40
Coq.Reals.Machin.atan_sub_correct	40
Coq.Reals.Machin.tech	40
Coq.Reals.Machin.Machin_2_3	40
Coq.Reals.Machin.Machin_4_5_239	40
Coq.Reals.Machin.Machin_2_3_7	40
Coq.Reals.Machin.PI_2_3_7_ineq	40
Coq.Reals.RiemannInt.phi_sequence_prop	40
Coq.Reals.RiemannInt.RiemannInt_P1	40
Coq.Reals.RiemannInt.RiemannInt_P2	40
Coq.Reals.RiemannInt.RiemannInt_P3	40
Coq.Reals.RiemannInt.RiemannInt_exists	40
Coq.Reals.RiemannInt.RiemannInt_P4	40
Coq.Reals.RiemannInt.RinvN_pos	40	3	synth with cache (only 1: auto with real).	0.0432589054108	4
Coq.Reals.RiemannInt.RinvN_cv	40
Coq.Reals.RiemannInt.Riemann_integrable_ext	40
Coq.Reals.RiemannInt.RiemannInt_P5	40
Coq.Reals.RiemannInt.maxN	40
Coq.Reals.RiemannInt.Heine_cor1	40
Coq.Reals.RiemannInt.Heine_cor2	40
Coq.Reals.RiemannInt.SubEqui_P1	40	1.0.1	synth with cache (only 1: intros; only 1: simpl; only 1: reflexivity).	0.0807158946991	11
Coq.Reals.RiemannInt.SubEqui_P2	40
Coq.Reals.RiemannInt.SubEqui_P3	40
Coq.Reals.RiemannInt.SubEqui_P4	40
Coq.Reals.RiemannInt.SubEqui_P5	40
Coq.Reals.RiemannInt.SubEqui_P6	40
Coq.Reals.RiemannInt.SubEqui_P7	40
Coq.Reals.RiemannInt.SubEqui_P8	40
Coq.Reals.RiemannInt.SubEqui_P9	40
Coq.Reals.RiemannInt.RiemannInt_P6	40
Coq.Reals.RiemannInt.RiemannInt_P7	40
Coq.Reals.RiemannInt.continuity_implies_RiemannInt	40
Coq.Reals.RiemannInt.RiemannInt_P8	40
Coq.Reals.RiemannInt.RiemannInt_P9	40
Coq.Reals.RiemannInt.RiemannInt_P10	40
Coq.Reals.RiemannInt.RiemannInt_P11	40
Coq.Reals.RiemannInt.RiemannInt_P12	40
Coq.Reals.RiemannInt.RiemannInt_P13	40
Coq.Reals.RiemannInt.RiemannInt_P14	40
Coq.Reals.RiemannInt.RiemannInt_P15	40
Coq.Reals.RiemannInt.RiemannInt_P16	40
Coq.Reals.RiemannInt.Rle_cv_lim	40
Coq.Reals.RiemannInt.RiemannInt_P17	40
Coq.Reals.RiemannInt.RiemannInt_P18	40
Coq.Reals.RiemannInt.RiemannInt_P19	40
Coq.Reals.RiemannInt.FTC_P1	40
Coq.Reals.RiemannInt.RiemannInt_P20	40
Coq.Reals.RiemannInt.RiemannInt_P21	40
Coq.Reals.RiemannInt.RiemannInt_P22	40
Coq.Reals.RiemannInt.RiemannInt_P23	40
Coq.Reals.RiemannInt.RiemannInt_P24	40
Coq.Reals.RiemannInt.RiemannInt_P25	40
Coq.Reals.RiemannInt.RiemannInt_P26	40
Coq.Reals.RiemannInt.RiemannInt_P27	40
Coq.Reals.RiemannInt.RiemannInt_P28	40
Coq.Reals.RiemannInt.RiemannInt_P29	40
Coq.Reals.RiemannInt.RiemannInt_P30	40
Coq.Reals.RiemannInt.RiemannInt_P31	40
Coq.Reals.RiemannInt.RiemannInt_P32	40
Coq.Reals.RiemannInt.RiemannInt_P33	40
Coq.Reals.RiemannInt.FTC_Riemann	40
Coq.Reals.RiemannInt.RiemannInt_const_bound	40
Coq.Reals.RiemannInt.Riemann_integrable_scal	40
Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40
Coq.Reals.Ranalysis2.formule	40
Coq.Reals.Ranalysis2.maj_term1	40
Coq.Reals.Ranalysis2.maj_term2	40
Coq.Reals.Ranalysis2.maj_term3	40
Coq.Reals.Ranalysis2.maj_term4	40
Coq.Reals.Ranalysis2.D_x_no_cond	40
Coq.Reals.Ranalysis2.Rabs_4	40
Coq.Reals.Ranalysis2.Rlt_4	40	0.3.0.2.2.4.0.0.2.5.4	synth with cache (only 1: intros f1 a x X; only 1: elim (Rplus_ne 1); only 1: cut (0 < 1); only 1: rewrite Rplus_0_r; only 1: intros r n H'; only 1: elim (Rplus_ne 1); only 1: intro; only 1: intro; only 1: intros; only 1: Lra.lra; only 1: apply Rlt_0_1).	22.3099241257	9411
Coq.Reals.Ranalysis2.quadruple	40	4.0	synth with cache (only 1: intro; only 1: field).	0.0525190830231	6
Coq.Reals.Ranalysis2.quadruple_var	40	14.7	synth with cache (only 1: intros a0; only 1: field).	0.96505689621	879
Coq.Reals.Ranalysis2.continuous_neq_0	40
Coq.Reals.Rtopology.interior_P1	40
Coq.Reals.Rtopology.interior_P2	40	1.5.0	synth with cache (only 1: unfold interior; only 1: intros; only 1: trivial).	0.051262140274	9
Coq.Reals.Rtopology.adherence_P1	40
Coq.Reals.Rtopology.included_trans	40	0.10.0	synth with cache (only 1: intros; only 1: intros H'3; only 1: eauto).	0.412272930145	136
Coq.Reals.Rtopology.interior_P3	40
Coq.Reals.Rtopology.complementary_P1	40	0.0.3	synth with cache (only 1: intros; only 1: intros [y [H H0]]; only 1: contradiction).	0.0407691001892	6
Coq.Reals.Rtopology.adherence_P2	40
Coq.Reals.Rtopology.adherence_P3	40
Coq.Reals.Rtopology.open_set_P1	40
Coq.Reals.Rtopology.closed_set_P1	40
Coq.Reals.Rtopology.neighbourhood_P1	40	5.12.0.2.0	synth with cache (only 1: unfold included; only 1: intros f X x; only 1: intros; only 1: elim H0; only 1: firstorder).	4.41623210907	3769
Coq.Reals.Rtopology.open_set_P2	40	16.19	synth with cache (only 1: intros P HP p; only 1: firstorder).	15.8526859283	14016
Coq.Reals.Rtopology.open_set_P3	40
Coq.Reals.Rtopology.open_set_P4	40	1.1.0.0	synth with cache (only 1: unfold open_set, complementary, point_adherent; only 1: intro; only 1: unfold neighbourhood; only 1: easy).	0.0465469360352	6
Coq.Reals.Rtopology.open_set_P5	40
Coq.Reals.Rtopology.disc_P1	40
Coq.Reals.Rtopology.continuity_P1	40
Coq.Reals.Rtopology.continuity_P2	40
Coq.Reals.Rtopology.continuity_P3	40
Coq.Reals.Rtopology.Rsepare	40
Coq.Reals.Rtopology.restriction_family	40
Coq.Reals.Rtopology.family_P1	40
Coq.Reals.Rtopology.open_set_P6	40	10.0.0	synth with cache (only 1: unfold open_set; only 1: intros; only 1: firstorder).	0.241505146027	185
Coq.Reals.Rtopology.compact_P1	40
Coq.Reals.Rtopology.compact_P2	40
Coq.Reals.Rtopology.compact_EMP	40
Coq.Reals.Rtopology.compact_eqDom	40
Coq.Reals.Rtopology.compact_P3	40
Coq.Reals.Rtopology.compact_P4	40
Coq.Reals.Rtopology.compact_P5	40
Coq.Reals.Rtopology.compact_carac	40
Coq.Reals.Rtopology.continuity_compact	40
Coq.Reals.Rtopology.prolongement_C0	40
Coq.Reals.Rtopology.continuity_ab_maj	40
Coq.Reals.Rtopology.continuity_ab_min	40
Coq.Reals.Rtopology.ValAdh_un_exists	40
Coq.Reals.Rtopology.ValAdh_un_prop	40
Coq.Reals.Rtopology.adherence_P4	40	8.3.0.0	synth with cache (only 1: unfold included; only 1: intros; only 1: unfold adherence; only 1: firstorder).	0.944541931152	595
Coq.Reals.Rtopology.compact_P6	40
Coq.Reals.Rtopology.Bolzano_Weierstrass	40
Coq.Reals.Rtopology.is_lub_u	40	1.4.15.0	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intros a b; only 1: intros n m Hn Hm (q, Hq) (r, Hr); only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	8.39487719536	4182
Coq.Reals.Rtopology.domain_P1	40
Coq.Reals.Rtopology.Heine	40
Coq.Reals.Raxioms.Rrepr_0	40
Coq.Reals.Raxioms.Rrepr_1	40
Coq.Reals.Raxioms.Rrepr_plus	40
Coq.Reals.Raxioms.Rrepr_opp	40
Coq.Reals.Raxioms.Rrepr_minus	40
Coq.Reals.Raxioms.Rrepr_mult	40
Coq.Reals.Raxioms.Rrepr_inv	40
Coq.Reals.Raxioms.Rrepr_le	40
Coq.Reals.Raxioms.Rrepr_appart	40
Coq.Reals.Raxioms.Rappart_repr	40
Coq.Reals.Raxioms.Rplus_comm	40
Coq.Reals.Raxioms.Rplus_assoc	40
Coq.Reals.Raxioms.Rplus_opp_r	40
Coq.Reals.Raxioms.Rplus_0_l	40
Coq.Reals.Raxioms.Rmult_comm	40
Coq.Reals.Raxioms.Rmult_assoc	40
Coq.Reals.Raxioms.Rinv_l	40
Coq.Reals.Raxioms.Rmult_1_l	40
Coq.Reals.Raxioms.R1_neq_R0	40
Coq.Reals.Raxioms.Rmult_plus_distr_l	40
Coq.Reals.Raxioms.Rlt_asym	40
Coq.Reals.Raxioms.Rlt_trans	40
Coq.Reals.Raxioms.Rplus_lt_compat_l	40
Coq.Reals.Raxioms.Rmult_lt_compat_l	40
Coq.Reals.Raxioms.Rrepr_INR	40
Coq.Reals.Raxioms.Rrepr_IPR2	40
Coq.Reals.Raxioms.Rrepr_IPR	40
Coq.Reals.Raxioms.Rrepr_IZR	40
Coq.Reals.Raxioms.archimed	40
Coq.Reals.Raxioms.completeness	40
Coq.Reals.Rseries.sequence.EUn_noempty	40
Coq.Reals.Rseries.sequence.Un_in_EUn	40	0.35.11	synth with cache (only 1: intros; only 1: exists n; only 1: reflexivity).	2.42861318588	6825
Coq.Reals.Rseries.sequence.Un_bound_imp	40
Coq.Reals.Rseries.sequence.growing_prop	40
Coq.Reals.Rseries.sequence.Un_cv_crit_lub	40
Coq.Reals.Rseries.sequence.Un_cv_crit	40
Coq.Reals.Rseries.sequence.finite_greater	40
Coq.Reals.Rseries.sequence.cauchy_bound	40
Coq.Reals.Rseries.GP_infinite	40
Coq.Reals.Rseries.CV_shift	40
Coq.Reals.Rseries.CV_shift'	40
Coq.Reals.Rseries.Un_growing_shift	40	1.1.12.2	synth with cache (only 1: intros n H; only 1: intros Hn Hm; only 1: Nat.nzsimpl; only 1: auto).	2.38003182411	1611
Coq.Reals.Binomial.pascal_step1	40
Coq.Reals.Binomial.pascal_step2	40
Coq.Reals.Binomial.pascal_step3	40
Coq.Reals.Binomial.pascal	40
Coq.Reals.Binomial.binomial	40
Coq.Reals.PSeries_reg.Boule_convex	40
Coq.Reals.PSeries_reg.boule_of_interval	40
Coq.Reals.PSeries_reg.boule_in_interval	40
Coq.Reals.PSeries_reg.Ball_in_inter	40
Coq.Reals.PSeries_reg.Boule_center	40
Coq.Reals.PSeries_reg.CVN_CVU	40
Coq.Reals.PSeries_reg.CVU_continuity	40
Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40
Coq.Reals.PSeries_reg.SFL_continuity_pt	40
Coq.Reals.PSeries_reg.SFL_continuity	40
Coq.Reals.PSeries_reg.CVN_R_CVS	40
Coq.Reals.PSeries_reg.CVU_cv	40
Coq.Reals.PSeries_reg.CVU_ext_lim	40
Coq.Reals.PSeries_reg.CVU_derivable	40
Coq.Reals.Ranalysis_reg.AppVar	40
Coq.Reals.MVT.MVT	40
Coq.Reals.MVT.MVT_cor1	40
Coq.Reals.MVT.MVT_cor2	40
Coq.Reals.MVT.MVT_cor3	40
Coq.Reals.MVT.Rolle	40
Coq.Reals.MVT.nonneg_derivative_1	40
Coq.Reals.MVT.nonpos_derivative_0	40
Coq.Reals.MVT.increasing_decreasing_opp	40
Coq.Reals.MVT.nonpos_derivative_1	40
Coq.Reals.MVT.positive_derivative	40
Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	40	6.0.24.2	synth with cache (only 1: intros; only 1: intro; only 1: unfold opp_fct; only 1: firstorder).	5.08945202827	3940
Coq.Reals.MVT.negative_derivative	40
Coq.Reals.MVT.null_derivative_0	40
Coq.Reals.MVT.increasing_decreasing	40
Coq.Reals.MVT.null_derivative_1	40
Coq.Reals.MVT.derive_increasing_interv_ax	40
Coq.Reals.MVT.derive_increasing_interv	40
Coq.Reals.MVT.derive_increasing_interv_var	40
Coq.Reals.MVT.IAF	40
Coq.Reals.MVT.IAF_var	40
Coq.Reals.MVT.null_derivative_loc	40
Coq.Reals.MVT.antiderivative_Ucte	40
Coq.Reals.MVT.MVT_abs	40
Coq.Reals.Ranalysis1.continuity_pt_locally_ext	40
Coq.Reals.Ranalysis1.continuity_pt_plus	40
Coq.Reals.Ranalysis1.continuity_pt_opp	40
Coq.Reals.Ranalysis1.continuity_pt_minus	40
Coq.Reals.Ranalysis1.continuity_pt_mult	40
Coq.Reals.Ranalysis1.continuity_pt_const	40
Coq.Reals.Ranalysis1.continuity_pt_scal	40
Coq.Reals.Ranalysis1.continuity_pt_inv	40
Coq.Reals.Ranalysis1.div_eq_inv	40	1.0	synth with cache (only 1: intros; only 1: trivial).	0.0322370529175	3
Coq.Reals.Ranalysis1.continuity_pt_div	40
Coq.Reals.Ranalysis1.continuity_pt_comp	40
Coq.Reals.Ranalysis1.continuity_plus	40
Coq.Reals.Ranalysis1.continuity_opp	40
Coq.Reals.Ranalysis1.continuity_minus	40	12.5.0.0.0.1.0	synth with cache (only 1: unfold continuity; only 1: unfold continuity_pt, minus_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_minus; only 1: auto; only 1: intuition).	32.9382240772	17848
Coq.Reals.Ranalysis1.continuity_mult	40
Coq.Reals.Ranalysis1.continuity_const	40	0.0.0.0.0.0.0.0.0.0.0.0.0.5.0.0	synth with cache (only 1: unfold continuity; only 1: unfold constant, continuity_pt; only 1: red; only 1: unfold limit1_in; only 1: unfold limit_in; only 1: intros; only 1: exists 1; only 1: split; only 1: apply Rlt_0_1; only 1: intros; only 1: generalize (H x x0); only 1: intro; only 1: rewrite H2; only 1: simpl; only 1: rewrite R_dist_eq; only 1: assumption).	21.0790359974	6000
Coq.Reals.Ranalysis1.continuity_scal	40
Coq.Reals.Ranalysis1.continuity_inv	40	1.4.0.10	synth with cache (only 1: intros a b n Hn; only 1: apply continuity_pt_inv; only 1: auto with real; only 1: trivial).	11.1340458393	3286
Coq.Reals.Ranalysis1.continuity_div	40
Coq.Reals.Ranalysis1.continuity_comp	40
Coq.Reals.Ranalysis1.uniqueness_step1	40
Coq.Reals.Ranalysis1.uniqueness_step2	40
Coq.Reals.Ranalysis1.uniqueness_step3	40
Coq.Reals.Ranalysis1.uniqueness_limite	40
Coq.Reals.Ranalysis1.derive_pt_eq	40
Coq.Reals.Ranalysis1.derive_pt_eq_0	40	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).	0.110937833786	12
Coq.Reals.Ranalysis1.derive_pt_eq_1	40	0.0.0.0.2	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derive_pt in H; only 1: rewrite H in H1; only 1: assumption).	0.0652730464935	15
Coq.Reals.Ranalysis1.derive_pt_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_ext	40
Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40
Coq.Reals.Ranalysis1.derivable_derive	40
Coq.Reals.Ranalysis1.derivable_continuous_pt	40
Coq.Reals.Ranalysis1.derivable_continuous	40
Coq.Reals.Ranalysis1.derivable_pt_lim_plus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40
Coq.Reals.Ranalysis1.derivable_pt_lim_const	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	40
Coq.Reals.Ranalysis1.derivable_pt_lim_id	40
Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_lim_comp	40
Coq.Reals.Ranalysis1.derivable_pt_plus	40
Coq.Reals.Ranalysis1.derivable_pt_opp	40
Coq.Reals.Ranalysis1.derivable_pt_minus	40
Coq.Reals.Ranalysis1.derivable_pt_mult	40
Coq.Reals.Ranalysis1.derivable_pt_const	40
Coq.Reals.Ranalysis1.derivable_pt_scal	40
Coq.Reals.Ranalysis1.derivable_pt_id	40
Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_comp	40
Coq.Reals.Ranalysis1.derivable_plus	40
Coq.Reals.Ranalysis1.derivable_opp	40
Coq.Reals.Ranalysis1.derivable_minus	40
Coq.Reals.Ranalysis1.derivable_mult	40
Coq.Reals.Ranalysis1.derivable_const	40	0.39.4	synth with cache (only 1: intro q; only 1: exists 0%Z; only 1: apply derivable_pt_lim_const).	3.46699810028	6029
Coq.Reals.Ranalysis1.derivable_scal	40
Coq.Reals.Ranalysis1.derivable_id	40	0.0.7.61	synth with cache (only 1: intro H; only 1: red; only 1: exists 1; only 1: apply derivable_pt_lim_id).	3.35450005531	4323
Coq.Reals.Ranalysis1.derivable_Rsqr	40	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (2 * x); only 1: apply derivable_pt_lim_Rsqr).	0.0617070198059	5
Coq.Reals.Ranalysis1.derivable_comp	40
Coq.Reals.Ranalysis1.derive_pt_plus	40
Coq.Reals.Ranalysis1.derive_pt_opp	40
Coq.Reals.Ranalysis1.derive_pt_minus	40
Coq.Reals.Ranalysis1.derive_pt_mult	40
Coq.Reals.Ranalysis1.derive_pt_const	40
Coq.Reals.Ranalysis1.derive_pt_scal	40	4.0.1.2.9.8.0.1	synth with cache (only 1: unfold derivable_pt; only 1: unfold continuity_pt, mult_real_fct; only 1: intros n m p H; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_scal; only 1: elim H; only 1: intros; only 1: assumption).	21.305783987	18652
Coq.Reals.Ranalysis1.derive_pt_id	40	1.4.1	synth with cache (only 1: intros p0; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_id).	0.0784990787506	12
Coq.Reals.Ranalysis1.derive_pt_Rsqr	40	1.2.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).	0.178115129471	31
Coq.Reals.Ranalysis1.derive_pt_comp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40
Coq.Reals.Ranalysis1.derivable_pt_pow	40
Coq.Reals.Ranalysis1.derivable_pow	40	0.0.0.0.12.6	synth with cache (only 1: intros; only 1: red; only 1: intros; only 1: unfold derivable_pt; only 1: exists (INR n * x ^ Init.Nat.pred n); only 1: apply derivable_pt_lim_pow).	0.763043880463	634
Coq.Reals.Ranalysis1.derive_pt_pow	40
Coq.Reals.Ranalysis1.pr_nu	40	0.4.3.2.1.8	synth with cache (only 1: intros a n m H; only 1: elim H; only 1: intros H1 H2; only 1: simpl; only 1: apply derive_pt_eq_0; only 1: auto).	6.03500103951	4235
Coq.Reals.Ranalysis1.deriv_maximum	40
Coq.Reals.Ranalysis1.deriv_minimum	40
Coq.Reals.Ranalysis1.deriv_constant2	40
Coq.Reals.Ranalysis1.nonneg_derivative_0	40
Coq.Reals.SeqProp.growing_cv	40
Coq.Reals.SeqProp.decreasing_growing	40
Coq.Reals.SeqProp.decreasing_cv	40
Coq.Reals.SeqProp.ub_to_lub	40
Coq.Reals.SeqProp.lb_to_glb	40
Coq.Reals.SeqProp.maj_ss	40	27.1.5	synth with cache (only 1: intros x n; only 1: intros; only 1: firstorder).	17.5756509304	15479
Coq.Reals.SeqProp.min_ss	40
Coq.Reals.SeqProp.Wn_decreasing	40
Coq.Reals.SeqProp.Vn_growing	40
Coq.Reals.SeqProp.Vn_Un_Wn_order	40
Coq.Reals.SeqProp.min_maj	40
Coq.Reals.SeqProp.maj_min	40
Coq.Reals.SeqProp.cauchy_maj	40
Coq.Reals.SeqProp.cauchy_opp	40
Coq.Reals.SeqProp.cauchy_min	40
Coq.Reals.SeqProp.maj_cv	40
Coq.Reals.SeqProp.min_cv	40
Coq.Reals.SeqProp.cond_eq	40
Coq.Reals.SeqProp.not_Rlt	40	0	synth with cache (only 1: eauto using Rnot_gt_ge with rorders).	0.0254781246185	1
Coq.Reals.SeqProp.approx_maj	40
Coq.Reals.SeqProp.approx_min	40
Coq.Reals.SeqProp.UL_sequence	40
Coq.Reals.SeqProp.CV_plus	40
Coq.Reals.SeqProp.cv_cvabs	40
Coq.Reals.SeqProp.CV_Cauchy	40
Coq.Reals.SeqProp.maj_by_pos	40
Coq.Reals.SeqProp.CV_mult	40
Coq.Reals.SeqProp.tech9	40
Coq.Reals.SeqProp.tech13	40
Coq.Reals.SeqProp.growing_ineq	40
Coq.Reals.SeqProp.CV_opp	40
Coq.Reals.SeqProp.decreasing_ineq	40
Coq.Reals.SeqProp.CV_minus	40
Coq.Reals.SeqProp.cv_infty_cv_R0	40
Coq.Reals.SeqProp.decreasing_prop	40
Coq.Reals.SeqProp.cv_speed_pow_fact	40
Coq.Reals.Rcomplete.R_complete	40
Coq.Reals.Rtrigo_calc.tan_PI	40	0.4.5.0	synth with cache (only 1: unfold tan; only 1: rewrite sin_PI; only 1: unfold Rminus, Rdiv; only 1: auto with real).	1.74172902107	346
Coq.Reals.Rtrigo_calc.sin_3PI2	40
Coq.Reals.Rtrigo_calc.tan_2PI	40
Coq.Reals.Rtrigo_calc.sin_cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI3_cos_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI6_cos_PI3	40
Coq.Reals.Rtrigo_calc.PI6_RGT_0	40	2.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.17010807991	22
Coq.Reals.Rtrigo_calc.PI6_RLT_PI2	40	0.1	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	0.048642873764	3
Coq.Reals.Rtrigo_calc.sin_PI6	40
Coq.Reals.Rtrigo_calc.sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.sqrt3_2_neq_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt3_0	40
Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.0796270370483	5
Coq.Reals.Rtrigo_calc.cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI4	40
Coq.Reals.Rtrigo_calc.tan_PI4	40
Coq.Reals.Rtrigo_calc.cos_3PI4	40
Coq.Reals.Rtrigo_calc.sin_3PI4	40
Coq.Reals.Rtrigo_calc.cos_PI6	40
Coq.Reals.Rtrigo_calc.tan_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI3	40
Coq.Reals.Rtrigo_calc.cos_PI3	40
Coq.Reals.Rtrigo_calc.tan_PI3	40
Coq.Reals.Rtrigo_calc.sin_2PI3	40
Coq.Reals.Rtrigo_calc.cos_2PI3	40
Coq.Reals.Rtrigo_calc.tan_2PI3	40
Coq.Reals.Rtrigo_calc.cos_5PI4	40
Coq.Reals.Rtrigo_calc.sin_5PI4	40
Coq.Reals.Rtrigo_calc.sin_cos5PI4	40
Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40	0.0.0.0.1.2	synth with cache (only 1: replace (3 * (PI / 2)) with (PI + PI / 2); only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra; only 1: pattern PI at 1; only 1: rewrite (double_var PI); only 1: ring).	0.106448173523	9
Coq.Reals.Rtrigo_calc.Rgt_2PI_0	40	0.0.0.0.0.1.0.0.0	synth with cache (only 1: apply Rmult_lt_0_compat; only 1: apply Rlt_trans with (0 + 1); only 1: apply Rlt_n_Sn; only 1: rewrite Rplus_comm; only 1: apply Rplus_lt_compat_l; only 1: replace R1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l; only 1: apply PI_RGT_0).	0.129828929901	10
Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40	2.9	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	0.27299118042	88
Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40
Coq.Reals.Rtrigo_calc.rad_deg	40
Coq.Reals.Rtrigo_calc.toRad_inj	40
Coq.Reals.Rtrigo_calc.deg_rad	40
Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40
Coq.Reals.Rtrigo_calc.sin_lb_ge_0	40
Coq.Reals.Ranalysis4.derivable_pt_inv	40
Coq.Reals.Ranalysis4.pr_nu_var	40	0.6.2.8	synth with cache (only 1: intros A eq_dec; only 1: intros; only 1: subst; only 1: apply pr_nu).	7.04021692276	3068
Coq.Reals.Ranalysis4.pr_nu_var2	40
Coq.Reals.Ranalysis4.derivable_inv	40
Coq.Reals.Ranalysis4.derive_pt_inv	40
Coq.Reals.Ranalysis4.Rabs_derive_1	40
Coq.Reals.Ranalysis4.Rabs_derive_2	40
Coq.Reals.Ranalysis4.Rderivable_pt_abs	40
Coq.Reals.Ranalysis4.Rcontinuity_abs	40
Coq.Reals.Ranalysis4.continuity_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40
Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_finite_sum	40
Coq.Reals.Ranalysis4.derivable_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_lim_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_lim_sinh	40
Coq.Reals.Ranalysis4.derivable_pt_exp	40
Coq.Reals.Ranalysis4.derivable_pt_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_sinh	40
Coq.Reals.Ranalysis4.derivable_exp	40	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (exp x); only 1: apply derivable_pt_lim_exp).	0.0520029067993	5
Coq.Reals.Ranalysis4.derivable_cosh	40
Coq.Reals.Ranalysis4.derivable_sinh	40	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (cosh x); only 1: apply derivable_pt_lim_sinh).	0.0432300567627	5
Coq.Reals.Ranalysis4.derive_pt_exp	40	0.1.14	synth with cache (only 1: intro H5; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_exp).	1.73766112328	1515
Coq.Reals.Ranalysis4.derive_pt_cosh	40	1.0.5	synth with cache (only 1: intro eps; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cosh).	0.0731461048126	12
Coq.Reals.Ranalysis4.derive_pt_sinh	40	2.0.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).	0.76606297493	106
Coq.Reals.Ranalysis4.sinh_lt	40
Coq.Reals.Ranalysis3.derivable_pt_lim_div	40
Coq.Reals.Ranalysis3.derivable_pt_div	40
Coq.Reals.Ranalysis3.derivable_div	40
Coq.Reals.Ranalysis3.derive_pt_div	40
Coq.Reals.DiscrR.Rlt_R0_R2	40	0.0.0.0.1.0.0	synth with cache (only 1: apply Rlt_trans with (0 + 1); only 1: apply Rlt_n_Sn; only 1: rewrite Rplus_comm; only 1: apply Rplus_lt_compat_l; only 1: replace R1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.0750670433044	8
Coq.Reals.DiscrR.IZR_eq	40	7.0	synth with cache (only 1: intros z1 z2 H; only 1: now subst).	0.0429408550262	13
Coq.Reals.ConstructiveReals.CRlt_asym	40
Coq.Reals.ConstructiveReals.CRlt_proper	40
Coq.Reals.ConstructiveReals.CRle_refl	40	17.0.24	synth with cache (only 1: intros; only 1: destruct (CRltLinear R), p; only 1: eauto).	3.47361898422	4018
Coq.Reals.ConstructiveReals.CRle_lt_trans	40
Coq.Reals.ConstructiveReals.CRlt_le_trans	40
Coq.Reals.ConstructiveReals.CRle_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans_flip	40
Coq.Reals.ConstructiveReals.CReq_refl	40	0.0.0.0.3.0	synth with cache (only 1: intros; only 1: firstorder; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H); only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H)).	0.306016921997	9
Coq.Reals.ConstructiveReals.CReq_sym	40	3.3	synth with cache (only 1: intros; only 1: firstorder).	0.592458963394	51
Coq.Reals.ConstructiveReals.CReq_trans	40
Coq.Reals.ConstructiveReals.CR_setoid	40
Coq.Reals.ConstructiveReals.CRplus_0_r	40
Coq.Reals.ConstructiveReals.CRmult_1_r	40
Coq.Reals.ConstructiveReals.CRplus_opp_l	40
Coq.Reals.ConstructiveReals.CRplus_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_l	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_le_reg_l	40
Coq.Reals.ConstructiveReals.CRplus_le_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_le_compat	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_l	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_r	40
Coq.Reals.ConstructiveReals.CRopp_involutive	40
Coq.Reals.ConstructiveReals.CRopp_gt_lt_contravar	40
Coq.Reals.ConstructiveReals.CRopp_lt_cancel	40
Coq.Reals.ConstructiveReals.CRopp_plus_distr	40
Coq.Reals.ConstructiveReals.CRmult_plus_distr_l	40
Coq.Reals.ConstructiveReals.CRzero_double	40
Coq.Reals.ConstructiveReals.CRmult_0_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_l	40
Coq.Reals.ConstructiveReals.CRmult_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRinv_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_r	40
Coq.Reals.ConstructiveReals.CRmult_eq_reg_r	40
Coq.Reals.ConstructiveReals.CR_of_Q_proper	40
Coq.Reals.ConstructiveReals.CR_of_Q_zero	40
Coq.Reals.ConstructiveReals.CR_of_Q_opp	40
Coq.Reals.ConstructiveReals.CR_of_Q_le	40
Coq.Reals.ConstructiveReals.CR_of_Q_pos	40
Coq.Reals.ConstructiveReals.CR_cv_above_rat	40
Coq.Reals.ConstructiveReals.CR_cv_below_rat	40
Coq.Reals.ConstructiveReals.CR_cv_const	40
Coq.Reals.ConstructiveCauchyRealsMult.BoundFromZero	40	15	synth with cache (only 1: eauto with arith).	0.665362119675	102
Coq.Reals.ConstructiveCauchyRealsMult.QCauchySeq_bounded	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_cauchy	40
Coq.Reals.ConstructiveCauchyRealsMult.linear_max	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult	40	12	synth with cache (only 1: trivial).	0.128072977066	164
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_unfold	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc_bounded_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_comm	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_proper_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRingExt	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRing	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_T	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40	1.1.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: apply (CReal_plus_eq_reg_l x); only 1: apply (CRealEq_trans _ 0); only 1: apply CReal_plus_opp_r; only 1: apply CRealEq_sym; only 1: apply (CRealEq_trans _ (y + - y)); only 1: apply CReal_plus_proper_r; only 1: apply H; only 1: apply CReal_plus_opp_r).	37.3222241402	830
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_T	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_T	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_l	40	22.2	synth with cache (only 1: intros (x1, x2); only 1: ring).	35.3148870468	2572
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_r	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0331211090088	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40	1.1.0.5.2.3	synth with cache (only 1: intros n m; only 1: apply (CReal_plus_eq_reg_l 0); only 1: ring_simplify; only 1: split; only 1: apply CRealLe_refl; only 1: apply CRealLe_refl).	29.0160448551	1695
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0344440937042	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealArchimedean	40
Coq.Reals.ConstructiveCauchyRealsMult.Rup_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealLtDisjunctEpsilon	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftReal	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftEqual	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealNegShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealPosShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_neg	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv	40	1	synth with cache (only 1: assumption).	0.0209510326385	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift_eq	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_1	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	40
Coq.Reals.ConstructiveCauchyRealsMult.Rinv_eq_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40	3.1.2	synth with cache (only 1: intros n m H1 H2; only 1: apply CReal_mult_proper_l; only 1: assumption).	1.12351703644	61
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.0333881378174	3
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_invQ	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealQ_dense	40
Coq.Reals.ConstructiveCauchyRealsMult.inject_Q_mult	40
Coq.Reals.Rtrigo_fun.Alembert_exp	40
Coq.Reals.Alembert.Alembert_C1	40
Coq.Reals.Alembert.Alembert_C2	40
Coq.Reals.Alembert.AlembertC3_step1	40
Coq.Reals.Alembert.AlembertC3_step2	40
Coq.Reals.Alembert.Alembert_C3	40
Coq.Reals.Alembert.Alembert_C4	40
Coq.Reals.Alembert.Alembert_C5	40
Coq.Reals.Alembert.Alembert_C6	40
Coq.Reals.R_sqr.Rsqr_neg	40	3.17.2	synth with cache (only 1: intros H; only 1: unfold Rsqr; only 1: auto with real).	3.26477599144	2188
Coq.Reals.R_sqr.Rsqr_mult	40	0.5.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: ring).	0.126000165939	13
Coq.Reals.R_sqr.Rsqr_plus	40	3.0.15.9	synth with cache (only 1: intro; only 1: unfold Rsqr; only 1: intro; only 1: ring).	16.392521143	6814
Coq.Reals.R_sqr.Rsqr_minus	40	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.0475399494171	2
Coq.Reals.R_sqr.Rsqr_neg_minus	40	13.3	synth with cache (only 1: intros H1 H2; only 1: ring_Rsqr).	1.06168603897	434
Coq.Reals.R_sqr.Rsqr_1	40	0.0	synth with cache (only 1: unfold Rsqr; only 1: auto with real).	0.0286450386047	2
Coq.Reals.R_sqr.Rsqr_gt_0_0	40
Coq.Reals.R_sqr.Rsqr_pos_lt	40	5.2	synth with cache (only 1: intros a Ha; only 1: auto with real).	0.130740880966	41
Coq.Reals.R_sqr.Rsqr_div	40	0.2.23.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: field; only 1: auto with real).	24.2520129681	8896
Coq.Reals.R_sqr.Rsqr_eq_0	40	1.1.2.0.0	synth with cache (only 1: unfold Rsqr; only 1: intros; only 1: apply Rsqr_0_uniq; only 1: unfold Rsqr; only 1: auto with real).	0.0482840538025	9
Coq.Reals.R_sqr.Rsqr_minus_plus	40	0.8.4	synth with cache (only 1: intro; only 1: intros z; only 1: ring_Rsqr).	0.981560945511	393
Coq.Reals.R_sqr.Rsqr_plus_minus	40	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.0422310829163	2
Coq.Reals.R_sqr.Rsqr_incr_0	40
Coq.Reals.R_sqr.Rsqr_incr_0_var	40
Coq.Reals.R_sqr.Rsqr_incr_1	40	3.1.2.3	synth with cache (only 1: intros x y; only 1: unfold Rsqr; only 1: intros a b; only 1: auto with real).	8.50463604927	1914
Coq.Reals.R_sqr.Rsqr_incrst_0	40
Coq.Reals.R_sqr.Rsqr_incrst_1	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_1	40
Coq.Reals.R_sqr.neg_pos_Rsqr_le	40
Coq.Reals.R_sqr.Rsqr_abs	40
Coq.Reals.R_sqr.Rsqr_le_abs_0	40
Coq.Reals.R_sqr.Rsqr_le_abs_1	40
Coq.Reals.R_sqr.Rsqr_lt_abs_0	40
Coq.Reals.R_sqr.Rsqr_lt_abs_1	40
Coq.Reals.R_sqr.Rsqr_inj	40
Coq.Reals.R_sqr.Rsqr_eq_abs_0	40
Coq.Reals.R_sqr.Rsqr_eq_asb_1	40	15.4.0.1.0	synth with cache (only 1: intros; only 1: rewrite (Rsqr_abs y); only 1: unfold Rabs; only 1: rewrite (Rsqr_abs x); only 1: auto with real).	17.2880849838	10489
Coq.Reals.R_sqr.triangle_rectangle	40
Coq.Reals.R_sqr.triangle_rectangle_lt	40
Coq.Reals.R_sqr.triangle_rectangle_le	40
Coq.Reals.R_sqr.Rsqr_inv	40	0.0.4.3	synth with cache (only 1: intros r b; only 1: unfold Rsqr; only 1: field; only 1: trivial).	0.826392173767	246
Coq.Reals.R_sqr.canonical_Rsqr	40
Coq.Reals.R_sqr.Rsqr_eq	40
Coq.Reals.RiemannInt_SF.IZN_var	40	0.1.0.8	synth with cache (only 1: intros x IH; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	0.786818027496	298
Coq.Reals.RiemannInt_SF.Nzorn	40
Coq.Reals.RiemannInt_SF.StepFun_P1	40
Coq.Reals.RiemannInt_SF.StepFun_P2	40
Coq.Reals.RiemannInt_SF.StepFun_P3	40
Coq.Reals.RiemannInt_SF.StepFun_P4	40
Coq.Reals.RiemannInt_SF.StepFun_P5	40
Coq.Reals.RiemannInt_SF.StepFun_P6	40
Coq.Reals.RiemannInt_SF.StepFun_P7	40
Coq.Reals.RiemannInt_SF.StepFun_P8	40
Coq.Reals.RiemannInt_SF.StepFun_P9	40
Coq.Reals.RiemannInt_SF.StepFun_P10	40
Coq.Reals.RiemannInt_SF.StepFun_P11	40
Coq.Reals.RiemannInt_SF.StepFun_P12	40
Coq.Reals.RiemannInt_SF.StepFun_P13	40
Coq.Reals.RiemannInt_SF.StepFun_P14	40
Coq.Reals.RiemannInt_SF.StepFun_P15	40
Coq.Reals.RiemannInt_SF.StepFun_P16	40
Coq.Reals.RiemannInt_SF.StepFun_P17	40
Coq.Reals.RiemannInt_SF.StepFun_P18	40
Coq.Reals.RiemannInt_SF.StepFun_P19	40
Coq.Reals.RiemannInt_SF.StepFun_P20	40
Coq.Reals.RiemannInt_SF.StepFun_P21	40
Coq.Reals.RiemannInt_SF.StepFun_P22	40
Coq.Reals.RiemannInt_SF.StepFun_P23	40
Coq.Reals.RiemannInt_SF.StepFun_P24	40
Coq.Reals.RiemannInt_SF.StepFun_P25	40
Coq.Reals.RiemannInt_SF.StepFun_P26	40
Coq.Reals.RiemannInt_SF.StepFun_P27	40
Coq.Reals.RiemannInt_SF.StepFun_P28	40
Coq.Reals.RiemannInt_SF.StepFun_P29	40
Coq.Reals.RiemannInt_SF.StepFun_P30	40
Coq.Reals.RiemannInt_SF.StepFun_P31	40
Coq.Reals.RiemannInt_SF.StepFun_P32	40
Coq.Reals.RiemannInt_SF.StepFun_P33	40
Coq.Reals.RiemannInt_SF.StepFun_P34	40
Coq.Reals.RiemannInt_SF.StepFun_P35	40
Coq.Reals.RiemannInt_SF.StepFun_P36	40
Coq.Reals.RiemannInt_SF.StepFun_P37	40
Coq.Reals.RiemannInt_SF.StepFun_P38	40
Coq.Reals.RiemannInt_SF.StepFun_P39	40
Coq.Reals.RiemannInt_SF.StepFun_P40	40
Coq.Reals.RiemannInt_SF.StepFun_P41	40
Coq.Reals.RiemannInt_SF.StepFun_P42	40
Coq.Reals.RiemannInt_SF.StepFun_P43	40
Coq.Reals.RiemannInt_SF.StepFun_P44	40
Coq.Reals.RiemannInt_SF.StepFun_P45	40
Coq.Reals.RiemannInt_SF.StepFun_P46	40
Coq.Reals.Cos_rel.cos_plus_form	40
Coq.Reals.Cos_rel.pow_sqr	40
Coq.Reals.Cos_rel.A1_cvg	40
Coq.Reals.Cos_rel.C1_cvg	40
Coq.Reals.Cos_rel.B1_cvg	40
Coq.Reals.Ranalysis5.f_incr_implies_g_incr_interv	40
Coq.Reals.Ranalysis5.derivable_pt_id_interv	40	0.0	synth with cache (only 1: intros; only 1: apply derivable_pt_id).	0.042711019516	2
Coq.Reals.Ranalysis5.pr_nu_var2_interv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40
Coq.Reals.Ranalysis5.IVT_interv_prelim0	40
Coq.Reals.Ranalysis5.IVT_interv_prelim1	40
Coq.Reals.Ranalysis5.IVT_interv	40
Coq.Reals.Ranalysis5.f_interv_is_interv	40
Coq.Reals.Ranalysis5.continuity_pt_recip_prelim	40
Coq.Reals.Ranalysis5.continuity_pt_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_lim_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1	40	1.0.4	synth with cache (only 1: intro f; only 1: intros f1 f2 X X0 x; only 1: intuition).	0.271748065948	18
Coq.Reals.Ranalysis5.derivable_pt_recip_interv	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv	40
Coq.Reals.Ranalysis5.ub_lt_2_pos	40	2.0.0.2.2.4	synth with cache (only 1: intro H1; only 1: intro; only 1: intro H10; only 1: intros; only 1: unfold Rdiv; only 1: lra).	12.2262580395	2997
Coq.Reals.Ranalysis5.mkposreal_lb_ub	40
Coq.Reals.Ranalysis5.derivable_pt_lim_CVU	40
Coq.Reals.AltSeries.CV_ALT_step0	40
Coq.Reals.AltSeries.CV_ALT_step1	40
Coq.Reals.AltSeries.CV_ALT_step2	40
Coq.Reals.AltSeries.CV_ALT_step3	40
Coq.Reals.AltSeries.CV_ALT_step4	40
Coq.Reals.AltSeries.CV_ALT	40
Coq.Reals.AltSeries.alternated_series	40
Coq.Reals.AltSeries.alternated_series_ineq	40
Coq.Reals.AltSeries.PI_tg_pos	40	8.2.1.3.0	synth with cache (only 1: intros; only 1: left; only 1: apply Rinv_0_lt_compat; only 1: apply lt_0_INR; only 1: auto with arith).	3.09615707397	1940
Coq.Reals.AltSeries.PI_tg_decreasing	40
Coq.Reals.AltSeries.PI_tg_cv	40
Coq.Reals.AltSeries.exist_PI	40
Coq.Reals.AltSeries.Alt_PI_ineq	40
Coq.Reals.AltSeries.Alt_PI_RGT_0	40
Coq.Reals.Rminmax.Rmax_l	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0542199611664	4
Coq.Reals.Rminmax.Rmax_r	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0792410373688	4
Coq.Reals.Rminmax.Rmin_l	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0554521083832	4
Coq.Reals.Rminmax.Rmin_r	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0612850189209	4
Coq.Reals.Rminmax.R.plus_max_distr_l	40	1.1.1.1.0.0.0.0.1.2.0.2	synth with cache (only 1: intros r b; only 1: intro; only 1: replace r with (r + 0); only 1: apply max_mono; only 1: eauto with *; only 1: repeat red; only 1: intros r1 r2 [H| H]; only 1: left; only 1: auto with real; only 1: elim H; only 1: auto with real; only 1: ring).	30.4398770332	3939
Coq.Reals.Rminmax.R.plus_max_distr_r	40
Coq.Reals.Rminmax.R.plus_min_distr_l	40	0.0.0.0.19	synth with cache (only 1: intros a m H; only 1: apply min_mono; only 1: eauto with *; only 1: intros x y; only 1: apply Rplus_le_compat_l).	11.5262510777	2631
Coq.Reals.Rminmax.R.plus_min_distr_r	40	0.0.0.3.0	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm n p), (Rplus_comm m p), (Rplus_comm _ p); only 1: apply min_monotone; only 1: intros x y; only 1: apply Rplus_le_compat_l).	0.0591199398041	8
Coq.Reals.Rminmax.R.opp_max_distr	40	0.0.0.0	synth with cache (only 1: intros x y; only 1: apply Rmax_case_strong; only 1: now intros w; rewrite Rmin_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmin_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.0547568798065	4
Coq.Reals.Rminmax.R.opp_min_distr	40	0.0.0.0	synth with cache (only 1: intros x y; only 1: apply Rmin_case_strong; only 1: now intros w; rewrite Rmax_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmax_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.0562260150909	4
Coq.Reals.Rminmax.R.minus_max_distr_l	40
Coq.Reals.Rminmax.R.minus_max_distr_r	40
Coq.Reals.Rminmax.R.minus_min_distr_l	40	1.0.5.1.8	synth with cache (only 1: intros n m H; only 1: apply min_max_antimonotone; only 1: unfold Rminus, Rdiv; only 1: do 3 red; only 1: auto using Rnot_lt_le with real).	10.0303058624	3170
Coq.Reals.Rminmax.R.minus_min_distr_r	40
Coq.Reals.Rlimit.eps2_Rgt_R0	40
Coq.Reals.Rlimit.eps2	40	0.0.0.0.8	synth with cache (only 1: intro; only 1: rewrite <- double; only 1: rewrite <- Rmult_assoc; only 1: apply Rinv_r_simpl_m; only 1: now apply not_0_IZR).	0.379190921783	122
Coq.Reals.Rlimit.eps4	40	23.6	synth with cache (only 1: intros n; only 1: field).	5.10982179642	3254
Coq.Reals.Rlimit.Rlt_eps2_eps	40	0.0	synth with cache (only 1: intros; only 1: lra).	0.109828948975	2
Coq.Reals.Rlimit.Rlt_eps4_eps	40	0.9	synth with cache (only 1: intros a Ha; only 1: lra).	0.135828018188	34
Coq.Reals.Rlimit.prop_eps	40
Coq.Reals.Rlimit.mul_factor_wd	40
Coq.Reals.Rlimit.mul_factor_gt	40
Coq.Reals.Rlimit.mul_factor_gt_f	40
Coq.Reals.Rlimit.tech_limit	40
Coq.Reals.Rlimit.tech_limit_contr	40
Coq.Reals.Rlimit.lim_x	40
Coq.Reals.Rlimit.limit_plus	40
Coq.Reals.Rlimit.limit_Ropp	40
Coq.Reals.Rlimit.limit_minus	40
Coq.Reals.Rlimit.limit_free	40
Coq.Reals.Rlimit.limit_mul	40
Coq.Reals.Rlimit.single_limit	40
Coq.Reals.Rlimit.limit_comp	40	7.1.3	synth with cache (only 1: intros m x0 y0 Hmxy; only 1: intros; only 1: firstorder).	2.44929099083	1024
Coq.Reals.Rlimit.limit_inv	40
Coq.Reals.R_sqrt.sqrt_pos	40
Coq.Reals.R_sqrt.sqrt_positivity	40	0.0.11.4.2.0.1	synth with cache (only 1: intros; only 1: unfold sqrt; only 1: case (Rcase_abs x); only 1: auto with real; only 1: rewrite <- (Rplus_0_r x); only 1: intro; only 1: apply Rsqrt_positivity).	35.6279270649	15924
Coq.Reals.R_sqrt.sqrt_sqrt	40
Coq.Reals.R_sqrt.sqrt_0	40
Coq.Reals.R_sqrt.sqrt_1	40
Coq.Reals.R_sqrt.sqrt_eq_0	40
Coq.Reals.R_sqrt.sqrt_lem_0	40
Coq.Reals.R_sqrt.sqrt_lem_1	40
Coq.Reals.R_sqrt.sqrt_def	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).	0.0866191387177	6
Coq.Reals.R_sqrt.sqrt_square	40
Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	0.0699238777161	5
Coq.Reals.R_sqrt.sqrt_pow2	40	1.3.1.8	synth with cache (only 1: intros x; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: apply sqrt_square).	2.8094599247	1282
Coq.Reals.R_sqrt.sqrt_Rsqr_abs	40
Coq.Reals.R_sqrt.Rsqr_sqrt	40	0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x H)).	0.0512309074402	3
Coq.Reals.R_sqrt.sqrt_mult_alt	40
Coq.Reals.R_sqrt.sqrt_mult	40
Coq.Reals.R_sqrt.sqrt_lt_R0	40
Coq.Reals.R_sqrt.Rlt_mult_inv_pos	40	0.0.0.1.2	synth with cache (only 1: intros a b Ha Hb; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: apply Rinv_0_lt_compat; only 1: assumption).	0.87740778923	181
Coq.Reals.R_sqrt.Rle_mult_inv_pos	40	0.0.2.0.1.0.0	synth with cache (only 1: intros x y H H0; only 1: replace 0 with (x * 0); only 1: rewrite Rmult_0_r; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: ring; only 1: ring).	0.191992044449	16
Coq.Reals.R_sqrt.sqrt_div_alt	40
Coq.Reals.R_sqrt.sqrt_div	40
Coq.Reals.R_sqrt.sqrt_lt_0_alt	40
Coq.Reals.R_sqrt.sqrt_lt_0	40
Coq.Reals.R_sqrt.sqrt_lt_1_alt	40
Coq.Reals.R_sqrt.sqrt_lt_1	40	0.0.0.0.0.0.0.1	synth with cache (only 1: intros; only 1: apply Rsqr_incrst_0; only 1: rewrite 2!Rsqr_sqrt; only 1: assumption; only 1: assumption; only 1: assumption; only 1: apply sqrt_pos; only 1: apply sqrt_pos).	0.595028877258	82
Coq.Reals.R_sqrt.sqrt_le_0	40
Coq.Reals.R_sqrt.sqrt_le_1_alt	40
Coq.Reals.R_sqrt.sqrt_le_1	40
Coq.Reals.R_sqrt.sqrt_inj	40
Coq.Reals.R_sqrt.sqrt_less_alt	40
Coq.Reals.R_sqrt.sqrt_less	40
Coq.Reals.R_sqrt.sqrt_more	40
Coq.Reals.R_sqrt.sqrt_cauchy	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_0	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_dec	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_epsilon	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_not_epsilon	40
Coq.Reals.ConstructiveRealsLUB.DDlow_below_up	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit_fix	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit	40
Coq.Reals.ConstructiveRealsLUB.glb_dec_Q	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_glb	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_closed	40
Coq.Reals.ConstructiveRealsLUB.sig_lub	40
Coq.Reals.ConstructiveRealsLUB.CR_sig_lub	40
Coq.Reals.Rderiv.cont_deriv	40
Coq.Reals.Rderiv.Dconst	40
Coq.Reals.Rderiv.Dx	40
Coq.Reals.Rderiv.Dadd	40
Coq.Reals.Rderiv.Dmult	40
Coq.Reals.Rderiv.Dmult_const	40
Coq.Reals.Rderiv.Dopp	40
Coq.Reals.Rderiv.Dminus	40
Coq.Reals.Rderiv.Dx_pow_n	40
Coq.Reals.Rderiv.Dcomp	40
Coq.Reals.Rderiv.D_pow_n	40
Coq.Reals.Cauchy_prod.sum_N_predN	40	0.4.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: elim (Nat.lt_irrefl _ H); only 1: simpl; only 1: reflexivity).	0.610692024231	74
Coq.Reals.Cauchy_prod.sum_plus	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.108942985535	7
Coq.Reals.Cauchy_prod.cauchy_finite	40
Coq.Reals.Rlogic.Arithmetical_dec.sig_forall_dec	40
Coq.Reals.Rlogic.not_not_archimedean	40
Coq.Reals.Rlogic.sig_not_dec	40
Coq.Reals.Rtrigo1.CVN_R_cos	40
Coq.Reals.Rtrigo1.continuity_cos	40
Coq.Reals.Rtrigo1.sin_gt_cos_7_8	40
Coq.Reals.Rtrigo1.PI_2_aux	40
Coq.Reals.Rtrigo1.cos_pi2	40
Coq.Reals.Rtrigo1.pi2_int	40
Coq.Reals.Rtrigo1.cos_minus	40
Coq.Reals.Rtrigo1.sin2_cos2	40
Coq.Reals.Rtrigo1.cos2	40
Coq.Reals.Rtrigo1.sin2	40	0.0.0	synth with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).	0.0656070709229	3
Coq.Reals.Rtrigo1.cos_PI2	40
Coq.Reals.Rtrigo1.sin_pos_tech	40
Coq.Reals.Rtrigo1.sin_PI2	40
Coq.Reals.Rtrigo1.PI_RGT_0	40
Coq.Reals.Rtrigo1.PI_4	40
Coq.Reals.Rtrigo1.PI_neq0	40
Coq.Reals.Rtrigo1.cos_PI	40
Coq.Reals.Rtrigo1.sin_PI	40
Coq.Reals.Rtrigo1.sin_bound	40
Coq.Reals.Rtrigo1.cos_bound	40
Coq.Reals.Rtrigo1.neg_cos	40
Coq.Reals.Rtrigo1.sin_cos	40
Coq.Reals.Rtrigo1.sin_plus	40
Coq.Reals.Rtrigo1.sin_minus	40
Coq.Reals.Rtrigo1.tan_plus	40
Coq.Reals.Rtrigo1.sin_2a	40
Coq.Reals.Rtrigo1.cos_2a	40
Coq.Reals.Rtrigo1.cos_2a_cos	40
Coq.Reals.Rtrigo1.cos_2a_sin	40	0.0.4.0.0.1.0.0.0	synth with cache (only 1: intro x; only 1: rewrite double; only 1: unfold Rminus; only 1: rewrite cos_plus; only 1: generalize (sin2_cos2 x); only 1: intro H1; only 1: rewrite double; only 1: rewrite <- H1; only 1: ring_Rsqr).	2.77058792114	649
Coq.Reals.Rtrigo1.tan_2a	40
Coq.Reals.Rtrigo1.sin_neg	40	0.0.0.0.0.0.0	synth with cache (only 1: intro; only 1: unfold sin; only 1: replace (- x)² with x²; only 1: case (exist_sin x²); only 1: intros; only 1: ring; only 1: apply Rsqr_neg).	0.103929042816	7
Coq.Reals.Rtrigo1.cos_neg	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold cos; only 1: replace (- x)² with x²; only 1: reflexivity; only 1: apply Rsqr_neg).	0.0738399028778	5
Coq.Reals.Rtrigo1.tan_0	40
Coq.Reals.Rtrigo1.tan_neg	40	0.0.0.5.0.3.10.14	synth with cache (only 1: unfold tan; only 1: intros n; only 1: rewrite <- cos_sym; only 1: unfold Rdiv; only 1: rewrite sin_antisym; only 1: unfold sin; only 1: rewrite <- Ropp_mult_distr_l_reverse; only 1: ring).	23.6976509094	13526
Coq.Reals.Rtrigo1.tan_minus	40
Coq.Reals.Rtrigo1.cos_3PI2	40
Coq.Reals.Rtrigo1.sin_2PI	40
Coq.Reals.Rtrigo1.cos_2PI	40
Coq.Reals.Rtrigo1.neg_sin	40	0.0.0.3.0	synth with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.627609014511	100
Coq.Reals.Rtrigo1.sin_PI_x	40
Coq.Reals.Rtrigo1.sin_period	40
Coq.Reals.Rtrigo1.cos_period	40
Coq.Reals.Rtrigo1.sin_shift	40
Coq.Reals.Rtrigo1.cos_shift	40
Coq.Reals.Rtrigo1.cos_sin	40	0.0.0.5.0	synth with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	0.126759052277	17
Coq.Reals.Rtrigo1.PI2_RGT_0	40	0.0.1.0.0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra; only 1: assert (Hyp : 0 < 2); only 1: now apply (IZR_lt 0 2); only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.192759990692	16
Coq.Reals.Rtrigo1.SIN_bound	40
Coq.Reals.Rtrigo1.COS_bound	40
Coq.Reals.Rtrigo1.cos_sin_0	40
Coq.Reals.Rtrigo1.cos_sin_0_var	40
Coq.Reals.Rtrigo1.sin_lb_gt_0	40
Coq.Reals.Rtrigo1.SIN	40
Coq.Reals.Rtrigo1.COS	40
Coq.Reals.Rtrigo1._PI2_RLT_0	40	1.2.11.1.0	synth with cache (only 1: unfold PI; only 1: rewrite <- (Rmult_0_r (/ 2)); only 1: destruct pi2_int; only 1: rewrite <- (Rmult_0_r (/ 2)); only 1: lra).	25.5634448528	8955
Coq.Reals.Rtrigo1.PI4_RLT_PI2	40
Coq.Reals.Rtrigo1.PI2_Rlt_PI	40
Coq.Reals.Rtrigo1.sin_gt_0	40
Coq.Reals.Rtrigo1.cos_gt_0	40
Coq.Reals.Rtrigo1.sin_ge_0	40
Coq.Reals.Rtrigo1.cos_ge_0	40
Coq.Reals.Rtrigo1.sin_le_0	40
Coq.Reals.Rtrigo1.cos_le_0	40
Coq.Reals.Rtrigo1.sin_lt_0	40
Coq.Reals.Rtrigo1.sin_lt_0_var	40
Coq.Reals.Rtrigo1.cos_lt_0	40
Coq.Reals.Rtrigo1.tan_gt_0	40
Coq.Reals.Rtrigo1.tan_lt_0	40
Coq.Reals.Rtrigo1.cos_ge_0_3PI2	40
Coq.Reals.Rtrigo1.form1	40
Coq.Reals.Rtrigo1.form2	40	2.0.0.0.0.0.0.0	synth with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: rewrite <- (cos_neg q); only 1: replace (- q) with ((p - q) / 2 - (p + q) / 2) by field; only 1: rewrite cos_plus; only 1: rewrite cos_minus; only 1: ring_Rsqr).	0.227838039398	13
Coq.Reals.Rtrigo1.form3	40
Coq.Reals.Rtrigo1.form4	40	0.0.0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: pattern q at 3; only 1: replace q with ((p + q) / 2 - (p - q) / 2); only 1: rewrite sin_plus; only 1: rewrite sin_minus; only 1: ring; only 1: pattern q at 3; only 1: rewrite double_var; only 1: unfold Rdiv; only 1: ring).	6.48459386826	1209
Coq.Reals.Rtrigo1.sin_increasing_0	40
Coq.Reals.Rtrigo1.sin_increasing_1	40
Coq.Reals.Rtrigo1.sin_decreasing_0	40
Coq.Reals.Rtrigo1.sin_decreasing_1	40
Coq.Reals.Rtrigo1.cos_increasing_0	40
Coq.Reals.Rtrigo1.cos_increasing_1	40
Coq.Reals.Rtrigo1.cos_decreasing_0	40
Coq.Reals.Rtrigo1.cos_decreasing_1	40
Coq.Reals.Rtrigo1.tan_diff	40
Coq.Reals.Rtrigo1.tan_increasing_0	40
Coq.Reals.Rtrigo1.tan_increasing_1	40
Coq.Reals.Rtrigo1.sin_incr_0	40
Coq.Reals.Rtrigo1.sin_incr_1	40
Coq.Reals.Rtrigo1.sin_decr_0	40
Coq.Reals.Rtrigo1.sin_decr_1	40
Coq.Reals.Rtrigo1.cos_incr_0	40
Coq.Reals.Rtrigo1.cos_incr_1	40
Coq.Reals.Rtrigo1.cos_decr_0	40
Coq.Reals.Rtrigo1.cos_decr_1	40
Coq.Reals.Rtrigo1.tan_incr_0	40
Coq.Reals.Rtrigo1.tan_incr_1	40
Coq.Reals.Rtrigo1.sin_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_0	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_1	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40
Coq.Reals.PartSum.tech1	40
Coq.Reals.PartSum.tech2	40
Coq.Reals.PartSum.tech3	40
Coq.Reals.PartSum.tech4	40
Coq.Reals.PartSum.tech5	40	0.0	synth with cache (only 1: intros; only 1: auto with real).	0.0317170619965	2
Coq.Reals.PartSum.tech6	40
Coq.Reals.PartSum.tech7	40
Coq.Reals.PartSum.tech11	40
Coq.Reals.PartSum.tech12	40	0.0	synth with cache (only 1: intros; only 1: auto with arith).	0.0301749706268	2
Coq.Reals.PartSum.scal_sum	40
Coq.Reals.PartSum.decomp_sum	40
Coq.Reals.PartSum.plus_sum	40	4.0.0.0.0.1.5	synth with cache (only 1: intros n; only 1: intro; only 1: induction N as [| N HrecN]; only 1: reflexivity; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	10.6280729771	3818
Coq.Reals.PartSum.sum_eq	40
Coq.Reals.PartSum.uniqueness_sum	40
Coq.Reals.PartSum.minus_sum	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.0937950611115	7
Coq.Reals.PartSum.sum_decomposition	40
Coq.Reals.PartSum.sum_Rle	40
Coq.Reals.PartSum.Rsum_abs	40
Coq.Reals.PartSum.sum_cte	40
Coq.Reals.PartSum.sum_growing	40	10.0.4.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: apply H; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (sum_f_R0 An N + Bn (S N)); only 1: apply Rplus_le_compat_l; only 1: apply H; only 1: auto with real).	6.21884799004	4875
Coq.Reals.PartSum.Rabs_triang_gen	40	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	1.39894509315	366
Coq.Reals.PartSum.cond_pos_sum	40
Coq.Reals.PartSum.cauchy_abs	40
Coq.Reals.PartSum.cv_cauchy_1	40
Coq.Reals.PartSum.cv_cauchy_2	40
Coq.Reals.PartSum.sum_eq_R0	40
Coq.Reals.PartSum.sum_incr	40
Coq.Reals.PartSum.sum_cv_maj	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_sym	40
Coq.Reals.ConstructiveCauchyReals.factorDenom	40	13.0.3.5	synth with cache (only 1: intros a b; only 1: intros H; only 1: unfold Qeq, Qinv, Qmult; only 1: now Z.nzsimpl).	21.3724892139	11599
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_sym	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_cau_r	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_inc	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_max	40
Coq.Reals.ConstructiveCauchyReals.standard_modulus	40
Coq.Reals.ConstructiveCauchyReals.CRealLtEpsilon	40
Coq.Reals.ConstructiveCauchyReals.CRealLtForget	40	0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: assert (exists n : nat, n <> 0%nat /\ (2 # Pos.of_nat n < proj1_sig y n - proj1_sig x n)%Q); only 1: destruct H as [n maj]; only 1: exists (Pos.to_nat n); only 1: split; only 1: intro abs; only 1: destruct (Pos2Nat.is_succ n); only 1: rewrite H in abs; only 1: inversion abs; only 1: rewrite Pos2Nat.id; only 1: apply maj; only 1: destruct H0 as [n maj]; only 1: exists (Pos.of_nat n); only 1: rewrite Nat2Pos.id; only 1: apply maj; only 1: apply maj).	4.23536586761	1907
Coq.Reals.ConstructiveCauchyReals.CRealLt_lpo_dec	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_not_lt	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_diff	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_modindep	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_aboveSig	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above_same	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_asym	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_irrefl	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_refl	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_refl	40	0.0.0.0.2.0	synth with cache (only 1: intros; only 1: split; only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs); only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs)).	0.0505940914154	8
Coq.Reals.ConstructiveCauchyReals.CRealEq_sym	40	12.0.3	synth with cache (only 1: intros a b H; only 1: destruct H as [n maj]; only 1: now try split).	0.726420164108	663
Coq.Reals.ConstructiveCauchyReals.CRealLt_dec	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_relT	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealGt_morph	40
Coq.Reals.ConstructiveCauchyReals.CReal_appart_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealLtProp_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealGe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_l	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_r	40	13.6.0.3.0	synth with cache (only 1: intros; only 1: apply (CReal_lt_le_trans _ x); only 1: apply H0; only 1: intro abs; only 1: now apply H).	31.2882430553	8622
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_l	40	1	synth with cache (only 1: now unfold Zdiv.eqm; intros a b c ->).	0.0782821178436	27
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_r	40	1	synth with cache (only 1: now unfold Zdiv.eqm; intros a b c ->).	0.0637550354004	19
Coq.Reals.ConstructiveCauchyReals.ConstCauchy	40
Coq.Reals.ConstructiveCauchyReals.inject_Q	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_0_1	40
Coq.Reals.ConstructiveCauchyReals.CReal_injectQPos	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQ	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQopp	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_compare	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_T	40	0.0.0.0.0.0.0.0.0.0.0.0.0.4	synth with cache (only 1: intros EQ; only 1: split; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs).	1.73061299324	826
Coq.Reals.ConstructiveCauchyReals.CReal_plus_cauchy	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus	40	6	synth with cache (only 1: trivial).	0.0188632011414	7
Coq.Reals.ConstructiveCauchyReals.CReal_plus_nth	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_unfold	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp	40	7	synth with cache (only 1: auto).	0.0170478820801	8
Coq.Reals.ConstructiveCauchyReals.belowMultiple	40	0.0.3.7.1.0.9.7	synth with cache (only 1: intros n m; only 1: destruct m; only 1: intro H; only 1: Nat.nzsimpl; only 1: Nat.order; only 1: intro H; only 1: simpl; only 1: trivial using Nat.le_add_r).	27.4256219864	12599
Coq.Reals.ConstructiveCauchyReals.CReal_plus_assoc	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_comm	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_r	40	1.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: intro abs; only 1: apply H; only 1: clear H; only 1: do 2 rewrite <- (CReal_plus_comm x); only 1: apply CReal_plus_lt_compat_l; only 1: exact abs).	0.242658138275	9
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_lt_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_l	40	0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: split; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction).	1.51283693314	535
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_T	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_0	40	26	synth with cache (only 1: now f_equiv).	1.22020292282	876
Coq.Reals.ConstructiveCauchyReals.CReal_opp_plus_distr	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_involutive	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_plus	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_one	40	0	synth with cache (only 1: reflexivity).	0.0197868347168	1
Coq.Reals.ConstructiveCauchyReals.inject_Q_lt	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.lt_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.le_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_le	40
Coq.Reals.ConstructiveCauchyReals.inject_Z_plus	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Z	40
Coq.Reals.Rtrigo_reg.continuity_sin	40
Coq.Reals.Rtrigo_reg.CVN_R_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	40
Coq.Reals.Rtrigo_reg.derivable_pt_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_cos	40
Coq.Reals.Rtrigo_reg.derivable_sin	40	0.0.2.0	synth with cache (only 1: intro; only 1: unfold derivable_pt; only 1: exists (cos x); only 1: apply derivable_pt_lim_sin).	0.141752004623	6
Coq.Reals.Rtrigo_reg.derivable_cos	40
Coq.Reals.Rtrigo_reg.derive_pt_sin	40
Coq.Reals.Rtrigo_reg.derive_pt_cos	40	1.3.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cos).	0.776078939438	90
Coq.Reals.Cos_plus.Majxy_cv_R0	40
Coq.Reals.Cos_plus.reste1_maj	40
Coq.Reals.Cos_plus.reste2_maj	40
Coq.Reals.Cos_plus.reste1_cv_R0	40
Coq.Reals.Cos_plus.reste2_cv_R0	40
Coq.Reals.Cos_plus.reste_cv_R0	40
Coq.Reals.Cos_plus.cos_plus	40
Coq.Reals.Rgeom.distance_refl	40
Coq.Reals.Rgeom.distance_symm	40
Coq.Reals.Rgeom.law_cosines	40
Coq.Reals.Rgeom.triangle	40
Coq.Reals.Rgeom.translation_0	40	1.3.0.1	synth with cache (only 1: intros; only 1: split; only 1: auto with real; only 1: eauto with real).	0.0717539787292	9
Coq.Reals.Rgeom.isometric_translation	40
Coq.Reals.Rgeom.rotation_0	40
Coq.Reals.Rgeom.rotation_PI2	40
Coq.Reals.Rgeom.isometric_rotation_0	40
Coq.Reals.Rgeom.isometric_rotation	40
Coq.Reals.Rgeom.isometric_rot_trans	40
Coq.Reals.Rgeom.isometric_trans_rot	40
Coq.Reals.Rsqrt_def.dicho_comp	40
Coq.Reals.Rsqrt_def.dicho_lb_growing	40
Coq.Reals.Rsqrt_def.dicho_up_decreasing	40
Coq.Reals.Rsqrt_def.dicho_lb_maj_y	40
Coq.Reals.Rsqrt_def.dicho_lb_maj	40
Coq.Reals.Rsqrt_def.dicho_up_min_x	40
Coq.Reals.Rsqrt_def.dicho_up_min	40
Coq.Reals.Rsqrt_def.dicho_lb_cv	40
Coq.Reals.Rsqrt_def.dicho_up_cv	40
Coq.Reals.Rsqrt_def.dicho_lb_dicho_up	40
Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40	0.2.0.10	synth with cache (only 1: intros Eq2; only 1: red; only 1: apply pow_nonzero; only 1: discrR).	2.60662388802	656
Coq.Reals.Rsqrt_def.pow_2_n_growing	40
Coq.Reals.Rsqrt_def.pow_2_n_infty	40
Coq.Reals.Rsqrt_def.cv_dicho	40
Coq.Reals.Rsqrt_def.continuity_seq	40
Coq.Reals.Rsqrt_def.dicho_lb_car	40
Coq.Reals.Rsqrt_def.dicho_up_car	40
Coq.Reals.Rsqrt_def.cv_pow_half	40
Coq.Reals.Rsqrt_def.IVT	40
Coq.Reals.Rsqrt_def.IVT_cor	40
Coq.Reals.Rsqrt_def.Rsqrt_exists	40
Coq.Reals.Rsqrt_def.Rsqrt_positivity	40
Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_non_negative	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.avl_node	40	0.0	synth with cache (only 1: intros; only 1: auto).	0.0375871658325	2
Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_0	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.empty_avl	40	0	synth with cache (only 1: constructor).	0.0271470546722	1
Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_avl	40	0.3.0	synth with cache (only 1: intros; only 1: unfold create; only 1: auto).	0.133692979813	27
Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_height	40	0	synth with cache (only 1: auto).	0.0258610248566	1
Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_2	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.concat_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.split_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map.map_height	40	0.4.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: constructor).	0.0520632266998	8
Coq.FSets.FMapFullAVL.AvlProofs.Map.map_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_height	40	0.0.0.0.0	synth with cache (only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0704009532928	5
Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map_option.map_option_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map2_opt.map2_opt_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map2.map2_avl	40
Coq.FSets.FMapFullAVL.IntMake.Elt.MapsTo_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.mem_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.mem_2	40
Coq.FSets.FMapFullAVL.IntMake.Elt.empty_1	40	27	synth with cache (only 1: easy).	0.151939868927	361
Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_2	40
Coq.FSets.FMapFullAVL.IntMake.Elt.add_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.add_2	40	0.11.7.4.2	synth with cache (only 1: intros l x e r; only 1: intros y' e'' eqky'; only 1: red; only 1: simpl in *; only 1: eauto using add_2, add_3).	7.76720690727	7255
Coq.FSets.FMapFullAVL.IntMake.Elt.add_3	40
Coq.FSets.FMapFullAVL.IntMake.Elt.remove_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.remove_2	40
Coq.FSets.FMapFullAVL.IntMake.Elt.remove_3	40
Coq.FSets.FMapFullAVL.IntMake.Elt.find_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.find_2	40
Coq.FSets.FMapFullAVL.IntMake.Elt.fold_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_2	40
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3	40
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3w	40
Coq.FSets.FMapFullAVL.IntMake.Elt.cardinal_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.Equivb_Equivb	40
Coq.FSets.FMapFullAVL.IntMake.Elt.equal_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.equal_2	40
Coq.FSets.FMapFullAVL.IntMake.map_1	40
Coq.FSets.FMapFullAVL.IntMake.map_2	40
Coq.FSets.FMapFullAVL.IntMake.mapi_1	40
Coq.FSets.FMapFullAVL.IntMake.mapi_2	40
Coq.FSets.FMapFullAVL.IntMake.map2_1	40
Coq.FSets.FMapFullAVL.IntMake.map2_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_cardinal_e	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_tcc	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_seq	40	2.0	synth with cache (only 1: intros; only 1: tauto).	0.0338780879974	4
Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	1.0.0.2	synth with cache (only 1: split; only 1: solve [ inv Raw.MapsTo; auto ]; only 1: destruct m2; only 1: intuition).	0.0534789562225	15
Coq.FSets.FMapFullAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_In	40	3.6.0.20.11	synth with cache (only 1: intros H; only 1: induction 1; only 1: auto; only 1: auto; only 1: auto).	4.37110590935	7433
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_MapsTo	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_alt	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_1	40	0.0.0.0.13.13.9.25	synth with cache (only 1: intros a b Ha H; only 1: intuition; only 1: elim H0; only 1: eauto with *; only 1: intros; only 1: auto; only 1: intros; only 1: auto).	20.9711520672	44308
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_node_iff	40	7.1.1.0.6.0	synth with cache (only 1: split; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto; only 1: intuition).	4.25374889374	1474
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_leaf	40	1.1.17	synth with cache (only 1: intros a0; only 1: intros x; only 1: intuition_in).	0.856067180634	502
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_leaf	40	0.0.2	synth with cache (only 1: red; only 1: intros; only 1: intuition_in).	0.0379722118378	5
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_node	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_node	40	0.0.4.3.2	synth with cache (only 1: intros; only 1: unfold gt_tree; only 1: Tactics.program_simpl; only 1: intuition_in; only 1: order).	5.65549993515	207
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_left	40	0.0	synth with cache (only 1: intros; only 1: eauto with ordered_type).	0.0335288047791	2
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_right	40	0	synth with cache (only 1: intuition_in).	0.0228321552277	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_left	40	0	synth with cache (only 1: intuition_in).	0.0230071544647	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_right	40	0	synth with cache (only 1: intuition_in).	0.0227079391479	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_not_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_trans	40	7.8	synth with cache (only 1: intros x y; only 1: eauto with ordered_type).	1.53756093979	494
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_not_in	40	0.0.0.0	synth with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: order).	0.0339980125427	4
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_trans	40	0	synth with cache (only 1: eauto with ordered_type).	0.0345990657806	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_bst	40	2	synth with cache (only 1: intuition).	0.0172979831696	3
Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_1	40	23	synth with cache (only 1: now simpl).	0.596473932266	270
Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_2	40	4.1.1.5.0	synth with cache (only 1: destruct m; only 1: easy; only 1: simpl; only 1: intro H; only 1: discriminate).	0.72643995285	549
Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in	40	3.1.0.15.29.2	synth with cache (only 1: intuition; only 1: functional induction (L.find (elt:=x) m); only 1: contradiction; only 1: auto; only 1: auto; only 1: eauto with ordered_type).	8.29101800919	10959
Coq.FSets.FMapAVL.Raw.Proofs.Elt.in_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.not_find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_mapsto_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_bst	40	1.8.1	synth with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: compute; only 1: intuition_in).	0.184067964554	90
Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_in	40	2.1.0	synth with cache (only 1: unfold create; only 1: intros m x y e e'; only 1: intuition_in).	0.0914340019226	6
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_3	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_3	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_3	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_lt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_nodup	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_app	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_node	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv_aux	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.flatten_e_elements	40	0.0.0.0.0.5	synth with cache (only 1: simpl; only 1: unfold elements; only 1: simpl; only 1: intros; only 1: rewrite !elements_app, !app_nil_r, !app_assoc_reverse; only 1: auto).	0.597594976425	197
Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_IfEq	40	3.0.1.0.4.7.20.34	synth with cache (only 1: intros P x0 xs H; only 1: red; only 1: intros sorted hyp; only 1: simpl; only 1: L.MX.elim_comp; only 1: intuition; only 1: rewrite H2; only 1: auto).	33.5265169144	30351
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_end_IfEq	40	32.13.24.17	synth with cache (only 1: intro n; only 1: red; only 1: simpl; only 1: now destruct n).	15.0684559345	38939
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_more_IfEq	40	3.10.3.0	synth with cache (only 1: intros; only 1: simpl in *; only 1: rewrite <- H; only 1: split).	3.82637810707	1657
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_cont_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.Equivb_elements	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_Equivb	40
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_2	40	0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	0.10408115387	8
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_2	40
Coq.FSets.FMapAVL.IntMake.Elt.MapsTo_1	40
Coq.FSets.FMapAVL.IntMake.Elt.mem_1	40
Coq.FSets.FMapAVL.IntMake.Elt.mem_2	40
Coq.FSets.FMapAVL.IntMake.Elt.empty_1	40	40	synth with cache (only 1: inversion_clear 1).	0.422960042953	836
Coq.FSets.FMapAVL.IntMake.Elt.is_empty_1	40
Coq.FSets.FMapAVL.IntMake.Elt.is_empty_2	40
Coq.FSets.FMapAVL.IntMake.Elt.add_1	40	0.0.1.0.2.4.9.7.1.14	synth with cache (only 1: intros (e, abs); only 1: intros; only 1: apply find_2; only 1: simpl; only 1: rewrite ?add_find, ?bal_find; only 1: destruct X.compare; only 1: order; only 1: intuition congruence; only 1: order; only 1: auto).	23.6773350239	40984
Coq.FSets.FMapAVL.IntMake.Elt.add_2	40
Coq.FSets.FMapAVL.IntMake.Elt.add_3	40
Coq.FSets.FMapAVL.IntMake.Elt.remove_1	40
Coq.FSets.FMapAVL.IntMake.Elt.remove_2	40
Coq.FSets.FMapAVL.IntMake.Elt.remove_3	40
Coq.FSets.FMapAVL.IntMake.Elt.find_1	40
Coq.FSets.FMapAVL.IntMake.Elt.find_2	40	1.7.14	synth with cache (only 1: intros y1 y2 Hy1 Hy2; only 1: apply L.find_2; only 1: auto).	0.639101982117	754
Coq.FSets.FMapAVL.IntMake.Elt.fold_1	40
Coq.FSets.FMapAVL.IntMake.Elt.elements_1	40
Coq.FSets.FMapAVL.IntMake.Elt.elements_2	40	5.0.0.20.4.0	synth with cache (only 1: intros; only 1: unfold elements, MapsTo, eq_key_elt; only 1: generalize H; only 1: unfold elements, MapsTo, eq_key_elt; only 1: rewrite elements_mapsto; only 1: auto).	5.28226709366	8013
Coq.FSets.FMapAVL.IntMake.Elt.elements_3	40
Coq.FSets.FMapAVL.IntMake.Elt.elements_3w	40
Coq.FSets.FMapAVL.IntMake.Elt.cardinal_1	40
Coq.FSets.FMapAVL.IntMake.Elt.Equivb_Equivb	40
Coq.FSets.FMapAVL.IntMake.Elt.equal_1	40
Coq.FSets.FMapAVL.IntMake.Elt.equal_2	40
Coq.FSets.FMapAVL.IntMake.map_1	40
Coq.FSets.FMapAVL.IntMake.map_2	40
Coq.FSets.FMapAVL.IntMake.mapi_1	40
Coq.FSets.FMapAVL.IntMake.mapi_2	40
Coq.FSets.FMapAVL.IntMake.map2_1	40
Coq.FSets.FMapAVL.IntMake.map2_2	40
Coq.FSets.FMapAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_end_Cmp	40	1.3.3.0.2.10	synth with cache (only 1: red; only 1: intros [| x2 d2 r2 e2]; only 1: red; only 1: exact I; only 1: simpl; only 1: auto).	0.611939907074	630
Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_cont_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare	40
Coq.FSets.FMapAVL.IntMake_ord.eq_seq	40	0.1	synth with cache (only 1: intros; only 1: Raw.Proofs.intuition_in).	0.032243013382	3
Coq.FSets.FMapAVL.IntMake_ord.lt_slt	40	5.1	synth with cache (only 1: intros; only 1: intuition Nat.order).	0.0309290885925	8
Coq.FSets.FMapAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.In_eq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.mem_iff	40	22	synth with cache (only 1: intuition).	2.3611869812	1586
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.not_mem_iff	40	1.20.4.14.1	synth with cache (only 1: <Coq.Strings.String.t_eqb>; only 1: Ndec.eqb2eq; only 1: intuition; only 1: Ndec.eqb2eq; only 1: intuition).	21.7847661972	7081
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.equal_iff	40	5	synth with cache (only 1: intuition).	0.584756851196	61
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.subset_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.empty_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.is_empty_iff	40	1	synth with cache (only 1: intuition).	0.0671818256378	15
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.singleton_iff	40	7	synth with cache (only 1: intuition).	0.0369081497192	22
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_neq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_neq_iff	40	1.0.8.0.1.2	synth with cache (only 1: destruct (eq_dec x y) as [E| E]; only 1: destruct 1; only 1: auto; only 1: intuition; only 1: apply remove_3 with x; only 1: auto).	3.17140412331	1894
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.union_iff	40	4	synth with cache (only 1: intuition).	0.0750069618225	19
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.inter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.diff_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.filter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.for_all_iff	40	5.4	synth with cache (only 1: intro a'; only 1: intuition).	0.0790240764618	32
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.exists_iff	40	4.11	synth with cache (only 1: intros; only 1: intuition).	0.848006010056	335
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.elements_iff	40	9.6.0	synth with cache (only 1: split; only 1: intuition; only 1: intuition).	0.804646015167	342
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.mem_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.empty_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_neq_b	40	0.0.0.0.0.0.0.0.3	synth with cache (only 1: intuition; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	1.2316570282	146
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_neq_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.singleton_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.union_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.inter_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.diff_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.elements_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.filter_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.for_all_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.exists_b	40
Coq.FSets.FSetFacts.WFacts_fun.E_ST	40
Coq.FSets.FSetFacts.WFacts_fun.Equal_ST	40
Coq.FSets.FSetFacts.WFacts_fun.In_m	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40
Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40	6.0.0.5	synth with cache (only 1: apply proper_sym_impl_iff; only 1: red; only 1: apply eq_sym; only 1: firstorder).	0.717725038528	290
Coq.FSets.FSetFacts.WFacts_fun.mem_m	40
Coq.FSets.FSetFacts.WFacts_fun.singleton_m	40
Coq.FSets.FSetFacts.WFacts_fun.add_m	40
Coq.FSets.FSetFacts.WFacts_fun.remove_m	40
Coq.FSets.FSetFacts.WFacts_fun.union_m	40
Coq.FSets.FSetFacts.WFacts_fun.inter_m	40
Coq.FSets.FSetFacts.WFacts_fun.diff_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_m	40	7.4.4.0	synth with cache (only 1: unfold Equal; only 1: repeat red; only 1: intros; only 1: firstorder).	4.66043996811	2332
Coq.FSets.FSetFacts.WFacts_fun.subset_m	40
Coq.FSets.FSetFacts.WFacts_fun.equal_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_refl	40	1.0.3.1	synth with cache (only 1: intros; only 1: intros H; only 1: apply equal_2; only 1: intuition).	0.0472528934479	9
Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	0.2.10.4.9	synth with cache (only 1: intros H1 H2 H3; only 1: intros; only 1: intro; only 1: intros; only 1: auto).	2.31337809563	3117
Coq.FSets.FSetFacts.WFacts_fun.In_s_m	40	0.3.1.1	synth with cache (only 1: intros x y H s s' H0; only 1: generalize (H0 x); only 1: rewrite H; only 1: intuition).	0.495652914047	40
Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	7.8	synth with cache (only 1: intro H; only 1: firstorder).	0.79749584198	504
Coq.FSets.FSetFacts.WFacts_fun.add_s_m_Proper	40
Coq.FSets.FSetFacts.WFacts_fun.remove_s_m_Proper	40	0.0.1.6.4	synth with cache (only 1: intros; only 1: intro; only 1: do 2 rewrite remove_iff; only 1: rewrite H; only 1: intuition).	1.61864614487	671
Coq.FSets.FSetFacts.WFacts_fun.union_s_m_Proper	40
Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40
Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40
Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40
Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40
Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40	6.0.3.3.9	synth with cache (only 1: intros a H; only 1: intros; only 1: intros H1; only 1: do 2 (rewrite filter_iff; auto); only 1: intuition).	4.20482802391	2152
Coq.FSets.FSetPositive.PositiveSet.In_1	40	2.5.5	synth with cache (only 1: intros x y z H1 H2; only 1: inversion H1; only 1: now subst).	0.79097700119	465
Coq.FSets.FSetPositive.PositiveSet.eq_refl	40	10.1	synth with cache (only 1: intros n; only 1: now BinInt.Z.nzsimpl').	0.525661945343	139
Coq.FSets.FSetPositive.PositiveSet.eq_sym	40	3.3	synth with cache (only 1: intros H1 n H2; only 1: now subst).	0.0520801544189	17
Coq.FSets.FSetPositive.PositiveSet.eq_trans	40	28.1	synth with cache (only 1: intros; only 1: firstorder).	3.10967087746	3528
Coq.FSets.FSetPositive.PositiveSet.mem_1	40	6.0	synth with cache (only 1: intros; only 1: auto).	0.0435740947723	8
Coq.FSets.FSetPositive.PositiveSet.mem_2	40	0.0	synth with cache (only 1: unfold In; only 1: trivial).	0.0184679031372	2
Coq.FSets.FSetPositive.PositiveSet.mem_Leaf	40	3.0	synth with cache (only 1: intros n; only 1: now destruct n).	0.0257539749146	5
Coq.FSets.FSetPositive.PositiveSet.empty_1	40	11	synth with cache (only 1: discriminate).	0.0308408737183	33
Coq.FSets.FSetPositive.PositiveSet.mem_node	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_spec	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_1	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_2	40
Coq.FSets.FSetPositive.PositiveSet.subset_Leaf_s	40	1.9	synth with cache (only 1: intro a; only 1: easy).	0.463618040085	100
Coq.FSets.FSetPositive.PositiveSet.subset_spec	40
Coq.FSets.FSetPositive.PositiveSet.subset_1	40
Coq.FSets.FSetPositive.PositiveSet.subset_2	40
Coq.FSets.FSetPositive.PositiveSet.equal_subset	40
Coq.FSets.FSetPositive.PositiveSet.equal_spec	40
Coq.FSets.FSetPositive.PositiveSet.equal_1	40
Coq.FSets.FSetPositive.PositiveSet.equal_2	40
Coq.FSets.FSetPositive.PositiveSet.eq_dec	40
Coq.FSets.FSetPositive.PositiveSet.lex_Opp	40	0.3.1.0.15.6.6.2	synth with cache (only 1: intros a b n Hn; only 1: intros Ha Hb; only 1: rewrite Ha; only 1: induction n; only 1: trivial; only 1: auto; only 1: simpl; only 1: now subst).	13.7217259407	16084
Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40	0.1.1.0.0.0	synth with cache (only 1: intros n m; only 1: destruct n, m; only 1: auto; only 1: now rewrite <- ?Pos.compare_antisym; only 1: now rewrite <- ?Pos.compare_antisym; only 1: reflexivity).	0.182373046875	8
Coq.FSets.FSetPositive.PositiveSet.compare_inv	40
Coq.FSets.FSetPositive.PositiveSet.lex_Eq	40
Coq.FSets.FSetPositive.PositiveSet.compare_bool_Eq	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: now split; only 1: easy'; only 1: now split; only 1: now split).	0.0494408607483	5
Coq.FSets.FSetPositive.PositiveSet.compare_equal	40
Coq.FSets.FSetPositive.PositiveSet.compare_gt	40
Coq.FSets.FSetPositive.PositiveSet.compare_eq	40
Coq.FSets.FSetPositive.PositiveSet.compare	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_cxe	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xce	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0307850837708	4
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lxl	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_gxg	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xll	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0280981063843	4
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xgg	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0272159576416	4
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lex	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.0.0.0.0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: ct; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: ct).	0.106016159058	51
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_Leaf	40	2.0.1.41.2	synth with cache (only 1: intros q; only 1: destruct q; only 1: simpl; only 1: trivial; only 1: reflexivity).	3.39395594597	8051
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_empty_x	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_empty	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_fun	40
Coq.FSets.FSetPositive.PositiveSet.lt_trans	40
Coq.FSets.FSetPositive.PositiveSet.lt_not_eq	40
Coq.FSets.FSetPositive.PositiveSet.add_spec	40
Coq.FSets.FSetPositive.PositiveSet.add_1	40
Coq.FSets.FSetPositive.PositiveSet.add_2	40	3.0.2.3	synth with cache (only 1: intro H; only 1: intros; only 1: apply <- add_spec; only 1: auto).	0.259655952454	112
Coq.FSets.FSetPositive.PositiveSet.add_3	40
Coq.FSets.FSetPositive.PositiveSet.remove_spec	40
Coq.FSets.FSetPositive.PositiveSet.remove_1	40
Coq.FSets.FSetPositive.PositiveSet.remove_2	40	4.0.0	synth with cache (only 1: intros a n m H; only 1: rewrite remove_spec; only 1: intuition congruence).	0.0441370010376	7
Coq.FSets.FSetPositive.PositiveSet.remove_3	40	0.0.1.3	synth with cache (only 1: intros n m p; only 1: rewrite remove_spec; only 1: intros (H, H'); only 1: trivial).	0.0646119117737	32
Coq.FSets.FSetPositive.PositiveSet.singleton_1	40
Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	2.0.3	synth with cache (only 1: intros n m H; only 1: apply <- add_spec; only 1: auto).	0.255132913589	17
Coq.FSets.FSetPositive.PositiveSet.union_spec	40
Coq.FSets.FSetPositive.PositiveSet.union_1	40
Coq.FSets.FSetPositive.PositiveSet.union_2	40
Coq.FSets.FSetPositive.PositiveSet.union_3	40	0.6.1.0	synth with cache (only 1: intros; only 1: apply <- union_spec; only 1: right; only 1: assumption).	0.343807935715	155
Coq.FSets.FSetPositive.PositiveSet.inter_spec	40
Coq.FSets.FSetPositive.PositiveSet.inter_1	40
Coq.FSets.FSetPositive.PositiveSet.inter_2	40	0.0.0	synth with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.0316431522369	3
Coq.FSets.FSetPositive.PositiveSet.inter_3	40	12.0.1.7	synth with cache (only 1: intros a b c; only 1: intros; only 1: rewrite inter_spec; only 1: now BinNat.N.nzsimpl).	15.3556880951	13111
Coq.FSets.FSetPositive.PositiveSet.diff_spec	40
Coq.FSets.FSetPositive.PositiveSet.diff_1	40
Coq.FSets.FSetPositive.PositiveSet.diff_2	40	0.0.0	synth with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.280990123749	3
Coq.FSets.FSetPositive.PositiveSet.diff_3	40	1.0.3.0.0.0.1	synth with cache (only 1: induction x; only 1: rewrite diff_spec; only 1: tauto; only 1: rewrite diff_spec; only 1: intuition congruence; only 1: rewrite diff_spec; only 1: tauto).	0.843633890152	236
Coq.FSets.FSetPositive.PositiveSet.fold_1	40
Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40
Coq.FSets.FSetPositive.PositiveSet.xfilter_spec	40
Coq.FSets.FSetPositive.PositiveSet.filter_1	40
Coq.FSets.FSetPositive.PositiveSet.filter_2	40
Coq.FSets.FSetPositive.PositiveSet.filter_3	40	3.0.8.8.29	synth with cache (only 1: intros H; only 1: intros a b Ha Hb; only 1: unfold filter; only 1: rewrite xfilter_spec; only 1: easy).	26.9750161171	46004
Coq.FSets.FSetPositive.PositiveSet.xforall_spec	40
Coq.FSets.FSetPositive.PositiveSet.for_all_1	40
Coq.FSets.FSetPositive.PositiveSet.for_all_2	40
Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40
Coq.FSets.FSetPositive.PositiveSet.exists_1	40
Coq.FSets.FSetPositive.PositiveSet.exists_2	40
Coq.FSets.FSetPositive.PositiveSet.partition_filter	40
Coq.FSets.FSetPositive.PositiveSet.partition_1	40
Coq.FSets.FSetPositive.PositiveSet.partition_2	40	0.0.3	synth with cache (only 1: intros n m Hn; only 1: rewrite partition_filter; only 1: apply eq_refl).	0.105441093445	43
Coq.FSets.FSetPositive.PositiveSet.xelements_spec	40
Coq.FSets.FSetPositive.PositiveSet.elements_1	40
Coq.FSets.FSetPositive.PositiveSet.elements_2	40
Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40
Coq.FSets.FSetPositive.PositiveSet.elements_3	40
Coq.FSets.FSetPositive.PositiveSet.elements_3w	40
Coq.FSets.FSetPositive.PositiveSet.choose_1	40
Coq.FSets.FSetPositive.PositiveSet.choose_2	40
Coq.FSets.FSetPositive.PositiveSet.choose_empty	40
Coq.FSets.FSetPositive.PositiveSet.choose_3'	40
Coq.FSets.FSetPositive.PositiveSet.choose_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_2	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_2	40
Coq.FSets.FMapPositive.append_assoc_0	40
Coq.FSets.FMapPositive.append_assoc_1	40
Coq.FSets.FMapPositive.append_neutral_r	40	2.0.2.0.2.23.44.7	synth with cache (only 1: intros a; only 1: setoid_replace 1%Z with (1 * 1)%Z by now Z.nzsimpl; only 1: induction a; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: trivial).	35.412514925	87216
Coq.FSets.FMapPositive.append_neutral_l	40	0.0.0.0.0.0.0	synth with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: now f_equal).	0.0526809692383	7
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gempty	40	3	synth with cache (only 1: now intros []).	0.0214109420776	4
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gss	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gleaf	40	0.0.0.0.0.0.4.79	synth with cache (only 1: intros n; only 1: case n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto).	6.8784840107	19538
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gso	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.rleaf	40	2.2.2.7.5	synth with cache (only 1: intros H; only 1: destruct H; only 1: trivial; only 1: trivial; only 1: now simpl).	1.15429401398	1119
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.grs	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gro	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_correct	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_correct	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xfind_left	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ii	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_io	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oo	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oi	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct o; only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: destruct (in_inv H0); only 1: congruence; only 1: apply (IHm2 _ _ _ H1); only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: apply (IHm2 _ _ _ H0)).	8.45259308815	3705
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ih	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oh	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_hi	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ho	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.find_xfind_h	40	4.1.1.0.0	synth with cache (only 1: induction i; only 1: simpl; only 1: auto; only 1: auto; only 1: now auto with arith).	0.786877155304	183
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_complete	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_complete	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.cardinal_1	40
Coq.FSets.FMapPositive.PositiveMap.A.mem_find	40
Coq.FSets.FMapPositive.PositiveMap.A.Empty_alt	40
Coq.FSets.FMapPositive.PositiveMap.A.Empty_Node	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.MapsTo_1	40	7.7.12	synth with cache (only 1: intro EQ; only 1: symmetry; only 1: congruence).	0.669646024704	772
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_1	40	6	synth with cache (only 1: congruence).	0.0894911289215	13
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_2	40	0.0	synth with cache (only 1: unfold MapsTo; only 1: auto).	0.0239479541779	2
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.empty_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_3	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_3	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_sort	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3w	40
Coq.FSets.FMapPositive.PositiveMap.xgmapi	40
Coq.FSets.FMapPositive.PositiveMap.gmapi	40
Coq.FSets.FMapPositive.PositiveMap.mapi_1	40
Coq.FSets.FMapPositive.PositiveMap.mapi_2	40
Coq.FSets.FMapPositive.PositiveMap.map_1	40
Coq.FSets.FMapPositive.PositiveMap.map_2	40
Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_l	40
Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_r	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction i; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	7.9052131176	4890
Coq.FSets.FMapPositive.PositiveMap.map2.gmap2	40
Coq.FSets.FMapPositive.PositiveMap.map2_1	40
Coq.FSets.FMapPositive.PositiveMap.map2_2	40
Coq.FSets.FMapPositive.PositiveMap.Fold.xfoldi_1	40
Coq.FSets.FMapPositive.PositiveMap.fold_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_2	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsspec	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.xmap2_lr	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.map2_commut	40
Coq.FSets.FMapFacts.WFacts_fun.eq_bool_alt	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0592660903931	5
Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_fun	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.MapsTo_iff	40	1.1.9.0.15	synth with cache (only 1: intros x y z; only 1: intros; only 1: firstorder; only 1: apply (MapsTo_1 H H0); only 1: apply (MapsTo_1 (E.eq_sym H) H0)).	6.7407310009	5510
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mem_in_iff	40	11.0	synth with cache (only 1: intros; only 1: intuition).	0.83492398262	250
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_mem_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_dec	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.find_mapsto_iff	40	15	synth with cache (only 1: firstorder).	2.16012597084	970
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_find_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.in_find_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.equal_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_in_iff	40	0.39.3	synth with cache (only 1: intros; only 1: firstorder; only 1: apply (empty_1 H)).	9.6765871048	19282
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.is_empty_iff	40	0.2	synth with cache (only 1: destr_bool; only 1: intuition).	0.0449950695038	4
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_mapsto_iff	40	0.2.0.0.0.2.0	synth with cache (only 1: split; only 1: intros; only 1: apply add_3 with x e; only 1: auto; only 1: auto; only 1: apply add_2; only 1: auto).	0.207995176315	66
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_in_iff	40	0.0.0.4.2.0.0.0.9.7.0	synth with cache (only 1: split; only 1: intros (e0, H0); only 1: exists e0; only 1: apply add_3 with x e; only 1: auto; only 1: auto; only 1: intros (e0, H0); only 1: exists e0; only 1: apply add_2; only 1: auto; only 1: auto).	23.8635640144	22020
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_mapsto_iff	40	0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: apply remove_3 with x; only 1: auto; only 1: intros; only 1: apply remove_2; only 1: auto; only 1: auto).	0.0686340332031	8
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_in_iff	40	0.0.0.1.1.0.4.0.0.1	synth with cache (only 1: split; only 1: intros (e', H0); only 1: exists e'; only 1: apply remove_3 with x; only 1: auto; only 1: intros (e', H0); only 1: exists e'; only 1: apply remove_2; only 1: auto; only 1: auto).	2.38756418228	1565
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_inv	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_find_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.find_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_o	40	1.0.6.1.4.4.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intros; only 1: rewrite <- find_mapsto_iff; only 1: split; only 1: intros; only 1: rewrite empty_mapsto_iff in H; only 1: now auto with arith; only 1: intuition; only 1: discriminate).	8.42054510117	7362
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_a	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_o	40	5.2	synth with cache (only 1: intros s; only 1: intuition).	0.096755027771	13
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_o	40	0.0.0.0.18.0.9.3.1	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intros s2; only 1: rewrite <- 2!find_mapsto_iff; only 1: constructor; only 1: apply add_3; only 1: auto; only 1: apply add_2; only 1: auto).	20.5682549477	22897
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_o	40	0.0.0.0.0.8.1.0	synth with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: intuition; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- 2!find_mapsto_iff; only 1: apply add_neq_mapsto_iff; only 1: auto).	2.0635330677	984
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_o	40	0.1.0.1.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).	0.0901939868927	13
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_o	40	1.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition; only 1: auto with map).	0.135233163834	12
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map2_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_b	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equiv	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Cmp.Equiv_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb_eqdec	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	4.0	synth with cache (only 1: intros; only 1: split).	0.0370719432831	6
Coq.FSets.FMapFacts.WFacts_fun.Equal_sym	40	2.0	synth with cache (only 1: intros; only 1: now intuition).	0.231253862381	4
Coq.FSets.FMapFacts.WFacts_fun.Equal_trans	40	17.0.8	synth with cache (only 1: intros a b Ha Hb; only 1: intros H; only 1: congruence).	11.5769629478	7450
Coq.FSets.FMapFacts.WFacts_fun.Equal_ST	40	3.0	synth with cache (only 1: intros; only 1: auto with map).	0.0456800460815	17
Coq.FSets.FMapFacts.WFacts_fun.In_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.Empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.is_empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.mem_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.find_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.add_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.map_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.eqk_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.eqke_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.InA_eqke_eqk	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.NoDupA_eqk_eqke	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.findA_rev	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1b	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_3	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_spec_right	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_bis	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_nodep	40	6.3.0.0.40	synth with cache (only 1: intros x x' Hx y y' Hy Hr; only 1: apply fold_rec; only 1: intros; only 1: trivial; only 1: auto with map).	11.2275969982	27054
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_weak	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rel	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction_bis	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_identity	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_init	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_commutes	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_add	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Equal_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_1	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_1	40	0.0.36	synth with cache (only 1: intro H; only 1: rewrite <- cardinal_Empty; only 1: auto).	11.7843780518	11852
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2b	40	0.0.0.0.0.0.0.17.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite M.cardinal_1 in *; only 1: generalize (elements_mapsto_iff m); only 1: destruct (elements m); only 1: now f_equiv; only 1: exists p; only 1: rewrite H0; only 1: destruct p; only 1: simpl; only 1: constructor; only 1: red; only 1: auto).	6.49718904495	8026
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.filter_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.for_all_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.exists_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_alt	40	19.11	synth with cache (only 1: intros n m; only 1: firstorder).	28.7106199265	16291
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_1	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_Partition	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_In	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_sym	40	7.7	synth with cache (only 1: intros L R n; only 1: firstorder).	0.682910919189	447
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_sym	40	0.2	synth with cache (only 1: compute; only 1: firstorder).	0.417261838913	12
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_partition	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_dec	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_m_Proper	40	0.0.0.0.0.0.1.0.0.1	synth with cache (only 1: intros m m' Hm; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_Equal with (eqA := eq); only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto).	0.468102931976	220
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.update_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.diff_m_Proper	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.sort_equivlistA_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_1	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_1	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_compat	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_compat	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_split	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Below	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Equal_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Above	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Below	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_max	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_min	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Equal	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Below	40
Coq.FSets.FMapWeakList.Raw.Elt.empty_1	40	33	synth with cache (only 1: now simpl).	1.1194589138	1246
Coq.FSets.FMapWeakList.Raw.Elt.empty_NoDup	40	2.0.11	synth with cache (only 1: unfold PX.eqk, PX.eqke; only 1: compute; only 1: auto).	0.0954010486603	101
Coq.FSets.FMapWeakList.Raw.Elt.is_empty_1	40
Coq.FSets.FMapWeakList.Raw.Elt.is_empty_2	40	0.9.0.7.10.0	synth with cache (only 1: unfold Empty, PX.MapsTo; only 1: unfold PX.eqke; only 1: intros; only 1: induction 1; only 1: intuition; only 1: intuition).	11.8076560497	11198
Coq.FSets.FMapWeakList.Raw.Elt.mem_1	40
Coq.FSets.FMapWeakList.Raw.Elt.mem_2	40
Coq.FSets.FMapWeakList.Raw.Elt.find_2	40
Coq.FSets.FMapWeakList.Raw.Elt.find_1	40
Coq.FSets.FMapWeakList.Raw.Elt.find_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.add_1	40
Coq.FSets.FMapWeakList.Raw.Elt.add_2	40
Coq.FSets.FMapWeakList.Raw.Elt.add_3	40
Coq.FSets.FMapWeakList.Raw.Elt.add_3'	40
Coq.FSets.FMapWeakList.Raw.Elt.add_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt.add_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.add_not_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_1	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_2	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_3	40	0.0.0.0.1.0.0.4.1.0.0	synth with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: unfold PX.MapsTo; only 1: generalize Hm; only 1: functional induction (remove x m); only 1: inversion_clear 3; only 1: auto; only 1: inversion_clear 1; only 1: inversion_clear 2; only 1: auto; only 1: auto).	31.414908886	10255
Coq.FSets.FMapWeakList.Raw.Elt.remove_3'	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: functional induction (remove x m); only 1: auto; only 1: auto; only 1: do 2 inversion_clear 1; only 1: auto; only 1: auto).	0.10666012764	8
Coq.FSets.FMapWeakList.Raw.Elt.remove_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt.elements_1	40	3	synth with cache (only 1: auto).	0.0162270069122	4
Coq.FSets.FMapWeakList.Raw.Elt.elements_2	40	4.0	synth with cache (only 1: intros m x; only 1: auto).	0.0255451202393	6
Coq.FSets.FMapWeakList.Raw.Elt.elements_3w	40	5.0.1.0	synth with cache (only 1: induction m; only 1: intros; only 1: auto; only 1: auto).	0.0648350715637	11
Coq.FSets.FMapWeakList.Raw.Elt.fold_1	40	8.0.1.3.7	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl in *; only 1: intuition).	2.72883892059	1474
Coq.FSets.FMapWeakList.Raw.Elt.submap_1	40
Coq.FSets.FMapWeakList.Raw.Elt.submap_2	40
Coq.FSets.FMapWeakList.Raw.Elt.equal_1	40
Coq.FSets.FMapWeakList.Raw.Elt.equal_2	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_1	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_2	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_1	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_2	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_NoDup	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: constructor; only 1: contradict H; only 1: clear IHm H0; only 1: induction m; only 1: simpl in *; only 1: inversion H; only 1: simpl in *; only 1: destruct a; only 1: inversion H; only 1: auto; only 1: auto; only 1: auto).	36.414525032	14624
Coq.FSets.FMapWeakList.Raw.Elt3.fold_right_pair_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_l_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_r_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_0	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_2	40
Coq.FSets.FMapWeakList.Make.Elt.MapsTo_1	40
Coq.FSets.FMapWeakList.Make.Elt.mem_1	40
Coq.FSets.FMapWeakList.Make.Elt.mem_2	40
Coq.FSets.FMapWeakList.Make.Elt.empty_1	40	11.4.9.45	synth with cache (only 1: intros H; only 1: simpl in *; only 1: intros NoDup hyp; only 1: inversion hyp).	5.92177987099	12982
Coq.FSets.FMapWeakList.Make.Elt.is_empty_1	40
Coq.FSets.FMapWeakList.Make.Elt.is_empty_2	40
Coq.FSets.FMapWeakList.Make.Elt.add_1	40
Coq.FSets.FMapWeakList.Make.Elt.add_2	40
Coq.FSets.FMapWeakList.Make.Elt.add_3	40
Coq.FSets.FMapWeakList.Make.Elt.remove_1	40
Coq.FSets.FMapWeakList.Make.Elt.remove_2	40
Coq.FSets.FMapWeakList.Make.Elt.remove_3	40
Coq.FSets.FMapWeakList.Make.Elt.find_1	40
Coq.FSets.FMapWeakList.Make.Elt.find_2	40
Coq.FSets.FMapWeakList.Make.Elt.elements_1	40	0.5.0	synth with cache (only 1: intros m; only 1: induction m; only 1: intuition).	0.0282311439514	8
Coq.FSets.FMapWeakList.Make.Elt.elements_2	40	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0140588283539	2
Coq.FSets.FMapWeakList.Make.Elt.elements_3w	40	2.27	synth with cache (only 1: destruct m; only 1: auto).	0.42652797699	1158
Coq.FSets.FMapWeakList.Make.Elt.cardinal_1	40	6.0	synth with cache (only 1: intros m; only 1: constructor 1).	0.0164399147034	8
Coq.FSets.FMapWeakList.Make.Elt.fold_1	40
Coq.FSets.FMapWeakList.Make.Elt.equal_1	40
Coq.FSets.FMapWeakList.Make.Elt.equal_2	40
Coq.FSets.FMapWeakList.Make.map_1	40
Coq.FSets.FMapWeakList.Make.map_2	40
Coq.FSets.FMapWeakList.Make.mapi_1	40
Coq.FSets.FMapWeakList.Make.mapi_2	40
Coq.FSets.FMapWeakList.Make.map2_1	40
Coq.FSets.FMapWeakList.Make.map2_2	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	1.0	synth with cache (only 1: red; only 1: auto).	0.0215048789978	3
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0	synth with cache (only 1: Dec.fsetdec).	0.033438205719	1
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	0.29.5	synth with cache (only 1: intros q r; only 1: red; only 1: firstorder  discriminate).	17.8266189098	12756
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	1.0.2.0.0.0.5	synth with cache (only 1: intros m Hm; only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: Dec.fsetdec; only 1: intro; only 1: inversion 1).	0.731271982193	464
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	8.6.0.5	synth with cache (only 1: intro n; only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: Dec.fsetdec).	1.31198692322	970
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Ens_to_FSet	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_eq	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	0.218706130981	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.empty_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_equal_empty	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_1	40	16.0	synth with cache (only 1: intros; only 1: intuition).	10.6891028881	1561
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_2	40	0	synth with cache (only 1: auto with set).	0.0237629413605	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_1	40	8	synth with cache (only 1: auto with set).	0.0315980911255	12
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_2	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.122218132019	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_1	40	13.1	synth with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	0.845370054245	352
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_2	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	0.122514009476	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_equal_add	40	0	synth with cache (only 1: auto with set).	0.0205850601196	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_3	40	2.0.1.1	synth with cache (only 1: rewrite mem_iff; only 1: intuition; only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.604863882065	43
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_4	40	0.0.0.4.2.1	synth with cache (only 1: rewrite mem_iff; only 1: intros; only 1: rewrite H; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.660434961319	203
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_refl	40	0	synth with cache (only 1: auto with set).	0.020085811615	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_sym	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_trans	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_equal	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.034166097641	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_cardinal	40	0.0.1	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0343079566956	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_refl	40	0.1.0.0	synth with cache (only 1: apply subset_1; only 1: unfold Subset; only 1: intros; only 1: auto).	0.0326220989227	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_antisym	40	3.9.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (diff s s') x), (mem_iff s x), (mem_iff s' x), (diff_iff s s' x); only 1: intuition).	0.735874176025	155
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_trans	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_equal	40	4.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set fset).	0.0365879535675	7
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_3	40	1.0.2	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: intuition).	0.0552570819855	6
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_equal	40	0	synth with cache (only 1: auto with set).	0.0218749046326	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_equal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_remove	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_add	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_cardinal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_1	40	2.0	synth with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: intuition).	0.175112962723	43
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_2	40	0.0.0.0.2	synth with cache (only 1: intros; only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	0.0554721355438	7
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_3	40	3.3.1.1	synth with cache (only 1: generalize (empty_iff y), (mem_iff empty y); only 1: intuition; only 1: apply singleton_1; only 1: intuition).	2.4442949295	518
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_sym	40	1	synth with cache (only 1: auto with set).	0.0197908878326	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0288820266724	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_1	40	0	synth with cache (only 1: auto with set).	0.0222389698029	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_2	40	0	synth with cache (only 1: auto with set).	0.0217390060425	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_assoc	40	0	synth with cache (only 1: auto with set).	0.0206978321075	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_union_singleton	40	1	synth with cache (only 1: auto with set).	0.0209319591522	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_add	40	0	synth with cache (only 1: auto with set).	0.0218780040741	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_1	40	1	synth with cache (only 1: auto with set).	0.0205419063568	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_2	40	0	synth with cache (only 1: auto with set).	0.0195410251617	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_3	40	0.0	synth with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.0942368507385	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_sym	40	0	synth with cache (only 1: auto with set).	0.0207748413086	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0232799053192	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: auto with set).	0.022598028183	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: auto with set).	0.0220851898193	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_assoc	40	0	synth with cache (only 1: auto with set).	0.0200998783112	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_1	40	0	synth with cache (only 1: auto with set).	0.0199410915375	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_2	40	0	synth with cache (only 1: auto with set).	0.0197420120239	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_1	40	4.0.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).	0.205654859543	7
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_1	40	0	synth with cache (only 1: auto with set).	0.0197579860687	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_2	40	0	synth with cache (only 1: auto with set).	0.0195820331573	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_3	40	1.0.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).	0.0507249832153	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset	40	0	synth with cache (only 1: auto with set).	0.0206029415131	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0256209373474	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_inter_singleton	40	0	synth with cache (only 1: auto with set).	0.0218999385834	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_empty	40	0	synth with cache (only 1: auto with set).	0.0206739902496	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_all	40	0	synth with cache (only 1: auto with set).	0.066545009613	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exclusive_set	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_empty	40	0.0	synth with cache (only 1: apply fold_1b; only 1: auto with set).	0.0297050476074	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_equal	40	0.0.0.0.0.2.5	synth with cache (only 1: symmetry; only 1: symmetry; only 1: apply fold_equal; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	7.09052109718	2488
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_add	40	0.1.9.0.0.0.0.1	synth with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto with set; only 1: auto with set).	10.1510939598	5286
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.add_fold	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_1	40	3.2.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	4.41166400909	1665
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_1	40	0	synth with cache (only 1: auto with set fset).	0.0213971138	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_2	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.0715560913086	8
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_1	40	0.0.0.2.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.0628180503845	10
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_cardinal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	3.29	synth with cache (only 1: intros n1 n2 H; only 1: intuition).	1.2441971302	1385
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.Comp'	40	2	synth with cache (only 1: solve_proper).	0.0402090549469	11
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.exists_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_1	40	9.0	synth with cache (only 1: intros; only 1: auto with set).	0.210131883621	79
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_2	40	0	synth with cache (only 1: auto with set).	0.0315539836884	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_2	40	0.0.0.0.0.0.0.3.0.1.2	synth with cache (only 1: red; only 1: unfold Add, MP.Add; only 1: intros; only 1: do 2 (rewrite filter_iff; auto); only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate).	9.59260082245	1570
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.union_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_exists	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.Comp'	40	0.7.6.49	synth with cache (only 1: intros H; only 1: intros n IH; only 1: f_equal; only 1: auto).	3.60907411575	4656
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_plus	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.fold_compat	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_compat	40
Coq.FSets.FSetBridge.DepOfNodep.empty	40
Coq.FSets.FSetBridge.DepOfNodep.is_empty	40
Coq.FSets.FSetBridge.DepOfNodep.mem	40
Coq.FSets.FSetBridge.DepOfNodep.add	40
Coq.FSets.FSetBridge.DepOfNodep.singleton	40
Coq.FSets.FSetBridge.DepOfNodep.remove	40
Coq.FSets.FSetBridge.DepOfNodep.union	40
Coq.FSets.FSetBridge.DepOfNodep.inter	40
Coq.FSets.FSetBridge.DepOfNodep.diff	40
Coq.FSets.FSetBridge.DepOfNodep.equal	40
Coq.FSets.FSetBridge.DepOfNodep.subset	40
Coq.FSets.FSetBridge.DepOfNodep.elements	40
Coq.FSets.FSetBridge.DepOfNodep.fold	40	4.4.5.9	synth with cache (only 1: intro n; only 1: intros; only 1: simpl; only 1: eauto with set).	1.77486300468	2647
Coq.FSets.FSetBridge.DepOfNodep.cardinal	40	5.3.2	synth with cache (only 1: simpl in *; only 1: intros; only 1: eauto with set).	0.0925431251526	144
Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	40
Coq.FSets.FSetBridge.DepOfNodep.filter	40
Coq.FSets.FSetBridge.DepOfNodep.for_all	40
Coq.FSets.FSetBridge.DepOfNodep.exists_	40
Coq.FSets.FSetBridge.DepOfNodep.partition	40
Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40
Coq.FSets.FSetBridge.DepOfNodep.choose	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40
Coq.FSets.FSetBridge.DepOfNodep.choose_equal	40
Coq.FSets.FSetBridge.DepOfNodep.min_elt	40
Coq.FSets.FSetBridge.DepOfNodep.max_elt	40
Coq.FSets.FSetBridge.NodepOfDep.empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	40
Coq.FSets.FSetBridge.NodepOfDep.mem_1	40
Coq.FSets.FSetBridge.NodepOfDep.mem_2	40
Coq.FSets.FSetBridge.NodepOfDep.equal_1	40
Coq.FSets.FSetBridge.NodepOfDep.equal_2	40
Coq.FSets.FSetBridge.NodepOfDep.subset_1	40
Coq.FSets.FSetBridge.NodepOfDep.subset_2	40
Coq.FSets.FSetBridge.NodepOfDep.choose_1	40
Coq.FSets.FSetBridge.NodepOfDep.choose_2	40	0.0.4.0.0.0.0.1	synth with cache (only 1: intro s; only 1: unfold choose; only 1: case (M.choose s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: intros; only 1: auto).	0.256409168243	201
Coq.FSets.FSetBridge.NodepOfDep.choose_3	40
Coq.FSets.FSetBridge.NodepOfDep.elements_1	40
Coq.FSets.FSetBridge.NodepOfDep.elements_2	40
Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	0.0.0.100	synth with cache (only 1: compute; only 1: intros; only 1: case (M.elements s); only 1: firstorder).	7.26223897934	38399
Coq.FSets.FSetBridge.NodepOfDep.elements_3w	40	7.0	synth with cache (only 1: intros; only 1: auto with ordered_type).	0.0734889507294	50
Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	40	0.0.0.0.0.0.1.0	synth with cache (only 1: intro s; only 1: unfold min_elt; only 1: case (M.min_elt s); only 1: simple destruct s0; only 1: intros; only 1: intuition; only 1: discriminate H; only 1: auto).	0.0416419506073	9
Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	40	0.0.0.0.1.2.0	synth with cache (only 1: intro s; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).	0.0796611309052	26
Coq.FSets.FSetBridge.NodepOfDep.add_1	40
Coq.FSets.FSetBridge.NodepOfDep.add_2	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.0215728282928	5
Coq.FSets.FSetBridge.NodepOfDep.add_3	40	0.0.0.0.15.0.11	synth with cache (only 1: unfold not; only 1: intros s x y; only 1: intro H; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	17.1049990654	18572
Coq.FSets.FSetBridge.NodepOfDep.remove_1	40
Coq.FSets.FSetBridge.NodepOfDep.remove_2	40	0.0.1.3.0	synth with cache (only 1: intros s x y; only 1: unfold remove; only 1: firstorder; only 1: case (M.remove x s); only 1: firstorder).	0.408177852631	74
Coq.FSets.FSetBridge.NodepOfDep.remove_3	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_1	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_2	40	0.1.7.0	synth with cache (only 1: unfold singleton; only 1: intros; only 1: case (M.singleton x); only 1: firstorder).	0.245862960815	116
Coq.FSets.FSetBridge.NodepOfDep.union_1	40
Coq.FSets.FSetBridge.NodepOfDep.union_2	40	0.0.0.0.0.1.0	synth with cache (only 1: intros s s' x; only 1: intuition; only 1: unfold union; only 1: case (M.remove x s); only 1: firstorder; only 1: case (M.union s s'); only 1: firstorder).	0.100651979446	38
Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.0167138576508	4
Coq.FSets.FSetBridge.NodepOfDep.inter_1	40
Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.0166220664978	4
Coq.FSets.FSetBridge.NodepOfDep.inter_3	40	0.0.0.0.0.0.3	synth with cache (only 1: intros; only 1: unfold inter; only 1: case (M.remove x s); only 1: firstorder; only 1: case (M.singleton x); only 1: case (M.inter s s'); only 1: firstorder).	0.0834259986877	40
Coq.FSets.FSetBridge.NodepOfDep.diff_1	40
Coq.FSets.FSetBridge.NodepOfDep.diff_2	40	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	0.0185399055481	4
Coq.FSets.FSetBridge.NodepOfDep.diff_3	40	0.0.0.0.0.0.0.1.0.1.0	synth with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.inter s s'); only 1: case (M.mem x s); only 1: case (M.inter s s'); only 1: firstorder; only 1: case (M.diff s s'); only 1: firstorder; only 1: case (M.diff s s'); only 1: case (M.union s s'); only 1: now PeanoNat.Nat.nzsimpl).	2.23776888847	772
Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40
Coq.FSets.FSetBridge.NodepOfDep.fold_1	40
Coq.FSets.FSetBridge.NodepOfDep.f_dec	40	0	synth with cache (only 1: decide equality).	0.0106229782104	1
Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	40	1.6.20.26	synth with cache (only 1: intros a b c0; only 1: intros l H; only 1: inversion 1; only 1: intuition).	34.0142350197	48691
Coq.FSets.FSetBridge.NodepOfDep.filter_1	40
Coq.FSets.FSetBridge.NodepOfDep.filter_2	40	0.0.3.0.0.1.3	synth with cache (only 1: intros a b c0; only 1: unfold compat_bool, compat_P, Proper, respectful, impl; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	3.21947288513	1053
Coq.FSets.FSetBridge.NodepOfDep.filter_3	40	0.0.0.0.0.0	synth with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.174277067184	6
Coq.FSets.FSetBridge.NodepOfDep.for_all_1	40
Coq.FSets.FSetBridge.NodepOfDep.for_all_2	40	0.0.0.0.0.0	synth with cache (only 1: intros s f; only 1: unfold for_all; only 1: case M.for_all; only 1: intuition; only 1: intuition; only 1: firstorder).	0.0330820083618	6
Coq.FSets.FSetBridge.NodepOfDep.exists_1	40
Coq.FSets.FSetBridge.NodepOfDep.exists_2	40
Coq.FSets.FSetBridge.NodepOfDep.partition_1	40
Coq.FSets.FSetBridge.NodepOfDep.partition_2	40
Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40
Coq.FSets.FSetCompat.Backport_Sets.compare	40
Coq.FSets.FSetCompat.Update_WSets.In_compat	40	6	synth with cache (only 1: solve_proper).	0.472920894623	111
Coq.FSets.FSetCompat.Update_WSets.Spec.mem_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.equal_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.subset_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.is_empty_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.add_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.remove_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.singleton_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.elements_spec1	40
Coq.FSets.FSetCompat.Update_WSets.Spec.for_all_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.exists_spec	40
Coq.FSets.FSetCompat.Update_Sets.lt_strorder	40
Coq.FSets.FSetCompat.Update_Sets.lt_compat	40
Coq.FSets.FSetCompat.Update_Sets.compare_spec	40
Coq.FSets.FSetProperties.WProperties_fun.In_dec	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.156488895416	5
Coq.FSets.FSetProperties.WProperties_fun.Add_Equal	40
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_refl	40	4.1.0	synth with cache (only 1: red; only 1: intros; only 1: intuition).	0.0388758182526	24
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_sym	40	0	synth with cache (only 1: fsetdec).	0.162858963013	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_trans	40	0	synth with cache (only 1: fsetdec).	0.0391359329224	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_refl	40	0	synth with cache (only 1: fsetdec).	0.0140399932861	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_trans	40	0	synth with cache (only 1: fsetdec).	0.0277090072632	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_antisym	40	0	synth with cache (only 1: fsetdec).	0.028774023056	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0255999565125	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_empty	40	0	synth with cache (only 1: fsetdec).	0.0166511535645	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_remove_3	40	0	synth with cache (only 1: fsetdec).	0.0511100292206	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_diff	40	0	synth with cache (only 1: fsetdec).	0.0317351818085	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_3	40	0	synth with cache (only 1: fsetdec).	0.0445630550385	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_2	40	0	synth with cache (only 1: fsetdec).	0.024738073349	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.in_subset	40	0	synth with cache (only 1: fsetdec).	0.0241820812225	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.double_inclusion	40	0.0.0.7	synth with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.22891998291	44
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_1	40	0	synth with cache (only 1: fsetdec).	0.0347228050232	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_2	40	4.0.3	synth with cache (only 1: intuition; only 1: intros g_eq; only 1: fsetdec).	0.0581860542297	10
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_equal	40	0	synth with cache (only 1: fsetdec).	0.0572671890259	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_add	40	0	synth with cache (only 1: fsetdec).	0.163444042206	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_equal	40	0	synth with cache (only 1: fsetdec).	0.0630991458893	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Equal_remove	40	0	synth with cache (only 1: fsetdec).	0.102988004684	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_remove	40	0	synth with cache (only 1: fsetdec).	0.187513113022	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_add	40	0	synth with cache (only 1: fsetdec).	0.0822570323944	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.singleton_equal_add	40	0	synth with cache (only 1: fsetdec).	0.050136089325	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_singleton_empty	40	0	synth with cache (only 1: fsetdec).	0.239589214325	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_sym	40	0.0.0.0.2	synth with cache (only 1: split; only 1: do 2 rewrite F.union_iff; only 1: intuition; only 1: do 2 rewrite F.union_iff; only 1: intuition).	0.117655992508	7
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0441269874573	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_1	40	0	synth with cache (only 1: fsetdec).	0.119856119156	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_2	40	0	synth with cache (only 1: fsetdec).	0.0631539821625	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_assoc	40	0	synth with cache (only 1: fsetdec).	0.103301048279	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_union_singleton	40	8.9	synth with cache (only 1: intros H; only 1: fsetdec).	0.191957950592	181
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_add	40	0	synth with cache (only 1: fsetdec).	0.146744966507	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_1	40	0	synth with cache (only 1: fsetdec).	0.240904092789	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_2	40	0	synth with cache (only 1: fsetdec).	0.215664863586	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_1	40	0	synth with cache (only 1: fsetdec).	0.023946762085	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_2	40	0	synth with cache (only 1: fsetdec).	0.0212371349335	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_3	40	0	synth with cache (only 1: fsetdec).	0.0453591346741	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_4	40	0	synth with cache (only 1: fsetdec).	0.0386939048767	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_5	40	0	synth with cache (only 1: fsetdec).	0.0506210327148	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_1	40	0	synth with cache (only 1: fsetdec).	0.0495109558105	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_2	40	0	synth with cache (only 1: fsetdec).	0.0480091571808	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.not_in_union	40	1	synth with cache (only 1: fsetdec).	0.0882389545441	13
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_sym	40	0	synth with cache (only 1: fsetdec).	0.053740978241	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.051707983017	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: fsetdec).	0.0840120315552	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: fsetdec).	0.0644969940186	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_assoc	40	0	synth with cache (only 1: fsetdec).	0.11603808403	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_1	40	0	synth with cache (only 1: fsetdec).	0.134948015213	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_2	40	0	synth with cache (only 1: fsetdec).	0.150133132935	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_1	40	0	synth with cache (only 1: fsetdec).	0.121205091476	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_2	40	0.0.6.0	synth with cache (only 1: split; only 1: fsetdec; only 1: do 2 rewrite F.inter_iff; only 1: fsetdec).	0.141072034836	10
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_1	40	0	synth with cache (only 1: fsetdec).	0.0386161804199	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_2	40	0	synth with cache (only 1: fsetdec).	0.0317521095276	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_1	40	0	synth with cache (only 1: fsetdec).	0.0301549434662	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_2	40	0	synth with cache (only 1: fsetdec).	0.0233180522919	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_3	40	0	synth with cache (only 1: fsetdec).	0.0425038337708	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_1	40	0	synth with cache (only 1: fsetdec).	0.0400841236115	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_2	40	0	synth with cache (only 1: fsetdec).	0.0478157997131	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset	40	0	synth with cache (only 1: fsetdec).	0.0620088577271	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0751810073853	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_diff_singleton	40	0	synth with cache (only 1: fsetdec).	0.0885701179504	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_empty	40	0	synth with cache (only 1: fsetdec).	0.138716936111	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_all	40	0	synth with cache (only 1: fsetdec).	0.0910549163818	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_add	40	0.0.0.0.0.1.2.4	synth with cache (only 1: split; only 1: intro H; only 1: fsetdec; only 1: destruct 1; only 1: apply add_1; only 1: auto; only 1: apply add_2; only 1: auto).	0.575956821442	211
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_remove	40	1.4.1.4	synth with cache (only 1: constructor; only 1: fsetdec; only 1: generalize (F.mem_iff s x); only 1: fsetdec).	0.920461893082	217
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Add	40
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add	40	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.237444162369	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Equal	40	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.22202706337	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add_2	40	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.173388004303	2
Coq.FSets.FSetProperties.WProperties_fun.elements_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_1	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_2	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_3	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_spec_right	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_bis	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_nodep	40	0.2.0.1.3.28	synth with cache (only 1: intros a n Hn; only 1: intros; only 1: apply fold_rec; only 1: auto; only 1: intros; only 1: auto).	2.39605379105	3534
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_weak	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rel	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction_bis	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_identity	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_0	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1	40	11.0.0.2.6	synth with cache (only 1: intros f Hf; only 1: firstorder; only 1: apply fold_rec; only 1: eauto; only 1: fsetdec).	11.3201711178	2002
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_2	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1b	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_commutes	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_init	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_equal	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_empty	40	10.6.1.0.0	synth with cache (only 1: symmetry; only 1: symmetry; only 1: apply fold_1; only 1: auto with *; only 1: auto with *).	18.3004329205	10673
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_add	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.add_fold	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_1	40	0.0.0.0.0.0.2.6	synth with cache (only 1: intros i; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	5.26982092857	3182
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.0179619789124	3
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union_inter	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_diff_inter	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_plus	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_0	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2b	40
Coq.FSets.FSetProperties.WProperties_fun.Equal_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40
Coq.FSets.FSetProperties.WProperties_fun.empty_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.singleton_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal_lt	40
Coq.FSets.FSetProperties.WProperties_fun.union_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_1	40	2.0.0.7.1	synth with cache (only 1: symmetry; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	1.70518493652	761
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_2	40
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_1	40	0.0.0.0.1.0.0.0.2.3	synth with cache (only 1: intros; only 1: symmetry; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply fold_2; only 1: auto with *; only 1: auto with fset; only 1: auto with fset; only 1: auto with set; only 1: auto with set).	1.11791992188	823
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_2	40	0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply fold_equal; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto with set).	0.133598089218	20
Coq.FSets.FSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FSetProperties.OrdProperties.gtb_1	40
Coq.FSets.FSetProperties.OrdProperties.leb_1	40
Coq.FSets.FSetProperties.OrdProperties.gtb_compat	40
Coq.FSets.FSetProperties.OrdProperties.leb_compat	40
Coq.FSets.FSetProperties.OrdProperties.elements_split	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Below	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_max	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_min	40
Coq.FSets.FSetProperties.OrdProperties.fold_3	40
Coq.FSets.FSetProperties.OrdProperties.fold_4	40
Coq.FSets.FSetProperties.OrdProperties.FoldOpt.fold_equal	40
Coq.FSets.FSetProperties.OrdProperties.FoldOpt.add_fold	40	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0163059234619	3
Coq.FSets.FSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0172879695892	3
Coq.FSets.FSetProperties.OrdProperties.choose_equal	40
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_push	40	1.0.0	synth with cache (only 1: unfold decidable; only 1: intros A R1 Sym1 B R2 Sym2 C R3 f Hf; only 1: auto).	0.0392560958862	4
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_pull	40	1	synth with cache (only 1: tauto).	0.827926874161	2
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.eq_refl_iff	40	1.0.6.2	synth with cache (only 1: split; only 1: auto; only 1: intros; only 1: let rec add_permut := let rec add_permut_rec := let rec add_push := Ring_theory.gen_add_push radd Rsth Reqe ARth in fun t => match t with | radd ?x ?y => add_permut_rec y || add_permut_rec x | _ => add_push t; apply (Ring_theory.Radd_ext Reqe); [  | reflexivity ] end in repeat reflexivity || match goal with | |- req ?t _ => add_permut_rec t end in add_permut).	0.0877661705017	75
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_In	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_eq	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_1	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_2	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_1	40	0.0.17	synth with cache (only 1: intros EQ; only 1: intros n'; only 1: fsetdec).	3.92565202713	1563
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_2	40	0.22	synth with cache (only 1: intros n m s1 s2; only 1: fsetdec).	2.98622107506	1299
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	0.4	synth with cache (only 1: intro m; only 1: intuition).	0.0286500453949	13
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_add_In	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_Subset_add_remove	40	5.25	synth with cache (only 1: intros n m H1 H2; only 1: fsetdec).	3.55764698982	2840
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	0	synth with cache (only 1: fsetdec).	0.0927608013153	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	0	synth with cache (only 1: fsetdec).	0.131185054779	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_conj	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	1.1.29	synth with cache (only 1: intros a Ha; only 1: intro H; only 1: fsetdec).	8.07751297951	4101
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_set_ops_1	40	0.13	synth with cache (only 1: intros H1 H2 H3; only 1: fsetdec).	1.10636210442	473
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.eq_chain_test	40	0	synth with cache (only 1: fsetdec).	0.271518945694	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	1.4.9	synth with cache (only 1: intros a b H; only 1: unfold Subset; only 1: intuition).	0.659707784653	362
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_1	40	7.1	synth with cache (only 1: intros; only 1: fsetdec).	0.109016895294	12
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_2	40	8.2	synth with cache (only 1: intros s s' H s'' s''' H0 a; only 1: fsetdec).	1.21379780769	218
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_baydemir	40	2.7	synth with cache (only 1: intros a b q Ha Hb H; only 1: fsetdec).	0.377643823624	81
Coq.FSets.FMapList.Raw.Elt.empty_1	40	3.5.1	synth with cache (only 1: red; only 1: intro n; only 1: inversion 1).	0.228986978531	137
Coq.FSets.FMapList.Raw.Elt.empty_sorted	40	4	synth with cache (only 1: constructor).	0.0141799449921	5
Coq.FSets.FMapList.Raw.Elt.is_empty_1	40
Coq.FSets.FMapList.Raw.Elt.is_empty_2	40
Coq.FSets.FMapList.Raw.Elt.mem_1	40
Coq.FSets.FMapList.Raw.Elt.mem_2	40
Coq.FSets.FMapList.Raw.Elt.find_2	40
Coq.FSets.FMapList.Raw.Elt.find_1	40
Coq.FSets.FMapList.Raw.Elt.add_1	40
Coq.FSets.FMapList.Raw.Elt.add_2	40
Coq.FSets.FMapList.Raw.Elt.add_3	40
Coq.FSets.FMapList.Raw.Elt.add_Inf	40
Coq.FSets.FMapList.Raw.Elt.add_sorted	40
Coq.FSets.FMapList.Raw.Elt.remove_1	40
Coq.FSets.FMapList.Raw.Elt.remove_2	40
Coq.FSets.FMapList.Raw.Elt.remove_3	40
Coq.FSets.FMapList.Raw.Elt.remove_Inf	40
Coq.FSets.FMapList.Raw.Elt.remove_sorted	40
Coq.FSets.FMapList.Raw.Elt.elements_1	40	4	synth with cache (only 1: auto with ordered_type).	1.0660469532	16
Coq.FSets.FMapList.Raw.Elt.elements_2	40	0	synth with cache (only 1: auto).	0.0164902210236	1
Coq.FSets.FMapList.Raw.Elt.elements_3	40	5.1.0	synth with cache (only 1: induction m; only 1: intuition; only 1: auto).	0.0340270996094	9
Coq.FSets.FMapList.Raw.Elt.elements_3w	40
Coq.FSets.FMapList.Raw.Elt.fold_1	40
Coq.FSets.FMapList.Raw.Elt.equal_1	40
Coq.FSets.FMapList.Raw.Elt.equal_2	40
Coq.FSets.FMapList.Raw.Elt.equal_cons	40
Coq.FSets.FMapList.Raw.Elt2.map_1	40
Coq.FSets.FMapList.Raw.Elt2.map_2	40
Coq.FSets.FMapList.Raw.Elt2.map_lelistA	40	0.0.1.1.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: intuition; only 1: inversion_clear H; only 1: simpl; only 1: intuition).	0.267836093903	57
Coq.FSets.FMapList.Raw.Elt2.map_sorted	40
Coq.FSets.FMapList.Raw.Elt2.mapi_1	40
Coq.FSets.FMapList.Raw.Elt2.mapi_2	40
Coq.FSets.FMapList.Raw.Elt2.mapi_lelistA	40	6.1.0.0.0.1.2.1	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear H; only 1: intuition).	6.66453695297	2665
Coq.FSets.FMapList.Raw.Elt2.mapi_sorted	40	2.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: auto).	0.0817279815674	13
Coq.FSets.FMapList.Raw.Elt3.map2_alt_equiv	40
Coq.FSets.FMapList.Raw.Elt3.combine_lelistA	40
Coq.FSets.FMapList.Raw.Elt3.combine_sorted	40
Coq.FSets.FMapList.Raw.Elt3.map2_sorted	40
Coq.FSets.FMapList.Raw.Elt3.combine_1	40
Coq.FSets.FMapList.Raw.Elt3.map2_0	40
Coq.FSets.FMapList.Raw.Elt3.map2_1	40
Coq.FSets.FMapList.Raw.Elt3.map2_2	40
Coq.FSets.FMapList.Make.Elt.MapsTo_1	40
Coq.FSets.FMapList.Make.Elt.mem_1	40
Coq.FSets.FMapList.Make.Elt.mem_2	40
Coq.FSets.FMapList.Make.Elt.empty_1	40	3.0.23	synth with cache (only 1: intros H; only 1: simpl; only 1: inversion_clear 1).	0.257678031921	423
Coq.FSets.FMapList.Make.Elt.is_empty_1	40
Coq.FSets.FMapList.Make.Elt.is_empty_2	40
Coq.FSets.FMapList.Make.Elt.add_1	40
Coq.FSets.FMapList.Make.Elt.add_2	40
Coq.FSets.FMapList.Make.Elt.add_3	40
Coq.FSets.FMapList.Make.Elt.remove_1	40
Coq.FSets.FMapList.Make.Elt.remove_2	40
Coq.FSets.FMapList.Make.Elt.remove_3	40
Coq.FSets.FMapList.Make.Elt.find_1	40
Coq.FSets.FMapList.Make.Elt.find_2	40
Coq.FSets.FMapList.Make.Elt.elements_1	40	0	synth with cache (only 1: auto).	0.0147409439087	1
Coq.FSets.FMapList.Make.Elt.elements_2	40	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0204060077667	2
Coq.FSets.FMapList.Make.Elt.elements_3	40	0.4.7	synth with cache (only 1: induction m; only 1: simpl; only 1: auto).	0.151068925858	175
Coq.FSets.FMapList.Make.Elt.elements_3w	40
Coq.FSets.FMapList.Make.Elt.cardinal_1	40	6.0	synth with cache (only 1: intros m; only 1: auto).	0.0227868556976	8
Coq.FSets.FMapList.Make.Elt.fold_1	40
Coq.FSets.FMapList.Make.Elt.equal_1	40
Coq.FSets.FMapList.Make.Elt.equal_2	40
Coq.FSets.FMapList.Make.map_1	40
Coq.FSets.FMapList.Make.map_2	40
Coq.FSets.FMapList.Make.mapi_1	40
Coq.FSets.FMapList.Make.mapi_2	40
Coq.FSets.FMapList.Make.map2_1	40
Coq.FSets.FMapList.Make.map2_2	40
Coq.FSets.FMapList.Make_ord.eq_equal	40
Coq.FSets.FMapList.Make_ord.eq_1	40
Coq.FSets.FMapList.Make_ord.eq_2	40
Coq.FSets.FMapList.Make_ord.eq_refl	40
Coq.FSets.FMapList.Make_ord.eq_sym	40
Coq.FSets.FMapList.Make_ord.eq_trans	40
Coq.FSets.FMapList.Make_ord.lt_trans	40
Coq.FSets.FMapList.Make_ord.lt_not_eq	40
Coq.FSets.FMapList.Make_ord.compare	40
Coq.Wellfounded.Inclusion.WfInclusion.Acc_incl	40	2.26.30.8.0	synth with cache (only 1: intro x; only 1: intro z; only 1: apply Acc_rect; only 1: split; only 1: auto).	18.6049420834	80563
Coq.Wellfounded.Inclusion.WfInclusion.wf_incl	40	0.8	synth with cache (only 1: split; only 1: auto with sets).	0.0218720436096	16
Coq.Wellfounded.Well_Ordering.WellOrdering.wf_WO	40
Coq.Wellfounded.Well_Ordering.Characterisation_wf_relations.wof	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.left_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.right_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_tail	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_aux	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_Desc_concat	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_end	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.ltl_unit	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.acc_app	40	0.1.5	synth with cache (only 1: inversion 1; only 1: intros; only 1: auto with sets).	0.0923180580139	56
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.wf_lex_exp	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_lemma	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_image	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_image	40	0.0.1.2.3.8	synth with cache (only 1: intros y0 H1; only 1: apply Acc_intro; only 1: intros x H; only 1: apply (Acc_lemma (f x)); only 1: trivial; only 1: trivial).	0.721137046814	746
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_rel	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_rel	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_A_sum	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_B_sum	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.wf_disjoint_sum	40
Coq.Wellfounded.Union.WfUnion.strip_commut	40
Coq.Wellfounded.Union.WfUnion.Acc_union	40
Coq.Wellfounded.Union.WfUnion.wf_union	40
Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.acc_A_B_lexprod	40
Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.wf_lexprod	40
Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.Acc_symprod	40
Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.wf_symprod	40
Coq.Wellfounded.Lexicographic_Product.Swap.swap_Acc	40
Coq.Wellfounded.Lexicographic_Product.Swap.Acc_swapprod	40
Coq.Wellfounded.Lexicographic_Product.Swap.wf_swapprod	40
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.incl_clos_trans	40	0.15	synth with cache (only 1: left; only 1: assumption).	0.0735540390015	132
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_inv_trans	40	0.0.4.15	synth with cache (only 1: induction 1; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).	0.487109184265	532
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.wf_clos_trans	40	0.1.1	synth with cache (only 1: red; only 1: intros y H2; only 1: auto with sets).	0.0190958976746	5
Coq.Numbers.DecimalFacts.uint_dec	40
Coq.Numbers.DecimalFacts.rev_revapp	40
Coq.Numbers.DecimalFacts.rev_rev	40
Coq.Numbers.DecimalFacts.nzhead_revapp_0	40
Coq.Numbers.DecimalFacts.nzhead_revapp	40
Coq.Numbers.DecimalFacts.nzhead_rev	40
Coq.Numbers.DecimalFacts.rev_nztail_rev	40
Coq.Numbers.DecimalFacts.revapp_nil_inv	40
Coq.Numbers.DecimalFacts.rev_nil_inv	40	7.3.1.0	synth with cache (only 1: intros; only 1: rewrite <- (rev_rev d); only 1: rewrite H; only 1: now rewrite ?IHd).	4.29141497612	3113
Coq.Numbers.DecimalFacts.rev_lnorm_rev	40
Coq.Numbers.DecimalFacts.nzhead_nonzero	40
Coq.Numbers.DecimalFacts.unorm_0	40
Coq.Numbers.DecimalFacts.unorm_nonnil	40	0.0.0.0.0.0.0.0.0.0.1.2	synth with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	4.50911188126	1931
Coq.Numbers.DecimalFacts.nzhead_invol	40	0.0.0.0.0.2.0.0.0.0.0.8	synth with cache (only 1: induction d; only 1: trivial; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: now rewrite ?IHd; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	10.6593768597	7306
Coq.Numbers.DecimalFacts.unorm_invol	40	0	synth with cache (only 1: now induction d).	0.0177891254425	1
Coq.Numbers.DecimalFacts.norm_invol	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40	5	synth with cache (only 1: now induction d).	0.0305938720703	6
Coq.Numbers.DecimalPos.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_simpl	40	0	synth with cache (only 1: now destruct n).	0.0191719532013	1
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_eqn	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double_gen	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_succ_double	40	0	synth with cache (only 1: apply of_lu_double_gen).	0.0184090137482	1
Coq.Numbers.DecimalPos.Unsigned.of_to	40
Coq.Numbers.DecimalPos.Unsigned.succ_double_alt	40
Coq.Numbers.DecimalPos.Unsigned.double_succ	40
Coq.Numbers.DecimalPos.Unsigned.to_lu_succ	40
Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	5.1	synth with cache (only 1: simpl; only 1: trivial).	0.0239639282227	8
Coq.Numbers.DecimalPos.Unsigned.nat_iter_0	40	0.2	synth with cache (only 1: simpl; only 1: trivial).	0.0235190391541	4
Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_0	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu	40
Coq.Numbers.DecimalPos.Unsigned.to_of	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonnil	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_norm	40
Coq.Numbers.DecimalPos.Unsigned.of_inj	40
Coq.Numbers.DecimalPos.Unsigned.of_iff	40
Coq.Numbers.DecimalPos.Signed.of_to	40
Coq.Numbers.DecimalPos.Signed.to_of	40
Coq.Numbers.DecimalPos.Signed.to_int_inj	40
Coq.Numbers.DecimalPos.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalPos.Signed.of_int_norm	40
Coq.Numbers.DecimalPos.Signed.of_inj_pos	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_succ	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: revert n; only 1: intros; only 1: revert n; only 1: intros; only 1: revert n; only 1: intros; only 1: revert n; only 1: intros; only 1: now simpl).	0.0631949901581	11
Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_eqn	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_succ	40
Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_to	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_0	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40
Coq.Numbers.DecimalNat.Unsigned.to_of	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_norm	40	1.0.0.0.0.0.0.0.2.0.1.0.3.0.4.0	synth with cache (only 1: unfold Nat.of_uint; only 1: induction d; only 1: now Nat.nzsimpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: Morphisms.f_equiv; only 1: now destruct nztail; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	37.9244170189	16130
Coq.Numbers.DecimalNat.Unsigned.of_inj	40
Coq.Numbers.DecimalNat.Unsigned.of_iff	40
Coq.Numbers.DecimalNat.Signed.of_to	40
Coq.Numbers.DecimalNat.Signed.to_of	40
Coq.Numbers.DecimalNat.Signed.to_int_inj	40
Coq.Numbers.DecimalNat.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalNat.Signed.of_int_norm	40
Coq.Numbers.DecimalNat.Signed.of_inj_pos	40
Coq.Numbers.DecimalN.Unsigned.of_to	40
Coq.Numbers.DecimalN.Unsigned.to_of	40	0.1.8.1	synth with cache (only 1: unfold N.to_uint, Pos.to_uint; only 1: rewrite <- Unsigned.to_of; only 1: unfold N.to_uint, Pos.to_uint; only 1: trivial).	0.922147989273	202
Coq.Numbers.DecimalN.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	0	synth with cache (only 1: now induction d).	0.0780029296875	1
Coq.Numbers.DecimalN.Unsigned.of_inj	40	7.1.0	synth with cache (only 1: intros; only 1: apply Unsigned.of_inj; only 1: now simpl).	0.233531951904	97
Coq.Numbers.DecimalN.Unsigned.of_iff	40	0.0.1.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- !to_of; only 1: now f_equal; only 1: intros E; only 1: rewrite <- DecimalPos.Unsigned.of_uint_norm, E; only 1: apply DecimalPos.Unsigned.of_uint_norm).	0.0743598937988	13
Coq.Numbers.DecimalN.Signed.of_to	40
Coq.Numbers.DecimalN.Signed.to_of	40
Coq.Numbers.DecimalN.Signed.to_int_inj	40
Coq.Numbers.DecimalN.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalN.Signed.of_int_norm	40
Coq.Numbers.DecimalN.Signed.of_inj_pos	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_add_opp	40	0.0.1.0	synth with cache (only 1: intros m IH; only 1: revert m; only 1: intro n; only 1: reflexivity).	0.0303919315338	5
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pair_wd	40	1.1.9.11	synth with cache (only 1: intros Eqf Lef x y; only 1: compute; only 1: intros n m; only 1: now f_equiv).	29.1329989433	4733
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40	0.15.6.7.3	synth with cache (only 1: repeat red; only 1: symmetry; only 1: simpl; only 1: nzsimpl; only 1: now f_equiv).	13.392373085	7065
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_wd	40	0.4.1.0.9.1.4.0	synth with cache (only 1: unfold Z.succ, Z.eq; only 1: repeat red; only 1: intro n; only 1: intro p; only 1: intros; only 1: simpl; only 1: nzsimpl; only 1: now rewrite H).	17.8063209057	5376
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_comm	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.Induction.bi_induction	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_succ	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	0.0.0.0	synth with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.214584112167	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.one_succ	40	0.2.0.0.2.72	synth with cache (only 1: generalize (PeanoNat.Nat.lt_succ_diag_r 0); only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro H; only 1: simpl; only 1: nzsimpl; only 1: reflexivity).	3.67764306068	3499
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	0.128	synth with cache (only 1: compute; only 1: now nzsimpl').	4.06353402138	8470
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	0.9	synth with cache (only 1: red; only 1: now nzsimpl).	0.143146038055	21
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_succ	40	0.0.0	synth with cache (only 1: unfold Z.eq; only 1: simpl; only 1: reflexivity).	0.0303399562836	3
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_0_l	40	0.1.0.2	synth with cache (only 1: intro H; only 1: unfold Z.eq, Z.add; only 1: simpl; only 1: now nzsimpl).	0.254260063171	24
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_succ_l	40	0.0.0.0.22	synth with cache (only 1: intros a n; only 1: unfold Z.succ, Z.pred, Z.eq; only 1: simpl; only 1: nzsimpl; only 1: now symmetry).	5.00459599495	3331
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_0_r	40	0.0.0.0	synth with cache (only 1: intro n; only 1: unfold Z.add, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.218884944916	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_succ_r	40	2.0.1.0	synth with cache (only 1: unfold Z.succ, Z.pred, Z.eq; only 1: intros n IH; only 1: simpl in *; only 1: now nzsimpl).	0.509421825409	11
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_0_l	40	0.0.4.0	synth with cache (only 1: unfold Z.mul, Z.eq; only 1: intro H; only 1: simpl; only 1: now nzsimpl).	0.219781160355	8
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_eq_cases	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_irrefl	40	5.8.6.3.7	synth with cache (only 1: intros LE EQ; only 1: revert EQ; only 1: intro H; only 1: apply BinInt.Z.lt_nge in H; only 1: intuition).	4.16339492798	5370
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_succ_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_nge	40	6.0.3	synth with cache (only 1: intros n m; only 1: unfold Z.lt, Z.le, Z.eq; only 1: intuition order).	1.20183801651	72
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_wd	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).	0.0335149765015	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).	0.033303976059	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).	0.032830953598	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).	0.0322799682617	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	40	1.1.2.5.7.5.23.5	synth with cache (only 1: rewrite one_succ; only 1: rewrite <- (add_0_l 0); only 1: rewrite <- (add_0_l 0); only 1: rewrite <- (add_0_l 0); only 1: rewrite opp_succ; only 1: apply lt_pred_le; only 1: rewrite <- (add_0_l 0); only 1: now nzsimpl).	9.92754292488	6827
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40	0.17.10	synth with cache (only 1: intros p n m; only 1: rewrite add_comm; only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).	9.88175821304	6206
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	40	0.5.13.0	synth with cache (only 1: intros n m p; only 1: revert n m; only 1: symmetry; only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).	12.6112310886	4939
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.PosNeg.zero_pos_neg	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	40	0.7.0.0.0	synth with cache (only 1: intros; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite <- even_spec, even_succ, odd_spec).	2.13894104958	566
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	40	0.0.2.1.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	0.0562169551849	16
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	40	0.12.0	synth with cache (only 1: intros n m; only 1: apply opp_inj_wd; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	0.528691053391	279
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).	0.033783197403	3
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	40	0.0.10.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: apply mul_le_mono_nonneg_r; only 1: order; only 1: order).	30.7443659306	4436
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40	0.0.0.0.0.0.6.1.0	synth with cache (only 1: intros n m H1 H2; only 1: apply (mul_lt_mono_neg_r m) in H1; only 1: apply lt_le_pred in H2; only 1: rewrite mul_1_l in H1; only 1: setoid_replace (P 0) with (-1) in H2; only 1: now apply lt_le_trans with m; only 1: apply eq_opp_r; only 1: now rewrite one_succ, opp_pred, opp_0; only 1: assumption).	18.8279831409	5626
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_m1_mul_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.eq_mul_1	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	0.0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: now try order'; only 1: simpl; only 1: now try order').	4.53442692757	1345
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	40	2.2.0	synth with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.0292809009552	7
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	40	0.0.0.0.0.0.0.20	synth with cache (only 1: destr_bool; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: apply Private_NZDiv.div_0_l; only 1: order').	2.15248584747	2278
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	40	0.0.0.0.8	synth with cache (only 1: intros; only 1: apply b2z_inj; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; split; simpl; order')).	0.313518047333	129
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	3.0.5.1	synth with cache (only 1: intro Hn; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: reflexivity).	1.53051304817	576
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	40	11.0.2.2.12	synth with cache (only 1: compute; only 1: intros a n m H; only 1: revert a m; only 1: intros m Hm; only 1: now f_equiv).	14.3187890053	7974
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	40	0.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0685081481934	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	40	0.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0694921016693	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	40	0.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0793931484222	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	40	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0312261581421	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	40	9.6.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now nzsimpl).	1.55586004257	856
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.031583070755	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	40	4.10.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.726310968399	613
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	40	1.3.0.7	synth with cache (only 1: intros Hab; only 1: bitwise; only 1: apply andb_false_iff; only 1: auto).	0.968349933624	629
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0308921337128	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	40	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0326600074768	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	40	0.0.0.0.0.17.1	synth with cache (only 1: intros a a' Ha n n' Hn; only 1: unfold setbit; only 1: destruct (le_ge_cases n 0) as [H| H]; only 1: pose proof H as H'; only 1: now rewrite <- 2!shiftr_opp_r, Ha, Hn; only 1: pose proof H as H'; only 1: now rewrite <- 2!shiftr_opp_r, Ha, Hn).	15.2857189178	5619
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	40	0.14	synth with cache (only 1: unfold clearbit; only 1: solve_proper).	4.32200503349	1147
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	40	36.2.14.0	synth with cache (only 1: unfold lnot; only 1: rewrite opp_involutive; only 1: rewrite <- (pow_0_r 2); only 1: now nzsimpl').	26.5222039223	21197
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	40	14.0.2	synth with cache (only 1: intro n; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	1.37016606331	761
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).	0.046952009201	11
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	40	1.1.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).	0.0538439750671	11
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	40	1.0.0	synth with cache (only 1: intros a n; only 1: rewrite <- shiftl_opp_r; only 1: now rewrite 2!lt_nge, shiftl_nonneg).	0.0366179943085	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	40	0.0.1	synth with cache (only 1: intros; only 1: rewrite div2_spec; only 1: now rewrite 2!lt_nge, shiftr_nonneg).	0.102090120316	16
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	40	0.0.1.2.1.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros; only 1: apply succ_wd in H; only 1: now rewrite 2!succ_pred in H; only 1: intros; only 1: now f_equiv).	0.422356843948	109
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_abs	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_nonneg	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_abs_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	40	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: rewrite and_comm; only 1: rewrite and_comm; only 1: apply gcd_divide_iff).	0.0591611862183	12
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_l	40	1.0.0.4.2.0.1.0.1.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	26.9745390415	15315
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_r	40	3.0.0.0.6.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite gcd_comm, gcd_opp_l, gcd_comm).	2.39679503441	1154
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40	0.0.1.0.0.1.6.1.0	synth with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: destruct_max n; only 1: trivial using divide_refl; only 1: reflexivity; only 1: trivial using divide_refl).	9.89798903465	6521
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.Bezout_wd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.bezout_1_gcd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_bezout	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r_nonneg	40	0.3.0.0	synth with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm; only 1: trivial).	0.183111906052	23
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gauss	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	40	0.1.1.10.0	synth with cache (only 1: intros a b Hb; only 1: rewrite rem_eq by order; only 1: rewrite <- add_opp_r, mul_comm, <- mul_opp_l; only 1: rewrite (gcd_comm _ b); only 1: apply gcd_add_mult_diag_r).	2.24363589287	876
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	40	4.0.1.0.25.0	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: generalize (partial_order_equivalence y y'); only 1: compute; only 1: setoid_rewrite Hx; only 1: setoid_rewrite Hy; only 1: intuition).	30.7528879642	9167
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	40	23.0.0	synth with cache (only 1: unfold lcm; only 1: intros a b; only 1: apply abs_nonneg).	17.6342279911	7743
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40	0.0.0.8.23.1	synth with cache (only 1: intro n; only 1: unfold lcm; only 1: nzsimpl; only 1: rewrite abs_eq; only 1: auto using eq_refl, le_refl; only 1: order || apply lt_0_1).	4.22920799255	5623
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	40	0.1.0.1.1.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: order || apply lt_0_1; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	0.044844865799	10
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	40	0.1.0.2.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: exists n; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	0.0519680976868	10
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	40	0.0.1.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: apply divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl).	0.039265871048	7
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	40	0.1.1.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial using divide_refl).	0.0391612052917	8
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	0.0432348251343	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	40	0.0.0.3.2.0.0.0.1.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	9.6757569313	4616
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	1.0.0.0.6.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).	1.20006299019	391
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40	0.2.0.10.1.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: trivial using divide_1_l, le_0_1; only 1: now apply divide_abs_l; only 1: intros p Hn Hm; only 1: now apply divide_abs_l).	21.8945250511	12380
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	40	0.6.0.1.4.1.0	synth with cache (only 1: intros; only 1: rewrite <- lcm_abs_r; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: reflexivity; only 1: trivial using divide_refl).	20.4054980278	10265
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	40	0.9.0.0	synth with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), lcm_mul_mono_l, mul_comm; only 1: trivial).	3.19242882729	613
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	40	0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono; only 1: rewrite 2!min_r; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono).	1.24810504913	336
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	1.0.0.0.1.0.0.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).	4.35875701904	1625
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	40	0.0.0.3.0.0.0.4.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l).	9.25821709633	3223
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	40	1.0.0.0.1.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	3.83275508881	1219
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	40	1.0.1.5.1.0.1.6.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r).	30.4413380623	15184
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	40	0.0.0.7.0.0.0.8.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r).	20.2260260582	10047
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	40	1.2.0.0.0.1.2.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!max_l; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).	25.7801251411	6326
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	40	1.0.0.3.1.0.0.4.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_l).	27.1128969193	6951
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	40	1.2.0.0.0.1.2.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).	36.4914798737	12806
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40	0.2.0.0.0.0.2.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l by trivial; only 1: rewrite max_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite min_r by trivial; only 1: rewrite max_r; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).	8.80467200279	3349
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40	0.2.0.0.0.0.2.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: rewrite min_r; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite max_l by trivial; only 1: rewrite min_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).	6.39477014542	2528
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40	1.7.3.11.1.2.5.1	synth with cache (only 1: intro n; only 1: split; only 1: intro H; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: intuition order; only 1: now left; only 1: now right; only 1: intuition order).	25.1056280136	14577
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	40	0.0.0.0.1.43	synth with cache (only 1: nzinduct n; only 1: left; only 1: order; only 1: intro n; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).	29.3301839828	34469
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40	1.0.10.1.33.0	synth with cache (only 1: intro; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: intuition order; only 1: right; only 1: order; only 1: intuition order).	31.5727438927	32351
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	40	0.0.0	synth with cache (only 1: intro; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0424299240112	3
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	40	2.3.0	synth with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	0.0445940494537	8
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	40	0.6.0.0	synth with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0409798622131	10
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	40	1.0.6.1.2	synth with cache (only 1: intros n m; only 1: symmetry; only 1: rewrite <- (succ_pred m)  at 2; only 1: symmetry; only 1: apply lt_succ_r).	7.84622001648	3275
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	40	0.0.6.1	synth with cache (only 1: intro; only 1: rewrite nle_gt; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	0.47278213501	202
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40	1.10.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite <- le_succ_l; only 1: now rewrite succ_pred).	4.22589993477	1651
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	40	0.0.6.0	synth with cache (only 1: intros; only 1: apply lt_le_incl; only 1: apply lt_pred_le; only 1: order).	0.0993509292603	46
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	0.0.0.8.3	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m)  at 2; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).	3.10631299019	2042
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	40	0.4.0.3.0.4	synth with cache (only 1: symmetry; only 1: rewrite <- le_succ_l; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: rewrite lt_succ_r; only 1: now rewrite succ_pred).	10.2811479568	4432
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	40	0.18.11.3	synth with cache (only 1: symmetry; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite <- (succ_pred m)  at 2; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).	38.2473900318	20851
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	40	3.0.0	synth with cache (only 1: intros; only 1: rewrite lt_le_pred; only 1: apply le_succ_l).	0.0466551780701	13
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	0.0.0.3.1.0	synth with cache (only 1: intros n m; only 1: rewrite <- lt_pred_le; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: rewrite pred_succ; only 1: apply lt_succ_r).	0.100493192673	15
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	40	1.0.0.5.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite <- le_succ_l; only 1: symmetry; only 1: apply lt_succ_r).	0.592236042023	158
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	40	0.6.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).	0.190541982651	24
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	40	3.4.0	synth with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply neq_sym, neq_succ_diag_l).	0.0398058891296	10
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	0.0.0.2.0.0.0.0.0	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: destruct (compare_spec 0 n); only 1: order'; only 1: order'; only 1: order').	0.292016029358	108
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	40	0.0.0.0.0.0	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.0414659976959	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.0474669933319	5
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	40	0.0.0.8.0.3.0.13.3.0.0	synth with cache (only 1: intro n; only 1: destruct_max n; only 1: rewrite abs_neq; only 1: apply eq_opp_r; only 1: auto with relations; only 1: rewrite opp_nonpos_nonneg; only 1: auto; only 1: rewrite abs_eq; only 1: auto with relations; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	24.2077889442	24469
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	1.0.0.3.0.6.1.0	synth with cache (only 1: rewrite abs_eq; only 1: now nzsimpl; only 1: assert (AUX : forall a b, 0 <= a <= b -> b * a + a * b <= a * a + b * b); only 1: intros a b (Ha, H); only 1: apply crossmul_le_addsquare; only 1: order; only 1: order; only 1: order).	3.10469102859	1106
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	13.8.0.0	synth with cache (only 1: intro n; only 1: destruct_max n; only 1: now left; only 1: auto with relations).	3.65896320343	2456
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	40	0.1.0.0.0.0.4.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: rewrite abs_eq; only 1: reflexivity; only 1: auto; only 1: rewrite (abs_eq (- n)); only 1: reflexivity; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	1.05746817589	487
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	40	0.0.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: auto).	0.0389428138733	4
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40	6.2.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	0.838623046875	248
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	0.0.0	synth with cache (only 1: rewrite sgn_null; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).	0.0224339962006	3
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_sgn x; only 1: apply sgn_pos; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).	0.060742855072	8
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	0.0.9.0	synth with cache (only 1: intros; only 1: apply NZQuot.div_pos; only 1: auto; only 1: trivial).	2.90813493729	696
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40	0.0.0.16.0.0.3	synth with cache (only 1: intros a b n Ha Hb Hn; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply NZQuot.mul_div_le; only 1: auto; only 1: auto; only 1: auto).	21.1510679722	17976
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	40	1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (quot_mul q b) by order; only 1: apply quot_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0495479106903	6
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40	0.0.0.0.5.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: rewrite !rem_eq by trivial; only 1: rewrite quot_mul_cancel_r by order; only 1: now rewrite mul_sub_distr_r, <- !mul_assoc, (mul_comm (a ÷ b) c)).	1.79983997345	403
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	40	0.2.0.0.0.1.0.2.0.0.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).	2.843542099	1280
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).	0.0339539051056	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40	0.1.0.0.1.0.1.0.1.0.2.0.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: destruct Hr; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: right; only 1: apply mod_neg_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	19.4847061634	7695
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	0.4.1.0.2.1.0.0.2.0	synth with cache (only 1: intros; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).	4.97549700737	2883
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_unique with q; only 1: auto; only 1: auto).	0.0351719856262	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	40	0.0.3.3.0.1.0.7.4	synth with cache (only 1: intros; only 1: destruct (abs_spec b) as [(LE, EQ)| (LE, EQ)]; only 1: left; only 1: destruct (mod_pos_bound a b); only 1: order; only 1: auto; only 1: right; only 1: apply mod_neg_bound; only 1: order).	37.8568880558	32848
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	40	0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: auto; only 1: intuition; only 1: now nzsimpl).	0.0568339824677	7
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto; only 1: intuition; only 1: now nzsimpl).	0.170151948929	31
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	40	1.0.0.0.3.8.1.1	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with 0; only 1: left; only 1: split; only 1: order; only 1: apply lt_0_1; only 1: now nzsimpl).	18.5661509037	9790
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	40	1.0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: split; only 1: order; only 1: apply lt_0_1; only 1: now nzsimpl).	0.141498088837	52
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0290861129761	5
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0311031341553	5
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	40	0.0.0.1.0.0.0.0.0.0.3.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: split; only 1: order; only 1: trivial; only 1: right; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: apply mul_comm).	30.9799408913	12245
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	40	0.0.0.2.0.0.0.0.0.12	synth with cache (only 1: intros n m; only 1: apply Private_NZDiv.div_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: now try split; only 1: right; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: now try split).	11.0355911255	5855
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	40	0.0.1.0	synth with cache (only 1: intros; only 1: apply mod_le; only 1: order; only 1: trivial).	0.484862089157	116
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	40	2.0.3.0	synth with cache (only 1: intros; only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: auto).	0.862725973129	103
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	40	0.3.0.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.552758932114	100
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	40	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_pos_bound a b); only 1: order; only 1: trivial).	0.0668830871582	13
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	40	1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: now destruct (mod_pos_bound a b)).	0.0903451442719	11
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	40	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0380067825317	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	0.036171913147	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	0.0379569530487	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0454890727997	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	40	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).	26.0215649605	8569
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	40	0.0.5.1.0.1	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_bound_or; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	3.38005495071	1470
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40	0.0.3.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: tauto; only 1: tauto).	0.945830821991	126
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	40	0.1.0.0.0.1.1.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: tauto; only 1: tauto; only 1: tauto; only 1: rewrite <- neq_mul_0; only 1: intuition).	5.67527914047	1372
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	40	1.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	0.512106895447	54
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40	1.2.3.0	synth with cache (only 1: intros a b n Hn; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).	0.781965017319	108
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	40	1.1.2.0.0.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: rewrite !(mul_comm a); only 1: now rewrite mul_comm; only 1: order; only 1: order).	0.071702003479	14
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	40	0.1.0.1.2	synth with cache (only 1: intros a b c; only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).	0.892321825027	168
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	1.1.5.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	1.94195508957	572
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	40	1.0.2.0.0.0.1	synth with cache (only 1: intros a b c Hb Hc; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: now apply div_mod).	0.761428117752	131
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: auto).	0.0653100013733	8
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40	1.8.5.0	synth with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now nzsimpl).	15.2909150124	4592
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.1.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).	0.04132604599	5
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	40	0.1.1.1.1.1	synth with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite sub_succ_l; only 1: now nzsimpl).	0.469696044922	114
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	40	0.0.0.0.1.4.1	synth with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	3.67090702057	871
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	40	0.0.0.0.0.1.9.0	synth with cache (only 1: intros n m p; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	12.1549830437	3408
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	40	0.0.1.3.2.0.0	synth with cache (only 1: intros n1 n2; only 1: split; only 1: intros; only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H; only 1: intros; only 1: now f_equiv).	0.873224020004	334
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	40	0.0	synth with cache (only 1: intros n m; only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive).	0.0242719650269	2
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	40	0.2.0.0	synth with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr; only 1: now rewrite add_assoc).	0.0495548248291	6
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	5.3.1.0	synth with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: now rewrite opp_involutive).	2.19666385651	469
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	40	1.1.4.0	synth with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now rewrite add_comm).	0.118710041046	16
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	40	0.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: now rewrite opp_involutive).	0.0310871601105	3
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	40	0.1.0.0	synth with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: now rewrite add_comm).	0.039715051651	5
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	40	6.0.0.1.3.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite pred_inj_wd).	2.26598095894	976
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	40	0.1.0	synth with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: now rewrite add_move_l, sub_0_l).	0.0650579929352	4
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	0.3.0	synth with cache (only 1: intros n m; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).	0.144418954849	26
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	40	6.1.0	synth with cache (only 1: intros; only 1: rewrite <- add_opp_r; only 1: now rewrite add_move_r, sub_opp_r).	0.0785360336304	14
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	1.2.0.2	synth with cache (only 1: nzinduct m; only 1: now nzsimpl; only 1: intro; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.228244066238	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	0.0	synth with cache (only 1: intros; only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.0298840999603	2
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40	0.0.3.0.0.1.1.1.3.1.0	synth with cache (only 1: intros n m p; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: rewrite add_comm; only 1: apply add_move_l; only 1: rewrite <- 2!add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: rewrite opp_succ, opp_pred; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	7.75323414803	2716
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	40	2.10.0	synth with cache (only 1: intros n m p; only 1: rewrite add_comm; only 1: apply add_add_simpl_l_l).	1.09138298035	393
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	40	0.12.0	synth with cache (only 1: intros n m p; only 1: rewrite (add_comm p m); only 1: now rewrite <- sub_sub_distr, sub_add_distr, sub_diag, sub_0_l, sub_opp_r).	1.30373311043	430
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	40	0.0.0.0.3.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.320511102676	87
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.2.3.0	synth with cache (only 1: intros; only 1: intuition; only 1: apply div_small; only 1: intuition).	0.406064987183	110
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	0.2.2.0	synth with cache (only 1: intros; only 1: intuition; only 1: apply mod_small; only 1: intuition).	0.253845930099	71
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.0548448562622	8
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	40	1.0.0.0.0.0.1.3	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: now nzsimpl).	1.02066898346	364
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0275580883026	5
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0288500785828	5
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	0.0.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).	0.374253988266	92
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	40	0.0.1.1.0.1.15	synth with cache (only 1: intros n m; only 1: apply Private_NZDiv.div_unique with 0; only 1: split; only 1: now try split; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: now try split).	5.45008921623	2390
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	2.0.3.0	synth with cache (only 1: intros; only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: auto).	0.884851932526	115
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	40	0.4.0.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.589649200439	124
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	40	7.0.3.4.0	synth with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: now apply mod_always_pos).	2.80996394157	1536
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0384459495544	4
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	40	0.2.1.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	0.0464270114899	9
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	40	0.0.1.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	0.046294927597	7
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0525650978088	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).	24.5522711277	8103
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	40	0.0.0.1.0.0.0.1	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_always_pos; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.198818922043	34
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	40	0.0.28.0	synth with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: trivial).	19.4331610203	15868
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40	5.6.1	synth with cache (only 1: intros a b c; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r).	13.6741299629	3612
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	40	0.0.0.6.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: trivial; only 1: order; only 1: rewrite <- neq_mul_0; only 1: intuition; only 1: order).	14.7850120068	4128
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	1.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	0.431029081345	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	40	1.2.3.0	synth with cache (only 1: intros a b n Hn; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).	0.914545059204	152
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	40	1.1.2.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now rewrite mul_comm; only 1: order; only 1: order).	0.135430812836	22
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40	0.0.1.4	synth with cache (only 1: intros a b Hb Hab; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).	1.38996887207	266
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	40	1.1.5.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	1.80632400513	541
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	40	0.0.0.2.0.0.0.0	synth with cache (only 1: intros a b c Hb Hc; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).	0.258540868759	19
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	40	3.7.0.5.4.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with (a mod b); only 1: now apply mod_always_pos; only 1: intuition; only 1: now nzsimpl).	13.4919950962	7774
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	0.0779881477356	9
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	40
Coq.Numbers.Integer.Binary.ZBinary.TestOrder.test	40	0	synth with cache (only 1: BinInt.Z.order).	0.0181560516357	1
Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40
Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40	3.1.7	synth with cache (only 1: intros a b; only 1: intros; only 1: firstorder).	0.405642032623	167
Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	40
Coq.Numbers.Cyclic.Int31.Ring31.TestRing.test	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_not_eq0	40	0.24.24	synth with cache (only 1: intro; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x | _ => intro | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end; only 1: discriminate || simpl).	15.7776710987	13968
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakl_shiftr	40	1.1.4	synth with cache (only 1: destruct x; only 1: simpl; only 1: split).	0.0537359714508	16
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakr_shiftl	40	7.0	synth with cache (only 1: intros; only 1: now destruct x).	0.0410358905792	9
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_zero	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_or_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S	40	0.0	synth with cache (only 1: intros n m; only 1: now simpl).	0.0299770832062	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S_tail	40	0.2.2.1.0.1.0.0.0.0.5	synth with cache (only 1: destruct n; only 1: destruct x; only 1: simpl; only 1: auto; only 1: simpl; only 1: induction n as [| k iHk]; only 1: now simpl; only 1: intros m; only 1: simpl; only 1: f_equal; only 1: apply iHk).	20.9566230774	9683
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_n_0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_size	40	1.0	synth with cache (only 1: destruct x; only 1: trivial).	0.0341749191284	3
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S	40	0	synth with cache (only 1: reflexivity).	0.0197160243988	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S_tail	40	0.2.0.1.1.1.5.3.2	synth with cache (only 1: intros n m; only 1: revert m; only 1: intros H; only 1: elim n; only 1: split; only 1: simpl; only 1: intros m IH; only 1: f_equal; only 1: auto).	16.1980638504	7091
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_n_0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_size	40	1	synth with cache (only 1: now intros []).	0.0388989448547	11
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstr_firstl	40	0.0.2.11	synth with cache (only 1: intro n; only 1: induction n; only 1: simpl in *; only 1: trivial).	36.2851521969	438
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstl_firstr	40	0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: auto).	0.0388350486755	3
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_predsize_0_firstl	40	4.0	synth with cache (only 1: destruct x; only 1: now injection 1).	0.0525460243225	14
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_propagates	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_sneakl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_eqn	40	4.5.1	synth with cache (only 1: intros; only 1: simpl; only 1: now rewrite H).	0.335006952286	124
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_converges	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_eqn	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phibis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_pos	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_nonneg	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_zero	40	3.0.0	synth with cache (only 1: intros; only 1: compute; only 1: auto).	0.0453178882599	6
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_le	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_length	40	0.0.3	synth with cache (only 1: simpl; only 1: intro; only 1: repeat match goal with | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	0.040825843811	6
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.l2i_i2l	40	2.0	synth with cache (only 1: intro n; only 1: now destruct n).	0.0326731204987	4
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakl	40	1.0.0.3	synth with cache (only 1: intros l l'; only 1: destruct l; only 1: simpl; only 1: auto).	4.10344314575	21
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_l2i	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_nshiftl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_i2l	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_shiftr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incrbis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi_aux	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_positive_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2i_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_negative	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.wB_pos	40	0	synth with cache (only 1: auto with zarith).	0.0220880508423	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_zdigits	40	12	synth with cache (only 1: easy || now destruct 1).	0.0775551795959	60
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_more_than_1_digit	40	10	synth with cache (only 1: constructor).	0.0290379524231	21
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_0	40	4	synth with cache (only 1: auto).	0.0208580493927	5
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_1	40	0	synth with cache (only 1: reflexivity).	0.0192120075226	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_m1	40	1.0	synth with cache (only 1: simpl; only 1: trivial).	0.0400099754333	3
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_compare	40	1	synth with cache (only 1: trivial).	0.0237917900085	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ	40	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0334939956665	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub	40	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0292639732361	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry	40	0.0.4.1	synth with cache (only 1: intros; only 1: unfold sub31carryc, sub31, interp_carry; only 1: repeat rewrite phi_phi_inv; only 1: apply Zplus_mod_idemp_l).	0.0714988708496	20
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp	40	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0328550338745	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred_c	40	0.0	synth with cache (only 1: intros; only 1: apply spec_sub_c).	0.0310499668121	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred	40	1.0.0	synth with cache (only 1: intros; only 1: rewrite <- spec_1; only 1: apply phi_phi_inv).	0.0758340358734	4
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi2_phi_inv2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul	40	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0352680683136	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_square_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div21	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter_int31_iter_nat	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.addmuldiv31_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_mul_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pos_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head00	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.head031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_nz	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail00	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).	0.0600929260254	7
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.tail031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.quotient_by_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_init	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_true	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_false	40	0.1.0.1.4.2.0.2.0.12	synth with cache (only 1: intros Hn Hm; only 1: assert (Hij : 0 <= i / j) by (apply Z_div_pos; auto with zarith); only 1: case (Z_mod_lt i j); only 1: auto with zarith; only 1: rewrite (Z_div_mod_eq i j); only 1: intros; only 1: apply Zdiv_lt_upper_bound; only 1: Z.order'; only 1: auto with zarith; only 1: auto with zarith).	14.312016964	6537
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div31_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter31_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_lower_bound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div312_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter312_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_is_even	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.log2_phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lor	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_land	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lxor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_more_than_1_digit	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.wB_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_2	40	0.0.0.0	synth with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0457439422607	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z	40	0.0.0.3.0	synth with cache (only 1: unfold to_Z; only 1: generalize digits_ne_1; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0557699203491	8
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_of_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_zdigits	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_0	40	0.1.0.0.0.0	synth with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: unfold wB, base; only 1: split; only 1: auto with zarith; only 1: auto with zarith).	0.0615739822388	7
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_Bm1	40	0.2.0.0	synth with cache (only 1: unfold to_Z, one; only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: lia).	0.160696983337	35
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_compare	40	7.0	synth with cache (only 1: unfold to_Z, minus_one; only 1: auto with zarith).	0.0777590274811	11
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_eq0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zmod_equal	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred	40	1.3.0.0	synth with cache (only 1: intros; only 1: unfold succ, to_Z, Z.succ; only 1: symmetry; only 1: apply Zplus_mod_idemp_l).	0.0658450126648	8
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_square_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zgcd_bound	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div21	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_mul_div	40	3.2.2	synth with cache (only 1: unfold add, to_Z; only 1: unfold wB, base; only 1: auto).	0.380429029465	96
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pos_mod	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_is_even	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.two_p_power2	40	0.1.0.0.0	synth with cache (only 1: intros; only 1: destruct x; only 1: auto using Z.lt_gt with zarith; only 1: apply two_power_pos_equiv; only 1: trivial).	0.0673689842224	6
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_bounded	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_land	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lxor	40
Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40
Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	0	synth with cache (only 1: RelationClasses.simpl_relation).	0.0227198600769	1
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	40	0.0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n p a H; only 1: rewrite Zmod_eq by auto with zarith; only 1: unfold Z.sub at 1; only 1: rewrite Z_div_plus_full_l by auto with zarith; only 1: replace (2 ^ n) with (2 ^ (n - p) * 2 ^ p) by (rewrite <- Zpower_exp; [ f_equal |  |  ]; lia); only 1: rewrite <- Zdiv_Zdiv, Z_div_mult by auto with zarith; only 1: rewrite (Z.mul_comm (2 ^ (n - p))), Z.mul_assoc; only 1: rewrite Zopp_mult_distr_l; only 1: rewrite Z_div_mult by auto with zarith; only 1: symmetry; only 1: apply Zmod_eq; only 1: auto with zarith).	4.48780798912	977
Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40
Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	0.5.0	synth with cache (only 1: intros; only 1: apply Z.lt_gt; only 1: Z.order_pos).	0.0298237800598	8
Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40	0.0	synth with cache (only 1: intros LT; only 1: Z.order_nz).	0.0205960273743	2
Coq.Numbers.Cyclic.Int63.Int63.wB_diff_0	40	6	synth with cache (only 1: discriminate).	0.188337087631	18
Coq.Numbers.Cyclic.Int63.Int63.wB_pos	40	19	synth with cache (only 1: now try split).	0.33603310585	165
Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	0	synth with cache (only 1: tauto).	0.012993812561	1
Coq.Numbers.Cyclic.Int63.Int63.to_Z_1	40	0	synth with cache (only 1: trivial).	0.0150330066681	1
Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	267	synth with cache (only 1: congruence).	10.8848860264	45475
Coq.Numbers.Cyclic.Int63.Int63.to_Z_inj	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	0.0.2	synth with cache (only 1: intros x y; only 1: rewrite <- not_true_iff_false, eqb_spec; only 1: trivial).	0.100193977356	34
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_correct	40	0.0.0	synth with cache (only 1: intros x y; only 1: rewrite eqb_false_spec; only 1: trivial).	0.0212609767914	3
Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40
Coq.Numbers.Cyclic.Int63.Int63.cast_refl	40
Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqbP	40
Coq.Numbers.Cyclic.Int63.Int63.ltbP	40
Coq.Numbers.Cyclic.Int63.Int63.lebP	40
Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_zero_spec	40	0.9.0.5	synth with cache (only 1: split; only 1: auto using eqb_correct, eqb_complete; only 1: <Coq.Strings.String.t_eqb>; only 1: reflexivity).	2.1738409996	1835
Coq.Numbers.Cyclic.Int63.Int63.diveucl_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succ_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.pred_spec	40
Coq.Numbers.Cyclic.Int63.Int63.predc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.oppc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40	1	synth with cache (only 1: apply sub_spec).	0.0163900852203	2
Coq.Numbers.Cyclic.Int63.Int63.oppcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_gcd	40
Coq.Numbers.Cyclic.Int63.Int63.gcd_spec	40
Coq.Numbers.Cyclic.Int63.Int63.head00_spec	40
Coq.Numbers.Cyclic.Int63.Int63.tail00_spec	40	0	synth with cache (only 1: now intros h; rewrite (to_Z_inj _ 0 h)).	0.00969481468201	1
Coq.Numbers.Cyclic.Int63.Int63.eqm_mod	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_sub	40
Coq.Numbers.Cyclic.Int63.Int63.eqmE	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40
Coq.Numbers.Cyclic.Int63.Int63.int_eqm	40	1.3	synth with cache (only 1: intro H0; only 1: now subst).	0.0173578262329	6
Coq.Numbers.Cyclic.Int63.Int63.eqmI	40
Coq.Numbers.Cyclic.Int63.Int63.add_assoc	40
Coq.Numbers.Cyclic.Int63.Int63.add_comm	40
Coq.Numbers.Cyclic.Int63.Int63.add_le_r	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_l	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_r	40	0.0.0.0.0.0.0	synth with cache (only 1: intros h; only 1: apply int_eqm in h; only 1: rewrite !add_spec in h; only 1: apply eqm_mod, eqm_sub in h; only 1: replace (_ + _ - _) with (φ (y) - φ (z)) in h by lia; only 1: rewrite <- eqm_subE in h; only 1: apply eqmI, h).	0.0474660396576	7
Coq.Numbers.Cyclic.Int63.Int63.lsr0	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	1.5.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: Z.nzsimpl; only 1: reflexivity).	0.113098144531	10
Coq.Numbers.Cyclic.Int63.Int63.lsr_1	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_add	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_M_r	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0_spec	40
Coq.Numbers.Cyclic.Int63.Int63.bit_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.bit_b2i	40
Coq.Numbers.Cyclic.Int63.Int63.bit_1	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_M	40
Coq.Numbers.Cyclic.Int63.Int63.bit_half	40
Coq.Numbers.Cyclic.Int63.Int63.bit_ext	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40
Coq.Numbers.Cyclic.Int63.Int63.lor_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.lor_le	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0	40
Coq.Numbers.Cyclic.Int63.Int63.bit_add_or	40
Coq.Numbers.Cyclic.Int63.Int63.addmuldiv_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_bit	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	11	synth with cache (only 1: intuition).	0.0135259628296	33
Coq.Numbers.Cyclic.Int63.Int63.is_even_lsl_1	40
Coq.Numbers.Cyclic.Int63.Int63.quotient_by_2	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_false	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_spec	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_def	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_lower_bound	40
Coq.Numbers.Cyclic.Int63.Int63.diveucl_21_spec_aux	40
Coq.Numbers.Cyclic.Int63.Int63.div2_phi	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_spec	40
Coq.Numbers.Cyclic.Int63.Int63.of_pos_rec_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_int	40
Coq.Numbers.Cyclic.Int63.Int63.of_Z_spec	40
Coq.Numbers.Cyclic.Int63.Int63.negbE	40	0.1.0.6.8.6.2	synth with cache (only 1: intros H2; only 1: apply eq_true_iff_eq; only 1: split; only 1: destr_bool; only 1: intros Ha; only 1: subst; only 1: trivial).	10.5502068996	2152
Coq.Numbers.Cyclic.Int63.Int63.Z_oddE	40	0.1	synth with cache (only 1: rewrite Zmod_odd; only 1: now destruct Z.odd).	0.027932882309	3
Coq.Numbers.Cyclic.Int63.Int63.Z_evenE	40	0.0	synth with cache (only 1: rewrite Zmod_even; only 1: now destruct Z.even).	0.0151629447937	2
Coq.Numbers.Cyclic.Int63.Int63.is_zeroE	40
Coq.Numbers.Cyclic.Int63.Int63.bitE	40
Coq.Numbers.Cyclic.Int63.Int63.lt_pow_lt_log	40
Coq.Numbers.Cyclic.Int63.Int63.land_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lxor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.landC	40
Coq.Numbers.Cyclic.Int63.Int63.landA	40
Coq.Numbers.Cyclic.Int63.Int63.land0	40
Coq.Numbers.Cyclic.Int63.Int63.land0_r	40	2.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite land_spec, bit_0; only 1: now rewrite andb_false_r).	0.0176210403442	6
Coq.Numbers.Cyclic.Int63.Int63.lorC	40
Coq.Numbers.Cyclic.Int63.Int63.lorA	40
Coq.Numbers.Cyclic.Int63.Int63.lor0	40
Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40	2.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite lor_spec, bit_0; only 1: now rewrite orb_false_r).	0.0206279754639	6
Coq.Numbers.Cyclic.Int63.Int63.lxorC	40
Coq.Numbers.Cyclic.Int63.Int63.lxorA	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0_r	40
Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	40	3.1.6	synth with cache (only 1: intros a b; only 1: intros; only 1: firstorder).	0.357638120651	138
Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40
Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	40	7	synth with cache (only 1: auto using eqb_correct, eqb_complete).	0.0695180892944	42
Coq.Numbers.Cyclic.Int63.Ring63.TestRing.test	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WO	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_OW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_pos_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_Z_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_0_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_1_l	40	0.0.4.0.0	synth with cache (only 1: intro n; only 1: zify; only 1: Z.nzsimpl; only 1: apply Zmod_small; only 1: apply ZnZ.spec_to_Z).	0.158155918121	9
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_comm	40	7.4.0.1.5.18	synth with cache (only 1: intro n; only 1: intros q; only 1: pattern q; only 1: zify; only 1: f_equal; only 1: ring).	10.4233360291	9181
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_add_distr_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.CyclicRing	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40	21.30.25	synth with cache (only 1: intros H3; only 1: intros H; only 1: apply Pos.eqb_eq).	39.4121310711	79609
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_1	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_0	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.succ_mod_wB	40	6.2.1.16	synth with cache (only 1: intros a; only 1: symmetry; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: now Z.nzsimpl).	3.91831898689	1727
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.two_succ	40	0	synth with cache (only 1: split).	0.019718170166	1
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B0	40	16	synth with cache (only 1: trivial).	0.0587601661682	108
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.BS	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.Zbounded_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B_holds	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.bi_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_0_l	40	1.0.9	synth with cache (only 1: intros a; only 1: zify; only 1: apply NZ_to_Z_mod).	0.363858938217	191
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_succ_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_0_r	40	0.20.4.1.0.0	synth with cache (only 1: intros; only 1: zify; only 1: rewrite Zmod_small; only 1: now Z.nzsimpl; only 1: Z.nzsimpl; only 1: apply ZnZ.spec_to_Z).	22.1079599857	9286
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	1.1.0.27	synth with cache (only 1: intros EQ; only 1: zify; only 1: pose proof gt_wB_1; only 1: auto with zarith).	4.99821281433	4406
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_succ_l	40
Coq.Numbers.DecimalString.uint_of_char_spec	40
Coq.Numbers.DecimalString.NilEmpty.usu	40
Coq.Numbers.DecimalString.NilEmpty.sus	40
Coq.Numbers.DecimalString.NilEmpty.isi	40
Coq.Numbers.DecimalString.NilEmpty.sis	40
Coq.Numbers.DecimalString.NilZero.uint_of_string_nonnil	40
Coq.Numbers.DecimalString.NilZero.sus	40
Coq.Numbers.DecimalString.NilZero.usu	40
Coq.Numbers.DecimalString.NilZero.usu_nil	40	1.1	synth with cache (only 1: simpl; only 1: auto).	0.028795003891	4
Coq.Numbers.DecimalString.NilZero.usu_gen	40
Coq.Numbers.DecimalString.NilZero.isi	40
Coq.Numbers.DecimalString.NilZero.isi_posnil	40	0	synth with cache (only 1: reflexivity).	0.0189301967621	1
Coq.Numbers.DecimalString.NilZero.isi_negnil	40	0	synth with cache (only 1: reflexivity).	0.0204570293427	1
Coq.Numbers.DecimalString.NilZero.sis	40
Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40	3.3.0	synth with cache (only 1: split; only 1: parity_binop; only 1: parity_binop).	0.276763916016	60
Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40	0.0.0.2.2.0.4.2	synth with cache (only 1: induction n; only 1: split; only 1: intro H; only 1: rewrite <- PeanoNat.Nat.odd_spec in H; only 1: discriminate; only 1: inversion_clear 1; only 1: elim IHn; only 1: parity_binop).	4.18352198601	2798
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	11.4.2	synth with cache (only 1: intro H; only 1: rewrite nlt_ge; only 1: apply le_0_l).	1.86420512199	1788
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	40	0.1.8.1	synth with cache (only 1: intro n; only 1: rewrite nle_gt; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	0.856118917465	659
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	40	0.1.0	synth with cache (only 1: intro n; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	0.0224149227142	4
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	40	0.2.0.1.1	synth with cache (only 1: cases ltac:(n); only 1: intuition; only 1: intro H; only 1: right; only 1: apply lt_0_succ).	0.0626339912415	22
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	40	0.3.0.0.0.0.0.4.0.1.3	synth with cache (only 1: setoid_rewrite one_succ; only 1: intro n; only 1: split; only 1: rewrite lt_succ_r; only 1: intro H; only 1: le_elim H; only 1: false_hyp H nlt_0_r; only 1: assumption; only 1: intro H; only 1: rewrite H; only 1: apply lt_0_succ).	18.9740600586	15428
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	40	6.1.8.4	synth with cache (only 1: intros z n H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: apply lt_0_succ).	13.527479887	8750
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.le_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.lt_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	40	0.0.0.2	synth with cache (only 1: intros; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).	0.0473330020905	17
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	40	0.0.5.0.0.1.1.10.4	synth with cache (only 1: cases ltac:(n); only 1: apply le_ngt; only 1: rewrite pred_0; only 1: apply le_ngt; only 1: order; only 1: intro; only 1: nzsimpl; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	13.0435290337	11483
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	40	5.4.0.0.0.0.0	synth with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros n IH; only 1: rewrite pred_succ; only 1: apply lt_succ_diag_r).	6.63394999504	3165
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	40	3.0.0.0.0.4.1.1.0.0.0.6	synth with cache (only 1: cases ltac:(n); only 1: intros; only 1: rewrite pred_0; only 1: assumption; only 1: intro p; only 1: intros; only 1: elim H using le_ind; only 1: solve_proper; only 1: rewrite pred_succ; only 1: now apply le_le_succ_r; only 1: intros k H1 H2; only 1: now apply le_le_succ_r).	26.688174963	15563
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	40	0.0.0.1.0.0.0.3	synth with cache (only 1: intro n; only 1: cases ltac:(m); only 1: rewrite pred_0; only 1: trivial; only 1: intros m IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: order).	0.849108934402	458
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	40	1.0.0.0.7.1.0.0.4.0.2	synth with cache (only 1: intro n; only 1: cases ltac:(m); only 1: rewrite pred_0; only 1: intro H; only 1: assumption; only 1: intros m IH; only 1: destruct (le_decidable n m) as [H1| H1]; only 1: rewrite pred_succ in IH; only 1: now apply le_le_succ_r; only 1: rewrite pred_succ in IH; only 1: order).	13.193365097	10917
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	40	0.0.0.6.0.1.0.8.1	synth with cache (only 1: intros n m H; only 1: apply le_ind with (4 := H); only 1: solve_proper; only 1: intuition order; only 1: intros k H1 H2; only 1: nzsimpl; only 1: apply le_trans with n; only 1: apply le_pred_l; only 1: auto).	35.4250249863	26963
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40	1.4.8.0.1.0.0.1	synth with cache (only 1: intro n; only 1: cases ltac:(m); only 1: intro H; only 1: apply le_succ_l in H; only 1: false_hyp ltac:(H) nlt_0_r; only 1: intro H; only 1: rewrite pred_succ; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).	14.8265500069	10730
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	40	0.2.0.0.0.1.0.0.3	synth with cache (only 1: intros n m; only 1: cases n; only 1: rewrite pred_0; only 1: intro H; only 1: apply lt_0_succ; only 1: intros n IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: now apply le_succ_l).	2.33821415901	1407
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	0.0.5.0.6	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: now try split).	4.05492305756	2232
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	4.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_0_lt_0; only 1: auto'; only 1: now nzsimpl').	0.332257986069	128
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	40	1.0.0.1.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: intuition; only 1: now nzsimpl).	0.0527548789978	10
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	40	1.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: intuition; only 1: now nzsimpl).	0.0442068576813	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	40	1.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto'; only 1: now nzsimpl).	0.0480351448059	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	40	0.2.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto').	0.0258340835571	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	40	0.2.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').	0.0240619182587	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	40	0.1.4.0.1.0	synth with cache (only 1: intro n; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_0_lt_0; only 1: apply lt_0_1; only 1: now nzsimpl').	0.585215091705	291
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	40	1.1.1.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: apply lt_0_1; only 1: now nzsimpl).	0.0905470848083	27
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	40	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto).	0.0233628749847	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	40	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto).	0.0237209796906	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	40	0.0.0.0.1.2	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_0_lt_0; only 1: auto'; only 1: apply mul_comm).	0.21382188797	48
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	40	0.0.0.2.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: auto'; only 1: nzsimpl; only 1: apply mul_comm).	0.0970568656921	26
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	40	0.0.5.0	synth with cache (only 1: intros; only 1: apply mod_le; only 1: auto'; only 1: auto').	0.0410170555115	13
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	40	0.4.0.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.575041055679	127
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40	1.0.1.2.0.2.1.0.0.0.3.1.0	synth with cache (only 1: intros; only 1: split; only 1: intros Hab; only 1: rewrite <- Private_NZDiv.div_small_iff; only 1: rewrite <- (mul_cancel_l _ _ b) by order; only 1: rewrite <- (add_cancel_r _ _ (a mod b)); only 1: rewrite <- div_mod by order; only 1: now nzsimpl; only 1: auto; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto'; only 1: now nzsimpl).	24.6858689785	13132
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	40	0.0.5.0	synth with cache (only 1: intros; only 1: apply mul_div_le; only 1: auto'; only 1: auto').	0.0969598293304	23
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').	0.064022064209	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	40	0.0.0.2	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.340939044952	54
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	40	0.0.0.1.0	synth with cache (only 1: intros; only 1: apply div_add; only 1: auto'; only 1: auto'; only 1: auto').	0.317541122437	63
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	40	0.2.4	synth with cache (only 1: intros a b c; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add).	0.385999917984	80
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	0.3.3.2.0	synth with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').	1.07436585426	606
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	40	0.0.0.3.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: auto'; only 1: auto').	0.0991449356079	31
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	40	0.0.0.2.0.1.1.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: auto'; only 1: auto').	2.90282297134	933
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	40	0.0.0.2.0.2.2.0	synth with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: auto'; only 1: auto').	1.91822600365	632
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	40	1.3.0.0.0	synth with cache (only 1: intros; only 1: destruct (mod_bound_pos a n); only 1: auto'; only 1: auto'; only 1: now rewrite Private_NZDiv.mod_small_iff).	0.0464069843292	13
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	40	0.0.0.3.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.217624902725	52
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	0.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: apply neq_0_lt_0; only 1: auto').	0.0395469665527	6
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	40	0.0.0.0.3.0.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: apply neq_0_lt_0; only 1: auto'; only 1: apply neq_0_lt_0; only 1: auto').	0.0461919307709	10
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	40	0.0.0.4.0	synth with cache (only 1: intros; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.0621039867401	18
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	40	0.0.0.2.0	synth with cache (only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: apply neq_0_lt_0; only 1: auto').	0.0420970916748	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	40	0.0.0.0.4.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: apply neq_0_lt_0; only 1: auto'; only 1: apply neq_0_lt_0; only 1: auto').	0.767906904221	216
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	40	0.0.2.0.0.0.0	synth with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: now apply div_mod).	0.172342061996	13
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	1.0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto'; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: auto').	0.0696079730988	10
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	40	0.0.0.0.1.0.0.0.0.4	synth with cache (only 1: split; only 1: intros; only 1: exists (a / b); only 1: rewrite Private_NZDiv.div_exact; only 1: auto; only 1: order; only 1: intros (c, Hc); only 1: rewrite Hc, mul_comm; only 1: apply Private_NZDiv.mod_mul; only 1: auto').	2.2095580101	1038
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.0.0.0.0.0.0	synth with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).	0.05189204216	7
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	40	1.0.0.0.0.0	synth with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intro n; only 1: intro H; only 1: now rewrite pred_succ).	0.0492689609528	7
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.PairInduction.pair_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.TwoDimensionalInduction.two_dim_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.DoubleInduction.double_induction	40	7.0.0.0.5.0.0	synth with cache (only 1: intros H1 H2 H3; only 1: induct ltac:(n); only 1: exact H1; only 1: intros n IH; only 1: induct ltac:(m); only 1: auto; only 1: auto).	1.75119686127	1482
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	40	1.0.2.3.33	synth with cache (only 1: intro H; only 1: intros; only 1: unfold if_zero; only 1: rewrite recursion_0; only 1: auto).	18.2194468975	22932
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40	0.0.14	synth with cache (only 1: unfold def_add; only 1: intro n; only 1: now rewrite recursion_0).	0.391103029251	322
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40	0.170	synth with cache (only 1: compute; only 1: now rewrite recursion_0).	5.17302894592	14833
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	40	2.14	synth with cache (only 1: compute; only 1: f_equiv').	13.991784811	820
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	40	0.3.12	synth with cache (only 1: unfold pow; only 1: intros H; only 1: now rewrite recursion_0).	3.53058505058	1148
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	40	0.0.0.4.0	synth with cache (only 1: intros; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: assumption).	0.063469171524	15
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.lt_0_mul'	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.eq_mul_1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	40	1.0	synth with cache (only 1: intros x x' EQ; only 1: now f_equiv).	0.0497570037842	21
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	40	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order').	3.1598200798	1079
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	40	1.0.0.0.25	synth with cache (only 1: destr_bool; only 1: apply Private_NZDiv.div_small; only 1: order'; only 1: apply Private_NZDiv.div_small; only 1: order').	3.50625610352	3900
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	40	0.0.0.0.8	synth with cache (only 1: intros; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; order')).	0.24693608284	112
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	40	0.0.2.0.2.0.4.0	synth with cache (only 1: intros a0; only 1: apply b2n_inj; only 1: rewrite testbit_spec' by trivial; only 1: nzsimpl; only 1: simpl; only 1: order; only 1: order'; only 1: order_nz).	0.833925962448	348
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	40	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).	0.0770921707153	10
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	40	0.0	synth with cache (only 1: intros; only 1: apply testbit_even_succ, le_0_l).	0.0180821418762	2
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	40	0.0.4.13.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: revert a; only 1: intros n; only 1: rewrite shiftr_spec'; only 1: now nzsimpl).	4.55169510841	3221
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).	0.0382061004639	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.3.0.0	synth with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: apply Private_NZDiv.div_0_l; only 1: order_nz).	0.181729078293	24
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	40	0.0.0.0.0.0.3	synth with cache (only 1: intros n m; only 1: rewrite shiftr_div_pow2, div_small_iff by order_nz; only 1: intros H; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: trivial using le_0_l; only 1: trivial using le_0_l).	0.133798122406	28
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	40	0.2.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0636379718781	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	40	0.2.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.108593940735	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	40	0.2.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0753979682922	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	40	1.0.8.3.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: split; only 1: intros H; only 1: bitwise; only 1: apply xorb_eq; only 1: now rewrite <- lxor_spec, H, bits_0; only 1: intros H; only 1: rewrite H; only 1: bitwise; only 1: apply xorb_nilpotent).	13.2666471004	8706
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	40	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.027862071991	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	3.2.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now destruct (even a)).	0.0302469730377	8
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0286910533905	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	40	2.0.14.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: auto).	0.719902992249	838
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	40	3.1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: auto).	0.0336861610413	8
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	40	0.5.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0337889194489	14
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	40	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0289099216461	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	40	24.0.2	synth with cache (only 1: intros H; only 1: bitwise; only 1: intuition).	21.7835450172	12956
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	40	0.0.1.2.12	synth with cache (only 1: unfold Basics.flip, respectful; only 1: unfold clearbit; only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	6.28661608696	1876
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.1.0.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).	0.0321500301361	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	40	1.2.2.2.0	synth with cache (only 1: intros a n; only 1: unfold lnot; only 1: rewrite !ones_equiv; only 1: bitwise; only 1: now destruct a.[m]).	2.57985401154	1000
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	40	0.0.4.5	synth with cache (only 1: intros x y z; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_assoc_reverse).	2.82748794556	1432
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	40	0.0.10.2.7.0	synth with cache (only 1: intros a n H; only 1: symmetry; only 1: pose proof (land_lnot_diag_low a n H) as H'; only 1: apply add_sub_eq_l; only 1: rewrite add_nocarry_lxor, lxor_lor by trivial; only 1: now apply lor_lnot_diag_low).	16.4820461273	10769
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gauss	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_mul_split	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	0.0.1.0.0.0.1.0.0.13	synth with cache (only 1: firstorder; only 1: unfold natural_isomorphism; only 1: now rewrite N1.recursion_0; only 1: unfold natural_isomorphism; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).	0.510400772095	473
Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40
Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	40	2.1.1	synth with cache (only 1: intro n; only 1: apply sqrt_square; only 1: apply le_0_l).	0.250237941742	45
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	40	2.8.2.6	synth with cache (only 1: intros a Ha; only 1: apply sqrt_le_square; only 1: apply le_0_l; only 1: apply le_0_l).	24.8188650608	13842
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_le	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_or	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.add_sqrt_le	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	40	0.1.0.0.1.1.0.8	synth with cache (only 1: intro H; only 1: intro n; only 1: nzinduct n; only 1: apply neq_sym; only 1: apply neq_succ_0; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	5.85215520859	3255
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	40	8.3.0.0.0.1.3	synth with cache (only 1: cases ltac:(n); only 1: intros; only 1: exfalso; only 1: now apply H; only 1: intros m H2 H3; only 1: nzsimpl; only 1: now nzsimpl).	11.8558869362	5353
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	40	0.1.0.0.0.0.0	synth with cache (only 1: cases ltac:(n); only 1: intros; only 1: exfalso; only 1: now apply H; only 1: intros; only 1: rewrite pred_succ; only 1: now rewrite <- negb_odd, odd_succ, negb_even).	0.153115034103	8
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	2.0.3.1.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	1.75339508057	550
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40	0.0.0.1.2.16.1	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: nzsimpl; only 1: apply le_0_l; only 1: intro; only 1: nzsimpl; only 1: apply succ_le_mono).	11.874341011	6051
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	3.1	synth with cache (only 1: intros n m; only 1: apply lt_lt_add_r).	0.498285055161	77
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	0.0.0.2.5	synth with cache (only 1: intros n IH H; only 1: rewrite add_comm; only 1: apply add_pos_nonneg; only 1: assumption; only 1: apply le_0_l).	2.21241188049	533
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: nzsimpl; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r; only 1: apply le_0_l).	0.181698083878	8
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	40	0.0.1.0.0	synth with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: order; only 1: now apply pow_0_l).	0.0474147796631	6
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	40	1.2.18.0	synth with cache (only 1: intros; only 1: nzsimpl; only 1: reflexivity; only 1: apply le_0_l).	3.08669400215	1569
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	40	0.0.0.1.1.0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros a b c; only 1: destruct (lt_ge_cases c 0) as [Hc| Hc]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: now nzsimpl; only 1: apply le_ind with (4 := Hc); only 1: solve_proper; only 1: now nzsimpl; only 1: clear c Hc; only 1: intros c Hc IH; only 1: nzsimpl; only 1: rewrite IH; only 1: apply mul_shuffle1; only 1: trivial; only 1: trivial; only 1: trivial).	5.04345393181	1466
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	40	1.5.5.3.2	synth with cache (only 1: intros; only 1: apply neq_0_lt_0; only 1: apply pow_pos_nonneg; only 1: auto'; only 1: auto').	4.03006696701	3229
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	1.2.0.0.0	synth with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: order; only 1: order').	0.126856088638	24
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40	2.3.10.1	synth with cache (only 1: intros a b c Ha H; only 1: apply pow_le_mono_r; only 1: auto'; only 1: order).	9.20978498459	4231
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: intuition order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: intuition order).	0.0454399585724	8
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_l	40	0.3.0.0.2.3.10	synth with cache (only 1: intros a b c Ha H; only 1: destruct (lt_trichotomy a b) as [LT| [EQ'| GT]]; only 1: assert (a ^ c < b ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order; only 1: trivial; only 1: assert (b ^ c < a ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order).	13.2438440323	13253
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_r	40	0.1.0.0.2.0.0	synth with cache (only 1: intros; only 1: destruct (lt_trichotomy b c) as [LT| [EQ'| GT]]; only 1: assert (a ^ b < a ^ c) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order).	0.0480749607086	10
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r_iff	40	0.0.2.0.0.0.0.0.7	synth with cache (only 1: intros; only 1: split; only 1: intro LT; only 1: now apply Private_NZPow.pow_lt_mono_r; only 1: intro LT; only 1: destruct (le_gt_cases c b) as [LE| GT]; only 1: assert (a ^ c <= a ^ b) by (apply Private_NZPow.pow_le_mono_r; order'); only 1: order; only 1: trivial).	15.8102509975	6696
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_lin_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.even_pow	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40	0.0.0.0.0.0.3.1.1.2	synth with cache (only 1: intros n m H; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now apply add_cancel_l; only 1: assumption; only 1: now apply add_le_mono_l; only 1: rewrite 2!max_l; only 1: now apply add_cancel_l; only 1: assumption; only 1: now apply add_le_mono_l).	20.2319290638	5467
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40	1.0.0.0.1.0.0.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).	5.28851699829	1651
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40	0.0.0.3.0.0.0.2.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l).	9.97302389145	2356
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_r	40	1.0.0.1.1.0.0.0.2.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	7.35633802414	2580
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_r	40	0.0.0.0.0.0.0.0.0.0.0.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!max_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l).	13.7282819748	4131
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_l	40	2.0.0.1.2.0.0.0.2.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_l; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_l).	15.0768449306	4128
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_r	40	0.0.0.1.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_r).	3.14893317223	937
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_alt	40	2.0	synth with cache (only 1: intros; only 1: eauto).	0.0150489807129	4
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec0_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_succ	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0	40	0.0.0.0.1.0.0.0.7.0	synth with cache (only 1: intros; only 1: rewrite !strong_rec_alt; only 1: unfold strong_rec0; only 1: f_equiv; only 1: rewrite recursion_succ; only 1: f_equiv; only 1: rewrite recursion_0; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').	33.9045510292	470
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_more_steps	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0_any	40	0.0.1.3.0.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt; only 1: rewrite strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).	0.0713748931885	15
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_any_fst_arg	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	40	2.2.1.0.25.0	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: generalize (CRelationClasses.partial_order_equivalence y y'); only 1: compute; only 1: setoid_rewrite Hx; only 1: setoid_rewrite Hy; only 1: auto with *).	14.8843460083	3625
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	0.1.0	synth with cache (only 1: intro n; only 1: intro H; only 1: apply divide_mul_l, divide_refl).	0.0250101089478	4
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_least	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_comm	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_assoc	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	0.0.0.14.14.2	synth with cache (only 1: nzinduct n; only 1: apply mul_0_l; only 1: unfold lcm; only 1: intros; only 1: nzsimpl; only 1: now nzsimpl).	6.71009206772	7822
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_r	40	0.1.0.1.1.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	0.0710780620575	10
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_l	40	0.1.0.0.5.1.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists n; only 1: now nzsimpl'; only 1: trivial using divide_refl; only 1: trivial).	1.72762084007	803
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.0.0.1.2.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: exists n; only 1: now nzsimpl'; only 1: trivial using divide_1_l, le_0_l, divide_refl).	0.0772140026093	10
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_diag	40	0.1.1.2.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_refl).	0.0638468265533	10
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_eq_0	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_eq_r	40	0.2.1.1.2.2	synth with cache (only 1: intros z n H; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: trivial; only 1: trivial using divide_refl; only 1: trivial).	1.13550209999	612
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	40	0.1.0.4	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: rewrite add_comm; only 1: apply add_sub).	0.149114847183	61
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	40	0.2.0.0.4	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: rewrite <- add_sub_assoc by apply le_refl; only 1: rewrite sub_diag; only 1: now rewrite add_0_r).	2.33271098137	591
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	40
Coq.Numbers.DecimalZ.of_to	40
Coq.Numbers.DecimalZ.to_of	40
Coq.Numbers.DecimalZ.to_int_inj	40	0.2	synth with cache (only 1: intros E; only 1: now rewrite <- (Unsigned.of_to n), <- (Unsigned.of_to n'), E).	0.0425400733948	12
Coq.Numbers.DecimalZ.to_int_surj	40
Coq.Numbers.DecimalZ.of_int_norm	40	5.4.10.0.0.1	synth with cache (only 1: destruct d; only 1: simpl; only 1: now induction d; only 1: generalize (DecimalPos.Unsigned.to_of d); only 1: simpl; only 1: now induction d).	15.5374341011	9764
Coq.Numbers.DecimalZ.of_inj	40	3.10.0.0	synth with cache (only 1: intros; only 1: rewrite <- !Unsigned.to_of; only 1: rewrite H; only 1: trivial).	1.15578699112	625
Coq.Numbers.DecimalZ.of_iff	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	0.0.3.7.2	synth with cache (only 1: apply sqrt_unique; only 1: nzsimpl; only 1: split; only 1: order; only 1: apply lt_succ_diag_r).	1.14593911171	266
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40	8.0.0.0.0.0.4	synth with cache (only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: apply mul_nonneg_nonneg; only 1: apply lt_le_incl, lt_0_2; only 1: apply lt_le_incl, lt_0_1; only 1: now nzsimpl').	5.41887784004	1300
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	40	0.0.0.0.1.8	synth with cache (only 1: intros n m; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.477689027786	309
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40	0.2.3.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: intro H; only 1: apply le_le_succ_r, sqrt_nonneg; only 1: order).	0.60861992836	313
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	0.0.0.0.0	synth with cache (only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.027272939682	5
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	40	0.0.1.13.0.0.0.0.1.0.6.0	synth with cache (only 1: rewrite <- (mul_1_l 1)  at 1; only 1: rewrite sqrt_up_eqn; only 1: rewrite sqrt_pred_square; only 1: apply (lt_succ_pred 0); only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: rewrite <- (add_0_l 0); only 1: nzsimpl; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r).	27.9604039192	26179
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	40	0.0.0.1.0.0.1.0.2.0	synth with cache (only 1: intros a b q r Ha (Hb, Hr) EQ; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: apply mod_bound_pos; only 1: order; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).	1.09234404564	476
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	40	0.0.0.0.0.1.28.15	synth with cache (only 1: transitivity 1; only 1: symmetry; only 1: apply div_unique with 0; only 1: order; only 1: now try split; only 1: nzsimpl; only 1: order; only 1: order).	13.8514869213	13293
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	40	0.0.0.0.2.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: order; only 1: nzsimpl; only 1: order).	0.325682878494	91
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40	1.0.0.3.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with 0; only 1: order; only 1: intuition; only 1: now nzsimpl).	0.60455083847	168
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	40	5.0.2.0	synth with cache (only 1: intros; only 1: apply div_small; only 1: intuition; only 1: order').	0.31284403801	126
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	40	0.0.0.2.0	synth with cache (only 1: intros; only 1: apply mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.163627147675	55
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	40	0.0.0.0.0.1.5.0.1.0.0.0	synth with cache (only 1: intros a b Ha Hb; only 1: split; only 1: intros Hab; only 1: destruct (lt_ge_cases a b); only 1: auto; only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: exfalso; only 1: revert Hab; only 1: order; only 1: intros Hab; only 1: apply mod_small; only 1: auto).	24.569822073	11835
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	40	1.0.0.0.1.11.0.0	synth with cache (only 1: intro; only 1: intro; only 1: nzinduct n; only 1: nzsimpl; only 1: now f_equiv; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	3.26635193825	2128
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	40	0.1.0.0.0.0	synth with cache (only 1: intros; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0844078063965	7
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	40	1.0.0.0.1.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0803420543671	8
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0569851398468	2
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	40	0.0.0.0.0.2	synth with cache (only 1: Bool.destr_bool; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.435377836227	60
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	40	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.109884023666	6
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	40	0.0.0.0.3.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.177681922913	21
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40	0.0.0.0.4.0.3.0	synth with cache (only 1: intros n m p; only 1: intro; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	3.22614216805	841
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	40	0.0.0.0.0.7.7.0	synth with cache (only 1: intros n m p q; only 1: nzinduct p; only 1: nzsimpl; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: apply add_comm; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	10.5687479973	3755
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	40	0.0.0.0.1.0	synth with cache (only 1: intros n m p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.122726917267	7
Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0386009216309	2
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	22.0.0	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: intuition).	1.43575882912	1699
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	40	0.0.0.7.1.0	synth with cache (only 1: intro n; only 1: apply lt_eq_cases; only 1: constructor; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now right).	0.573442935944	414
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	8.0.0.1	synth with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: tauto).	1.09219098091	264
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40	0.0.6.4.4.3.0.0.0.3.0.14	synth with cache (only 1: split; only 1: intro n; only 1: intro H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: false_hyp H lt_irrefl; only 1: intro n; only 1: intro m; only 1: intro p; only 1: intros LT EQ; only 1: generalize (lt_trans n m p); only 1: auto with relations).	28.666932106	24623
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	40	0.0.0.0	synth with cache (only 1: intros n m; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl).	0.0280849933624	4
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	40	5.0.0	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: intuition).	0.0268430709839	8
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	40	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0258929729462	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0269000530243	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0246210098267	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0268499851227	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	40	1	synth with cache (only 1: order).	0.0384798049927	22
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	1	synth with cache (only 1: order).	0.0339689254761	18
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	40	0.0.0.0.0.2.0	synth with cache (only 1: intros x y; only 1: rewrite 2!lt_eq_cases; only 1: intuition; only 1: elim (StrictOrder_Irreflexive x); only 1: transitivity y; only 1: auto; only 1: auto).	0.347570896149	33
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40	2.4.2.2	synth with cache (only 1: Bool.destr_bool; only 1: rewrite lt_eq_cases; only 1: rewrite lt_succ_r; only 1: reflexivity).	4.05356907845	1283
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	40	0.3.0	synth with cache (only 1: intros x y H; only 1: apply le_succ_l; only 1: now apply lt_le_incl).	0.0211842060089	6
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	40	1.2.4.9	synth with cache (only 1: intros z Base Step; only 1: apply lt_le_incl; only 1: rewrite lt_succ_r; only 1: auto).	11.3526229858	8292
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	40	0.0.5.0	synth with cache (only 1: intros n m H; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now left).	0.0656139850616	27
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40	1.4.5.0	synth with cache (only 1: intros; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).	3.55050301552	1774
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	40	3.1.1.6.3.0	synth with cache (only 1: intros; only 1: symmetry; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: now rewrite succ_inj_wd).	8.27287697792	4054
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	40	0.5.0	synth with cache (only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0315728187561	8
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.2.0	synth with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl, lt_0_1).	0.0500609874725	16
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	40	0.3.1.0.1	synth with cache (only 1: transitivity 1; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite two_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0334150791168	10
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	2.0.0.8.0	synth with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intuition).	1.20939707756	898
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.0.2.0	synth with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).	0.0944840908051	41
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	6.6.0.0.0	synth with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: intuition order).	12.1356220245	2780
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	40	0.0.3.1	synth with cache (only 1: intros; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.0463650226593	8
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	40	1.6.0	synth with cache (only 1: intro n; only 1: intro H; only 1: intuition order).	0.430294036865	95
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0	synth with cache (only 1: intuition order).	0.01904296875	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	40	0.0.0.2.0	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.0356640815735	7
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	40	2.1.0.1.0	synth with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: intuition order).	0.156214952469	38
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	40	0	synth with cache (only 1: intuition order).	0.0189230442047	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0	synth with cache (only 1: intuition order).	0.0192930698395	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	40	0.0.0.6.0	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.710275173187	109
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	0.0.2.1.0	synth with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.437602996826	53
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	40	0.1.1.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: split; only 1: intro H; only 1: apply le_succ_l; only 1: order; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).	0.129553079605	25
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs_rs'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs'_rs''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.A'A_right	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls_ls'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls'_ls''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.lbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.A'A_left	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.lt_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.le_ind	40	1.1.14.1	synth with cache (only 1: intros Az AS AP n; only 1: apply right_induction; only 1: assumption; only 1: assumption).	4.81370306015	4456
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rlt_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rgt_wd	40	0.0.0.0.7.0.14	synth with cache (only 1: compute; only 1: intros x1 x2 H1 x3 x4 H2; only 1: split; only 1: rewrite H1; only 1: now rewrite H2; only 1: rewrite H1; only 1: now rewrite H2).	8.45061683655	3750
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.lt_wf	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.gt_wf	40
Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40	0.0.0.8.16.7	synth with cache (only 1: intros x x' Hxx'; only 1: intro H; only 1: induction n; only 1: eauto; only 1: simpl; only 1: auto).	10.8089621067	2574
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_unique	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_ancestor	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.SuccPred.succ_pred_approx	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_gives_succ_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_pred_injective	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	40	26	synth with cache (only 1: easy).	0.0953779220581	333
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	40	0.1	synth with cache (only 1: intros a; only 1: reflexivity).	0.011284828186	3
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	40	0.5.9.6.0.0.0.0	synth with cache (only 1: PeanoNat.Nat.cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intro n; only 1: simpl; only 1: intro H; only 1: now rewrite PeanoNat.Nat.pred_succ).	33.2610850334	34619
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	40	1.2.2.8.3	synth with cache (only 1: induction n; only 1: apply PeanoNat.Nat.lt_succ_r; only 1: apply lt_eq_cases; only 1: now right; only 1: now apply PeanoNat.Nat.lt_lt_succ_r).	4.87434792519	3617
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	0.0.0.0.6.0.4.2.1.8	synth with cache (only 1: induction n; only 1: intro m; only 1: simpl; only 1: symmetry; only 1: apply add_0_l; only 1: unfold ofnat; only 1: intros; only 1: rewrite ofnat_succ, add_succ_l; only 1: simpl; only 1: now f_equiv).	6.83866906166	5109
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	40	0.1	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0542130470276	3
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40	4.3.22	synth with cache (only 1: red; only 1: exists 0; only 1: now nzsimpl).	22.9755938053	10389
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	40	0.0.15.0	synth with cache (only 1: intros n m p (q, Hq); only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: exists q; only 1: now rewrite mul_shuffle3, Hq).	2.78791713715	1466
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	40	0.0.0.0.8.1.1	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: split; only 1: intros (q, Hq); only 1: exists q; only 1: now rewrite mul_shuffle3, mul_cancel_l in Hq; only 1: apply mul_divide_mono_l).	5.28604507446	3465
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	40	0.8.0	synth with cache (only 1: intros; only 1: rewrite mul_comm; only 1: apply divide_mul_l, divide_refl).	0.0598680973053	34
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	40	0.0.0.0.0.0.1.0.8	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: exists 0; only 1: now nzsimpl; only 1: exists 1; only 1: now nzsimpl; only 1: intro; only 1: trivial).	3.84438109398	1565
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	40	0.1.1.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.0334889888763	8
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	40	0.0.0.2.0.1.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: apply lt_le_incl, lt_0_1; only 1: apply divide_refl; only 1: exists n; only 1: now nzsimpl; only 1: trivial).	0.109162092209	14
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).	0.0453178882599	7
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	40	0.1.1.0.1.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).	0.0326521396637	9
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40	0.8.0.3.2.0	synth with cache (only 1: intros; only 1: apply divide_0_l; only 1: transitivity (gcd n m); only 1: rewrite H; only 1: now nzsimpl; only 1: trivial using gcd_divide_r).	12.9148800373	6468
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	0.1.1.0.1.2	synth with cache (only 1: intros n m Hn; only 1: apply gcd_unique; only 1: trivial; only 1: trivial using divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial using divide_refl).	0.220242977142	78
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40	3.0.2.5.6	synth with cache (only 1: intros n1 m1 H; only 1: nzsimpl; only 1: rewrite lt_succ_r; only 1: nzsimpl'; only 1: now apply add_le_mono).	25.3147320747	4589
Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	40	0.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: now rewrite le_succ_l; only 1: order').	0.206249952316	6
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	40
Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	2.33364605904	571
Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	40	0.6.0	synth with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!even_spec; only 1: now rewrite Even_succ, Odd_succ).	0.0699319839478	17
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	40	0.7.0	synth with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!odd_spec; only 1: now rewrite Odd_succ, Even_succ).	0.0671100616455	18
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	40	0.0.4.0.0	synth with cache (only 1: intros n m Hm; only 1: apply even_spec in Hm; only 1: rewrite <- !negb_even; only 1: rewrite even_add, Hm; only 1: now destruct (even n)).	0.0364480018616	9
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	40	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	0.122323989868	6
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	40	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).	0.14518904686	6
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	40	0.0.0	synth with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: now nzsimpl).	0.0372791290283	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	40	0.0.0	synth with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0365550518036	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	40	2.0.0.9.0	synth with cache (only 1: intro; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: now nzsimpl').	0.600225925446	295
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	1.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r).	0.0957469940186	7
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	40	0.0.0.2.0	synth with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0685150623322	7
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0358688831329	2
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	40	0.0.0.0.0.5.0.4	synth with cache (only 1: apply log2_unique; only 1: order_pos; only 1: nzsimpl; only 1: split; only 1: order; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: order_pos).	6.90687608719	2307
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	40	1.0.0.1.0.2	synth with cache (only 1: apply log2_unique' with 0; only 1: apply lt_le_incl, lt_0_1; only 1: split; only 1: order_pos; only 1: order_pos; only 1: now nzsimpl).	0.185266017914	52
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	40	0.0.0.0.0.14	synth with cache (only 1: unfold log2_up; only 1: intros a Ha; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	5.59080910683	2029
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.5.0.0.0.0	synth with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order'; only 1: order).	0.148558139801	65
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	40	0.2.1.0.0.1.0	synth with cache (only 1: intros a; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros H; only 1: order_pos; only 1: order).	0.337142944336	124
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	40	0.0	synth with cache (only 1: apply log2_up_eqn0; only 1: order).	0.016939163208	2
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40	1.0.0.5.1.4.1.0.0.1.1	synth with cache (only 1: rewrite <- (pow_1_r 2); only 1: apply log2_up_unique; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: split; only 1: nzsimpl; only 1: rewrite one_succ; only 1: nzsimpl; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: order).	26.9587130547	11046
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	4.1.0	synth with cache (only 1: intros; only 1: compute; only 1: firstorder).	0.022891998291	8
Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	40	6.0	synth with cache (only 1: intros; only 1: CRelationClasses.simpl_crelation).	0.0226480960846	8
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40	0.0.6	synth with cache (only 1: intros x y z H1 H2; only 1: rewrite <- H2; only 1: auto).	0.0288028717041	18
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	40	0.0.0.0.2.0.1.0	synth with cache (only 1: intros; only 1: apply imp_iff_compat_r; only 1: split; only 1: intros; only 1: apply pred_wd in H; only 1: now do 2 rewrite pred_succ in H; only 1: symmetry; only 1: now f_equiv).	0.210574150085	80
Coq.Numbers.NatInt.NZBase.NZBaseProp.CentralInduction.central_induction	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	40	0.1.0.0.0.0.0.0.1.0.0	synth with cache (only 1: intros n m p H1 H2; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_neg_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: apply eq_le_incl; only 1: rewrite H1; only 1: now do 2 rewrite mul_0_l).	3.87336397171	961
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	40	0.0.0.5.0.5	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intro H; only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_pos_l p n m) by assumption; only 1: now rewrite (mul_cancel_l n m p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl)).	8.7914481163	3217
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	40	0.0.0.1.0.6.0.1	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intro H; only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_neg_l p n m); only 1: rewrite (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl); only 1: now setoid_replace (n == m) with (m == n) by split; now intro; only 1: assumption).	6.51669812202	2309
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	1.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).	0.0381109714508	4
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r).	0.0324940681458	3
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	40	1.10.3	synth with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: tauto).	7.89858293533	4719
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	40	0.1.0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: destruct H1 as [H1| H1]; only 1: false_hyp H1 H2; only 1: assumption).	0.0352959632874	6
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	40	10.0.14	synth with cache (only 1: intro n; only 1: intros n1 m1 H; only 1: now apply mul_lt_mono_nonneg).	3.36539006233	3333
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	40	1.0.1.0.1.0	synth with cache (only 1: intros n m H1 H2; only 1: apply mul_le_mono_nonneg; only 1: order; only 1: assumption; only 1: order; only 1: assumption).	0.0382051467896	9
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	40
Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0140058994293	2
Coq.Structures.OrdersTac.OrderFacts.le_refl	40
Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	40
Coq.Structures.OrdersTac.OrderFacts.eq_sym	40	5.1.0	synth with cache (only 1: intros; only 1: apply (@CRelationClasses.symmetry _ _ _ _); only 1: auto).	0.064640045166	27
Coq.Structures.OrdersTac.OrderFacts.le_antisym	40
Coq.Structures.OrdersTac.OrderFacts.neq_sym	40	0	synth with cache (only 1: auto with *).	0.0119080543518	1
Coq.Structures.OrdersTac.OrderFacts.trans	40
Coq.Structures.OrdersTac.OrderFacts.eq_neq	40
Coq.Structures.OrdersTac.OrderFacts.neq_eq	40	0	synth with cache (only 1: eauto using eq_trans, eq_sym).	0.0164771080017	1
Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40
Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	40
Coq.Structures.OrdersTac.OrderFacts.not_gt_le	40	0.2.0.1.0.0	synth with cache (only 1: intros x y H; only 1: destruct (P.lt_total x y); only 1: rewrite P.le_lteq; only 1: intuition; only 1: rewrite P.le_lteq; only 1: intuition).	0.0704870223999	16
Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	40	0.2.0	synth with cache (only 1: intros x y; only 1: rewrite P.le_lteq; only 1: intuition).	0.0328869819641	5
Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40
Coq.Structures.OrdersEx.PairOrderedType.lt_compat	40
Coq.Structures.OrdersEx.PairOrderedType.compare_spec	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	0.0.2.6.53	synth with cache (only 1: intro p; only 1: induction p; only 1: now destruct p; only 1: now f_equal; only 1: now f_equal).	12.6434619427	38809
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_compat	40	4	synth with cache (only 1: solve_proper).	0.201089859009	22
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.compare_spec	40
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_trans	40	3	synth with cache (only 1: Nat.order).	0.140925884247	42
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_not_eq	40	4.0	synth with cache (only 1: intros n m H; only 1: Nat.order).	0.030613899231	6
Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_trans	40	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Z.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0280251502991	3
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_not_eq	40	0	synth with cache (only 1: Z.order).	0.0204229354858	1
Coq.Structures.OrderedTypeEx.Z_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.lt_not_eq	40	48.1	synth with cache (only 1: intros n m H1 H2; only 1: Pos.Private_Tac.order).	18.0724260807	27954
Coq.Structures.OrderedTypeEx.Positive_as_OT.compare	40
Coq.Structures.OrderedTypeEx.N_as_OT.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_refl	40	1	synth with cache (only 1: now Z.swap_greater).	0.031674861908	2
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_sym	40	1	synth with cache (only 1: firstorder).	0.0302240848541	11
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_trans	40
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_trans	40
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_antirefl	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.compare	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.eq_dec	40	0	synth with cache (only 1: decide equality).	0.0306220054626	1
Coq.Structures.OrderedTypeEx.String_as_OT.nat_of_ascii_inverse	40
Coq.Structures.OrderedTypeEx.String_as_OT.lts_tail_unique	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_trans	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.String_as_OT.compare	40
Coq.Structures.Orders.Compare2EqBool.eqb_eq	40
Coq.Structures.Orders.OT_to_Full.le_lteq	40	6	synth with cache (only 1: firstorder).	0.151114940643	117
Coq.Structures.Orders.OTF_LtIsTotal.lt_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_le	40
Coq.Structures.Orders.OTF_to_TTLB.leb_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_trans	40
Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40
Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	40
Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	40
Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	40
Coq.Structures.Orders.TTLB_to_OTF.lt_compat	40
Coq.Structures.Orders.TTLB_to_OTF.le_lteq	40
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	23	synth with cache (only 1: now BinInt.Z.swap_greater).	1.03656315804	1145
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_sym	40	19.9	synth with cache (only 1: intros; only 1: firstorder).	5.26931619644	4982
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40	21.1.1.1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; BinPos.Pos.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: firstorder; only 1: eauto; only 1: eauto).	7.98116493225	6978
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_dec	40
Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40
Coq.Structures.Equalities.UpdateEq.eq_equiv	40	1.7.21.0.1.22	synth with cache (only 1: constructor; only 1: simpl_relation; only 1: auto with *; only 1: intros x' x'' Hx' Hx''; only 1: intros; only 1: eauto).	8.9623131752	20875
Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40
Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	3.0.0.0.0.0	synth with cache (only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: reflexivity).	0.0390129089355	21
Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	40
Coq.Structures.OrderedType.MOT_to_OT.eq_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	40	6.0.11.0.1.24.1	synth with cache (only 1: split; only 1: intuition; only 1: red; only 1: intros; only 1: intuition; only 1: red; only 1: apply Logic.eq_trans).	4.18708395958	7702
Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	40
Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	40	0.1.6	synth with cache (only 1: split; only 1: auto; only 1: auto).	0.0653259754181	28
Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	40	0	synth with cache (only 1: order).	0.0188961029053	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	40	1	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0241079330444	2
Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0	synth with cache (only 1: order).	0.0188269615173	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	0	synth with cache (only 1: order).	0.0174479484558	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	40	0	synth with cache (only 1: order).	0.0179569721222	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	40	0	synth with cache (only 1: order).	0.0177171230316	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	40	0	synth with cache (only 1: order).	0.0341699123383	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	40	0	synth with cache (only 1: order).	0.0162100791931	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	1.1.0	synth with cache (only 1: red; only 1: intro HF; only 1: intuition).	0.0285279750824	13
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	40	0	synth with cache (only 1: order).	0.0154640674591	1
Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	18	synth with cache (only 1: order).	0.501784086227	365
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	40	0	synth with cache (only 1: order).	0.0173921585083	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	40	0	synth with cache (only 1: order).	0.0172238349915	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	40	0	synth with cache (only 1: order).	0.0158739089966	1
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	40	0.0.0.0.0.0.1.0.0.0.3.0.0.7.0.0	synth with cache (only 1: intros; only 1: case (compare x y); only 1: destruct (compare x y); only 1: intros H'; only 1: exists H'; only 1: intuition auto; PeanoNat.Nat.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: intros H'; only 1: exists H'; only 1: auto; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order).	5.27201795578	5040
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	40	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).	0.528985977173	276
Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_eq	40	0.0.0	synth with cache (only 1: intros l x y H H'; only 1: rewrite <- H; only 1: auto).	0.0492961406708	3
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_In	40	1.0.0.2.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intuition; only 1: subst; only 1: firstorder).	0.712833881378	336
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_lt	40	2.1.4.0.0.0.0.14	synth with cache (only 1: induction l; only 1: intros; only 1: auto; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: transitivity y; only 1: auto; only 1: auto).	7.23834300041	6621
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_eq	40	0.17.0.11.6	synth with cache (only 1: intros n m p; only 1: intro H; only 1: intuition; only 1: rewrite H; only 1: auto with ordered_type).	22.7963738441	21751
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_Inf_In	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_Inf	40	2.1.0.0.0.0.0	synth with cache (only 1: simple induction l; only 1: simpl; only 1: intros; only 1: constructor; only 1: simpl; only 1: intros l1 l2 Eq x; only 1: auto).	0.0587389469147	13
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_Inf	40	2.0.0.4	synth with cache (only 1: destruct l; only 1: intros; only 1: constructor; only 1: firstorder using StronglySorted_inv).	0.118701934814	58
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_NoDup	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_eqk	40	3.3	synth with cache (only 1: induction 1; only 1: trivial).	0.0289771556854	15
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_r	40	1	synth with cache (only 1: eauto using OrderTac.eq_trans, OrderTac.eq_sym).	0.0163378715515	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_l	40	0	synth with cache (only 1: auto).	0.015212059021	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_refl	40	0.1	synth with cache (only 1: intros l'; only 1: auto with ordered_type).	0.0192251205444	3
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_refl	40	0	synth with cache (only 1: auto with ordered_type).	0.0155749320984	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_sym	40	0.0	synth with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.022775888443	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_sym	40	0.0	synth with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0289640426636	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_trans	40	0.10.5	synth with cache (only 1: intros x y z; only 1: compute; only 1: order).	0.661103963852	606
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_trans	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_trans	40	1	synth with cache (only 1: eauto with ordered_type).	0.0207228660583	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqk	40	2	synth with cache (only 1: eauto with ordered_type).	0.0474622249603	11
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqke	40	0.0.0.1	synth with cache (only 1: unfold eqk, eqke; only 1: unfold eqk, ltk; only 1: intuition; only 1: order).	0.110883951187	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_equiv	40	3.1.2.1.0.18.0.0.3	synth with cache (only 1: split; only 1: auto with ordered_type; only 1: auto with ordered_type; only 1: apply Build_preorder; only 1: unfold eqk, ltk; only 1: auto with *; only 1: unfold eqk, eqke; only 1: red; only 1: eauto using PeanoNat.Nat.Private_Tac.eq_trans, PeanoNat.Nat.Private_Tac.eq_sym).	14.6173110008	14099
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_equiv	40	0.0.0.0	synth with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.0506808757782	4
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_strorder	40	0.1.5.8.73.0	synth with cache (only 1: constructor; only 1: intro H; only 1: destruct H; only 1: compute; only 1: order; only 1: eauto with ordered_type).	3.51721596718	12901
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat'	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_not_ltk	40	0.0	synth with cache (only 1: unfold eqk, ltk; only 1: auto with ordered_type).	0.0205838680267	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_eqk	40	0	synth with cache (only 1: eauto with ordered_type).	0.0184931755066	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_ltk	40	0	synth with cache (only 1: eauto with ordered_type).	0.0197579860687	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.InA_eqke_eqk	40	2.1.1.2.7	synth with cache (only 1: induction 1; only 1: destruct H; only 1: left; only 1: auto; only 1: auto).	0.510490894318	409
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_alt	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.MapsTo_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_eq	40	8.1.1.2.5	synth with cache (only 1: intros x y z; only 1: unfold eqke, ltk; only 1: intuition; only 1: compute; only 1: now rewrite H).	2.1642768383	1686
Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_lt	40	0.5.2.1.6.0.4	synth with cache (only 1: destruct l; only 1: constructor; only 1: intros H; only 1: intuition; only 1: right; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with *).	14.193253994	5057
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_In	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_NotIn	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_NoDupA	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_1	40	0.0.3.1.1.7.2.6	synth with cache (only 1: intros x l' H H0; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eapply SortA_InfA_InA; only 1: eauto with *; only 1: eauto with *; only 1: solve_proper; only 1: eauto with *; only 1: eauto with ordered_type).	11.1115961075	6570
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_2	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_3	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv	40	0.11.0.5.2	synth with cache (only 1: inversion 1; only 1: unfold MapsTo in *; only 1: invlist InA; only 1: firstorder; only 1: eauto with *).	12.815762043	3509
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_2	40	0.2.10.0	synth with cache (only 1: inversion_clear 1; only 1: induction 1; only 1: eauto with ordered_type; only 1: eauto with *).	0.680008888245	420
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_3	40	0.0.5.1.2	synth with cache (only 1: unfold eqk, eqke; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: intuition; only 1: intuition).	0.86668586731	300
Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.0.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).	0.0428638458252	6
Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	40	0.0.0.0.0.0.0.2.0.0.0.1.0.0.1.0	synth with cache (only 1: case compare_spec; only 1: intro EQ; only 1: split; only 1: easy; only 1: intro H; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: easy; only 1: intro EQ; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity).	14.5894229412	9091
Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40	0.0.0.1.0.0.1.0.1.0.1.1.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).	26.5680279732	9600
Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40	2.0.0.0.1.1.0.1.0.1.1.1.0.1	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intuition).	21.6469180584	9331
Coq.Structures.OrdersFacts.CompareFacts.compare_compat	40
Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	4.0.2.0	synth with cache (only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: reflexivity).	0.0392220020294	13
Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	40	1.0.2	synth with cache (only 1: red; only 1: compute; only 1: iorder).	0.0300359725952	6
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	40	4.6	synth with cache (only 1: repeat red; only 1: order).	0.12016582489	69
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	34	synth with cache (only 1: iorder).	10.7150521278	11538
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0	synth with cache (only 1: iorder).	0.0171809196472	1
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	40	0.0.6.0.0.0	synth with cache (only 1: intros; only 1: rewrite le_lteq; only 1: destruct (compare_spec x y); only 1: intuition; only 1: auto; only 1: auto).	2.06264591217	457
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	40	1.1.1.0.0	synth with cache (only 1: intros; only 1: destruct (compare_spec x y); only 1: iorder; only 1: iorder; only 1: iorder).	0.0516140460968	8
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	40	1.0	synth with cache (only 1: rewrite compare_gt_iff; only 1: iorder).	0.0224528312683	3
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.0.0	synth with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).	0.0251951217651	3
Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40	1.0.1.0.1.1.0.0.3	synth with cache (only 1: unfold eqb; only 1: intros x x' Hxx' y y' Hyy'; only 1: destruct eq_dec; only 1: destruct eq_dec; only 1: auto; only 1: order; only 1: destruct eq_dec; only 1: order; only 1: auto).	9.67527890205	1424
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	40	0.1.3.0	synth with cache (only 1: intro H; only 1: intro EQ; only 1: contradict ltac:(H); only 1: order).	0.029834985733	8
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	40	0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0239608287811	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	40	0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0216147899628	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	40	1	synth with cache (only 1: order).	1.01391482353	2
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	0	synth with cache (only 1: order).	0.0162281990051	1
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	40	0	synth with cache (only 1: order).	0.0156059265137	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0	synth with cache (only 1: order).	0.0156230926514	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	40	2.0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	0.0245380401611	4
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	2.0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	0.026358127594	4
Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0	synth with cache (only 1: order).	0.0153999328613	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	40	0	synth with cache (only 1: order).	0.0161821842194	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	40	0	synth with cache (only 1: order).	0.015016078949	1
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	0	synth with cache (only 1: order).	0.0142440795898	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	40	0.0	synth with cache (only 1: intro H; only 1: order).	0.0177869796753	2
Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	0	synth with cache (only 1: order).	0.0130019187927	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	40	0	synth with cache (only 1: order).	0.0131669044495	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	40	0	synth with cache (only 1: order).	0.0131270885468	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	40	0	synth with cache (only 1: order).	0.0139050483704	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	40	8.4.4.4	synth with cache (only 1: intuition; only 1: order; only 1: order; only 1: order).	12.5294191837	9359
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	40
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40
Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	40
Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	40	0.0	synth with cache (only 1: intros H; only 1: now apply compare_eq_iff).	0.0187330245972	2
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	40	2.0.0.0.0.0.0.0	synth with cache (only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: reflexivity).	0.0544009208679	13
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	0	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0169770717621	1
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	40	2	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0217568874359	3
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	0.0.0.6.0.6	synth with cache (only 1: case leb_spec0; only 1: destr_bool; only 1: intuition; only 1: constructor; only 1: trivial; only 1: trivial).	10.4773709774	4857
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	0.0.10	synth with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).	0.688027858734	190
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	40	1.3.4.2.0.9	synth with cache (only 1: case ltb_spec0; only 1: now rewrite leb_nle, <- compare_lt_iff, compare_nge_iff; only 1: symmetry; only 1: symmetry; only 1: apply leb_le; only 1: now rewrite <- compare_le_iff, compare_ngt_iff).	2.64935803413	2194
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40	0.2.19	synth with cache (only 1: case ltb_spec0; only 1: now rewrite <- compare_lt_iff, compare_refl; only 1: now rewrite <- compare_lt_iff, compare_refl).	0.889544963837	611
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40	1.0.5.0.2.0.13	synth with cache (only 1: case leb_spec0; only 1: now rewrite ltb_nlt, <- compare_le_iff, compare_ngt_iff; only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: case ltb_spec0; only 1: constructor; only 1: intuition).	6.56583809853	4951
Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	40
Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	40	0.0.0	synth with cache (only 1: intros l x y H H'; only 1: rewrite <- H; only 1: auto).	0.0284759998322	3
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	40	3.2.2.1.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: inversion 1; only 1: firstorder; only 1: subst; only 1: constructor; only 1: intuition).	1.3106739521	818
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	0.0.4.2.0.2.12	synth with cache (only 1: intros [| ] ?; only 1: auto; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: transitivity y; only 1: assumption; only 1: assumption).	13.9662320614	11788
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	40	1.5.9	synth with cache (only 1: intro z; only 1: intros; only 1: now rewrite H).	0.877806901932	779
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	40
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	40	0.0.0.1.1.0.0.0	synth with cache (only 1: simple induction l; only 1: simpl; only 1: intros; only 1: constructor; only 1: simpl; only 1: intros; only 1: constructor; only 1: auto).	0.0587289333344	17
Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	40	2.5.1.0.2	synth with cache (only 1: simple induction l; only 1: intros; only 1: auto; only 1: intros H; only 1: intuition).	0.530925035477	335
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	40	4.1.1.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: firstorder; only 1: firstorder; only 1: solve_proper).	0.0857949256897	14
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	40	4.0	synth with cache (only 1: unfold eqk, ltk; only 1: solve_proper).	0.946453094482	12
Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	40	0.1	synth with cache (only 1: reduce; only 1: intuition).	0.0255160331726	3
Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqk	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqke	40	0.0.0	synth with cache (only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: elim (StrictOrder_Irreflexive _ LT)).	0.0334861278534	3
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_eq	40	0	synth with cache (only 1: now intros <-).	0.0271780490875	1
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_lt	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_In	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_NotIn	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_NoDupA	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_1	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_2	40	0.0.0.0.7.0.3.2	synth with cache (only 1: rewrite InA_cons; only 1: intuition; only 1: invlist Sorted; only 1: constructor; only 1: eapply Sort_Inf_In; only 1: eauto; only 1: eauto; only 1: eauto).	6.71411895752	2597
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_3	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	40	6.38	synth with cache (only 1: intros y H0 H1; only 1: now rewrite <- H1).	1.94615292549	1309
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	40	1	synth with cache (only 1: trivial).	0.0142998695374	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	40	4.0	synth with cache (only 1: destruct p; only 1: split).	0.0226080417633	6
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	40	0	synth with cache (only 1: firstorder).	0.0160310268402	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	40	1.0.4	synth with cache (only 1: intros (U, V); only 1: compute in *; only 1: firstorder).	0.035129070282	14
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	40	1	synth with cache (only 1: firstorder).	0.0136830806732	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	40	0	synth with cache (only 1: reflexivity).	0.0135598182678	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	40	2	synth with cache (only 1: firstorder).	0.0160501003265	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	2.1.2	synth with cache (only 1: do 2 rewrite InA_alt; only 1: induction 1; only 1: firstorder).	0.0577008724213	11
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	40	0.6.0.5.21.0.3	synth with cache (only 1: destruct p; only 1: induction 1; only 1: induction l as [| a l IH]; only 1: exists y; only 1: firstorder; only 1: firstorder; only 1: firstorder).	6.30543088913	10056
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	2.10.2	synth with cache (only 1: intros; only 1: rewrite <- H; only 1: auto).	0.61808180809	318
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	40	1.0.2.10	synth with cache (only 1: split; only 1: now destruct 1; only 1: unfold In, MapsTo; only 1: firstorder).	0.427701950073	284
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_eq	40	0.1.4.3	synth with cache (only 1: intros H; only 1: rewrite H; only 1: unfold In, MapsTo; only 1: firstorder).	0.67823600769	235
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	0	synth with cache (only 1: now intros <-).	0.0260961055756	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	0.3.0	synth with cache (only 1: rewrite !In_alt2, Exists_cons; only 1: destruct (split (A:=l)); only 1: intuition).	0.304302930832	85
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	1.11.11.0	synth with cache (only 1: firstorder; only 1: inversion H; only 1: firstorder; only 1: firstorder).	9.38649106026	4711
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_3	40	0.0.1.9	synth with cache (only 1: intros; only 1: invlist InA; only 1: firstorder; only 1: firstorder).	1.1031639576	429
Coq.Structures.EqualitiesFacts.PairDecidableType.eq_dec	40
Coq.Structures.EqualitiesFacts.PairUsualDecidableType.eq_dec	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_eqk	40	3	synth with cache (only 1: firstorder).	0.0533840656281	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_refl	40	1	synth with cache (only 1: auto).	0.014152765274	2
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_refl	40	0	synth with cache (only 1: auto).	0.0149409770966	1
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_sym	40	0.0	synth with cache (only 1: unfold eqk, eqke; only 1: auto).	0.0207571983337	2
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_sym	40	0.0.3.0.0	synth with cache (only 1: unfold eqk, eqke; only 1: intro z; only 1: intros (EQ, LE); only 1: simpl; only 1: intuition).	0.0438940525055	8
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_trans	40	0.13	synth with cache (only 1: intros x y Hxy Hyz Hy; only 1: eauto).	0.619040966034	462
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_trans	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_equiv	40	0.7.0.3.3	synth with cache (only 1: split; only 1: auto; only 1: auto; only 1: intros l'; only 1: eauto).	0.621684074402	375
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_equiv	40	0.0.0.0	synth with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).	0.0467920303345	4
Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqke_eqk	40	3.6.1.2.2	synth with cache (only 1: induction 1; only 1: compute in H; only 1: left; only 1: intuition; only 1: auto).	2.4670779705	1454
Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqk	40	0.2.1	synth with cache (only 1: intros l x y H H'; only 1: rewrite <- H; only 1: intuition).	0.0606129169464	6
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_alt	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.MapsTo_eq	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_eq	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_2	40	1.1.2.10.4.0	synth with cache (only 1: intros; only 1: invlist InA; only 1: induction l; only 1: intuition; only 1: auto using eqke_equiv; only 1: auto using eqke_equiv).	6.26164484024	3235
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_3	40	0.0.0.1.1	synth with cache (only 1: inversion_clear 1; only 1: inversion_clear H0; only 1: intuition; only 1: compute in H0; only 1: intuition).	0.231445074081	59
Coq.Structures.OrdersAlt.Update_OT.lt_strorder	40
Coq.Structures.OrdersAlt.Update_OT.lt_compat	40
Coq.Structures.OrdersAlt.Update_OT.compare_spec	40
Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40
Coq.Structures.OrdersAlt.Backport_OT.lt_trans	40	21	synth with cache (only 1: intuition).	0.189026117325	208
Coq.Structures.OrdersAlt.Backport_OT.compare	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	40
Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	40	0.4.4.0.2.3.2.2.1.6	synth with cache (only 1: intros n m; only 1: revert m; only 1: unfold eq; only 1: Bool.destr_bool; only 1: destruct compare; only 1: intuition; only 1: now right; only 1: revert m; only 1: right; only 1: discriminate).	18.6820578575	25746
Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	40	0.0.0.0.0.0.0.0.4.0.0.0.0.0	synth with cache (only 1: unfold compare; only 1: intros x y; only 1: destruct (compare_spec x y); only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition).	23.8395121098	8320
Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40
Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40
Coq.Structures.GenericMinMax.GenericMinMax.max_l	40
Coq.Structures.GenericMinMax.GenericMinMax.max_r	40
Coq.Structures.GenericMinMax.GenericMinMax.min_l	40
Coq.Structures.GenericMinMax.GenericMinMax.min_r	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold min, gmin; only 1: case compare_spec; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt x y); only 1: auto; only 1: auto; only 1: auto with relations).	0.0455901622772	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	0.0.0.0.0.0.0.0.0.0.1.0.1	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).	2.53986978531	1388
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	40	3.2	synth with cache (only 1: apply max_r; only 1: order).	0.024719953537	7
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	40	1.2.1.8	synth with cache (only 1: pose proof (max_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).	0.462998151779	208
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0	synth with cache (only 1: solve_max).	0.0219149589539	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	40	0.0.2.0.9.8	synth with cache (only 1: destruct (lt_total n m); only 1: solve_max; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: intuition; only 1: now apply max_l; only 1: now apply max_l).	4.28370594978	3171
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	40	1	synth with cache (only 1: solve_max).	0.0533139705658	14
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40	6.0.0.0.0.0.0.0.6	synth with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).	29.8144860268	12087
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	40	0.0.0.0.0.0.0.1.0	synth with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).	0.0707290172577	10
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	40	0.1.0.1.1	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).	0.0393249988556	8
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	40	0	synth with cache (only 1: solve_max).	0.0241391658783	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	40	0.1.0.1.1	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order)).	0.0407478809357	8
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	40	0.4.0	synth with cache (only 1: split; only 1: solve_max; only 1: solve_max).	0.171959877014	27
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	40	0	synth with cache (only 1: solve_max).	0.0247910022736	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.0908181667328	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	40	0.0.0	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0385241508484	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	40	0.0.1	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0695898532867	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply min_l; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply min_r).	4.23733901978	1883
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	40	0.0.0.0.0.1.11	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order; only 1: order; only 1: intuition; only 1: order; only 1: order).	9.46307992935	4962
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	0.1	synth with cache (only 1: apply min_l; only 1: order).	0.0185921192169	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	2.2.1.12	synth with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).	0.638785123825	366
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0	synth with cache (only 1: solve_min).	0.0235319137573	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	4	synth with cache (only 1: solve_min).	0.0995099544525	25
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	1	synth with cache (only 1: solve_min).	0.0315489768982	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	40	0.0.2.1.0.0.1.1.2	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order; only 1: order; only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order; only 1: order).	6.97670292854	3694
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	40	0.0.0.0.0.0.0.1.3	synth with cache (only 1: split; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: solve_min).	2.38835716248	744
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	0.1.0.2.2	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).	0.0362379550934	10
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	40	0	synth with cache (only 1: solve_min).	0.0231630802155	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	40	0.1.0.1.2	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order)).	0.0373568534851	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	0.5.0	synth with cache (only 1: split; only 1: solve_min; only 1: solve_min).	0.107678890228	31
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	40	1	synth with cache (only 1: solve_min).	0.0220339298248	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.0672280788422	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	40	0.0.0	synth with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.0402460098267	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	40	1.1.0.0.0	synth with cache (only 1: intros Hnm Hpq; only 1: pose proof (max_le_compat_l _ _ m Hpq) as LE; only 1: pose proof (max_le_compat_r _ _ p Hnm) as LE'; only 1: apply min_glb_iff; only 1: solve_min).	0.0567400455475	7
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	40	0.5	synth with cache (only 1: apply max_r || apply max_l; only 1: solve_min).	0.0432450771332	7
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	40	0.8	synth with cache (only 1: apply min_l; only 1: solve_max).	0.0787239074707	24
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	40	0.0.0.1.0.0.0.0.1.0.0.0	synth with cache (only 1: intros Eqf Lef x y; only 1: destruct (min_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: auto; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: auto; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).	2.29834389687	877
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	40	0.0.0.0.0.0.0.0.0.13	synth with cache (only 1: apply min_case_strong; only 1: intros x y H [E| E]; only 1: left; only 1: rewrite <- H; only 1: auto; only 1: right; only 1: rewrite <- H; only 1: auto; only 1: auto with relations; only 1: auto with relations).	2.12763881683	1987
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40	2.0.23.17.1	synth with cache (only 1: intros; only 1: set (m := max x y) in *; only 1: apply max_mono; only 1: eauto with *; only 1: eauto with *).	17.1078760624	9498
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	40	0.0.19.4	synth with cache (only 1: intros x x' Hxx'; only 1: apply min_mono; only 1: congruence; only 1: auto).	1.24996089935	1508
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	40	3.3.0.1.1.9.3.0	synth with cache (only 1: intros Compat Hl Hr; only 1: intros; only 1: apply max_case_strong; only 1: intros; only 1: destruct H; only 1: auto; only 1: auto; only 1: auto).	9.30513215065	7719
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: auto; only 1: auto).	0.0245780944824	4
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.0.0.4	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).	0.0243759155273	8
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: auto; only 1: auto).	0.0246589183807	4
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.0.0.2	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).	0.0250358581543	6
Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	40	22.4.0.9.16	synth with cache (only 1: intros n m; only 1: revert m; only 1: intro x; only 1: intros; only 1: congruence).	19.641906023	32839
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_dec	40
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40
Coq.ZArith.Znat.nat_N_Z	40	2.0.0.3.1	synth with cache (only 1: induction n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: reflexivity).	0.124623060226	56
Coq.ZArith.Znat.N_nat_Z	40
Coq.ZArith.Znat.positive_nat_Z	40	0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.0429530143738	5
Coq.ZArith.Znat.positive_N_Z	40	0.1.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: simpl; only 1: f_equal).	0.0323388576508	4
Coq.ZArith.Znat.positive_N_nat	40	1	synth with cache (only 1: trivial).	0.018739938736	2
Coq.ZArith.Znat.positive_nat_N	40	0.1.0.0.0.0.1	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	0.0557692050934	9
Coq.ZArith.Znat.Z_N_nat	40	15	synth with cache (only 1: now destruct n).	0.230338811874	223
Coq.ZArith.Znat.Z_nat_N	40	0.0.5.3.29	synth with cache (only 1: destruct n; only 1: now Z.nzsimpl; only 1: Nat2N.nat2N; only 1: simpl; only 1: trivial).	1.72730088234	988
Coq.ZArith.Znat.Zabs_N_nat	40	11	synth with cache (only 1: now destruct n).	0.138098955154	33
Coq.ZArith.Znat.Zabs_nat_N	40	1.1.0.0.0.119	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply positive_nat_N; only 1: apply positive_nat_N).	7.44050598145	9765
Coq.ZArith.Znat.N2Z.id	40	0	synth with cache (only 1: now destruct n).	0.0201668739319	1
Coq.ZArith.Znat.N2Z.inj	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: now try N.order'; only 1: intros Hn; only 1: easy || now destruct Hb; only 1: intros Hn; only 1: easy || now destruct Hb; only 1: simpl; only 1: intros H; only 1: destr_eq H; only 1: now f_equal).	0.0738101005554	10
Coq.ZArith.Znat.N2Z.inj_iff	40	1.0.3.2	synth with cache (only 1: split; only 1: apply SuccNat2Pos.inj; only 1: intros EQ; only 1: now Morphisms.f_equiv).	1.70125198364	359
Coq.ZArith.Znat.N2Z.is_nonneg	40	0.2.1.2.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: Z.order; only 1: simpl; only 1: easy).	0.0420939922333	10
Coq.ZArith.Znat.N2Z.inj_0	40	0	synth with cache (only 1: trivial).	0.0182619094849	1
Coq.ZArith.Znat.N2Z.inj_pos	40	0	synth with cache (only 1: reflexivity).	0.0183410644531	1
Coq.ZArith.Znat.N2Z.inj_compare	40	1.0.0.0.0.3.0	synth with cache (only 1: destruct n, m; only 1: easy || now destruct y; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: reflexivity).	0.253346920013	64
Coq.ZArith.Znat.N2Z.inj_le	40	2.2.0.0.0.4.1	synth with cache (only 1: unfold N.leb, N.le; only 1: destruct n, m; only 1: reflexivity; only 1: simpl; only 1: easy'; only 1: now split; only 1: easy').	4.4280359745	1764
Coq.ZArith.Znat.N2Z.inj_lt	40	1.11	synth with cache (only 1: unfold Z.lt, Z.le; only 1: now rewrite inj_compare).	3.51863312721	1223
Coq.ZArith.Znat.N2Z.inj_ge	40	0.1	synth with cache (only 1: unfold Z.le, Z.ge; only 1: now rewrite inj_compare).	0.0256090164185	3
Coq.ZArith.Znat.N2Z.inj_gt	40	0.3	synth with cache (only 1: unfold Z.lt, Z.gt; only 1: now rewrite inj_compare).	0.0259878635406	5
Coq.ZArith.Znat.N2Z.inj_abs_N	40	4.1.6.3.138.24	synth with cache (only 1: Z.bitwise; only 1: destruct z; only 1: now Z.nzsimpl; only 1: simpl; only 1: trivial; only 1: trivial).	25.6866738796	73462
Coq.ZArith.Znat.N2Z.inj_add	40	2	synth with cache (only 1: now destruct n, m).	0.0210340023041	3
Coq.ZArith.Znat.N2Z.inj_mul	40	0	synth with cache (only 1: now destruct n, m).	0.0221230983734	1
Coq.ZArith.Znat.N2Z.inj_sub_max	40
Coq.ZArith.Znat.N2Z.inj_sub	40
Coq.ZArith.Znat.N2Z.inj_succ	40	0.0.5.2.5.1.0.0.27	synth with cache (only 1: N.induct n; only 1: simpl; only 1: easy; only 1: intros; only 1: destruct n; only 1: now Z.nzsimpl; only 1: simpl; only 1: f_equal; only 1: now destruct p).	17.3539099693	10517
Coq.ZArith.Znat.N2Z.inj_pred_max	40	3.0.0.0.17.29	synth with cache (only 1: unfold Z.succ, Z.pred; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct p).	3.52342987061	4668
Coq.ZArith.Znat.N2Z.inj_pred	40	4.0.19	synth with cache (only 1: destruct n; only 1: easy || now destruct 1; only 1: now destruct p).	8.10058379173	4680
Coq.ZArith.Znat.N2Z.inj_min	40
Coq.ZArith.Znat.N2Z.inj_max	40
Coq.ZArith.Znat.N2Z.inj_div	40
Coq.ZArith.Znat.N2Z.inj_mod	40
Coq.ZArith.Znat.N2Z.inj_quot	40
Coq.ZArith.Znat.N2Z.inj_rem	40
Coq.ZArith.Znat.N2Z.inj_div2	40	0.0.0.0.12.0.12	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct p as [p| p| ]; only 1: reflexivity; only 1: trivial; only 1: simpl; only 1: now f_equal).	1.89349484444	1411
Coq.ZArith.Znat.N2Z.inj_quot2	40	1.0.0	synth with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: now destruct p).	0.0326130390167	4
Coq.ZArith.Znat.N2Z.inj_pow	40
Coq.ZArith.Znat.N2Z.inj_testbit	40	0.0.1.0.0.0.0.0.0	synth with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial).	0.0730488300323	10
Coq.ZArith.Znat.Z2N.id	40	1.0.0.0.0	synth with cache (only 1: intro Hn; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).	0.047600030899	6
Coq.ZArith.Znat.Z2N.inj	40
Coq.ZArith.Znat.Z2N.inj_iff	40	10.0.0.2.1	synth with cache (only 1: split; only 1: apply N2Z.inj; only 1: Z.order; only 1: Z.order; only 1: congruence).	9.1184990406	4046
Coq.ZArith.Znat.Z2N.inj_0	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0218279361725	2
Coq.ZArith.Znat.Z2N.inj_pos	40	0.1.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0561280250549	8
Coq.ZArith.Znat.Z2N.inj_neg	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0212168693542	2
Coq.ZArith.Znat.Z2N.inj_add	40	3.6.5	synth with cache (only 1: unfold Z.le, Z.min; only 1: intros; only 1: now destruct n, m).	8.33787608147	2585
Coq.ZArith.Znat.Z2N.inj_mul	40	1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2).	1.04176402092	149
Coq.ZArith.Znat.Z2N.inj_succ	40
Coq.ZArith.Znat.Z2N.inj_sub	40
Coq.ZArith.Znat.Z2N.inj_pred	40	0.0.0.0.3	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: now destruct p; only 1: trivial).	0.140769958496	16
Coq.ZArith.Znat.Z2N.inj_compare	40	1.0.1.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: easy || now destruct y; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1; only 1: trivial; only 1: now destruct 1).	3.25750994682	847
Coq.ZArith.Znat.Z2N.inj_le	40	0.2.20	synth with cache (only 1: unfold N.le, N.ge; only 1: intros; only 1: now rewrite N2Z.inj_compare).	2.07773280144	878
Coq.ZArith.Znat.Z2N.inj_lt	40
Coq.ZArith.Znat.Z2N.inj_min	40
Coq.ZArith.Znat.Z2N.inj_max	40
Coq.ZArith.Znat.Z2N.inj_div	40
Coq.ZArith.Znat.Z2N.inj_mod	40
Coq.ZArith.Znat.Z2N.inj_quot	40
Coq.ZArith.Znat.Z2N.inj_rem	40
Coq.ZArith.Znat.Z2N.inj_div2	40	0.0.0.0.0.17.0.1.2	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: induction p as [p IH| p IH| ]; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).	4.78736400604	3997
Coq.ZArith.Znat.Z2N.inj_quot2	40	13.1.1.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: simpl; only 1: now destruct p).	2.10527992249	1559
Coq.ZArith.Znat.Z2N.inj_pow	40
Coq.ZArith.Znat.Z2N.inj_testbit	40
Coq.ZArith.Znat.Zabs2N.abs_N_spec	40	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0448160171509	7
Coq.ZArith.Znat.Zabs2N.abs_N_nonneg	40	0.0	synth with cache (only 1: intros; only 1: now destruct n).	0.0282759666443	2
Coq.ZArith.Znat.Zabs2N.id_abs	40	1	synth with cache (only 1: now destruct n).	0.0175840854645	2
Coq.ZArith.Znat.Zabs2N.id	40	0	synth with cache (only 1: now destruct n).	0.0204110145569	1
Coq.ZArith.Znat.Zabs2N.inj_0	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.02015209198	2
Coq.ZArith.Znat.Zabs2N.inj_pos	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0211369991302	2
Coq.ZArith.Znat.Zabs2N.inj_neg	40	0	synth with cache (only 1: reflexivity).	0.0177330970764	1
Coq.ZArith.Znat.Zabs2N.inj_opp	40	0.0.0.0.0.2	synth with cache (only 1: destruct n; only 1: now Z.nzsimpl; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0918049812317	8
Coq.ZArith.Znat.Zabs2N.inj_succ	40	1.1.0.1.0.1	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1 || intros _; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: now destruct 1).	0.375277996063	51
Coq.ZArith.Znat.Zabs2N.inj_add	40	0.1.0.1.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).	3.16539096832	667
Coq.ZArith.Znat.Zabs2N.inj_mul	40	9	synth with cache (only 1: now destruct n, m).	0.663694858551	174
Coq.ZArith.Znat.Zabs2N.inj_sub	40
Coq.ZArith.Znat.Zabs2N.inj_pred	40	0.0.3.3.3.9	synth with cache (only 1: destruct n; only 1: easy; only 1: now destruct p; only 1: simpl; only 1: intros; only 1: now destruct p).	12.4548840523	5308
Coq.ZArith.Znat.Zabs2N.inj_compare	40
Coq.ZArith.Znat.Zabs2N.inj_le	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).	0.0316689014435	3
Coq.ZArith.Znat.Zabs2N.inj_lt	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt, N.lt; only 1: now rewrite Z2N.inj_compare).	0.0362777709961	3
Coq.ZArith.Znat.Zabs2N.inj_min	40
Coq.ZArith.Znat.Zabs2N.inj_max	40
Coq.ZArith.Znat.Zabs2N.inj_quot	40
Coq.ZArith.Znat.Zabs2N.inj_rem	40
Coq.ZArith.Znat.Zabs2N.inj_pow	40
Coq.ZArith.Znat.Zabs2N.inj_succ_abs	40	1.1.1.1.0.1.11	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: simpl; only 1: now rewrite Pos.add_1_r).	10.5703539848	4238
Coq.ZArith.Znat.Zabs2N.inj_add_abs	40	7.0.0.0.0.1	synth with cache (only 1: assert (forall p q, Z.abs_N (Z.pos p ÷ Z.pos q) = (N.pos p / N.pos q)%N); only 1: intros; only 1: rewrite abs_N_nonneg; only 1: now apply Z2N.inj_quot; only 1: now apply Z.quot_pos; only 1: now destruct n, m).	3.30458807945	1275
Coq.ZArith.Znat.Zabs2N.inj_mul_abs	40	0	synth with cache (only 1: now destruct n, m).	0.0249750614166	1
Coq.ZArith.Znat.Nat2Z.inj_0	40	0	synth with cache (only 1: trivial).	0.0159029960632	1
Coq.ZArith.Znat.Nat2Z.inj_succ	40	0.0.0.0.3.0.0.0.2.6	synth with cache (only 1: unfold Z.succ, Z.pred; only 1: simpl; only 1: destruct n; only 1: simpl; only 1: easy; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r).	13.7127940655	5308
Coq.ZArith.Znat.Nat2Z.is_nonneg	40	3.0.2.24.2	synth with cache (only 1: apply Z.lt_succ_r; only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: reflexivity).	1.94539403915	2179
Coq.ZArith.Znat.Nat2Z.id	40	5.0.1.17	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: apply SuccNat2Pos.id_succ).	1.49262094498	589
Coq.ZArith.Znat.Nat2Z.inj	40
Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros H; only 1: now f_equal).	0.0422420501709	6
Coq.ZArith.Znat.Nat2Z.inj_compare	40
Coq.ZArith.Znat.Nat2Z.inj_le	40
Coq.ZArith.Znat.Nat2Z.inj_lt	40
Coq.ZArith.Znat.Nat2Z.inj_ge	40
Coq.ZArith.Znat.Nat2Z.inj_gt	40
Coq.ZArith.Znat.Nat2Z.inj_abs_nat	40
Coq.ZArith.Znat.Nat2Z.inj_add	40
Coq.ZArith.Znat.Nat2Z.inj_mul	40
Coq.ZArith.Znat.Nat2Z.inj_sub_max	40
Coq.ZArith.Znat.Nat2Z.inj_sub	40
Coq.ZArith.Znat.Nat2Z.inj_pred_max	40
Coq.ZArith.Znat.Nat2Z.inj_pred	40
Coq.ZArith.Znat.Nat2Z.inj_min	40
Coq.ZArith.Znat.Nat2Z.inj_max	40
Coq.ZArith.Znat.Z2Nat.id	40	1.1.0.0.0.2.4.0.1.3	synth with cache (only 1: intro Hn; only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: now destruct Hn).	16.0479469299	10916
Coq.ZArith.Znat.Z2Nat.inj	40
Coq.ZArith.Znat.Z2Nat.inj_iff	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: now apply Z2N.inj; only 1: intros; only 1: now subst).	0.0368719100952	5
Coq.ZArith.Znat.Z2Nat.inj_0	40	0.11	synth with cache (only 1: Nat.bitwise; only 1: trivial).	0.127324104309	46
Coq.ZArith.Znat.Z2Nat.inj_pos	40	0	synth with cache (only 1: trivial).	0.0153398513794	1
Coq.ZArith.Znat.Z2Nat.inj_neg	40	0	synth with cache (only 1: reflexivity).	0.0166251659393	1
Coq.ZArith.Znat.Z2Nat.inj_add	40
Coq.ZArith.Znat.Z2Nat.inj_mul	40
Coq.ZArith.Znat.Z2Nat.inj_succ	40
Coq.ZArith.Znat.Z2Nat.inj_sub	40
Coq.ZArith.Znat.Z2Nat.inj_pred	40
Coq.ZArith.Znat.Z2Nat.inj_compare	40
Coq.ZArith.Znat.Z2Nat.inj_le	40
Coq.ZArith.Znat.Z2Nat.inj_lt	40
Coq.ZArith.Znat.Z2Nat.inj_min	40
Coq.ZArith.Znat.Z2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.abs_nat_spec	40	0	synth with cache (only 1: now destruct n).	0.0194799900055	1
Coq.ZArith.Znat.Zabs2Nat.abs_nat_nonneg	40	0.0	synth with cache (only 1: intros; only 1: now destruct n).	0.0272521972656	2
Coq.ZArith.Znat.Zabs2Nat.id_abs	40	1.0.0.0.1.0.1.0.0.0.1.0.0.0.18	synth with cache (only 1: destruct n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	10.0524861813	8009
Coq.ZArith.Znat.Zabs2Nat.id	40	1.0.0.1	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.0296378135681	6
Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0	synth with cache (only 1: trivial).	0.0145399570465	1
Coq.ZArith.Znat.Zabs2Nat.inj_pos	40	0	synth with cache (only 1: reflexivity).	0.0176169872284	1
Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0	synth with cache (only 1: reflexivity).	0.0171217918396	1
Coq.ZArith.Znat.Zabs2Nat.inj_succ	40
Coq.ZArith.Znat.Zabs2Nat.inj_add	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul	40
Coq.ZArith.Znat.Zabs2Nat.inj_sub	40
Coq.ZArith.Znat.Zabs2Nat.inj_pred	40
Coq.ZArith.Znat.Zabs2Nat.inj_compare	40
Coq.ZArith.Znat.Zabs2Nat.inj_le	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le; only 1: now rewrite nat_compare_le, Z2Nat.inj_compare).	0.0866940021515	3
Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).	0.0835380554199	3
Coq.ZArith.Znat.Zabs2Nat.inj_min	40
Coq.ZArith.Znat.Zabs2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.inj_succ_abs	40
Coq.ZArith.Znat.Zabs2Nat.inj_add_abs	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40
Coq.ZArith.Znat.inj_neq	40
Coq.ZArith.Znat.inj_minus2	40
Coq.ZArith.Wf_Z.Z_of_nat_complete	40
Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40	0.1.0.0	synth with cache (only 1: intros H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	0.031543970108	5
Coq.ZArith.Wf_Z.Z_of_nat_prop	40
Coq.ZArith.Wf_Z.Z_of_nat_set	40
Coq.ZArith.Wf_Z.natlike_ind	40
Coq.ZArith.Wf_Z.natlike_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.R_wf	40
Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec2	40
Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec3	40	0.0.1.0.1.2.2.4.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros P Ho Hrec; only 1: induction z as [z IH] using (well_founded_induction_type R_wf); only 1: destruct z; only 1: intros Hz; only 1: apply Ho; only 1: intros Hz; only 1: set (y := Z.pred (Z.pos p)); only 1: assert (LE : 0 <= y) by (unfold y; now apply Z.lt_le_pred); only 1: assert (EQ : Z.pos p = Z.succ y) by (unfold y; now rewrite Z.succ_pred); only 1: apply Hrec, IH; only 1: split; only 1: split; only 1: trivial; only 1: apply Z.lt_pred_l; only 1: trivial; only 1: intros Hz; only 1: now destruct Hz).	30.0370919704	21046
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_ind	40	2.0.1.0.0.3.1.0.0	synth with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: trivial).	8.49908900261	2913
Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_rec	40	0.0.1.0.0.0.0.0.0.0.0.1.0.1	synth with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: intros Hx; only 1: destruct x; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: assert (0 < 0) by now apply Z.le_lt_trans with y; only 1: discriminate; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: now destruct Hx).	4.71356296539	2120
Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_induction	40	0.0.0	synth with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: auto).	0.0383698940277	3
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_ind	40	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros P z Hrec x Hx; only 1: rewrite <- (Z.sub_simpl_r x z); only 1: apply Z.le_0_sub in Hx; only 1: pattern (x - z); only 1: apply Zlt_0_rec; only 1: clear x Hx; only 1: intros x IH Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: rewrite <- (Z.sub_simpl_r y z); only 1: apply IH; only 1: split; only 1: now rewrite Z.le_0_sub; only 1: now apply Z.lt_sub_lt_add_r; only 1: now rewrite <- (Z.add_le_mono_r 0 x z); only 1: trivial).	19.3870470524	7458
Coq.ZArith.Zpow_facts.Zpower_pos_1_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40	0.0.4.1.1.0.0.2.23.1	synth with cache (only 1: unfold Z.pow_pos; only 1: set (y := Z.pred (Z.pos p)); only 1: generalize 1; only 1: induction p; only 1: intros; only 1: reflexivity; only 1: simpl in *; only 1: trivial; only 1: simpl; only 1: Z.order).	14.3222830296	11320
Coq.ZArith.Zpow_facts.Zpower_pos_pos	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone	40
Coq.ZArith.Zpow_facts.Zpower_lt_monotone	40	0.0.0.61.1.21	synth with cache (only 1: intros H1; only 1: intros (Ha, H); only 1: apply Z.pow_lt_mono_r; only 1: Z.order; only 1: Z.order; only 1: Z.order).	39.6872878075	37802
Coq.ZArith.Zpow_facts.Zpower_gt_1	40
Coq.ZArith.Zpow_facts.Zmult_power	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	40
Coq.ZArith.Zpow_facts.Zpower2_lt_lin	40
Coq.ZArith.Zpow_facts.Zpower2_le_lin	40
Coq.ZArith.Zpow_facts.Zpower2_Psize	40
Coq.ZArith.Zpow_facts.Zpower_mod	40
Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	40
Coq.ZArith.Zpow_facts.Zpow_mod_correct	40
Coq.ZArith.Zpow_facts.Zpower_divide	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower	40
Coq.ZArith.Zpow_facts.prime_power_prime	40
Coq.ZArith.Zpow_facts.Zdivide_power_2	40
Coq.ZArith.Zpow_def.Zpower_theory	40
Coq.ZArith.Zcompare.Zcompare_Gt_trans	40
Coq.ZArith.Zcompare.Zcompare_opp	40
Coq.ZArith.Zcompare.Zcompare_Gt_spec	40
Coq.ZArith.Zcompare.Zcompare_plus_compat	40
Coq.ZArith.Zcompare.Zplus_compare_compat	40
Coq.ZArith.Zcompare.Zcompare_succ_Gt	40
Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40
Coq.ZArith.Zcompare.Zcompare_succ_compat	40
Coq.ZArith.Zcompare.Zcompare_mult_compat	40
Coq.ZArith.Zcompare.Zmult_compare_compat_l	40
Coq.ZArith.Zcompare.Zmult_compare_compat_r	40
Coq.ZArith.Zcompare.Zcompare_elim	40
Coq.ZArith.Zcompare.Zcompare_eq_case	40	4.1.2.0.0	synth with cache (only 1: intros a n a0 l h Hl EQ; only 1: case Z.compare_spec; only 1: trivial; only 1: Z.order; only 1: Z.order).	0.270726919174	148
Coq.ZArith.Zcompare.Zle_compare	40	0.1.0.0.2	synth with cache (only 1: intros EQ n Hn; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: Z.order).	0.141685009003	37
Coq.ZArith.Zcompare.Zlt_compare	40	1.0.2.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.order; only 1: trivial; only 1: Z.order).	0.0411241054535	14
Coq.ZArith.Zcompare.Zge_compare	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: trivial).	0.0346457958221	5
Coq.ZArith.Zcompare.Zgt_compare	40	0.0	synth with cache (only 1: intros x y H; only 1: now rewrite H).	0.0331859588623	2
Coq.ZArith.Zquot.Zquot_0_r	40
Coq.ZArith.Zquot.Zrem_0_r	40	45	synth with cache (only 1: now destruct a).	10.5750339031	14391
Coq.ZArith.Zquot.Zrem_0_l	40	1	synth with cache (only 1: now destruct a).	0.0225911140442	2
Coq.ZArith.Zquot.Zquot_0_l	40	1	synth with cache (only 1: now destruct a).	0.0233898162842	2
Coq.ZArith.Zquot.Z_rem_same	40
Coq.ZArith.Zquot.Z_rem_mult	40
Coq.ZArith.Zquot.Zquot_opp_l	40
Coq.ZArith.Zquot.Zquot_opp_r	40
Coq.ZArith.Zquot.Zrem_opp_l	40
Coq.ZArith.Zquot.Zrem_opp_r	40
Coq.ZArith.Zquot.Zquot_opp_opp	40
Coq.ZArith.Zquot.Zrem_opp_opp	40
Coq.ZArith.Zquot.Zrem_sgn	40
Coq.ZArith.Zquot.Zrem_sgn2	40
Coq.ZArith.Zquot.Zrem_lt_pos	40
Coq.ZArith.Zquot.Zrem_lt_neg	40
Coq.ZArith.Zquot.Zrem_lt_pos_pos	40	0.0.2.0	synth with cache (only 1: intros Ha Hb; only 1: apply Z.rem_bound_pos; only 1: Z.order; only 1: trivial).	0.518265008926	86
Coq.ZArith.Zquot.Zrem_lt_pos_neg	40	0.2.0	synth with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: lia).	0.102629899979	24
Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.1.0	synth with cache (only 1: intros; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).	0.18284702301	42
Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.3.0	synth with cache (only 1: intros; only 1: generalize (Zrem_lt_neg a b); only 1: lia).	0.289865970612	48
Coq.ZArith.Zquot.Remainder_equiv	40
Coq.ZArith.Zquot.Zquot_mod_unique_full	40
Coq.ZArith.Zquot.Zquot_unique_full	40
Coq.ZArith.Zquot.Zrem_unique_full	40	0.0.0.0.7	synth with cache (only 1: intros; only 1: destruct (Zquot_mod_unique_full a b q r); only 1: auto; only 1: auto; only 1: auto).	0.302212953568	106
Coq.ZArith.Zquot.Z_quot_pos	40
Coq.ZArith.Zquot.Z_quot_lt	40
Coq.ZArith.Zquot.Z_quot_monotone	40
Coq.ZArith.Zquot.Z_mult_quot_le	40
Coq.ZArith.Zquot.Z_mult_quot_ge	40
Coq.ZArith.Zquot.Z_quot_exact_full	40
Coq.ZArith.Zquot.Zrem_le	40
Coq.ZArith.Zquot.Zquot_le_upper_bound	40
Coq.ZArith.Zquot.Zquot_lt_upper_bound	40
Coq.ZArith.Zquot.Zquot_le_lower_bound	40
Coq.ZArith.Zquot.Zquot_sgn	40
Coq.ZArith.Zquot.Z_rem_plus	40
Coq.ZArith.Zquot.Z_quot_plus	40
Coq.ZArith.Zquot.Z_quot_plus_l	40
Coq.ZArith.Zquot.Zquot_mult_cancel_r	40
Coq.ZArith.Zquot.Zquot_mult_cancel_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_r	40
Coq.ZArith.Zquot.Zrem_rem	40
Coq.ZArith.Zquot.Zmult_rem	40
Coq.ZArith.Zquot.Zplus_rem	40
Coq.ZArith.Zquot.Zplus_rem_idemp_l	40
Coq.ZArith.Zquot.Zplus_rem_idemp_r	40
Coq.ZArith.Zquot.Zmult_rem_idemp_l	40
Coq.ZArith.Zquot.Zmult_rem_idemp_r	40
Coq.ZArith.Zquot.Zquot_Zquot	40
Coq.ZArith.Zquot.Zquot_mult_le	40
Coq.ZArith.Zquot.Zrem_divides	40
Coq.ZArith.Zquot.Zquot2_odd_remainder	40
Coq.ZArith.Zquot.Zrem_odd	40
Coq.ZArith.Zquot.Zrem_even	40
Coq.ZArith.Zquot.Zeven_rem	40
Coq.ZArith.Zquot.Zodd_rem	40
Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	40
Coq.ZArith.Zquot.Zquot_Zdiv_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_zero	40
Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.binary_value	40	18.17	synth with cache (only 1: intro H; only 1: constructor).	1.75996017456	2519
Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.two_compl_value	40	4.2.1.12.0.7	synth with cache (only 1: intro n; only 1: inversion 1; only 1: generalize dependent n; only 1: intros b Hb IH; only 1: intros le_mn2; only 1: exact 0%Z).	2.73965501785	3056
Coq.ZArith.Zdigits.ENCODING_VALUE.Zmod2_twice	40
Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_binary	40
Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_two_compl	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_Sn	40	0.1	synth with cache (only 1: intros n m Hn; only 1: trivial).	0.0796029567719	24
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_pos	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.two_compl_value_Sn	40	1.2.0	synth with cache (only 1: simpl; only 1: intros; only 1: auto).	0.0474510192871	14
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn_z	40	0	synth with cache (only 1: auto).	0.0193841457367	1
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_div2_value	40	1.0.0.0.0.0.0.0.0.1.0.0.2.0	synth with cache (only 1: destruct z; only 1: intros Hn; only 1: simpl; only 1: Z.order; only 1: intros; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: now destruct 1 || trivial).	10.7313981056	3711
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Pdiv2	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zdiv2_two_power_nat	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn_z	40	1.0.0.0.0	synth with cache (only 1: intros; only 1: destruct z as [| p| p]; only 1: auto; only 1: auto; only 1: auto).	0.10431599617	19
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zeven_bit_value	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zodd_bit_value	40	0.0.0.3.2.0.0.1.2	synth with cache (only 1: destruct z; only 1: intros Hb; only 1: simpl; only 1: easy; only 1: now destruct p; only 1: destruct p; only 1: tauto || (intro H; elim H); only 1: tauto || (intro H; elim H); only 1: tauto || (intro H; elim H)).	3.43303489685	1532
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zge_minus_two_power_nat_S	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zlt_two_power_nat_S	40
Coq.ZArith.Zdigits.COHERENT_VALUE.binary_to_Z_to_binary	40
Coq.ZArith.Zdigits.COHERENT_VALUE.two_compl_to_Z_to_two_compl	40
Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_binary_to_Z	40
Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_two_compl_to_Z	40
Coq.ZArith.BinInt.Z.eq_dec	40	0.0.7	synth with cache (only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.0431950092316	10
Coq.ZArith.BinInt.Z.pos_sub_spec	40
Coq.ZArith.BinInt.Z.pos_sub_discr	40
Coq.ZArith.BinInt.Z.pos_sub_diag	40
Coq.ZArith.BinInt.Z.pos_sub_lt	40
Coq.ZArith.BinInt.Z.pos_sub_gt	40
Coq.ZArith.BinInt.Z.pos_sub_opp	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	40	14	synth with cache (only 1: now destruct n).	0.261538028717	122
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	40	0.0.0.2.1.35	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	1.30537796021	2396
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	40	0.0.0.1.24	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: trivial; only 1: trivial).	0.965428113937	833
Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	40
Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	40	0.2.0.0.0.2.7	synth with cache (only 1: destruct n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl).	0.951206922531	459
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	40
Coq.ZArith.BinInt.Z.one_succ	40	0.4	synth with cache (only 1: simpl; only 1: now f_equal).	0.0229170322418	6
Coq.ZArith.BinInt.Z.two_succ	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0234730243683	2
Coq.ZArith.BinInt.Z.add_0_l	40	0	synth with cache (only 1: now destruct n).	0.0191309452057	1
Coq.ZArith.BinInt.Z.add_succ_l	40
Coq.ZArith.BinInt.Z.opp_0	40	0.0	synth with cache (only 1: simpl; only 1: now f_equal).	0.0211730003357	2
Coq.ZArith.BinInt.Z.opp_succ	40	6.3.0.0.1.25	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct p).	4.14582395554	3030
Coq.ZArith.BinInt.Z.succ_pred	40
Coq.ZArith.BinInt.Z.pred_succ	40	0.0	synth with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).	0.0255210399628	2
Coq.ZArith.BinInt.Z.sub_0_r	40	0.0.0.0.0.46	synth with cache (only 1: destruct n; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	3.24647498131	8695
Coq.ZArith.BinInt.Z.sub_succ_r	40
Coq.ZArith.BinInt.Z.mul_0_l	40	0	synth with cache (only 1: now destruct n).	0.0193300247192	1
Coq.ZArith.BinInt.Z.mul_succ_l	40
Coq.ZArith.BinInt.Z.eqb_eq	40
Coq.ZArith.BinInt.Z.ltb_lt	40
Coq.ZArith.BinInt.Z.leb_le	40
Coq.ZArith.BinInt.Z.compare_eq_iff	40
Coq.ZArith.BinInt.Z.compare_sub	40
Coq.ZArith.BinInt.Z.compare_antisym	40
Coq.ZArith.BinInt.Z.compare_lt_iff	40	1	synth with cache (only 1: reflexivity).	0.546735048294	104
Coq.ZArith.BinInt.Z.compare_le_iff	40	2.0.2.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: now split; only 1: now split; only 1: now split).	0.570951223373	67
Coq.ZArith.BinInt.Z.lt_succ_r	40
Coq.ZArith.BinInt.Z.max_l	40
Coq.ZArith.BinInt.Z.max_r	40	0.0.3.2.2.0	synth with cache (only 1: unfold le, max; only 1: rewrite N.compare_antisym; only 1: case N.compare_spec; only 1: now destruct compare; only 1: intuition; only 1: intuition).	2.09348917007	943
Coq.ZArith.BinInt.Z.min_l	40
Coq.ZArith.BinInt.Z.min_r	40	0.1.0.1.1.0	synth with cache (only 1: unfold le, min; only 1: rewrite (compare_antisym n m); only 1: case compare_spec; only 1: trivial; only 1: now destruct 2; only 1: intuition).	0.145610809326	43
Coq.ZArith.BinInt.Z.peano_ind	40
Coq.ZArith.BinInt.Z.bi_induction	40
Coq.ZArith.BinInt.Z.abs_eq	40	2.1	synth with cache (only 1: intro H; only 1: now destruct n).	0.265349149704	52
Coq.ZArith.BinInt.Z.abs_neq	40	0.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1; only 1: trivial).	0.0371010303497	5
Coq.ZArith.BinInt.Z.sgn_null	40	0.0.0.0.0.0.2	synth with cache (only 1: destruct n; only 1: intros H; only 1: now f_equal; only 1: intros H; only 1: destr_eq H; only 1: intros H; only 1: destr_eq H).	0.0614230632782	26
Coq.ZArith.BinInt.Z.sgn_pos	40
Coq.ZArith.BinInt.Z.sgn_neg	40	0	synth with cache (only 1: now destruct n).	0.0458860397339	1
Coq.ZArith.BinInt.Z.pow_0_r	40	0	synth with cache (only 1: now destruct n).	0.0382850170135	1
Coq.ZArith.BinInt.Z.pow_succ_r	40
Coq.ZArith.BinInt.Z.pow_neg_r	40	0.0.1.1.2.1.5	synth with cache (only 1: revert m; only 1: destruct m; only 1: now destruct n; only 1: intros H; only 1: destr_eq H; only 1: intros H; only 1: reflexivity).	0.949944972992	400
Coq.ZArith.BinInt.Z.pow_pos_fold	40	0	synth with cache (only 1: now nzsimpl').	0.0413479804993	1
Coq.ZArith.BinInt.Z.square_spec	40
Coq.ZArith.BinInt.Z.sqrtrem_spec	40
Coq.ZArith.BinInt.Z.sqrt_spec	40
Coq.ZArith.BinInt.Z.sqrt_neg	40	4	synth with cache (only 1: now destruct n).	0.244464874268	69
Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40
Coq.ZArith.BinInt.Z.log2_spec	40
Coq.ZArith.BinInt.Z.log2_nonpos	40	0.1.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1 || intros _; only 1: now destruct 1 || intros _; only 1: simpl; only 1: trivial).	0.0425069332123	7
Coq.ZArith.BinInt.Z.even_spec	40
Coq.ZArith.BinInt.Z.odd_spec	40
Coq.ZArith.BinInt.Z.double_spec	40	0	synth with cache (only 1: trivial).	0.017128944397	1
Coq.ZArith.BinInt.Z.succ_double_spec	40	0.1.0.0.0.1.3	synth with cache (only 1: destruct n; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial).	0.885894060135	111
Coq.ZArith.BinInt.Z.pred_double_spec	40	0	synth with cache (only 1: now destruct n).	0.0196390151978	1
Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_mod	40
Coq.ZArith.BinInt.Z.pos_div_eucl_bound	40
Coq.ZArith.BinInt.Z.mod_pos_bound	40
Coq.ZArith.BinInt.Z.mod_neg_bound	40
Coq.ZArith.BinInt.Z.quotrem_eq	40
Coq.ZArith.BinInt.Z.quot_rem'	40
Coq.ZArith.BinInt.Z.quot_rem	40	0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros Hb; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: now destruct quotrem).	0.1170399189	17
Coq.ZArith.BinInt.Z.rem_bound_pos	40
Coq.ZArith.BinInt.Z.rem_opp_l'	40
Coq.ZArith.BinInt.Z.rem_opp_r'	40	0.0.1.0.0.1.0.2.0.0.1.0.0.1.0.5.0.1	synth with cache (only 1: destruct b as [| b| b]; only 1: reflexivity; only 1: induction a; only 1: trivial; only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: induction a; only 1: trivial; only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).	23.6258890629	20602
Coq.ZArith.BinInt.Z.rem_opp_l	40
Coq.ZArith.BinInt.Z.rem_opp_r	40
Coq.ZArith.BinInt.Z.divide_Zpos	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40
Coq.ZArith.BinInt.Z.ggcd_gcd	40
Coq.ZArith.BinInt.Z.ggcd_correct_divisors	40
Coq.ZArith.BinInt.Z.gcd_divide_l	40
Coq.ZArith.BinInt.Z.gcd_divide_r	40	0.2.1.0.0.0.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite mul_comm).	0.0789859294891	22
Coq.ZArith.BinInt.Z.gcd_greatest	40
Coq.ZArith.BinInt.Z.gcd_nonneg	40
Coq.ZArith.BinInt.Z.ggcd_opp	40
Coq.ZArith.BinInt.Z.testbit_of_N	40	0.0.1.0.0.0.0.0.0.0.1.0.0.0.0.1	synth with cache (only 1: destruct a as [| [a| a| ]], n as [| n]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	14.7040579319	9836
Coq.ZArith.BinInt.Z.testbit_of_N'	40	0.0.0.1.0.0.1.0.1.0.2	synth with cache (only 1: intros EQ; only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: trivial; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: easy).	3.92153000832	2155
Coq.ZArith.BinInt.Z.testbit_Zpos	40	1.4.1.4.0.4.0	synth with cache (only 1: intro Hn; only 1: destruct a as [| a| a]; only 1: simpl; only 1: now destruct n; only 1: simpl; only 1: now destruct n; only 1: now destruct n).	3.40957283974	2133
Coq.ZArith.BinInt.Z.testbit_Zneg	40
Coq.ZArith.BinInt.Z.div2_spec	40	7	synth with cache (only 1: now f_equal).	0.017501115799	8
Coq.ZArith.BinInt.Z.testbit_0_l	40	5	synth with cache (only 1: now destruct n).	0.0182502269745	6
Coq.ZArith.BinInt.Z.testbit_neg_r	40	9	synth with cache (only 1: now induction n).	0.0422480106354	16
Coq.ZArith.BinInt.Z.testbit_odd_0	40
Coq.ZArith.BinInt.Z.testbit_even_0	40
Coq.ZArith.BinInt.Z.testbit_odd_succ	40
Coq.ZArith.BinInt.Z.testbit_even_succ	40
Coq.ZArith.BinInt.Z.shiftr_spec_aux	40
Coq.ZArith.BinInt.Z.shiftl_spec_low	40
Coq.ZArith.BinInt.Z.shiftl_spec_high	40
Coq.ZArith.BinInt.Z.shiftr_spec	40
Coq.ZArith.BinInt.Z.lor_spec	40
Coq.ZArith.BinInt.Z.land_spec	40
Coq.ZArith.BinInt.Z.ldiff_spec	40
Coq.ZArith.BinInt.Z.lxor_spec	40
Coq.ZArith.BinInt.Z.gt_lt_iff	40
Coq.ZArith.BinInt.Z.gt_lt	40	4.2.0.11	synth with cache (only 1: destruct (le_gt_cases m n); only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff; only 1: apply N.gt_lt_iff).	4.8736410141	2677
Coq.ZArith.BinInt.Z.lt_gt	40	0	synth with cache (only 1: apply gt_lt_iff).	0.0139439105988	1
Coq.ZArith.BinInt.Z.ge_le_iff	40	4.2.6	synth with cache (only 1: unfold leb, le; only 1: rewrite compare_gt_iff; only 1: reflexivity).	3.62211799622	1267
Coq.ZArith.BinInt.Z.ge_le	40	0.0.0.1.0.6.1	synth with cache (only 1: unfold le, min; only 1: case compare_spec; only 1: intuition; only 1: easy; only 1: intuition; only 1: easy; only 1: intuition).	4.20463395119	1326
Coq.ZArith.BinInt.Z.le_ge	40	0	synth with cache (only 1: apply ge_le_iff).	0.0154469013214	1
Coq.ZArith.BinInt.Z.gtb_ltb	40
Coq.ZArith.BinInt.Z.geb_leb	40
Coq.ZArith.BinInt.Z.gtb_lt	40
Coq.ZArith.BinInt.Z.geb_le	40
Coq.ZArith.BinInt.Z.gtb_spec	40
Coq.ZArith.BinInt.Z.geb_spec	40
Coq.ZArith.BinInt.Z.add_reg_l	40
Coq.ZArith.BinInt.Z.mul_reg_l	40
Coq.ZArith.BinInt.Z.mul_reg_r	40	0.11	synth with cache (only 1: rewrite 2!(mul_comm _ p); only 1: exact (fun Hp => proj1 (mul_cancel_l n m p Hp))).	0.88233590126	200
Coq.ZArith.BinInt.Z.opp_eq_mul_m1	40	0.0.1.0.0.0.0.1.26	synth with cache (only 1: destruct n; only 1: nzsimpl; only 1: now f_equal; only 1: simpl; only 1: rewrite ?Pos.mul_1_r; only 1: trivial; only 1: simpl; only 1: rewrite ?Pos.mul_1_r; only 1: trivial).	6.74856090546	2626
Coq.ZArith.BinInt.Z.add_diag	40	0.0.1	synth with cache (only 1: rewrite two_succ; only 1: nzsimpl; only 1: now nzsimpl).	0.415715932846	4
Coq.ZArith.BinInt.Z.compare_opp	40	0.0.0.0.0.1.0.0.0.0.0.0.0.0.4	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite <- ?Pos.compare_antisym; only 1: trivial; only 1: trivial; only 1: trivial; only 1: simpl; only 1: apply Pos.compare_antisym).	10.9077999592	5739
Coq.ZArith.BinInt.Z.add_compare_mono_l	40
Coq.ZArith.BinInt.Z.testbit_mod_pow2	40
Coq.ZArith.BinInt.Z.testbit_ones	40
Coq.ZArith.BinInt.Z.testbit_ones_nonneg	40	0.0.4.0.0.0.0.0.0	synth with cache (only 1: destruct (leb_spec 0 i), (ltb_spec i n); only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: now try order'; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial).	1.56381082535	487
Coq.ZArith.BinInt.Pos2Z.id	40	1	synth with cache (only 1: now destruct p).	0.0200328826904	2
Coq.ZArith.BinInt.Pos2Z.inj	40	0	synth with cache (only 1: congruence).	0.0116281509399	1
Coq.ZArith.BinInt.Pos2Z.inj_iff	40	0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: congruence).	0.0210628509521	3
Coq.ZArith.BinInt.Pos2Z.is_pos	40	4	synth with cache (only 1: now destruct p).	0.0169970989227	5
Coq.ZArith.BinInt.Pos2Z.is_nonneg	40	7	synth with cache (only 1: now destruct p).	0.0310320854187	8
Coq.ZArith.BinInt.Pos2Z.inj_1	40	0	synth with cache (only 1: easy).	0.0120589733124	1
Coq.ZArith.BinInt.Pos2Z.inj_xO	40	0.2	synth with cache (only 1: simpl; only 1: trivial).	0.10803604126	4
Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0.0	synth with cache (only 1: simpl; only 1: easy).	0.019190788269	2
Coq.ZArith.BinInt.Pos2Z.inj_succ	40	1.0	synth with cache (only 1: rewrite <- Pos.add_1_r; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	0.0176501274109	3
Coq.ZArith.BinInt.Pos2Z.inj_add	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0162620544434	2
Coq.ZArith.BinInt.Pos2Z.inj_sub	40
Coq.ZArith.BinInt.Pos2Z.inj_sub_max	40
Coq.ZArith.BinInt.Pos2Z.inj_pred	40	1.3.0.0.3	synth with cache (only 1: destruct p; only 1: intros; only 1: trivial; only 1: trivial; only 1: now destruct 1 || intros _).	0.678410053253	250
Coq.ZArith.BinInt.Pos2Z.inj_mul	40	1	synth with cache (only 1: reflexivity).	0.0138330459595	2
Coq.ZArith.BinInt.Pos2Z.inj_pow_pos	40
Coq.ZArith.BinInt.Pos2Z.inj_pow	40	0	synth with cache (only 1: now apply Pos.iter_swap_gen).	0.0191190242767	1
Coq.ZArith.BinInt.Pos2Z.inj_square	40	1.0	synth with cache (only 1: simpl; only 1: trivial).	0.0157051086426	3
Coq.ZArith.BinInt.Pos2Z.inj_compare	40	0	synth with cache (only 1: reflexivity).	0.0132691860199	1
Coq.ZArith.BinInt.Pos2Z.inj_leb	40	0	synth with cache (only 1: reflexivity).	0.0121178627014	1
Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0.0	synth with cache (only 1: unfold Pos.ltb, Pos.lt; only 1: reflexivity).	0.0177969932556	2
Coq.ZArith.BinInt.Pos2Z.inj_eqb	40	0	synth with cache (only 1: reflexivity).	0.00983500480652	1
Coq.ZArith.BinInt.Pos2Z.inj_max	40	0.0.0.0.0.6.1.10.5.23	synth with cache (only 1: revert q; only 1: unfold Z.le, Z.max; only 1: unfold Pos.max; only 1: intros H; only 1: simpl in *; only 1: case Pos.compare_spec; only 1: congruence; only 1: congruence; only 1: intros; only 1: f_equal).	25.9392719269	28092
Coq.ZArith.BinInt.Pos2Z.inj_min	40	0.23.0.2	synth with cache (only 1: unfold Pos.min; only 1: rewrite Pos2Nat.inj_compare; only 1: unfold Z.le, Z.min; only 1: now case Z.compare_spec).	13.9336378574	12374
Coq.ZArith.BinInt.Pos2Z.inj_sqrt	40	0.2	synth with cache (only 1: unfold Z.sqrtrem, Z.sqrt, Pos.sqrt; only 1: trivial).	0.0169999599457	4
Coq.ZArith.BinInt.Pos2Z.inj_gcd	40	1	synth with cache (only 1: reflexivity).	0.00984191894531	2
Coq.ZArith.BinInt.Pos2Z.inj_divide	40
Coq.ZArith.BinInt.Pos2Z.inj_testbit	40	0.6.0.1.1.1.6.0	synth with cache (only 1: intro Hn; only 1: destruct n as [| n| n]; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct Hn).	2.2182598114	1567
Coq.ZArith.BinInt.Pos2Z.inj_neg	40	0	synth with cache (only 1: congruence).	0.0125479698181	1
Coq.ZArith.BinInt.Pos2Z.inj_neg_iff	40	0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: congruence).	0.0231199264526	3
Coq.ZArith.BinInt.Pos2Z.inj_pos	40	0	synth with cache (only 1: now injection 1).	0.0126740932465	1
Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.0256021022797	4
Coq.ZArith.BinInt.Pos2Z.neg_is_neg	40	4	synth with cache (only 1: now destruct p).	0.0145308971405	5
Coq.ZArith.BinInt.Pos2Z.neg_is_nonpos	40	3	synth with cache (only 1: easy).	0.0292620658875	17
Coq.ZArith.BinInt.Pos2Z.pos_is_pos	40	0	synth with cache (only 1: reflexivity).	0.0111861228943	1
Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0	synth with cache (only 1: easy).	0.0170600414276	1
Coq.ZArith.BinInt.Pos2Z.neg_le_pos	40	0	synth with cache (only 1: easy).	0.0157790184021	1
Coq.ZArith.BinInt.Pos2Z.neg_lt_pos	40	0	synth with cache (only 1: easy).	0.0126309394836	1
Coq.ZArith.BinInt.Pos2Z.neg_le_neg	40
Coq.ZArith.BinInt.Pos2Z.neg_lt_neg	40
Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	3.0	synth with cache (only 1: unfold Pos.le, Pos.sub; only 1: easy').	0.0216281414032	5
Coq.ZArith.BinInt.Pos2Z.pos_lt_pos	40	6.0	synth with cache (only 1: intros; only 1: auto).	0.0178599357605	8
Coq.ZArith.BinInt.Pos2Z.neg_xO	40	0	synth with cache (only 1: reflexivity).	0.0116980075836	1
Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0176570415497	2
Coq.ZArith.BinInt.Pos2Z.pos_xO	40	0	synth with cache (only 1: reflexivity).	0.0120689868927	1
Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0	synth with cache (only 1: reflexivity).	0.0130870342255	1
Coq.ZArith.BinInt.Pos2Z.opp_neg	40	0	synth with cache (only 1: trivial).	0.0116791725159	1
Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0	synth with cache (only 1: reflexivity).	0.0113070011139	1
Coq.ZArith.BinInt.Pos2Z.add_neg_neg	40	0	synth with cache (only 1: reflexivity).	0.00963377952576	1
Coq.ZArith.BinInt.Pos2Z.add_pos_neg	40	3	synth with cache (only 1: split).	0.0169432163239	4
Coq.ZArith.BinInt.Pos2Z.add_neg_pos	40	0	synth with cache (only 1: reflexivity).	0.0131750106812	1
Coq.ZArith.BinInt.Pos2Z.add_pos_pos	40	0	synth with cache (only 1: reflexivity).	0.0125238895416	1
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_l	40
Coq.ZArith.BinInt.Pos2Z.testbit_neg	40	0.2.2.1.1.1.7.1.0	synth with cache (only 1: intro Hn; only 1: destruct n as [| n| n]; only 1: simpl Z.to_N; only 1: unfold Z.testbit; only 1: now destruct a as [| [| | ]| ]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct Hn).	15.1859760284	11356
Coq.ZArith.BinInt.Pos2Z.testbit_pos	40	0	synth with cache (only 1: apply Z.testbit_Zpos).	0.0138320922852	1
Coq.ZArith.BinInt.Z2Pos.id	40
Coq.ZArith.BinInt.Z2Pos.inj	40
Coq.ZArith.BinInt.Z2Pos.inj_iff	40
Coq.ZArith.BinInt.Z2Pos.to_pos_nonpos	40
Coq.ZArith.BinInt.Z2Pos.inj_1	40	0.0	synth with cache (only 1: simpl; only 1: now f_equal).	0.0206220149994	2
Coq.ZArith.BinInt.Z2Pos.inj_double	40
Coq.ZArith.BinInt.Z2Pos.inj_succ_double	40	0	synth with cache (only 1: now destruct x).	0.0253100395203	1
Coq.ZArith.BinInt.Z2Pos.inj_succ	40
Coq.ZArith.BinInt.Z2Pos.inj_add	40
Coq.ZArith.BinInt.Z2Pos.inj_sub	40
Coq.ZArith.BinInt.Z2Pos.inj_pred	40	0.2.1.0.0.0.75	synth with cache (only 1: Z.nzsimpl'; only 1: destruct x; only 1: easy; only 1: simpl; only 1: intros H; only 1: now destruct p; only 1: easy).	9.11632084846	13849
Coq.ZArith.BinInt.Z2Pos.inj_mul	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.111371994019	4
Coq.ZArith.BinInt.Z2Pos.inj_pow	40
Coq.ZArith.BinInt.Z2Pos.inj_pow_pos	40
Coq.ZArith.BinInt.Z2Pos.inj_compare	40	0.2.4.0.0.12	synth with cache (only 1: intros H; only 1: destruct x; only 1: intros; only 1: easy; only 1: easy || now destruct y; only 1: easy).	1.30603408813	710
Coq.ZArith.BinInt.Z2Pos.inj_leb	40	0.0.0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: easy; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0707859992981	5
Coq.ZArith.BinInt.Z2Pos.inj_ltb	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0650079250336	4
Coq.ZArith.BinInt.Z2Pos.inj_eqb	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.205579996109	4
Coq.ZArith.BinInt.Z2Pos.inj_max	40
Coq.ZArith.BinInt.Z2Pos.inj_min	40
Coq.ZArith.BinInt.Z2Pos.inj_sqrt	40	2.0.0.0.0.0.6	synth with cache (only 1: destruct x; only 1: simpl; only 1: now rewrite ?Pos.min_1_r, <- ?Pos2Z.inj_min; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite ?Pos.min_1_r, <- ?Pos2Z.inj_min).	0.368382930756	194
Coq.ZArith.BinInt.Z2Pos.inj_gcd	40	0.0.0.1	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.091500043869	22
Coq.ZArith.BinInt.Zplus_minus_eq	40
Coq.ZArith.BinInt.Zpos_eq	40	0.0	synth with cache (only 1: intros n m H; only 1: now subst).	0.0213701725006	2
Coq.ZArith.BinInt.ZL0	40	0	synth with cache (only 1: trivial).	0.00997304916382	1
Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40	8	synth with cache (only 1: now Z.nzsimpl').	0.17907500267	19
Coq.ZArith.BinInt.Z_eq_mult	40	4	synth with cache (only 1: now destruct m).	0.101266145706	12
Coq.ZArith.Zcomplements.floor_gt0	40	1.1	synth with cache (only 1: intros; only 1: reflexivity).	0.0266149044037	4
Coq.ZArith.Zcomplements.floor_ok	40
Coq.ZArith.Zcomplements.Z_lt_abs_rec	40
Coq.ZArith.Zcomplements.Z_lt_abs_induction	40
Coq.ZArith.Zcomplements.Zcase_sign	40
Coq.ZArith.Zcomplements.sqr_pos	40	18	synth with cache (only 1: now destruct n).	0.866998195648	146
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_correct	40
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil	40	0	synth with cache (only 1: trivial).	0.0158889293671	1
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_cons	40
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil_inv	40
Coq.ZArith.Zeven.Zeven_equiv	40
Coq.ZArith.Zeven.Zodd_equiv	40
Coq.ZArith.Zeven.Zeven_bool_iff	40
Coq.ZArith.Zeven.Zodd_bool_iff	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4	synth with cache (only 1: destruct n; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	29.23427701	9566
Coq.ZArith.Zeven.Zodd_even_bool	40	0.0.0.0.0.0.0.19.0.8.23	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: now destruct p; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	5.11062002182	6795
Coq.ZArith.Zeven.Zeven_odd_bool	40	0.0.0.0.0.0.0.0.1.0.0.0.0.1.0.9.27	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	19.9937551022	15962
Coq.ZArith.Zeven.Zeven_odd_dec	40
Coq.ZArith.Zeven.Zeven_dec	40	0.0.2.0.2.2.3.0.0.0.4.4.7.1.0.11.15	synth with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: auto; only 1: auto; only 1: now right; only 1: destruct p; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: now destruct p; only 1: now destruct p; only 1: now right; only 1: simpl; only 1: auto; only 1: auto).	33.0331139565	34090
Coq.ZArith.Zeven.Zodd_dec	40	0.0.0.0.0.0.0.0.0.0.0.2.0.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: destruct p; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right).	16.9961838722	6623
Coq.ZArith.Zeven.Zeven_not_Zodd	40
Coq.ZArith.Zeven.Zodd_not_Zeven	40	0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: intuition).	0.0585629940033	5
Coq.ZArith.Zeven.Zeven_Sn	40	4.6.4.0	synth with cache (only 1: boolify_even_odd; only 1: intuition; only 1: unfold Z.succ, Z.pred; only 1: now destruct n as [| [| | ]| [| | ]]).	1.90545105934	1174
Coq.ZArith.Zeven.Zodd_Sn	40
Coq.ZArith.Zeven.Zeven_pred	40	2.18.3.0	synth with cache (only 1: boolify_even_odd; only 1: intros; only 1: unfold Z.succ, Z.pred; only 1: now destruct n as [| [| | ]| [| | ]]).	7.16000199318	5129
Coq.ZArith.Zeven.Zodd_pred	40
Coq.ZArith.Zeven.Zeven_div2	40	0	synth with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.0293660163879	1
Coq.ZArith.Zeven.Zodd_div2	40	0.0.3.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: destruct n as [| [| | ]| [| | ]]; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: now rewrite Pos.pred_double_succ; only 1: easy; only 1: simpl; only 1: easy).	21.2370481491	3875
Coq.ZArith.Zeven.Zquot2_odd_eqn	40
Coq.ZArith.Zeven.Zeven_quot2	40	4.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Hn; only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.413694858551	16
Coq.ZArith.Zeven.Zodd_quot2	40	1.1.5.3.0.3.0	synth with cache (only 1: intros a Ha; only 1: simpl; only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: simpl; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: simpl; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	26.9731118679	6672
Coq.ZArith.Zeven.Zodd_quot2_neg	40	2.3.0.0	synth with cache (only 1: intros Hn Hn'; only 1: apply Zodd_bool_iff in Hn'; only 1: apply Zodd_bool_iff in Hn'; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	1.20980787277	86
Coq.ZArith.Zeven.Zquot2_opp	40
Coq.ZArith.Zeven.Zquot2_quot	40
Coq.ZArith.Zeven.Z_modulo_2	40
Coq.ZArith.Zeven.Zsplit2	40
Coq.ZArith.Zeven.Zeven_ex	40	2.1.0.1	synth with cache (only 1: intros; only 1: exists (Z.div2 n); only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.19277215004	8
Coq.ZArith.Zeven.Zodd_ex	40	0.0.0.0.1	synth with cache (only 1: boolify_even_odd; only 1: intros Hn; only 1: exists (Z.div2 n); only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now rewrite Hn).	0.321940898895	55
Coq.ZArith.Zeven.Zeven_2p	40	8.7.4.3.13	synth with cache (only 1: Z.nzsimpl'; only 1: destruct p; only 1: now Z.nzsimpl; only 1: now destruct p; only 1: now destruct p).	27.1002440453	15874
Coq.ZArith.Zeven.Zodd_2p_plus_1	40
Coq.ZArith.Zeven.Zeven_plus_Zodd	40
Coq.ZArith.Zeven.Zeven_plus_Zeven	40
Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0734968185425	4
Coq.ZArith.Zeven.Zodd_plus_Zodd	40	0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0735011100769	4
Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40
Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40
Coq.ZArith.Zeven.Zodd_mult_Zodd	40
Coq.ZArith.Zmisc.iter_nat_of_Z	40
Coq.ZArith.Znumtheory.Zdivide_opp_r	40
Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0	synth with cache (only 1: apply Z.divide_opp_r).	0.0176467895508	1
Coq.ZArith.Znumtheory.Zdivide_opp_l	40
Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	40	0	synth with cache (only 1: apply Z.divide_opp_l).	0.0176270008087	1
Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40
Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	40	0	synth with cache (only 1: apply Z.divide_abs_l).	0.0168449878693	1
Coq.ZArith.Znumtheory.Zmult_one	40
Coq.ZArith.Znumtheory.Zdivide_bounds	40
Coq.ZArith.Znumtheory.Zmod_divide	40	0.0.2.25.0.0	synth with cache (only 1: intros a b Hb H; only 1: exists (a / b); only 1: rewrite Z.mul_comm; only 1: rewrite Z.div_exact; only 1: auto; only 1: Z.order).	37.2348840237	17501
Coq.ZArith.Znumtheory.Zdivide_mod	40	0.1.3.0.4.0.0	synth with cache (only 1: intros a b; only 1: intros (c, Hc); only 1: zero_or_not b; only 1: rewrite Hc; only 1: subst; only 1: apply Z.mod_mul; only 1: trivial).	1.52623414993	587
Coq.ZArith.Znumtheory.Zdivide_dec	40
Coq.ZArith.Znumtheory.Z_lt_neq	40	6.0.7.1	synth with cache (only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: eapply Z.Private_Tac.lt_irrefl; only 1: Z.order_pos).	4.39255905151	1883
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40
Coq.ZArith.Znumtheory.Zdivide_le	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	40
Coq.ZArith.Znumtheory.Zmod_div_mod	40
Coq.ZArith.Znumtheory.Zmod_divide_minus	40
Coq.ZArith.Znumtheory.Zdivide_mod_minus	40
Coq.ZArith.Znumtheory.Zis_gcd_sym	40	1.1.1.0.14.0.17	synth with cache (only 1: intros n Hn; only 1: intros y [H1 H2]; only 1: split; only 1: trivial; only 1: trivial; only 1: intros; only 1: auto).	15.6135969162	15900
Coq.ZArith.Znumtheory.Zis_gcd_0	40
Coq.ZArith.Znumtheory.Zis_gcd_1	40	0.3.1.24.41.22	synth with cache (only 1: intros p; only 1: split; only 1: intuition; only 1: auto with zarith; only 1: intros a b Ha; only 1: trivial).	31.4253587723	31104
Coq.ZArith.Znumtheory.Zis_gcd_refl	40	0.0.0.0	synth with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).	0.0316298007965	4
Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.0626609325409	5
Coq.ZArith.Znumtheory.Zis_gcd_opp	40
Coq.ZArith.Znumtheory.Zis_gcd_0_abs	40
Coq.ZArith.Znumtheory.Zis_gcd_unique	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	40
Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid_rec	40
Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.0.0.0.0.0	synth with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: assert (c | d) by auto; only 1: assert (d | c) by auto; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).	0.048709154129	6
Coq.ZArith.Znumtheory.Zis_gcd_bezout	40
Coq.ZArith.Znumtheory.Zis_gcd_mult	40
Coq.ZArith.Znumtheory.rel_prime_bezout	40
Coq.ZArith.Znumtheory.bezout_rel_prime	40
Coq.ZArith.Znumtheory.Gauss	40
Coq.ZArith.Znumtheory.rel_prime_mult	40
Coq.ZArith.Znumtheory.rel_prime_cross_prod	40
Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_sym	40	1.0.0.6.2	synth with cache (only 1: induction 1; only 1: split; only 1: intuition; only 1: intuition; only 1: auto with zarith).	1.32658314705	490
Coq.ZArith.Znumtheory.rel_prime_div	40
Coq.ZArith.Znumtheory.rel_prime_1	40	1.1.0.20.2	synth with cache (only 1: intros H; only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).	2.57295393944	1912
Coq.ZArith.Znumtheory.not_rel_prime_0	40
Coq.ZArith.Znumtheory.rel_prime_mod	40
Coq.ZArith.Znumtheory.rel_prime_mod_rev	40
Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	40
Coq.ZArith.Znumtheory.prime_divisors	40
Coq.ZArith.Znumtheory.prime_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_le_prime	40	0.3.3	synth with cache (only 1: intro z; only 1: intros y (Hy, Hy'); only 1: auto).	0.557045221329	64
Coq.ZArith.Znumtheory.prime_mult	40
Coq.ZArith.Znumtheory.not_prime_0	40	5.64.26	synth with cache (only 1: intuition; only 1: case H; only 1: Z.order').	14.4920289516	14212
Coq.ZArith.Znumtheory.not_prime_1	40	77	synth with cache (only 1: now destruct 1 || intros _).	3.11288189888	3273
Coq.ZArith.Znumtheory.prime_2	40
Coq.ZArith.Znumtheory.prime_3	40
Coq.ZArith.Znumtheory.prime_ge_2	40
Coq.ZArith.Znumtheory.Z_0_1_more	40
Coq.ZArith.Znumtheory.prime_alt	40
Coq.ZArith.Znumtheory.square_not_prime	40
Coq.ZArith.Znumtheory.prime_div_prime	40
Coq.ZArith.Znumtheory.Zgcd_is_gcd	40
Coq.ZArith.Znumtheory.Zgcd_spec	40
Coq.ZArith.Znumtheory.Zdivide_Zgcd	40
Coq.ZArith.Znumtheory.Zis_gcd_gcd	40
Coq.ZArith.Znumtheory.Zgcd_div_swap0	40
Coq.ZArith.Znumtheory.Zgcd_div_swap	40
Coq.ZArith.Znumtheory.Zgcd_ass	40
Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_dec	40
Coq.ZArith.Znumtheory.prime_dec_aux	40
Coq.ZArith.Znumtheory.prime_dec	40
Coq.ZArith.Znumtheory.not_prime_divide	40
Coq.ZArith.Zdiv.Z_div_mod_POS	40
Coq.ZArith.Zdiv.Z_div_mod	40
Coq.ZArith.Zdiv.Remainder_equiv	40
Coq.ZArith.Zdiv.Z_div_mod_full	40
Coq.ZArith.Zdiv.Z_mod_remainder	40
Coq.ZArith.Zdiv.Z_div_mod_eq	40
Coq.ZArith.Zdiv.Zmod_eq_full	40
Coq.ZArith.Zdiv.Zmod_eq	40
Coq.ZArith.Zdiv.Zdiv_eucl_exist	40
Coq.ZArith.Zdiv.Zdiv_mod_unique	40
Coq.ZArith.Zdiv.Zdiv_unique	40
Coq.ZArith.Zdiv.Zmod_unique	40
Coq.ZArith.Zdiv.Zmod_0_l	40	8	synth with cache (only 1: trivial).	0.110562086105	37
Coq.ZArith.Zdiv.Zmod_0_r	40	0.0.0.0	synth with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0334720611572	4
Coq.ZArith.Zdiv.Zdiv_0_l	40	9	synth with cache (only 1: auto).	0.230926990509	41
Coq.ZArith.Zdiv.Zdiv_0_r	40	0.0.0.0	synth with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0294668674469	4
Coq.ZArith.Zdiv.Zmod_1_r	40	0.11.0	synth with cache (only 1: intros; only 1: Z.nzsimpl; only 1: Z.order).	1.34318804741	541
Coq.ZArith.Zdiv.Zdiv_1_r	40	6.0	synth with cache (only 1: intros; only 1: now Z.nzsimpl').	0.0984008312225	21
Coq.ZArith.Zdiv.Z_mod_same_full	40
Coq.ZArith.Zdiv.Z_mod_mult	40
Coq.ZArith.Zdiv.Z_div_pos	40
Coq.ZArith.Zdiv.Z_div_ge0	40	0.0.1.0.21.2.2	synth with cache (only 1: intros a b; only 1: intros Hab; only 1: Z.swap_greater; only 1: intros H; only 1: apply Z.div_pos; only 1: Z.order; only 1: trivial).	8.36469912529	7831
Coq.ZArith.Zdiv.Z_div_lt	40
Coq.ZArith.Zdiv.Z_div_ge	40
Coq.ZArith.Zdiv.Z_div_le	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).	0.0334870815277	4
Coq.ZArith.Zdiv.Z_mult_div_ge	40
Coq.ZArith.Zdiv.Z_mult_div_ge_neg	40
Coq.ZArith.Zdiv.Z_div_exact_full_1	40
Coq.ZArith.Zdiv.Z_div_exact_full_2	40	0.0.0.6.27	synth with cache (only 1: intros a0 a; only 1: intros E; only 1: rewrite Z.div_exact; only 1: auto; only 1: now Z.nzsimpl).	36.1012990475	29408
Coq.ZArith.Zdiv.Zmod_le	40
Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40
Coq.ZArith.Zdiv.Zdiv_le_compat_l	40
Coq.ZArith.Zdiv.Zdiv_sgn	40
Coq.ZArith.Zdiv.Z_mod_plus_full	40
Coq.ZArith.Zdiv.Zdiv_opp_opp	40
Coq.ZArith.Zdiv.Zmod_opp_opp	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_r	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_r	40
Coq.ZArith.Zdiv.Z_div_zero_opp_full	40
Coq.ZArith.Zdiv.Z_div_nz_opp_full	40
Coq.ZArith.Zdiv.Z_div_zero_opp_r	40
Coq.ZArith.Zdiv.Z_div_nz_opp_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_r	40
Coq.ZArith.Zdiv.Zmod_mod	40
Coq.ZArith.Zdiv.Zmult_mod	40
Coq.ZArith.Zdiv.Zplus_mod	40
Coq.ZArith.Zdiv.Zminus_mod	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: trivial).	0.0304660797119	3
Coq.ZArith.Zdiv.Zminus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zminus_mod_idemp_r	40	0.0.11	synth with cache (only 1: intros n m p; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: auto).	0.703406095505	384
Coq.ZArith.Zdiv.Zmult_mod_idemp_l	40
Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: trivial).	0.0305619239807	3
Coq.ZArith.Zdiv.EqualityModulo.eqm_refl	40	3	synth with cache (only 1: reflexivity).	0.025866985321	12
Coq.ZArith.Zdiv.EqualityModulo.eqm_sym	40	1	synth with cache (only 1: firstorder).	0.530429124832	19
Coq.ZArith.Zdiv.EqualityModulo.eqm_trans	40
Coq.ZArith.Zdiv.EqualityModulo.eqm_setoid	40	2.1.14.12.0.6.0	synth with cache (only 1: unfold eqm; only 1: split; only 1: auto; only 1: auto; only 1: intros H; only 1: intros; only 1: Z.order).	7.79650688171	8194
Coq.ZArith.Zdiv.EqualityModulo.Zplus_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zminus_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zmult_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zopp_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zmod_eqm	40
Coq.ZArith.Zdiv.Zdiv_Zdiv	40
Coq.ZArith.Zdiv.Zmod_div	40
Coq.ZArith.Zdiv.Zdiv_mult_le	40
Coq.ZArith.Zdiv.Zmod_divides	40
Coq.ZArith.Zdiv.Zmod_odd	40
Coq.ZArith.Zdiv.Zmod_even	40
Coq.ZArith.Zdiv.Zodd_mod	40
Coq.ZArith.Zdiv.Zeven_mod	40
Coq.ZArith.Zdiv.Z_mod_same	40	0.1.2.2	synth with cache (only 1: intros; only 1: zero_or_not a; only 1: apply Z.mod_same; only 1: now Z.nzsimpl).	0.190400123596	20
Coq.ZArith.Zdiv.Z_div_same	40
Coq.ZArith.Zdiv.Z_div_plus	40
Coq.ZArith.Zdiv.Z_div_mult	40
Coq.ZArith.Zdiv.Z_mod_plus	40	3.2.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: apply Z.mod_add; only 1: now intros ->).	0.240170955658	37
Coq.ZArith.Zdiv.Z_div_exact_1	40	1.0.1.9	synth with cache (only 1: intros a n Hn; only 1: rewrite Z.div_exact; only 1: auto; only 1: now intros ->).	1.01178097725	339
Coq.ZArith.Zdiv.Z_div_exact_2	40	0.0.2.7.1.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: now Z.nzsimpl; only 1: rewrite Z.div_exact; only 1: auto; only 1: Z.order).	2.70174384117	666
Coq.ZArith.Zdiv.Z_mod_zero_opp	40	0.0.1.0.0	synth with cache (only 1: intros a b Hb H; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: Z.order; only 1: auto).	0.163908958435	6
Coq.ZArith.Zdiv.Zmod_POS_correct	40
Coq.ZArith.Zdiv.Zmod'_correct	40
Coq.ZArith.Zdiv.Zdiv_eucl_extended	40
Coq.ZArith.Zdiv.div_Zdiv	40
Coq.ZArith.Zdiv.mod_Zmod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_wd	40	0.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: Z.bitwise; only 1: now rewrite Ha, Hb).	0.0406069755554	3
Coq.ZArith.Zeuclid.ZEuclid.div_wd	40	0	synth with cache (only 1: congruence).	0.020299911499	1
Coq.ZArith.Zeuclid.ZEuclid.div_mod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_always_pos	40
Coq.ZArith.Zeuclid.ZEuclid.mod_bound_pos	40	0.1.3.3.0.0.0	synth with cache (only 1: intros Ha Hb; only 1: destruct b as [| b| b]; only 1: now discriminate Hb || clear Hb; only 1: unfold modulo; only 1: apply Z.mod_pos_bound; only 1: easy; only 1: now discriminate Hb || clear Hb).	4.74740505219	1599
Coq.ZArith.Zabs.Zabs_ind	40	0.3.7.0.2	synth with cache (only 1: intros; only 1: Z.destruct_max n; only 1: Z.swap_greater; only 1: auto; only 1: auto).	0.976346969604	689
Coq.ZArith.Zabs.Zabs_intro	40	6.18	synth with cache (only 1: intros x y; only 1: easy || now destruct y).	2.75174999237	3073
Coq.ZArith.Zabs.Zabs_dec	40
Coq.ZArith.Zabs.Zabs_spec	40
Coq.ZArith.Zabs.Zsgn_spec	40
Coq.ZArith.Zabs.Zabs_nat_le	40
Coq.ZArith.Zabs.Zabs_nat_lt	40
Coq.ZArith.Int.MoreInt.eqb_eq	40
Coq.ZArith.Int.MoreInt.eqb_neq	40
Coq.ZArith.Int.MoreInt.ltb_lt	40
Coq.ZArith.Int.MoreInt.ltb_nlt	40
Coq.ZArith.Int.MoreInt.leb_le	40
Coq.ZArith.Int.MoreInt.leb_nle	40
Coq.ZArith.Int.MoreInt.norm_ei_correct	40
Coq.ZArith.Int.MoreInt.norm_ez_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct2	40
Coq.ZArith.Int.Z_as_Int.gt_le_dec	40
Coq.ZArith.Int.Z_as_Int.ge_lt_dec	40
Coq.ZArith.Int.Z_as_Int.i2z_eq	40	1	synth with cache (only 1: now injection 1 || (intros; now f_equal)).	0.0179829597473	2
Coq.ZArith.Int.Z_as_Int.i2z_0	40	0	synth with cache (only 1: auto with relations).	0.0162529945374	1
Coq.ZArith.Int.Z_as_Int.i2z_1	40	0	synth with cache (only 1: reflexivity).	0.0174300670624	1
Coq.ZArith.Int.Z_as_Int.i2z_2	40	0	synth with cache (only 1: reflexivity).	0.0170049667358	1
Coq.ZArith.Int.Z_as_Int.i2z_3	40	0	synth with cache (only 1: reflexivity).	0.0162391662598	1
Coq.ZArith.Int.Z_as_Int.i2z_add	40	9	synth with cache (only 1: now Z.nzsimpl).	1.32449507713	77
Coq.ZArith.Int.Z_as_Int.i2z_opp	40	4	synth with cache (only 1: trivial).	0.0179328918457	5
Coq.ZArith.Int.Z_as_Int.i2z_sub	40	0	synth with cache (only 1: reflexivity).	0.0168559551239	1
Coq.ZArith.Int.Z_as_Int.i2z_mul	40	0	synth with cache (only 1: reflexivity).	0.016340970993	1
Coq.ZArith.Int.Z_as_Int.i2z_max	40	0	synth with cache (only 1: reflexivity).	0.0153629779816	1
Coq.ZArith.Int.Z_as_Int.i2z_eqb	40	0	synth with cache (only 1: trivial).	0.0176870822906	1
Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0	synth with cache (only 1: reflexivity).	0.0153369903564	1
Coq.ZArith.Int.Z_as_Int.i2z_ltb	40	0	synth with cache (only 1: reflexivity).	0.0157840251923	1
Coq.ZArith.Zpower.Zpower_nat_0_r	40	0	synth with cache (only 1: reflexivity).	0.0156700611115	1
Coq.ZArith.Zpower.Zpower_nat_succ_r	40	4	synth with cache (only 1: now Z.nzsimpl).	0.533859968185	25
Coq.ZArith.Zpower.Zpower_nat_is_exp	40
Coq.ZArith.Zpower.Zpower_pos_nat	40	6.7	synth with cache (only 1: unfold Pos.to_nat; only 1: apply Pos2Nat.inj_iter).	0.202549934387	96
Coq.ZArith.Zpower.Zpower_nat_Z	40
Coq.ZArith.Zpower.Zpower_nat_Zpower	40	2.1.1.0.0.1	synth with cache (only 1: intro Hn; only 1: induction n; only 1: trivial; only 1: apply Pos2Nat.inj_iter; only 1: simpl; only 1: now destruct Hn).	0.927306890488	244
Coq.ZArith.Zpower.Zpower_pos_is_exp	40
Coq.ZArith.Zpower.Zpower_exp	40
Coq.ZArith.Zpower.Powers_of_2.shift_nat_equiv	40	0	synth with cache (only 1: trivial).	0.0174088478088	1
Coq.ZArith.Zpower.Powers_of_2.shift_pos_equiv	40	5.0	synth with cache (only 1: simpl; only 1: reflexivity).	0.0238330364227	7
Coq.ZArith.Zpower.Powers_of_2.shift_equiv	40	0.1.3.4.5	synth with cache (only 1: case n; only 1: trivial; only 1: intros Hn Hn'; only 1: now apply Pos.iter_swap_gen; only 1: easy || now destruct y).	7.27043604851	3255
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_equiv	40
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_equiv	40
Coq.ZArith.Zpower.Powers_of_2.two_p_equiv	40
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_S	40	2.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: now Z.nzsimpl).	0.329761981964	11
Coq.ZArith.Zpower.Powers_of_2.shift_nat_plus	40	4.7.1.4.1	synth with cache (only 1: Nat.induct n; only 1: auto; only 1: intro n; only 1: simpl; only 1: now intros ->).	5.30204701424	1722
Coq.ZArith.Zpower.Powers_of_2.shift_nat_correct	40
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_correct	40
Coq.ZArith.Zpower.Powers_of_2.shift_pos_nat	40
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_nat	40
Coq.ZArith.Zpower.Powers_of_2.shift_pos_correct	40
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_correct	40	7	synth with cache (only 1: apply two_power_pos_equiv).	0.0649979114532	8
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_is_exp	40
Coq.ZArith.Zpower.Powers_of_2.two_p_is_exp	40
Coq.ZArith.Zpower.Powers_of_2.two_p_gt_ZERO	40	1.2.3.1.15	synth with cache (only 1: destruct x; only 1: Z.swap_greater; only 1: easy; only 1: easy || now destruct y; only 1: now destruct 1).	3.8447830677	2736
Coq.ZArith.Zpower.Powers_of_2.two_p_S	40
Coq.ZArith.Zpower.Powers_of_2.two_p_pred	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct1	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct2	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_ok	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_shiftr	40
Coq.ZArith.Zwf.wf_proof.Zwf_well_founded	40
Coq.ZArith.Zwf.wf_proof_up.Zwf_up_well_founded	40
Coq.ZArith.auxiliary.Zne_left	40
Coq.ZArith.auxiliary.Zegal_left	40	1	synth with cache (only 1: now rewrite <- Z.sub_move_0_r).	0.023649930954	2
Coq.ZArith.auxiliary.Zle_left	40	0	synth with cache (only 1: apply Z.le_0_sub).	0.01766705513	1
Coq.ZArith.auxiliary.Zle_left_rev	40	0	synth with cache (only 1: apply Z.le_0_sub).	0.0209078788757	1
Coq.ZArith.auxiliary.Zlt_left_rev	40	1	synth with cache (only 1: apply Z.lt_0_sub).	0.0178489685059	2
Coq.ZArith.auxiliary.Zlt_left_lt	40	0	synth with cache (only 1: apply Z.lt_0_sub).	0.0174729824066	1
Coq.ZArith.auxiliary.Zlt_left	40
Coq.ZArith.auxiliary.Zge_left	40
Coq.ZArith.auxiliary.Zgt_left	40	0.0.0.0.1	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: rewrite Z.add_shuffle0; only 1: change (-1) with (- Z.succ 0); only 1: now apply Z.le_0_sub, Z.le_succ_l, Z.lt_0_sub).	0.381053924561	63
Coq.ZArith.auxiliary.Zgt_left_gt	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0370750427246	2
Coq.ZArith.auxiliary.Zgt_left_rev	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0398080348969	2
Coq.ZArith.auxiliary.Zle_mult_approx	40
Coq.ZArith.auxiliary.Zmult_le_approx	40
Coq.ZArith.Zmax.Zmax_spec	40
Coq.ZArith.Zmax.Zmax_left	40	0.6.0	synth with cache (only 1: unfold Z.le, Z.max; only 1: intros; only 1: now case Z.compare_spec).	0.24782204628	35
Coq.ZArith.Zmax.Zpos_max_1	40	1.4.12.9	synth with cache (only 1: induction p; only 1: easy; only 1: now Z.nzsimpl; only 1: now Z.nzsimpl').	1.61766600609	651
Coq.ZArith.Zmin.Zmin_spec	40
Coq.ZArith.Zmin.Zmin_irreducible	40	68	synth with cache (only 1: Z.solve_min).	4.07409715652	2994
Coq.ZArith.Zmin.Zmin_le_prime_inf	40
Coq.ZArith.Zmin.Zpos_min_1	40	12.0	synth with cache (only 1: unfold Z.min, Pos.min; only 1: now induction p).	0.440774917603	143
Coq.ZArith.Zgcd_alt.Zgcdn_pos	40
Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	40
Coq.ZArith.Zgcd_alt.fibonacci_pos	40
Coq.ZArith.Zgcd_alt.fibonacci_incr	40
Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	40	40	synth with cache (only 1: now destruct a).	0.677730083466	1199
Coq.ZArith.Zgcd_alt.Zgcdn_opp	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	40
Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	40
Coq.ZArith.Zorder.Ztrichotomy_inf	40
Coq.ZArith.Zorder.Ztrichotomy	40	2.0.0.0.1.1.0.0.0	synth with cache (only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: left; only 1: auto; only 1: left; only 1: auto; only 1: now intuition).	2.02973294258	633
Coq.ZArith.Zorder.dec_Zne	40
Coq.ZArith.Zorder.dec_Zgt	40
Coq.ZArith.Zorder.dec_Zge	40
Coq.ZArith.Zorder.not_Zeq	40
Coq.ZArith.Zorder.Zle_not_lt	40	6.0	synth with cache (only 1: intros LT EQ; only 1: Z.order).	0.19677400589	8
Coq.ZArith.Zorder.Zlt_not_le	40	6.1	synth with cache (only 1: intros LT EQ; only 1: Z.order).	0.165050983429	9
Coq.ZArith.Zorder.Zle_not_gt	40	4.2	synth with cache (only 1: intros LE EQ; only 1: auto).	0.025356054306	8
Coq.ZArith.Zorder.Zgt_not_le	40	4.4	synth with cache (only 1: intros LE EQ; only 1: auto).	0.0831251144409	26
Coq.ZArith.Zorder.Znot_ge_lt	40	0.21	synth with cache (only 1: Z.swap_greater; only 1: intuition Z.order).	0.451417922974	360
Coq.ZArith.Zorder.Znot_lt_ge	40	4.0	synth with cache (only 1: Z.swap_greater; only 1: intuition Z.order).	0.0378861427307	6
Coq.ZArith.Zorder.Znot_gt_le	40	5.1	synth with cache (only 1: Z.swap_greater; only 1: intuition Z.order).	0.0380110740662	8
Coq.ZArith.Zorder.Znot_le_gt	40	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).	0.0330789089203	4
Coq.ZArith.Zorder.not_Zne	40	16.0.34.3	synth with cache (only 1: intro H; only 1: destruct (Z.eq_decidable n m); only 1: trivial; only 1: easy).	5.40883016586	6556
Coq.ZArith.Zorder.Zgt_asym	40	2.0.9	synth with cache (only 1: intros; only 1: Z.swap_greater; only 1: Z.order).	1.28420114517	346
Coq.ZArith.Zorder.Zgt_irrefl	40	4.6.0	synth with cache (only 1: Z.swap_greater; only 1: intros H; only 1: Z.order).	0.117796897888	113
Coq.ZArith.Zorder.Zle_lt_or_eq	40
Coq.ZArith.Zorder.Zgt_trans	40	0.1.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now transitivity m).	0.275414943695	46
Coq.ZArith.Zorder.Zle_gt_trans	40	1.0.9	synth with cache (only 1: intros H; only 1: Z.swap_greater; only 1: Z.order).	0.250364780426	106
Coq.ZArith.Zorder.Zgt_le_trans	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: Z.order).	0.040757894516	2
Coq.ZArith.Zorder.Zge_trans	40	1.3	synth with cache (only 1: Z.swap_greater; only 1: Z.order).	0.24702501297	72
Coq.ZArith.Zorder.Zsucc_le_compat	40
Coq.ZArith.Zorder.Zsucc_lt_compat	40
Coq.ZArith.Zorder.Zsucc_gt_compat	40
Coq.ZArith.Zorder.Zsucc_gt_reg	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.038272857666	2
Coq.ZArith.Zorder.Zsucc_le_reg	40	0	synth with cache (only 1: apply Z.succ_le_mono).	0.0185980796814	1
Coq.ZArith.Zorder.Zsucc_lt_reg	40	0	synth with cache (only 1: apply Z.succ_lt_mono).	0.0167031288147	1
Coq.ZArith.Zorder.Zgt_succ	40
Coq.ZArith.Zorder.Znot_le_succ	40
Coq.ZArith.Zorder.Zgt_le_succ	40
Coq.ZArith.Zorder.Zle_gt_succ	40
Coq.ZArith.Zorder.Zle_lt_succ	40	0	synth with cache (only 1: apply Z.lt_succ_r).	0.0175099372864	1
Coq.ZArith.Zorder.Zlt_le_succ	40	0	synth with cache (only 1: apply Z.le_succ_l).	0.0170390605927	1
Coq.ZArith.Zorder.Zgt_succ_le	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	0.0311341285706	2
Coq.ZArith.Zorder.Zlt_succ_le	40	0	synth with cache (only 1: apply Z.lt_succ_r).	0.0187480449677	1
Coq.ZArith.Zorder.Zle_succ_gt	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.0327079296112	2
Coq.ZArith.Zorder.Zle_succ_le	40
Coq.ZArith.Zorder.Zgt_succ_pred	40
Coq.ZArith.Zorder.Zlt_succ_pred	40	0	synth with cache (only 1: apply Z.lt_succ_lt_pred).	0.0173830986023	1
Coq.ZArith.Zorder.Zlt_0_le_0_pred	40
Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	0.3	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.0641701221466	18
Coq.ZArith.Zorder.Zle_neg_pos	40	0.2	synth with cache (only 1: intros a b; only 1: easy).	0.0291061401367	4
Coq.ZArith.Zorder.Zgt_pos_0	40	0.0	synth with cache (only 1: intro n; only 1: reflexivity).	0.0232841968536	2
Coq.ZArith.Zorder.Zle_0_pos	40	0	synth with cache (only 1: easy).	0.0249378681183	1
Coq.ZArith.Zorder.Zlt_neg_0	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0218110084534	2
Coq.ZArith.Zorder.Zle_0_nat	40	30.0.0.34	synth with cache (only 1: intros n H; only 1: simpl in *; only 1: apply (Nat.lt_irrefl (S n)); only 1: now destruct n).	15.8964960575	23937
Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40
Coq.ZArith.Zorder.Zplus_gt_compat_l	40
Coq.ZArith.Zorder.Zplus_gt_compat_r	40
Coq.ZArith.Zorder.Zplus_le_compat_l	40
Coq.ZArith.Zorder.Zplus_le_compat_r	40
Coq.ZArith.Zorder.Zplus_lt_compat_l	40	0	synth with cache (only 1: apply Z.add_lt_mono_l).	0.0195028781891	1
Coq.ZArith.Zorder.Zplus_lt_compat_r	40	1	synth with cache (only 1: apply Z.add_lt_mono_r).	0.0183629989624	2
Coq.ZArith.Zorder.Zplus_le_reg_l	40	1	synth with cache (only 1: apply Z.add_le_mono_l).	0.0211250782013	2
Coq.ZArith.Zorder.Zplus_le_reg_r	40	1	synth with cache (only 1: apply Z.add_le_mono_r).	0.0213820934296	2
Coq.ZArith.Zorder.Zplus_lt_reg_l	40	2	synth with cache (only 1: apply Z.add_lt_mono_l).	0.0229749679565	3
Coq.ZArith.Zorder.Zplus_lt_reg_r	40	3	synth with cache (only 1: apply Z.add_lt_mono_r).	0.0248069763184	4
Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	0.0400660037994	2
Coq.ZArith.Zorder.Zplus_gt_reg_r	40	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	0.342916965485	3
Coq.ZArith.Zorder.Zmult_le_compat_r	40
Coq.ZArith.Zorder.Zmult_le_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_r	40
Coq.ZArith.Zorder.Zmult_gt_compat_r	40	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0536530017853	12
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0328509807587	3
Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40
Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).	0.017364025116	1
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_l	40	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_l).	0.0174179077148	1
Coq.ZArith.Zorder.Zmult_gt_compat_l	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.0457370281219	2
Coq.ZArith.Zorder.Zmult_ge_compat_r	40	7.0.3	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_r).	0.289317131042	157
Coq.ZArith.Zorder.Zmult_ge_compat_l	40	5.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_l).	0.0545799732208	8
Coq.ZArith.Zorder.Zmult_ge_compat	40
Coq.ZArith.Zorder.Zmult_le_compat	40
Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0348410606384	3
Coq.ZArith.Zorder.Zmult_lt_reg_r	40	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.020140171051	1
Coq.ZArith.Zorder.Zmult_le_reg_r	40	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0348100662231	3
Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0198950767517	1
Coq.ZArith.Zorder.Zmult_ge_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0481069087982	2
Coq.ZArith.Zorder.Zmult_gt_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0517630577087	2
Coq.ZArith.Zorder.Zmult_lt_compat	40
Coq.ZArith.Zorder.Zmult_lt_compat2	40
Coq.ZArith.Zorder.Zmult_gt_0_compat	40	4.0.4.0.0.0.7	synth with cache (only 1: destruct m as [| m| m]; only 1: Z.swap_greater; only 1: now destruct n; only 1: Z.swap_greater; only 1: now destruct n; only 1: Z.swap_greater; only 1: now destruct n).	5.03728103638	1802
Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40	2.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0308899879456	4
Coq.ZArith.Zorder.Zmult_le_0_reg_r	40
Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40
Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	0.0315310955048	2
Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40
Coq.ZArith.Zorder.Zlt_square_simpl	40
Coq.ZArith.Zorder.Zgt_square_simpl	40	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).	0.0456430912018	3
Coq.ZArith.Zorder.Zeq_plus_swap	40
Coq.ZArith.Zorder.Zlt_0_minus_lt	40
Coq.ZArith.Zorder.Zle_0_minus_le	40
Coq.ZArith.Zorder.Zle_minus_le_0	40	0	synth with cache (only 1: apply Z.le_0_sub).	0.0182509422302	1
Coq.ZArith.Zbool.Zle_cases	40
Coq.ZArith.Zbool.Zlt_cases	40
Coq.ZArith.Zbool.Zge_cases	40
Coq.ZArith.Zbool.Zgt_cases	40
Coq.ZArith.Zbool.Zle_bool_imp_le	40
Coq.ZArith.Zbool.Zle_imp_le_bool	40	0.0.4.0	synth with cache (only 1: unfold Z.le, Z.min; only 1: intuition; only 1: apply Z.leb_le; only 1: auto with arith).	0.0597910881042	8
Coq.ZArith.Zbool.Zle_bool_antisym	40
Coq.ZArith.Zbool.Zle_bool_trans	40
Coq.ZArith.Zbool.Zle_bool_total	40
Coq.ZArith.Zbool.Zle_bool_plus_mono	40
Coq.ZArith.Zbool.Zone_pos	40	7	synth with cache (only 1: trivial).	0.0179882049561	8
Coq.ZArith.Zbool.Zone_min_pos	40	1.11.0.5.8	synth with cache (only 1: intros; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: apply Z.leb_le; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	10.049339056	3167
Coq.ZArith.Zbool.Zle_is_le_bool	40	2.10.3	synth with cache (only 1: symmetry; only 1: revert m; only 1: apply Z.leb_le).	1.61542892456	693
Coq.ZArith.Zbool.Zge_is_le_bool	40	0.3.0.10.0	synth with cache (only 1: unfold Z.leb, Z.le; only 1: split; only 1: now case Z.compare_spec; only 1: Z.swap_greater; only 1: apply Z.leb_le).	1.40294694901	601
Coq.ZArith.Zbool.Zlt_is_lt_bool	40
Coq.ZArith.Zbool.Zgt_is_gt_bool	40
Coq.ZArith.Zbool.Zlt_is_le_bool	40
Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.0.0	synth with cache (only 1: rewrite Z.leb_le; only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.0375092029572	3
Coq.ZArith.Zbool.Zeq_is_eq_bool	40
Coq.ZArith.Zbool.Zeq_bool_eq	40
Coq.ZArith.Zbool.Zeq_bool_neq	40
Coq.ZArith.Zbool.Zeq_bool_if	40
Coq.ZArith.ZArith_dec.Dcompare_inf	40	0.0.0.2	synth with cache (only 1: destruct r; only 1: auto; only 1: auto; only 1: auto).	0.055202960968	19
Coq.ZArith.ZArith_dec.Zcompare_rect	40
Coq.ZArith.ZArith_dec.Zcompare_rec	40	0.0.0.0.0	synth with cache (only 1: intros H1 H2 H3; only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.04194688797	5
Coq.ZArith.ZArith_dec.decidability.Z_lt_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_le_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_gt_dec	40	0.0.0.0.27	synth with cache (only 1: unfold Z.lt, Z.gt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	0.949673891068	493
Coq.ZArith.ZArith_dec.decidability.Z_ge_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_lt_ge_dec	40	0.0.0.0.3.23	synth with cache (only 1: unfold Z.lt, Z.le; only 1: unfold Z.ge; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	4.75713610649	826
Coq.ZArith.ZArith_dec.decidability.Z_lt_le_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_le_gt_dec	40	0.0.0.0.3.16	synth with cache (only 1: unfold Z.le, Z.ge; only 1: unfold Z.gt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	12.936013937	5404
Coq.ZArith.ZArith_dec.decidability.Z_gt_le_dec	40	1.0.2.0.0	synth with cache (only 1: elim Z_le_dec; only 1: auto with arith; only 1: constructor; only 1: Z.swap_greater; only 1: now apply Z.nle_gt).	0.0540461540222	19
Coq.ZArith.ZArith_dec.decidability.Z_ge_lt_dec	40	1.1.2.1	synth with cache (only 1: elim Z_lt_ge_dec; only 1: auto with arith; only 1: constructor; only 1: trivial).	0.0529391765594	19
Coq.ZArith.ZArith_dec.decidability.Z_le_lt_eq_dec	40
Coq.ZArith.ZArith_dec.Zlt_cotrans	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	40
Coq.ZArith.ZArith_dec.not_Zeq_inf	40
Coq.ZArith.ZArith_dec.Z_dec	40	3.0.0.0.0.1.0.0.0.1	synth with cache (only 1: intros; only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: auto; only 1: left; only 1: left; only 1: auto; only 1: now intuition).	4.22227501869	1564
Coq.ZArith.ZArith_dec.Z_dec'	40
Coq.ZArith.ZArith_dec.Z_zerop	40	0.0.0.3	synth with cache (only 1: intro; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.093729019165	15
Coq.ZArith.Zpow_alt.Piter_mul_acc	40
Coq.ZArith.Zpow_alt.Piter_op_square	40
Coq.ZArith.Zpow_alt.Zpower_equiv	40
Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	0	synth with cache (only 1: reflexivity).	0.0171492099762	1
Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40
Coq.Program.Wf.Well_founded.Fix_F_eq	40	0.0	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).	0.0222630500793	2
Coq.Program.Wf.Well_founded.Fix_F_inv	40	2.7.6.4.7.2.0	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: intros; only 1: induction (Rwf x); only 1: rewrite <- Wf.Fix_F_eq; only 1: induction (Rwf x); only 1: rewrite <- Wf.Fix_F_eq; only 1: auto).	24.1120028496	25890
Coq.Program.Wf.Well_founded.Fix_eq	40
Coq.Program.Wf.Well_founded.fix_sub_eq	40	0.0.0.0.0.0	synth with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.0451719760895	6
Coq.Program.Wf.Measure_well_founded.measure_wf	40
Coq.Program.Wf.Fix_rects.F_unfold	40	0.1	synth with cache (only 1: rewrite <- Fix_F_eq; only 1: auto).	0.0217390060425	3
Coq.Program.Wf.Fix_rects.Fix_F_sub_rect	40	0.6.8.1	synth with cache (only 1: intros; only 1: induction (Rwf x); only 1: rewrite <- Init.Wf.Fix_F_eq; only 1: auto).	0.683702945709	474
Coq.Program.Wf.Fix_rects.eq_Fix_F_sub	40	5.0	synth with cache (only 1: apply Fix_F_inv; only 1: auto).	0.0198500156403	7
Coq.Program.Wf.Fix_rects.Fix_sub_rect	40
Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	40
Coq.Program.Subset.subset_eq	40
Coq.Program.Subset.match_eq_rewrite	40	2.16.0.3.4.17	synth with cache (only 1: intro; only 1: intro; only 1: intros H x0; only 1: intros [x y]; only 1: subst; only 1: reflexivity).	3.18387508392	9561
Coq.Program.Equality.JMeq_eq_refl	40	2	synth with cache (only 1: apply UIP).	0.01047706604	3
Coq.Program.Equality.UIP_refl_refl	40	24	synth with cache (only 1: apply UIP).	5.88419699669	8930
Coq.Program.Equality.inj_pairT2_refl	40	4	synth with cache (only 1: apply UIP).	0.0113790035248	5
Coq.Program.Equality.solution_left	40	1.2.6	synth with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.0982089042664	74
Coq.Program.Equality.solution_right	40	2.0.0	synth with cache (only 1: intros; only 1: subst; only 1: assumption).	0.0191299915314	5
Coq.Program.Equality.deletion	40	1.1	synth with cache (only 1: intros; only 1: trivial).	0.0158689022064	4
Coq.Program.Equality.simplification_heq	40	0.2.4.3	synth with cache (only 1: intros H H'; only 1: subst; only 1: apply H; only 1: trivial).	0.0825209617615	90
Coq.Program.Equality.simplification_existT2	40	0.0.0.5.1	synth with cache (only 1: intros H J; only 1: apply H; only 1: apply eq_dep_eq; only 1: apply eq_sigT_eq_dep; only 1: assumption).	0.0635571479797	56
Coq.Program.Equality.simplification_existT1	40	0.13.3.6.11.34	synth with cache (only 1: intro eq_dep_eq; only 1: intro H; only 1: apply eq_dep_eq; only 1: dependent rewrite H; only 1: trivial; only 1: assumption).	8.53047394753	38456
Coq.Program.Equality.simplification_K	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: assumption).	0.0191161632538	3
Coq.Program.Combinators.compose_id_left	40	1	synth with cache (only 1: auto).	0.0143210887909	2
Coq.Program.Combinators.compose_id_right	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.017765045166	2
Coq.Program.Combinators.compose_assoc	40	0.0.4	synth with cache (only 1: intros A B C Hl Hr; only 1: intros H ?; only 1: reflexivity).	0.0223679542542	7
Coq.Program.Combinators.flip_flip	40	0	synth with cache (only 1: reflexivity).	0.0137569904327	1
Coq.Program.Combinators.prod_uncurry_curry	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0192568302155	2
Coq.Program.Combinators.prod_curry_uncurry	40
Coq.Sorting.PermutEq.Perm.multiplicity_In	40
Coq.Sorting.PermutEq.Perm.multiplicity_In_O	40
Coq.Sorting.PermutEq.Perm.multiplicity_In_S	40	0.0.0.0.0.0	synth with cache (only 1: intros l a; only 1: intro H; only 1: eapply In_InA, multiplicity_InA in H; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances).	0.0554218292236	6
Coq.Sorting.PermutEq.Perm.multiplicity_NoDup	40
Coq.Sorting.PermutEq.Perm.NoDup_permut	40
Coq.Sorting.PermutEq.Perm.permut_In_In	40	8.2.0.5	synth with cache (only 1: intros H; only 1: intros l a; only 1: do 2 rewrite multiplicity_In; only 1: now intros ->).	2.38921308517	660
Coq.Sorting.PermutEq.Perm.permut_cons_In	40
Coq.Sorting.PermutEq.Perm.permut_nil	40
Coq.Sorting.PermutEq.Perm.permutation_Permutation	40
Coq.Sorting.PermutEq.Perm.permut_length_1	40	0.25.2.8	synth with cache (only 1: intros l a; only 1: unfold PermutSetoid.permutation, meq; only 1: apply permut_length_1; only 1: eauto with typeclass_instances).	7.28830194473	10758
Coq.Sorting.PermutEq.Perm.permut_length_2	40
Coq.Sorting.PermutEq.Perm.permut_length	40
Coq.Sorting.PermutEq.Perm.permutation_map	40
Coq.Sorting.Mergesort.Sort.Sorted_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	40	1.0.2.1.0.7.0.2.0.1.0	synth with cache (only 1: induction stack as [| [| ]]; only 1: simpl; only 1: constructor; only 1: simpl; only 1: intros; only 1: inversion_clear H; only 1: apply Sorted_merge; only 1: auto; only 1: auto; only 1: intros; only 1: auto).	8.03680706024	8467
Coq.Sorting.Mergesort.Sort.Permuted_merge_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_sort	40
Coq.Sorting.Mergesort.Sort.LocallySorted_sort	40
Coq.Sorting.Mergesort.Sort.Permuted_sort	40
Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40
Coq.Sorting.Mergesort.NatOrder.leb_total	40
Coq.Sorting.Permutation.Permutation.Permutation_nil	40
Coq.Sorting.Permutation.Permutation.Permutation_nil_cons	40
Coq.Sorting.Permutation.Permutation.Permutation_refl	40	3.2.7	synth with cache (only 1: induction l; only 1: auto; only 1: firstorder).	0.335473060608	181
Coq.Sorting.Permutation.Permutation.Permutation_sym	40
Coq.Sorting.Permutation.Permutation.Permutation_trans	40	0.0.1.10	synth with cache (only 1: intros; only 1: apply perm_trans with (l' := l'); only 1: auto; only 1: auto).	1.22911310196	754
Coq.Sorting.Permutation.Permutation_cons	40	0.0.3	synth with cache (only 1: intros n n' Hn m m' Hm; only 1: subst n'; only 1: auto).	0.0646679401398	32
Coq.Sorting.Permutation.Permutation_properties.Permutation_in	40	1.0.0.0.0.1.1.0	synth with cache (only 1: induction 1; only 1: auto; only 1: clear H; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intuition; only 1: auto).	2.32980203629	619
Coq.Sorting.Permutation.Permutation_properties.Permutation_in'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_tail	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_head	40	0.0.1.1.1.11	synth with cache (only 1: induction l; only 1: simpl; only 1: now symmetry; only 1: intro y; only 1: simpl; only 1: auto).	2.98359704018	2396
Coq.Sorting.Permutation.Permutation_properties.Permutation_app	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_add_inside	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_append	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_comm	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_Add	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_middle	40	0	synth with cache (only 1: auto).	0.0211338996887	1
Coq.Sorting.Permutation.Permutation_properties.Permutation_rev	40	0.0.3.1.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: constructor; only 1: simpl; only 1: rewrite <- IHl; only 1: rewrite IHl; only 1: auto).	0.651520967484	223
Coq.Sorting.Permutation.Permutation_properties.Permutation_rev'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_ind_bis	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_nil_app_cons	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_Add_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_l	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_r	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2	40
Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation	40
Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation_bis	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup'	40
Coq.Sorting.Permutation.Permutation_map.Permutation_map	40
Coq.Sorting.Permutation.Permutation_map.Permutation_map'	40	0.0.0.0.0.0.0.3	synth with cache (only 1: induction 1; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: eauto).	4.26392292976	52
Coq.Sorting.Permutation.nat_bijection_Permutation	40
Coq.Sorting.Permutation.Permutation_alt.adapt_injective	40
Coq.Sorting.Permutation.Permutation_alt.adapt_ok	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error_bis	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth	40
Coq.Sorting.PermutSetoid.Permut.list_contents_app	40
Coq.Sorting.PermutSetoid.Permut.permut_refl	40	25	synth with cache (only 1: split).	0.156088113785	307
Coq.Sorting.PermutSetoid.Permut.permut_sym	40	1.2	synth with cache (only 1: unfold permutation; only 1: auto using munion_comm, munion_ass, meq_sym, meq_left, meq_right).	0.0286049842834	5
Coq.Sorting.PermutSetoid.Permut.permut_trans	40	1.0.12.1	synth with cache (only 1: unfold permutation, meq; only 1: intros; only 1: rewrite H; only 1: auto).	4.75064897537	2039
Coq.Sorting.PermutSetoid.Permut.permut_cons_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_cons	40	0.0.0.0	synth with cache (only 1: unfold permutation; only 1: simpl; only 1: intros; only 1: auto with datatypes).	0.0395560264587	4
Coq.Sorting.PermutSetoid.Permut.permut_app	40
Coq.Sorting.PermutSetoid.Permut.permut_add_inside_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_add_inside	40
Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside	40
Coq.Sorting.PermutSetoid.Permut.permut_middle	40
Coq.Sorting.PermutSetoid.Permut.permut_sym_app	40	1.0.0.3.33.3	synth with cache (only 1: unfold permutation, meq; only 1: intros x l; only 1: intros; only 1: repeat rewrite list_contents_app in *; only 1: simpl in *; only 1: auto with arith).	29.7386751175	27191
Coq.Sorting.PermutSetoid.Permut.permut_rev	40
Coq.Sorting.PermutSetoid.Permut.permut_conv_inv	40
Coq.Sorting.PermutSetoid.Permut.permut_app_inv1	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_then	40
Coq.Sorting.PermutSetoid.Permut.permut_app_inv2	40	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: intros; only 1: apply plus_reg_l with (multiplicity (list_contents l) a); only 1: rewrite H; only 1: trivial).	2.42297387123	492
Coq.Sorting.PermutSetoid.Permut.permut_remove_hd_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_remove_hd	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_else	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_refl	40	20.0.0.0.21.3	synth with cache (only 1: intros e l1 l2; only 1: intuition; only 1: destruct eqA_dec as [_| NEQ]; only 1: auto with arith; only 1: contradict NEQ; only 1: firstorder).	10.9432201385	16724
Coq.Sorting.PermutSetoid.Permut.if_eqA	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_l	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_r	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_eqA	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_O	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_S	40	0.0.0.0.0	synth with cache (only 1: intros l a; only 1: rewrite multiplicity_InA; only 1: destruct (multiplicity (list_contents l) a); only 1: auto with arith; only 1: auto with arith).	0.0545580387115	5
Coq.Sorting.PermutSetoid.Permut.multiplicity_NoDupA	40
Coq.Sorting.PermutSetoid.Permut.permut_InA_InA	40
Coq.Sorting.PermutSetoid.Permut.permut_cons_InA	40
Coq.Sorting.PermutSetoid.Permut.permut_nil	40
Coq.Sorting.PermutSetoid.Permut.permut_length_1	40
Coq.Sorting.PermutSetoid.Permut.permut_length_2	40
Coq.Sorting.PermutSetoid.Permut.permut_length	40
Coq.Sorting.PermutSetoid.Permut.NoDupA_equivlistA_permut	40
Coq.Sorting.PermutSetoid.Permut_map.permut_map	40
Coq.Sorting.PermutSetoid.Permut_permut.Permutation_impl_permutation	40
Coq.Sorting.PermutSetoid.Permut_permut.permut_eqA	40
Coq.Sorting.PermutSetoid.Permut_permut.permutation_Permutation	40
Coq.Sorting.Sorted.defs.HdRel_inv	40	0.6	synth with cache (only 1: inversion 1; only 1: auto).	0.114292144775	52
Coq.Sorting.Sorted.defs.Sorted_inv	40	0.0.5.0	synth with cache (only 1: inversion 1; only 1: split; only 1: auto; only 1: trivial).	0.0598039627075	17
Coq.Sorting.Sorted.defs.Sorted_rect	40
Coq.Sorting.Sorted.defs.Sorted_LocallySorted_iff	40
Coq.Sorting.Sorted.defs.StronglySorted_inv	40	1.4.1.0	synth with cache (only 1: intros a l H; only 1: inversion H; only 1: inversion H; only 1: auto).	0.0489220619202	10
Coq.Sorting.Sorted.defs.StronglySorted_rect	40
Coq.Sorting.Sorted.defs.StronglySorted_rec	40	0.0.0	synth with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).	0.0332291126251	3
Coq.Sorting.Sorted.defs.StronglySorted_Sorted	40	2.0.2.0.0.1.7	synth with cache (only 1: intros l; only 1: induction 1 as [| a l [| ]]; only 1: auto using Sorted, LocallySorted, HdRel; only 1: auto using Sorted, LocallySorted, HdRel; only 1: inversion H1; only 1: subst; only 1: auto using Sorted, LocallySorted, HdRel).	2.47911906242	2037
Coq.Sorting.Sorted.defs.Sorted_extends	40
Coq.Sorting.Sorted.defs.Sorted_StronglySorted	40
Coq.Sorting.Heap.defs.leA_Tree_Leaf	40	0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: auto with arith).	0.0374131202698	3
Coq.Sorting.Heap.defs.leA_Tree_Node	40	0.0	synth with cache (only 1: simpl; only 1: auto with datatypes).	0.0312929153442	2
Coq.Sorting.Heap.defs.invert_heap	40	0.10.31	synth with cache (only 1: intros H1 H2 H3; only 1: inversion 1; only 1: auto with datatypes).	5.82951402664	3560
Coq.Sorting.Heap.defs.is_heap_rect	40
Coq.Sorting.Heap.defs.is_heap_rec	40	0.2.0.0.0.0.1.0.1.0.0	synth with cache (only 1: simple induction T; only 1: auto with datatypes; only 1: intros a G PG D PD PN; only 1: elim (invert_heap a G D); only 1: intros H1 H2; only 1: elim H2; only 1: intros H3 H4; only 1: elim H4; only 1: intros; only 1: auto with datatypes; only 1: auto with datatypes).	2.2409529686	729
Coq.Sorting.Heap.defs.low_trans	40
Coq.Sorting.Heap.defs.Equivalence_instance_0	40
Coq.Sorting.Heap.defs.Proper_instance_0	40	0.2.1.0.0.1	synth with cache (only 1: red; only 1: red; only 1: red; only 1: red; only 1: simpl; only 1: auto with datatypes).	0.0671401023865	12
Coq.Sorting.Heap.defs.merge	40
Coq.Sorting.Heap.defs.insert	40
Coq.Sorting.Heap.defs.list_to_heap	40
Coq.Sorting.Heap.defs.heap_to_list	40
Coq.Sorting.Heap.defs.treesort	40
Coq.Init.Wf.Well_founded.Acc_inv	40	2.7.0	synth with cache (only 1: intro; only 1: destruct 1; only 1: assumption).	0.130363941193	111
Coq.Init.Wf.Well_founded.well_founded_induction_type	40
Coq.Init.Wf.Well_founded.well_founded_induction	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0185430049896	4
Coq.Init.Wf.Well_founded.well_founded_ind	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0186769962311	4
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	40	1.29	synth with cache (only 1: intros f [x]; only 1: auto).	0.396578073502	910
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	40
Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	40
Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	40
Coq.Init.Tactics.decide_left	40	2.42.0.7.0.9.1	synth with cache (only 1: intro z; only 1: intros H x0; only 1: intro; only 1: reflexivity || destruct H; only 1: trivial; only 1: apply False_rec; only 1: auto).	29.7823679447	121686
Coq.Init.Tactics.decide_right	40	1.1.0.0	synth with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	0.0211308002472	6
Coq.Init.Peano.pred_Sn	40	1	synth with cache (only 1: reflexivity).	0.00677013397217	2
Coq.Init.Peano.not_eq_S	40	0.8	synth with cache (only 1: intro H; only 1: auto).	0.019504070282	19
Coq.Init.Peano.O_S	40	4	synth with cache (only 1: discriminate).	0.0133991241455	14
Coq.Init.Peano.n_Sn	40
Coq.Init.Peano.plus_n_O	40	0.5.0.1.31	synth with cache (only 1: intros; only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	0.512855052948	1256
Coq.Init.Peano.plus_O_n	40	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0171501636505	5
Coq.Init.Peano.plus_n_Sm	40	1.0.1.2	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: auto).	0.0177929401398	8
Coq.Init.Peano.plus_Sn_m	40	0.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0217700004578	6
Coq.Init.Peano.mult_n_O	40	1.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0172898769379	6
Coq.Init.Peano.mult_n_Sm	40
Coq.Init.Peano.le_pred	40
Coq.Init.Peano.le_S_n	40
Coq.Init.Peano.le_0_n	40	0.1.1	synth with cache (only 1: induction n; only 1: auto; only 1: auto).	0.0127859115601	5
Coq.Init.Peano.le_n_S	40	1.1.0.0.1	synth with cache (only 1: induction 1; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).	0.04088306427	35
Coq.Init.Peano.nat_case	40	1.0.4.7	synth with cache (only 1: induction n; only 1: intro; only 1: auto; only 1: trivial).	0.197520971298	344
Coq.Init.Peano.nat_double_ind	40	1.1.13.2.1	synth with cache (only 1: induction n; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).	0.725248098373	1510
Coq.Init.Peano.max_l	40
Coq.Init.Peano.max_r	40	0.0.1.0.5.0.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	29.6867809296	20304
Coq.Init.Peano.min_l	40	0.0.1.0.1.0.0.3.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	9.30940198898	5105
Coq.Init.Peano.min_r	40	0.0.1.0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	5.76036095619	3439
Coq.Init.Peano.nat_rect_succ_r	40	0.5.1.0.8	synth with cache (only 1: induction n as [| p H]; only 1: auto; only 1: simpl; only 1: destruct H; only 1: trivial).	1.22497010231	1414
Coq.Init.Peano.nat_rect_plus	40	0.0.1.3.0.0	synth with cache (only 1: intros ? ? ? Fl Fr; only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite <- ?IHn; only 1: trivial).	0.048024892807	19
Coq.Init.Byte.of_bits_to_bits	40
Coq.Init.Byte.to_bits_of_bits	40
Coq.Init.Datatypes.andb_prop	40
Coq.Init.Datatypes.andb_true_intro	40	0.0.6.28	synth with cache (only 1: intro H; only 1: destruct H, 1; only 1: assumption; only 1: assumption).	1.05671811104	4378
Coq.Init.Datatypes.eq_true_ind_r	40	1.14.32.0	synth with cache (only 1: intro; only 1: intro A; only 1: destruct 2; only 1: assumption).	0.793260097504	5805
Coq.Init.Datatypes.eq_true_rec_r	40	0.0.0	synth with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.010409116745	3
Coq.Init.Datatypes.eq_true_rect_r	40	0.0.0	synth with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.010822057724	3
Coq.Init.Datatypes.surjective_pairing	40	0.7	synth with cache (only 1: intros A B [H1 H2]; only 1: reflexivity).	0.0142331123352	12
Coq.Init.Datatypes.injective_projections	40
Coq.Init.Datatypes.pair_equal_spec	40
Coq.Init.Datatypes.rew_pair	40	0.1	synth with cache (only 1: destruct H; only 1: reflexivity).	0.0132200717926	3
Coq.Init.Datatypes.comparison_eq_stable	40
Coq.Init.Datatypes.CompOpp_involutive	40	0.0.0.0.1	synth with cache (only 1: intro H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H).	0.0175089836121	6
Coq.Init.Datatypes.CompOpp_inj	40	0.0.1.0.1.0.1.0.0.0.1.0.1.0.1.0.0.0.0	synth with cache (only 1: destruct c, c'; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H).	11.4706299305	23745
Coq.Init.Datatypes.CompOpp_iff	40
Coq.Init.Datatypes.CompareSpec2Type	40
Coq.Init.Datatypes.CompSpec2Type	40
Coq.Init.Logic.Conjunction.proj1	40
Coq.Init.Logic.Conjunction.proj2	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.00266695022583	2
Coq.Init.Logic.Equivalence.iff_refl	40
Coq.Init.Logic.Equivalence.iff_trans	40	2.2.0.0.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.00554800033569	10
Coq.Init.Logic.Equivalence.iff_sym	40	0.0.0.2	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.00402402877808	6
Coq.Init.Logic.and_iff_compat_l	40	1.0.2.0.1.0.1.0.0.4	synth with cache (only 1: destruct 1; only 1: split; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto).	0.114238023758	783
Coq.Init.Logic.and_iff_compat_r	40	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply Hl; only 1: assumption; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply Hr; only 1: assumption; only 1: assumption).	0.0785839557648	293
Coq.Init.Logic.or_iff_compat_l	40
Coq.Init.Logic.or_iff_compat_r	40	0.1.0.0.1.0.0.1.0.0.1.0.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: apply Hl; only 1: assumption; only 1: right; only 1: assumption; only 1: intros [?| ?]; only 1: left; only 1: apply Hr; only 1: assumption; only 1: right; only 1: assumption).	0.62313580513	2374
Coq.Init.Logic.imp_iff_compat_l	40	9.9.2.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	0.172966003418	902
Coq.Init.Logic.imp_iff_compat_r	40	2.0.3.0.2.1.2.0.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros H ?; only 1: apply H; only 1: apply Hr; only 1: assumption; only 1: intros H ?; only 1: apply H; only 1: apply Hl; only 1: assumption).	0.407595157623	1299
Coq.Init.Logic.not_iff_compat	40	0.0.0.0	synth with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: auto; only 1: auto).	0.00863599777222	4
Coq.Init.Logic.neg_false	40	1.1.11.0.1.0	synth with cache (only 1: split; only 1: split; only 1: auto; only 1: destruct 1; only 1: intros [? ?]; only 1: auto).	0.341361045837	1280
Coq.Init.Logic.and_cancel_l	40
Coq.Init.Logic.and_cancel_r	40
Coq.Init.Logic.and_comm	40	0.0.0.0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial).	0.119663953781	92
Coq.Init.Logic.and_assoc	40
Coq.Init.Logic.or_cancel_l	40
Coq.Init.Logic.or_cancel_r	40
Coq.Init.Logic.or_comm	40	0.0.0.1.0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial).	0.443625926971	649
Coq.Init.Logic.or_assoc	40
Coq.Init.Logic.iff_and	40	1.0	synth with cache (only 1: intros; only 1: assumption).	0.00882196426392	3
Coq.Init.Logic.iff_to_and	40	1.0.0.0.0.2.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial; only 1: intro H; only 1: assumption).	0.147355079651	168
Coq.Init.Logic.universal_quantification.inst	40	5.2	synth with cache (only 1: intro H1; only 1: auto).	0.0112330913544	12
Coq.Init.Logic.universal_quantification.gen	40	0.0	synth with cache (only 1: unfold all; only 1: auto).	0.00858306884766	2
Coq.Init.Logic.Logic_lemmas.absurd	40	0.7.2.1	synth with cache (only 1: intro A; only 1: intros H ?; only 1: destruct 1; only 1: assumption).	0.202245950699	398
Coq.Init.Logic.Logic_lemmas.equality.eq_sym	40	1.3	synth with cache (only 1: destruct 1; only 1: trivial).	0.00955700874329	6
Coq.Init.Logic.Logic_lemmas.equality.eq_trans	40	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.0120320320129	3
Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	40	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	0.00967693328857	2
Coq.Init.Logic.Logic_lemmas.equality.f_equal	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.0102679729462	2
Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	40	28.1	synth with cache (only 1: destruct 2; only 1: auto).	0.451560020447	1386
Coq.Init.Logic.Logic_lemmas.eq_sind_r	40	2.1.2	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct 1; only 1: auto).	0.0129091739655	8
Coq.Init.Logic.Logic_lemmas.eq_ind_r	40	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.0114920139313	3
Coq.Init.Logic.Logic_lemmas.eq_rec_r	40	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.011754989624	3
Coq.Init.Logic.Logic_lemmas.eq_rect_r	40	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.0119700431824	3
Coq.Init.Logic.equality_dep.f_equal_dep	40
Coq.Init.Logic.equality_dep2.f_equal_dep2	40	0.1.1	synth with cache (only 1: destruct H; only 1: destruct 1; only 1: reflexivity).	0.0175170898438	5
Coq.Init.Logic.rew_opp_r	40	1.0	synth with cache (only 1: destruct H; only 1: reflexivity).	0.0114619731903	3
Coq.Init.Logic.rew_opp_l	40	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.014506816864	3
Coq.Init.Logic.f_equal2	40	1.2.0.0.1	synth with cache (only 1: intros A B C Hl Hr; only 1: intros H ?; only 1: destruct 2; only 1: elim eq_sym with (1 := H0); only 1: trivial).	0.0215489864349	9
Coq.Init.Logic.f_equal3	40	0.0.0.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0174190998077	5
Coq.Init.Logic.f_equal4	40	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0227401256561	5
Coq.Init.Logic.f_equal5	40	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0271210670471	6
Coq.Init.Logic.f_equal_compose	40	0.10.3.3	synth with cache (only 1: intros A x P H y H0; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).	0.511820077896	779
Coq.Init.Logic.eq_trans_refl_l	40	0.3	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0132868289948	5
Coq.Init.Logic.eq_trans_refl_r	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0130860805511	2
Coq.Init.Logic.eq_sym_involutive	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0133411884308	2
Coq.Init.Logic.eq_trans_sym_inv_l	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0134279727936	2
Coq.Init.Logic.eq_trans_sym_inv_r	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0137639045715	2
Coq.Init.Logic.eq_trans_assoc	40	0.1.3.0	synth with cache (only 1: destruct e; only 1: intros h1 h2; only 1: destruct h2; only 1: trivial).	0.0206809043884	8
Coq.Init.Logic.rew_map	40	0.2.5	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct H; only 1: reflexivity).	0.018590927124	10
Coq.Init.Logic.eq_trans_map	40	3.28.5.12.8	synth with cache (only 1: intros A x P H y H0; only 1: intros ? ? ? Fl Fr; only 1: destruct 1; only 1: destruct Fl; only 1: assumption).	25.6084449291	96250
Coq.Init.Logic.map_subst	40	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).	0.0143070220947	2
Coq.Init.Logic.map_subst_map	40	0.1	synth with cache (only 1: destruct H; only 1: reflexivity).	0.0170528888702	3
Coq.Init.Logic.rew_swap	40	4.1.0	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.016095161438	8
Coq.Init.Logic.rew_compose	40	2.0.0	synth with cache (only 1: intros; only 1: destruct H2; only 1: reflexivity).	0.0154430866241	5
Coq.Init.Logic.eq_id_comm_l	40
Coq.Init.Logic.eq_id_comm_r	40
Coq.Init.Logic.eq_refl_map_distr	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0133619308472	2
Coq.Init.Logic.eq_trans_map_distr	40	0.1.2.4.21.0	synth with cache (only 1: destruct e; only 1: intros; only 1: rewrite eq_trans_refl_l; only 1: simpl; only 1: rewrite eq_trans_refl_l; only 1: trivial).	1.43491101265	4114
Coq.Init.Logic.eq_sym_map_distr	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0151040554047	2
Coq.Init.Logic.eq_trans_sym_distr	40	0.2.1.1	synth with cache (only 1: destruct e'; only 1: simpl; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).	0.0240960121155	17
Coq.Init.Logic.eq_trans_rew_distr	40	0.4	synth with cache (only 1: destruct e'; only 1: reflexivity).	0.0198559761047	14
Coq.Init.Logic.rew_const	40	1.3	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0175099372864	15
Coq.Init.Logic.unique_existence	40
Coq.Init.Logic.forall_exists_unique_domain_coincide	40
Coq.Init.Logic.forall_exists_coincide_unique_domain	40
Coq.Init.Logic.exists_inhabited	40	7.8.0	synth with cache (only 1: intros A P H; only 1: destruct H; only 1: auto).	0.184225797653	516
Coq.Init.Logic.inhabited_covariant	40	0.0.5	synth with cache (only 1: intro; only 1: destruct 1; only 1: auto).	0.019015789032	17
Coq.Init.Logic.eq_stepl	40	0.0.7	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.0251441001892	21
Coq.Init.Logic.iff_stepl	40	0.0.0.0	synth with cache (only 1: intros A B C [H1 H2] [H3 H4]; only 1: split; only 1: auto; only 1: auto).	0.018000125885	4
Coq.Init.Logic.ex.eq_ex_uncurried	40
Coq.Init.Logic.ex.rew_ex	40
Coq.Init.Logic.ex2.eq_ex2_uncurried	40	0.0.5.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct H; only 1: destruct p; only 1: reflexivity).	0.0390069484711	20
Coq.Init.Logic.ex2.rew_ex2	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0208809375763	2
Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.0100378990173	2
Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	40	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	0.010556936264	2
Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.0107579231262	2
Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	40	0.0.0.0.0	synth with cache (only 1: red; only 1: intros h1 h2; only 1: apply h1; only 1: destruct h2; only 1: trivial).	0.0204849243164	5
Coq.Init.Logic_Type.identity_ind_r	40	0.0.4	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct 1; only 1: auto).	0.0224549770355	24
Coq.Init.Logic_Type.identity_rec_r	40	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.0136108398438	3
Coq.Init.Logic_Type.identity_rect_r	40	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.0140330791473	3
Coq.Init.Specif.sigT_eta	40	0.59	synth with cache (only 1: destruct p; only 1: reflexivity).	0.807263851166	4481
Coq.Init.Specif.sig_eta	40	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0131001472473	2
Coq.Init.Specif.sigT2_eta	40	0.1	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0144238471985	3
Coq.Init.Specif.sig2_eta	40	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0148339271545	2
Coq.Init.Specif.exists_to_inhabited_sig	40	0.0.2.10.4	synth with cache (only 1: intro; only 1: destruct H; only 1: split; only 1: exists x; only 1: trivial).	0.216578006744	535
Coq.Init.Specif.inhabited_sig_to_exists	40	0.0.0.67.46	synth with cache (only 1: intro H1; only 1: elim H1; only 1: intros [x y]; only 1: exists x; only 1: assumption).	3.70461010933	42638
Coq.Init.Specif.sigT.eq_existT_uncurried	40	0.0.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0235459804535	4
Coq.Init.Specif.sigT.eq_sigT_uncurried	40
Coq.Init.Specif.sigT.eq_existT_curried	40	0.0.0	synth with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0210011005402	3
Coq.Init.Specif.sigT.eq_existT_curried_map	40	0.0	synth with cache (only 1: destruct p, q; only 1: reflexivity).	0.025484085083	2
Coq.Init.Specif.sigT.eq_existT_curried_trans	40	0.40.0	synth with cache (only 1: destruct p, q; only 1: subst; only 1: reflexivity).	4.20667290688	8398
Coq.Init.Specif.sigT.eq_existT_curried_congr	40	0.9.26	synth with cache (only 1: destruct 1; only 1: destruct r, q, p; only 1: reflexivity).	4.51979494095	7326
Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	40
Coq.Init.Specif.sigT.eq_sigT_rect	40
Coq.Init.Specif.sigT.rew_sigT	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0224480628967	2
Coq.Init.Specif.sig.eq_exist_uncurried	40	0.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct p, q; only 1: reflexivity).	0.0242969989777	3
Coq.Init.Specif.sig.eq_sig_uncurried	40	0.0.0.0.0.0	synth with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.046550989151	6
Coq.Init.Specif.sig.eq_sig_rect	40
Coq.Init.Specif.sig.eq_sig_uncurried_iff	40	6.4.0.0.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: apply eq_exist_uncurried).	2.1785569191	1689
Coq.Init.Specif.sig.rew_sig	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0253629684448	2
Coq.Init.Specif.sigT2.eq_existT2_uncurried	40
Coq.Init.Specif.sigT2.eq_sigT2_uncurried	40	0.0.0.3.2.0.2	synth with cache (only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.550667047501	356
Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	40	2.2.2.6.0.0.3.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: simpl in *; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl; only 1: apply eq_existT2_uncurried).	10.7720098495	9685
Coq.Init.Specif.sigT2.eq_sigT2_rect	40
Coq.Init.Specif.sigT2.rew_sigT2	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.031191110611	2
Coq.Init.Specif.sig2.eq_exist2_uncurried	40	0.0.0.0	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl in *; only 1: reflexivity).	0.036346912384	4
Coq.Init.Specif.sig2.eq_sig2_uncurried	40	0.0.0.0.0.0	synth with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.0576741695404	6
Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	40	2.2.5.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: apply eq_exist2_uncurried).	4.15292096138	2256
Coq.Init.Specif.sig2.eq_sig2_rect	40
Coq.Init.Specif.sig2.rew_sig2	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0313851833344	2
Coq.Init.Specif.Choice_lemmas.Choice	40
Coq.Init.Specif.Choice_lemmas.Choice2	40
Coq.Init.Specif.Choice_lemmas.bool_choice	40
Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	40
Coq.Init.Specif.absurd_set	40	0.0.0	synth with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).	0.0181241035461	3
Coq.QArith.QOrderedType.Q_as_OT.lt_strorder	40
Coq.QArith.QOrderedType.Q_as_OT.lt_compat	40	0.0.0	synth with cache (only 1: intros p q H r s H'; only 1: rewrite 2!Qlt_alt, H, H'; only 1: auto with *).	0.0425019264221	3
Coq.QArith.Qreduction.Qred_correct	40
Coq.QArith.Qreduction.Qred_complete	40
Coq.QArith.Qreduction.Qred_eq_iff	40
Coq.QArith.Qreduction.Qred_comp_Proper	40
Coq.QArith.Qreduction.Qplus'_correct	40
Coq.QArith.Qreduction.Qmult'_correct	40
Coq.QArith.Qreduction.Qminus'_correct	40	1.0	synth with cache (only 1: intros; only 1: apply Qred_correct).	0.0204908847809	3
Coq.QArith.Qreduction.Qplus'_comp_Proper	40
Coq.QArith.Qreduction.Qmult'_comp_Proper	40
Coq.QArith.Qreduction.Qminus'_comp_Proper	40
Coq.QArith.Qreduction.Qred_opp	40
Coq.QArith.Qreduction.Qred_compare	40
Coq.QArith.Qreduction.Qred_le	40	3.3.0.1.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- (Qred_correct q), <- (Qred_correct q'); only 1: auto with *; only 1: now rewrite !Qred_correct).	0.562638998032	138
Coq.QArith.Qreduction.Qred_lt	40	2.2.4.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- (Qred_correct q), <- (Qred_correct q'); only 1: trivial; only 1: intros; only 1: now rewrite !Qred_correct).	0.774893045425	316
Coq.QArith.Qcabs.Qred_abs	40
Coq.QArith.Qcabs.Qcabs_canon	40
Coq.QArith.Qcabs.Qcabs_case	40
Coq.QArith.Qcabs.Qcabs_pos	40
Coq.QArith.Qcabs.Qcabs_neg	40
Coq.QArith.Qcabs.Qcabs_nonneg	40	0.1.0.2.9.46	synth with cache (only 1: eapply Qle_trans; only 1: auto with *; only 1: simpl; only 1: apply Qabs_case; only 1: auto; only 1: apply (Qopp_le_compat x 0)).	2.23112988472	2873
Coq.QArith.Qcabs.Qcabs_opp	40
Coq.QArith.Qcabs.Qcabs_triangle	40
Coq.QArith.Qcabs.Qcabs_Qcmult	40
Coq.QArith.Qcabs.Qcabs_Qcminus	40
Coq.QArith.Qcabs.Qcle_Qcabs	40
Coq.QArith.Qcabs.Qcabs_triangle_reverse	40
Coq.QArith.Qcabs.Qcabs_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_null	40
Coq.QArith.Qpower.Qpower_positive_1	40
Coq.QArith.Qpower.Qpower_1	40
Coq.QArith.Qpower.Qpower_positive_0	40	1.0.0.0.1.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: easy).	0.0700719356537	11
Coq.QArith.Qpower.Qpower_0	40
Coq.QArith.Qpower.Qpower_not_0_positive	40
Coq.QArith.Qpower.Qpower_pos_positive	40
Coq.QArith.Qpower.Qpower_pos	40
Coq.QArith.Qpower.Qmult_power_positive	40
Coq.QArith.Qpower.Qmult_power	40
Coq.QArith.Qpower.Qinv_power_positive	40
Coq.QArith.Qpower.Qinv_power	40
Coq.QArith.Qpower.Qdiv_power	40
Coq.QArith.Qpower.Qinv_power_n	40
Coq.QArith.Qpower.Qpower_plus_positive	40
Coq.QArith.Qpower.Qpower_opp	40
Coq.QArith.Qpower.Qpower_minus_positive	40
Coq.QArith.Qpower.Qpower_plus	40
Coq.QArith.Qpower.Qpower_plus'	40
Coq.QArith.Qpower.Qpower_mult_positive	40
Coq.QArith.Qpower.Qpower_mult	40
Coq.QArith.Qpower.Zpower_Qpower	40
Coq.QArith.Qpower.Qsqr_nonneg	40	2.0.0.0.1.5.3	synth with cache (only 1: simpl; only 1: intro n; only 1: induction n; only 1: unfold Qle in *; only 1: simpl in *; only 1: rewrite Z.mul_1_r in *; only 1: apply Z.square_nonneg).	1.30974388123	520
Coq.QArith.Qpower.Qpower_decomp	40
Coq.QArith.Qfield.Qsrt	40
Coq.QArith.Qfield.Qsft	40
Coq.QArith.Qfield.Qpower_theory	40	1.14.40	synth with cache (only 1: constructor; only 1: intros q r; only 1: now destruct q, r).	1.98219704628	2106
Coq.QArith.Qfield.Examples.ex1	40	0	synth with cache (only 1: exact Qmult_plus_distr_l).	0.00931310653687	1
Coq.QArith.Qfield.Examples.ex2	40	0	synth with cache (only 1: exact Qplus_comm).	0.00906682014465	1
Coq.QArith.Qfield.Examples.ex3	40	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.0593328475952	5
Coq.QArith.Qfield.Examples.ex4	40	1	synth with cache (only 1: now split).	0.0100080966949	2
Coq.QArith.Qfield.Examples.ex5	40	2	synth with cache (only 1: trivial).	0.0172908306122	3
Coq.QArith.Qfield.Examples.ex6	40	0	synth with cache (only 1: ring).	0.0161168575287	1
Coq.QArith.Qfield.Examples.ex7	40	0.0.0.1	synth with cache (only 1: red; only 1: simpl; only 1: intro; only 1: ring).	0.0388481616974	5
Coq.QArith.Qfield.Examples.ex8	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0199649333954	2
Coq.QArith.Qfield.Examples.ex9	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0202569961548	2
Coq.QArith.Qfield.Examples.ex10	40
Coq.QArith.Qfield.Qopp_plus	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).	0.058876991272	11
Coq.QArith.Qfield.Qopp_opp	40	0.0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).	0.0322108268738	4
Coq.QArith.Qcanon.Qred_identity	40
Coq.QArith.Qcanon.Qred_identity2	40
Coq.QArith.Qcanon.Qred_iff	40
Coq.QArith.Qcanon.Qc_is_canon	40
Coq.QArith.Qcanon.Qc_decomp	40
Coq.QArith.Qcanon.Qred_involutive	40
Coq.QArith.Qcanon.Q2Qc_eq_iff	40
Coq.QArith.Qcanon.Qceq_alt	40
Coq.QArith.Qcanon.Qclt_alt	40	0.0.0	synth with cache (only 1: split; only 1: easy; only 1: easy).	0.0306439399719	3
Coq.QArith.Qcanon.Qcgt_alt	40	0.1.9.7	synth with cache (only 1: intros a n; only 1: destruct n; only 1: symmetry; only 1: apply Z.gt_lt_iff).	1.56095194817	843
Coq.QArith.Qcanon.Qcle_alt	40	8.0	synth with cache (only 1: intros; only 1: easy').	0.038920879364	11
Coq.QArith.Qcanon.Qcge_alt	40	2.4.11.0	synth with cache (only 1: intros; only 1: split; only 1: apply Z.ge_le_iff; only 1: intuition).	2.50822901726	1428
Coq.QArith.Qcanon.Qc_eq_dec	40
Coq.QArith.Qcanon.Q_apart_0_1	40	2	synth with cache (only 1: now Z.nzsimpl).	0.0613579750061	3
Coq.QArith.Qcanon.Qcplus_assoc	40
Coq.QArith.Qcanon.Qcplus_0_l	40
Coq.QArith.Qcanon.Qcplus_0_r	40
Coq.QArith.Qcanon.Qcplus_comm	40
Coq.QArith.Qcanon.Qcopp_involutive	40
Coq.QArith.Qcanon.Qcplus_opp_r	40	0.0.2.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl in *; only 1: ring).	0.0868730545044	7
Coq.QArith.Qcanon.Qcmult_assoc	40	6.1.0.3.0.1	synth with cache (only 1: intros; only 1: qc; only 1: unfold Qeq, Qmult, Qplus; only 1: simpl in *; only 1: simpl_mult; only 1: ring).	1.61514210701	808
Coq.QArith.Qcanon.Qcmult_0_l	40	6.1.7	synth with cache (only 1: induction n; only 1: qc; only 1: now Z.nzsimpl').	0.668576002121	425
Coq.QArith.Qcanon.Qcmult_0_r	40	1.0.6.0.0	synth with cache (only 1: intros; only 1: qc; only 1: unfold Qeq; only 1: simpl; only 1: ring).	0.400228977203	131
Coq.QArith.Qcanon.Qcmult_1_l	40
Coq.QArith.Qcanon.Qcmult_1_r	40
Coq.QArith.Qcanon.Qcmult_comm	40	1.0.0.3.7.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	0.765537977219	489
Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	0.0.22	synth with cache (only 1: intros (a1, a2) (b1, b2) (c1, c2); only 1: qc; only 1: ring).	10.5470640659	4937
Coq.QArith.Qcanon.Qcmult_plus_distr_l	40
Coq.QArith.Qcanon.Qcmult_integral	40
Coq.QArith.Qcanon.Qcmult_integral_l	40
Coq.QArith.Qcanon.Qcmult_inv_r	40	1.3.0.2.1	synth with cache (only 1: intros; only 1: intuition idtac; only 1: qc; only 1: apply Qmult_inv_r; only 1: auto with *).	0.893764972687	297
Coq.QArith.Qcanon.Qcmult_inv_l	40	0.0.4.0.3.0	synth with cache (only 1: intros; only 1: intuition idtac; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).	1.12249898911	416
Coq.QArith.Qcanon.Qcinv_mult_distr	40
Coq.QArith.Qcanon.Qcdiv_mult_l	40
Coq.QArith.Qcanon.Qcmult_div_r	40
Coq.QArith.Qcanon.Qcle_refl	40	0.17.9	synth with cache (only 1: intro y; only 1: red; only 1: auto with qarith).	1.44447398186	1402
Coq.QArith.Qcanon.Qcle_antisym	40	5.5.2.0.7	synth with cache (only 1: intros n m; only 1: destruct n, m; only 1: intros H; only 1: symmetry; only 1: intuition).	5.25291109085	2413
Coq.QArith.Qcanon.Qcle_trans	40
Coq.QArith.Qcanon.Qclt_not_eq	40	8.5.12.0.3	synth with cache (only 1: intros; only 1: contradict H; only 1: rewrite H; only 1: destruct H; only 1: apply Z.lt_irrefl).	5.47544384003	7339
Coq.QArith.Qcanon.Qclt_le_weak	40	8.6.2.12.0	synth with cache (only 1: unfold Qclt; only 1: intros (cc, pp); only 1: red; only 1: destr_bool; only 1: firstorder).	7.63644313812	8868
Coq.QArith.Qcanon.Qcle_lt_trans	40	1.1.1.4.0	synth with cache (only 1: intros x y z; only 1: intuition auto; N.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: apply Qle_lt_trans with y; only 1: auto with qarith; only 1: assumption).	0.368172168732	117
Coq.QArith.Qcanon.Qclt_le_trans	40
Coq.QArith.Qcanon.Qclt_trans	40	11.0.1.0.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: eapply Qlt_le_trans; only 1: eauto; only 1: auto with *).	2.57912898064	1624
Coq.QArith.Qcanon.Qcnot_lt_le	40	4.0.4.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros n m; only 1: intro H; only 1: auto with qarith).	1.47288584709	370
Coq.QArith.Qcanon.Qcnot_le_lt	40	1.2.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros H0; only 1: auto with qarith).	0.201497793198	23
Coq.QArith.Qcanon.Qclt_not_le	40	6.0.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: auto with qarith).	0.0467171669006	14
Coq.QArith.Qcanon.Qcle_not_lt	40	0.0.4.0.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: contradict H; only 1: apply Qlt_not_le; only 1: auto).	0.0481491088867	9
Coq.QArith.Qcanon.Qcle_lt_or_eq	40
Coq.QArith.Qcanon.Qc_dec	40
Coq.QArith.Qcanon.Qclt_le_dec	40
Coq.QArith.Qcanon.Qcopp_le_compat	40
Coq.QArith.Qcanon.Qcle_minus_iff	40
Coq.QArith.Qcanon.Qclt_minus_iff	40
Coq.QArith.Qcanon.Qcplus_le_compat	40
Coq.QArith.Qcanon.Qcmult_le_compat_r	40
Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40
Coq.QArith.Qcanon.Qcmult_lt_compat_r	40
Coq.QArith.Qcanon.Qcpower_1	40
Coq.QArith.Qcanon.Qcpower_0	40	1.3.6.0.1.10.12.3	synth with cache (only 1: unfold Q2Qc; only 1: intro m; only 1: destruct m; only 1: intros H; only 1: Nat.order; only 1: simpl; only 1: intro H; only 1: auto with qarith).	22.239164114	24147
Coq.QArith.Qcanon.Qcpower_pos	40
Coq.QArith.Qcanon.Qc_eq_bool_correct	40
Coq.QArith.Qcanon.Qcrt	40
Coq.QArith.Qcanon.Qcft	40
Coq.QArith.Qcanon.test_field	40	0.0.1.4.0.0	synth with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_r; only 1: auto).	0.448570966721	145
Coq.QArith.Qreals.IZR_nz	40	2	synth with cache (only 1: auto with real).	0.026741027832	3
Coq.QArith.Qreals.eqR_Qeq	40
Coq.QArith.Qreals.Qeq_eqR	40
Coq.QArith.Qreals.Rle_Qle	40
Coq.QArith.Qreals.Qle_Rle	40
Coq.QArith.Qreals.Rlt_Qlt	40
Coq.QArith.Qreals.Qlt_Rlt	40
Coq.QArith.Qreals.Q2R_plus	40
Coq.QArith.Qreals.Q2R_mult	40
Coq.QArith.Qreals.Q2R_opp	40
Coq.QArith.Qreals.Q2R_minus	40
Coq.QArith.Qreals.Q2R_inv	40
Coq.QArith.Qreals.Q2R_div	40
Coq.QArith.QArith_base.inject_Z_injective	40
Coq.QArith.QArith_base.Qeq_alt	40
Coq.QArith.QArith_base.Qlt_alt	40	2.1.1.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: reflexivity).	0.0553388595581	11
Coq.QArith.QArith_base.Qgt_alt	40
Coq.QArith.QArith_base.Qle_alt	40	2.1.1.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: reflexivity).	0.0603890419006	11
Coq.QArith.QArith_base.Qge_alt	40
Coq.QArith.QArith_base.Qcompare_antisym	40
Coq.QArith.QArith_base.Qcompare_spec	40
Coq.QArith.QArith_base.Qeq_refl	40	0.2	synth with cache (only 1: red; only 1: now Z.nzsimpl).	0.113075017929	4
Coq.QArith.QArith_base.Qeq_sym	40	4.0	synth with cache (only 1: symmetry; only 1: auto).	0.025267124176	6
Coq.QArith.QArith_base.Qeq_trans	40
Coq.QArith.QArith_base.Q_Setoid	40	0.0.0.0.0.0.2.63.12.11.71	synth with cache (only 1: split; only 1: intuition; only 1: intuition; only 1: intros l'; only 1: intro; only 1: intro; only 1: unfold Qeq; only 1: intros XY YZ; only 1: apply Z.mul_reg_r with (QDen y); only 1: auto with qarith; only 1: now rewrite Z.mul_shuffle0, XY, Z.mul_shuffle0, YZ, Z.mul_shuffle0).	36.2692210674	51256
Coq.QArith.QArith_base.Qeq_dec	40
Coq.QArith.QArith_base.Qeq_bool_iff	40
Coq.QArith.QArith_base.Qeq_bool_eq	40
Coq.QArith.QArith_base.Qeq_eq_bool	40	0	synth with cache (only 1: apply Qeq_bool_iff).	0.0165250301361	1
Coq.QArith.QArith_base.Qeq_bool_neq	40
Coq.QArith.QArith_base.Qle_bool_iff	40
Coq.QArith.QArith_base.Qle_bool_imp_le	40
Coq.QArith.QArith_base.Qnot_eq_sym	40	1.1.5	synth with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: intros H; only 1: Z.order).	0.0486149787903	25
Coq.QArith.QArith_base.Qeq_bool_comm	40
Coq.QArith.QArith_base.Qeq_bool_refl	40
Coq.QArith.QArith_base.Qeq_bool_sym	40	0.0.0.29	synth with cache (only 1: induction 1; only 1: apply eq_true_iff_eq; only 1: rewrite !Qeq_bool_iff; only 1: now symmetry).	3.17960309982	2711
Coq.QArith.QArith_base.Qeq_bool_trans	40
Coq.QArith.QArith_base.Qmake_Qdiv	40	0.34.0.12	synth with cache (only 1: Z.bitwise; only 1: simpl; only 1: Z.nzsimpl'; only 1: trivial).	9.02732205391	8890
Coq.QArith.QArith_base.Qplus_comp	40
Coq.QArith.QArith_base.Qopp_comp	40
Coq.QArith.QArith_base.Qminus_comp	40
Coq.QArith.QArith_base.Qmult_comp	40
Coq.QArith.QArith_base.Qinv_comp	40
Coq.QArith.QArith_base.Qdiv_comp	40
Coq.QArith.QArith_base.Qcompare_comp	40
Coq.QArith.QArith_base.Qle_comp	40
Coq.QArith.QArith_base.Qlt_compat	40
Coq.QArith.QArith_base.Qeqb_comp	40
Coq.QArith.QArith_base.Qleb_comp	40
Coq.QArith.QArith_base.Q_apart_0_1	40	5	synth with cache (only 1: easy).	0.0247659683228	6
Coq.QArith.QArith_base.Qplus_assoc	40
Coq.QArith.QArith_base.Qplus_0_l	40	3.1.0.15.20	synth with cache (only 1: intros le_mn0; only 1: red; only 1: simpl in *; only 1: Z.nzsimpl; only 1: auto with relations).	8.27767014503	7218
Coq.QArith.QArith_base.Qplus_0_r	40	2.8.0.0.0	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: Z.nzsimpl; only 1: now rewrite Pos.mul_1_r).	1.41719698906	380
Coq.QArith.QArith_base.Qplus_comm	40	0.0.0.0.2.1.3.4	synth with cache (only 1: destruct x; only 1: unfold Qeq; only 1: generalize 1%Z; only 1: intros; only 1: simpl; only 1: simpl_mult; only 1: ring_simplify; only 1: f_equiv).	2.69055700302	976
Coq.QArith.QArith_base.Qopp_involutive	40
Coq.QArith.QArith_base.Qplus_opp_r	40	0.14.2.1.0	synth with cache (only 1: unfold Qeq; only 1: simpl; only 1: intros; only 1: Z.nzsimpl'; only 1: ring).	5.71346998215	2534
Coq.QArith.QArith_base.Qplus_inj_r	40
Coq.QArith.QArith_base.Qplus_inj_l	40
Coq.QArith.QArith_base.Qmult_assoc	40
Coq.QArith.QArith_base.Qmult_0_l	40	0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: congruence).	0.0267961025238	3
Coq.QArith.QArith_base.Qmult_0_r	40	0.1.0.1	synth with cache (only 1: red; only 1: simpl; only 1: intros; only 1: now Z.nzsimpl).	0.392061948776	23
Coq.QArith.QArith_base.Qmult_1_l	40
Coq.QArith.QArith_base.Qmult_1_r	40	0.1.0.0.0.0.0.0	synth with cache (only 1: intro; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).	0.0784120559692	15
Coq.QArith.QArith_base.Qmult_comm	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: intros; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).	0.0952339172363	11
Coq.QArith.QArith_base.Qmult_plus_distr_r	40
Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.0977771282196	5
Coq.QArith.QArith_base.Qmult_integral	40
Coq.QArith.QArith_base.Qmult_integral_l	40
Coq.QArith.QArith_base.inject_Z_plus	40
Coq.QArith.QArith_base.inject_Z_mult	40	2.0	synth with cache (only 1: unfold Qplus, inject_Z; only 1: intuition).	0.0222761631012	4
Coq.QArith.QArith_base.inject_Z_opp	40	0	synth with cache (only 1: now destruct x).	0.0199148654938	1
Coq.QArith.QArith_base.Qinv_involutive	40
Coq.QArith.QArith_base.Qmult_inv_r	40
Coq.QArith.QArith_base.Qinv_mult_distr	40
Coq.QArith.QArith_base.Qdiv_mult_l	40
Coq.QArith.QArith_base.Qmult_div_r	40
Coq.QArith.QArith_base.Qinv_plus_distr	40	8.0.3.3.2.0.0.3	synth with cache (only 1: intros x y; only 1: unfold Qplus, inject_Z; only 1: simpl; only 1: unfold Qeq; only 1: intro H0; only 1: simpl; only 1: simpl_mult; only 1: ring).	32.1738009453	10910
Coq.QArith.QArith_base.Qinv_minus_distr	40	0.0.5.0.1	synth with cache (only 1: red; only 1: simpl; only 1: intros; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	0.50559592247	217
Coq.QArith.QArith_base.Qmult_inj_r	40
Coq.QArith.QArith_base.Qmult_inj_l	40
Coq.QArith.QArith_base.Qle_refl	40
Coq.QArith.QArith_base.Qle_antisym	40
Coq.QArith.QArith_base.Qle_trans	40
Coq.QArith.QArith_base.Qlt_irrefl	40	12	synth with cache (only 1: apply Z.lt_irrefl).	0.174968004227	56
Coq.QArith.QArith_base.Qlt_not_eq	40
Coq.QArith.QArith_base.Zle_Qle	40
Coq.QArith.QArith_base.Zlt_Qlt	40
Coq.QArith.QArith_base.Qle_lteq	40
Coq.QArith.QArith_base.Qlt_le_weak	40	19.12.4.39	synth with cache (only 1: destruct y; only 1: intro E; only 1: intro H; only 1: intuition congruence).	27.4847300053	44416
Coq.QArith.QArith_base.Qle_lt_trans	40
Coq.QArith.QArith_base.Qlt_le_trans	40
Coq.QArith.QArith_base.Qlt_trans	40
Coq.QArith.QArith_base.Qnot_lt_le	40	5.7.8.1	synth with cache (only 1: CRelationClasses.simpl_crelation; only 1: apply H; only 1: apply Z.gt_lt_iff; only 1: trivial).	2.61845493317	2354
Coq.QArith.QArith_base.Qnot_le_lt	40	20.7	synth with cache (only 1: intros H; only 1: Z.order).	1.69306087494	1179
Coq.QArith.QArith_base.Qlt_not_le	40	1	synth with cache (only 1: apply Z.nle_gt).	0.0143551826477	2
Coq.QArith.QArith_base.Qle_not_lt	40	28.0.6	synth with cache (only 1: intro; only 1: apply Z.nlt_ge; only 1: auto).	3.14081406593	4367
Coq.QArith.QArith_base.Qle_lt_or_eq	40
Coq.QArith.QArith_base.Q_dec	40
Coq.QArith.QArith_base.Qlt_le_dec	40
Coq.QArith.QArith_base.Qarchimedean	40
Coq.QArith.QArith_base.Qopp_le_compat	40
Coq.QArith.QArith_base.Qle_minus_iff	40
Coq.QArith.QArith_base.Qlt_minus_iff	40
Coq.QArith.QArith_base.Qplus_le_compat	40
Coq.QArith.QArith_base.Qplus_lt_le_compat	40
Coq.QArith.QArith_base.Qplus_le_l	40
Coq.QArith.QArith_base.Qplus_le_r	40
Coq.QArith.QArith_base.Qplus_lt_l	40
Coq.QArith.QArith_base.Qplus_lt_r	40	0.0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *).	5.35678887367	1392
Coq.QArith.QArith_base.Qmult_le_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	40
Coq.QArith.QArith_base.Qmult_le_r	40
Coq.QArith.QArith_base.Qmult_le_l	40
Coq.QArith.QArith_base.Qmult_lt_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_r	40
Coq.QArith.QArith_base.Qmult_lt_l	40
Coq.QArith.QArith_base.Qmult_le_0_compat	40
Coq.QArith.QArith_base.Qinv_le_0_compat	40
Coq.QArith.QArith_base.Qle_shift_div_l	40
Coq.QArith.QArith_base.Qle_shift_inv_l	40
Coq.QArith.QArith_base.Qle_shift_div_r	40
Coq.QArith.QArith_base.Qle_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_0_compat	40	0.0.0.0	synth with cache (only 1: intros [[| n| n] d] Ha; only 1: assumption; only 1: assumption; only 1: assumption).	0.0267660617828	4
Coq.QArith.QArith_base.Qlt_shift_div_l	40
Coq.QArith.QArith_base.Qlt_shift_inv_l	40
Coq.QArith.QArith_base.Qlt_shift_div_r	40
Coq.QArith.QArith_base.Qlt_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_contravar	40
Coq.QArith.QArith_base.Qpower_positive_comp	40
Coq.QArith.QArith_base.Qpower_comp	40
Coq.QArith.Qminmax.Q.plus_max_distr_l	40
Coq.QArith.Qminmax.Q.plus_max_distr_r	40
Coq.QArith.Qminmax.Q.plus_min_distr_l	40
Coq.QArith.Qminmax.Q.plus_min_distr_r	40	0.0.0.0.1.0.2.0	synth with cache (only 1: intros; only 1: rewrite (Qplus_comm n p), (Qplus_comm m p), (Qplus_comm _ p); only 1: apply min_monotone; only 1: eauto with *; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).	1.23443698883	101
Coq.QArith.Qround.Qopp_lt_compat	40
Coq.QArith.Qround.Qfloor_Z	40	5.0.13	synth with cache (only 1: simpl; only 1: intros; only 1: apply Z.div_1_r).	3.52044320107	2364
Coq.QArith.Qround.Qceiling_Z	40
Coq.QArith.Qround.Qfloor_le	40
Coq.QArith.Qround.Qle_ceiling	40
Coq.QArith.Qround.Qle_floor_ceiling	40
Coq.QArith.Qround.Qlt_floor	40
Coq.QArith.Qround.Qceiling_lt	40
Coq.QArith.Qround.Qfloor_resp_le	40
Coq.QArith.Qround.Qceiling_resp_le	40
Coq.QArith.Qround.Qfloor_comp_Proper	40
Coq.QArith.Qround.Qceiling_comp_Proper	40	1.2.1.1.0	synth with cache (only 1: intros x y H; only 1: apply Z.le_antisymm; only 1: auto with *; only 1: symmetry in H; only 1: auto with *).	0.403468132019	53
Coq.QArith.Qround.Zdiv_Qdiv	40
Coq.QArith.Qabs.Qabs_case	40
Coq.QArith.Qabs.Qabs_wd_Proper	40
Coq.QArith.Qabs.Qabs_pos	40	4.0.0.3.1.2.0.1.1	synth with cache (only 1: intros [[| n| n] d] Ha; only 1: red; only 1: simpl; only 1: ring; only 1: simpl; only 1: unfold Qred, Qeq in *; only 1: simpl; only 1: reflexivity; only 1: easy).	3.2082760334	1666
Coq.QArith.Qabs.Qabs_neg	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x H; only 1: apply Qabs_case; only 1: intros H0; only 1: setoid_replace x with 0; only 1: reflexivity; only 1: apply Qle_antisym; only 1: assumption; only 1: assumption; only 1: reflexivity).	0.0636088848114	9
Coq.QArith.Qabs.Qabs_nonneg	40	0.0.0.0.14.14	synth with cache (only 1: intros (c, Hc); only 1: simpl; only 1: unfold Qle in *; only 1: simpl in *; only 1: Z.nzsimpl; only 1: Z.order_pos').	6.44344687462	3692
Coq.QArith.Qabs.Zabs_Qabs	40	1.1.1	synth with cache (only 1: intros p Hp; only 1: simpl; only 1: auto with *).	0.0324749946594	6
Coq.QArith.Qabs.Qabs_opp	40	1.2.1.0.6.1.8	synth with cache (only 1: simpl; only 1: intros (x1, x2); only 1: case x1; only 1: reflexivity; only 1: intros; only 1: easy; only 1: easy || now destruct y).	23.1804039478	15225
Coq.QArith.Qabs.Qabs_triangle	40
Coq.QArith.Qabs.Qabs_Qmult	40	1.3.2.0.1.0	synth with cache (only 1: intros [xn xd] [yn yd]; only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: repeat rewrite <- Z.abs_mul; only 1: auto with *).	0.642480134964	224
Coq.QArith.Qabs.Qabs_Qinv	40
Coq.QArith.Qabs.Qabs_Qminus	40
Coq.QArith.Qabs.Qle_Qabs	40
Coq.QArith.Qabs.Qabs_triangle_reverse	40
Coq.QArith.Qabs.Qabs_Qle_condition	40
Coq.QArith.Qabs.Qabs_diff_Qle_condition	40
Coq.Classes.CMorphisms.Proper.eq_proper_proxy	40	1	synth with cache (only 1: reflexivity).	0.00918197631836	2
Coq.Classes.CMorphisms.Proper.reflexive_proper_proxy	40	1	synth with cache (only 1: firstorder).	0.0123200416565	2
Coq.Classes.CMorphisms.Proper.proper_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.00863909721375	1
Coq.Classes.CMorphisms.Relations.pointwise_pointwise	40	1.6.0.0.1.7.8.5.5	synth with cache (only 1: unfold relation_equivalence, iffT; only 1: intros h1 h2; only 1: split; only 1: red; only 1: intros x y H'; only 1: destruct 1; only 1: firstorder; only 1: red; only 1: firstorder).	7.42052197456	14666
Coq.Classes.CMorphisms.Relations.subrelation_id_proper	40	3	synth with cache (only 1: apply H).	0.00981688499451	4
Coq.Classes.CMorphisms.Relations.subrelation_respectful	40	0	synth with cache (only 1: firstorder).	0.0126650333405	1
Coq.Classes.CMorphisms.Relations.subrelation_refl	40	1.0.0	synth with cache (only 1: hnf; only 1: intros x y H'; only 1: assumption).	0.0169768333435	4
Coq.Classes.CMorphisms.Relations.subrelation_proper	40	0	synth with cache (only 1: firstorder).	0.0115919113159	1
Coq.Classes.CMorphisms.Relations.proper_subrelation_proper_arrow	40	0	synth with cache (only 1: simpl_crelation).	0.0169470310211	1
Coq.Classes.CMorphisms.Relations.pointwise_subrelation	40	1	synth with cache (only 1: firstorder).	0.0111060142517	2
Coq.Classes.CMorphisms.Relations.forall_subrelation	40	7.1	synth with cache (only 1: intro; only 1: firstorder).	0.0432229042053	29
Coq.Classes.CMorphisms.iff_impl_subrelation	40	0	synth with cache (only 1: simpl_crelation).	0.0154798030853	1
Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0	synth with cache (only 1: firstorder).	0.0114901065826	1
Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	0.0	synth with cache (only 1: reduce; only 1: firstorder).	0.0151898860931	2
Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0	synth with cache (only 1: firstorder).	0.0127191543579	1
Coq.Classes.CMorphisms.GenericInstances.respectful_per_obligation_2	40
Coq.Classes.CMorphisms.GenericInstances.flip_proper_obligation_1	40	11	synth with cache (only 1: firstorder).	0.0418779850006	36
Coq.Classes.CMorphisms.GenericInstances.trans_contra_co_type_morphism_obligation_1	40	6	synth with cache (only 1: firstorder).	0.145330190659	7
Coq.Classes.CMorphisms.GenericInstances.trans_contra_inv_impl_type_morphism_obligation_1	40	6	synth with cache (only 1: firstorder).	0.512868881226	112
Coq.Classes.CMorphisms.GenericInstances.trans_co_impl_type_morphism_obligation_1	40	5	synth with cache (only 1: firstorder).	2.20202994347	721
Coq.Classes.CMorphisms.GenericInstances.trans_sym_co_inv_impl_type_morphism_obligation_1	40	6.1	synth with cache (only 1: symmetry; only 1: firstorder).	1.86511707306	573
Coq.Classes.CMorphisms.GenericInstances.trans_sym_contra_arrow_morphism_obligation_1	40	10	synth with cache (only 1: firstorder).	7.41987919807	2664
Coq.Classes.CMorphisms.GenericInstances.per_partial_app_type_morphism_obligation_1	40	9	synth with cache (only 1: firstorder).	0.137497901917	16
Coq.Classes.CMorphisms.GenericInstances.trans_co_eq_inv_arrow_morphism_obligation_1	40	9	synth with cache (only 1: firstorder).	0.3049659729	153
Coq.Classes.CMorphisms.GenericInstances.PER_type_morphism_obligation_1	40	11	synth with cache (only 1: firstorder).	9.41851401329	3209
Coq.Classes.CMorphisms.GenericInstances.symmetric_equiv_flip	40	3.0	synth with cache (only 1: hnf; only 1: firstorder).	0.0236659049988	5
Coq.Classes.CMorphisms.GenericInstances.compose_proper_obligation_1	40	8	synth with cache (only 1: firstorder).	0.0365481376648	9
Coq.Classes.CMorphisms.GenericInstances.reflexive_eq_dom_reflexive	40	3.1	synth with cache (only 1: intros; only 1: simpl_crelation).	0.0262429714203	6
Coq.Classes.CMorphisms.GenericInstances.respectful_morphism	40
Coq.Classes.CMorphisms.GenericInstances.Reflexive_partial_app_morphism	40	0.5	synth with cache (only 1: reduce; only 1: auto).	0.0171990394592	7
Coq.Classes.CMorphisms.GenericInstances.flip_respectful	40	0	synth with cache (only 1: firstorder).	0.0146400928497	1
Coq.Classes.CMorphisms.GenericInstances.flip1	40	0.0	synth with cache (only 1: reduce; only 1: auto).	0.0147500038147	2
Coq.Classes.CMorphisms.GenericInstances.flip2	40	0	synth with cache (only 1: firstorder).	0.0110569000244	1
Coq.Classes.CMorphisms.GenericInstances.eq_subrelation	40	2.1	synth with cache (only 1: hnf; only 1: simpl_crelation).	0.0304930210114	12
Coq.Classes.CMorphisms.GenericInstances.reflexive_proper	40	0	synth with cache (only 1: firstorder).	0.0130178928375	1
Coq.Classes.CMorphisms.GenericInstances.proper_eq	40	0	synth with cache (only 1: firstorder).	0.0114190578461	1
Coq.Classes.CMorphisms.proper_proper	40	0.0.0.0.0.0.0.0	synth with cache (only 1: reduce; only 1: split; only 1: intros; only 1: subst; only 1: firstorder; only 1: intros; only 1: subst; only 1: firstorder).	0.0382480621338	8
Coq.Classes.CMorphisms.Normalize.proper_normalizes_proper	40	7.0	synth with cache (only 1: simpl_crelation; only 1: firstorder).	0.0283770561218	9
Coq.Classes.CMorphisms.Normalize.flip_atom	40	0	synth with cache (only 1: firstorder).	0.0120530128479	1
Coq.Classes.CMorphisms.flip_arrow	40
Coq.Classes.CMorphisms.proper_sym_flip	40	0.2	synth with cache (only 1: intros; only 1: simpl_crelation).	0.0276308059692	4
Coq.Classes.CMorphisms.proper_sym_flip_2	40	1.0.2.7.0	synth with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: unfold flip, respectful; only 1: intros; only 1: intros x x' Hxx'; only 1: auto).	3.54328489304	630
Coq.Classes.CMorphisms.proper_sym_impl_iff	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.0.0.0.0	synth with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.034243106842	5
Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40	0.0.0.0.1.3.1.0.15	synth with cache (only 1: intro H; only 1: intros A R1 Sym B R2 f Hf; only 1: intros x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: apply Hf; only 1: auto; only 1: auto; only 1: eauto).	27.0297319889	8351
Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40	0.0.0.0.0	synth with cache (only 1: intros A R Sym B R' Sym' f Hf x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0413069725037	5
Coq.Classes.CMorphisms.PartialOrder_proper_type	40
Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40
Coq.Classes.CMorphisms.StrictOrder_PreOrder	40
Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40
Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40
Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40
Coq.Classes.Morphisms_Prop.well_founded_morphism	40
Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	2.2.5.6	synth with cache (only 1: intros; only 1: transitivity y; only 1: auto; only 1: auto).	0.475142002106	598
Coq.Classes.CEquivalence.Respecting.respecting_equiv_obligation_3	40
Coq.Classes.CEquivalence.pointwise_reflexive	40	2	synth with cache (only 1: simpl_crelation).	0.0185120105743	3
Coq.Classes.CEquivalence.pointwise_symmetric	40	0	synth with cache (only 1: firstorder).	0.0122539997101	1
Coq.Classes.CEquivalence.pointwise_transitive	40	0	synth with cache (only 1: firstorder).	0.017235994339	1
Coq.Classes.CEquivalence.pointwise_equivalence	40	0	synth with cache (only 1: firstorder).	0.406318187714	1
Coq.Classes.CRelationClasses.Defs.complement_inverse	40	2	synth with cache (only 1: reflexivity).	0.0106689929962	3
Coq.Classes.CRelationClasses.Defs.StrictOrder_Asymmetric	40
Coq.Classes.CRelationClasses.Defs.subrelation_symmetric	40	0	synth with cache (only 1: firstorder).	0.0119872093201	1
Coq.Classes.CRelationClasses.Defs.flip.flip_Reflexive	40	2.0	synth with cache (only 1: hnf; only 1: firstorder).	0.0141899585724	4
Coq.Classes.CRelationClasses.Defs.flip.flip_Antisymmetric	40	4.1	synth with cache (only 1: hnf; only 1: auto).	0.025444984436	21
Coq.Classes.CRelationClasses.Defs.flip.flip_PreOrder	40	2	synth with cache (only 1: firstorder).	0.0233340263367	3
Coq.Classes.CRelationClasses.Defs.flip.flip_StrictOrder	40	1	synth with cache (only 1: firstorder).	0.0239579677582	2
Coq.Classes.CRelationClasses.Defs.flip.flip_PER	40	1	synth with cache (only 1: firstorder).	0.0320792198181	2
Coq.Classes.CRelationClasses.Defs.flip.flip_Equivalence	40	1	synth with cache (only 1: firstorder).	0.0397608280182	2
Coq.Classes.CRelationClasses.Defs.complement.complement_Irreflexive	40	1	synth with cache (only 1: firstorder).	0.0128049850464	2
Coq.Classes.CRelationClasses.Defs.complement.complement_Symmetric	40	0	synth with cache (only 1: firstorder).	0.0119769573212	1
Coq.Classes.CRelationClasses.iffT_Reflexive	40	3.3.5.10	synth with cache (only 1: intro H; only 1: split; only 1: auto; only 1: auto).	0.166282892227	427
Coq.Classes.CRelationClasses.iffT_Symmetric	40	0	synth with cache (only 1: firstorder).	0.012298822403	1
Coq.Classes.CRelationClasses.iffT_Transitive	40	0	synth with cache (only 1: firstorder).	0.0148379802704	1
Coq.Classes.CRelationClasses.Binary.relation_equivalence_equivalence	40
Coq.Classes.CRelationClasses.Binary.relation_implication_preorder	40	2	synth with cache (only 1: firstorder).	0.0145568847656	3
Coq.Classes.CRelationClasses.Binary.partial_order_antisym	40	0	synth with cache (only 1: firstorder).	0.0207419395447	1
Coq.Classes.CRelationClasses.Binary.PartialOrder_inverse	40	2.0	synth with cache (only 1: reduce_goal; only 1: firstorder).	0.0572779178619	4
Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	2.1.5.8	synth with cache (only 1: intros; only 1: transitivity y; only 1: auto; only 1: auto).	1.23300814629	1458
Coq.Classes.Equivalence.Respecting.respecting_equiv_obligation_3	40
Coq.Classes.Equivalence.pointwise_reflexive	40	0	synth with cache (only 1: simpl_relation).	0.0358898639679	1
Coq.Classes.Equivalence.pointwise_symmetric	40	0	synth with cache (only 1: firstorder).	0.0347158908844	1
Coq.Classes.Equivalence.pointwise_transitive	40	0	synth with cache (only 1: firstorder).	0.014212846756	1
Coq.Classes.Equivalence.pointwise_equivalence	40	0	synth with cache (only 1: firstorder).	0.383733034134	1
Coq.Classes.EquivDec.unit_eqdec_obligation_1	40
Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40
Coq.Classes.EquivDec.list_eqdec_obligation_5	40
Coq.Classes.RelationClasses.Defs.complement_inverse	40	2	synth with cache (only 1: auto).	0.00953316688538	3
Coq.Classes.RelationClasses.Defs.StrictOrder_Asymmetric	40
Coq.Classes.RelationClasses.Defs.subrelation_symmetric	40	0	synth with cache (only 1: firstorder).	0.0121932029724	1
Coq.Classes.RelationClasses.Defs.flip.flip_Reflexive	40	2.0.0.0	synth with cache (only 1: hnf; only 1: intros; only 1: hnf; only 1: firstorder).	0.0198218822479	6
Coq.Classes.RelationClasses.Defs.flip.flip_Antisymmetric	40	4.1	synth with cache (only 1: hnf; only 1: auto).	0.0421600341797	23
Coq.Classes.RelationClasses.Defs.flip.flip_PreOrder	40	2	synth with cache (only 1: firstorder).	0.0251469612122	3
Coq.Classes.RelationClasses.Defs.flip.flip_StrictOrder	40	1	synth with cache (only 1: firstorder).	0.028058052063	2
Coq.Classes.RelationClasses.Defs.flip.flip_PER	40	1	synth with cache (only 1: firstorder).	0.0382199287415	2
Coq.Classes.RelationClasses.Defs.flip.flip_Equivalence	40	1	synth with cache (only 1: firstorder).	0.0385479927063	2
Coq.Classes.RelationClasses.Defs.complement.complement_Irreflexive	40	1	synth with cache (only 1: firstorder).	0.0125861167908	2
Coq.Classes.RelationClasses.Defs.complement.complement_Symmetric	40	0	synth with cache (only 1: firstorder).	0.0137650966644	1
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	1.14.2.0.0	synth with cache (only 1: induction l; only 1: apply (symmetry (x:=_)); only 1: assumption; only 1: intros; only 1: firstorder).	2.67058205605	4279
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	0.0.0	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0221290588379	3
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.0.0.0.0.1	synth with cache (only 1: induction l; only 1: firstorder; only 1: intros; only 1: simpl in *; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).	0.0690820217133	7
Coq.Classes.RelationClasses.Binary.relation_equivalence_equivalence	40
Coq.Classes.RelationClasses.Binary.relation_implication_preorder	40	3	synth with cache (only 1: firstorder).	0.0160799026489	4
Coq.Classes.RelationClasses.Binary.partial_order_antisym	40	0	synth with cache (only 1: firstorder).	0.0188698768616	1
Coq.Classes.RelationClasses.Binary.PartialOrder_inverse	40	0.0.0.0	synth with cache (only 1: reduce_goal; only 1: pose proof partial_order_equivalence as poe; only 1: do 3 red in poe; only 1: firstorder).	0.0846319198608	4
Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0200698375702	1
Coq.Classes.Morphisms.Proper.eq_proper_proxy	40	2	synth with cache (only 1: reflexivity).	0.00846600532532	3
Coq.Classes.Morphisms.Proper.reflexive_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.00969505310059	1
Coq.Classes.Morphisms.Proper.proper_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.00745511054993	1
Coq.Classes.Morphisms.Relations.pointwise_pointwise	40	1.0.7.2.5	synth with cache (only 1: split; only 1: red; only 1: destruct 2; only 1: firstorder; only 1: firstorder).	0.520248889923	473
Coq.Classes.Morphisms.Relations.subrelation_id_proper	40	0.2	synth with cache (only 1: reduce_goal; only 1: firstorder).	0.0138740539551	4
Coq.Classes.Morphisms.Relations.subrelation_respectful	40	0	synth with cache (only 1: firstorder).	0.0117099285126	1
Coq.Classes.Morphisms.Relations.subrelation_refl	40	2.0	synth with cache (only 1: unfold subrelation in *; only 1: firstorder).	0.0134170055389	4
Coq.Classes.Morphisms.Relations.subrelation_proper	40	0.0	synth with cache (only 1: unfold subrelation in *; only 1: firstorder).	0.0144679546356	2
Coq.Classes.Morphisms.Relations.proper_subrelation_proper	40	1.0.3.3.2	synth with cache (only 1: unfold subrelation in *; only 1: compute; only 1: firstorder; only 1: subst; only 1: firstorder).	0.655112028122	212
Coq.Classes.Morphisms.Relations.pointwise_subrelation	40	0.0	synth with cache (only 1: unfold subrelation in *; only 1: firstorder).	0.0166831016541	2
Coq.Classes.Morphisms.Relations.forall_subrelation	40	7.0	synth with cache (only 1: intro; only 1: firstorder).	0.0316469669342	17
Coq.Classes.Morphisms.iff_impl_subrelation	40	0.0	synth with cache (only 1: reduce; only 1: firstorder).	0.0124788284302	2
Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0	synth with cache (only 1: firstorder).	0.00872611999512	1
Coq.Classes.Morphisms.GenericInstances.respectful_per_obligation_2	40
Coq.Classes.Morphisms.GenericInstances.complement_proper_obligation_1	40
Coq.Classes.Morphisms.GenericInstances.flip_proper_obligation_1	40	7	synth with cache (only 1: firstorder).	0.0168380737305	8
Coq.Classes.Morphisms.GenericInstances.trans_contra_co_morphism_obligation_1	40	11	synth with cache (only 1: firstorder).	0.180763959885	64
Coq.Classes.Morphisms.GenericInstances.trans_contra_inv_impl_morphism_obligation_1	40	9	synth with cache (only 1: firstorder).	0.138218164444	74
Coq.Classes.Morphisms.GenericInstances.trans_co_impl_morphism_obligation_1	40	4.3.2	synth with cache (only 1: transitivity x0; only 1: intuition; only 1: intuition).	10.6087930202	4552
Coq.Classes.Morphisms.GenericInstances.trans_sym_co_inv_impl_morphism_obligation_1	40	3.5.0	synth with cache (only 1: transitivity y; only 1: intuition; only 1: intuition).	3.2501449585	1394
Coq.Classes.Morphisms.GenericInstances.trans_sym_contra_impl_morphism_obligation_1	40	5.3.0	synth with cache (only 1: transitivity x0; only 1: intuition; only 1: intuition).	5.07727909088	1798
Coq.Classes.Morphisms.GenericInstances.per_partial_app_morphism_obligation_1	40	13	synth with cache (only 1: firstorder).	2.99855208397	1446
Coq.Classes.Morphisms.GenericInstances.trans_co_eq_inv_impl_morphism_obligation_1	40	4.4.0	synth with cache (only 1: transitivity y; only 1: intuition; only 1: intuition).	0.629942893982	293
Coq.Classes.Morphisms.GenericInstances.PER_morphism_obligation_1	40
Coq.Classes.Morphisms.GenericInstances.symmetric_equiv_flip	40	0.3.0	synth with cache (only 1: hnf; only 1: intuition; only 1: firstorder).	0.0245540142059	6
Coq.Classes.Morphisms.GenericInstances.compose_proper_obligation_1	40	6	synth with cache (only 1: firstorder).	0.0154821872711	7
Coq.Classes.Morphisms.GenericInstances.reflexive_eq_dom_reflexive	40	4.0.2	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.0198140144348	9
Coq.Classes.Morphisms.GenericInstances.respectful_morphism	40
Coq.Classes.Morphisms.GenericInstances.Reflexive_partial_app_morphism	40	8	synth with cache (only 1: simpl_relation).	0.0232610702515	9
Coq.Classes.Morphisms.GenericInstances.flip_respectful	40	0.3.0.0.0.1	synth with cache (only 1: split; only 1: intros; only 1: simpl_relation; only 1: reduce; only 1: apply H; only 1: simpl_relation).	0.0688371658325	10
Coq.Classes.Morphisms.GenericInstances.flip1	40	1.0.1.0	synth with cache (only 1: reduce; only 1: red in H0; only 1: red in H0; only 1: intuition).	0.0203809738159	6
Coq.Classes.Morphisms.GenericInstances.flip2	40	0	synth with cache (only 1: firstorder).	0.0109581947327	1
Coq.Classes.Morphisms.GenericInstances.eq_subrelation	40	1	synth with cache (only 1: simpl_relation).	0.0175769329071	2
Coq.Classes.Morphisms.GenericInstances.reflexive_proper	40	0	synth with cache (only 1: firstorder).	0.00978112220764	1
Coq.Classes.Morphisms.GenericInstances.proper_eq	40	0	synth with cache (only 1: simpl_relation).	0.0131921768188	1
Coq.Classes.Morphisms.proper_proper	40	1.0.3.0.0	synth with cache (only 1: reduce; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: simpl_relation; only 1: simpl in *; only 1: firstorder).	0.125149965286	30
Coq.Classes.Morphisms.Normalize.proper_normalizes_proper	40	7	synth with cache (only 1: firstorder).	0.0562551021576	15
Coq.Classes.Morphisms.Normalize.flip_atom	40	1	synth with cache (only 1: firstorder).	0.012843132019	2
Coq.Classes.Morphisms.flip_arrow	40
Coq.Classes.Morphisms.proper_sym_flip	40	0	synth with cache (only 1: simpl_relation).	0.0185949802399	1
Coq.Classes.Morphisms.proper_sym_flip_2	40	4.1.6	synth with cache (only 1: compute; only 1: intros; only 1: auto).	1.07819795609	308
Coq.Classes.Morphisms.proper_sym_impl_iff	40	0.9.3.14.1	synth with cache (only 1: intros; only 1: red in H0; only 1: red in H0; only 1: red in H0; only 1: firstorder).	29.2014420033	17588
Coq.Classes.Morphisms.proper_sym_impl_iff_2	40	4.4.4.11.3	synth with cache (only 1: simpl_relation; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: split; only 1: eauto; only 1: eauto).	27.9071090221	13581
Coq.Classes.Morphisms.PartialOrder_proper	40
Coq.Classes.Morphisms.PartialOrder_StrictOrder	40
Coq.Classes.Morphisms.StrictOrder_PreOrder	40
Coq.Classes.Morphisms.StrictOrder_PartialOrder	40
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Reflexive	40	0.13	synth with cache (only 1: reduce; only 1: simpl_relation).	0.0727441310883	75
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Symmetric	40	0	synth with cache (only 1: firstorder).	0.017019033432	1
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Transitive	40	0	synth with cache (only 1: firstorder).	0.0499789714813	1
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Irreflexive	40	0	synth with cache (only 1: firstorder).	0.0161099433899	1
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Reflexive	40	1	synth with cache (only 1: firstorder).	0.016517162323	2
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Symmetric	40	0	synth with cache (only 1: firstorder).	0.0253698825836	1
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Transitive	40	0	synth with cache (only 1: firstorder).	0.374442100525	1
Coq.Classes.RelationPairs.RelProd_Instances.FstRel_ProdRel	40	0	synth with cache (only 1: firstorder).	0.020250082016	1
Coq.Classes.RelationPairs.RelProd_Instances.SndRel_ProdRel	40	9	synth with cache (only 1: firstorder).	0.0263230800629	10
Coq.Classes.RelationPairs.RelProd_Instances.FstRel_sub	40	0	synth with cache (only 1: firstorder).	0.0173530578613	1
Coq.Classes.RelationPairs.RelProd_Instances.SndRel_sub	40	0	synth with cache (only 1: firstorder).	0.0181090831757	1
Coq.Classes.RelationPairs.RelProd_Instances.pair_compat	40	1.6	synth with cache (only 1: repeat red; only 1: firstorder).	0.0260701179504	9
Coq.Classes.RelationPairs.RelProd_Instances.fst_compat	40	0	synth with cache (only 1: firstorder).	0.0180330276489	1
Coq.Classes.RelationPairs.RelProd_Instances.snd_compat	40	0	synth with cache (only 1: firstorder).	0.0178480148315	1
Coq.Classes.RelationPairs.RelProd_Instances.RelCompFun_compat	40	0.0.22.17	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply H; only 1: auto; only 1: auto).	17.7280359268	1237
Coq.Classes.DecidableClass.Decidable_sound	40	0.43.3	synth with cache (only 1: intro H; only 1: intros (x, (Hx, Huni)); only 1: assumption).	3.60927295685	16494
Coq.Classes.DecidableClass.Decidable_complete	40	0.2.48.2.19	synth with cache (only 1: intros n m; only 1: revert m; only 1: intros (x, (Hx, Huni)); only 1: simpl; only 1: assumption).	25.9257159233	116360
Coq.Classes.DecidableClass.Decidable_sound_alt	40
Coq.Classes.DecidableClass.Decidable_complete_alt	40
Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	40
Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40	15	synth with cache (only 1: apply Nat.eqb_eq).	0.671582937241	362
Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40	4.1.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: apply Nat.leb_le).	0.0509130954742	15
Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40
Coq.Classes.SetoidDec.unit_eqdec_obligation_1	40
Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	40
Coq.Classes.SetoidClass.setoid_refl	40	1	synth with cache (only 1: apply _).	0.0159230232239	2
Coq.Classes.SetoidClass.setoid_sym	40	0	synth with cache (only 1: typeclasses eauto).	0.0163259506226	1
Coq.Classes.SetoidClass.setoid_trans	40	0	synth with cache (only 1: typeclasses eauto).	0.0153751373291	1
Coq.Classes.SetoidClass.nequiv_equiv_trans	40
Coq.Classes.SetoidClass.equiv_nequiv_trans	40	2.4.8.4	synth with cache (only 1: destruct H; only 1: intros l m a; only 1: simpl; only 1: firstorder).	2.49763894081	2516
Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40	0.0.0.0.3	synth with cache (only 1: intros x x' Hxx' y y' Hyy'; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: intros; only 1: simpl in *; only 1: firstorder).	0.263777017593	34
Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	0	synth with cache (only 1: firstorder).	0.501513004303	1
Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	0.0.0.11	synth with cache (only 1: reduce; only 1: induction l; only 1: firstorder; only 1: firstorder).	0.166427135468	79
Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	1.0	synth with cache (only 1: do 2 red; only 1: auto).	0.0193679332733	3
Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	0	synth with cache (only 1: firstorder).	0.0161261558533	1
Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	0.1.0	synth with cache (only 1: intro; only 1: reduce; only 1: firstorder).	0.0312600135803	4
Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	0	synth with cache (only 1: firstorder).	0.018098115921	1
Coq.PArith.Pnat.Pos2Nat.inj_succ	40
Coq.PArith.Pnat.Pos2Nat.inj_add	40
Coq.PArith.Pnat.Pos2Nat.inj_mul	40
Coq.PArith.Pnat.Pos2Nat.inj_1	40	4.2.0	synth with cache (only 1: unfold to_nat; only 1: rewrite <- (Nat.mul_1_l 1)  at 1; only 1: auto).	0.127403974533	15
Coq.PArith.Pnat.Pos2Nat.inj_xO	40
Coq.PArith.Pnat.Pos2Nat.inj_xI	40
Coq.PArith.Pnat.Pos2Nat.is_succ	40
Coq.PArith.Pnat.Pos2Nat.is_pos	40
Coq.PArith.Pnat.Pos2Nat.id	40
Coq.PArith.Pnat.Pos2Nat.inj	40
Coq.PArith.Pnat.Pos2Nat.inj_iff	40	0.1.0.0.0.2	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H; only 1: intros H; only 1: f_equal; only 1: auto).	0.229606151581	65
Coq.PArith.Pnat.Pos2Nat.inj_compare	40
Coq.PArith.Pnat.Pos2Nat.inj_lt	40
Coq.PArith.Pnat.Pos2Nat.inj_le	40
Coq.PArith.Pnat.Pos2Nat.inj_gt	40
Coq.PArith.Pnat.Pos2Nat.inj_ge	40
Coq.PArith.Pnat.Pos2Nat.inj_sub	40
Coq.PArith.Pnat.Pos2Nat.inj_sub_max	40
Coq.PArith.Pnat.Pos2Nat.inj_pred	40
Coq.PArith.Pnat.Pos2Nat.inj_pred_max	40
Coq.PArith.Pnat.Pos2Nat.inj_min	40
Coq.PArith.Pnat.Pos2Nat.inj_max	40
Coq.PArith.Pnat.Pos2Nat.inj_iter	40
Coq.PArith.Pnat.Nat2Pos.id	40
Coq.PArith.Pnat.Nat2Pos.id_max	40	8.0.0.0.3.0.3.26	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct n; only 1: reflexivity; only 1: rewrite Pos2Nat.inj_succ; only 1: auto).	16.3606200218	15631
Coq.PArith.Pnat.Nat2Pos.inj	40
Coq.PArith.Pnat.Nat2Pos.inj_iff	40
Coq.PArith.Pnat.Nat2Pos.inj_succ	40	0.1.0	synth with cache (only 1: destruct n; only 1: now destruct 1; only 1: trivial).	0.0282599925995	4
Coq.PArith.Pnat.Nat2Pos.inj_pred	40
Coq.PArith.Pnat.Nat2Pos.inj_add	40
Coq.PArith.Pnat.Nat2Pos.inj_mul	40
Coq.PArith.Pnat.Nat2Pos.inj_compare	40
Coq.PArith.Pnat.Nat2Pos.inj_sub	40
Coq.PArith.Pnat.Nat2Pos.inj_min	40
Coq.PArith.Pnat.Nat2Pos.inj_max	40
Coq.PArith.Pnat.Pos2SuccNat.id_succ	40
Coq.PArith.Pnat.Pos2SuccNat.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.id_succ	40	0.0.11.5.0.0.0.2.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: rewrite Pos2Nat.inj_succ; only 1: induction n; only 1: trivial; only 1: f_equal; only 1: simpl; only 1: rewrite <- IHn; only 1: rewrite Pos2Nat.inj_succ; only 1: f_equal).	9.03045082092	8592
Coq.PArith.Pnat.SuccNat2Pos.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.inj	40
Coq.PArith.Pnat.SuccNat2Pos.inj_iff	40	5.0.0.0.0.0.1	synth with cache (only 1: split; only 1: intro H; only 1: apply (f_equal Pos.to_nat) in H; only 1: rewrite !id_succ in H; only 1: now injection H; only 1: intro H; only 1: auto).	3.30973100662	1423
Coq.PArith.Pnat.SuccNat2Pos.inv	40
Coq.PArith.Pnat.SuccNat2Pos.inj_succ	40	0.0.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: trivial).	0.0297250747681	4
Coq.PArith.Pnat.SuccNat2Pos.inj_compare	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_mult	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_succ_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_l_plus_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_plus_carry_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_r_plus_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.ZL6	40	4.0.0.1	synth with cache (only 1: intros a; only 1: unfold Pos.to_nat; only 1: rewrite !Pmult_nat_mult; only 1: now Nat.nzsimpl).	0.146145105362	27
Coq.PArith.Pnat.ObsoletePmultNat.le_Pmult_nat	40
Coq.PArith.BinPos.Pos.eq_dec	40	1	synth with cache (only 1: decide equality).	0.0224680900574	2
Coq.PArith.BinPos.Pos.xI_succ_xO	40	9	synth with cache (only 1: split).	0.0152969360352	15
Coq.PArith.BinPos.Pos.succ_discr	40
Coq.PArith.BinPos.Pos.pred_double_spec	40	0	synth with cache (only 1: reflexivity).	0.0148861408234	1
Coq.PArith.BinPos.Pos.succ_pred_double	40
Coq.PArith.BinPos.Pos.pred_double_succ	40
Coq.PArith.BinPos.Pos.double_succ	40	0.0	synth with cache (only 1: simpl; only 1: now f_equal).	0.0166840553284	2
Coq.PArith.BinPos.Pos.pred_double_xO_discr	40	0.0.0.0.1.72	synth with cache (only 1: red; only 1: induction p; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now f_equal).	5.79862904549	15619
Coq.PArith.BinPos.Pos.succ_not_1	40	0	synth with cache (only 1: now destruct p).	0.0289449691772	1
Coq.PArith.BinPos.Pos.pred_succ	40	1.1.1.0.0.2.0.0.0.1.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now f_equal).	1.25898504257	826
Coq.PArith.BinPos.Pos.succ_pred_or	40
Coq.PArith.BinPos.Pos.succ_pred	40
Coq.PArith.BinPos.Pos.succ_inj	40
Coq.PArith.BinPos.Pos.pred_N_succ	40	0.0.0.0.2.14.0.2	synth with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: apply pred_double_succ; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	4.67928099632	3979
Coq.PArith.BinPos.Pos.add_1_r	40	0	synth with cache (only 1: now destruct p).	0.0150969028473	1
Coq.PArith.BinPos.Pos.add_1_l	40	0	synth with cache (only 1: now destruct p).	0.0150790214539	1
Coq.PArith.BinPos.Pos.add_carry_spec	40
Coq.PArith.BinPos.Pos.add_comm	40
Coq.PArith.BinPos.Pos.add_succ_r	40
Coq.PArith.BinPos.Pos.add_succ_l	40
Coq.PArith.BinPos.Pos.add_no_neutral	40
Coq.PArith.BinPos.Pos.add_carry_add	40
Coq.PArith.BinPos.Pos.add_reg_r	40
Coq.PArith.BinPos.Pos.add_reg_l	40
Coq.PArith.BinPos.Pos.add_cancel_r	40	0.3.1.0.1.2.0	synth with cache (only 1: revert p q; only 1: split; only 1: now apply add_reg_r; only 1: revert p q; only 1: intros p q H; only 1: f_equal; only 1: auto using add_carry_add).	2.2284181118	819
Coq.PArith.BinPos.Pos.add_cancel_l	40
Coq.PArith.BinPos.Pos.add_carry_reg_r	40
Coq.PArith.BinPos.Pos.add_carry_reg_l	40
Coq.PArith.BinPos.Pos.add_assoc	40
Coq.PArith.BinPos.Pos.add_xO	40	0.2	synth with cache (only 1: simpl; only 1: f_equal).	0.0206680297852	4
Coq.PArith.BinPos.Pos.add_xI_pred_double	40
Coq.PArith.BinPos.Pos.add_xO_pred_double	40
Coq.PArith.BinPos.Pos.add_diag	40
Coq.PArith.BinPos.Pos.peano_rect_succ	40
Coq.PArith.BinPos.Pos.peano_rect_base	40	0	synth with cache (only 1: auto).	0.0154738426208	1
Coq.PArith.BinPos.Pos.peano_case	40
Coq.PArith.BinPos.Pos.eq_dep_eq_positive	40
Coq.PArith.BinPos.Pos.PeanoViewUnique	40
Coq.PArith.BinPos.Pos.peano_equiv	40
Coq.PArith.BinPos.Pos.mul_1_l	40	0	synth with cache (only 1: trivial).	0.0560541152954	1
Coq.PArith.BinPos.Pos.mul_1_r	40	0.0.0.2.0.1.0.14	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: now f_equal).	1.98365187645	1807
Coq.PArith.BinPos.Pos.mul_xO_r	40
Coq.PArith.BinPos.Pos.mul_xI_r	40
Coq.PArith.BinPos.Pos.mul_comm	40
Coq.PArith.BinPos.Pos.mul_add_distr_l	40
Coq.PArith.BinPos.Pos.mul_add_distr_r	40
Coq.PArith.BinPos.Pos.mul_assoc	40
Coq.PArith.BinPos.Pos.mul_succ_l	40
Coq.PArith.BinPos.Pos.mul_succ_r	40
Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_reg_r	40
Coq.PArith.BinPos.Pos.mul_reg_l	40
Coq.PArith.BinPos.Pos.mul_cancel_r	40	0.4.0.0	synth with cache (only 1: split; only 1: revert q r; only 1: apply mul_reg_r; only 1: congruence).	0.279061079025	83
Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.1.2.0	synth with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).	0.245347976685	91
Coq.PArith.BinPos.Pos.mul_eq_1_l	40	0.0.0.0.0.1.1.0.0.2.0.0	synth with cache (only 1: destruct p; only 1: intros; only 1: reflexivity || apply f_equal || exfalso; only 1: contradict H; only 1: induction q; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: intros; only 1: destr_eq H; only 1: intro; only 1: now f_equal).	2.10254693031	1376
Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0	synth with cache (only 1: now destruct p, q).	0.0350248813629	1
Coq.PArith.BinPos.Pos.square_xO	40	1.5.0	synth with cache (only 1: simpl; only 1: f_equal; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r).	0.0269410610199	9
Coq.PArith.BinPos.Pos.square_xI	40
Coq.PArith.BinPos.Pos.iter_swap_gen	40
Coq.PArith.BinPos.Pos.iter_swap	40	0.11.0.1.0.0.0.23	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: intros; only 1: simpl; only 1: now rewrite ?H, ?IHp; only 1: intros; only 1: simpl; only 1: now rewrite ?H, ?IHp; only 1: trivial).	9.63626909256	17183
Coq.PArith.BinPos.Pos.iter_succ	40
Coq.PArith.BinPos.Pos.iter_add	40
Coq.PArith.BinPos.Pos.iter_invariant	40
Coq.PArith.BinPos.Pos.pow_1_r	40
Coq.PArith.BinPos.Pos.pow_succ_r	40
Coq.PArith.BinPos.Pos.square_spec	40
Coq.PArith.BinPos.Pos.sub_mask_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40
Coq.PArith.BinPos.Pos.sub_mask_spec	40
Coq.PArith.BinPos.Pos.sub_mask_nul_iff	40
Coq.PArith.BinPos.Pos.sub_mask_diag	40	0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp).	0.0383529663086	7
Coq.PArith.BinPos.Pos.sub_mask_add	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40
Coq.PArith.BinPos.Pos.sub_mask_pos_iff	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff	40
Coq.PArith.BinPos.Pos.eqb_eq	40
Coq.PArith.BinPos.Pos.ltb_lt	40
Coq.PArith.BinPos.Pos.leb_le	40
Coq.PArith.BinPos.Pos.compare_cont_spec	40
Coq.PArith.BinPos.Pos.compare_cont_Eq	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	40	1.0.0.0.1.1	synth with cache (only 1: unfold leb, le; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: now split; only 1: easy'; only 1: now split).	0.487171888351	65
Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	40	0.0.0.0.3.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold ltb, lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.164554834366	22
Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	40	0.0.0.0.0.0	synth with cache (only 1: unfold gt; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.0582830905914	6
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	40	0.0.0.0.0.1	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold le; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.0555291175842	7
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	40	0.0.0.0.0.1	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold ge; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.0557999610901	7
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	40	0.0.0.0.0.2	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.0606760978699	8
Coq.PArith.BinPos.Pos.compare_xO_xO	40	2.3	synth with cache (only 1: revert q; only 1: trivial).	0.0268981456757	12
Coq.PArith.BinPos.Pos.compare_xI_xI	40	0	synth with cache (only 1: reflexivity).	0.0145020484924	1
Coq.PArith.BinPos.Pos.compare_xI_xO	40	4.5.4.1.5	synth with cache (only 1: change p~1 with (p~0 + 1); only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: now split).	3.90548491478	3695
Coq.PArith.BinPos.Pos.compare_xO_xI	40	3.3.9.1	synth with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: trivial).	2.46497702599	2038
Coq.PArith.BinPos.Pos.compare_sub_mask	40
Coq.PArith.BinPos.Pos.lt_iff_add	40
Coq.PArith.BinPos.Pos.gt_iff_add	40
Coq.PArith.BinPos.Pos.compare_cont_refl	40	0.2.3.1.1.7	synth with cache (only 1: induction p; only 1: now f_equal; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: reflexivity || destruct H).	0.645569086075	628
Coq.PArith.BinPos.Pos.compare_cont_antisym	40
Coq.PArith.BinPos.Pos.compare_eq_iff	40
Coq.PArith.BinPos.Pos.compare_antisym	40
Coq.PArith.BinPos.Pos.compare_lt_iff	40	1.1.0.0.0	synth with cache (only 1: unfold lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.303081989288	81
Coq.PArith.BinPos.Pos.compare_le_iff	40	0.0.1	synth with cache (only 1: unfold le; only 1: unfold compare; only 1: now destruct compare_cont; split; try apply comparison_eq_stable).	0.0277900695801	4
Coq.PArith.BinPos.Pos.gt_lt_iff	40	2.1	synth with cache (only 1: unfold gt; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.454115867615	90
Coq.PArith.BinPos.Pos.gt_lt	40	0.0	synth with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0253159999847	2
Coq.PArith.BinPos.Pos.lt_gt	40	0	synth with cache (only 1: apply gt_lt_iff).	0.0157351493835	1
Coq.PArith.BinPos.Pos.ge_le_iff	40	1.1.2	synth with cache (only 1: unfold ge; only 1: unfold le; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0489528179169	12
Coq.PArith.BinPos.Pos.ge_le	40	0.0	synth with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.027706861496	2
Coq.PArith.BinPos.Pos.le_ge	40	0	synth with cache (only 1: apply ge_le_iff).	0.0154490470886	1
Coq.PArith.BinPos.Pos.compare_succ_r	40
Coq.PArith.BinPos.Pos.compare_succ_l	40
Coq.PArith.BinPos.Pos.lt_succ_r	40
Coq.PArith.BinPos.Pos.lt_succ_diag_r	40
Coq.PArith.BinPos.Pos.compare_succ_succ	40
Coq.PArith.BinPos.Pos.le_1_l	40	0.4.2.1.1.15	synth with cache (only 1: apply ltb_ge; only 1: induction p; only 1: now f_equal; only 1: trivial; only 1: unfold ltb, lt; only 1: trivial).	8.36448311806	8770
Coq.PArith.BinPos.Pos.nlt_1_r	40	5	synth with cache (only 1: now destruct p).	0.0615620613098	29
Coq.PArith.BinPos.Pos.lt_1_succ	40	1	synth with cache (only 1: now destruct p).	0.0744299888611	31
Coq.PArith.BinPos.Pos.le_nlt	40	0.0	synth with cache (only 1: unfold lt, le; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0209259986877	2
Coq.PArith.BinPos.Pos.lt_nle	40	0.4	synth with cache (only 1: unfold ltb, lt; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).	0.299226999283	45
Coq.PArith.BinPos.Pos.lt_le_incl	40	0.0.3	synth with cache (only 1: unfold lt, le; only 1: rewrite compare_antisym; only 1: now do 2 destruct compare).	0.107608795166	24
Coq.PArith.BinPos.Pos.lt_lt_succ	40
Coq.PArith.BinPos.Pos.succ_lt_mono	40
Coq.PArith.BinPos.Pos.succ_le_mono	40
Coq.PArith.BinPos.Pos.lt_trans	40
Coq.PArith.BinPos.Pos.lt_ind	40
Coq.PArith.BinPos.Pos.lt_strorder	40
Coq.PArith.BinPos.Pos.lt_compat	40	4	synth with cache (only 1: solve_proper).	0.140338182449	29
Coq.PArith.BinPos.Pos.lt_total	40
Coq.PArith.BinPos.Pos.le_refl	40	0.1	synth with cache (only 1: apply lt_eq_cases; only 1: now right).	0.025456905365	3
Coq.PArith.BinPos.Pos.le_lt_trans	40
Coq.PArith.BinPos.Pos.lt_le_trans	40	0.0.0.0.3.15	synth with cache (only 1: intros EQ; only 1: intros H; only 1: apply le_lteq in H; only 1: destruct H; only 1: now apply lt_trans with m; only 1: now subst).	16.9190289974	8779
Coq.PArith.BinPos.Pos.le_trans	40	1.0.5.0.4.0.0.4.0.0.0	synth with cache (only 1: intros H H'; only 1: apply le_lteq in H'; only 1: destruct H'; only 1: apply le_lteq; only 1: apply le_lteq in H; only 1: destruct H; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: auto with relations; only 1: destruct H; only 1: now left; only 1: now subst).	13.008836031	11710
Coq.PArith.BinPos.Pos.le_succ_l	40
Coq.PArith.BinPos.Pos.le_antisym	40
Coq.PArith.BinPos.Pos.le_preorder	40	1.0.0.0.14.8.0	synth with cache (only 1: split; only 1: unfold lt, le; only 1: intros [q| q| ]; only 1: now rewrite compare_refl; only 1: now rewrite compare_refl; only 1: now rewrite compare_refl; only 1: exact PeanoNat.Nat.le_trans).	1.17918109894	1572
Coq.PArith.BinPos.Pos.le_partorder	40
Coq.PArith.BinPos.Pos.add_compare_mono_l	40
Coq.PArith.BinPos.Pos.add_compare_mono_r	40
Coq.PArith.BinPos.Pos.lt_add_diag_r	40
Coq.PArith.BinPos.Pos.add_lt_mono_l	40
Coq.PArith.BinPos.Pos.add_lt_mono_r	40	0.0.2.0	synth with cache (only 1: unfold lt; only 1: rewrite 2!(add_comm _ p); only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	0.0285370349884	6
Coq.PArith.BinPos.Pos.add_lt_mono	40
Coq.PArith.BinPos.Pos.add_le_mono_l	40	4.0.0.8.3	synth with cache (only 1: revert p q r; only 1: intros a b Ha; only 1: unfold le; only 1: rewrite add_compare_mono_l; only 1: easy || now destruct 1).	6.3418970108	3685
Coq.PArith.BinPos.Pos.add_le_mono_r	40	0.2.0	synth with cache (only 1: unfold le; only 1: rewrite add_compare_mono_r; only 1: apply iff_refl).	0.0233469009399	5
Coq.PArith.BinPos.Pos.add_le_mono	40
Coq.PArith.BinPos.Pos.mul_compare_mono_l	40
Coq.PArith.BinPos.Pos.mul_compare_mono_r	40
Coq.PArith.BinPos.Pos.mul_lt_mono_l	40
Coq.PArith.BinPos.Pos.mul_lt_mono_r	40	0.0.5.0	synth with cache (only 1: unfold lt; only 1: rewrite 2!(mul_comm _ p); only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.0408141613007	15
Coq.PArith.BinPos.Pos.mul_lt_mono	40
Coq.PArith.BinPos.Pos.mul_le_mono_l	40	0.4.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.0251560211182	7
Coq.PArith.BinPos.Pos.mul_le_mono_r	40	0.4.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).	0.025013923645	7
Coq.PArith.BinPos.Pos.mul_le_mono	40
Coq.PArith.BinPos.Pos.lt_add_r	40	0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: now exists q).	0.0192289352417	2
Coq.PArith.BinPos.Pos.lt_not_add_l	40
Coq.PArith.BinPos.Pos.pow_gt_1	40
Coq.PArith.BinPos.Pos.sub_1_r	40	1.0.1.1.2	synth with cache (only 1: induction p; only 1: trivial; only 1: now f_equal; only 1: simpl; only 1: trivial).	0.146023988724	42
Coq.PArith.BinPos.Pos.pred_sub	40	0	synth with cache (only 1: now destruct p).	0.0149171352386	1
Coq.PArith.BinPos.Pos.sub_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_pos'	40
Coq.PArith.BinPos.Pos.sub_mask_pos	40	1.0.0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: intros (r, Hr); only 1: exists r; only 1: now apply sub_mask_pos_iff).	0.0334501266479	5
Coq.PArith.BinPos.Pos.sub_add	40
Coq.PArith.BinPos.Pos.add_sub	40
Coq.PArith.BinPos.Pos.mul_sub_distr_l	40
Coq.PArith.BinPos.Pos.mul_sub_distr_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_r	40
Coq.PArith.BinPos.Pos.sub_decr	40
Coq.PArith.BinPos.Pos.add_sub_assoc	40
Coq.PArith.BinPos.Pos.sub_add_distr	40
Coq.PArith.BinPos.Pos.sub_sub_distr	40
Coq.PArith.BinPos.Pos.sub_xO_xO	40
Coq.PArith.BinPos.Pos.sub_xI_xI	40	0.0.0.0	synth with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0294201374054	4
Coq.PArith.BinPos.Pos.sub_xI_xO	40	0.0.0.0	synth with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0283689498901	4
Coq.PArith.BinPos.Pos.sub_xO_xI	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	40
Coq.PArith.BinPos.Pos.sub_mask_neg	40
Coq.PArith.BinPos.Pos.sub_le	40
Coq.PArith.BinPos.Pos.sub_lt	40	0.0.0.0.0.0.5	synth with cache (only 1: unfold lt; only 1: unfold le, sub; only 1: rewrite compare_sub_mask; only 1: destruct sub_mask; only 1: congruence; only 1: easy'; only 1: easy').	1.44365310669	697
Coq.PArith.BinPos.Pos.sub_diag	40
Coq.PArith.BinPos.Pos.size_nat_monotone	40
Coq.PArith.BinPos.Pos.size_gt	40
Coq.PArith.BinPos.Pos.size_le	40
Coq.PArith.BinPos.Pos.max_l	40
Coq.PArith.BinPos.Pos.max_r	40	0.0.1.0.0.0.0.0	synth with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).	0.0438089370728	9
Coq.PArith.BinPos.Pos.min_l	40
Coq.PArith.BinPos.Pos.min_r	40	2.0.0.0.2.1.0.0.3.0	synth with cache (only 1: unfold le, min; only 1: intros; only 1: case compare_spec; only 1: auto; only 1: intros H'; only 1: rewrite compare_antisym, CompOpp_iff in H; only 1: apply le_nlt in H; only 1: apply le_nlt in H; only 1: now elim H; only 1: auto).	7.62519788742	5571
Coq.PArith.BinPos.Pos.max_1_l	40
Coq.PArith.BinPos.Pos.max_1_r	40	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.0445539951324	8
Coq.PArith.BinPos.Pos.min_1_l	40	0.1	synth with cache (only 1: apply min_l; only 1: apply le_1_l).	0.0167779922485	3
Coq.PArith.BinPos.Pos.min_1_r	40	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold min; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.0444478988647	8
Coq.PArith.BinPos.Pos.succ_max_distr	40
Coq.PArith.BinPos.Pos.succ_min_distr	40
Coq.PArith.BinPos.Pos.add_max_distr_l	40	1.0.7.2.0.2	synth with cache (only 1: apply max_monotone; only 1: repeat red; only 1: intros q r; only 1: unfold le; only 1: rewrite add_compare_mono_l; only 1: easy').	1.73048710823	912
Coq.PArith.BinPos.Pos.add_max_distr_r	40
Coq.PArith.BinPos.Pos.add_min_distr_l	40	0.0.0.4	synth with cache (only 1: apply min_mono; only 1: eauto with *; only 1: intros x x'; only 1: apply add_le_mono_l).	0.0583989620209	16
Coq.PArith.BinPos.Pos.add_min_distr_r	40	0.0.0.2	synth with cache (only 1: rewrite 3!(add_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	0.0321669578552	6
Coq.PArith.BinPos.Pos.mul_max_distr_l	40	0.0.13.2	synth with cache (only 1: apply max_monotone; only 1: intros H; only 1: intros Hnm Hpq; only 1: now apply mul_le_mono_l).	4.35411381721	2756
Coq.PArith.BinPos.Pos.mul_max_distr_r	40
Coq.PArith.BinPos.Pos.mul_min_distr_l	40	0.0.4	synth with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.028048992157	7
Coq.PArith.BinPos.Pos.mul_min_distr_r	40	0.0.0.1	synth with cache (only 1: rewrite 3!(mul_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.032341003418	5
Coq.PArith.BinPos.Pos.iter_op_succ	40	1.2.17.1.0	synth with cache (only 1: induction p; only 1: simpl; only 1: congruence; only 1: auto; only 1: firstorder).	6.58846306801	6420
Coq.PArith.BinPos.Pos.of_nat_succ	40	0.7.0.0.2.0.0.0.27	synth with cache (only 1: PeanoNat.Nat.cases n; only 1: simpl; only 1: now f_equal; only 1: intros; only 1: simpl; only 1: induction n; only 1: auto; only 1: f_equal; only 1: trivial).	4.09653687477	4153
Coq.PArith.BinPos.Pos.pred_of_succ_nat	40
Coq.PArith.BinPos.Pos.succ_of_nat	40
Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40
Coq.PArith.BinPos.Pos.sqrtrem_spec	40
Coq.PArith.BinPos.Pos.sqrt_spec	40
Coq.PArith.BinPos.Pos.divide_add_cancel_l	40
Coq.PArith.BinPos.Pos.divide_xO_xI	40
Coq.PArith.BinPos.Pos.divide_xO_xO	40
Coq.PArith.BinPos.Pos.divide_mul_l	40
Coq.PArith.BinPos.Pos.divide_mul_r	40
Coq.PArith.BinPos.Pos.ggcdn_gcdn	40
Coq.PArith.BinPos.Pos.ggcd_gcd	40
Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	40
Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40
Coq.PArith.BinPos.Pos.gcd_divide_l	40
Coq.PArith.BinPos.Pos.gcd_divide_r	40
Coq.PArith.BinPos.Pos.gcdn_greatest	40
Coq.PArith.BinPos.Pos.gcd_greatest	40
Coq.PArith.BinPos.Pos.ggcd_greatest	40
Coq.PArith.BinPos.Peqb_true_eq	40
Coq.PArith.BinPos.Pcompare_eq_Gt	40	2	synth with cache (only 1: reflexivity).	0.0174598693848	3
Coq.PArith.BinPos.Pminus_mask_Gt	40
Coq.PArith.BinPos.Pplus_minus	40
Coq.PArith.BinPos.Dcompare	40	0.4.0.64.25	synth with cache (only 1: intro H; only 1: destruct H; only 1: now intuition; only 1: tauto; only 1: now intuition).	38.621628046	100135
Coq.Arith.Le.le_n_0_eq	40	0.1	synth with cache (only 1: inversion 1; only 1: now subst).	0.038213968277	20
Coq.Arith.Le.le_elim_rel	40
Coq.Arith.Even.even_equiv	40
Coq.Arith.Even.odd_equiv	40
Coq.Arith.Even.even_or_odd	40	3.3.21.19	synth with cache (only 1: Nat.induct n; only 1: firstorder; only 1: intro p; only 1: intuition).	2.3455221653	4546
Coq.Arith.Even.even_odd_dec	40	0.0.0.0.0	synth with cache (only 1: induction n; only 1: auto with arith; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith).	0.0320041179657	5
Coq.Arith.Even.not_even_and_odd	40	4.0.2.0.4.0	synth with cache (only 1: induction n; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: tauto).	0.885579109192	607
Coq.Arith.Even.even_plus_split	40
Coq.Arith.Even.odd_plus_split	40	0	synth with cache (only 1: parity_binop).	0.145431995392	1
Coq.Arith.Even.even_even_plus	40
Coq.Arith.Even.odd_plus_l	40	0	synth with cache (only 1: parity_binop).	0.0690121650696	1
Coq.Arith.Even.odd_plus_r	40	0	synth with cache (only 1: parity_binop).	0.203159093857	1
Coq.Arith.Even.odd_even_plus	40	0	synth with cache (only 1: parity_binop).	0.0680949687958	1
Coq.Arith.Even.even_plus_aux	40	0.0.4	synth with cache (only 1: split; only 1: parity_binop; only 1: parity_binop).	0.330745220184	15
Coq.Arith.Even.even_plus_even_inv_r	40	0	synth with cache (only 1: parity_binop).	0.102353096008	1
Coq.Arith.Even.even_plus_even_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0675809383392	1
Coq.Arith.Even.even_plus_odd_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0699379444122	1
Coq.Arith.Even.even_plus_odd_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0721640586853	1
Coq.Arith.Even.odd_plus_even_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0679709911346	1
Coq.Arith.Even.odd_plus_even_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0680429935455	1
Coq.Arith.Even.odd_plus_odd_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0686810016632	1
Coq.Arith.Even.odd_plus_odd_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0677599906921	1
Coq.Arith.Even.even_mult_aux	40	0	synth with cache (only 1: parity_binop).	0.160146951675	1
Coq.Arith.Even.even_mult_l	40	5	synth with cache (only 1: parity_binop).	0.051815032959	11
Coq.Arith.Even.even_mult_r	40	0	synth with cache (only 1: parity_binop).	0.0467557907104	1
Coq.Arith.Even.even_mult_inv_r	40	0	synth with cache (only 1: parity_binop).	0.118635892868	1
Coq.Arith.Even.even_mult_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0676419734955	1
Coq.Arith.Even.odd_mult	40	0	synth with cache (only 1: parity_binop).	0.068500995636	1
Coq.Arith.Even.odd_mult_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0614030361176	1
Coq.Arith.Even.odd_mult_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0465450286865	1
Coq.Arith.Minus.minus_n_O	40	0	synth with cache (only 1: now destruct n).	0.0174930095673	1
Coq.Arith.Minus.minus_Sn_m	40
Coq.Arith.Minus.pred_of_minus	40	0	synth with cache (only 1: now Nat.nzsimpl').	0.037150144577	1
Coq.Arith.Minus.minus_diag_reverse	40	15.7.9.3	synth with cache (only 1: symmetry; only 1: induction n; only 1: apply Nat.sub_0_r; only 1: assumption).	6.11208605766	7449
Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	11.0.0.0	synth with cache (only 1: nzinduct p; only 1: now Nat.nzsimpl; only 1: intro p; only 1: Morphisms.f_equiv).	1.96019792557	503
Coq.Arith.Minus.plus_minus	40
Coq.Arith.Minus.minus_plus	40	33	synth with cache (only 1: now apply Nat.add_sub_eq_l).	0.799237012863	1279
Coq.Arith.Minus.le_plus_minus_r	40	0.0.1.0.2.0.0.2.0.2	synth with cache (only 1: revert m; only 1: induction n; only 1: intros a Ha; only 1: now Nat.nzsimpl; only 1: destruct m; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, Peano.le_S_n; only 1: trivial).	9.86435103416	3986
Coq.Arith.Minus.le_plus_minus	40	0.0.1.0.2.0.0.2.0.4	synth with cache (only 1: revert m; only 1: induction n; only 1: intros a Ha; only 1: now Nat.nzsimpl; only 1: destruct m; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, Peano.le_S_n; only 1: trivial).	30.0185470581	13761
Coq.Arith.Minus.lt_O_minus_lt	40
Coq.Arith.Minus.not_le_minus_0	40
Coq.Arith.Between.Between.bet_eq	40	3.1.34	synth with cache (only 1: intros R L n; only 1: subst; only 1: intuition).	29.0587790012	32309
Coq.Arith.Between.Between.between_le	40	3.0.5.3	synth with cache (only 1: intros n m; only 1: induction 1; only 1: PeanoNat.Nat.Private_Tac.order; only 1: auto).	1.97933506966	549
Coq.Arith.Between.Between.between_Sk_l	40
Coq.Arith.Between.Between.between_restr	40	3.2.15.3	synth with cache (only 1: intros x y; only 1: induction 1; only 1: auto; only 1: auto with arith).	5.17309594154	4886
Coq.Arith.Between.Between.exists_le_S	40	1.1.5.17.2	synth with cache (only 1: intro n; only 1: intro H; only 1: induction 1; only 1: auto; only 1: auto with arith).	4.71089601517	6742
Coq.Arith.Between.Between.exists_S_le	40
Coq.Arith.Between.Between.in_int_intro	40	0.4.5	synth with cache (only 1: intro z; only 1: intros n m H1 H2; only 1: easy).	0.233858108521	94
Coq.Arith.Between.Between.in_int_lt	40	4.0.5	synth with cache (only 1: intros H1 n H2; only 1: induction 1; only 1: PeanoNat.Nat.Private_Tac.order || (right; PeanoNat.Nat.Private_Tac.order) || (left; PeanoNat.Nat.Private_Tac.order)).	0.190869808197	118
Coq.Arith.Between.Between.in_int_p_Sq	40
Coq.Arith.Between.Between.in_int_S	40	0.0	synth with cache (only 1: intros p q r []; only 1: auto with arith).	0.0224511623383	2
Coq.Arith.Between.Between.in_int_Sp_q	40	0.0	synth with cache (only 1: intros * []; only 1: auto with arith).	0.0217180252075	2
Coq.Arith.Between.Between.between_in_int	40
Coq.Arith.Between.Between.in_int_between	40	0.1.0.2	synth with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: auto with arith).	0.0591061115265	27
Coq.Arith.Between.Between.exists_in_int	40
Coq.Arith.Between.Between.in_int_exists	40
Coq.Arith.Between.Between.between_or_exists	40
Coq.Arith.Between.Between.between_not_exists	40
Coq.Arith.Between.Between.nth_le	40
Coq.Arith.Between.Between.event_O	40	1.12.32.15.17	synth with cache (only 1: intros * []; only 1: PeanoNat.Nat.le_elim H; only 1: now PeanoNat.Nat.nzsimpl; only 1: subst; only 1: auto).	8.5094730854	28923
Coq.Arith.Peano_dec.O_or_S	40	0.0.0.36.38	synth with cache (only 1: induction n; only 1: right; only 1: reflexivity; only 1: left; only 1: now exists n).	14.6902117729	44386
Coq.Arith.Peano_dec.dec_eq_nat	40
Coq.Arith.Peano_dec.le_unique	40
Coq.Arith.Mult.mult_assoc_reverse	40
Coq.Arith.Mult.mult_is_O	40
Coq.Arith.Mult.mult_is_one	40
Coq.Arith.Mult.mult_O_le	40
Coq.Arith.Mult.mult_le_compat_l	40
Coq.Arith.Mult.mult_le_compat_r	40
Coq.Arith.Mult.mult_le_compat	40
Coq.Arith.Mult.mult_S_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_r	40
Coq.Arith.Mult.mult_S_le_reg_l	40
Coq.Arith.Mult.odd_even_lem	40
Coq.Arith.Mult.mult_acc_aux	40
Coq.Arith.Mult.mult_tail_mult	40
Coq.Arith.Div2.ind_0_1_SS	40
Coq.Arith.Div2.lt_div2	40
Coq.Arith.Div2.even_div2	40
Coq.Arith.Div2.odd_div2	40
Coq.Arith.Div2.div2_even	40
Coq.Arith.Div2.div2_odd	40
Coq.Arith.Div2.even_odd_div2	40
Coq.Arith.Div2.double_S	40
Coq.Arith.Div2.double_plus	40
Coq.Arith.Div2.even_odd_double	40
Coq.Arith.Div2.even_2n	40
Coq.Arith.Div2.odd_S2n	40	0.0.1	synth with cache (only 1: intros n H; only 1: exists (Nat.div2 n); only 1: auto with arith).	0.0209350585938	13
Coq.Arith.Div2.div2_double	40	1	synth with cache (only 1: apply Nat.div2_double).	0.14714217186	65
Coq.Arith.Div2.div2_double_plus_one	40	0.8.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: rewrite Nat.div2_succ_double; only 1: f_equal).	0.650264024734	265
Coq.Arith.Plus.plus_assoc_reverse	40	1.0.4.0.0.0.8	synth with cache (only 1: nzinduct p; only 1: now Nat.nzsimpl; only 1: intro; only 1: Nat.nzsimpl; only 1: split; only 1: now intros ->; only 1: auto).	13.5065419674	3193
Coq.Arith.Plus.plus_reg_l	40
Coq.Arith.Plus.plus_le_reg_l	40
Coq.Arith.Plus.plus_lt_reg_l	40
Coq.Arith.Plus.plus_le_compat_l	40	1	synth with cache (only 1: apply Nat.add_le_mono_l).	0.0356431007385	11
Coq.Arith.Plus.plus_le_compat_r	40	0.0.11	synth with cache (only 1: induction 1; only 1: now rewrite <- ?Nat.add_le_mono_r; only 1: now right).	1.00047302246	273
Coq.Arith.Plus.plus_lt_compat_l	40	2	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.0194690227509	3
Coq.Arith.Plus.plus_lt_compat_r	40
Coq.Arith.Plus.plus_le_compat	40
Coq.Arith.Plus.plus_le_lt_compat	40
Coq.Arith.Plus.plus_lt_le_compat	40	1	synth with cache (only 1: apply Nat.add_le_mono).	0.0170340538025	2
Coq.Arith.Plus.plus_lt_compat	40
Coq.Arith.Plus.le_plus_l	40	5.3.0.8.0.16	synth with cache (only 1: revert m; only 1: Nat.induct ltac:(m); only 1: now Nat.nzsimpl; only 1: intros m IH; only 1: Nat.nzsimpl; only 1: auto).	3.07325291634	2740
Coq.Arith.Plus.le_plus_r	40	7.1.2.0.1.2.1.1.19	synth with cache (only 1: revert m; only 1: induction n; only 1: intro; only 1: Nat.nzsimpl; only 1: left; only 1: destruct m; only 1: simpl; only 1: auto; only 1: now constructor).	29.8756439686	11825
Coq.Arith.Plus.le_plus_trans	40
Coq.Arith.Plus.lt_plus_trans	40
Coq.Arith.Plus.plus_is_O	40	8.2.0.0.0.0.6	synth with cache (only 1: Nat.induct n; only 1: split; only 1: auto; only 1: auto; only 1: intros n IH; only 1: intro H; only 1: inversion H).	7.21475982666	4530
Coq.Arith.Plus.plus_is_one	40
Coq.Arith.Plus.plus_tail_plus	40
Coq.Arith.Plus.succ_plus_discr	40	0.0.7.6.0.1.2.14.5.8	synth with cache (only 1: Nat.induct n; only 1: auto; only 1: intro n; only 1: destruct m; only 1: intro H; only 1: auto; only 1: simpl; only 1: Nat.nzsimpl; only 1: intros EQ; only 1: auto).	27.6740169525	25563
Coq.Arith.Lt.lt_le_S	40	0.0.1.0.1	synth with cache (only 1: Nat.cases n; only 1: intro H; only 1: Nat.order_pos; only 1: intros n IH; only 1: Nat.order).	0.0420730113983	7
Coq.Arith.Lt.lt_n_Sm_le	40	0	synth with cache (only 1: apply le_S_n).	0.0126900672913	1
Coq.Arith.Lt.le_lt_n_Sm	40	0.2.0	synth with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.0246942043304	5
Coq.Arith.Lt.le_not_lt	40	0.6	synth with cache (only 1: intros; only 1: Nat.order).	0.304149866104	77
Coq.Arith.Lt.lt_not_le	40	6.1	synth with cache (only 1: intros LT EQ; only 1: Nat.order).	0.146779060364	9
Coq.Arith.Lt.neq_0_lt	40	0.0	synth with cache (only 1: intro H; only 1: Nat.auto').	0.0217289924622	2
Coq.Arith.Lt.lt_0_neq	40	0.0.0.0	synth with cache (only 1: intro H; only 1: intro H1; only 1: rewrite H1 in H; only 1: false_hyp H Nat.lt_irrefl).	0.0278248786926	4
Coq.Arith.Lt.lt_n_S	40	0	synth with cache (only 1: apply le_n_S).	0.0133368968964	1
Coq.Arith.Lt.lt_S_n	40	2	synth with cache (only 1: apply Nat.succ_lt_mono).	0.0217089653015	12
Coq.Arith.Lt.S_pred	40	0.0.3.4	synth with cache (only 1: Nat.cases n; only 1: inversion 1; only 1: intros a Ha; only 1: Morphisms.f_equiv).	0.32009601593	182
Coq.Arith.Lt.S_pred_pos	40	1.0.0.0.0.6	synth with cache (only 1: Nat.cases n; only 1: intro H; only 1: exfalso; only 1: now apply Nat.lt_irrefl with 0; only 1: intros n H; only 1: auto).	0.397504091263	274
Coq.Arith.Lt.lt_pred	40
Coq.Arith.Lt.lt_pred_n_n	40	1.1.0.4	synth with cache (only 1: Nat.cases n; only 1: inversion 1; only 1: intros m IH; only 1: auto).	0.15140914917	106
Coq.Arith.Lt.le_lt_or_eq	40	0.1.0.13.4	synth with cache (only 1: revert m; only 1: apply Nat.le_ind; only 1: now right; only 1: intros a b Hb; only 1: intuition).	7.10233712196	5294
Coq.Arith.Lt.nat_total_order	40
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_ltof	40
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_gtof	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: assert (H : forall (n : nat) (a : A), f a < n -> Acc ltof a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	29.0250139236	10538
Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof1	40
Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof1	40	0.0.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros P F; only 1: assert (H : forall (n : nat) (a : A), f a < n -> P a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply F; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	11.6772050858	7345
Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof2	40	1	synth with cache (only 1: exact induction_ltof1).	0.547102928162	178
Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof2	40	0	synth with cache (only 1: exact induction_ltof1).	0.0129728317261	1
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_lt_compat	40
Coq.Arith.Wf_nat.lt_wf	40
Coq.Arith.Wf_nat.lt_wf_rec1	40
Coq.Arith.Wf_nat.lt_wf_rec	40	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.0133650302887	1
Coq.Arith.Wf_nat.lt_wf_ind	40	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).	0.0136620998383	1
Coq.Arith.Wf_nat.gt_wf_rec	40	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).	0.016921043396	1
Coq.Arith.Wf_nat.lt_wf_double_rec	40
Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.0.0.0.0.0.0	synth with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rec; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rec; only 1: auto with arith).	0.0456788539886	7
Coq.Arith.Wf_nat.LT_WF_REL.acc_lt_rel	40
Coq.Arith.Wf_nat.LT_WF_REL.well_founded_inv_lt_rel_compat	40
Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40
Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40
Coq.Arith.Factorial.lt_O_fact	40
Coq.Arith.Factorial.fact_neq_0	40
Coq.Arith.Factorial.fact_le	40
Coq.Arith.Compare_dec.zerop	40	5.0.0.1	synth with cache (only 1: destruct n; only 1: now left; only 1: right; only 1: apply Peano.le_n_S, Peano.le_0_n).	0.0188090801239	10
Coq.Arith.Compare_dec.lt_eq_lt_dec	40
Coq.Arith.Compare_dec.gt_eq_gt_dec	40	0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: destruct H; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.899250984192	238
Coq.Arith.Compare_dec.le_lt_dec	40
Coq.Arith.Compare_dec.le_le_S_dec	40	3.1.0.2.0.3.11.0.21.12	synth with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: now apply Peano.le_n_S).	29.8351399899	24588
Coq.Arith.Compare_dec.le_ge_dec	40	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	0.285501003265	104
Coq.Arith.Compare_dec.le_gt_dec	40	0.0.1	synth with cache (only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).	0.154567956924	48
Coq.Arith.Compare_dec.le_lt_eq_dec	40
Coq.Arith.Compare_dec.le_dec	40	2.0.0.1.0.0.0.2.0.4.1.7	synth with cache (only 1: revert m; only 1: induction n; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: now right; only 1: destruct (IHn m); only 1: left; only 1: apply Peano.le_n_S; only 1: auto; only 1: right; only 1: auto with arith).	7.59680390358	5180
Coq.Arith.Compare_dec.lt_dec	40	7.7.4.2.5	synth with cache (only 1: destruct m; only 1: auto with arith; only 1: destruct (le_gt_dec n m); only 1: auto with arith; only 1: auto with arith).	4.28964805603	3829
Coq.Arith.Compare_dec.gt_dec	40	0	synth with cache (only 1: apply le_dec).	0.00727510452271	1
Coq.Arith.Compare_dec.ge_dec	40	1.3.1	synth with cache (only 1: destruct (le_gt_dec n m); only 1: apply le_dec; only 1: apply le_dec).	0.037385225296	17
Coq.Arith.Compare_dec.dec_le	40
Coq.Arith.Compare_dec.dec_lt	40	5	synth with cache (only 1: apply Nat.le_decidable).	0.0190279483795	22
Coq.Arith.Compare_dec.dec_gt	40	2	synth with cache (only 1: apply Nat.lt_decidable).	0.00907802581787	3
Coq.Arith.Compare_dec.dec_ge	40
Coq.Arith.Compare_dec.not_eq	40	0	synth with cache (only 1: apply Nat.lt_gt_cases).	0.00820589065552	1
Coq.Arith.Compare_dec.not_le	40	0	synth with cache (only 1: apply Nat.lt_nge).	0.00771307945251	1
Coq.Arith.Compare_dec.not_gt	40	2	synth with cache (only 1: apply Nat.le_ngt).	0.00964403152466	3
Coq.Arith.Compare_dec.not_ge	40	1	synth with cache (only 1: apply Nat.nle_gt).	0.00904202461243	2
Coq.Arith.Compare_dec.not_lt	40	1	synth with cache (only 1: apply Nat.nlt_ge).	0.00920104980469	2
Coq.Arith.Compare_dec.nat_compare_lt	40
Coq.Arith.Compare_dec.nat_compare_gt	40
Coq.Arith.Compare_dec.nat_compare_le	40
Coq.Arith.Compare_dec.nat_compare_ge	40
Coq.Arith.Compare_dec.nat_compare_eq	40	2.0.0.0.6.1.4.1.11.1	synth with cache (only 1: revert m; only 1: induction n; only 1: intros m H1; only 1: destruct m; only 1: constructor; only 1: now Nat.nzsimpl; only 1: destruct m; only 1: simpl; only 1: easy; only 1: auto).	25.4383730888	23003
Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	1	synth with cache (only 1: apply Nat.compare_lt_iff).	0.00888180732727	2
Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	0	synth with cache (only 1: apply Nat.compare_gt_iff).	0.00838088989258	1
Coq.Arith.Compare_dec.nat_compare_equiv	40
Coq.Arith.Compare_dec.leb_iff_conv	40
Coq.Arith.Compare_dec.leb_correct	40
Coq.Arith.Compare_dec.leb_complete	40	0	synth with cache (only 1: apply Nat.leb_le).	0.00783610343933	1
Coq.Arith.Compare_dec.leb_correct_conv	40	0.1	synth with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.lt_nge).	0.0196268558502	3
Coq.Arith.Compare_dec.leb_complete_conv	40	0.0	synth with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.nle_gt).	0.0165841579437	2
Coq.Arith.Compare_dec.leb_compare	40
Coq.Arith.EqNat.eq_nat_refl	40	2.12.13	synth with cache (only 1: induction n; only 1: now try Nat.order'; only 1: now rewrite <- ?Nat.succ_le_mono).	0.307651996613	585
Coq.Arith.EqNat.eq_nat_is_eq	40
Coq.Arith.EqNat.eq_eq_nat	40	0.0.0.0.0.0	synth with cache (only 1: intros <-; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0324680805206	6
Coq.Arith.EqNat.eq_nat_eq	40	2	synth with cache (only 1: apply eq_nat_is_eq).	0.560882091522	129
Coq.Arith.EqNat.eq_nat_elim	40
Coq.Arith.EqNat.eq_nat_decide	40	5.0.0.0.0.1.0.0.3.0.1.1.1	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: auto; only 1: now right; only 1: destruct m; only 1: now right; only 1: destruct (IHn m); only 1: left; only 1: auto; only 1: now right).	11.9164710045	7932
Coq.Arith.EqNat.beq_nat_refl	40	2.1.4.49	synth with cache (only 1: Nat.induct ltac:(n); only 1: simpl; only 1: trivial; only 1: Bool.destr_bool).	1.13430690765	2334
Coq.Arith.EqNat.beq_nat_true	40	1.0.0.0.0.0.1.0.5	synth with cache (only 1: Nat.double_induct n m; only 1: simpl; only 1: destruct m; only 1: easy; only 1: easy; only 1: intro n; only 1: easy; only 1: intros; only 1: auto).	3.74737596512	1624
Coq.Arith.EqNat.beq_nat_false	40	0.0.3.2.4.0.1.16	synth with cache (only 1: Nat.double_induct n m; only 1: intros a Ha; only 1: intro H1; only 1: subst; only 1: discriminate; only 1: now try Nat.order'; only 1: intros a b Ha Hb; only 1: auto).	3.82208490372	4755
Coq.Arith.EqNat.beq_nat_eq	40	1.0.3.0.0.0.1.0.7	synth with cache (only 1: induction n; only 1: simpl; only 1: destruct m; only 1: easy; only 1: easy; only 1: simpl; only 1: destruct m; only 1: easy; only 1: contradiction || auto).	9.72007489204	5680
Coq.Arith.Euclid.eucl_dev	40
Coq.Arith.Euclid.quotient	40
Coq.Arith.Euclid.modulo	40
Coq.Arith.PeanoNat.Nat.bi_induction	40	22.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: firstorder).	15.0328187943	2718
Coq.Arith.PeanoNat.Nat.recursion_wd	40
Coq.Arith.PeanoNat.Nat.recursion_0	40	0	synth with cache (only 1: destr_bool).	0.0142149925232	1
Coq.Arith.PeanoNat.Nat.recursion_succ	40
Coq.Arith.PeanoNat.Nat.pred_succ	40	0.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: auto).	0.0243780612946	3
Coq.Arith.PeanoNat.Nat.pred_0	40	0	synth with cache (only 1: reflexivity).	0.0133309364319	1
Coq.Arith.PeanoNat.Nat.one_succ	40	0	synth with cache (only 1: auto).	0.0131530761719	1
Coq.Arith.PeanoNat.Nat.two_succ	40	0	synth with cache (only 1: reflexivity).	0.011531829834	1
Coq.Arith.PeanoNat.Nat.add_0_l	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0147449970245	2
Coq.Arith.PeanoNat.Nat.add_succ_l	40	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0294539928436	5
Coq.Arith.PeanoNat.Nat.sub_0_r	40	0.0.0.0.5	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0323638916016	10
Coq.Arith.PeanoNat.Nat.sub_succ_r	40
Coq.Arith.PeanoNat.Nat.mul_0_l	40	0	synth with cache (only 1: auto).	0.011735200882	1
Coq.Arith.PeanoNat.Nat.mul_succ_l	40
Coq.Arith.PeanoNat.Nat.lt_succ_r	40
Coq.Arith.PeanoNat.Nat.eqb_eq	40
Coq.Arith.PeanoNat.Nat.leb_le	40
Coq.Arith.PeanoNat.Nat.ltb_lt	40
Coq.Arith.PeanoNat.Nat.eq_dec	40	0	synth with cache (only 1: decide equality).	0.0207269191742	1
Coq.Arith.PeanoNat.Nat.compare_eq_iff	40
Coq.Arith.PeanoNat.Nat.compare_lt_iff	40
Coq.Arith.PeanoNat.Nat.compare_le_iff	40	0.0.0.0.0.0.0.0.1.0.2.0.0.1.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: split; only 1: intros; only 1: apply le_0_n; only 1: easy; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: rewrite ?IHn; only 1: split; only 1: apply le_n_S; only 1: apply le_S_n).	36.6669209003	22454
Coq.Arith.PeanoNat.Nat.compare_antisym	40	3.0.2.0.0.2.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: reflexivity || destruct H; only 1: simpl; only 1: reflexivity || destruct H; only 1: destruct m; only 1: simpl; only 1: split; only 1: simpl; only 1: easy).	22.1496081352	12947
Coq.Arith.PeanoNat.Nat.compare_succ	40	2.0.1.0.0.0	synth with cache (only 1: revert m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: reflexivity).	0.05131316185	16
Coq.Arith.PeanoNat.Nat.max_l	40	0.0.1.0.0.0.0.1.0.0.0.0.1	synth with cache (only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	8.56239700317	4515
Coq.Arith.PeanoNat.Nat.max_r	40	0.0.1.0.1.0.0.0.0.0.0.0.2	synth with cache (only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	11.8693327904	6116
Coq.Arith.PeanoNat.Nat.min_l	40	0.0.1.0.1.0.0.3.0.0.6	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	34.6201429367	19765
Coq.Arith.PeanoNat.Nat.min_r	40	0.0.1.0.0.0.0.1.0.0.0.0.0.0.7	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	37.086755991	26190
Coq.Arith.PeanoNat.Nat.pow_neg_r	40	1.0	synth with cache (only 1: intro H; only 1: false_hyp H nlt_0_r).	0.0216670036316	3
Coq.Arith.PeanoNat.Nat.pow_0_r	40	0	synth with cache (only 1: now nzsimpl').	0.020035982132	1
Coq.Arith.PeanoNat.Nat.pow_succ_r	40	4.2.0.0	synth with cache (only 1: inversion 1; only 1: simpl; only 1: now split; only 1: trivial).	0.0338041782379	10
Coq.Arith.PeanoNat.Nat.square_spec	40	0	synth with cache (only 1: now nzsimpl').	0.0199358463287	1
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	40	0.0.0.30	synth with cache (only 1: intros ([| ], H); only 1: discriminate; only 1: simpl in H; only 1: now rewrite <- plus_n_Sm in H).	0.719313144684	894
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40
Coq.Arith.PeanoNat.Nat.even_spec	40
Coq.Arith.PeanoNat.Nat.odd_spec	40
Coq.Arith.PeanoNat.Nat.divmod_spec	40
Coq.Arith.PeanoNat.Nat.div_mod	40
Coq.Arith.PeanoNat.Nat.mod_bound_pos	40
Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	40
Coq.Arith.PeanoNat.Nat.sqrt_specif	40
Coq.Arith.PeanoNat.Nat.sqrt_neg	40	2.0	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).	0.0228011608124	4
Coq.Arith.PeanoNat.Nat.log2_iter_spec	40
Coq.Arith.PeanoNat.Nat.log2_spec	40
Coq.Arith.PeanoNat.Nat.log2_nonpos	40	0.2	synth with cache (only 1: inversion 1; only 1: now apply pred_0).	0.0554959774017	32
Coq.Arith.PeanoNat.Nat.gcd_divide	40
Coq.Arith.PeanoNat.Nat.gcd_divide_l	40
Coq.Arith.PeanoNat.Nat.gcd_divide_r	40	0.0	synth with cache (only 1: intros; only 1: apply gcd_divide).	0.0176360607147	2
Coq.Arith.PeanoNat.Nat.gcd_greatest	40
Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	13	synth with cache (only 1: apply le_0_l).	0.0897281169891	90
Coq.Arith.PeanoNat.Nat.div2_double	40	0.2.0.0.3.10.2	synth with cache (only 1: simpl; only 1: nzsimpl; only 1: induction n; only 1: now nzsimpl; only 1: simpl; only 1: nzsimpl; only 1: auto).	1.70029997826	1038
Coq.Arith.PeanoNat.Nat.div2_succ_double	40	1.0.0.0.1.1	synth with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite add_succ_r; only 1: now f_equal).	0.0429060459137	11
Coq.Arith.PeanoNat.Nat.le_div2	40
Coq.Arith.PeanoNat.Nat.lt_div2	40
Coq.Arith.PeanoNat.Nat.div2_decr	40
Coq.Arith.PeanoNat.Nat.double_twice	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0361778736115	2
Coq.Arith.PeanoNat.Nat.testbit_0_l	40	1.0.3	synth with cache (only 1: induct ltac:(n); only 1: trivial; only 1: destr_bool).	0.167559146881	36
Coq.Arith.PeanoNat.Nat.testbit_odd_0	40
Coq.Arith.PeanoNat.Nat.testbit_even_0	40
Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	40
Coq.Arith.PeanoNat.Nat.testbit_even_succ'	40
Coq.Arith.PeanoNat.Nat.shiftr_specif	40
Coq.Arith.PeanoNat.Nat.shiftl_specif_high	40
Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40
Coq.Arith.PeanoNat.Nat.div2_bitwise	40
Coq.Arith.PeanoNat.Nat.odd_bitwise	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	40
Coq.Arith.PeanoNat.Nat.land_spec	40
Coq.Arith.PeanoNat.Nat.ldiff_spec	40	0.0.1.0.2.2.2.2.7.4	synth with cache (only 1: unfold testbit; only 1: destruct divmod as (q', u'); only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_r; only 1: fold testbit; only 1: apply testbit_bitwise_1; only 1: destr_bool; only 1: auto).	1.41840791702	1597
Coq.Arith.PeanoNat.Nat.lor_spec	40
Coq.Arith.PeanoNat.Nat.lxor_spec	40
Coq.Arith.PeanoNat.Nat.div2_spec	40	3	synth with cache (only 1: now nzsimpl').	0.0202939510345	4
Coq.Arith.PeanoNat.Nat.testbit_neg_r	40	0	synth with cache (only 1: inversion H).	0.0148231983185	1
Coq.Arith.PeanoNat.Nat.tail_add_spec	40
Coq.Arith.PeanoNat.Nat.tail_addmul_spec	40
Coq.Arith.PeanoNat.Nat.tail_mul_spec	40
Coq.Arith.PeanoNat.TestOrder.test	40	1	synth with cache (only 1: Nat.order).	0.0346910953522	17
Coq.Arith.Compare.discrete_nat	40
Coq.Arith.Gt.gt_n_S	40	0.2.3	synth with cache (only 1: revert m; only 1: intros H; only 1: apply Nat.succ_lt_mono).	0.163617134094	33
Coq.Arith.Gt.gt_S_n	40	0	synth with cache (only 1: apply Nat.succ_lt_mono).	0.0156049728394	1
Coq.Arith.Gt.gt_S	40
Coq.Arith.Gt.gt_pred	40	1	synth with cache (only 1: apply Nat.lt_succ_lt_pred).	0.0178899765015	2
Coq.Arith.Gt.le_not_gt	40	0	synth with cache (only 1: apply Nat.le_ngt).	0.0166571140289	1
Coq.Arith.Gt.gt_not_le	40	1	synth with cache (only 1: apply Nat.lt_nge).	0.0184350013733	2
Coq.Arith.Gt.le_S_gt	40	2.0.0.4	synth with cache (only 1: Nat.cases n; only 1: intro H; only 1: Nat.order'; only 1: trivial).	0.076103925705	12
Coq.Arith.Gt.gt_S_le	40	0	synth with cache (only 1: apply Peano.le_S_n).	0.0152831077576	1
Coq.Arith.Gt.gt_le_S	40	1	synth with cache (only 1: apply Nat.le_succ_l).	0.0203158855438	2
Coq.Arith.Gt.le_gt_S	40	0	synth with cache (only 1: apply Nat.succ_le_mono).	0.015909910202	1
Coq.Arith.Gt.le_gt_trans	40
Coq.Arith.Gt.gt_le_trans	40
Coq.Arith.Gt.gt_trans	40
Coq.Arith.Gt.gt_trans_S	40
Coq.Arith.Gt.gt_0_eq	40	5.0.28	synth with cache (only 1: Nat.cases ltac:(n); only 1: now apply Nat.lt_eq_cases, Nat.succ_le_mono; only 1: intuition).	1.77943396568	1443
Coq.Arith.Gt.plus_gt_reg_l	40	0	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.0161900520325	1
Coq.Arith.Gt.plus_gt_compat_l	40	0	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.0180180072784	1
Coq.Logic.SetoidChoice.setoid_choice	40
Coq.Logic.SetoidChoice.representative_choice	40
Coq.Logic.PropFacts.injection_is_involution_in_Prop	40
Coq.Logic.JMeq.JMeq_sym	40	0.11.16	synth with cache (only 1: intros A C h1 h2; only 1: destruct 1; only 1: reflexivity).	0.492222070694	1203
Coq.Logic.JMeq.JMeq_trans	40	1.0.4	synth with cache (only 1: intros; only 1: destruct H; only 1: assumption).	0.0181629657745	8
Coq.Logic.JMeq.JMeq_ind	40
Coq.Logic.JMeq.JMeq_rec	40	0.0.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0149300098419	3
Coq.Logic.JMeq.JMeq_rect	40	0.0.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0153279304504	3
Coq.Logic.JMeq.JMeq_ind_r	40
Coq.Logic.JMeq.JMeq_rec_r	40	0.1.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0164759159088	4
Coq.Logic.JMeq.JMeq_rect_r	40	0.1.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0170149803162	4
Coq.Logic.JMeq.JMeq_congr	40	0.0.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0195369720459	3
Coq.Logic.JMeq.JMeq_eq_dep_id	40	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.0165328979492	3
Coq.Logic.JMeq.eq_dep_id_JMeq	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.0140430927277	2
Coq.Logic.JMeq.eq_dep_JMeq	40	0.0	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.0156760215759	2
Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40
Coq.Logic.JMeq.JMeq_eq_dep	40	1.2.2.1	synth with cache (only 1: destruct 1; only 1: intros; only 1: dependent rewrite H; only 1: trivial).	0.0554988384247	30
Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	1.2.34	synth with cache (only 1: intro; only 1: intros [x y]; only 1: trivial).	0.315629005432	1282
Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40	0.7.2.1.17.0.2.15	synth with cache (only 1: red; only 1: split; only 1: reflexivity; only 1: intro p; only 1: destruct p; only 1: simpl in *; only 1: subst; only 1: reflexivity).	7.23156499863	24765
Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.0.0.0	synth with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).	0.0243570804596	4
Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40
Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40
Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40
Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40
Coq.Logic.Classical_Prop.NNPP	40
Coq.Logic.Classical_Prop.Peirce	40	23.0	synth with cache (only 1: intros; only 1: tauto).	0.27413892746	549
Coq.Logic.Classical_Prop.not_imply_elim	40
Coq.Logic.Classical_Prop.not_imply_elim2	40	5.2	synth with cache (only 1: intros P F; only 1: auto).	0.0310900211334	22
Coq.Logic.Classical_Prop.imply_to_or	40	0.9.2	synth with cache (only 1: intros; only 1: apply NNPP; only 1: tauto).	0.767238855362	556
Coq.Logic.Classical_Prop.imply_to_and	40	2.1.2.2	synth with cache (only 1: intros; only 1: apply NNPP; only 1: intro; only 1: tauto).	0.183804035187	77
Coq.Logic.Classical_Prop.or_to_imply	40	1	synth with cache (only 1: tauto).	0.0491471290588	27
Coq.Logic.Classical_Prop.not_and_or	40	8.4	synth with cache (only 1: Bool.destr_bool; only 1: tauto).	0.852916002274	467
Coq.Logic.Classical_Prop.or_not_and	40	7.0	synth with cache (only 1: intros; only 1: tauto).	0.0657660961151	32
Coq.Logic.Classical_Prop.not_or_and	40	0	synth with cache (only 1: tauto).	0.0199179649353	1
Coq.Logic.Classical_Prop.and_not_or	40	0	synth with cache (only 1: tauto).	0.0203039646149	1
Coq.Logic.Classical_Prop.imply_and_or	40	3.1	synth with cache (only 1: intros; only 1: tauto).	0.0220351219177	6
Coq.Logic.Classical_Prop.imply_and_or2	40	0.2	synth with cache (only 1: intros x y z; only 1: intuition auto; PeanoNat.Nat.Private_OrderTac.Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *).	0.0240399837494	4
Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.Hurkens.Generic.Paradox.Omega	40
Coq.Logic.Hurkens.Generic.Paradox.lemma1	40
Coq.Logic.Hurkens.Generic.Paradox.lemma2	40
Coq.Logic.Hurkens.Generic.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.strength	40
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.modal	40	0.5.10.45	synth with cache (only 1: intro p; only 1: red; only 1: destruct p; only 1: eauto).	4.88420701027	16292
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.Forall	40	1.6	synth with cache (only 1: red; only 1: eauto).	0.0174190998077	9
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToNegativeProp.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.MParadox.mparadox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractFromTypeToProp.Paradox.paradox	40
Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.up_down	40	3.47	synth with cache (only 1: subst; only 1: reflexivity).	1.27527689934	4150
Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.paradox	40
Coq.Logic.Hurkens.PropNeqType.paradox	40
Coq.Logic.ClassicalChoice.singleton_choice	40
Coq.Logic.ClassicalChoice.choice	40
Coq.Logic.Eqdep_dec.EqdepDec.trans_sym_eq	40	0.75.0	synth with cache (only 1: intros; only 1: subst; only 1: reflexivity).	2.51190400124	15129
Coq.Logic.Eqdep_dec.EqdepDec.nu_constant	40
Coq.Logic.Eqdep_dec.EqdepDec.nu_left_inv_on	40
Coq.Logic.Eqdep_dec.EqdepDec.eq_proofs_unicity_on	40
Coq.Logic.Eqdep_dec.EqdepDec.K_dec_on	40
Coq.Logic.Eqdep_dec.EqdepDec.inj_right_pair_on	40
Coq.Logic.Eqdep_dec.K_dec_type	40
Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros A eq_dec x P H p; only 1: elim p using K_dec; only 1: intros; only 1: case (eq_dec x0 y); only 1: left; only 1: assumption; only 1: right; only 1: assumption; only 1: trivial).	0.227003097534	76
Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	40
Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40
Coq.Logic.Eqdep_dec.UIP_refl_unit	40
Coq.Logic.Eqdep_dec.UIP_refl_bool	40
Coq.Logic.Eqdep_dec.UIP_refl_nat	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.linear_search_smallest	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.epsilon_smallest	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_implies_acc	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc_ex	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.acc_implies_P_eventually	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.constructive_indefinite_ground_description_nat_Acc	40
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.P'_decidable	40	17	synth with cache (only 1: firstorder  (subst; auto)).	0.74719619751	424
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_indefinite_ground_description	40
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_definite_ground_description	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40
Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40	0.0.0.5.6.1.0.0.13.2.2.0	synth with cache (only 1: split; only 1: intros GAC_rel A B R; only 1: firstorder; only 1: apply (GAC_rel A B (fun x => exists y, R x y) R); only 1: firstorder; only 1: auto; only 1: intros OAC_rel A B P R H; only 1: firstorder; only 1: destruct (OAC_rel A B R) as (f, Hf); only 1: eauto; only 1: exists f; only 1: firstorder).	16.6600170135	22691
Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40
Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40	1.0.0.1.1.0.0	synth with cache (only 1: intros D_iota A P H; only 1: destruct D_iota with (P := P) as (x, H1); only 1: destruct H; only 1: auto; only 1: exists x; only 1: apply H1; only 1: assumption).	0.0280270576477	11
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40	1.0.12	synth with cache (only 1: compute; only 1: intros A B P R H; only 1: eauto).	0.400820970535	606
Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40	0.4.0.6.0	synth with cache (only 1: intros D_epsilon A P H; only 1: destruct D_epsilon with (P := P) as (x, H1); only 1: auto; only 1: exists x; only 1: assumption).	0.220535993576	220
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40
Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40	10.3.8	synth with cache (only 1: intros; only 1: intro x; only 1: apply H).	2.64510297775	2992
Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40
Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40
Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40	1.0.4.1	synth with cache (only 1: intros AC_depfun A B R H; only 1: destruct (AC_depfun A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	0.0246241092682	19
Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros AC_fun A B R H; only 1: pose (B' := {x : A & B x}); only 1: pose (R' := fun (x : A) (y : B') => projT1 y = x /\ R (projT1 y) (projT2 y)); only 1: destruct (AC_fun A B' R') as (f, Hf); only 1: intros x; only 1: destruct (H x) as (y, (Hy, Huni)); only 1: exists (existT (fun x => B x) x y); only 1: repeat split; only 1: trivial; only 1: intros (x', y') (Heqx', Hy'); only 1: simpl in *; only 1: destruct Heqx'; only 1: rewrite (Huni y'); only 1: trivial; only 1: trivial; only 1: exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))); only 1: intro x; only 1: destruct (Hf x) as (Heq, HR) using and_indd; only 1: destruct (f x); only 1: simpl in *; only 1: destruct Heq using eq_indd; only 1: trivial; only 1: intros DepFunReify A B R H; only 1: destruct (DepFunReify A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	21.125690937	13697
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40
Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40	0.0.3.0	synth with cache (only 1: intros IndefDescr A B R H; only 1: exists (fun x => proj1_sig (IndefDescr B (R x) (H x))); only 1: intro x; only 1: apply (proj2_sig (IndefDescr B (R x) (H x)))).	0.0200619697571	7
Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40
Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40
Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	40
Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40
Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	40	0.0.4.3.4.2.2.1.0	synth with cache (only 1: intros A B SetoidFunChoice R T Hequiv Hexists; only 1: firstorder; only 1: pose (T' := fun x y => forall x', R x x' -> T x' y); only 1: assert (Hcompat : forall (x x' : A) (y : B), R x x' -> T' x y -> T' x' y) by firstorder; only 1: destruct SetoidFunChoice with (R := R) (T := T) as (f, Hf); only 1: easy; only 1: firstorder; only 1: exists f; only 1: firstorder).	34.4489331245	4060
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	40	0.0.3.2.18.5.0.1	synth with cache (only 1: intros A B SetoidFunChoice T Hexists; only 1: destruct SetoidFunChoice with (R := eq) (T := T) as (f, Hf); only 1: intuition; only 1: intros x y z; only 1: now intros * ->; only 1: firstorder; only 1: exists f; only 1: firstorder).	10.0422990322	7706
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	40
Coq.Logic.PropExtensionality.proof_irrelevance	40
Coq.Logic.StrictProp.Spr1_inj	40	0.45.15.36	synth with cache (only 1: destruct b; only 1: simpl in *; only 1: subst; only 1: auto).	2.23847699165	18856
Coq.Logic.ClassicalFacts.prop_degen_ext	40
Coq.Logic.ClassicalFacts.prop_degen_em	40
Coq.Logic.ClassicalFacts.prop_ext_em_degen	40
Coq.Logic.ClassicalFacts.provable_prop_ext	40	9.0.0.4.1	synth with cache (only 1: intros Ext EM A; only 1: apply Ext; only 1: split; only 1: exact (fun _ => I); only 1: trivial).	0.385727882385	641
Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	0.10.15.0.19.1	synth with cache (only 1: intros Ext A Ha; only 1: apply Ext; only 1: split; only 1: auto; only 1: intros H ?; only 1: exact H).	2.74435687065	12951
Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40
Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.aux	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.ext_prop_dep_proof_irrel_gen	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_Prop_Ext_CC.ext_prop_dep_proof_irrel_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_CIC.ext_prop_dep_proof_irrel_cic	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p1	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p2	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.proof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p1	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p2	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wproof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_CCI.proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.Weak_proof_irrelevance_CCI.wem_proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40
Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40
Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40
Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40
Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40
Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40
Coq.Logic.ClassicalFacts.Unrestricted_minimization_entails_excluded_middle.unrestricted_minimization_entails_excluded_middle	40
Coq.Logic.ClassicalFacts.Excluded_middle_entails_unrestricted_minimization.excluded_middle_entails_unrestricted_minimization	40
Coq.Logic.ClassicalFacts.Example_of_undecidable_predicate_with_the_minimization_property.undecidable_predicate_with_the_minimization_property	40
Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40
Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40
Coq.Logic.Classical_Pred_Type.Generic.not_all_not_ex	40
Coq.Logic.Classical_Pred_Type.Generic.not_all_ex_not	40
Coq.Logic.Classical_Pred_Type.Generic.not_ex_all_not	40	29	synth with cache (only 1: eauto using PeanoNat.Nat.Private_Tac.eq_trans, PeanoNat.Nat.Private_Tac.eq_sym).	4.63946580887	8760
Coq.Logic.Classical_Pred_Type.Generic.not_ex_not_all	40
Coq.Logic.Classical_Pred_Type.Generic.ex_not_not_all	40	2.0.0.4	synth with cache (only 1: destruct 1; only 1: intro all; only 1: apply H; only 1: trivial).	0.100522994995	68
Coq.Logic.Classical_Pred_Type.Generic.all_not_not_ex	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	40	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite M.proof_irrelevance with (p1 := q) (p2 := (eq_rect x P p y H)); only 1: elim H using eq_indd; only 1: reflexivity).	0.0195231437683	4
Coq.Logic.FinFun.Finite_alt	40
Coq.Logic.FinFun.Injective_map_NoDup	40
Coq.Logic.FinFun.Injective_list_carac	40
Coq.Logic.FinFun.Injective_carac	40
Coq.Logic.FinFun.Surjective_list_carac	40
Coq.Logic.FinFun.Surjective_carac	40
Coq.Logic.FinFun.Endo_Injective_Surjective	40
Coq.Logic.FinFun.Finite_Empty_or_not	40	5.4.5.10	synth with cache (only 1: intros (l, L); only 1: induction l; only 1: now left; only 1: now constructor).	3.27895498276	2192
Coq.Logic.FinFun.Surjective_inverse	40
Coq.Logic.FinFun.Injective_Surjective_Bijective	40
Coq.Logic.FinFun.Fin_Finite	40
Coq.Logic.FinFun.Fin2Restrict.extend_ok	40
Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40
Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40
Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40
Coq.Logic.FinFun.Fin2Restrict.restrict_n2f	40
Coq.Logic.FinFun.Fin2Restrict.extend_surjective	40
Coq.Logic.FinFun.Fin2Restrict.extend_injective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_surjective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40
Coq.Logic.FinFun.bInjective_bSurjective	40
Coq.Logic.FinFun.bSurjective_bBijective	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.prop_ext	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.proof_irrel	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.guarded_rel_choice	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros A B P R H; only 1: destruct (rel_choice _ _ (fun (x : {x : _ & P x}) (y : B) => R (projT1 x) y)) as (R', (HR'R, H0)); only 1: intros (x, HPx); only 1: destruct (H x HPx) as (y, HRxy); only 1: exists y; only 1: exact HRxy; only 1: set (R'' := fun (x : A) (y : B) => exists H : P x, R' (existT P x H) y); only 1: exists R''; only 1: split; only 1: intros x y (HPx, HR'xy); only 1: change x with (projT1 (existT P x HPx)); only 1: apply HR'R; only 1: exact HR'xy; only 1: intros x HPx; only 1: destruct (H0 (existT P x HPx)) as (y, (HR'xy, Huniq)); only 1: exists y; only 1: split; only 1: exists HPx; only 1: exact HR'xy; only 1: intros y' (H'Px, HR'xy'); only 1: apply Huniq; only 1: rewrite proof_irrel with (a1 := HPx) (a2 := H'Px); only 1: exact HR'xy').	17.9405479431	5539
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.AC_bool_subset_to_bool	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.pred_ext_and_rel_choice_imp_EM	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a1'	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a2'	40	0.0	synth with cache (only 1: exists a1; only 1: auto).	0.0230920314789	2
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.projT1_injective	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.decide	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec'	40
Coq.Logic.Diaconescu.ExtensionalEpsilon_imp_EM.extensional_epsilon_imp_EM	40
Coq.Logic.FunctionalExtensionality.equal_f	40	0.12.0	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.132414102554	212
Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: auto).	0.0175890922546	3
Coq.Logic.FunctionalExtensionality.functional_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	0.0.0	synth with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.0175170898438	3
Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	0.0.0	synth with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.0183749198914	3
Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40
Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40
Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40	2.14.0.0	synth with cache (only 1: apply forall_eq_rect with (H := H); only 1: clear H g; only 1: rewrite functional_extensionality_dep_good_refl; only 1: reflexivity).	0.44827580452	523
Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	1	synth with cache (only 1: reflexivity).	0.0135869979858	2
Coq.Logic.FunctionalExtensionality.eta_expansion	40	1	synth with cache (only 1: reflexivity).	0.0100450515747	2
Coq.Logic.HLevels.forall_hprop	40
Coq.Logic.HLevels.and_hprop	40
Coq.Logic.HLevels.impl_hprop	40	0.0.0.0	synth with cache (only 1: intros A P H p q; only 1: apply functional_extensionality_dep; only 1: intro x; only 1: apply H).	0.0212700366974	4
Coq.Logic.HLevels.false_hprop	40	0.0	synth with cache (only 1: intros p q; only 1: destruct p, q).	0.013739824295	2
Coq.Logic.HLevels.true_hprop	40	5.1.0	synth with cache (only 1: intros p q; only 1: destruct p, q; only 1: auto).	0.0171720981598	9
Coq.Logic.HLevels.not_hprop	40	0.0.1.1.0	synth with cache (only 1: intros p q; only 1: intro x; only 1: apply functional_extensionality; only 1: intros; only 1: contradiction).	0.0257568359375	7
Coq.Logic.HLevels.hset_hprop	40
Coq.Logic.HLevels.eq_trans_cancel	40	0.20.8.8.14	synth with cache (only 1: unfold eq_trans, eq_sym, eq_ind; only 1: intros A B f g <- H; only 1: destruct r, 1; only 1: destruct H; only 1: reflexivity).	17.6366360188	53770
Coq.Logic.HLevels.hset_hOneType	40
Coq.Logic.HLevels.hprop_hprop	40
Coq.Logic.HLevels.hprop_hset	40
Coq.Logic.ClassicalUniqueChoice.unique_choice	40
Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40
Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40
Coq.Logic.WKL.is_path_from_characterization	40
Coq.Logic.WKL.is_path_from_restrict	40
Coq.Logic.WKL.inductively_barred_at_monotone	40
Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40
Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	40
Coq.Logic.WKL.find_left_path	40
Coq.Logic.WKL.Y_unique	40
Coq.Logic.WKL.Y_approx	40
Coq.Logic.WKL.PreWeakKonigsLemma	40
Coq.Logic.WKL.inductively_barred_at_decidable	40
Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	40
Coq.Logic.WKL.WeakKonigsLemma	40
Coq.Logic.Epsilon.constructive_indefinite_description	40
Coq.Logic.Epsilon.small_drinkers'_paradox	40
Coq.Logic.Epsilon.iota_statement	40
Coq.Logic.Epsilon.constructive_definite_description	40
Coq.Logic.ClassicalDescription.excluded_middle_informative	40
Coq.Logic.ClassicalDescription.classical_definite_description	40
Coq.Logic.ClassicalDescription.dependent_unique_choice	40
Coq.Logic.ClassicalDescription.unique_choice	40
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_sym	40	0.6.0.5.3	synth with cache (only 1: intro; only 1: intro x; only 1: intros; only 1: destruct H; only 1: reflexivity).	0.179757118225	354
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_trans	40	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: auto).	0.0169930458069	3
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep1_dep	40	0.60.0	synth with cache (only 1: destruct 1; only 1: subst; only 1: auto).	4.62769794464	22621
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_dep1	40	2.26.0	synth with cache (only 1: destruct 1; only 1: exists eq_refl; only 1: reflexivity).	0.66868185997	1939
Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	4.38.13	synth with cache (only 1: intros ? ? ? Fl Fr; only 1: inversion 1; only 1: apply eq_dep_intro).	4.53171396255	16568
Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	3.10	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.145884990692	167
Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40	0.7.0.0.12.2	synth with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	0.744702100754	1362
Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.0.0	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro).	0.0222899913788	3
Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	0.1	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.0249440670013	12
Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40	0.10.0.0.13.0	synth with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	1.25524997711	1985
Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40
Coq.Logic.EqdepFacts.eq_sigT_fst	40	0.1.1.0	synth with cache (only 1: intros; only 1: change x2 with (projT1 (existT P x2 H2)); only 1: destruct H; only 1: split).	0.0469920635223	25
Coq.Logic.EqdepFacts.eq_sigT_snd	40
Coq.Logic.EqdepFacts.eq_sig_fst	40	1.1.6.0	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: destruct H; only 1: split).	0.442040205002	333
Coq.Logic.EqdepFacts.eq_sig_snd	40
Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep1_eq_on	40	28.1.8.12.20	synth with cache (only 1: intro x; only 1: intros; only 1: destruct H; only 1: rewrite H; only 1: auto using eq_sig_eq_dep, eq_dep_eq_sig).	3.28575396538	11874
Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep_eq_on	40
Coq.Logic.EqdepFacts.Equivalences.eq_dep_eq_on__UIP_on	40	0.7.21.39.6.10	synth with cache (only 1: red; only 1: intros h1 h2; only 1: subst; only 1: apply h1; only 1: destruct h2; only 1: apply eq_dep_intro).	12.8919270039	63415
Coq.Logic.EqdepFacts.Equivalences.UIP_on__UIP_refl_on	40	11.0.0.0	synth with cache (only 1: intro eq_dep_eq; only 1: red; only 1: intros; only 1: auto).	0.358134031296	408
Coq.Logic.EqdepFacts.Equivalences.UIP_refl_on__Streicher_K_on	40	2.8.0.2.6.3	synth with cache (only 1: red; only 1: intro; only 1: intro UIP; only 1: intros; only 1: rewrite H; only 1: apply UIP).	2.61528682709	6058
Coq.Logic.EqdepFacts.Equivalences.Streicher_K_on__eq_rect_eq_on	40	2.16.0	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto).	0.682821035385	732
Coq.Logic.EqdepFacts.UIP_shift_on	40
Coq.Logic.EqdepFacts.Corollaries.eq_dep_eq_on__inj_pair2_on	40	3.0.0	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.042505979538	23
Coq.Logic.EqdepFacts.f_eq_dep	40	1.2	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.0361800193787	16
Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.1	synth with cache (only 1: destruct 1; only 1: trivial).	0.108490943909	54
Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.0	synth with cache (only 1: intros * []; only 1: reflexivity).	0.0148138999939	2
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	6.0.0	synth with cache (only 1: intros Ext A P Q Eq; only 1: intros x; only 1: auto).	0.0197370052338	9
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	5.0	synth with cache (only 1: intros Ext A Ha; only 1: now apply Ext).	0.0345540046692	31
Coq.Logic.IndefiniteDescription.constructive_definite_description	40
Coq.Logic.IndefiniteDescription.functional_choice	40
Coq.Logic.Berardi.Berardis_paradox.AC_IF	40
Coq.Logic.Berardi.Berardis_paradox.Retracts.AC	40
Coq.Logic.Berardi.Berardis_paradox.L1	40
Coq.Logic.Berardi.Berardis_paradox.retract_pow_U_U	40
Coq.Logic.Berardi.Berardis_paradox.not_has_fixpoint	40
Coq.Logic.Berardi.Berardis_paradox.classical_proof_irrelevance	40
Coq.Logic.ClassicalEpsilon.constructive_definite_description	40
Coq.Logic.ClassicalEpsilon.excluded_middle_informative	40
Coq.Logic.ClassicalEpsilon.classical_indefinite_description	40
Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40
Coq.Logic.ClassicalEpsilon.choice	40
Coq.Logic.Decidable.dec_not_not	40	5.4.0.0.0.9.0	synth with cache (only 1: intro A; only 1: intro H1; only 1: unfold not; only 1: intro H; only 1: elim H1; only 1: trivial; only 1: contradiction).	1.12739896774	3880
Coq.Logic.Decidable.dec_True	40	7.0.0	synth with cache (only 1: unfold decidable; only 1: unfold not; only 1: auto).	0.0151000022888	10
Coq.Logic.Decidable.dec_False	40	0.0	synth with cache (only 1: unfold decidable; only 1: auto).	0.0103631019592	2
Coq.Logic.Decidable.dec_or	40	1.0.17	synth with cache (only 1: intro H; only 1: unfold decidable; only 1: tauto).	0.805579900742	1436
Coq.Logic.Decidable.dec_and	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0286130905151	2
Coq.Logic.Decidable.dec_not	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0173261165619	2
Coq.Logic.Decidable.dec_imp	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.023451089859	2
Coq.Logic.Decidable.dec_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0329921245575	2
Coq.Logic.Decidable.not_not	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0149898529053	2
Coq.Logic.Decidable.not_or	40	0	synth with cache (only 1: tauto).	0.0159220695496	1
Coq.Logic.Decidable.not_and	40	0.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0256388187408	3
Coq.Logic.Decidable.not_imp	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.105035066605	2
Coq.Logic.Decidable.imp_simp	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0388450622559	2
Coq.Logic.Decidable.not_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0564820766449	2
Coq.Logic.Decidable.not_true_iff	40	8	synth with cache (only 1: tauto).	0.0259568691254	29
Coq.Logic.Decidable.not_false_iff	40	0	synth with cache (only 1: tauto).	0.010244846344	1
Coq.Logic.Decidable.not_not_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0194828510284	2
Coq.Logic.Decidable.contrapositive	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0231850147247	2
Coq.Logic.Decidable.or_not_l_iff_1	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0270130634308	2
Coq.Logic.Decidable.or_not_l_iff_2	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0270199775696	2
Coq.Logic.Decidable.or_not_r_iff_1	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0272169113159	2
Coq.Logic.Decidable.or_not_r_iff_2	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0275089740753	2
Coq.Logic.Decidable.imp_not_l	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.050271987915	2
Coq.Logic.Decidable.not_or_iff	40	8.0	synth with cache (only 1: intros A P; only 1: tauto).	0.0428140163422	27
Coq.Logic.Decidable.not_and_iff	40	0	synth with cache (only 1: tauto).	0.0175540447235	1
Coq.Logic.Decidable.not_imp_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0363459587097	2
Coq.Logic.Decidable.not_imp_rev_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.036689043045	2
Coq.Logic.Decidable.dec_functional_relation	40
Coq.Logic.WeakFan.Y_unique	40
Coq.Logic.WeakFan.Y_approx	40
Coq.Logic.WeakFan.WeakFanTheorem	40
Coq.MSets.MSetRBT.MakeRaw.singleton_spec	40
Coq.MSets.MSetRBT.MakeRaw.singleton_ok	40	0.1	synth with cache (only 1: red; only 1: auto_tc).	0.0196759700775	3
Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	40
Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	40	0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.0806570053101	5
Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	40
Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	40	0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: ok; only 1: simpl; only 1: ok).	0.0413568019867	5
Coq.MSets.MSetRBT.MakeRaw.rmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).	0.726637840271	531
Coq.MSets.MSetRBT.MakeRaw.lbal_match	40
Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0	synth with cache (only 1: exact (rrmatch _ _ _)).	0.0158889293671	1
Coq.MSets.MSetRBT.MakeRaw.rbal'_match	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_match	40	0	synth with cache (only 1: exact (rmatch _ _ _)).	0.0174920558929	1
Coq.MSets.MSetRBT.MakeRaw.lbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	40
Coq.MSets.MSetRBT.MakeRaw.ins_spec	40
Coq.MSets.MSetRBT.MakeRaw.ins_ok	40
Coq.MSets.MSetRBT.MakeRaw.add_spec'	40
Coq.MSets.MSetRBT.MakeRaw.add_spec	40	0.0	synth with cache (only 1: unfold add; only 1: now autorew).	0.0480468273163	2
Coq.MSets.MSetRBT.MakeRaw.add_ok	40	1.4.1	synth with cache (only 1: destruct s; only 1: ok; only 1: ok).	0.214930057526	25
Coq.MSets.MSetRBT.MakeRaw.lbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.append_rr_match	40	1	synth with cache (only 1: exact (rmatch _ _ _)).	0.0169160366058	2
Coq.MSets.MSetRBT.MakeRaw.append_bb_match	40	0	synth with cache (only 1: exact (rmatch _ _ _)).	0.0172429084778	1
Coq.MSets.MSetRBT.MakeRaw.append_spec	40
Coq.MSets.MSetRBT.MakeRaw.append_ok	40
Coq.MSets.MSetRBT.MakeRaw.del_spec	40
Coq.MSets.MSetRBT.MakeRaw.del_ok	40
Coq.MSets.MSetRBT.MakeRaw.remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_ok	40	1.1.1.0.0	synth with cache (only 1: induct s x; only 1: auto; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok).	0.190660953522	8
Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec1	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec2	40	4.1.1.2.0.0.5.14.12	synth with cache (only 1: red; only 1: red; only 1: destruct s as [| c l y r]; only 1: unfold remove_min; only 1: inversion 2; only 1: inversion 1; only 1: intros; only 1: destruct delmin as (x0, s0); only 1: discriminate).	33.5427520275	10433
Coq.MSets.MSetRBT.MakeRaw.remove_min_ok	40
Coq.MSets.MSetRBT.MakeRaw.treeify_zero_spec	40	0.0.0.15	synth with cache (only 1: repeat red; only 1: intro; only 1: simpl; only 1: firstorder  discriminate).	0.140675067902	149
Coq.MSets.MSetRBT.MakeRaw.treeify_one_spec	40	1.1.0.3.43	synth with cache (only 1: intro n; only 1: induction n as [| n IH]; only 1: easy; only 1: red; only 1: auto).	2.17220187187	2383
Coq.MSets.MSetRBT.MakeRaw.treeify_cont_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_elements	40
Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40
Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_spec	40
Coq.MSets.MSetRBT.MakeRaw.filter_ok	40
Coq.MSets.MSetRBT.MakeRaw.partition_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec1	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0	synth with cache (only 1: now rewrite partition_spec).	0.0183470249176	1
Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40
Coq.MSets.MSetRBT.MakeRaw.partition_ok2	40	0.0	synth with cache (only 1: rewrite partition_spec; only 1: now apply filter_ok).	0.0228409767151	2
Coq.MSets.MSetRBT.MakeRaw.INV_init	40
Coq.MSets.MSetRBT.MakeRaw.INV_sym	40	23.24	synth with cache (only 1: intros; only 1: firstorder).	2.50311517715	4655
Coq.MSets.MSetRBT.MakeRaw.INV_drop	40
Coq.MSets.MSetRBT.MakeRaw.INV_eq	40
Coq.MSets.MSetRBT.MakeRaw.INV_lt	40
Coq.MSets.MSetRBT.MakeRaw.INV_rev	40
Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_spec	40
Coq.MSets.MSetRBT.MakeRaw.union_spec'	40
Coq.MSets.MSetRBT.MakeRaw.union_spec	40	0.1.0.1.0.0.0.0.0.0.2	synth with cache (only 1: intros s1 s2 B1 B2; only 1: unfold union; only 1: destruct compare_height; only 1: unfold linear_union; only 1: rewrite treeify_spec, union_list_spec, !rev_elements_rev; only 1: rewrite !InA_rev, InA_nil, !elements_spec1 by auto_tc; only 1: tauto; only 1: rewrite fold_add_spec; only 1: tauto; only 1: rewrite fold_add_spec; only 1: tauto).	5.15146589279	1329
Coq.MSets.MSetRBT.MakeRaw.inter_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.mem_proper	40
Coq.MSets.MSetRBT.MakeRaw.inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_ok	40	9.0.0.0.0.0.0.0	synth with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: ok).	12.1016778946	5437
Coq.MSets.MSetRBT.MakeRaw.diff_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_diff_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_spec	40
Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40	0.1.0.1.2.1.0.7.0.5.24.0	synth with cache (only 1: intros; only 1: destruct H; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: ok; only 1: eauto; only 1: ok; only 1: ok; only 1: auto_tc; only 1: ok; only 1: ok; only 1: ok; only 1: ok).	9.16948699951	13792
Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40	8.1.0.1.7	synth with cache (only 1: inversion 1; only 1: invrb; only 1: auto; only 1: invrb; only 1: auto).	2.18745183945	1546
Coq.MSets.MSetRBT.BalanceProps.arb_nr_rb	40	1.41.0.0	synth with cache (only 1: destruct 1; only 1: auto; only 1: inversion H; only 1: invrb).	15.2733709812	15399
Coq.MSets.MSetRBT.BalanceProps.rb_maxdepth	40
Coq.MSets.MSetRBT.BalanceProps.rb_mindepth	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_upperbound	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).	0.044636964798	8
Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40	55.23.0	synth with cache (only 1: unfold singleton; only 1: red; only 1: eauto).	7.28603005409	23814
Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40
Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	0.2.1.1.0.1	synth with cache (only 1: intros H; only 1: destruct t; only 1: invrb; only 1: invrb; only 1: simpl; only 1: auto).	0.673311948776	221
Coq.MSets.MSetRBT.BalanceProps.lbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal_rb	40	1.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: case rbal_match; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: auto).	3.28321099281	591
Coq.MSets.MSetRBT.BalanceProps.rbal'_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40
Coq.MSets.MSetRBT.BalanceProps.ifred_or	40	0.0.14.1.4	synth with cache (only 1: induction s as [| c l IHl x r IHr]; only 1: firstorder; only 1: descolor; only 1: auto; only 1: auto).	1.88013601303	1996
Coq.MSets.MSetRBT.BalanceProps.ins_rr_rb	40
Coq.MSets.MSetRBT.BalanceProps.ins_arb	40
Coq.MSets.MSetRBT.BalanceProps.add_rb	40
Coq.MSets.MSetRBT.BalanceProps.append_arb_rb	40
Coq.MSets.MSetRBT.BalanceProps.del_arb	40	1.0	synth with cache (only 1: invrb; only 1: auto).	0.0221240520477	3
Coq.MSets.MSetRBT.BalanceProps.remove_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_zero_rb	40	1.1.13	synth with cache (only 1: constructor; only 1: auto; only 1: trivial).	0.0958728790283	133
Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_aux_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40
Coq.MSets.MSetRBT.BalanceProps.filter_rb	40	71	synth with cache (only 1: ok).	0.78357219696	3979
Coq.MSets.MSetRBT.BalanceProps.partition_rb1	40	0.0.7.0	synth with cache (only 1: rewrite partition_spec; only 1: simpl; only 1: unfold filter; only 1: auto_tc).	0.0954759120941	67
Coq.MSets.MSetRBT.BalanceProps.partition_rb2	40	0.1.1.0	synth with cache (only 1: rewrite partition_spec; only 1: unfold partition, filter; only 1: simpl; only 1: auto_tc).	0.0400321483612	12
Coq.MSets.MSetRBT.BalanceProps.fold_add_rb	40	0.0.0.2.2.0.1.0	synth with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: auto; only 1: intros; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	1.60317802429	722
Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.0491819381714	10
Coq.MSets.MSetRBT.BalanceProps.union_rb	40	1.1.2.5.0.0.0.14	synth with cache (only 1: intuition_in; only 1: unfold union; only 1: destruct compare_height; only 1: unfold linear_union; only 1: unfold elt in *; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	5.69069290161	5318
Coq.MSets.MSetRBT.BalanceProps.inter_rb	40	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.0388541221619	8
Coq.MSets.MSetRBT.BalanceProps.diff_rb	40	0.0.0.9.0.0.0	synth with cache (only 1: intros; only 1: unfold diff; only 1: destruct compare_height; only 1: unfold linear_diff; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	1.56327199936	1452
Coq.MSets.MSetRBT.Make.remove_min_spec1	40
Coq.MSets.MSetRBT.Make.remove_min_spec2	40
Coq.MSets.MSetPositive.PositiveSet.In_compat	40	3	synth with cache (only 1: solve_proper).	0.105349063873	31
Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40	1.0.0.48	synth with cache (only 1: split; only 1: firstorder; only 1: firstorder; only 1: firstorder).	0.503152132034	1462
Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	0.0.0.0	synth with cache (only 1: destr_bool; only 1: split; only 1: congruence; only 1: easy).	0.0330579280853	4
Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0	synth with cache (only 1: trivial).	0.0187249183655	1
Coq.MSets.MSetPositive.PositiveSet.empty_spec	40	8	synth with cache (only 1: firstorder).	0.0173342227936	9
Coq.MSets.MSetPositive.PositiveSet.mem_node	40
Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40
Coq.MSets.MSetPositive.PositiveSet.subset_Leaf_s	40	10	synth with cache (only 1: easy).	0.179350852966	88
Coq.MSets.MSetPositive.PositiveSet.subset_spec	40
Coq.MSets.MSetPositive.PositiveSet.equal_subset	40
Coq.MSets.MSetPositive.PositiveSet.equal_spec	40
Coq.MSets.MSetPositive.PositiveSet.eq_dec	40
Coq.MSets.MSetPositive.PositiveSet.lex_Opp	40	2.1.0.12.6.5.4	synth with cache (only 1: intros a b n Hn; only 1: intros Ha Hb; only 1: rewrite Ha; only 1: induction n; only 1: trivial; only 1: trivial; only 1: auto).	10.7345161438	9252
Coq.MSets.MSetPositive.PositiveSet.compare_bool_inv	40	1.1.1.0.0.0.3	synth with cache (only 1: intros n m; only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: now rewrite <- ?Pos.compare_antisym; only 1: now rewrite <- ?Pos.compare_antisym; only 1: now rewrite <- ?Pos.compare_antisym).	0.685009002686	219
Coq.MSets.MSetPositive.PositiveSet.compare_inv	40
Coq.MSets.MSetPositive.PositiveSet.lex_Eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy').	0.101084947586	5
Coq.MSets.MSetPositive.PositiveSet.compare_equal	40
Coq.MSets.MSetPositive.PositiveSet.compare_gt	40
Coq.MSets.MSetPositive.PositiveSet.compare_eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_spec	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_cxe	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xce	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0358951091766	4
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lxl	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_gxg	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0323209762573	4
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xll	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0348210334778	4
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xgg	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0321600437164	4
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lex	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.0.0.0.0.0.0.0.2	synth with cache (only 1: destr_bool; only 1: constructor; only 1: constructor; only 1: ct; only 1: constructor; only 1: constructor; only 1: ct; only 1: constructor; only 1: constructor).	1.33032298088	162
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_Leaf	40	0.0.0.3	synth with cache (only 1: induction s as [| l IHl o r IHr]; only 1: reflexivity; only 1: simpl; only 1: trivial).	0.0447940826416	7
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_empty_x	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_empty	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare	40
Coq.MSets.MSetPositive.PositiveSet.lt_strorder	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat	40
Coq.MSets.MSetPositive.PositiveSet.lt_compat	40
Coq.MSets.MSetPositive.PositiveSet.add_spec	40
Coq.MSets.MSetPositive.PositiveSet.remove_spec	40
Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40
Coq.MSets.MSetPositive.PositiveSet.union_spec	40
Coq.MSets.MSetPositive.PositiveSet.inter_spec	40
Coq.MSets.MSetPositive.PositiveSet.diff_spec	40
Coq.MSets.MSetPositive.PositiveSet.fold_spec	40
Coq.MSets.MSetPositive.PositiveSet.cardinal_spec	40
Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40
Coq.MSets.MSetPositive.PositiveSet.filter_spec	40
Coq.MSets.MSetPositive.PositiveSet.xforall_spec	40
Coq.MSets.MSetPositive.PositiveSet.for_all_spec	40
Coq.MSets.MSetPositive.PositiveSet.xexists_spec	40
Coq.MSets.MSetPositive.PositiveSet.exists_spec	40
Coq.MSets.MSetPositive.PositiveSet.partition_filter	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec1	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec2	40	0.0.5	synth with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).	0.462634086609	43
Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec1	40
Coq.MSets.MSetPositive.PositiveSet.lt_rev_append	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2w	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec1	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec2	40
Coq.MSets.MSetPositive.PositiveSet.choose_empty	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3'	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec2	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.In_1	40	2.13.7	synth with cache (only 1: intro; only 1: rewrite H; only 1: CRelationClasses.simpl_crelation).	0.871781110764	619
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto with relations).	0.0381329059601	3
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_3	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_3	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_2	40	0.0	synth with cache (only 1: rewrite singleton_spec; only 1: auto with relations).	0.0334689617157	2
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_3	40	1.0	synth with cache (only 1: rewrite union_spec; only 1: auto).	0.0312201976776	3
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_2	40	0.0	synth with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0305590629578	2
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_3	40	0.0	synth with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0382061004639	2
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_2	40	0.0	synth with cache (only 1: rewrite diff_spec; only 1: intuition).	0.0315160751343	2
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_3	40	0.1	synth with cache (only 1: rewrite diff_spec; only 1: intuition).	0.0394330024719	3
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_2	40	0.0.0.0	synth with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.0498912334442	4
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_3	40	0.0.0.27	synth with cache (only 1: intros a Ha; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	1.67732000351	2767
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_2	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.In_eq_iff	40	0.8.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: intuition).	0.144258022308	44
Coq.MSets.MSetFacts.WFactsOn.IffSpec.mem_iff	40	12	synth with cache (only 1: intuition).	0.186015129089	113
Coq.MSets.MSetFacts.WFactsOn.IffSpec.not_mem_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.equal_iff	40	6	synth with cache (only 1: intuition).	0.0434520244598	11
Coq.MSets.MSetFacts.WFactsOn.IffSpec.subset_iff	40	8	synth with cache (only 1: intuition).	0.0519511699677	12
Coq.MSets.MSetFacts.WFactsOn.IffSpec.empty_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.is_empty_iff	40	1	synth with cache (only 1: intuition).	0.039274930954	2
Coq.MSets.MSetFacts.WFactsOn.IffSpec.singleton_iff	40	1	synth with cache (only 1: intuition).	0.0265021324158	2
Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_neq_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_neq_iff	40	2.0.0.18	synth with cache (only 1: split; only 1: rewrite remove_spec; only 1: intuition; only 1: intuition).	4.16812205315	2294
Coq.MSets.MSetFacts.WFactsOn.IffSpec.for_all_iff	40	0.0	synth with cache (only 1: intros; only 1: intuition).	0.0476360321045	2
Coq.MSets.MSetFacts.WFactsOn.IffSpec.exists_iff	40	1.0	synth with cache (only 1: intros; only 1: intuition).	0.0486540794373	3
Coq.MSets.MSetFacts.WFactsOn.IffSpec.elements_iff	40	0.0.0.0.0.0.4	synth with cache (only 1: split; only 1: intros; only 1: apply <- elements_spec1; only 1: auto; only 1: intros; only 1: apply -> elements_spec1; only 1: auto).	0.268667936325	36
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.mem_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.empty_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_neq_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_neq_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.singleton_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.union_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.inter_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.diff_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.elements_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.filter_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.for_all_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.exists_b	40
Coq.MSets.MSetFacts.WFactsOn.In_m	40
Coq.MSets.MSetFacts.WFactsOn.Empty_m	40	12.2.6	synth with cache (only 1: repeat red; only 1: intros x IH Hx; only 1: firstorder).	1.0985159874	743
Coq.MSets.MSetFacts.WFactsOn.is_empty_m	40
Coq.MSets.MSetFacts.WFactsOn.mem_m	40
Coq.MSets.MSetFacts.WFactsOn.singleton_m	40
Coq.MSets.MSetFacts.WFactsOn.add_m	40
Coq.MSets.MSetFacts.WFactsOn.remove_m	40
Coq.MSets.MSetFacts.WFactsOn.union_m	40
Coq.MSets.MSetFacts.WFactsOn.inter_m	40
Coq.MSets.MSetFacts.WFactsOn.diff_m	40
Coq.MSets.MSetFacts.WFactsOn.Subset_m	40	0.0	synth with cache (only 1: unfold Equal; only 1: firstorder).	0.0312490463257	2
Coq.MSets.MSetFacts.WFactsOn.subset_m	40
Coq.MSets.MSetFacts.WFactsOn.equal_m	40
Coq.MSets.MSetFacts.WFactsOn.SubsetSetoid	40	0.0.0.64.0.0	synth with cache (only 1: split; only 1: congruence; only 1: intros EQ; only 1: intros; only 1: intro; only 1: intuition).	6.45581197739	12264
Coq.MSets.MSetFacts.WFactsOn.In_s_m	40	0.4.0.0.0.0.1	synth with cache (only 1: intros x y H s s' H0; only 1: rewrite (In_eq_iff s H); only 1: generalize (mem_iff s x); only 1: rewrite mem_iff; only 1: intuition; only 1: intros P; only 1: auto).	4.48590707779	214
Coq.MSets.MSetFacts.WFactsOn.Empty_s_m	40	22	synth with cache (only 1: firstorder).	0.943446159363	1241
Coq.MSets.MSetFacts.WFactsOn.add_s_m	40	1.0.0.0	synth with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !add_iff, Hx, Hs; only 1: rewrite mem_iff; only 1: intuition).	0.451841115952	61
Coq.MSets.MSetFacts.WFactsOn.remove_s_m	40	1.1.0	synth with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !remove_iff, Hx, Hs; only 1: intuition).	0.0791339874268	5
Coq.MSets.MSetFacts.WFactsOn.union_s_m	40
Coq.MSets.MSetFacts.WFactsOn.inter_s_m	40	21.4.0.8	synth with cache (only 1: repeat red; only 1: intros f g l H; only 1: intros x x' Hxx'; only 1: eauto with *).	14.9680149555	8777
Coq.MSets.MSetFacts.WFactsOn.diff_s_m	40	0.2.0	synth with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !diff_spec, Hs1, Hs2; only 1: intuition).	0.135221004486	5
Coq.MSets.MSetFacts.WFactsOn.filter_equal	40
Coq.MSets.MSetFacts.WFactsOn.filter_subset	40	0.0.0	synth with cache (only 1: intros f Hf s s' Hs a; only 1: rewrite !filter_spec, Hs by auto; only 1: intuition).	0.0605709552765	3
Coq.MSets.MSetFacts.WFactsOn.filter_ext	40
Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.212632894516	5
Coq.MSets.MSetProperties.WPropertiesOn.Add_Equal	40
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_refl	40	1.0	synth with cache (only 1: intros P; only 1: intuition).	0.0262310504913	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_sym	40	2.1	synth with cache (only 1: intros; only 1: intuition).	0.0305409431458	5
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_trans	40	12.8.1	synth with cache (only 1: intros; only 1: intros P; only 1: fsetdec).	2.14842605591	1575
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_refl	40	13	synth with cache (only 1: easy).	0.0371952056885	60
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_trans	40	0	synth with cache (only 1: fsetdec).	0.0513188838959	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_antisym	40	1.5.1	synth with cache (only 1: intros; only 1: repeat red; only 1: auto).	0.0360090732574	10
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_equal	40	1.0	synth with cache (only 1: intros; only 1: fsetdec).	0.0566728115082	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_empty	40	6	synth with cache (only 1: fsetdec).	0.0894601345062	11
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_remove_3	40	0	synth with cache (only 1: fsetdec).	0.0559070110321	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_diff	40	5.11	synth with cache (only 1: intros a b; only 1: fsetdec).	8.66588306427	1537
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_3	40	0.1	synth with cache (only 1: intros H1; only 1: fsetdec).	0.0819411277771	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_2	40	0	synth with cache (only 1: fsetdec).	0.221306085587	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.in_subset	40	0	synth with cache (only 1: fsetdec).	0.0433759689331	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.double_inclusion	40	0.0.0.8	synth with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.369463920593	37
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_1	40	0	synth with cache (only 1: fsetdec).	0.0601260662079	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_2	40	0	synth with cache (only 1: fsetdec).	0.0546128749847	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_equal	40	2.0	synth with cache (only 1: intros; only 1: fsetdec).	0.106343984604	16
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_add	40	0	synth with cache (only 1: fsetdec).	0.166083097458	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_equal	40	1	synth with cache (only 1: fsetdec).	0.106924057007	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Equal_remove	40	0	synth with cache (only 1: fsetdec).	0.132640838623	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_remove	40	0	synth with cache (only 1: fsetdec).	0.276983976364	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_add	40	0	synth with cache (only 1: fsetdec).	0.143800973892	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.singleton_equal_add	40	0	synth with cache (only 1: fsetdec).	0.106506109238	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_singleton_empty	40	0	synth with cache (only 1: fsetdec).	0.287084102631	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_sym	40	0	synth with cache (only 1: fsetdec).	0.100891828537	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_equal	40	1	synth with cache (only 1: intuition fsetdec).	0.0772960186005	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_1	40	0	synth with cache (only 1: fsetdec).	0.111204862595	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_2	40	0	synth with cache (only 1: fsetdec).	0.110733032227	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_assoc	40	0	synth with cache (only 1: fsetdec).	0.177907943726	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_union_singleton	40	0	synth with cache (only 1: fsetdec).	0.10021686554	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_add	40	0	synth with cache (only 1: fsetdec).	0.186061859131	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_1	40	0	synth with cache (only 1: fsetdec).	0.314952135086	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_2	40	0	synth with cache (only 1: fsetdec).	0.286728143692	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_1	40	0	synth with cache (only 1: fsetdec).	0.041485786438	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_2	40	0	synth with cache (only 1: fsetdec).	0.0406830310822	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_3	40	0	synth with cache (only 1: fsetdec).	0.0678567886353	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_4	40	0	synth with cache (only 1: fsetdec).	0.0629360675812	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_5	40	0	synth with cache (only 1: fsetdec).	0.0644769668579	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_1	40	0	synth with cache (only 1: fsetdec).	0.0759890079498	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_2	40	0	synth with cache (only 1: fsetdec).	0.0774230957031	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.not_in_union	40	0.4	synth with cache (only 1: intuition; only 1: fsetdec).	0.17929315567	6
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_sym	40	0	synth with cache (only 1: fsetdec).	0.0888819694519	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0823419094086	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: fsetdec).	0.103224039078	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: fsetdec).	0.104484081268	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_assoc	40	0	synth with cache (only 1: fsetdec).	0.142815828323	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_1	40	0	synth with cache (only 1: fsetdec).	0.197523832321	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_2	40	0	synth with cache (only 1: fsetdec).	0.208767175674	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_1	40	0	synth with cache (only 1: fsetdec).	0.17982006073	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_2	40	0	synth with cache (only 1: fsetdec).	0.14492893219	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_1	40	0	synth with cache (only 1: fsetdec).	0.0579659938812	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_2	40	0	synth with cache (only 1: fsetdec).	0.0527667999268	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_1	40	0	synth with cache (only 1: fsetdec).	0.0401501655579	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_2	40	0	synth with cache (only 1: fsetdec).	0.0403699874878	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_3	40	0	synth with cache (only 1: fsetdec).	0.0571949481964	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_1	40	0	synth with cache (only 1: fsetdec).	0.0691599845886	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_2	40	0	synth with cache (only 1: fsetdec).	0.0801749229431	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset	40	0	synth with cache (only 1: fsetdec).	0.0448141098022	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.117568969727	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_diff_singleton	40	0	synth with cache (only 1: fsetdec).	0.107256889343	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_empty	40	0	synth with cache (only 1: fsetdec).	0.179220914841	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_all	40	0	synth with cache (only 1: fsetdec).	0.152124881744	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_add	40	0.0.0.3.1	synth with cache (only 1: generalize (F.mem_iff s x); only 1: red; only 1: intros; only 1: rewrite add_spec; only 1: intuition).	0.139559984207	19
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_remove	40	0.0.1	synth with cache (only 1: intros; only 1: expAdd; only 1: fsetdec).	0.171539068222	4
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Add	40	1.1	synth with cache (only 1: expAdd; only 1: fsetdec).	0.23734998703	4
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add	40	0.1	synth with cache (only 1: expAdd; only 1: fsetdec).	0.393005132675	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Equal	40	0.1.4.11	synth with cache (only 1: generalize (F.mem_iff (inter s s') x), (F.mem_iff s x), (F.mem_iff s' x), (inter_spec s s' x); only 1: expAdd; only 1: intuition; only 1: fsetdec).	7.89893388748	715
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add_2	40	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.284405946732	2
Coq.MSets.MSetProperties.WPropertiesOn.elements_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.elements_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_spec_right	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_nodep	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_weak	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rel	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_identity	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_0	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_2	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1b	40	4.5.15.0.1.8	synth with cache (only 1: intros a b c Hb H; only 1: apply fold_rec; only 1: split; only 1: intro; only 1: intros i j Hi E; only 1: fsetdec).	17.8601610661	23721
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_commutes	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_init	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_equal	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_add	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.add_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_1	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set relations).	0.0380020141602	3
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_diff_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_plus	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_0	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2b	40	0.0.12.0.0.0.1	synth with cache (only 1: intros; only 1: rewrite cardinal_spec in H; only 1: generalize (elements_2 (s:=s)); only 1: destruct (elements s); only 1: now elim H; only 1: exists e; only 1: auto with relations).	2.59046697617	2016
Coq.MSets.MSetProperties.WPropertiesOn.Equal_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40
Coq.MSets.MSetProperties.WPropertiesOn.empty_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.singleton_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_1	40	0.0	synth with cache (only 1: intros a b H; only 1: auto with set).	0.0246319770813	2
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_2	40	0.0.0.4	synth with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: auto with set; only 1: auto with set).	0.0940539836884	26
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_1	40
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_2	40	1.0	synth with cache (only 1: intros; only 1: auto with set).	0.0423440933228	11
Coq.MSets.MSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.MSets.MSetProperties.OrdProperties.gtb_1	40
Coq.MSets.MSetProperties.OrdProperties.leb_1	40
Coq.MSets.MSetProperties.OrdProperties.gtb_compat	40
Coq.MSets.MSetProperties.OrdProperties.leb_compat	40
Coq.MSets.MSetProperties.OrdProperties.elements_split	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_max	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_min	40
Coq.MSets.MSetProperties.OrdProperties.fold_3	40
Coq.MSets.MSetProperties.OrdProperties.fold_4	40
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.fold_equal	40
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.add_fold	40	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0353519916534	3
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0382738113403	3
Coq.MSets.MSetProperties.OrdProperties.choose_equal	40
Coq.MSets.MSetAVL.MakeRaw.singleton_spec	40
Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	11	synth with cache (only 1: intuition_in).	0.110417842865	47
Coq.MSets.MSetAVL.MakeRaw.create_spec	40
Coq.MSets.MSetAVL.MakeRaw.create_ok	40	2.2.1.1.9	synth with cache (only 1: constructor; only 1: intuition; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.650580883026	275
Coq.MSets.MSetAVL.MakeRaw.bal_spec	40
Coq.MSets.MSetAVL.MakeRaw.bal_ok	40
Coq.MSets.MSetAVL.MakeRaw.add_spec'	40
Coq.MSets.MSetAVL.MakeRaw.add_spec	40	0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: induct ltac:(s) ltac:(x); only 1: intuition_in; only 1: intuition_in; only 1: eauto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: intuition_in; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: eauto).	1.56242203712	119
Coq.MSets.MSetAVL.MakeRaw.add_ok	40
Coq.MSets.MSetAVL.MakeRaw.join_spec	40
Coq.MSets.MSetAVL.MakeRaw.join_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_gt_tree	40
Coq.MSets.MSetAVL.MakeRaw.merge_spec	40
Coq.MSets.MSetAVL.MakeRaw.merge_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_ok	40
Coq.MSets.MSetAVL.MakeRaw.concat_spec	40
Coq.MSets.MSetAVL.MakeRaw.concat_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_spec1	40
Coq.MSets.MSetAVL.MakeRaw.split_spec2	40
Coq.MSets.MSetAVL.MakeRaw.split_spec3	40
Coq.MSets.MSetAVL.MakeRaw.split_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_ok1	40
Coq.MSets.MSetAVL.MakeRaw.split_ok2	40	0.0.1	synth with cache (only 1: destruct (@split_ok s x); only 1: auto; only 1: auto).	0.0268058776855	4
Coq.MSets.MSetAVL.MakeRaw.inter_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.inter_spec	40
Coq.MSets.MSetAVL.MakeRaw.inter_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec	40
Coq.MSets.MSetAVL.MakeRaw.diff_ok	40
Coq.MSets.MSetAVL.MakeRaw.union_spec	40
Coq.MSets.MSetAVL.MakeRaw.union_ok	40
Coq.MSets.MSetAVL.MakeRaw.filter_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_weak_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_ok	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec1'	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2'	40	0.0.0.0.0.0	synth with cache (only 1: induction s as [| h l Hl x r Hr]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Hl, <- Hr; only 1: now destruct (partition f l), (partition f r), (f x)).	0.0609819889069	6
Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_eq	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	0.101042032242	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.empty_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_equal_empty	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_1	40	7.4	synth with cache (only 1: generalize (mem_iff (diff s s') x), (mem_iff s x), (mem_iff s' x), (diff_spec s s' x); only 1: intuition).	6.16223311424	847
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_2	40	0	synth with cache (only 1: auto with set).	0.0321450233459	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_1	40	3.3.0.0	synth with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	2.32117795944	134
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_2	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.1125831604	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_1	40	1.0.1	synth with cache (only 1: rewrite <- not_mem_iff; only 1: rewrite remove_spec; only 1: intuition).	0.0358221530914	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_2	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	0.118066072464	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_equal_add	40	1.1.0.0.1.0	synth with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	0.532366991043	26
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_3	40	0.2	synth with cache (only 1: rewrite <- not_mem_iff; only 1: intuition).	0.0345549583435	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_4	40	0.2	synth with cache (only 1: rewrite <- not_mem_iff; only 1: intuition).	0.329797029495	52
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_refl	40	1.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: intuition).	0.0430419445038	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_sym	40	3.1.0.2.1.0.0.14	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	12.9656660557	1314
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_trans	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_equal	40	0.1.7	synth with cache (only 1: intros H; only 1: rewrite (equal_2 H); only 1: auto).	0.0661528110504	23
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_cardinal	40	1.0	synth with cache (only 1: intros; only 1: auto with set).	0.027095079422	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_refl	40	1.0	synth with cache (only 1: apply subset_1; only 1: auto with set).	0.0177500247955	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_antisym	40	8.0	synth with cache (only 1: intros; only 1: intuition).	0.0683271884918	16
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_trans	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_equal	40	2	synth with cache (only 1: auto with set).	0.0207991600037	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_3	40	1.0	synth with cache (only 1: intro; only 1: auto with set relations).	0.0280249118805	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_equal	40	0	synth with cache (only 1: auto with set).	0.020131111145	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_equal	40	0.3	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.213095903397	14
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_remove	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_add	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_cardinal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_1	40	1.1.0.0.0.0	synth with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	0.748898983002	46
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_3	40	0.0.1.0	synth with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	0.045254945755	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_sym	40	0	synth with cache (only 1: auto with set).	0.0167369842529	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0316700935364	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_1	40	0	synth with cache (only 1: auto with set).	0.0215439796448	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_2	40	0	synth with cache (only 1: auto with set).	0.0210690498352	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_assoc	40	0	synth with cache (only 1: auto with set).	0.0189280509949	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_union_singleton	40	0	synth with cache (only 1: auto with set relations).	0.0176920890808	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_add	40	0	synth with cache (only 1: auto with set).	0.016371011734	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_1	40	1	synth with cache (only 1: auto with set).	0.0183200836182	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_2	40	0	synth with cache (only 1: auto with set).	0.0162289142609	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_3	40	0.0	synth with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.090539932251	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_sym	40	0	synth with cache (only 1: auto with set).	0.0166389942169	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0220768451691	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: auto with set).	0.0201759338379	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: auto with set).	0.0201120376587	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_assoc	40	0	synth with cache (only 1: auto with set).	0.0172300338745	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_1	40	0	synth with cache (only 1: auto with set).	0.016037940979	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_2	40	0	synth with cache (only 1: auto with set).	0.0168659687042	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_1	40	0	synth with cache (only 1: auto with set).	0.0190050601959	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_1	40	0	synth with cache (only 1: auto with set).	0.0168340206146	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_2	40	0	synth with cache (only 1: auto with set).	0.0164439678192	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_3	40	1.0.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).	0.117923974991	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset	40	0	synth with cache (only 1: auto with set).	0.016585111618	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0856158733368	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_inter_singleton	40	1	synth with cache (only 1: auto with set).	0.0164887905121	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_empty	40	0	synth with cache (only 1: auto with set).	0.0161330699921	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_all	40	0	synth with cache (only 1: auto with set).	0.0160961151123	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.set_rec	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exclusive_set	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_empty	40	0.0	synth with cache (only 1: apply fold_1b; only 1: auto with set).	0.0299730300903	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_equal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_add	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.add_fold	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_1	40	2.3.0.0.0.2.1	synth with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set relations; only 1: auto with set relations).	5.41306900978	1666
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	0	synth with cache (only 1: auto with set).	0.017872095108	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).	0.0605869293213	8
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_1	40	0.0.0.2.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).	0.0578498840332	10
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_cardinal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_cardinal	40	4.0	synth with cache (only 1: intros; only 1: auto with set).	0.0598258972168	14
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.Comp'	40	10	synth with cache (only 1: solve_proper).	0.183477163315	25
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.exists_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_1	40	8.6.2.9.5	synth with cache (only 1: intros; only 1: generalize (choose_spec1 (s:=filter f s)), (choose_spec2 (s:=filter f s)); only 1: unfold Empty; only 1: generalize (choose_spec1 (s:=filter f s)), (choose_spec2 (s:=filter f s)); only 1: intuition).	15.7319741249	10268
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_2	40	0	synth with cache (only 1: auto with set).	0.0253319740295	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_2	40	0.0.0.0.0.0.0.0.0.0.0.0.4	synth with cache (only 1: red; only 1: unfold Add, MP.Add; only 1: intros; only 1: repeat rewrite filter_spec; only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate; only 1: auto; only 1: auto).	6.61686587334	1555
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.union_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_1	40	9.0.0.0.0.1	synth with cache (only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intros; only 1: intuition).	2.41375803947	1054
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_2	40	0.0.9.7.1.0	synth with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: generalize (H x); only 1: intros; only 1: auto with set; only 1: auto).	5.03432798386	2064
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_exists	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.Comp'	40	0.0.0.0	synth with cache (only 1: repeat red; only 1: intros; only 1: f_equal; only 1: auto).	0.0412101745605	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_plus	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.fold_compat	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_compat	40
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_push	40	1.0.0	synth with cache (only 1: unfold decidable; only 1: intros A R1 Sym1 B R2 Sym2 C R3 f Hf; only 1: auto).	0.0395739078522	4
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_pull	40	1	synth with cache (only 1: tauto).	0.933393955231	2
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.eq_refl_iff	40	2	synth with cache (only 1: intuition).	0.0199489593506	3
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_In	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_eq	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_1	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_2	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_1	40	6.4	synth with cache (only 1: intros q1 q2 r1 r2 Hr1 Hr2 EQ; only 1: fsetdec).	0.389106988907	181
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_2	40	0.22	synth with cache (only 1: intros n m; only 1: fsetdec).	6.93393802643	3672
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_In_singleton	40	0	synth with cache (only 1: fsetdec).	0.0310771465302	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_Subset_add_remove	40	4.2.10	synth with cache (only 1: intros x H2; only 1: red; only 1: fsetdec).	2.25768589973	1080
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_disjunction	40	1.5.27	synth with cache (only 1: intros a b; only 1: intros n m; only 1: fsetdec).	6.76525092125	8926
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_disj	40	3.5.11.6	synth with cache (only 1: intro H; only 1: intros; only 1: red; only 1: fsetdec).	20.1807508469	3858
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0	synth with cache (only 1: fsetdec).	0.296715974808	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	0	synth with cache (only 1: fsetdec).	0.0748889446259	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	4.20	synth with cache (only 1: intros n A f x; only 1: fsetdec).	3.19482398033	2645
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.eq_chain_test	40	0.1	synth with cache (only 1: intros f Hf s s' Hs a; only 1: fsetdec).	0.282356977463	3
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_too_complex	40	0.1.17	synth with cache (only 1: intros a b c Hc Ha Hb; only 1: rewrite singleton_spec; only 1: intuition).	4.16160106659	2523
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_1	40	0	synth with cache (only 1: fsetdec).	0.0851600170135	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	0	synth with cache (only 1: fsetdec).	0.161489963531	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_baydemir	40	0	synth with cache (only 1: fsetdec).	0.0664591789246	1
Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40
Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40
Coq.MSets.MSetGenTree.Props.isok_iff	40
Coq.MSets.MSetGenTree.Props.isok_Ok	40
Coq.MSets.MSetGenTree.Props.In_1	40
Coq.MSets.MSetGenTree.Props.In_compat	40
Coq.MSets.MSetGenTree.Props.In_node_iff	40	0.3.1	synth with cache (only 1: intros x y z; only 1: destr_bool; only 1: intuition_in).	0.0925278663635	12
Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	0.3	synth with cache (only 1: intros; only 1: intuition_in).	0.0594871044159	25
Coq.MSets.MSetGenTree.Props.lt_leaf	40	7.17	synth with cache (only 1: intros n; only 1: now rewrite <- ?Nat.add_le_mono_r).	0.912568092346	1150
Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.0	synth with cache (only 1: red; only 1: inversion 1).	0.0198481082916	2
Coq.MSets.MSetGenTree.Props.lt_tree_node	40	0.0.0	synth with cache (only 1: unfold lt_tree; only 1: intuition_in; only 1: order).	0.0507910251617	3
Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.0.1	synth with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: order).	0.127227067947	4
Coq.MSets.MSetGenTree.Props.lt_tree_not_in	40	0.8.1	synth with cache (only 1: intuition_in; only 1: eapply Nat.Private_OrderTac.Tac.lt_irrefl; only 1: eauto).	0.264461040497	132
Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	11	synth with cache (only 1: eauto using Nat.Private_Tac.eq_trans, Nat.Private_Tac.eq_sym).	0.736335039139	245
Coq.MSets.MSetGenTree.Props.gt_tree_not_in	40	0.0.0	synth with cache (only 1: intros; only 1: intro; only 1: order).	0.0233030319214	3
Coq.MSets.MSetGenTree.Props.gt_tree_trans	40	0	synth with cache (only 1: eauto).	0.0162508487701	1
Coq.MSets.MSetGenTree.Props.lt_tree_compat	40	0.0.1.1.0.1.1.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros x y; only 1: intro H; only 1: intros; only 1: rewrite <- H; only 1: subst; only 1: auto).	4.09626913071	1352
Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	0.0.0.2.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros x x' Hx s s' Hs H y Hy; only 1: subst; only 1: setoid_rewrite  <- Hx; only 1: auto).	0.0858340263367	23
Coq.MSets.MSetGenTree.Props.empty_spec	40	20	synth with cache (only 1: now f_equal).	0.107388973236	231
Coq.MSets.MSetGenTree.Props.empty_ok	40	1.52	synth with cache (only 1: hnf; only 1: trivial).	0.284898042679	1496
Coq.MSets.MSetGenTree.Props.is_empty_spec	40
Coq.MSets.MSetGenTree.Props.mem_spec	40
Coq.MSets.MSetGenTree.Props.min_elt_spec1	40
Coq.MSets.MSetGenTree.Props.min_elt_spec2	40
Coq.MSets.MSetGenTree.Props.min_elt_spec3	40
Coq.MSets.MSetGenTree.Props.max_elt_spec1	40
Coq.MSets.MSetGenTree.Props.max_elt_spec2	40
Coq.MSets.MSetGenTree.Props.max_elt_spec3	40	0.0.0.0.0.0.0.1	synth with cache (only 1: functional induction (max_elt s); only 1: red; only 1: red; only 1: inversion 2; only 1: inversion 1; only 1: intro H0; only 1: destruct (IHo H0 _x3); only 1: auto).	0.167111873627	58
Coq.MSets.MSetGenTree.Props.choose_spec1	40	0.0.0.4.14.2.7.0.13	synth with cache (only 1: induction s as [| c l IHl y r IHr]; only 1: intros Ha Eq; only 1: easy; only 1: simpl; only 1: induction l as [| a l IH]; only 1: intro H; only 1: inversion 1; only 1: auto; only 1: now auto).	14.1223239899	14716
Coq.MSets.MSetGenTree.Props.choose_spec2	40
Coq.MSets.MSetGenTree.Props.choose_spec3	40
Coq.MSets.MSetGenTree.Props.elements_spec1'	40
Coq.MSets.MSetGenTree.Props.elements_spec1	40
Coq.MSets.MSetGenTree.Props.elements_spec2'	40
Coq.MSets.MSetGenTree.Props.elements_spec2	40
Coq.MSets.MSetGenTree.Props.elements_spec2w	40
Coq.MSets.MSetGenTree.Props.elements_aux_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_app	40
Coq.MSets.MSetGenTree.Props.elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_app	40
Coq.MSets.MSetGenTree.Props.rev_elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_rev	40
Coq.MSets.MSetGenTree.Props.sorted_app_inv	40
Coq.MSets.MSetGenTree.Props.elements_sort_ok	40
Coq.MSets.MSetGenTree.Props.for_all_spec	40
Coq.MSets.MSetGenTree.Props.exists_spec	40
Coq.MSets.MSetGenTree.Props.fold_spec'	40
Coq.MSets.MSetGenTree.Props.fold_spec	40
Coq.MSets.MSetGenTree.Props.subsetl_spec	40
Coq.MSets.MSetGenTree.Props.subsetr_spec	40
Coq.MSets.MSetGenTree.Props.subset_spec	40
Coq.MSets.MSetGenTree.Props.eq_equiv	40	0	synth with cache (only 1: firstorder).	0.120968103409	1
Coq.MSets.MSetGenTree.Props.eq_Leq	40
Coq.MSets.MSetGenTree.Props.lt_strorder	40
Coq.MSets.MSetGenTree.Props.lt_compat	40
Coq.MSets.MSetGenTree.Props.flatten_e_elements	40	0.0.0.10.3	synth with cache (only 1: intros; only 1: rewrite elements_node; only 1: unfold elements; only 1: simpl; only 1: now rewrite !app_assoc_reverse).	4.55877494812	2468
Coq.MSets.MSetGenTree.Props.cons_1	40
Coq.MSets.MSetGenTree.Props.compare_end_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_more_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_cont_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_spec	40
Coq.MSets.MSetGenTree.Props.equal_spec	40
Coq.MSets.MSetGenTree.Props.mindepth_maxdepth	40
Coq.MSets.MSetGenTree.Props.maxdepth_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_cardinal	40
Coq.MSets.MSetGenTree.Props.maxdepth_log_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_log_cardinal	40
Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	40	81	synth with cache (only 1: firstorder).	1.67132616043	3478
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.mem_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.equal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.subset_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.is_empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.add_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.remove_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.singleton_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.union_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.inter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.diff_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.fold_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.cardinal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.filter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.for_all_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.exists_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec2	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec2w	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.compare_spec	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.elements_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.choose_spec3	40
Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	40	7.3	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: now rewrite Ha).	5.58869600296	345
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	40	14.12.4.0.1.3	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: firstorder; only 1: firstorder; only 1: reduce; only 1: setoid_rewrite  <- H; only 1: firstorder).	39.896023035	26015
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	40	3.7.21	synth with cache (only 1: unfold lt; only 1: intros A P; only 1: firstorder  (subst; auto)).	2.51572799683	4250
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40
Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	40	0.9.0.3.1.3	synth with cache (only 1: intros x y z; only 1: intuition auto; MO.OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: intro H; only 1: rewrite 2!InA_cons; only 1: rewrite <- H0; only 1: intuition).	5.3112039566	3025
Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.In_In	40	7.1	synth with cache (only 1: intros n m; only 1: intuition PeanoNat.Nat.order).	0.0334930419922	11
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	6.0	synth with cache (only 1: intros; only 1: Dec.fsetdec).	0.0761241912842	15
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	15	synth with cache (only 1: firstorder).	9.64104199409	2549
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	11.12.0.7.3.37	synth with cache (only 1: <Coq.Strings.String.t_eqb>; only 1: red; only 1: apply -> Forall_forall; only 1: auto; only 1: apply (empty_spec H); only 1: now BinInt.Z.nzsimpl).	6.6636121273	5910
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	4.0.0.1.0.0.1.0.0.0	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: rewrite elements_Empty in H; only 1: intros; only 1: rewrite elements_iff in H0; only 1: rewrite H in H0; only 1: inversion H0; only 1: intro; only 1: intuition).	2.58851385117	1824
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	1.1.6.14.0.17	synth with cache (only 1: intros a; only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: Dec.fsetdec; only 1: intros; only 1: intuition).	10.5547809601	7970
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	14.3.1.0.1.4.0.0.0.0	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: intuition; only 1: constructor 1; only 1: auto; only 1: auto with sets; only 1: inversion 1; only 1: firstorder).	26.2305431366	16884
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Ens_to_MSet	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.In_compat	40	0	synth with cache (only 1: solve_proper).	0.0511140823364	1
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.mem_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_iff	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_Ok	40	0.0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: induction l; only 1: intuition; only 1: simpl; only 1: rewrite andb_true_iff; only 1: rewrite negb_true_iff; only 1: intros H; only 1: destruct H; only 1: constructors; only 1: rewrite <- mem_spec; only 1: congruence; only 1: auto; only 1: auto).	2.38417601585	748
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_ok	40	0.3.0	synth with cache (only 1: intros H; only 1: apply <- isok_iff; only 1: auto).	0.0300509929657	6
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_spec	40	0.0.2.0.7	synth with cache (only 1: unfold singleton; only 1: intros; only 1: intuition; only 1: inv; only 1: auto).	1.50813913345	692
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_ok	40	1.0	synth with cache (only 1: apply <- isok_iff; only 1: intuition).	0.0239510536194	3
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_spec	40	0.1.6.0	synth with cache (only 1: unfold empty; only 1: intro; only 1: intro; only 1: inv).	0.0669229030609	32
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.is_empty_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec1	40	0.2	synth with cache (only 1: repeat red; only 1: auto).	0.0214672088623	4
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec2w	40	3.1.0.0	synth with cache (only 1: intros; only 1: induction s; only 1: intuition; only 1: auto).	0.0496389865875	12
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.fold_spec	40	2	synth with cache (only 1: constructors).	0.0146780014038	3
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.subset_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.equal_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec2	40	0.0.0.1.2.4.1	synth with cache (only 1: destruct s; only 1: unfold Empty, empty; only 1: intuition; only 1: inv; only 1: simpl; only 1: intros; only 1: inversion H).	4.58146214485	1977
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.cardinal_spec	40	1.0	synth with cache (only 1: unfold elements; only 1: auto).	0.0245430469513	3
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec'	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.for_all_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.exists_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec2	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1'	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2'	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction s; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: inv; only 1: generalize (IHs H1 f x); only 1: destruct (f a); only 1: destruct (partition f s); only 1: simpl in *; only 1: auto; only 1: destruct (partition f s); only 1: simpl in *; only 1: inversion_clear H; only 1: auto; only 1: auto).	32.7274389267	4825
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inf_iff	40
Coq.MSets.MSetList.MakeRaw.ForNotations.isok_iff	40
Coq.MSets.MSetList.MakeRaw.ForNotations.isok_Ok	40	17	synth with cache (only 1: easy).	0.0455260276794	126
Coq.MSets.MSetList.MakeRaw.ForNotations.mem_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.add_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.add_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.add_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_inf	40	1.1.5.0.0.1.0.1.1.0	synth with cache (only 1: induction s; only 1: inversion 1; only 1: firstorder using StronglySorted_inv; only 1: simpl; only 1: intuition; only 1: inv; only 1: elim_compare x a; only 1: eauto; only 1: intuition; only 1: intuition).	34.4125180244	13457
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_ok	40	0.0.0.0.1.1.0.0.0.0.0	synth with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s x; only 1: simple induction s; only 1: intuition; only 1: simpl; only 1: intros; only 1: inv; only 1: elim_compare x a; only 1: auto; only 1: auto; only 1: auto).	9.23018193245	1039
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_ok	40	5	synth with cache (only 1: CRelationClasses.simpl_crelation).	0.0138599872589	6
Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_spec	40	0.2.1.3.0.2.22.7	synth with cache (only 1: split; only 1: inversion 1; only 1: subst; only 1: auto; only 1: inv; only 1: intro H; only 1: unfold singleton; only 1: auto).	18.3670291901	20172
Coq.MSets.MSetList.MakeRaw.ForNotations.union_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.union_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.union_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_inf	40	1.0.1.6.0	synth with cache (only 1: induction2; only 1: eauto; only 1: apply Inf_lt with x'; only 1: auto; only 1: auto).	2.42298197746	361
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_ok	40	0.0.0	synth with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).	0.160308122635	3
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.equal_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.subset_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.empty_ok	40	0	synth with cache (only 1: auto).	0.0150740146637	1
Coq.MSets.MSetList.MakeRaw.ForNotations.empty_spec	40	20	synth with cache (only 1: now f_equal).	0.393000125885	186
Coq.MSets.MSetList.MakeRaw.ForNotations.is_empty_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec1	40	5.0.1	synth with cache (only 1: split; only 1: intuition; only 1: intuition).	0.0249300003052	9
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2	40	1.0.6	synth with cache (only 1: firstorder; only 1: inv; only 1: auto).	0.0420160293579	15
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2w	40	2.0.0	synth with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).	0.0306620597839	5
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec1	40	0.4.2.0.0.9	synth with cache (only 1: intros [| x l] H; only 1: intuition; only 1: discriminate; only 1: rewrite InA_cons; only 1: inversion 1; only 1: auto).	3.26691389084	1393
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec3	40	14.1.5	synth with cache (only 1: intros [| a l] H; only 1: easy; only 1: now simpl).	1.27178287506	1457
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec3	40
Coq.MSets.MSetList.MakeRaw.ForNotations.choose_spec3	40
Coq.MSets.MSetList.MakeRaw.ForNotations.fold_spec	40	1.1.2.1	synth with cache (only 1: intro s; only 1: intro x; only 1: intros; only 1: auto).	0.0300447940826	9
Coq.MSets.MSetList.MakeRaw.ForNotations.cardinal_spec	40	1.0	synth with cache (only 1: intros n H; only 1: auto).	0.0205237865448	3
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.for_all_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.exists_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec2	40
Coq.MSets.MSetList.MakeRaw.In_compat	40	5.0.0.1	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: congruence; only 1: solve_proper).	0.0963180065155	15
Coq.MSets.MSetList.MakeRaw.lt_strorder	40
Coq.MSets.MSetList.MakeRaw.lt_compat	40
Coq.MSets.MSetList.MakeRaw.compare_spec_aux	40
Coq.MSets.MSetList.MakeRaw.compare_spec	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40
Coq.Floats.FloatAxioms.Prim2SF_inj	40
Coq.Floats.FloatAxioms.SF2Prim_inj	40
Coq.Floats.FloatLemmas.shift_value	40	0	synth with cache (only 1: now Z.nzsimpl).	0.109349012375	1
Coq.Floats.FloatLemmas.frexp_spec	40
Coq.Floats.FloatLemmas.ldexp_spec	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_is_preorder	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_idempotent	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_clos_rst	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_r_clos_rt	40	0.0.0.0	synth with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.0247609615326	4
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_t	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_is_equiv	40	4.0.0.1.11.1.1.1.8	synth with cache (only 1: constructor; only 1: red; only 1: auto with sets; only 1: red; only 1: intros; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	22.8313109875	25635
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_idempotent	40	0.0.3.0.0.0.0.0	synth with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets).	0.655832052231	285
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_t1n_trans	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_tn1_trans	40	0.2.2.0.0.0.0	synth with cache (only 1: induction 1; only 1: left; only 1: auto; only 1: right with y; only 1: auto; only 1: left; only 1: auto).	0.707587957382	314
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_step	40	1.0.5.17	synth with cache (only 1: intros; only 1: right with y; only 1: auto; only 1: left).	0.337655067444	605
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_step	40	1.0.8.17.12	synth with cache (only 1: intro y0; only 1: intros; only 1: right with y0; only 1: auto; only 1: left).	0.829282999039	2137
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_rt	40	0.0.5.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto).	0.0335121154785	10
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_rt	40	0.2.2.0.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: auto; only 1: constructor 1; only 1: assumption).	0.187066793442	58
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_left	40
Coq.Relations.Operators_Properties.Properties.Equivalences.rt1n_ind_right	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_right	40	0.0.1.0.0.1.0.1.1.0.0.0.0.2.1	synth with cache (only 1: induction 3; only 1: apply H0 with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply IHclos_refl_trans1; only 1: auto with sets; only 1: intros; only 1: apply H0 with y0; only 1: auto with sets; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	11.6998670101	10550
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_rst	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_trans	40	0.4.0.0.11	synth with cache (only 1: induction 1; only 1: auto; only 1: right with y; only 1: auto; only 1: auto).	1.15689396858	1649
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_sym	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_rst	40	0.0.1.0.0.2.2.0.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 4 with y; only 1: auto; only 1: case H; only 1: constructor 1; only 1: auto; only 1: constructor 3; only 1: constructor 1; only 1: auto).	10.0567240715	5795
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_trans	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_sym	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1_iff	40
Coq.Relations.Operators_Properties.Properties.clos_trans_transp_permute	40
Coq.Relations.Relations.inverse_image_of_equivalence	40
Coq.Relations.Relations.inverse_image_of_eq	40	0.2.0.0.5.1.0.1	synth with cache (only 1: intros; only 1: split; only 1: split; only 1: destruct 1; only 1: destruct 1; only 1: trivial; only 1: red; only 1: auto).	0.845795154572	1011
Coq.Sets.Uniset.defs.leb_refl	40	0	synth with cache (only 1: destr_bool).	0.0107450485229	1
Coq.Sets.Uniset.defs.incl_left	40
Coq.Sets.Uniset.defs.incl_right	40	0.0.0.0	synth with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.0208420753479	4
Coq.Sets.Uniset.defs.seq_refl	40	3	synth with cache (only 1: auto).	0.0109300613403	4
Coq.Sets.Uniset.defs.seq_trans	40	1.0.3.12.1	synth with cache (only 1: destruct x; only 1: intro; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	1.96331691742	2449
Coq.Sets.Uniset.defs.seq_sym	40	0.0.1	synth with cache (only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.0196650028229	4
Coq.Sets.Uniset.defs.union_empty_left	40	0.0.0	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).	0.0193600654602	3
Coq.Sets.Uniset.defs.union_empty_right	40	18.0.0.0	synth with cache (only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: intuition).	3.92255401611	5531
Coq.Sets.Uniset.defs.union_comm	40	12.5.2.2	synth with cache (only 1: unfold seq; only 1: destruct y; only 1: simpl; only 1: intuition).	8.93529987335	10951
Coq.Sets.Uniset.defs.union_ass	40	1.0.0.1.0.0.1	synth with cache (only 1: unfold seq; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: simpl; only 1: auto with bool).	0.0704350471497	23
Coq.Sets.Uniset.defs.seq_left	40	1.0.3.1.0.0	synth with cache (only 1: unfold seq; only 1: destruct y; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: auto).	0.701950073242	270
Coq.Sets.Uniset.defs.seq_right	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto).	0.0493619441986	9
Coq.Sets.Uniset.defs.union_rotate	40
Coq.Sets.Uniset.defs.seq_congr	40
Coq.Sets.Uniset.defs.union_perm_left	40
Coq.Sets.Uniset.defs.uniset_twist1	40
Coq.Sets.Uniset.defs.uniset_twist2	40
Coq.Sets.Uniset.defs.treesort_twist1	40
Coq.Sets.Uniset.defs.treesort_twist2	40	1.1.2.1.1.0.0.0.0.0.2	synth with cache (only 1: unfold seq; only 1: intros; only 1: apply seq_trans with (union x (union (union y z) t)); only 1: apply seq_right; only 1: apply seq_left; only 1: trivial; only 1: apply seq_trans with (union (union x (union y z)) t); only 1: apply seq_sym; only 1: apply union_ass; only 1: apply seq_left; only 1: apply union_perm_left).	24.4097781181	13727
Coq.Sets.Multiset.multiset_defs.meq_refl	40	0.1	synth with cache (only 1: intuition; only 1: split).	0.0309240818024	3
Coq.Sets.Multiset.multiset_defs.meq_trans	40
Coq.Sets.Multiset.multiset_defs.meq_sym	40	0.0.0.1.0	synth with cache (only 1: unfold meq; only 1: destruct y; only 1: intros; only 1: rewrite H; only 1: auto).	0.0479130744934	6
Coq.Sets.Multiset.multiset_defs.munion_empty_left	40	0.0.0	synth with cache (only 1: destruct x; only 1: unfold meq; only 1: reflexivity).	0.0331151485443	3
Coq.Sets.Multiset.multiset_defs.munion_empty_right	40	0.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).	0.0365259647369	4
Coq.Sets.Multiset.multiset_defs.munion_comm	40	13.4.0.0	synth with cache (only 1: unfold meq; only 1: destruct y; only 1: simpl; only 1: firstorder).	24.650837183	8590
Coq.Sets.Multiset.multiset_defs.munion_ass	40	1.1.0.2.0.0	synth with cache (only 1: unfold meq; only 1: destruct x; only 1: destruct y; only 1: unfold munion; only 1: simpl; only 1: auto with arith).	0.150479078293	45
Coq.Sets.Multiset.multiset_defs.meq_left	40	0.1.1.2.0.0	synth with cache (only 1: unfold meq; only 1: destruct y; only 1: simpl; only 1: destruct x; only 1: destruct z; only 1: auto).	0.066691160202	17
Coq.Sets.Multiset.multiset_defs.meq_right	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto with arith).	0.0639541149139	9
Coq.Sets.Multiset.multiset_defs.munion_rotate	40
Coq.Sets.Multiset.multiset_defs.meq_congr	40	0.3.1.2	synth with cache (only 1: intros; only 1: unfold meq; only 1: simpl; only 1: auto with arith).	0.59707903862	192
Coq.Sets.Multiset.multiset_defs.munion_perm_left	40
Coq.Sets.Multiset.multiset_defs.multiset_twist1	40
Coq.Sets.Multiset.multiset_defs.multiset_twist2	40
Coq.Sets.Multiset.multiset_defs.treesort_twist1	40
Coq.Sets.Multiset.multiset_defs.treesort_twist2	40
Coq.Sets.Multiset.multiset_defs.meq_singleton	40
Coq.Sets.Integers.Integers_sect.le_reflexive	40	0.22	synth with cache (only 1: intros a; only 1: PeanoNat.Nat.order).	0.165848016739	258
Coq.Sets.Integers.Integers_sect.le_antisym	40	2.22	synth with cache (only 1: intros m IH; only 1: PeanoNat.Nat.order).	0.468578100204	309
Coq.Sets.Integers.Integers_sect.le_trans	40	0.2.1.0	synth with cache (only 1: red; only 1: intros n m p; only 1: intros; only 1: PeanoNat.Nat.Private_Tac.order).	0.0663089752197	23
Coq.Sets.Integers.Integers_sect.le_Order	40	2.0.0.0.0.0.0.1.0.3	synth with cache (only 1: split; only 1: red; only 1: auto with arith; only 1: red; only 1: intros; only 1: apply PeanoNat.Nat.le_trans with y; only 1: auto; only 1: auto; only 1: red; only 1: PeanoNat.Nat.order).	1.15708398819	654
Coq.Sets.Integers.Integers_sect.triv_nat	40	9.0	synth with cache (only 1: intro n; only 1: now PeanoNat.Nat.nzsimpl).	0.0641038417816	43
Coq.Sets.Integers.Integers_sect.nat_po	40
Coq.Sets.Integers.Integers_sect.le_total_order	40	1.0.0.9.2.7.6.10	synth with cache (only 1: constructor; only 1: intro H'0; only 1: intros n m; only 1: simpl; only 1: destruct (le_gt_dec n m); only 1: intros H; only 1: intuition PeanoNat.Nat.order; only 1: auto with arith).	15.4805321693	18094
Coq.Sets.Integers.Integers_sect.Finite_subset_has_lub	40
Coq.Sets.Integers.Integers_sect.Integers_has_no_ub	40
Coq.Sets.Integers.Integers_sect.Integers_infinite	40
Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	0.4.3.1	synth with cache (only 1: intros; only 1: intro p; only 1: red; only 1: auto).	0.053099155426	59
Coq.Sets.Relations_1_facts.Equiv_from_preorder	40
Coq.Sets.Relations_1_facts.Equiv_from_order	40	2.1.0.0.0	synth with cache (only 1: intros U R H'; only 1: elim H'; only 1: intros H'0 H'1; only 1: red in H'1; only 1: auto  10 with sets).	0.289113998413	66
Coq.Sets.Relations_1_facts.contains_is_preorder	40	2.0.1.2.2	synth with cache (only 1: intro A; only 1: split; only 1: intros H'0 H'1; only 1: trivial; only 1: auto  10 with sets).	0.0645451545715	70
Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40	1.0.0.1.0.4.1.3.0.2.8.9	synth with cache (only 1: intros; only 1: constructor; only 1: auto  10 with sets; only 1: intros x y h; only 1: destruct 1; only 1: destruct 1; only 1: auto  10 with sets; only 1: intros x y h; only 1: red; only 1: elim h; only 1: intros H'3 H'4; only 1: auto  10 with sets).	26.861798048	54130
Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	6.2.1	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: intro p; only 1: auto  10 with sets).	0.204344987869	153
Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.0	synth with cache (only 1: unfold same_relation; only 1: intuition).	0.0170691013336	2
Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	2.0.3.0	synth with cache (only 1: compute; only 1: destruct 1; only 1: intros; only 1: auto with sets).	0.0333030223846	23
Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40
Coq.Sets.Relations_2_facts.Rstar_reflexive	40	1.2	synth with cache (only 1: intros U R H'; only 1: auto with sets).	0.0121088027954	5
Coq.Sets.Relations_2_facts.Rplus_contains_R	40	0	synth with cache (only 1: auto with sets).	0.0108051300049	1
Coq.Sets.Relations_2_facts.Rstar_contains_R	40
Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40
Coq.Sets.Relations_2_facts.Rstar_transitive	40
Coq.Sets.Relations_2_facts.Rstar_cases	40
Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40
Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40
Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40	0.0.0.0.0.2.1.0.0.0.2.0	synth with cache (only 1: intuition; only 1: red; only 1: intros x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: apply T1 with y0; only 1: auto with sets; only 1: auto with sets).	3.15868902206	2777
Coq.Sets.Relations_2_facts.star_monotone	40	0.0.5.3.0.0.0.0	synth with cache (only 1: unfold contains; only 1: intros U R S H' x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).	12.7376611233	7862
Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40
Coq.Sets.Relations_2_facts.Lemma1	40
Coq.Sets.Permut.Axiomatisation.cong_congr	40
Coq.Sets.Permut.Axiomatisation.comm_right	40	3.1.0	synth with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).	0.0520920753479	17
Coq.Sets.Permut.Axiomatisation.comm_left	40	0.2.0	synth with cache (only 1: intros; only 1: apply cong_left; only 1: apply op_comm).	0.0226190090179	5
Coq.Sets.Permut.Axiomatisation.perm_right	40
Coq.Sets.Permut.Axiomatisation.perm_left	40
Coq.Sets.Permut.Axiomatisation.op_rotate	40	0.8.5.1.0	synth with cache (only 1: intros; only 1: apply cong_sym; only 1: apply cong_trans with (op (op x y) z); only 1: apply op_comm; only 1: apply op_ass).	36.955135107	13013
Coq.Sets.Permut.Axiomatisation.twist	40
Coq.Sets.Image.Image.Im_def	40
Coq.Sets.Image.Image.Im_add	40
Coq.Sets.Image.Image.image_empty	40	1.1.2.4.8.1.0.6	synth with cache (only 1: intro; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: destruct 1; only 1: auto using Im_def with sets).	7.97121810913	5695
Coq.Sets.Image.Image.finite_image	40
Coq.Sets.Image.Image.Im_inv	40	12.0.3.0.3	synth with cache (only 1: intros H'5 H'8; only 1: intros x0 H'; only 1: elim H'; only 1: elim H'; only 1: firstorder).	3.39176297188	3010
Coq.Sets.Image.Image.not_injective_elim	40
Coq.Sets.Image.Image.cardinal_Im_intro	40
Coq.Sets.Image.Image.In_Image_elim	40
Coq.Sets.Image.Image.injective_preserves_cardinal	40
Coq.Sets.Image.Image.cardinal_decreases	40
Coq.Sets.Image.Image.Pigeonhole	40
Coq.Sets.Image.Image.Pigeonhole_principle	40
Coq.Sets.Infinite_sets.Infinite_sets.make_new_approximant	40
Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow	40
Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow'	40
Coq.Sets.Infinite_sets.Infinite_sets.approximant_can_be_any_size	40
Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous	40
Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous'	40
Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_bis	40
Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_ter	40
Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_minimal	40	2.27.3	synth with cache (only 1: red; only 1: compute; only 1: destruct 1).	2.48021006584	7988
Coq.Sets.Powerset.The_power_set_partial_order.Power_set_Inhabited	40	2.2.0.2.35.57	synth with cache (only 1: intro x; only 1: exists x; only 1: split; only 1: red; only 1: intros H'0 H'1; only 1: intuition).	3.2778468132	26109
Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_an_order	40	0.0.0.8	synth with cache (only 1: constructor; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.105022907257	37
Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_transitive	40	0	synth with cache (only 1: auto  6 with sets).	0.0126960277557	1
Coq.Sets.Powerset.The_power_set_partial_order.Power_set_PO	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_Rel_is_Strict_Included	40	0.0	synth with cache (only 1: red; only 1: auto with sets).	0.0138430595398	2
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion_left	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive	40	0.3.0.0.0.2.7	synth with cache (only 1: elim Strict_Rel_is_Strict_Included; only 1: intros H'1 H'2 x y z H'3 H'4; only 1: apply H'1; only 1: apply Strict_Rel_Transitive_with_Rel with (y := y); only 1: auto with sets; only 1: apply H'1; only 1: auto with sets).	17.4758548737	3484
Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_is_Bottom	40	1.2.1.0.0.0.5.12.0	synth with cache (only 1: intro X; only 1: split; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: red; only 1: simpl; only 1: auto with sets).	7.15579605103	7916
Coq.Sets.Powerset.The_power_set_partial_order.Union_minimal	40
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_maximal	40	2.0.0.0	synth with cache (only 1: intros a b X H' H'0; only 1: red; only 1: intros x H'1; only 1: auto with sets).	0.0347549915314	11
Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_l	40	0	synth with cache (only 1: auto with sets).	0.0138039588928	1
Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_r	40	0	synth with cache (only 1: auto with sets).	0.0131289958954	1
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_l	40	0.0.0.0.0.3	synth with cache (only 1: intro A; only 1: intro X; only 1: red; only 1: intros x H'1; only 1: elim H'1; only 1: auto with sets).	0.0491740703583	27
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_r	40	0.0.0.0.0	synth with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.0265159606934	5
Coq.Sets.Powerset.The_power_set_partial_order.Union_is_Lub	40
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_is_Glb	40
Coq.Sets.Classical_sets.Ensembles_classical.not_included_empty_Inhabited	40
Coq.Sets.Classical_sets.Ensembles_classical.not_empty_Inhabited	40
Coq.Sets.Classical_sets.Ensembles_classical.Inhabited_Setminus	40
Coq.Sets.Classical_sets.Ensembles_classical.Strict_super_set_contains_new_element	40
Coq.Sets.Classical_sets.Ensembles_classical.Subtract_intro	40	6.2.2.3	synth with cache (only 1: intro X; only 1: red; only 1: intros x H; only 1: auto  7 using Inhabited_Setminus with sets).	2.11899113655	1039
Coq.Sets.Classical_sets.Ensembles_classical.Subtract_inv	40	3.0.1.0	synth with cache (only 1: unfold Subtract at 1; only 1: intros A x y H'; only 1: induction H'; only 1: auto using Noone_in_empty with sets).	0.0341429710388	8
Coq.Sets.Classical_sets.Ensembles_classical.Included_Strict_Included	40	0.19.4	synth with cache (only 1: intros x y; only 1: compute; only 1: tauto).	5.79427504539	3626
Coq.Sets.Classical_sets.Ensembles_classical.Strict_Included_inv	40
Coq.Sets.Classical_sets.Ensembles_classical.not_SIncl_empty	40	1.2.0.0.0.0.0	synth with cache (only 1: intro X; only 1: red; only 1: intro H'; only 1: elim H'; only 1: intros; only 1: red in H'; only 1: auto with sets).	0.0390639305115	10
Coq.Sets.Classical_sets.Ensembles_classical.Complement_Complement	40
Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40	0.0.0.1.0.0.0.0.0.2	synth with cache (only 1: generalize Rstar_contains_Rplus; only 1: intro T; only 1: red in T; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: intros x0 H'0; only 1: intros x1 y0 H'1; only 1: exists y0; only 1: auto with sets).	2.09755182266	1432
Coq.Sets.Relations_3_facts.coherent_symmetric	40	0.2.3.0.1.3.1.2	synth with cache (only 1: intros U R x y H'; only 1: elim H'; only 1: intros z1 H'5; only 1: elim H'; only 1: intros H'8 H'10; only 1: elim H'5; only 1: exists z1; only 1: auto with sets).	31.0134809017	24227
Coq.Sets.Relations_3_facts.Strong_confluence	40
Coq.Sets.Relations_3_facts.Strong_confluence_direct	40
Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40
Coq.Sets.Relations_3_facts.Newman	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.sincl_add_x	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_in	40	0.0.1.0.0.0	synth with cache (only 1: intros X x H'; only 1: unfold Subtract; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	0.0764381885529	7
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr	40	0.2.2.3	synth with cache (only 1: intros A a b H' H'0; only 1: intro H'1; only 1: elim H'1; only 1: auto with sets).	1.30061006546	328
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_l	40	0.0.0.1.2.2.1.3.0.2	synth with cache (only 1: intros A x y H'; only 1: elim H'; only 1: intro H'2; only 1: intro H'1; only 1: induction H'; only 1: apply NNPP; only 1: generalize H'1; only 1: elim H'2; only 1: auto with sets; only 1: auto with sets).	30.2836279869	18264
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_r	40	0.0.0.0.1.1.0.0.2.2.0	synth with cache (only 1: intros X x H'; only 1: split; only 1: auto with sets; only 1: red; only 1: intro H'1; only 1: lapply (Singleton_inv U x x0); only 1: intro H'4; only 1: apply H'; only 1: rewrite H'4; only 1: auto with sets; only 1: auto with sets).	22.2504909039	9745
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_2	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_1	40	0.0.0.0.0.1.1.0.0.0	synth with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).	1.49399995804	558
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_xy	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_st_add_soustr	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Sub_Add_new	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Simplify_add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Included_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.setcover_inv	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Add_covers	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_is_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Singleton_atomic	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.less_than_singleton	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel_left	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero	40	23.0	synth with cache (only 1: intro A; only 1: auto  6 with sets).	0.723788022995	1049
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero_right	40	0	synth with cache (only 1: auto  6 with sets).	0.0146389007568	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero'	40	0.7	synth with cache (only 1: unfold Add at 1; only 1: auto  6 with sets).	0.0420980453491	17
Coq.Sets.Powerset_facts.Sets_as_an_algebra.less_than_empty	40	0	synth with cache (only 1: auto with sets).	0.0136618614197	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_commutative	40	0	synth with cache (only 1: auto with sets).	0.0146400928497	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_associative	40	19.7	synth with cache (only 1: intros a b; only 1: auto  10 with sets).	2.18213200569	1870
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_idempotent	40	0	synth with cache (only 1: auto  6 with sets).	0.0159289836884	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_absorbs	40	0.3	synth with cache (only 1: intros y H'1; only 1: auto  7 with sets).	0.0278160572052	5
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Couple_as_union	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_union	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple	40	1.1.1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	4.11887216568	2952
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple_Singleton	40	0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	24.2510519028	13717
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_commutative	40	0.0.1.0.0.0.1.0.0.1.6	synth with cache (only 1: intros y H'1; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	1.38218379021	1056
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity_l	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity'	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_add	40	1.0.1.4	synth with cache (only 1: intros A B; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).	0.176915168762	47
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union	40	1.1.0.1.0.0.0.4.2.1.2.3	synth with cache (only 1: unfold Add; only 1: intros x y H'; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: auto with sets).	7.18653011322	6176
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union'	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.singlx	40	1.0.2.1.1	synth with cache (only 1: intros X x H'; only 1: elim H'; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).	0.16496515274	69
Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add	40	1.5	synth with cache (only 1: unfold Add; only 1: auto using Union_associative with sets).	0.15702009201	51
Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add_x	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative	40	6.7.1	synth with cache (only 1: intros x y z; only 1: unfold Add; only 1: auto  9 with sets).	2.91238808632	1825
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative'	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_distributes	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.setcover_intro	40	6.0.1	synth with cache (only 1: intro; only 1: intros A a b H' H'0; only 1: auto with sets).	0.0333738327026	10
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Disjoint_Intersection	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_l	40	0	synth with cache (only 1: auto with sets).	0.0194599628448	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_r	40	0.0	synth with cache (only 1: intros; only 1: auto with sets).	0.0216679573059	2
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_l	40	0.0.1.1.1.1.1.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets).	0.651162862778	355
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_r	40	0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).	0.0500741004944	9
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_l	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_r	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Disjoint_noop	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Included_empty	40	1.0.0.2.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: unfold In in *; only 1: exfalso; only 1: inversion_clear H1; only 1: contradict H; only 1: intuition; only 1: intuition).	1.27742695808	683
Coq.Sets.Constructive_sets.Ensembles_facts.Extension	40	2.8.2.8.0.8.7	synth with cache (only 1: induction 1; only 1: red; only 1: split; only 1: red; only 1: trivial; only 1: red; only 1: trivial).	5.33598399162	19737
Coq.Sets.Constructive_sets.Ensembles_facts.Noone_in_empty	40	18.1.3	synth with cache (only 1: red; only 1: intros H H'; only 1: destruct H').	0.375436067581	1119
Coq.Sets.Constructive_sets.Ensembles_facts.Included_Empty	40	0	synth with cache (only 1: destruct 1).	0.00895094871521	1
Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro1	40	1.4.1.2	synth with cache (only 1: intros B C H'; only 1: intro; only 1: left; only 1: auto with sets).	0.443840026855	448
Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro2	40	0.0	synth with cache (only 1: unfold Add at 1; only 1: auto with sets).	0.0149478912354	2
Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_add	40	0.10.2.2.0	synth with cache (only 1: unfold Add at 1; only 1: intro; only 1: intro; only 1: exists x; only 1: auto with sets).	0.667768955231	1301
Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_not_empty	40	0.2.3.1.36.1.3.8	synth with cache (only 1: red; only 1: intro; only 1: destruct 1; only 1: intro p; only 1: elim (Noone_in_empty x); only 1: red; only 1: destruct p; only 1: auto with sets).	21.5891370773	113197
Coq.Sets.Constructive_sets.Ensembles_facts.Add_not_Empty	40	0.21.3.6.0.2	synth with cache (only 1: intros A x; only 1: red; only 1: intro; only 1: elim (Noone_in_empty x); only 1: destruct H; only 1: auto using Add_intro2 with sets).	24.8068511486	83100
Coq.Sets.Constructive_sets.Ensembles_facts.not_Empty_Add	40	0.2.3.1.1.0	synth with cache (only 1: intros A x; only 1: red; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).	0.470232963562	418
Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_inv	40	1.1.1	synth with cache (only 1: intros B C H'; only 1: rewrite H'; only 1: auto with sets).	0.0175440311432	6
Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_intro	40	0.0.0	synth with cache (only 1: intros x y H'; only 1: elim H'; only 1: auto using Add_intro2 with sets).	0.0185108184814	3
Coq.Sets.Constructive_sets.Ensembles_facts.Union_inv	40	0.0.2.5	synth with cache (only 1: intros A x; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).	0.115422010422	82
Coq.Sets.Constructive_sets.Ensembles_facts.Add_inv	40
Coq.Sets.Constructive_sets.Ensembles_facts.Intersection_inv	40	0.0.0	synth with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets).	0.0184090137482	3
Coq.Sets.Constructive_sets.Ensembles_facts.Couple_inv	40	0.2.0.1.0.0	synth with cache (only 1: intros A x y H'; only 1: induction H'; only 1: left; only 1: trivial with sets; only 1: right; only 1: trivial with sets).	0.0318579673767	13
Coq.Sets.Constructive_sets.Ensembles_facts.Setminus_intro	40	1.0	synth with cache (only 1: intros B C x H'; only 1: auto with sets).	0.0164301395416	3
Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_intro	40	1.0	synth with cache (only 1: intros B C H'; only 1: auto with sets).	0.0157260894775	3
Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_strict	40	3.6.7	synth with cache (only 1: red; only 1: destruct 1; only 1: auto with sets).	0.592318058014	1097
Coq.Sets.Finite_sets_facts.Finite_sets_facts.finite_cardinal	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_finite	40	6.1.3.0	synth with cache (only 1: intros X x H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).	0.581647872925	439
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Add_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Singleton_is_finite	40	0.4.0.1.1.37.1	synth with cache (only 1: intro; only 1: apply NNPP; only 1: red; only 1: intro H'0; only 1: elim H'0; only 1: rewrite <- (Empty_set_zero' U x); only 1: auto with sets).	1.83045887947	6150
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Union_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Finite_downward_closed	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Intersection_preserves_finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinalO_empty	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.inh_card_gt_O	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_soustr_1	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_is_functional	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_Empty	40	0.0.2.0.15	synth with cache (only 1: destruct m; only 1: auto with sets; only 1: inversion 1; only 1: elim (not_Empty_Add U A x); only 1: auto with sets).	7.4381840229	4608
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_unicity	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_Add_gen	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_st_card_lt	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_card_le	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.G_aux	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Generalized_induction_on_finite_sets	40
Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_invert	40
Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_elim	40	4.0.0	synth with cache (only 1: induction 1; only 1: auto; only 1: auto using Noone_in_empty with sets).	0.0247349739075	11