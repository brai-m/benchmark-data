coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Conjunction.proj1	1	0.001625	0	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Conjunction.proj2	1	0.004020	2	3	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_refl	1	0.001994	0	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_trans	1	0.002631	0	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_sym	1	0.008826	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_iff_compat_l	1	0.028619	9	11
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_iff_compat_r	1	0.018569	18	19	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: apply H; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: apply H0; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_iff_compat_l	1	0.026429	8	10
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_iff_compat_r	1	0.023174	20	21	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: left; only 1: apply H; only 1: assumption; only 1: right; only 1: assumption; only 1: intros ?; only 1: destruct H1; only 1: left; only 1: apply H0; only 1: assumption; only 1: right; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.imp_iff_compat_l	1	0.014089	16	17	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: apply H1; only 1: assumption; only 1: intros ?; only 1: intros ?; only 1: apply H0; only 1: apply H1; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.imp_iff_compat_r	1	0.013774	16	17	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: apply H0; only 1: assumption; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: apply H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.not_iff_compat	1	0.002869	0	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.neg_false	1	0.003980	1	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_cancel_l	1	0.024755	22	23	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: apply H1; only 1: split; only 1: apply H; only 1: assumption; only 1: assumption; only 1: intros; only 1: apply H2; only 1: split; only 1: apply H0; only 1: assumption; only 1: assumption; only 1: apply and_iff_compat_l).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_cancel_r	1	0.027269	22	23	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: apply H1; only 1: split; only 1: assumption; only 1: apply H; only 1: assumption; only 1: intros; only 1: apply H2; only 1: split; only 1: assumption; only 1: apply H0; only 1: assumption; only 1: apply and_iff_compat_r).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_comm	1	0.011765	12	13	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: split; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: split; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_assoc	1	0.017280	18	19	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: split; only 1: assumption; only 1: split; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: destruct H0; only 1: split; only 1: split; only 1: assumption; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_cancel_l	1	0.033758	26	27	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: destruct H1; only 1: right; only 1: assumption; only 1: destruct H; only 1: assumption; only 1: assumption; only 1: assumption; only 1: intros; only 1: destruct H2; only 1: right; only 1: assumption; only 1: destruct H0; only 1: assumption; only 1: assumption; only 1: assumption; only 1: apply or_iff_compat_l).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_cancel_r	1	0.039026	26	27	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: destruct H1; only 1: left; only 1: assumption; only 1: assumption; only 1: destruct H; only 1: assumption; only 1: assumption; only 1: intros; only 1: destruct H2; only 1: left; only 1: assumption; only 1: assumption; only 1: destruct H0; only 1: assumption; only 1: assumption; only 1: apply or_iff_compat_r).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_comm	1	0.011960	14	15	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: right; only 1: assumption; only 1: left; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: right; only 1: assumption; only 1: left; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_assoc	1	0.019672	24	25	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: left; only 1: assumption; only 1: right; only 1: left; only 1: assumption; only 1: right; only 1: right; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: left; only 1: left; only 1: assumption; only 1: destruct H; only 1: left; only 1: right; only 1: assumption; only 1: right; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_and	1	0.118357	11	12	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros; only 1: apply H; only 1: assumption; only 1: intros; only 1: apply H0; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_to_and	1	0.115211	20	21	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros; only 1: apply H; only 1: assumption; only 1: intros; only 1: apply H0; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros; only 1: apply H; only 1: assumption; only 1: intros; only 1: apply H0; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.universal_quantification.inst	1	0.005268	2	3	0.0	synth with cache (only 1: unfold all; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.universal_quantification.gen	1	0.003181	0	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.absurd	1	0.008015	7	8	0.0.0.0.0.0.0	synth with cache (only 1: unfold not; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_sym	1	0.003477	2	3	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans	1	0.001493	0	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	1	0.003427	2	3	0.0	synth with cache (only 1: destruct 2; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.f_equal	1	0.003827	2	3	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	1	0.007324	6	7	0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: destruct H0; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_sind_r	1	0.007141	6	8
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_ind_r	1	0.009268	8	9	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim eq_sym with (1 := H0); only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_rec_r	1	0.007674	8	9	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim eq_sym with (1 := H0); only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_rect_r	1	0.007181	8	9	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim eq_sym with (1 := H); only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.equality_dep.f_equal_dep	1	0.001627	0	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.equality_dep2.f_equal_dep2	1	0.004168	0	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_opp_r	1	0.006904	3	4	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_opp_l	1	0.005778	3	4	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal2	1	0.007291	3	4	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal3	1	0.011022	4	5	0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal4	1	0.012255	5	6	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal5	1	0.019051	6	7	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal_compose	1	0.003011	0	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_refl_l	1	0.002091	0	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_refl_r	1	0.002053	0	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_sym_involutive	1	0.002063	0	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_inv_l	1	0.002098	0	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_inv_r	1	0.002998	0	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_assoc	1	0.004025	0	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_map	1	0.003070	0	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_map	1	0.010928	3	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.map_subst	1	0.003113	0	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.map_subst_map	1	0.003410	0	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_swap	1	0.002080	0	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_compose	1	0.003099	0	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_id_comm_l	1	0.004607	2	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_id_comm_r	1	0.005569	3	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_refl_map_distr	1	0.003818	1	2	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_map_distr	1	0.003129	0	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_sym_map_distr	1	0.002486	0	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_distr	1	0.002359	0	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_rew_distr	1	0.002674	0	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_const	1	0.001417	0	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.unique_existence	1	0.005831	6	8
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.forall_exists_unique_domain_coincide	1	0.014482	14	16
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.forall_exists_coincide_unique_domain	1	0.005629	3	5
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.exists_inhabited	1	0.002716	2	3	0.0	synth with cache (only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.inhabited_covariant	1	0.004002	4	5
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_stepl	1	0.024660	8	9	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- H0; only 1: exact H).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_stepl	1	0.008788	12	13	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: auto; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex.eq_ex_uncurried	1	0.007277	4	5	0.0.0.0	synth with cache (only 1: destruct pq; only 1: destruct H; only 1: destruct x; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex.rew_ex	1	0.009692	3	4	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex2.eq_ex2_uncurried	1	0.009698	6	7	0.0.0.0.0.0	synth with cache (only 1: destruct pq; only 1: destruct H0; only 1: destruct H; only 1: destruct x; only 1: simpl in *; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex2.rew_ex2	1	0.013000	3	4	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.UpdateEq.eq_equiv	1	0.003720	3	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	1	0.009264	10	11	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold eqb; only 1: destruct F.eq_dec; only 1: auto with *; only 1: split; only 1: discriminate; only 1: intros ?; only 1: elim n; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	1	0.004221	3	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	1	0.013517	12	13	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply eq_true_iff_eq; only 1: rewrite eqb_eq; only 1: rewrite eqb_eq; only 1: rewrite H; only 1: rewrite H0; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	1	0.004087	3	4	0.0.0	synth with cache (only 1: apply iff_reflect; only 1: symmetry; only 1: apply eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	1	0.006391	3	4	0.0.0	synth with cache (only 1: rewrite <- not_true_iff_false; only 1: rewrite eqb_eq; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	1	0.003745	2	3	0.0	synth with cache (only 1: apply eqb_eq; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	1	0.008002	4	5	0.0.0.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite eqb_eq; only 1: rewrite eqb_eq; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	1	0.008752	6	7	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: symmetry; only 1: auto; only 1: symmetry; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	1	0.007944	4	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	1	0.011043	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	1	0.005202	4	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	1	0.012098	8	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	1	0.007814	3	4	0.0.0	synth with cache (only 1: intros; only 1: rewrite succ_inj_wd; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.CentralInduction.central_induction	1	0.019679	14	16
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	1	0.045618	10	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	1	0.056627	18	19
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	1	1.002123	404	411
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	1	0.002895	0	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	1	0.011066	4	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	1	0.023941	19	20	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: le_elim H; only 1: le_elim H0; only 1: apply lt_le_incl; only 1: apply mul_lt_mono_pos_l; only 1: easy; only 1: easy; only 1: apply eq_le_incl; only 1: rewrite H0; only 1: easy; only 1: apply eq_le_incl; only 1: rewrite <- H; only 1: rewrite mul_0_l; only 1: rewrite mul_0_l; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	1	0.029088	19	20	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: le_elim H; only 1: le_elim H0; only 1: apply lt_le_incl; only 1: apply mul_lt_mono_neg_l; only 1: easy; only 1: easy; only 1: apply eq_le_incl; only 1: rewrite H0; only 1: easy; only 1: apply eq_le_incl; only 1: rewrite H; only 1: rewrite mul_0_l; only 1: rewrite mul_0_l; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	1	1.002598	600	609
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	1	0.010046	6	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	1	0.009786	9	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	1	1.002606	298	304
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	1	0.005330	3	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	1	0.011036	4	5	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite mul_comm; only 1: apply mul_id_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	1	0.011253	7	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	1	1.002274	391	398
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	1	0.011727	7	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	1	0.011252	4	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	1	0.009391	9	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	1	0.063465	31	32	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: le_elim H0; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: apply mul_lt_mono_nonneg; only 1: easy; only 1: easy; only 1: assumption; only 1: assumption; only 1: rewrite <- H2; only 1: apply mul_le_mono_nonneg_r; only 1: assumption; only 1: apply lt_le_incl; only 1: easy; only 1: le_elim H2; only 1: rewrite <- H0; only 1: apply mul_le_mono_nonneg_l; only 1: assumption; only 1: apply lt_le_incl; only 1: easy; only 1: rewrite H0; only 1: rewrite H2; only 1: apply eq_le_incl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	1	0.009829	5	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	1	0.009269	5	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	1	0.010791	5	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	1	0.009121	5	6	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mul_comm; only 1: apply mul_pos_neg; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	1	0.007884	2	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	1	0.004322	3	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	1	0.007315	4	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	1	0.007356	4	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	1	0.007401	4	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	1	0.006882	5	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	1	0.007870	5	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	1	0.070794	19	20	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply eq_mul_0 in H0; only 1: tauto; only 1: intros ?; only 1: split; only 1: intros ?; only 1: rewrite H0 in H; only 1: rewrite mul_0_l in H; only 1: apply H; only 1: easy; only 1: intros ?; only 1: rewrite H0 in H; only 1: rewrite mul_0_r in H; only 1: apply H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	1	0.009762	3	4	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite eq_mul_0; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	1	0.011780	8	9	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply eq_mul_0 in H; only 1: destruct H; only 1: assumption; only 1: false_hyp H H0).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	1	0.011307	8	9	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply eq_mul_0 in H; only 1: destruct H; only 1: false_hyp H H0; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	1	0.008205	3	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	1	0.014473	9	10	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply mul_lt_mono_nonneg; only 1: easy; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	1	0.012901	9	10	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply mul_le_mono_nonneg; only 1: easy; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	1	0.007527	5	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	1	0.007135	5	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	1	0.014884	4	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	1	0.005310	1	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	1	0.008298	2	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	1	0.004736	1	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	1	0.054852	19	20	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite mul_add_distr_r; only 1: rewrite mul_add_distr_l; only 1: rewrite mul_add_distr_l; only 1: rewrite add_assoc; only 1: apply add_le_mono_r; only 1: rewrite <- add_assoc; only 1: rewrite <- add_0_r  at 1; only 1: apply add_le_mono_l; only 1: apply add_nonneg_nonneg; only 1: apply mul_nonneg_nonneg; only 1: order; only 1: order; only 1: apply mul_nonneg_nonneg; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	1	0.131641	9	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	1	0.104993	2	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	1	0.007577	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold abs; only 1: apply max_l; only 1: apply le_trans with 0; only 1: rewrite opp_nonpos_nonneg; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	1	0.008789	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold abs; only 1: apply max_r; only 1: apply le_trans with 0; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	1	0.005204	3	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	1	0.005521	3	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	1	0.056004	3	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	1	0.004547	3	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	1	0.015039	14	15	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct_max n; only 1: rewrite max_l; only 1: auto with relations; only 1: apply le_trans with 0; only 1: rewrite opp_nonpos_nonneg; only 1: auto; only 1: auto; only 1: rewrite max_r; only 1: auto with relations; only 1: apply le_trans with 0; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	1	0.005033	4	5	0.0.0.0	synth with cache (only 1: intros; only 1: apply abs_neq; only 1: rewrite <- opp_nonneg_nonpos; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	1	0.014323	5	6	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct_max n; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	1	0.009538	5	6	0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: rewrite <- H; only 1: apply abs_nonneg; only 1: apply abs_eq).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	1	0.011720	6	7	0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: rewrite <- opp_nonneg_nonpos; only 1: rewrite <- H; only 1: apply abs_nonneg; only 1: apply abs_neq).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	1	0.013758	11	12	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: rewrite abs_neq; only 1: rewrite opp_involutive; only 1: auto with relations; only 1: rewrite opp_nonpos_nonneg; only 1: auto; only 1: rewrite abs_eq; only 1: auto with relations; only 1: rewrite opp_nonneg_nonpos; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	1	0.004002	2	3	0.0	synth with cache (only 1: apply abs_eq; only 1: apply le_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	1	0.026227	11	12	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: destruct_max n; only 1: auto; only 1: rewrite eq_opp_l; only 1: rewrite opp_0; only 1: easy; only 1: intros ?; only 1: rewrite H; only 1: rewrite abs_eq; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	1	0.029383	7	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	1	0.017202	4	5	0.0.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	1	0.021014	5	6	0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: rewrite opp_involutive; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	1	0.014530	6	7	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply abs_eq; only 1: destruct_max n; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	1	0.004885	2	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	1	0.011316	4	5	0.0.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	1	0.007030	5	6	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply abs_case_strong; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	1	0.005624	4	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	1	0.005491	3	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	1	0.005490	3	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	1	0.033181	9	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	1	0.013596	4	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	1	0.004118	1	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	1	0.007612	4	5	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- abs_mul; only 1: apply abs_eq; only 1: apply square_nonneg).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	1	0.004372	3	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	1	0.056334	10	11	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct_sgn n; only 1: left; only 1: auto with relations; only 1: right; only 1: left; only 1: auto with relations; only 1: right; only 1: right; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	1	0.004483	2	3	0.0	synth with cache (only 1: apply sgn_null; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	1	0.017845	5	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	1	0.018481	4	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	1	0.019127	4	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	1	0.020234	13	14	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_sgn n; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: auto; only 1: setoid_replace n with 0; only 1: rewrite opp_0; only 1: apply sgn_0; only 1: auto with relations; only 1: rewrite opp_involutive; only 1: apply sgn_pos; only 1: rewrite opp_pos_neg; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	1	0.022253	9	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	1	0.010837	5	6	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- opp_nonneg_nonpos; only 1: rewrite <- opp_nonneg_nonpos; only 1: rewrite <- sgn_opp; only 1: apply sgn_nonneg).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	1	0.089039	35	36	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_sgn n; only 1: nzsimpl; only 1: destruct_sgn m; only 1: apply sgn_pos; only 1: apply mul_pos_pos; only 1: easy; only 1: easy; only 1: apply sgn_null; only 1: rewrite eq_mul_0; only 1: auto with relations; only 1: apply sgn_neg; only 1: apply mul_pos_neg; only 1: easy; only 1: easy; only 1: nzsimpl; only 1: apply sgn_null; only 1: rewrite eq_mul_0; only 1: auto with relations; only 1: destruct_sgn m; only 1: nzsimpl; only 1: apply sgn_neg; only 1: apply mul_neg_pos; only 1: easy; only 1: easy; only 1: nzsimpl; only 1: apply sgn_null; only 1: rewrite eq_mul_0; only 1: auto with relations; only 1: rewrite mul_opp_opp; only 1: nzsimpl; only 1: apply sgn_pos; only 1: apply mul_neg_neg; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	1	0.039308	15	16	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: destruct_sgn n; only 1: nzsimpl; only 1: apply abs_eq; only 1: apply lt_le_incl; only 1: auto; only 1: nzsimpl; only 1: rewrite abs_0_iff; only 1: auto with relations; only 1: rewrite mul_opp_r; only 1: nzsimpl; only 1: apply abs_neq; only 1: apply lt_le_incl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	1	0.038665	14	15	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_sgn n; only 1: nzsimpl; only 1: apply abs_eq; only 1: apply lt_le_incl; only 1: auto; only 1: nzsimpl; only 1: auto; only 1: rewrite mul_opp_r; only 1: nzsimpl; only 1: rewrite eq_opp_l; only 1: apply abs_neq; only 1: apply lt_le_incl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	1	0.003984	2	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.bi_induction	1	0.012391	7	9
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.recursion_wd	1	0.021938	17	18	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: subst y1; only 1: induction x1; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply H0; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.recursion_0	1	0.004573	1	2	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.recursion_succ	1	0.010585	2	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pred_succ	1	0.003747	1	2	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pred_0	1	0.003816	1	2	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.one_succ	1	0.003644	1	2	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.two_succ	1	0.003983	1	2	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.add_0_l	1	0.004254	1	2	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.add_succ_l	1	0.004587	1	2	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sub_0_r	1	0.005680	3	4	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sub_succ_r	1	0.005016	2	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.mul_0_l	1	0.003995	1	2	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.mul_succ_l	1	0.004932	1	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.lt_succ_r	1	0.006528	5	6	0.0.0.0.0	synth with cache (only 1: split; only 1: apply le_S_n; only 1: induction 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.eqb_eq	1	0.005487	2	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.leb_le	1	0.005352	2	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.ltb_lt	1	0.004062	1	2	0	synth with cache (only 1: apply leb_le).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.eq_dec	1	0.002983	0	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_eq_iff	1	0.005609	2	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_lt_iff	1	0.005684	2	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_le_iff	1	0.005548	2	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_antisym	1	0.004721	2	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_succ	1	0.003433	1	2	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.max_l	1	0.003846	1	2	0	synth with cache (only 1: exact max_l).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.max_r	1	0.003975	1	2	0	synth with cache (only 1: exact max_r).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.min_l	1	0.003761	1	2	0	synth with cache (only 1: exact min_l).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.min_r	1	0.004178	1	2	0	synth with cache (only 1: exact min_r).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pow_neg_r	1	0.005523	1	2	0	synth with cache (only 1: inversion 1).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pow_0_r	1	0.003938	1	2	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pow_succ_r	1	0.004683	1	2	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.square_spec	1	0.003571	1	2	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	1	0.003105	0	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	1	0.005790	4	5
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	1	0.008634	5	6	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: destruct x; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	1	0.006700	4	5
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.even_spec	1	0.003785	0	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.odd_spec	1	0.005262	1	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.divmod_spec	1	0.004770	0	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div_mod	1	0.011755	8	10
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.mod_bound_pos	1	0.018426	12	13	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: apply le_0_l; only 1: destruct y; only 1: elim H0; only 1: easy; only 1: easy; only 1: clear H0; only 1: unfold Init.Nat.modulo; only 1: apply lt_succ_r; only 1: apply le_sub_l).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	1	0.005099	0	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sqrt_specif	1	0.003899	0	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sqrt_neg	1	0.006000	1	2	0	synth with cache (only 1: inversion 1).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.log2_iter_spec	1	0.004866	0	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.log2_spec	1	0.005698	1	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.log2_nonpos	1	0.007193	3	4	0.0.0	synth with cache (only 1: inversion 1; only 1: subst; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.gcd_divide	1	0.003213	0	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.gcd_divide_l	1	0.004794	2	3	0.0	synth with cache (only 1: intros; only 1: apply gcd_divide).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.gcd_divide_r	1	0.004909	2	3	0.0	synth with cache (only 1: intros; only 1: apply gcd_divide).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.gcd_greatest	1	0.003867	0	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.gcd_nonneg	1	0.004793	1	2	0	synth with cache (only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div2_double	1	0.031587	8	9	0.0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl Init.Nat.mul; only 1: rewrite add_succ_r; only 1: simpl; only 1: simpl in IHn; only 1: rewrite IHn; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div2_succ_double	1	0.011600	6	7	0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: rewrite add_succ_r; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.le_div2	1	0.004662	1	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.lt_div2	1	0.012287	6	7	0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: inversion 1; only 1: intros ?; only 1: clear H; only 1: apply lt_succ_r; only 1: apply le_div2).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div2_decr	1	0.013017	9	10	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: intros ?; only 1: simpl; only 1: apply le_0_l; only 1: intros ?; only 1: apply succ_le_mono in H; only 1: apply le_trans with a; only 1: apply le_div2; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.double_twice	1	0.009126	4	5	0.0.0.0	synth with cache (only 1: simpl; only 1: intros; only 1: rewrite add_0_r; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_0_l	1	0.005008	0	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_odd_0	1	0.011498	4	5	0.0.0.0	synth with cache (only 1: unfold Init.Nat.testbit; only 1: rewrite odd_spec; only 1: exists a; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_even_0	1	0.008010	3	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	1	0.015508	5	6	0.0.0.0.0	synth with cache (only 1: unfold Init.Nat.testbit; only 1: fold Init.Nat.testbit; only 1: rewrite add_1_r; only 1: f_equal; only 1: apply div2_succ_double).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_even_succ'	1	0.014001	4	5	0.0.0.0	synth with cache (only 1: unfold Init.Nat.testbit; only 1: fold Init.Nat.testbit; only 1: f_equal; only 1: apply div2_double).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.shiftr_specif	1	0.005391	0	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.shiftl_specif_high	1	0.005890	0	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.shiftl_spec_low	1	0.005733	0	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div2_bitwise	1	0.021026	4	6
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.odd_bitwise	1	0.082531	4	6
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	1	0.015476	2	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	1	0.011592	2	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.land_spec	1	0.010339	4	5	0.0.0.0	synth with cache (only 1: unfold Init.Nat.land; only 1: apply testbit_bitwise_1; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.ldiff_spec	1	0.010383	4	5	0.0.0.0	synth with cache (only 1: unfold Init.Nat.ldiff; only 1: apply testbit_bitwise_1; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.lor_spec	1	0.006559	4	5
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.lxor_spec	1	0.007571	4	5
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div2_spec	1	0.005634	1	2	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_neg_r	1	0.008051	1	2	0	synth with cache (only 1: inversion H).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.tail_add_spec	1	0.018096	9	10	0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHn; only 1: rewrite add_succ_r; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.tail_addmul_spec	1	0.023242	11	12	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert m r; only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHn; only 1: rewrite tail_add_spec; only 1: rewrite add_assoc; only 1: f_equal; only 1: apply add_comm).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.tail_mul_spec	1	0.017152	3	4	0.0.0	synth with cache (only 1: unfold Init.Nat.tail_mul; only 1: rewrite tail_addmul_spec; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.TestOrder.test	1	0.014869	6	6	1	synth with cache (only 1: Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.not_all_not_ex	1	0.036478	10	11	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply NNPP; only 1: intros ?; only 1: apply H; only 1: intros ?; only 1: intros ?; only 1: apply H0; only 1: exists n; only 1: exact H1).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.not_all_ex_not	1	0.051618	3	4
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.not_ex_all_not	1	0.030061	8	9	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold not; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: exists n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.not_ex_not_all	1	0.045957	9	10	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply NNPP; only 1: red; only 1: intros ?; only 1: apply H; only 1: exists n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.ex_not_not_all	1	0.028994	6	7	0.0.0.0.0.0	synth with cache (only 1: unfold not; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.all_not_not_ex	1	0.027613	9	10	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold not; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: intros ?; only 1: intros ?; only 1: apply H with x; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Update_OT.lt_strorder	1	0.035186	4	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Update_OT.lt_compat	1	0.053172	11	12
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Update_OT.compare_spec	1	0.150312	6	7	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold compare; only 1: destruct O.compare; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	1	0.030118	6	7
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Backport_OT.lt_trans	1	0.025224	1	2	0	synth with cache (only 1: apply O.lt_strorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Backport_OT.compare	1	0.019412	3	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	1	0.032854	5	7
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	1	0.053376	8	9
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	1	0.030417	7	9
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	1	0.037258	7	9
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	1	0.090477	26	28
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	1	0.037473	4	6
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	1	0.054277	9	10	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold eq; only 1: case O.compare; only 1: left; only 1: auto; only 1: right; only 1: discriminate; only 1: right; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	1	0.109263	5	6
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	1	0.089561	17	16
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	1	0.069828	15	14
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	1	0.028995	5	6	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite compare_sym; only 1: rewrite CompOpp_iff; only 1: apply compare_Lt).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	1	0.151466	26	27	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct c; only 1: unfold compare; only 1: rewrite compare_Eq; only 1: rewrite compare_Eq; only 1: rewrite compare_Eq; only 1: transitivity y; only 1: auto; only 1: auto; only 1: unfold compare; only 1: rewrite compare_Lt; only 1: rewrite compare_Lt; only 1: rewrite compare_Lt; only 1: transitivity y; only 1: auto; only 1: auto; only 1: unfold compare; only 1: rewrite compare_Gt; only 1: rewrite compare_Gt; only 1: rewrite compare_Gt; only 1: transitivity y; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Binary.ZBinary.TestOrder.test	1	0.023477	2	3	0.0	synth with cache (only 1: intros; only 1: auto using BinInt.Z.le_antisymm).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.singleton_spec	1	0.029048	2	3	0.0	synth with cache (only 1: unfold singleton; only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.singleton_ok	1	0.008790	2	3	0.0	synth with cache (only 1: unfold singleton; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.create_spec	1	0.044487	7	8	0.0.0.0.0.0.0	synth with cache (only 1: unfold create; only 1: split; only 1: inversion_clear 1; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.create_ok	1	0.012565	2	3	0.0	synth with cache (only 1: unfold create; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.bal_spec	1	0.012130	3	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.bal_ok	1	0.275364	114	115	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: functional induction bal l x r; only 1: inv; only 1: apply create_ok; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: inv; only 1: apply create_ok; only 1: auto; only 1: apply create_ok; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: unfold create; only 1: apply gt_tree_node; only 1: auto; only 1: eapply gt_tree_trans; only 1: eauto; only 1: auto; only 1: auto; only 1: inv; only 1: apply create_ok; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: inv; only 1: apply create_ok; only 1: apply create_ok; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: apply create_ok; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: unfold create; only 1: apply lt_tree_node; only 1: eapply lt_tree_trans; only 1: eauto; only 1: auto; only 1: auto; only 1: auto; only 1: unfold create; only 1: apply gt_tree_node; only 1: auto; only 1: eapply gt_tree_trans; only 1: eauto; only 1: auto; only 1: auto; only 1: inv; only 1: apply create_ok; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: inv; only 1: apply create_ok; only 1: apply create_ok; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: unfold create; only 1: apply lt_tree_node; only 1: eapply lt_tree_trans; only 1: eauto; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: inv; only 1: apply create_ok; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: inv; only 1: apply create_ok; only 1: apply create_ok; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: apply create_ok; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: unfold create; only 1: apply lt_tree_node; only 1: eapply lt_tree_trans; only 1: eauto; only 1: auto; only 1: auto; only 1: auto; only 1: unfold create; only 1: apply gt_tree_node; only 1: auto; only 1: eapply gt_tree_trans; only 1: eauto; only 1: auto; only 1: auto; only 1: apply create_ok; only 1: auto; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec'	1	0.008711	0	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec	1	0.010373	2	3	0.0	synth with cache (only 1: intros; only 1: apply add_spec').
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.add_ok	1	0.078515	19	20	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induct s x; only 1: auto; only 1: auto; only 1: apply bal_ok; only 1: auto; only 1: auto; only 1: intros ?; only 1: rewrite add_spec'; only 1: intuition; only 1: order; only 1: auto; only 1: apply bal_ok; only 1: auto; only 1: auto; only 1: auto; only 1: intros ?; only 1: rewrite add_spec'; only 1: intuition; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.join_spec	1	0.008704	0	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.join_ok	1	0.165846	32	33	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: join_tac; only 1: auto with *; only 1: auto with *; only 1: inv; only 1: apply bal_ok; only 1: auto; only 1: auto; only 1: auto; only 1: clear Hrl Hlr; only 1: intros ?; only 1: intros; only 1: rewrite join_spec in *; only 1: intuition; only 1: setoid_replace y with x; only 1: eauto; only 1: eauto; only 1: eauto; only 1: inv; only 1: apply bal_ok; only 1: auto; only 1: auto; only 1: clear Hrl Hlr; only 1: intros ?; only 1: intros; only 1: rewrite join_spec in *; only 1: intuition; only 1: setoid_replace y with x; only 1: eauto; only 1: eauto; only 1: eauto; only 1: auto; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	1	0.013853	4	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	1	0.009353	1	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_gt_tree	1	0.017301	4	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.merge_spec	1	0.011412	3	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.merge_ok	1	0.010665	1	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_spec	1	0.020475	0	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_ok	1	0.076576	24	25	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induct s x; only 1: auto; only 1: apply merge_ok; only 1: eauto; only 1: eauto; only 1: eauto; only 1: apply bal_ok; only 1: auto; only 1: auto; only 1: intros ?; only 1: rewrite remove_spec; only 1: destruct 1; only 1: eauto; only 1: auto; only 1: auto; only 1: apply bal_ok; only 1: auto; only 1: auto; only 1: auto; only 1: intros ?; only 1: rewrite remove_spec; only 1: destruct 1; only 1: eauto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.concat_spec	1	0.013607	3	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.concat_ok	1	0.011031	1	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec1	1	0.009940	0	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec2	1	0.009873	0	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec3	1	0.010142	0	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok	1	0.009388	0	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok1	1	0.011411	1	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok2	1	0.009792	1	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.inter_spec_ok	1	0.013603	2	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.inter_spec	1	0.011478	2	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.inter_ok	1	0.010990	1	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.diff_spec_ok	1	0.063706	11	13
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.diff_spec	1	0.018865	2	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.diff_ok	1	0.012623	1	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.union_spec	1	0.086609	14	16
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.union_ok	1	0.043946	9	11
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.filter_spec	1	0.014596	0	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.filter_weak_spec	1	0.014995	0	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.filter_ok	1	0.016763	4	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec1'	1	0.049960	11	12	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction s; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- IHs1; only 1: rewrite <- IHs2; only 1: destruct partition; only 1: destruct partition; only 1: destruct f; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec2'	1	0.067203	11	12	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction s; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- IHs1; only 1: rewrite <- IHs2; only 1: destruct partition; only 1: destruct partition; only 1: destruct f; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec1	1	0.015952	2	3	0.0	synth with cache (only 1: rewrite partition_spec1'; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec2	1	0.016642	2	3	0.0	synth with cache (only 1: rewrite partition_spec2'; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_ok1	1	0.015253	3	4	0.0.0	synth with cache (only 1: rewrite partition_spec1'; only 1: apply filter_ok; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_ok2	1	0.017629	3	4	0.0.0	synth with cache (only 1: rewrite partition_spec2'; only 1: apply filter_ok; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_comm	1	0.033893	0	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_succ	1	0.036127	0	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_add	1	0.071843	1	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.pow_N_pow_N	1	0.052145	2	3	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_mul_0_l	1	0.037974	4	4
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_mul_0_r	1	0.040211	2	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_mul_l	1	0.044812	5	7
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_mul_r	1	0.031266	3	5
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_add	1	0.072657	5	7
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_opp	1	0.029859	2	4
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_sub_ext	1	0.026998	2	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_add_0_r	1	0.035671	4	6
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_add_assoc1	1	0.040586	4	6
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_add_assoc2	1	0.056975	4	6
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_zero	1	0.069504	1	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalDescription.excluded_middle_informative	1	0.024079	1	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalDescription.classical_definite_description	1	0.024030	4	5
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalDescription.dependent_unique_choice	1	0.111880	5	6
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalDescription.unique_choice	1	0.043092	3	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.of_to	1	0.024585	3	4	0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Unsigned.of_to).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.to_of	1	0.018864	1	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.to_uint_inj	1	0.028354	2	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.to_uint_surj	1	0.031393	1	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.of_uint_norm	1	0.049123	12	13	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.of_inj	1	0.034057	5	6	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- to_of; only 1: rewrite <- to_of; only 1: f_equal; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.of_iff	1	0.049271	10	11	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- to_of; only 1: rewrite <- to_of; only 1: f_equal; only 1: easy; only 1: intros ?; only 1: rewrite <- of_uint_norm; only 1: rewrite H; only 1: apply of_uint_norm).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.of_to	1	0.033477	8	9	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold BinNatDef.N.to_int; only 1: unfold BinNatDef.N.of_int; only 1: unfold norm; only 1: f_equal; only 1: rewrite Unsigned.of_uint_norm; only 1: destruct n; only 1: reflexivity; only 1: apply DecimalPos.Unsigned.of_to).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.to_of	1	0.041837	1	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.to_int_inj	1	0.028069	2	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.to_int_pos_surj	1	0.030966	1	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.of_int_norm	1	0.040054	3	4	0.0.0	synth with cache (only 1: unfold BinNatDef.N.of_int; only 1: rewrite norm_invol; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.of_inj_pos	1	0.037873	5	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.eq_bool_alt	1	0.036656	5	6	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	1	0.041852	18	19	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: subst; only 1: split; only 1: auto; only 1: auto; only 1: intros; only 1: destruct o; only 1: destruct o'; only 1: rewrite H; only 1: auto; only 1: symmetry; only 1: rewrite <- H; only 1: auto; only 1: destruct o'; only 1: rewrite H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.MapsTo_fun	1	0.021959	2	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_iff	1	0.025888	6	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.MapsTo_iff	1	0.022471	5	6	0.0.0.0.0	synth with cache (only 1: split; only 1: apply MapsTo_1; only 1: auto; only 1: apply MapsTo_1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mem_in_iff	1	0.020114	3	4	0.0.0	synth with cache (only 1: split; only 1: apply mem_1; only 1: apply mem_2).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_mem_in_iff	1	0.032012	5	6	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mem_in_iff; only 1: destruct mem; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_dec	1	0.015512	2	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.find_mapsto_iff	1	0.020107	3	4	0.0.0	synth with cache (only 1: split; only 1: apply find_1; only 1: apply find_2).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_find_in_iff	1	0.046070	17	18	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite eq_option_alt; only 1: intros ?; only 1: rewrite <- find_mapsto_iff; only 1: split; only 1: intros ?; only 1: elim H; only 1: exists e; only 1: auto; only 1: discriminate; only 1: intros; only 1: intros ?; only 1: destruct H0; only 1: rewrite find_mapsto_iff in H0; only 1: rewrite H in H0; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.in_find_iff	1	0.117932	6	7	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- not_find_in_iff; only 1: rewrite mem_in_iff; only 1: destruct mem; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.equal_iff	1	0.018469	3	4	0.0.0	synth with cache (only 1: split; only 1: apply equal_1; only 1: apply equal_2).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_mapsto_iff	1	0.033570	2	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_in_iff	1	0.021963	7	8	0.0.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: split; only 1: intros ?; only 1: destruct H; only 1: rewrite empty_mapsto_iff in H; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.is_empty_iff	1	0.017979	3	4	0.0.0	synth with cache (only 1: split; only 1: apply is_empty_1; only 1: apply is_empty_2).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_mapsto_iff	1	0.084892	3	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_in_iff	1	0.025393	5	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_mapsto_iff	1	0.020202	5	6	0.0.0.0.0	synth with cache (only 1: split; only 1: apply add_3; only 1: auto; only 1: apply add_2; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_in_iff	1	0.019135	5	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_mapsto_iff	1	0.022177	5	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_in_iff	1	0.029335	6	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_mapsto_iff	1	0.052769	4	5	0.0.0.0	synth with cache (only 1: split; only 1: apply remove_3; only 1: apply remove_2; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_in_iff	1	0.047632	5	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_mapsto_iff	1	0.038543	3	4	0.0.0	synth with cache (only 1: split; only 1: apply elements_1; only 1: apply elements_2).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_in_iff	1	0.062910	12	13	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: split; only 1: intros ?; only 1: destruct H; only 1: exists x0; only 1: apply elements_1; only 1: auto; only 1: intros ?; only 1: destruct H; only 1: exists x0; only 1: apply elements_2; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_mapsto_iff	1	0.053155	2	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_in_iff	1	0.039135	2	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_in_iff	1	0.050951	6	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_inv	1	0.033527	2	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_1bis	1	0.080531	2	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_mapsto_iff	1	0.035993	3	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_find_b	1	0.026661	2	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_b	1	0.049001	2	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.find_o	1	0.042290	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intros ?; only 1: rewrite <- find_mapsto_iff; only 1: rewrite <- find_mapsto_iff; only 1: apply MapsTo_iff; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_o	1	0.157726	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intros ?; only 1: rewrite <- find_mapsto_iff; only 1: rewrite empty_mapsto_iff; only 1: intuition; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_a	1	0.030635	2	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_o	1	0.023503	1	2	0	synth with cache (only 1: auto with map).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_o	1	0.046185	8	8	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intros ?; only 1: rewrite <- find_mapsto_iff; only 1: rewrite <- find_mapsto_iff; only 1: apply add_neq_mapsto_iff; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_o	1	0.043200	4	5	0.0.0.0	synth with cache (only 1: intros; only 1: destruct eq_dec; only 1: auto with map; only 1: auto with map).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_b	1	0.050671	5	6	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mem_find_b; only 1: rewrite add_eq_o; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_b	1	0.062319	6	7	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mem_find_b; only 1: rewrite mem_find_b; only 1: rewrite add_neq_o; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_b	1	0.052350	10	11	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mem_find_b; only 1: rewrite mem_find_b; only 1: rewrite add_o; only 1: unfold eqb; only 1: destruct eq_dec; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_o	1	0.102641	9	9	0.0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intros ?; only 1: rewrite <- find_mapsto_iff; only 1: rewrite remove_mapsto_iff; only 1: intuition; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_o	1	0.052894	8	8	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intros ?; only 1: rewrite <- find_mapsto_iff; only 1: rewrite remove_neq_mapsto_iff; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_o	1	0.029934	4	5	0.0.0.0	synth with cache (only 1: intros; only 1: destruct eq_dec; only 1: auto with map; only 1: auto with map).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_b	1	0.029342	5	6	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mem_find_b; only 1: rewrite remove_eq_o; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_b	1	0.037503	6	7	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mem_find_b; only 1: rewrite mem_find_b; only 1: rewrite remove_neq_o; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_b	1	0.046125	8	9	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mem_find_b; only 1: rewrite mem_find_b; only 1: rewrite remove_o; only 1: unfold eqb; only 1: destruct eq_dec; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_o	1	0.032860	2	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_b	1	0.042491	9	10	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mem_find_b; only 1: rewrite mem_find_b; only 1: rewrite map_o; only 1: destruct find; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_b	1	0.029306	2	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_o	1	0.053095	2	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map2_1bis	1	0.033341	2	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_o	1	0.061262	7	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_b	1	0.052648	2	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_mapsto_iff	1	0.143619	9	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equiv	1	0.080436	26	27
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Cmp.Equiv_Equivb	1	0.121120	10	11	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Equivb; only 1: unfold Equiv; only 1: unfold Cmp; only 1: intuition; only 1: red in H; only 1: rewrite H; only 1: eauto; only 1: red in H; only 1: rewrite <- H; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb	1	0.030526	4	5	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Equal_Equiv; only 1: apply Equiv_Equivb; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb_eqdec	1	0.052203	9	10	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Equal_Equivb; only 1: unfold cmp; only 1: clear cmp; only 1: intros; only 1: destruct eq_elt_dec; only 1: intuition; only 1: intuition; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	1	0.038024	2	3	0.0	synth with cache (only 1: red; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_sym	1	0.040706	2	3	0.0	synth with cache (only 1: unfold Equal; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_trans	1	0.027230	2	3	0.0	synth with cache (only 1: unfold Equal; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_ST	1	0.026431	7	8	0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: red; only 1: apply Equal_refl; only 1: red; only 1: apply Equal_sym; only 1: red; only 1: apply Equal_trans).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.In_m_Proper	1	0.038169	8	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.MapsTo_m_Proper	1	0.040040	9	11
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Empty_m_Proper	1	0.091242	15	16	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Empty; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros; only 1: intros ?; only 1: rewrite <- H in H1; only 1: eapply H0; only 1: eapply H1; only 1: intros; only 1: intros ?; only 1: rewrite H in H1; only 1: eapply H0; only 1: eapply H1).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.is_empty_m_Proper	1	0.051973	8	9	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite eq_bool_alt; only 1: rewrite <- is_empty_iff; only 1: rewrite <- is_empty_iff; only 1: rewrite H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.mem_m_Proper	1	0.048083	12	13	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite eq_bool_alt; only 1: rewrite <- mem_in_iff; only 1: rewrite <- mem_in_iff; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.find_m_Proper	1	0.055217	15	16	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite eq_option_alt; only 1: intros ?; only 1: rewrite <- find_mapsto_iff; only 1: rewrite <- find_mapsto_iff; only 1: rewrite H; only 1: rewrite H0; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.add_m_Proper	1	0.065850	21	22	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_o; only 1: rewrite add_o; only 1: destruct eq_dec; only 1: destruct eq_dec; only 1: auto; only 1: elim n; only 1: rewrite <- H; only 1: auto; only 1: destruct eq_dec; only 1: elim n; only 1: rewrite H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	1	0.073687	20	21	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite remove_o; only 1: rewrite remove_o; only 1: destruct eq_dec; only 1: destruct eq_dec; only 1: auto; only 1: elim n; only 1: rewrite <- H; only 1: auto; only 1: destruct eq_dec; only 1: elim n; only 1: rewrite H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.map_m_Proper	1	0.060558	9	10	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite map_o; only 1: rewrite map_o; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.eqk_equiv	1	0.034259	5	6	0.0.0.0.0	synth with cache (only 1: unfold eq_key; only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.eqke_equiv	1	0.062425	10	11	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold eq_key_elt; only 1: split; only 1: red; only 1: firstorder; only 1: red; only 1: firstorder; only 1: red; only 1: firstorder; only 1: eauto with *; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.InA_eqke_eqk	1	0.083044	15	16
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.NoDupA_eqk_eqke	1	0.127953	4	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.findA_rev	1	0.024458	2	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_Empty	1	0.024628	5	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_empty	1	0.022270	2	3	0.0	synth with cache (only 1: rewrite <- elements_Empty; only 1: apply empty_1).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1	1	0.016620	0	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1b	1	0.019641	0	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_2	1	0.047803	8	9	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct x; only 1: rewrite <- elements_mapsto_iff; only 1: rewrite of_list_1; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_3	1	0.036117	6	7	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite of_list_1b; only 1: rewrite elements_o; only 1: auto; only 1: apply elements_3w).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_spec_right	1	0.034937	3	4	0.0.0	synth with cache (only 1: rewrite fold_1; only 1: symmetry; only 1: apply fold_left_rev_right).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec	1	0.060475	8	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_bis	1	0.075006	11	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_nodep	1	0.029887	2	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_weak	1	0.059645	5	6	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply fold_rec_bis; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rel	1	0.063074	12	14
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction	1	0.023054	2	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction_bis	1	0.022610	2	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_identity	1	0.023545	1	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_init	1	0.026609	1	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Empty	1	0.018831	1	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_commutes	1	0.031362	5	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal	1	0.046939	4	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal2	1	0.029108	4	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Add	1	0.031691	3	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_add	1	0.030685	6	7	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply fold_Add; only 1: red; only 1: auto; only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_fold	1	0.028295	5	6	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_1; only 1: rewrite fold_1; only 1: symmetry; only 1: apply fold_left_length).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_Empty	1	0.115647	8	9	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_1; only 1: rewrite elements_Empty; only 1: destruct elements; only 1: intuition; only 1: intuition; only 1: discriminate; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Equal_cardinal	1	0.019907	3	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_1	1	0.023511	3	4	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- cardinal_Empty; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_2	1	0.035093	4	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_1	1	0.021342	3	4	0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_Empty; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2	1	0.027153	3	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2b	1	0.023264	2	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.filter_iff	1	0.025425	1	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.for_all_iff	1	0.021880	1	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.exists_iff	1	0.020611	1	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_alt	1	0.065879	22	24
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_1	1	0.038508	6	7	0.0.0.0.0.0	synth with cache (only 1: unfold partition; only 1: simpl; only 1: intros; only 1: subst m1; only 1: apply filter_iff; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_2	1	0.105148	29	30	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold partition; only 1: simpl; only 1: intros; only 1: subst m2; only 1: rewrite filter_iff; only 1: split; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: destruct f; only 1: simpl in *; only 1: auto; only 1: simpl in *; only 1: auto; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: rewrite H0; only 1: auto; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: f_equal; only 1: apply Hf; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_Partition	1	0.046184	7	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_In	1	0.031757	7	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_sym	1	0.023961	7	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_sym	1	0.058947	11	12	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: apply Disjoint_sym; only 1: auto; only 1: intros; only 1: rewrite H0; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Empty	1	0.044606	12	13
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Add	1	0.123413	12	13
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_fold	1	0.056458	6	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_cardinal	1	0.028760	3	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_partition	1	0.032380	6	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.update_mapsto_iff	1	0.025904	4	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.update_dec	1	0.033708	7	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.update_in_iff	1	0.046837	15	16
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_mapsto_iff	1	0.113527	21	22	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold diff; only 1: rewrite filter_iff; only 1: intuition; only 1: rewrite mem_1 in *; only 1: discriminate; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H0; only 1: clear y0; only 1: clear x0; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_in_iff	1	0.047940	18	19	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H; only 1: rewrite diff_mapsto_iff in H; only 1: destruct H; only 1: split; only 1: exists x; only 1: auto; only 1: auto; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: exists x; only 1: rewrite diff_mapsto_iff; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_mapsto_iff	1	0.059802	18	19	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold restrict; only 1: rewrite filter_iff; only 1: intuition; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H0; only 1: clear y0; only 1: clear x0; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_in_iff	1	0.055928	18	19	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H; only 1: rewrite restrict_mapsto_iff in H; only 1: destruct H; only 1: split; only 1: exists x; only 1: auto; only 1: auto; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: exists x; only 1: rewrite restrict_mapsto_iff; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.cardinal_m_Proper	1	0.016239	3	4	0.0.0	synth with cache (only 1: intros; only 1: apply Equal_cardinal; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	1	0.102279	16	17	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Disjoint; only 1: split; only 1: intros; only 1: rewrite <- H; only 1: rewrite <- H0; only 1: auto; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Partition_m_Proper	1	0.176758	31	32	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Partition; only 1: rewrite <- H0; only 1: rewrite <- H1; only 1: split; only 1: intros ?; only 1: destruct H2; only 1: split; only 1: auto; only 1: intros; only 1: rewrite <- H; only 1: rewrite <- H0; only 1: rewrite <- H1; only 1: auto; only 1: intros ?; only 1: destruct H2; only 1: split; only 1: auto; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: rewrite H1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.update_m_Proper	1	0.026537	7	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.restrict_m_Proper	1	0.026312	7	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.diff_m_Proper	1	0.022415	7	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.sort_equivlistA_eqlistA	1	0.022155	4	5	0.0.0.0	synth with cache (only 1: apply SortA_equivlistA_eqlistA; only 1: eauto with *; only 1: eauto with *; only 1: eauto with *).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_1	1	0.074280	15	16	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct p; only 1: intros ?; only 1: destruct p'; only 1: unfold gtb; only 1: unfold O.ltk; only 1: simpl; only 1: destruct E.compare; only 1: intuition; only 1: discriminate; only 1: order; only 1: intuition; only 1: discriminate; only 1: order; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_1	1	0.069997	14	15	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct p; only 1: intros ?; only 1: destruct p'; only 1: unfold leb; only 1: unfold gtb; only 1: unfold O.ltk; only 1: simpl; only 1: destruct E.compare; only 1: intuition; only 1: order; only 1: intuition; only 1: order; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_compat	1	0.037487	12	14
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_compat	1	0.021370	9	10	0.0.0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold leb; only 1: f_equal; only 1: apply gtb_compat; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_split	1	0.020680	4	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add	1	0.025810	6	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Above	1	0.019994	4	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Below	1	0.021713	4	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Equal_eqlistA	1	0.042719	15	16	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply sort_equivlistA_eqlistA; only 1: auto with *; only 1: auto with *; only 1: red; only 1: intros; only 1: destruct x; only 1: rewrite <- elements_mapsto_iff; only 1: rewrite <- elements_mapsto_iff; only 1: rewrite find_mapsto_iff; only 1: rewrite find_mapsto_iff; only 1: rewrite H; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Above	1	0.028867	8	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_MapsTo	1	0.056215	17	18	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold max_elt in *; only 1: rewrite elements_mapsto_iff; only 1: induction elements; only 1: discriminate; only 1: destruct a; only 1: destruct l; only 1: simpl in *; only 1: injection H; only 1: intros; only 1: subst; only 1: constructor; only 1: red; only 1: auto with ordered_type; only 1: simpl in *; only 1: constructor 2; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Empty	1	0.035814	11	13
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Below	1	0.048887	8	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_MapsTo	1	0.049281	12	13	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold min_elt in *; only 1: rewrite elements_mapsto_iff; only 1: destruct elements; only 1: discriminate; only 1: destruct p; only 1: injection H; only 1: intros; only 1: subst; only 1: constructor; only 1: red; only 1: auto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Empty	1	0.039866	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold min_elt in *; only 1: rewrite elements_Empty; only 1: destruct elements; only 1: auto; only 1: destruct p; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_max	1	0.017118	1	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_min	1	0.016923	1	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Equal	1	0.037030	11	13
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Above	1	0.024511	3	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Below	1	0.027560	3	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	1	0.027140	9	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	1	0.017234	1	2	0	synth with cache (only 1: apply to_Z_rec_bounded).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	1	0.021033	2	3	0.0	synth with cache (only 1: apply Z.div_lt_upper_bound; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	1	0.019337	0	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	1	0.029935	10	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	1	0.018324	5	6	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Z.lt_gt; only 1: apply Z.pow_pos_nonneg; only 1: lia; only 1: lia).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	1	0.014291	2	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.wB_diff_0	1	0.013145	1	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.wB_pos	1	0.014082	1	2	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	1	0.013308	1	2	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_1	1	0.013844	1	2	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.can_inj	1	0.016349	1	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_inj	1	0.013734	1	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	1	0.021635	6	7	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: rewrite eqb_refl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_spec	1	0.022558	6	7	0.0.0.0.0.0	synth with cache (only 1: split; only 1: auto using eqb_correct, eqb_complete; only 1: intros ?; only 1: rewrite H; only 1: rewrite eqb_refl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_false_spec	1	0.022348	6	7	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- not_true_iff_false; only 1: rewrite eqb_spec; only 1: split; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	1	0.046117	4	5	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite eqb_false_spec; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_false_correct	1	0.024309	4	5	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite eqb_false_spec; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eq_dec	1	0.024594	3	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.cast_refl	1	0.030146	3	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.cast_diff	1	0.027105	3	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	1	0.026994	3	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	1	0.027278	3	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqbP	1	0.025904	5	6	0.0.0.0.0	synth with cache (only 1: apply iff_reflect; only 1: rewrite eqb_spec; only 1: split; only 1: apply to_Z_inj; only 1: apply f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.ltbP	1	0.023985	3	4	0.0.0	synth with cache (only 1: apply iff_reflect; only 1: symmetry; only 1: apply ltb_spec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lebP	1	0.022192	3	4	0.0.0	synth with cache (only 1: apply iff_reflect; only 1: symmetry; only 1: apply leb_spec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.compare_spec	1	0.036175	13	14	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite compare_def_spec; only 1: unfold compare_def; only 1: case ltbP; only 1: auto using Z.compare_lt_iff; only 1: intros ?; only 1: case eqbP; only 1: symmetry; only 1: apply Z.compare_eq_iff; only 1: easy; only 1: intros ?; only 1: symmetry; only 1: apply Z.compare_gt_iff; only 1: lia).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_zero_spec	1	0.022738	1	2	0	synth with cache (only 1: apply eqb_spec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.diveucl_spec	1	0.031107	8	9	0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite diveucl_def_spec; only 1: unfold diveucl_def; only 1: rewrite div_spec; only 1: rewrite mod_spec; only 1: unfold BinIntDef.Z.div; only 1: unfold BinIntDef.Z.modulo; only 1: destruct BinIntDef.Z.div_eucl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.addc_spec	1	0.026360	4	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.succ_spec	1	0.024049	1	2	0	synth with cache (only 1: apply add_spec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.succc_spec	1	0.020310	1	2	0	synth with cache (only 1: apply addc_spec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.addcarry_spec	1	0.027519	5	6	0.0.0.0.0	synth with cache (only 1: unfold addcarry; only 1: rewrite add_spec; only 1: rewrite add_spec; only 1: rewrite Zplus_mod_idemp_l; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.addcarryc_spec	1	0.026356	4	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.subc_spec	1	0.028766	4	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.pred_spec	1	0.025499	1	2	0	synth with cache (only 1: apply sub_spec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.predc_spec	1	0.024952	1	2	0	synth with cache (only 1: apply subc_spec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.oppc_spec	1	0.027136	4	5	0.0.0.0	synth with cache (only 1: unfold oppc; only 1: rewrite subc_spec; only 1: rewrite to_Z_0; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.opp_spec	1	0.024941	4	5	0.0.0.0	synth with cache (only 1: unfold opp; only 1: rewrite sub_spec; only 1: rewrite to_Z_0; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.oppcarry_spec	1	0.030453	6	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	1	0.029943	5	6	0.0.0.0.0	synth with cache (only 1: unfold subcarry; only 1: rewrite sub_spec; only 1: rewrite sub_spec; only 1: rewrite Zminus_mod_idemp_l; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	1	0.034136	4	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_gcd	1	0.037420	9	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.gcd_spec	1	0.031710	5	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.head00_spec	1	0.020383	2	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.tail00_spec	1	0.023138	2	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqm_mod	1	0.028242	5	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqm_sub	1	0.038529	6	7	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold eqm; only 1: rewrite Zminus_mod; only 1: rewrite H; only 1: rewrite Z.sub_diag; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqmE	1	0.026433	2	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	1	0.041005	9	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.int_eqm	1	0.029271	4	5	0.0.0.0	synth with cache (only 1: unfold eqm; only 1: intros ?; only 1: intropattern subst -> H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqmI	1	0.030325	6	7	0.0.0.0.0.0	synth with cache (only 1: unfold eqm; only 1: rewrite Zmod_small; only 1: rewrite Zmod_small; only 1: apply to_Z_inj; only 1: apply to_Z_bounded; only 1: apply to_Z_bounded).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.add_assoc	1	0.048209	9	10	0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite add_spec; only 1: rewrite add_spec; only 1: rewrite add_spec; only 1: rewrite add_spec; only 1: rewrite Zplus_mod_idemp_l; only 1: rewrite Zplus_mod_idemp_r; only 1: rewrite Z.add_assoc; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.add_comm	1	0.032837	5	6	0.0.0.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite add_spec; only 1: rewrite add_spec; only 1: rewrite Z.add_comm; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.add_le_r	1	0.027902	1	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.add_cancel_l	1	1.014995	1470	1484
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.add_cancel_r	1	1.016652	2158	2176
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr0	1	0.026640	3	4	0.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	1	0.032452	4	5	0.0.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: rewrite Zdiv_1_r; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_1	1	0.029863	3	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_add	1	0.029619	1	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl0	1	0.029494	2	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	1	0.033375	6	7	0.0.0.0.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite lsl_spec; only 1: rewrite to_Z_0; only 1: rewrite Z.mul_1_r; only 1: apply Zmod_small; only 1: apply to_Z_bounded).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	1	0.038160	8	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_M_r	1	0.033442	4	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_0_spec	1	0.030103	4	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_split	1	0.034998	7	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	1	0.030359	5	6	0.0.0.0.0	synth with cache (only 1: unfold bit; only 1: rewrite lsr_add; only 1: case Int63.leb; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_b2i	1	0.037850	13	14	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: case b; only 1: unfold bit; only 1: simpl b2i; only 1: rewrite lsr_1; only 1: case Int63.eqb; only 1: auto; only 1: auto; only 1: unfold bit; only 1: simpl b2i; only 1: rewrite lsr0; only 1: rewrite lsl0; only 1: rewrite andb_false_r; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_1	1	0.034938	7	8	0.0.0.0.0.0.0	synth with cache (only 1: unfold bit; only 1: rewrite lsr_1; only 1: case Int63.eqb; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_split	1	0.026480	1	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_M	1	0.031689	4	5	0.0.0.0	synth with cache (only 1: unfold bit; only 1: rewrite lsr_M_r; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_half	1	0.035335	3	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_ext	1	0.029685	1	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	1	0.030672	1	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lor_lsr	1	0.037387	10	11	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite lor_spec; only 1: rewrite bit_lsr; only 1: rewrite bit_lsr; only 1: rewrite bit_lsr; only 1: rewrite lor_spec; only 1: case Int63.leb; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lor_le	1	0.035948	1	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_0	1	0.034934	3	4	0.0.0	synth with cache (only 1: unfold bit; only 1: rewrite lsr0; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_add_or	1	0.035381	1	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.addmuldiv_spec	1	0.038242	2	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_bit	1	0.034677	2	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_spec	1	0.043850	2	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_0	1	0.031857	1	2	0	synth with cache (only 1: apply @eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_lsl_1	1	0.032236	3	4	0.0.0	synth with cache (only 1: rewrite is_even_bit; only 1: rewrite bit_lsl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.quotient_by_2	1	0.032868	1	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_main_trick	1	0.045227	13	15
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_main	1	0.032320	3	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_false	1	0.034762	4	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	1	0.034162	5	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_step_correct	1	0.032017	1	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	1	0.115418	17	19
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	1	0.036333	2	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_spec	1	0.046440	9	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_def	1	0.048488	7	8	0.0.0.0.0.0.0	synth with cache (only 1: unfold sqrt2_step; only 1: case diveucl_21; only 1: intros; only 1: simpl; only 1: case addc; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt2_lower_bound	1	0.036050	2	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.diveucl_21_spec_aux	1	0.043844	6	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.div2_phi	1	0.039403	3	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_correct	1	0.034422	1	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	1	0.120752	16	18
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt2_spec	1	0.047706	5	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.of_pos_rec_spec	1	0.045536	14	15
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_int	1	0.058450	15	16	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: intros ?; only 1: destruct H; only 1: clear H; only 1: simpl; only 1: unfold of_pos; only 1: rewrite of_pos_rec_spec; only 1: symmetry; only 1: apply Z.mod_small; only 1: split; only 1: lia; only 1: exact H0; only 1: lia; only 1: lia).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.of_Z_spec	1	0.048729	16	17	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: unfold of_pos; only 1: rewrite of_pos_rec_spec; only 1: easy; only 1: auto; only 1: simpl; only 1: unfold of_pos; only 1: rewrite opp_spec; only 1: rewrite of_pos_rec_spec; only 1: fold wB; only 1: rewrite <- Z.sub_0_l; only 1: rewrite Zminus_mod_idemp_r; only 1: easy; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.negbE	1	0.036234	3	4	0.0.0	synth with cache (only 1: intros ?; only 1: intropattern subst -> H; only 1: apply negb_involutive).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Z_oddE	1	0.036514	4	5	0.0.0.0	synth with cache (only 1: rewrite Zmod_odd; only 1: case BinIntDef.Z.odd; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Z_evenE	1	0.037395	4	5	0.0.0.0	synth with cache (only 1: rewrite Zmod_even; only 1: case BinIntDef.Z.even; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_zeroE	1	0.034502	3	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bitE	1	0.059585	5	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lt_pow_lt_log	1	0.033196	5	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.land_spec'	1	0.034002	4	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	1	0.037203	4	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lxor_spec'	1	0.037598	4	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.landC	1	0.039745	6	7	0.0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite land_spec; only 1: rewrite land_spec; only 1: rewrite andb_comm; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.landA	1	0.044015	8	9	0.0.0.0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite land_spec; only 1: rewrite land_spec; only 1: rewrite land_spec; only 1: rewrite land_spec; only 1: rewrite andb_assoc; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.land0	1	0.040022	5	6	0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite land_spec; only 1: rewrite bit_0; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.land0_r	1	0.041505	6	7	0.0.0.0.0.0	synth with cache (only 1: rewrite landC; only 1: apply bit_ext; only 1: intros ?; only 1: rewrite land_spec; only 1: rewrite bit_0; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lorC	1	0.042249	6	7	0.0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite lor_spec; only 1: rewrite lor_spec; only 1: rewrite orb_comm; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lorA	1	0.048957	8	9	0.0.0.0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite lor_spec; only 1: rewrite lor_spec; only 1: rewrite lor_spec; only 1: rewrite lor_spec; only 1: rewrite orb_assoc; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lor0	1	0.040882	5	6	0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite lor_spec; only 1: rewrite bit_0; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lor0_r	1	0.042778	6	7	0.0.0.0.0.0	synth with cache (only 1: rewrite lorC; only 1: apply bit_ext; only 1: intros ?; only 1: rewrite lor_spec; only 1: rewrite bit_0; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lxorC	1	0.039796	6	7	0.0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite lxor_spec; only 1: rewrite lxor_spec; only 1: rewrite xorb_comm; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lxorA	1	0.046371	8	9	0.0.0.0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite lxor_spec; only 1: rewrite lxor_spec; only 1: rewrite lxor_spec; only 1: rewrite lxor_spec; only 1: rewrite xorb_assoc_reverse; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lxor0	1	0.043461	6	7	0.0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite lxor_spec; only 1: rewrite bit_0; only 1: rewrite xorb_false_l; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lxor0_r	1	0.044445	7	8	0.0.0.0.0.0.0	synth with cache (only 1: rewrite lxorC; only 1: apply bit_ext; only 1: intros ?; only 1: rewrite lxor_spec; only 1: rewrite bit_0; only 1: rewrite xorb_false_l; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_0	1	0.015061	4	5	0.0.0.0	synth with cache (only 1: unfold IZR; only 1: rewrite R0_def; only 1: rewrite Rquot2; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_1	1	0.021098	5	6	0.0.0.0.0	synth with cache (only 1: unfold IZR; only 1: unfold IPR; only 1: rewrite R1_def; only 1: rewrite Rquot2; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_plus	1	0.012357	4	5	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rplus_def; only 1: rewrite Rquot2; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_opp	1	0.012110	4	5	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Ropp_def; only 1: rewrite Rquot2; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_minus	1	0.020359	6	7	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rminus; only 1: unfold CReal_minus; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_opp; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_mult	1	0.013383	4	5	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rmult_def; only 1: rewrite Rquot2; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_inv	1	0.111655	8	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_le	1	0.013516	8	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_appart	1	0.010844	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rappart_repr	1	0.013071	7	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rplus_comm	1	0.014471	5	6	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_plus; only 1: apply CReal_plus_comm).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rplus_assoc	1	0.034385	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_plus; only 1: apply CReal_plus_assoc).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rplus_opp_r	1	0.026996	6	7	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_opp; only 1: rewrite Rrepr_0; only 1: apply CReal_plus_opp_r).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rplus_0_l	1	0.019926	5	6	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Rquot1; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_0; only 1: apply CReal_plus_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rmult_comm	1	0.018562	5	6	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_mult; only 1: apply CReal_mult_comm).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rmult_assoc	1	0.030223	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_mult; only 1: apply CReal_mult_assoc).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rinv_l	1	0.030448	9	10	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite RinvImpl.Rinv_def; only 1: destruct Req_appart_dec; only 1: contradiction; only 1: apply Rquot1; only 1: rewrite Rrepr_mult; only 1: rewrite Rquot2; only 1: rewrite Rrepr_1; only 1: apply CReal_inv_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rmult_1_l	1	0.020184	5	6	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Rquot1; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_1; only 1: apply CReal_mult_1_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.R1_neq_R0	1	0.026730	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rmult_plus_distr_l	1	0.049270	8	9	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_mult; only 1: apply CReal_mult_plus_distr_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rlt_asym	1	0.018869	7	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rlt_trans	1	0.023121	7	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rplus_lt_compat_l	1	0.031762	9	10	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rlt_def in H; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_plus; only 1: apply CRealLtForget; only 1: apply CReal_plus_lt_compat_l; only 1: apply CRealLtEpsilon; only 1: exact H).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rmult_lt_compat_l	1	0.143945	15	16	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rlt_def in H; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_mult; only 1: apply CRealLtForget; only 1: apply CReal_mult_lt_compat_l; only 1: rewrite <- Rquot2; only 1: unfold IZR in H; only 1: rewrite R0_def in H; only 1: apply CRealLtEpsilon; only 1: exact H; only 1: rewrite Rlt_def in H0; only 1: apply CRealLtEpsilon; only 1: exact H0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_INR	1	0.011151	0	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_IPR2	1	0.020379	0	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_IPR	1	0.017321	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_IZR	1	0.024493	11	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.archimed	1	0.119941	35	37
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.completeness	1	0.015312	1	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.DiscrR.Rlt_R0_R2	1	0.013218	2	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.DiscrR.IZR_eq	1	0.015513	3	4	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.Req_dec	1	0.015941	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.Reqb_eq	1	0.020909	9	10	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Reqb; only 1: destruct Req_dec; only 1: auto with *; only 1: split; only 1: discriminate; only 1: intros ?; only 1: elim n; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.Rcompare_spec	1	0.107806	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rcompare; only 1: destruct total_order_T; only 1: destruct s; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.R_as_OT.lt_strorder	1	0.099383	3	4	0.0.0	synth with cache (only 1: split; only 1: exact Rlt_irrefl; only 1: exact Rlt_trans).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.R_as_OT.lt_compat	1	0.105051	9	10	0.0.0.1.0.0.0	synth with cache (only 1: red; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.R_as_OT.le_lteq	1	0.014740	2	3	0.0	synth with cache (only 1: unfold Rle; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Rsrt	1	0.097637	87	88	0.0.1.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: exact Rplus_0_l; only 1: exact Rplus_comm; only 1: intros; only 1: rewrite Rplus_assoc; only 1: auto; only 1: exact Rmult_1_l; only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_mult; only 1: apply ConstructiveCauchyRealsMult.CReal_mult_comm; only 1: intros; only 1: rewrite Rmult_assoc; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: ring; only 1: reflexivity; only 1: exact Rplus_opp_r).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Rsor	1	0.021418	13	15
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Rinv_1	1	0.017678	4	5	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Rinv_1; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qeq_true	1	0.018055	4	5	0.0.0.0	synth with cache (only 1: intros; only 1: apply Qeq_eqR; only 1: apply Qeq_bool_eq; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qeq_false	1	0.018129	5	6	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Qeq_bool_neq in H; only 1: contradict H; only 1: apply eqR_Qeq; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qle_true	1	0.018666	4	5	0.0.0.0	synth with cache (only 1: intros; only 1: apply Qle_Rle; only 1: apply Qle_bool_imp_le; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_0	1	0.015223	1	2	0	synth with cache (only 1: apply Rmult_0_l).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_1	1	0.013990	2	3	0.0	synth with cache (only 1: compute; only 1: apply Rinv_1).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_inv_ext	1	0.017217	2	4
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.QSORaddon	1	0.082523	36	37	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: constructor; only 1: apply Q2R_0; only 1: apply Q2R_1; only 1: intros; only 1: apply Q2R_plus; only 1: intros; only 1: apply Q2R_minus; only 1: unfold Qmult; only 1: unfold Q2R; only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: unfold Qden; only 1: unfold Qnum; only 1: simpl_mult; only 1: rewrite mult_IZR; only 1: rewrite mult_IZR; only 1: field; only 1: auto; only 1: intros; only 1: apply Q2R_opp; only 1: intros; only 1: apply Qeq_true; only 1: auto; only 1: apply R_power_theory; only 1: intros; only 1: apply Qeq_bool_neq in H; only 1: contradict H; only 1: apply eqR_Qeq; only 1: easy; only 1: intros; only 1: apply Qle_Rle; only 1: apply Qle_bool_imp_le; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.is_neg_true	1	0.014523	0	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.is_neg_false	1	0.013308	0	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_m_Proper	1	0.025633	10	11	1	synth with cache (only 1: exact Qeq_eqR).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_pow_pos	1	0.012960	0	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_pow_N	1	0.013014	0	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qmult_integral	1	0.032653	12	13	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct q; only 1: intros ?; only 1: destruct r; only 1: unfold Qeq; only 1: unfold Qmult; only 1: simpl; only 1: rewrite <- Z.mul_eq_0; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qpower_positive_eq_zero	1	0.013708	1	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qpower_positive_zero	1	0.033948	0	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2RpowerRZ	1	0.031535	8	9
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qpower0	1	0.029217	12	13	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct z; only 1: intros ?; only 1: elim H; only 1: reflexivity; only 1: intros ?; only 1: simpl; only 1: apply Qpower_positive_zero; only 1: intros ?; only 1: simpl; only 1: rewrite Qpower_positive_zero; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q_of_RcstR	1	0.013340	0	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Reval_formula_compat	1	0.074674	32	33	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Reval_formula; only 1: destruct f; only 1: unfold Reval_formula'; only 1: unfold Reval_expr; only 1: split; only 1: destruct Fop; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply Rge_le; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: destruct Fop; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply Rle_ge; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Reval_nformula_dec	1	0.013908	1	2
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.RWeakChecker_sound	1	0.019319	6	7
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.RTautoChecker_sound	1	0.019877	5	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_locally_ext	1	0.027727	10	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_plus	1	0.025453	7	8	0.0.0.0.0.0.0	synth with cache (only 1: unfold continuity_pt; only 1: unfold plus_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_plus; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_opp	1	0.023098	6	7	0.0.0.0.0.0	synth with cache (only 1: unfold continuity_pt; only 1: unfold opp_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_Ropp; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_minus	1	0.029470	7	8	0.0.0.0.0.0.0	synth with cache (only 1: unfold continuity_pt; only 1: unfold minus_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_minus; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_mult	1	0.026997	7	8	0.0.0.0.0.0.0	synth with cache (only 1: unfold continuity_pt; only 1: unfold mult_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_mul; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_const	1	0.026489	7	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_scal	1	0.026264	9	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_inv	1	0.018361	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.div_eq_inv	1	0.016022	2	3	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_div	1	0.038752	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite div_eq_inv; only 1: apply continuity_pt_mult; only 1: assumption; only 1: apply continuity_pt_inv; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_comp	1	0.037316	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_plus	1	0.017268	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_opp	1	0.020236	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_minus	1	0.020955	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_mult	1	0.019122	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_const	1	0.016650	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_scal	1	0.019280	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_inv	1	0.022492	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_div	1	0.019715	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_comp	1	0.021724	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.uniqueness_step1	1	0.024839	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.uniqueness_step2	1	0.071891	6	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.uniqueness_step3	1	0.044797	7	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.uniqueness_limite	1	0.019343	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_eq	1	0.020165	4	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_eq_0	1	0.018459	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_eq_1	1	0.017085	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_D_in	1	0.036812	12	13
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	1	0.051519	11	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_ext	1	0.024946	9	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	1	0.034013	12	13
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_derive	1	0.017192	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_continuous_pt	1	0.018194	4	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_continuous	1	0.024476	6	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_plus	1	0.025774	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_opp	1	0.033721	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_minus	1	0.022825	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_mult	1	0.024320	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_const	1	0.021280	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_scal	1	0.018829	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	1	0.021031	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	1	0.021380	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_id	1	0.019449	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	1	0.022109	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_comp	1	0.018181	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_plus	1	0.037082	11	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_opp	1	0.032070	7	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_minus	1	0.027416	11	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_mult	1	0.028775	11	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_const	1	0.016586	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_scal	1	0.021225	8	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_id	1	0.016794	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_Rsqr	1	0.015800	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_comp	1	0.027940	11	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_plus	1	0.034283	7	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_opp	1	0.025601	5	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_minus	1	0.025935	7	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_mult	1	0.032987	7	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_const	1	0.030251	3	4	0.0.0	synth with cache (only 1: unfold derivable; only 1: intros; only 1: apply derivable_pt_const).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_scal	1	0.058994	6	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_id	1	0.029609	3	4	0.0.0	synth with cache (only 1: unfold derivable; only 1: intros ?; only 1: apply derivable_pt_id).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_Rsqr	1	0.049863	3	4	0.0.0	synth with cache (only 1: unfold derivable; only 1: intros ?; only 1: apply derivable_pt_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_comp	1	0.048807	7	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_plus	1	0.042663	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_opp	1	0.018805	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_minus	1	0.020658	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_mult	1	0.020420	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_const	1	0.020355	3	4	0.0.0	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_const).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_scal	1	0.019563	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_id	1	0.017802	3	4	0.0.0	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_id).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_Rsqr	1	0.023884	8	8	1.0.0	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_comp	1	0.020160	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	1	0.019320	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow	1	0.019777	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_pow	1	0.018210	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pow	1	0.019604	4	5	0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold derivable; only 1: intros ?; only 1: apply derivable_pt_pow).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_pow	1	0.021323	3	4	0.0.0	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_pow).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.pr_nu	1	0.024717	7	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.deriv_maximum	1	0.018619	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.deriv_minimum	1	0.020363	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.deriv_constant2	1	0.021919	1	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.nonneg_derivative_0	1	0.047350	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_alt.pre_sin_bound	1	0.015397	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_alt.pre_cos_bound	1	0.030645	1	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.Majxy_cv_R0	1	0.012907	1	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.reste1_maj	1	0.041011	1	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.reste2_maj	1	0.013624	1	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.reste1_cv_R0	1	0.054818	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.reste2_cv_R0	1	0.013856	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.reste_cv_R0	1	0.014330	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.cos_plus	1	0.013864	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_inv	1	0.015854	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.pr_nu_var	1	0.031423	14	15	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold derivable_pt; only 1: unfold derive_pt; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct pr1; only 1: intros ?; only 1: destruct pr2; only 1: intros ?; only 1: intropattern subst -> H; only 1: apply uniqueness_limite with g x; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.pr_nu_var2	1	0.030532	11	13
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_inv	1	0.124609	8	9	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold derivable; only 1: intros ?; only 1: apply derivable_pt_inv; only 1: apply H; only 1: apply H0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derive_pt_inv	1	1.119450	1576	1591
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.Rabs_derive_1	1	0.016428	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.Rabs_derive_2	1	0.016742	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.Rderivable_pt_abs	1	0.014635	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.Rcontinuity_abs	1	0.013959	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.continuity_finite_sum	1	0.039224	10	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_fs	1	0.017378	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	1	0.019097	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_finite_sum	1	0.017011	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_finite_sum	1	0.015796	4	5	0.0.0.0	synth with cache (only 1: intros; only 1: unfold derivable; only 1: intros ?; only 1: apply derivable_pt_finite_sum).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_cosh	1	0.016490	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_sinh	1	0.015814	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_exp	1	0.013862	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_cosh	1	0.013138	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_sinh	1	0.014074	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_exp	1	0.012709	2	3	0.0	synth with cache (only 1: unfold derivable; only 1: apply derivable_pt_exp).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_cosh	1	0.014013	5	5	1.0	synth with cache (only 1: unfold derivable; only 1: apply derivable_pt_cosh).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_sinh	1	0.013093	2	3	0.0	synth with cache (only 1: unfold derivable; only 1: apply derivable_pt_sinh).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derive_pt_exp	1	0.019684	8	8	1.0.0	synth with cache (only 1: intros ?; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_exp).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derive_pt_cosh	1	0.016436	7	7	1.0.0	synth with cache (only 1: intros ?; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cosh).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derive_pt_sinh	1	0.015622	7	7	1.0.0	synth with cache (only 1: intros ?; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.sinh_lt	1	0.014325	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.IZN_var	1	0.019627	3	4	0.0.0	synth with cache (only 1: intros; only 1: apply Z_of_nat_complete_inf; only 1: Lia.lia).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.Nzorn	1	0.017024	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P1	1	0.021421	6	7	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold subdivision_val; only 1: destruct projT2; only 1: apply a0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P2	1	0.121164	49	50	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold adapted_couple; only 1: intros; only 1: decompose [ and ] H; only 1: clear H; only 1: split; only 1: assumption; only 1: split; only 1: rewrite H2; only 1: unfold Rmin; only 1: case Rle_dec; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: apply Rle_antisym; only 1: auto with real; only 1: auto with real; only 1: split; only 1: rewrite H1; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: apply Rle_antisym; only 1: auto with real; only 1: auto with real; only 1: split; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P3	1	0.025272	10	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P4	1	0.033013	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P5	1	0.107331	51	52	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct a0; only 1: destruct H0; only 1: destruct H1; only 1: destruct H2; only 1: exists x; only 1: split; only 1: assumption; only 1: split; only 1: rewrite H0; only 1: unfold Rmin; only 1: case Rle_dec; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: apply Rle_antisym; only 1: auto with real; only 1: auto with real; only 1: split; only 1: rewrite H1; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: apply Rle_antisym; only 1: auto with real; only 1: auto with real; only 1: split; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P6	1	0.018037	7	8	0.0.0.0.0.0.0	synth with cache (only 1: unfold IsStepFun; only 1: intros; only 1: elim X; only 1: intros; only 1: apply existT with x; only 1: apply StepFun_P5; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P7	1	0.034194	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P8	1	0.012998	0	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P9	1	0.108137	29	30	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold adapted_couple in H; only 1: decompose [ and ] H; only 1: clear H; only 1: induction l; only 1: simpl in H4; only 1: discriminate; only 1: induction l; only 1: simpl in H3; only 1: simpl in H2; only 1: generalize H3; only 1: generalize H2; only 1: unfold Rmin; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros; only 1: elim H0; only 1: rewrite <- H5; only 1: rewrite <- H7; only 1: reflexivity; only 1: intros; only 1: elim H0; only 1: rewrite <- H5; only 1: rewrite <- H7; only 1: reflexivity; only 1: simpl; only 1: apply le_n_S; only 1: apply le_n_S; only 1: apply Nat.le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P10	1	0.013554	0	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P11	1	0.050505	10	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P12	1	0.192111	54	55	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold adapted_couple_opt; only 1: unfold adapted_couple; only 1: intros; only 1: decompose [ and ] H; only 1: clear H; only 1: split; only 1: split; only 1: assumption; only 1: split; only 1: rewrite H0; only 1: unfold Rmin; only 1: case Rle_dec; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: apply Rle_antisym; only 1: auto with real; only 1: auto with real; only 1: split; only 1: rewrite H3; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: apply Rle_antisym; only 1: auto with real; only 1: auto with real; only 1: split; only 1: assumption; only 1: assumption; only 1: split; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P13	1	0.018350	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P14	1	0.014206	0	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P15	1	0.015326	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P16	1	0.015887	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P17	1	0.016673	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P18	1	1.013319	1560	1575
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P19	1	0.084773	11	12	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction l1; only 1: simpl; only 1: ring; only 1: induction l1; only 1: simpl; only 1: ring; only 1: simpl; only 1: simpl in IHl1; only 1: rewrite IHl1; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P20	1	0.016955	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P21	1	0.049304	19	21
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P22	1	0.044413	18	19
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P23	1	0.015664	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P24	1	0.032215	18	19
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P25	1	0.020496	9	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P26	1	0.052776	23	24
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P27	1	0.033734	16	17	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply StepFun_P26; only 1: apply StepFun_P23 with g; only 1: assumption; only 1: assumption; only 1: apply StepFun_P25 with f; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P28	1	0.027173	7	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P29	1	0.016962	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P30	1	1.012378	922	933
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P31	1	0.064494	22	23
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P32	1	0.016733	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P33	1	0.013015	0	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P34	1	0.018342	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P35	1	0.013636	0	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P36	1	0.020141	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P37	1	0.053817	11	12	0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: eapply StepFun_P36; only 1: assumption; only 1: eapply StepFun_P25; only 1: apply StepFun_P29; only 1: apply StepFun_P29; only 1: eapply StepFun_P23; only 1: apply StepFun_P29; only 1: apply StepFun_P29; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P38	1	0.058786	14	15
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P39	1	0.026824	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P40	1	0.144787	40	42
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P41	1	0.024309	13	14
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P42	1	0.082551	24	25	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction l1; only 1: intros ?; only 1: simpl; only 1: ring; only 1: intros ?; only 1: destruct l1; only 1: simpl in H; only 1: simpl; only 1: destruct l2; only 1: simpl; only 1: ring; only 1: simpl; only 1: simpl in H; only 1: rewrite H; only 1: ring; only 1: simpl; only 1: rewrite Rplus_assoc; only 1: apply Rplus_eq_compat_l; only 1: apply IHl1; only 1: rewrite <- H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P43	1	0.032289	12	13
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P44	1	0.016528	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P45	1	0.015899	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P46	1	0.030180	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.f_incr_implies_g_incr_interv	1	0.049807	14	15
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derivable_pt_id_interv	1	0.037783	1	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.pr_nu_var2_interv	1	0.028306	11	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv	1	0.021560	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	1	0.037329	10	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.IVT_interv_prelim0	1	0.016051	1	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.IVT_interv_prelim1	1	0.028693	7	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.IVT_interv	1	0.018313	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.f_interv_is_interv	1	0.028768	9	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.continuity_pt_recip_prelim	1	0.017534	1	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.continuity_pt_recip_interv	1	0.043752	9	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derivable_pt_lim_recip_interv	1	0.045065	13	14
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim0	1	0.052103	15	16
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1	1	0.057284	13	15
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derivable_pt_recip_interv	1	0.059581	13	14
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim0	1	0.034339	12	13
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_0	1	0.043396	11	13
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	1	0.046677	11	13
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv	1	0.032862	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.ub_lt_2_pos	1	0.020610	6	7	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.mkposreal_lb_ub	1	0.013515	1	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derivable_pt_lim_CVU	1	0.040950	15	16
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.atan_sub_correct	1	0.031535	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.tech	1	0.025368	8	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.Machin_2_3	1	0.012825	1	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.Machin_4_5_239	1	0.015705	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.Machin_2_3_7	1	0.015752	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.PI_2_3_7_ineq	1	0.014819	1	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.FTCN_step1	1	0.017195	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.FTC_Newton	1	0.017926	3	4	0.0.0	synth with cache (only 1: intros; only 1: unfold NewtonInt; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P1	1	0.015123	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P2	1	0.018514	6	7	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold NewtonInt; only 1: destruct NewtonInt_P1; only 1: clear o; only 1: apply Rminus_diag_eq; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P3	1	0.026166	7	8	0.0.0.0.0.0.0	synth with cache (only 1: unfold Newton_integrable; only 1: intros; only 1: elim X; only 1: intros ?; only 1: intros ?; only 1: exists x; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P4	1	0.062117	9	10	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct pr; only 1: unfold NewtonInt; only 1: unfold NewtonInt_P3; only 1: simpl; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P5	1	0.071587	15	16
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.antiderivative_P1	1	0.047325	9	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P6	1	0.080761	12	13
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.antiderivative_P2	1	0.039044	8	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.antiderivative_P3	1	0.041961	8	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.antiderivative_P4	1	0.030422	8	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P7	1	0.040261	17	19
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P8	1	0.021284	8	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P9	1	0.031543	6	7
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.psos_r1b	1	0.030206	4	5
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.psos_r1	1	0.046635	5	6	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: setoid_rewrite H; only 1: cring).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.nsatzR_diff	1	0.015466	4	5
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.P0Z_correct	1	0.011490	1	2	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.Rext	1	0.043663	4	5	0.0.0.0	synth with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.Rset	1	0.012360	3	5
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.Rtheory	1	0.012162	2	4
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.PolZadd_correct	1	0.016029	4	5
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.PolZmul_correct	1	0.016649	4	5
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.R_power_theory	1	0.015956	5	6	0.0.0.0.0	synth with cache (only 1: apply mkpow_th; only 1: unfold pow; only 1: intros; only 1: rewrite Nnat.N2Nat.id; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.norm_correct	1	0.012655	2	3
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.PolZeq_correct	1	0.014072	2	3
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.mult_l_correct	1	0.010034	0	1
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.compute_list_correct	1	0.010160	0	1
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.check_correct	1	0.031946	13	15
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Rsth	1	0.016361	10	11	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: intros; only 1: subst; only 1: trivial; only 1: unfold Transitive; only 1: intros; only 1: subst; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Rri	1	0.082332	49	50	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: apply Rsth; only 1: unfold respectful; only 1: unfold Proper; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity; only 1: unfold respectful; only 1: unfold Proper; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity; only 1: unfold respectful; only 1: unfold Proper; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity; only 1: unfold respectful; only 1: unfold Proper; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: rewrite H; only 1: reflexivity; only 1: exact Rplus_0_l; only 1: exact Rplus_comm; only 1: symmetry; only 1: apply Rplus_assoc; only 1: exact Rmult_1_l; only 1: exact Rmult_1_r; only 1: symmetry; only 1: apply Rmult_assoc; only 1: exact Rmult_plus_distr_r; only 1: intros; only 1: apply Rmult_plus_distr_l; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: reflexivity; only 1: exact Rplus_opp_r).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.R_one_zero	1	0.012344	3	3	1	synth with cache (only 1: exact R1_neq_R0).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Rcri	1	0.013419	2	3	0.0	synth with cache (only 1: red; only 1: exact Rmult_comm).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Rdi	1	0.015265	3	4	0.0.0	synth with cache (only 1: constructor; only 1: exact Rmult_integral; only 1: exact R_one_zero).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Qri	1	0.033427	17	18	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: apply Q_Setoid; only 1: apply Qplus_comp; only 1: apply Qmult_comp; only 1: apply Qminus_comp; only 1: apply Qopp_comp; only 1: exact Qplus_0_l; only 1: exact Qplus_comm; only 1: apply Qplus_assoc; only 1: exact Qmult_1_l; only 1: exact Qmult_1_r; only 1: apply Qmult_assoc; only 1: apply Qmult_plus_distr_l; only 1: intros; only 1: apply Qmult_plus_distr_r; only 1: reflexivity; only 1: exact Qplus_opp_r).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Q_one_zero	1	0.012490	1	2	0	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Qcri	1	0.021306	2	3	0.0	synth with cache (only 1: red; only 1: exact Qmult_comm).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Qdi	1	0.024417	3	4	0.0.0	synth with cache (only 1: constructor; only 1: exact Qmult_integral; only 1: exact Q_one_zero).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Z_one_zero	1	0.011701	0	1
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Zcri	1	0.013349	2	3	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Zdi	1	0.015167	3	4	0.0.0	synth with cache (only 1: constructor; only 1: exact Zmult_integral; only 1: exact Z_one_zero).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.Rsth	1	0.015583	10	11	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: intros; only 1: subst; only 1: trivial; only 1: unfold Transitive; only 1: intros; only 1: subst; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.Rri	1	0.084758	49	50	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: apply Rsth; only 1: unfold respectful; only 1: unfold Proper; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity; only 1: unfold respectful; only 1: unfold Proper; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity; only 1: unfold respectful; only 1: unfold Proper; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity; only 1: unfold respectful; only 1: unfold Proper; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: rewrite H; only 1: reflexivity; only 1: exact Rplus_0_l; only 1: exact Rplus_comm; only 1: symmetry; only 1: apply Rplus_assoc; only 1: exact Rmult_1_l; only 1: exact Rmult_1_r; only 1: symmetry; only 1: apply Rmult_assoc; only 1: exact Rmult_plus_distr_r; only 1: intros; only 1: apply Rmult_plus_distr_l; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: reflexivity; only 1: exact Rplus_opp_r).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.Rcri	1	0.013731	2	3	0.0	synth with cache (only 1: red; only 1: exact Rmult_comm).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.R_one_zero	1	0.012541	3	3	1	synth with cache (only 1: exact R1_neq_R0).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.Rdi	1	0.015311	3	4	0.0.0	synth with cache (only 1: constructor; only 1: exact Rmult_integral; only 1: exact R_one_zero).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ropp_div	1	0.015262	5	6	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Rdiv; only 1: rewrite <- Ropp_mult_distr_l_reverse; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pos_half_prf	1	0.013482	1	2	0	synth with cache (only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Boule_half_to_interval	1	0.022891	10	11	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Boule; only 1: unfold pos_half; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: apply Rabs_def2 in H; only 1: destruct H; only 1: split; only 1: lra; only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Boule_lt	1	0.018893	9	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Un_cv_ext	1	0.017387	8	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Alt_first_term_bound	1	0.014759	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Alt_CVU	1	0.036735	13	14
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pow2_ge_0	1	0.011777	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pow2_abs	1	0.012090	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derivable_pt_tan	1	0.020014	12	13	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold derivable_pt; only 1: unfold tan; only 1: apply derivable_pt_div; only 1: reg; only 1: reg; only 1: apply Rgt_not_eq; only 1: apply cos_gt_0; only 1: rewrite <- Ropp_div; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derive_pt_tan	1	0.013690	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derive_increasing_interv	1	0.031594	12	14
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.plus_Rsqr_gt_0	1	0.012845	3	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.PI2_lower_bound	1	0.015231	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.PI2_3_2	1	0.021898	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.PI2_1	1	0.013976	2	3	0.0	synth with cache (only 1: pose proof PI2_3_2; only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.tan_increasing	1	0.015062	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.tan_is_inj	1	0.017872	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.exists_atan_in_frame	1	0.024178	11	13
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.tan_1_gt_1	1	0.011981	1	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.frame_tan	1	0.012558	1	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ub_opp	1	0.013906	5	6	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite Ropp_div; only 1: apply Ropp_lt_contravar; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pos_opp_lt	1	0.013701	2	3	0.0	synth with cache (only 1: intros; only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.tech_opp_tan	1	0.012662	3	4	0.0.0	synth with cache (only 1: intros; only 1: rewrite tan_neg; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pre_atan	1	0.012701	1	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_bound	1	0.019788	6	7	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold atan; only 1: destruct pre_atan; only 1: destruct a; only 1: clear H0; only 1: exact H).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_right_inv	1	0.016352	6	7	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold atan; only 1: destruct pre_atan; only 1: destruct a; only 1: clear H; only 1: exact H0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_opp	1	0.012760	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derivable_pt_atan	1	0.012160	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_increasing	1	0.013380	4	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_0	1	0.035834	10	11	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply tan_is_inj; only 1: apply atan_bound; only 1: pose proof PI_RGT_0; only 1: rewrite Ropp_div; only 1: split; only 1: lra; only 1: lra; only 1: rewrite atan_right_inv; only 1: rewrite tan_0; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_1	1	0.014340	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derive_pt_atan	1	0.017556	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derivable_pt_lim_atan	1	0.016017	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_seq_decreasing	1	0.020684	8	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_seq_converging	1	0.018424	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atan_exists_01	1	0.025815	1	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_seq_opp	1	1.024440	1514	1528
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.sum_Ratan_seq_opp	1	0.013347	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atan_exists_1	1	0.012404	1	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.in_int	1	0.012136	1	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atan0_0	1	0.017063	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atan_exists_1_opp	1	0.022960	7	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atan_opp	1	0.035497	5	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	1	0.013485	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pow_lt_1_compat	1	0.031649	18	19	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction 1; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: tauto; only 1: simpl; only 1: split; only 1: apply Rmult_le_pos; only 1: intuition; only 1: intuition; only 1: rewrite <- Rmult_1_r; only 1: apply Rmult_le_0_lt_compat; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_seq_Rabs	1	0.015644	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Datan_seq; only 1: rewrite pow_mult; only 1: rewrite pow_mult; only 1: rewrite pow2_abs; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_seq_pos	1	0.015814	8	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_sum_eq	1	0.013924	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_seq_increasing	1	0.016071	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_seq_decreasing	1	0.015187	6	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_seq_CV_0	1	0.014524	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_lim	1	0.016333	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_CVU_prelim	1	0.018059	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_is_datan	1	0.012441	1	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_CVU'	1	0.013015	1	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_CVU	1	0.014245	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Alt_PI_tg	1	0.016955	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold PI_tg; only 1: unfold Ratan_seq; only 1: unfold Rdiv; only 1: rewrite pow1; only 1: rewrite Rmult_1_l; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_is_ps_atan	1	0.015006	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_continuity	1	0.017004	11	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derivable_pt_lim_ps_atan	1	0.026166	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derivable_pt_ps_atan	1	0.013788	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atan_continuity_pt_1	1	0.015066	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_eq_DatanSeq_interv	1	0.013238	1	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_eq_ps_atan	1	0.014570	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Alt_PI_eq	1	0.012808	1	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.PI_ineq	1	0.034710	10	10	1.0.0	synth with cache (only 1: intros; only 1: rewrite <- Alt_PI_eq; only 1: apply Alt_PI_ineq).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.phi_sequence_prop	1	0.015916	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P1	1	0.020166	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P2	1	0.024270	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P3	1	0.016719	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_exists	1	0.015184	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P4	1	0.031630	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RinvN_pos	1	0.023919	5	6	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Rinv_0_lt_compat; only 1: apply Rplus_le_lt_0_compat; only 1: apply pos_INR; only 1: apply Rlt_0_1).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RinvN_cv	1	0.013652	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Riemann_integrable_ext	1	0.019156	8	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P5	1	0.025630	10	11	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold RiemannInt; only 1: destruct RiemannInt_exists; only 1: destruct RiemannInt_exists; only 1: eapply UL_sequence; only 1: apply u; only 1: apply RiemannInt_P4 with pr2 RinvN; only 1: apply RinvN_cv; only 1: apply RinvN_cv; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.maxN	1	0.014630	1	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Heine_cor1	1	0.017171	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Heine_cor2	1	0.017032	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P1	1	0.031053	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P2	1	0.031156	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P3	1	0.010460	0	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P4	1	0.010777	0	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P5	1	0.013016	3	4	0.0.0	synth with cache (only 1: intros; only 1: unfold SubEqui; only 1: apply SubEqui_P3).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P6	1	0.014605	4	5	0.0.0.0	synth with cache (only 1: intros; only 1: unfold SubEqui; only 1: apply SubEqui_P4; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P7	1	0.019480	8	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P8	1	0.014984	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P9	1	0.017513	5	6	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply StepFun_P38; only 1: apply SubEqui_P7; only 1: apply SubEqui_P1; only 1: apply SubEqui_P2).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P6	1	0.015274	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P7	1	0.015655	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.continuity_implies_RiemannInt	1	0.012879	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P8	1	0.036640	9	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P9	1	0.013053	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P10	1	0.033566	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P11	1	0.045372	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P12	1	0.018241	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P13	1	0.015181	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P14	1	0.014342	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P15	1	0.017160	5	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P16	1	0.021419	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Rle_cv_lim	1	0.013177	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P17	1	0.020676	5	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P18	1	0.025476	7	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P19	1	0.016322	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.FTC_P1	1	0.021626	12	13	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply continuity_implies_RiemannInt; only 1: assumption; only 1: intros; only 1: apply H0; only 1: elim H3; only 1: intros; only 1: split; only 1: assumption; only 1: apply Rle_trans with x; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P20	1	0.014665	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P21	1	0.073557	11	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P22	1	0.039718	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P23	1	0.032309	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P24	1	0.014001	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P25	1	0.046266	19	20
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P26	1	0.014636	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P27	1	0.031080	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P28	1	0.028490	16	18
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P29	1	0.020491	6	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P30	1	0.013644	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P31	1	0.037062	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P32	1	0.033418	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P33	1	0.015200	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.FTC_Riemann	1	0.014214	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_const_bound	1	0.023655	9	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Riemann_integrable_scal	1	0.016341	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Riemann_integrable_Ropp	1	0.036930	4	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis_reg.AppVar	1	0.011267	1	2	0	synth with cache (only 1: exact R0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.P_Rmin	1	0.017797	11	12	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rmin; only 1: case Rle_dec; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_le_3	1	0.011346	1	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_increasing	1	0.012896	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_lt_inv	1	0.014353	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_ineq1	1	0.013581	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_exists1	1	0.013209	1	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_exists	1	0.012564	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_ln	1	0.013204	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_inv	1	0.012596	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_Ropp	1	0.012166	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_increasing	1	0.016882	12	13	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply exp_lt_inv; only 1: rewrite exp_ln; only 1: rewrite exp_ln; only 1: apply H0; only 1: apply Rlt_trans with x; only 1: assumption; only 1: apply H0; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_exp	1	0.012553	4	5	0.0.0.0	synth with cache (only 1: intros ?; only 1: apply exp_inv; only 1: apply exp_ln; only 1: apply exp_pos).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_1	1	0.012579	3	4	0.0.0	synth with cache (only 1: rewrite <- exp_0; only 1: rewrite ln_exp; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_lt_inv	1	0.014365	6	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_inv	1	0.013950	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_mult	1	0.038266	15	16	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply exp_inv; only 1: rewrite exp_plus; only 1: rewrite exp_ln; only 1: rewrite exp_ln; only 1: rewrite exp_ln; only 1: reflexivity; only 1: assumption; only 1: assumption; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_Rinv	1	0.033798	10	11	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply exp_inv; only 1: rewrite exp_ln; only 1: rewrite exp_Ropp; only 1: rewrite exp_ln; only 1: reflexivity; only 1: assumption; only 1: apply Rinv_0_lt_compat; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_continue	1	0.016821	8	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_plus	1	0.015926	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rpower; only 1: rewrite Rmult_plus_distr_r; only 1: rewrite exp_plus; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_mult	1	1.010285	2236	2254
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_O	1	0.013782	6	7	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: unfold Rpower; only 1: rewrite Rmult_0_l; only 1: apply exp_0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_1	1	0.014776	6	7	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Rpower; only 1: rewrite Rmult_1_l; only 1: apply exp_ln; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_pow	1	0.033785	27	28	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: elim n; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: apply Rpower_O; only 1: auto; only 1: simpl; only 1: intros ?; only 1: case n0; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: apply Rpower_1; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Rpower_plus; only 1: rewrite H; only 1: rewrite Rpower_1; only 1: apply Rmult_comm; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_lt	1	0.018622	13	14	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rpower; only 1: apply exp_increasing; only 1: apply Rmult_lt_compat_r; only 1: rewrite <- ln_1; only 1: apply ln_increasing; only 1: apply Rlt_0_1; only 1: apply H; only 1: apply H0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_sqrt	1	0.015390	8	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_Ropp	1	0.014416	5	6	0.0.0.0.0	synth with cache (only 1: unfold Rpower; only 1: intros ?; only 1: intros ?; only 1: rewrite Ropp_mult_distr_l_reverse; only 1: apply exp_Ropp).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.powerRZ_Rpower	1	0.012172	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rle_Rpower	1	0.036998	23	24	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: case H0; only 1: intros ?; only 1: left; only 1: apply Rpower_lt; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: rewrite H1; only 1: right; only 1: reflexivity; only 1: intros ?; only 1: rewrite <- H; only 1: unfold Rpower; only 1: rewrite ln_1; only 1: rewrite Rmult_0_r; only 1: rewrite Rmult_0_r; only 1: apply Rle_refl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_lt_2	1	0.010927	0	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.limit1_ext	1	0.025455	12	13
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.limit1_imp	1	0.023817	12	13
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rinv_Rdiv	1	0.018613	12	13	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rdiv; only 1: rewrite Rinv_mult_distr; only 1: rewrite Rinv_involutive; only 1: apply Rmult_comm; only 1: assumption; only 1: assumption; only 1: apply Rinv_neq_0_compat; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Dln	1	0.013540	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.derivable_pt_lim_ln	1	0.029182	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.D_in_imp	1	0.038174	9	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.D_in_ext	1	0.019693	9	10	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold D_in; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Dpower	1	0.014150	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.derivable_pt_lim_power	1	0.019149	9	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_mult_distr	1	0.021661	12	13	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rpower; only 1: rewrite <- exp_plus; only 1: rewrite ln_mult; only 1: rewrite Rmult_plus_distr_l; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rlt_Rpower_l	1	0.022374	9	10	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: apply exp_increasing; only 1: apply Rmult_lt_compat_l; only 1: auto; only 1: apply ln_increasing; only 1: lra; only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rle_Rpower_l	1	0.046458	23	24	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: destruct H0; only 1: destruct H1; only 1: apply Rlt_le; only 1: apply exp_increasing; only 1: apply Rmult_lt_compat_l; only 1: auto; only 1: apply ln_increasing; only 1: lra; only 1: lra; only 1: rewrite H1; only 1: apply Rle_refl; only 1: intros; only 1: rewrite <- H; only 1: rewrite Rpower_O; only 1: rewrite Rpower_O; only 1: apply Rle_refl; only 1: apply Rlt_le_trans with a; only 1: tauto; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.arcsinh_sinh	1	0.013819	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.sinh_arcsinh	1	0.022416	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.derivable_pt_lim_arcsinh	1	0.012836	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.arcsinh_lt	1	0.013511	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.arcsinh_le	1	0.017582	9	10	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: apply Rlt_le; only 1: apply arcsinh_lt; only 1: assumption; only 1: rewrite H; only 1: apply Rle_refl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.arcsinh_0	1	0.017557	9	10	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold arcsinh; only 1: rewrite pow_ne_zero; only 1: rewrite Rplus_0_l; only 1: rewrite Rplus_0_l; only 1: rewrite sqrt_1; only 1: rewrite <- exp_0; only 1: rewrite ln_exp; only 1: easy; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.E1_cvg	1	0.022009	9	10	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold exp; only 1: case exist_exp; only 1: intros ?; only 1: unfold exp_in; only 1: unfold Un_cv; only 1: unfold infinite_sum; only 1: unfold E1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.exp_form	1	0.044940	21	23
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.div2_double	1	0.037375	9	10	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: induction N; only 1: trivial; only 1: simpl Init.Nat.mul; only 1: rewrite Nat.add_succ_r; only 1: simpl; only 1: simpl in IHN; only 1: rewrite IHN; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.div2_S_double	1	0.011298	2	3	0.0	synth with cache (only 1: intros ?; only 1: apply Nat.div2_succ_double).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.div2_not_R0	1	0.011574	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.Reste_E_maj	1	0.011476	1	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.maj_Reste_cv_R0	1	0.011251	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.Reste_E_cv	1	0.011621	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.exp_plus	1	0.011997	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.exp_pos_pos	1	0.011169	1	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.exp_pos	1	0.011332	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.derivable_pt_lim_exp_0	1	0.012211	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.derivable_pt_lim_exp	1	0.015995	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.continuity_sin	1	0.011209	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.CVN_R_sin	1	0.020207	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	1	0.013397	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	1	0.017085	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	1	0.021559	7	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	1	0.013376	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_sin	1	0.012256	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_cos	1	0.013302	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_sin	1	0.011864	3	4	0.0.0	synth with cache (only 1: unfold derivable; only 1: intros ?; only 1: apply derivable_pt_sin).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_cos	1	0.012116	3	4	0.0.0	synth with cache (only 1: unfold derivable; only 1: intros ?; only 1: apply derivable_pt_cos).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derive_pt_sin	1	0.019998	9	9	1.0.0	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sin).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derive_pt_cos	1	0.013278	3	4	0.0.0	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cos).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_PI	1	0.013281	5	6	0.0.0.0.0	synth with cache (only 1: unfold tan; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: unfold Rdiv; only 1: apply Rmult_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_3PI2	1	0.012658	1	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_2PI	1	0.013384	4	5	0.0.0.0	synth with cache (only 1: unfold tan; only 1: rewrite sin_2PI; only 1: unfold Rdiv; only 1: apply Rmult_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_cos_PI4	1	1.012078	1666	1681
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_PI3_cos_PI6	1	0.013086	1	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_PI6_cos_PI3	1	0.012150	1	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.PI6_RGT_0	1	0.014288	5	6	0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.PI6_RLT_PI2	1	0.017416	6	7	0.0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_compat_l; only 1: apply PI_RGT_0; only 1: apply Rinv_lt_contravar; only 1: prove_sup; only 1: prove_sup).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_PI6	1	0.011494	1	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sqrt2_neq_0	1	0.011240	1	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	1	0.012218	1	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sqrt3_2_neq_0	1	0.014142	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	1	0.011405	1	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rlt_sqrt3_0	1	0.011459	1	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.PI4_RGT_0	1	0.013382	5	6	0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.cos_PI4	1	0.013290	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_PI4	1	0.013933	6	6	1.0	synth with cache (only 1: rewrite sin_cos_PI4; only 1: apply cos_PI4).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_PI4	1	0.014272	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.cos_3PI4	1	0.013368	1	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_3PI4	1	0.012903	1	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.cos_PI6	1	0.013450	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_PI6	1	0.025982	20	20
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_PI3	1	0.021471	6	6	1.0	synth with cache (only 1: rewrite sin_PI3_cos_PI6; only 1: apply cos_PI6).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.cos_PI3	1	0.012492	2	3	0.0	synth with cache (only 1: rewrite sin_PI6_cos_PI3; only 1: apply sin_PI6).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_PI3	1	0.020962	11	12	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold tan; only 1: rewrite sin_PI3; only 1: rewrite cos_PI3; only 1: unfold Rdiv; only 1: rewrite Rmult_1_l; only 1: rewrite Rinv_involutive; only 1: rewrite Rmult_assoc; only 1: rewrite <- Rinv_l_sym; only 1: apply Rmult_1_r; only 1: discrR; only 1: discrR).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_2PI3	1	0.019901	7	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.cos_2PI3	1	0.016535	4	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_2PI3	1	0.031211	4	5	0.0.0.0	synth with cache (only 1: unfold tan; only 1: rewrite sin_2PI3; only 1: rewrite cos_2PI3; only 1: field).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.cos_5PI4	1	0.013349	1	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_5PI4	1	0.012828	1	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_cos5PI4	1	0.021433	3	4	0.0.0	synth with cache (only 1: rewrite cos_5PI4; only 1: rewrite sin_5PI4; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	1	0.019164	3	4	0.0.0	synth with cache (only 1: apply Rmult_lt_0_compat; only 1: prove_sup0; only 1: apply PI2_RGT_0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rgt_2PI_0	1	0.019050	3	4	0.0.0	synth with cache (only 1: apply Rmult_lt_0_compat; only 1: prove_sup0; only 1: apply PI_RGT_0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	1	0.020204	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	1	0.013832	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.rad_deg	1	1.010907	2525	2544
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.toRad_inj	1	1.012633	2666	2685
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.deg_rad	1	0.013075	4	5	0.0.0.0	synth with cache (only 1: intros ?; only 1: apply toRad_inj; only 1: rewrite rad_deg; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	1	0.013795	4	5	0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold sind; only 1: unfold cosd; only 1: apply sin2_cos2).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_lb_ge_0	1	0.012352	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.distance_refl	1	0.025079	17	18	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold dist_euc; only 1: apply Rsqr_inj; only 1: apply sqrt_positivity; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: right; only 1: reflexivity; only 1: rewrite Rsqr_0; only 1: rewrite Rsqr_sqrt; only 1: unfold Rsqr; only 1: ring; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.distance_symm	1	0.063662	24	25	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold dist_euc; only 1: apply Rsqr_inj; only 1: apply sqrt_positivity; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: apply sqrt_positivity; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: rewrite Rsqr_sqrt; only 1: rewrite Rsqr_sqrt; only 1: unfold Rsqr; only 1: ring; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.law_cosines	1	0.115216	17	18	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold dist_euc; only 1: intros; only 1: rewrite Rsqr_sqrt; only 1: rewrite Rsqr_sqrt; only 1: rewrite Rsqr_sqrt; only 1: rewrite H; only 1: unfold Rsqr; only 1: ring; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.triangle	1	0.020708	8	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.translation_0	1	0.020174	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: unfold xt; only 1: eauto with real; only 1: unfold yt; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.isometric_translation	1	0.043830	5	6	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: unfold xt; only 1: unfold yt; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.rotation_0	1	0.026249	11	12	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold xr; only 1: unfold yr; only 1: split; only 1: rewrite cos_0; only 1: rewrite sin_0; only 1: ring; only 1: rewrite cos_0; only 1: rewrite sin_0; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.rotation_PI2	1	0.033041	11	12	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold xr; only 1: unfold yr; only 1: split; only 1: rewrite cos_PI2; only 1: rewrite sin_PI2; only 1: ring; only 1: rewrite cos_PI2; only 1: rewrite sin_PI2; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.isometric_rotation_0	1	0.016517	4	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.isometric_rotation	1	0.027573	23	24	0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold dist_euc; only 1: intros; only 1: apply Rsqr_inj; only 1: apply sqrt_positivity; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: apply sqrt_positivity; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: rewrite Rsqr_sqrt; only 1: rewrite Rsqr_sqrt; only 1: apply isometric_rotation_0; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.isometric_rot_trans	1	0.017145	3	4	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- isometric_rotation_0; only 1: apply isometric_translation).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.isometric_trans_rot	1	0.016062	3	4	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- isometric_translation; only 1: apply isometric_rotation_0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.CVN_R_cos	1	0.015367	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.continuity_cos	1	0.016018	0	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_gt_cos_7_8	1	0.011192	1	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI_2_aux	1	0.017234	1	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_pi2	1	0.019697	8	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.pi2_int	1	0.024910	4	5	0.0.0.0	synth with cache (only 1: unfold PI2; only 1: case PI_2_aux; only 1: simpl; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_minus	1	0.033928	6	7	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rminus; only 1: rewrite cos_plus; only 1: rewrite <- cos_sym; only 1: rewrite sin_antisym; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin2_cos2	1	0.017341	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold Rsqr; only 1: rewrite Rplus_comm; only 1: rewrite <- cos_minus; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: apply cos_0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos2	1	0.013155	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin2	1	0.015440	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_PI2	1	0.015665	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_pos_tech	1	0.013535	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_PI2	1	0.011868	1	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI_RGT_0	1	0.023816	3	4	0.0.0	synth with cache (only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI_4	1	0.023966	3	4	0.0.0	synth with cache (only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI_neq0	1	0.012967	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_PI	1	0.011494	1	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_PI	1	0.011913	1	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_bound	1	0.018377	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply pre_sin_bound; only 1: assumption; only 1: apply Rle_trans with (1 := H0) (2 := PI_4)).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_bound	1	0.019009	7	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.neg_cos	1	0.029866	5	6	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite cos_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_cos	1	0.019537	5	6	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite cos_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_plus	1	1.010867	1899	1915
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_minus	1	0.031667	6	7	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rminus; only 1: rewrite sin_plus; only 1: rewrite <- cos_sym; only 1: rewrite sin_antisym; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_plus	1	0.021936	6	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_2a	1	0.014214	4	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_2a	1	0.013439	3	4	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite double; only 1: apply cos_plus).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_2a_cos	1	0.016254	6	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_2a_sin	1	0.016144	6	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_2a	1	0.027281	9	10	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite double; only 1: rewrite double; only 1: rewrite double in H0; only 1: apply tan_plus; only 1: assumption; only 1: assumption; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_neg	1	0.038397	16	17	1	synth with cache (only 1: apply sin_antisym).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_neg	1	0.030235	17	18	1.0.0	synth with cache (only 1: intros ?; only 1: symmetry in  |- *; only 1: apply cos_sym).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_0	1	0.012261	5	6	0.0.0.0.0	synth with cache (only 1: unfold tan; only 1: rewrite sin_0; only 1: rewrite cos_0; only 1: unfold Rdiv; only 1: apply Rmult_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_neg	1	0.013899	6	7	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold tan; only 1: rewrite sin_neg; only 1: rewrite cos_neg; only 1: unfold Rdiv; only 1: apply Ropp_mult_distr_l_reverse).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_minus	1	0.031397	17	18	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rminus; only 1: rewrite tan_plus; only 1: rewrite tan_neg; only 1: unfold Rminus; only 1: rewrite <- Ropp_mult_distr_l_reverse; only 1: rewrite Rmult_opp_opp; only 1: reflexivity; only 1: assumption; only 1: rewrite cos_neg; only 1: assumption; only 1: assumption; only 1: rewrite tan_neg; only 1: unfold Rminus; only 1: rewrite <- Ropp_mult_distr_l_reverse; only 1: rewrite Rmult_opp_opp; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_3PI2	1	0.012522	1	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_2PI	1	0.016039	3	4	0.0.0	synth with cache (only 1: rewrite sin_2a; only 1: rewrite sin_PI; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_2PI	1	0.017460	4	5	0.0.0.0	synth with cache (only 1: rewrite cos_2a; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.neg_sin	1	0.018773	5	6	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_PI_x	1	0.027379	5	6	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite sin_minus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_period	1	0.014167	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_period	1	0.014009	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_shift	1	0.020905	5	6	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite sin_minus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_shift	1	0.019936	5	6	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite cos_minus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_sin	1	0.024451	5	6	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite sin_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI2_RGT_0	1	0.013484	4	5	0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.SIN_bound	1	0.013033	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.COS_bound	1	0.012748	3	4	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- sin_shift; only 1: apply SIN_bound).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_sin_0	1	0.015871	6	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_sin_0_var	1	0.012813	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_lb_gt_0	1	0.015559	4	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.SIN	1	0.022118	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.COS	1	0.022594	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1._PI2_RLT_0	1	0.020804	2	3	0.0	synth with cache (only 1: pose proof PI_RGT_0; only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI4_RLT_PI2	1	0.014877	2	3	0.0	synth with cache (only 1: pose proof PI_RGT_0; only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI2_Rlt_PI	1	0.014729	2	3	0.0	synth with cache (only 1: pose proof PI_RGT_0; only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_gt_0	1	0.013219	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_gt_0	1	0.015386	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_ge_0	1	0.016959	9	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_ge_0	1	0.019109	9	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_le_0	1	1.010762	2297	2315
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_le_0	1	1.011474	2094	2111
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_lt_0	1	0.015602	5	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_lt_0_var	1	0.014219	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_lt_0	1	0.016511	5	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_gt_0	1	0.022519	6	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_lt_0	1	0.016802	5	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_ge_0_3PI2	1	0.015776	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.form1	1	0.016161	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.form2	1	0.016937	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.form3	1	0.016982	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.form4	1	0.016918	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_increasing_0	1	0.015846	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_increasing_1	1	0.017915	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_decreasing_0	1	0.017845	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_decreasing_1	1	0.017125	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_increasing_0	1	0.020070	8	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_increasing_1	1	0.020254	8	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_decreasing_0	1	0.016228	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_decreasing_1	1	1.011560	2428	2446
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_diff	1	0.035219	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold tan; only 1: rewrite sin_minus; only 1: field; only 1: split; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_increasing_0	1	0.027950	4	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_increasing_1	1	0.020668	5	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_incr_0	1	0.016914	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_incr_1	1	0.017669	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_decr_0	1	0.017735	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_decr_1	1	0.018206	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_incr_0	1	0.018383	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_incr_1	1	0.030206	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_decr_0	1	0.018047	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_decr_1	1	0.023190	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_incr_0	1	0.020528	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_incr_1	1	0.021277	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_eq_0_1	1	0.022022	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_eq_0_0	1	0.018780	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_eq_0_0	1	0.020689	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_eq_0_1	1	1.012834	2045	2062
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_eq_O_2PI_0	1	0.021294	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_eq_O_2PI_1	1	0.039090	23	24	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H1; only 1: intropattern subst -> H1; only 1: clear H0; only 1: clear H; only 1: unfold sin; only 1: case exist_sin; only 1: intros; only 1: ring; only 1: destruct H1; only 1: intropattern subst -> H1; only 1: clear H0; only 1: clear H; only 1: rewrite sin_PI; only 1: easy; only 1: intropattern subst -> H1; only 1: clear H0; only 1: clear H; only 1: rewrite sin_2a; only 1: rewrite sin_PI; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	1	0.022124	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	1	0.037102	10	11	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H1; only 1: intropattern subst -> H1; only 1: rewrite cos_PI2; only 1: easy; only 1: intropattern subst -> H1; only 1: rewrite cos_3PI2; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_rel.cos_plus_form	1	0.033280	7	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_rel.pow_sqr	1	0.019281	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_rel.A1_cvg	1	0.026398	11	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_rel.C1_cvg	1	0.027455	11	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_rel.B1_cvg	1	0.017511	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.sqrt_var_maj	1	0.011251	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	1	0.018966	8	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.sqrt_continuity_pt	1	0.026293	11	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	1	0.010639	1	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.derivable_pt_sqrt	1	0.011265	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.derive_pt_sqrt	1	0.029825	4	5	0.0.0.0	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sqrt; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.continuity_pt_sqrt	1	0.027431	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.Boule_convex	1	0.019743	13	14
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.boule_of_interval	1	0.011349	1	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.boule_in_interval	1	0.011112	1	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.Ball_in_inter	1	0.023361	12	13
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.Boule_center	1	0.015181	10	11	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct r; only 1: unfold Boule; only 1: unfold Rminus; only 1: simpl; only 1: rewrite Rplus_opp_r; only 1: rewrite Rabs_pos_eq; only 1: assumption; only 1: apply Rle_refl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVN_CVU	1	0.037409	13	14
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVU_continuity	1	0.023216	10	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.continuity_pt_finite_SF	1	0.014094	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.SFL_continuity_pt	1	0.036464	11	12	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: eapply CVU_continuity; only 1: apply CVN_CVU; only 1: apply X; only 1: intros; only 1: unfold SP; only 1: apply continuity_pt_finite_SF; only 1: intros; only 1: apply H; only 1: apply H1; only 1: apply H0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.SFL_continuity	1	0.013858	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVN_R_CVS	1	0.024862	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVU_cv	1	0.017553	10	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVU_ext_lim	1	0.019627	10	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVU_derivable	1	0.026174	11	13
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_pos	1	0.013760	5	6	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold sqrt; only 1: destruct Rcase_abs; only 1: apply Rle_refl; only 1: apply Rsqrt_positivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_positivity	1	0.014860	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: unfold sqrt; only 1: destruct Rcase_abs; only 1: apply Rle_refl; only 1: apply Rsqrt_positivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_sqrt	1	0.051220	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_0	1	0.048184	5	6	0.0.0.0.0	synth with cache (only 1: apply Rsqr_eq_0; only 1: unfold Rsqr; only 1: apply sqrt_sqrt; only 1: right; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_1	1	0.052526	11	12	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply Rsqr_inj; only 1: apply sqrt_positivity; only 1: left; only 1: exact Rlt_0_1; only 1: left; only 1: exact Rlt_0_1; only 1: unfold Rsqr; only 1: rewrite sqrt_sqrt; only 1: ring; only 1: left; only 1: exact Rlt_0_1).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_eq_0	1	0.011438	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lem_0	1	0.012613	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lem_1	1	0.012712	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_def	1	0.014062	6	6	0.1.0	synth with cache (only 1: intros; only 1: apply sqrt_sqrt; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_square	1	0.011284	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_Rsqr	1	0.012454	4	5	0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply sqrt_square; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_pow2	1	0.012630	5	6	0.0.0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: apply sqrt_square; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_Rsqr_abs	1	0.012049	4	5	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Rsqr_abs; only 1: apply sqrt_Rsqr; only 1: apply Rabs_pos).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.Rsqr_sqrt	1	0.014587	8	8	0.1.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Rsqr; only 1: apply sqrt_sqrt; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_mult_alt	1	0.012140	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_mult	1	0.021466	16	16	0.1.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H0; only 1: apply sqrt_mult_alt; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lt_R0	1	0.026475	13	14	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rsqr_incrst_0; only 1: rewrite Rsqr_0; only 1: rewrite Rsqr_sqrt; only 1: assumption; only 1: red; only 1: auto with real; only 1: right; only 1: reflexivity; only 1: apply sqrt_positivity; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.Rlt_mult_inv_pos	1	0.012244	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.Rle_mult_inv_pos	1	0.021113	16	17	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case H; only 1: intros; only 1: red; only 1: left; only 1: apply Rlt_mult_inv_pos; only 1: auto with real; only 1: auto with real; only 1: intros; only 1: rewrite <- H1; only 1: red; only 1: right; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_div_alt	1	0.047818	20	22
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_div	1	0.014035	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: apply sqrt_div_alt; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lt_0_alt	1	0.014737	7	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lt_0	1	0.013290	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H0; only 1: clear H; only 1: apply sqrt_lt_0_alt).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lt_1_alt	1	0.017108	15	16	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: apply Rsqr_incrst_0; only 1: rewrite Rsqr_sqrt; only 1: rewrite Rsqr_sqrt; only 1: easy; only 1: apply Rlt_le; only 1: apply Rle_lt_trans with x; only 1: exact H; only 1: easy; only 1: exact H; only 1: apply sqrt_pos; only 1: apply sqrt_pos).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lt_1	1	0.016579	10	11	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H0; only 1: apply sqrt_lt_1_alt; only 1: split; only 1: exact H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_le_0	1	0.014143	6	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_le_1_alt	1	0.012185	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_le_1	1	0.015142	11	11	0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H0; only 1: clear H; only 1: apply sqrt_le_1_alt; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_inj	1	0.011288	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_less_alt	1	0.011686	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_less	1	0.012673	6	7	1.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: apply sqrt_less_alt).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_more	1	0.012461	4	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_cauchy	1	0.019117	10	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	1	0.051642	9	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.Rsqr_sol_eq_0_0	1	0.022118	4	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exp_cof_no_R0	1	0.011203	3	4	0.0.0	synth with cache (only 1: intros ?; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exist_exp	1	0.012292	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.pow_i	1	0.013445	8	8	0.1.0.0	synth with cache (only 1: intros; only 1: apply pow_ne_zero; only 1: apply Nat.neq_0_lt_0; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exist_exp0	1	0.010083	1	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exp_0	1	0.010231	1	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.cosh_0	1	0.014691	7	8	0.0.0.0.0.0.0	synth with cache (only 1: unfold cosh; only 1: rewrite Ropp_0; only 1: rewrite exp_0; only 1: unfold Rdiv; only 1: rewrite <- Rinv_r_sym; only 1: easy; only 1: discrR).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.sinh_0	1	0.013721	7	8	0.0.0.0.0.0.0	synth with cache (only 1: unfold sinh; only 1: rewrite Ropp_0; only 1: rewrite exp_0; only 1: unfold Rminus; only 1: unfold Rdiv; only 1: rewrite Rplus_opp_r; only 1: apply Rmult_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.simpl_cos_n	1	0.012501	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.archimed_cor1	1	0.011421	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.Alembert_cos	1	0.012806	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.cosn_no_R0	1	0.028334	8	9	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold cos_n; only 1: unfold Rdiv; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exist_cos	1	0.011394	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.simpl_sin_n	1	0.013062	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.Alembert_sin	1	0.012859	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.sin_no_R0	1	0.018735	8	9	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold sin_n; only 1: unfold Rdiv; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exist_sin	1	0.011436	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.cos_sym	1	1.009560	1444	1458
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.sin_antisym	1	1.009515	1316	1330
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.sin_0	1	0.014922	4	5	0.0.0.0	synth with cache (only 1: unfold sin; only 1: case exist_sin; only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exist_cos0	1	0.010578	1	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.cos_0	1	0.010122	1	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT	1	0.026325	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT_cor1	1	0.016706	6	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT_cor2	1	0.025508	7	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT_cor3	1	0.020220	7	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.Rolle	1	0.015701	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.nonneg_derivative_1	1	0.012698	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.nonpos_derivative_0	1	0.033494	7	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.increasing_decreasing_opp	1	0.014547	5	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.nonpos_derivative_1	1	0.011542	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.positive_derivative	1	0.012501	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	1	0.014422	5	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.negative_derivative	1	0.011935	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.null_derivative_0	1	0.013149	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.increasing_decreasing	1	0.014755	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.null_derivative_1	1	0.011800	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.derive_increasing_interv_ax	1	0.020377	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.derive_increasing_interv	1	0.017411	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.derive_increasing_interv_var	1	0.033974	16	16
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.IAF	1	0.013159	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.IAF_var	1	0.013247	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.null_derivative_loc	1	0.017116	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.antiderivative_Ucte	1	0.045922	11	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT_abs	1	0.019213	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis3.derivable_pt_lim_div	1	0.018182	9	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis3.derivable_pt_div	1	0.020260	12	13
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis3.derivable_div	1	0.016543	8	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis3.derive_pt_div	1	0.015076	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_comp	1	0.016790	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_growing	1	0.013010	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_up_decreasing	1	0.024693	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_maj_y	1	0.013363	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_maj	1	0.011104	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_up_min_x	1	0.013891	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_up_min	1	0.010887	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_cv	1	0.015634	10	10	0.0.0.1.0.0	synth with cache (only 1: intros; only 1: apply growing_cv; only 1: apply dicho_lb_growing; only 1: assumption; only 1: apply dicho_lb_maj; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_up_cv	1	0.012661	6	7	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply decreasing_cv; only 1: apply dicho_up_decreasing; only 1: assumption; only 1: apply dicho_up_min; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_dicho_up	1	0.021277	8	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	1	0.012387	4	5	0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold pow_2_n; only 1: apply pow_nonzero; only 1: discrR).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.pow_2_n_growing	1	0.010725	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.pow_2_n_infty	1	0.009991	1	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.cv_dicho	1	0.012984	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.continuity_seq	1	0.029147	10	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_car	1	0.013813	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_up_car	1	0.014104	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.cv_pow_half	1	0.011457	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.IVT	1	0.012537	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.IVT_cor	1	0.013187	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.Rsqrt_exists	1	0.011336	1	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.Rsqrt_positivity	1	0.010794	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	1	0.011133	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_fun.Alembert_exp	1	0.012894	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.interior_P1	1	0.018159	14	15	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold included; only 1: unfold interior; only 1: intros; only 1: unfold neighbourhood in H; only 1: elim H; only 1: intros; only 1: unfold included in H0; only 1: apply H0; only 1: unfold disc; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: rewrite Rabs_R0; only 1: apply cond_pos).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.interior_P2	1	0.013097	5	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.adherence_P1	1	0.053610	20	21	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold included; only 1: intros; only 1: unfold adherence; only 1: unfold point_adherent; only 1: intros; only 1: exists x; only 1: unfold intersection_domain; only 1: split; only 1: unfold neighbourhood in H0; only 1: elim H0; only 1: intros; only 1: unfold included in H1; only 1: apply H1; only 1: unfold disc; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: rewrite Rabs_R0; only 1: apply cond_pos; only 1: apply H).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.included_trans	1	0.048082	5	6	0.0.0.0.0	synth with cache (only 1: unfold included; only 1: intros; only 1: apply H0; only 1: apply H; only 1: apply H1).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.interior_P3	1	0.050635	10	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.complementary_P1	1	0.015146	11	12	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: red; only 1: intros ?; only 1: elim H; only 1: intros; only 1: unfold intersection_domain in H0; only 1: unfold complementary in H0; only 1: elim H0; only 1: intros; only 1: elim H2; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.adherence_P2	1	0.015067	8	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.adherence_P3	1	0.013784	7	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P1	1	0.016732	19	21
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.closed_set_P1	1	0.015318	12	14
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.neighbourhood_P1	1	0.019431	10	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P2	1	0.035462	18	19	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold open_set; only 1: intros; only 1: unfold union_domain in H1; only 1: elim H1; only 1: intros ?; only 1: apply neighbourhood_P1 with D1; only 1: unfold included; only 1: unfold union_domain; only 1: tauto; only 1: apply H; only 1: assumption; only 1: intros ?; only 1: apply neighbourhood_P1 with D2; only 1: unfold included; only 1: unfold union_domain; only 1: tauto; only 1: apply H0; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P3	1	0.028331	6	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P4	1	0.010871	3	4	0.0.0	synth with cache (only 1: unfold open_set; only 1: intros; only 1: elim H).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P5	1	0.010820	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.disc_P1	1	0.010973	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_P1	1	0.026528	14	16
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_P2	1	0.014528	5	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_P3	1	0.020050	16	17
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.Rsepare	1	0.014434	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.restriction_family	1	0.037746	11	12	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: elim H; only 1: intros; only 1: unfold intersection_domain; only 1: elim H0; only 1: intros; only 1: split; only 1: apply cond_fam; only 1: exists x0; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.family_P1	1	0.031425	5	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P6	1	0.017095	7	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P1	1	0.011606	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P2	1	0.010969	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_EMP	1	0.012825	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_eqDom	1	0.033728	8	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P3	1	0.011638	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P4	1	0.012741	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P5	1	0.017535	11	13
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_carac	1	0.012703	6	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_compact	1	0.017142	6	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.prolongement_C0	1	0.015073	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_ab_maj	1	0.014312	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_ab_min	1	0.014802	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.ValAdh_un_exists	1	0.029033	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.ValAdh_un_prop	1	0.028354	15	16
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.adherence_P4	1	0.015508	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P6	1	0.016928	6	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.Bolzano_Weierstrass	1	0.013367	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.is_lub_u	1	0.020337	7	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.domain_P1	1	0.014688	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.Heine	1	0.036133	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqSeries.sum_maj1	1	0.013245	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqSeries.Rseries_CV_comp	1	0.017626	6	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqSeries.Cesaro	1	0.016076	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqSeries.Cesaro_1	1	0.013748	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.formule	1	1.009949	492	499
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.maj_term1	1	0.021401	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.maj_term2	1	0.023091	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.maj_term3	1	0.023787	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.maj_term4	1	0.029695	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.D_x_no_cond	1	0.017921	13	14	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold D_x; only 1: unfold no_cond; only 1: split; only 1: trivial; only 1: apply Rminus_not_eq; only 1: unfold Rminus; only 1: rewrite Ropp_plus_distr; only 1: rewrite <- Rplus_assoc; only 1: rewrite Rplus_opp_r; only 1: rewrite Rplus_0_l; only 1: apply Ropp_neq_0_compat; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.Rabs_4	1	0.011828	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.Rlt_4	1	0.012879	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.quadruple	1	0.015277	2	3	0.0	synth with cache (only 1: intros ?; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.quadruple_var	1	0.016271	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- quadruple; only 1: unfold Rdiv; only 1: rewrite <- Rmult_assoc; only 1: rewrite Rinv_r_simpl_m; only 1: trivial; only 1: discrR).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.continuous_neq_0	1	0.015723	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.prod_SO_split	1	0.013493	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.prod_SO_pos	1	0.022897	15	16	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N; only 1: simpl; only 1: apply H; only 1: trivial; only 1: simpl; only 1: apply Rmult_le_pos; only 1: apply IHN; only 1: intros; only 1: apply H; only 1: apply Nat.le_trans with N; only 1: assumption; only 1: apply Nat.le_succ_diag_r; only 1: apply H; only 1: apply le_n).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.prod_SO_Rle	1	0.017150	7	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.fact_prodSO	1	0.033183	11	12	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite <- IHn; only 1: case n; only 1: auto with real; only 1: intros; only 1: rewrite plus_INR; only 1: rewrite mult_INR; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.le_n_2n	1	0.009758	0	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.RfactN_fact2N_factk	1	0.010803	1	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.INR_fact_lt_0	1	0.010510	3	4	0.0.0	synth with cache (only 1: intros ?; only 1: apply lt_0_INR; only 1: apply lt_O_fact).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.C_maj	1	0.018046	6	7
coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatLemmas.shift_value	1	0.011171	1	2	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatLemmas.frexp_spec	1	0.015163	3	5
coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatLemmas.ldexp_spec	1	0.013985	4	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C1	1	0.014064	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C2	1	0.012429	1	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.AlembertC3_step1	1	0.011946	1	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.AlembertC3_step2	1	0.011885	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C3	1	0.012465	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C4	1	0.015975	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C5	1	0.013176	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C6	1	0.013187	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cauchy_prod.sum_N_predN	1	0.011935	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cauchy_prod.sum_plus	1	0.048750	9	10	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N; only 1: simpl; only 1: ring; only 1: rewrite tech5; only 1: rewrite tech5; only 1: rewrite tech5; only 1: rewrite IHN; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cauchy_prod.cauchy_finite	1	0.015389	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT_step0	1	0.012946	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT_step1	1	0.014467	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT_step2	1	0.017843	7	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT_step3	1	0.016192	7	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT_step4	1	0.012605	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT	1	0.014891	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.alternated_series	1	0.016186	8	9	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply CV_ALT; only 1: assumption; only 1: unfold positivity_seq; only 1: apply decreasing_ineq; only 1: assumption; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.alternated_series_ineq	1	0.013940	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.PI_tg_pos	1	0.014537	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.PI_tg_decreasing	1	0.013289	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.PI_tg_cv	1	0.030321	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.exist_PI	1	0.011911	3	4	0.0.0	synth with cache (only 1: apply alternated_series; only 1: apply PI_tg_decreasing; only 1: apply PI_tg_cv).
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.Alt_PI_ineq	1	0.017064	8	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.Alt_PI_RGT_0	1	0.011588	1	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_split	1	0.013250	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_diff	1	0.014775	7	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_diff_neg	1	0.015797	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_first	1	0.013366	4	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_last	1	0.016280	4	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_eq_arg	1	0.012933	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Binomial.pascal_step1	1	0.012217	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Binomial.pascal_step2	1	0.013916	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Binomial.pascal_step3	1	0.012804	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Binomial.pascal	1	0.013014	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Binomial.binomial	1	0.022419	11	13
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.cont_deriv	1	0.050210	8	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dconst	1	0.027676	19	20
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dx	1	0.043070	23	24
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dadd	1	0.033300	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dmult	1	0.020006	6	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dmult_const	1	0.013591	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dopp	1	0.013359	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dminus	1	0.017772	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dx_pow_n	1	0.010203	0	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dcomp	1	0.028644	14	16
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.D_pow_n	1	0.019917	7	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech1	1	0.021650	14	15	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N; only 1: simpl; only 1: apply H; only 1: apply le_n; only 1: simpl; only 1: apply Rplus_lt_0_compat; only 1: apply IHN; only 1: intros; only 1: apply H; only 1: apply le_S; only 1: assumption; only 1: apply H; only 1: apply le_n).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech2	1	0.013339	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech3	1	0.011284	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech4	1	0.017039	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech5	1	0.010911	2	3	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech6	1	0.019452	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech7	1	0.013438	4	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech11	1	0.029221	9	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech12	1	0.014889	5	6	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Pser; only 1: unfold infinite_sum; only 1: unfold Un_cv in H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.scal_sum	1	0.026836	9	10	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N; only 1: simpl; only 1: ring; only 1: rewrite tech5; only 1: rewrite tech5; only 1: rewrite Rmult_plus_distr_l; only 1: rewrite <- IHN; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.decomp_sum	1	0.012833	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.plus_sum	1	0.031311	9	10	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N; only 1: simpl; only 1: ring; only 1: rewrite tech5; only 1: rewrite tech5; only 1: rewrite tech5; only 1: rewrite IHN; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_eq	1	0.018765	9	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.uniqueness_sum	1	0.014061	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.minus_sum	1	0.032678	9	10	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N; only 1: simpl; only 1: ring; only 1: rewrite tech5; only 1: rewrite tech5; only 1: rewrite tech5; only 1: rewrite IHN; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_decomposition	1	0.022713	6	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_Rle	1	0.017238	8	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.Rsum_abs	1	0.017260	9	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_cte	1	0.025834	10	11	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N; only 1: simpl; only 1: ring; only 1: rewrite tech5; only 1: rewrite IHN; only 1: rewrite S_INR; only 1: rewrite S_INR; only 1: rewrite S_INR; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_growing	1	0.015619	7	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.Rabs_triang_gen	1	0.025505	9	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.cond_pos_sum	1	0.015423	8	9	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N; only 1: simpl; only 1: apply H; only 1: rewrite tech5; only 1: apply Rplus_le_le_0_compat; only 1: apply IHN; only 1: apply H).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.cauchy_abs	1	0.014761	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.cv_cauchy_1	1	0.022367	8	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.cv_cauchy_2	1	0.012135	4	5	0.0.0.0	synth with cache (only 1: intros; only 1: apply R_complete; only 1: unfold Cauchy_crit_series in H; only 1: exact H).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_eq_R0	1	0.025315	15	16	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N; only 1: simpl; only 1: apply H; only 1: apply le_n; only 1: rewrite tech5; only 1: rewrite IHN; only 1: rewrite Rplus_0_l; only 1: apply H; only 1: apply le_n; only 1: intros; only 1: apply H; only 1: apply Nat.le_trans with N; only 1: assumption; only 1: apply Nat.le_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_incr	1	0.013744	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_cv_maj	1	0.012405	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.eps2_Rgt_R0	1	0.010354	1	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.eps2	1	0.011613	3	4	0.0.0	synth with cache (only 1: intros ?; only 1: apply eq_sym; only 1: apply double_var).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.eps4	1	0.022166	2	3	0.0	synth with cache (only 1: intros ?; only 1: field).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.Rlt_eps2_eps	1	0.012205	2	3	0.0	synth with cache (only 1: intros; only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.Rlt_eps4_eps	1	0.012841	2	3	0.0	synth with cache (only 1: intros; only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.prop_eps	1	0.010776	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.mul_factor_wd	1	0.012419	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.mul_factor_gt	1	0.011239	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.mul_factor_gt_f	1	0.038918	7	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.tech_limit	1	0.013847	7	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.tech_limit_contr	1	0.012260	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.lim_x	1	0.019474	11	12	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold limit1_in; only 1: unfold limit_in; only 1: simpl; only 1: intros; only 1: split with eps; only 1: split; only 1: auto; only 1: intros; only 1: elim H0; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_plus	1	0.016750	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_Ropp	1	0.025844	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_minus	1	0.023275	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_free	1	0.025805	9	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_mul	1	0.016991	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.single_limit	1	0.035822	5	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_comp	1	0.056539	16	17
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_inv	1	0.019873	6	7
coq-tactician-stdlib.8.11.dev	Coq.micromega.Fourier_util.Rlt_mult_inv_pos	1	0.012163	5	6
coq-tactician-stdlib.8.11.dev	Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	1	0.017770	6	7	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite Rplus_comm; only 1: apply Rle_lt_0_plus_1; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Fourier_util.Rle_zero_pos_plus1	1	0.010237	1	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.Fourier_util.Rle_mult_inv_pos	1	0.020492	16	17	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case H; only 1: intros; only 1: red; only 1: left; only 1: apply Rlt_mult_inv_pos; only 1: auto with real; only 1: auto with real; only 1: intros; only 1: rewrite <- H1; only 1: red; only 1: right; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rcomplete.R_complete	1	0.010383	1	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.growing_cv	1	0.011549	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.decreasing_growing	1	0.012534	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold Un_growing; only 1: unfold opp_seq; only 1: unfold Un_decreasing; only 1: intros; only 1: apply Ropp_le_contravar; only 1: apply H).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.decreasing_cv	1	0.010693	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.ub_to_lub	1	0.011716	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.lb_to_glb	1	0.013004	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.maj_ss	1	0.018609	14	15
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.min_ss	1	0.019694	14	15
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.Wn_decreasing	1	0.013273	5	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.Vn_growing	1	0.034211	5	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.Vn_Un_Wn_order	1	0.012478	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.min_maj	1	0.011835	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.maj_min	1	0.011449	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cauchy_maj	1	0.010838	4	5	0.0.0.0	synth with cache (only 1: intros; only 1: unfold has_ub; only 1: apply cauchy_bound; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cauchy_opp	1	0.016473	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cauchy_min	1	0.010950	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.maj_cv	1	0.012632	6	7	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply decreasing_cv; only 1: apply Wn_decreasing; only 1: apply maj_min; only 1: apply cauchy_min; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.min_cv	1	0.012483	6	7	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply growing_cv; only 1: apply Vn_growing; only 1: apply min_maj; only 1: apply cauchy_maj; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cond_eq	1	0.031823	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.not_Rlt	1	0.012022	4	5	1	synth with cache (only 1: eauto using Rnot_gt_ge with rorders).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.approx_maj	1	0.011810	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.approx_min	1	0.015713	7	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.UL_sequence	1	0.017779	9	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_plus	1	0.017238	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cv_cvabs	1	0.014093	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_Cauchy	1	0.018001	9	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.maj_by_pos	1	0.015023	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_mult	1	0.011672	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.tech9	1	0.014483	7	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.tech13	1	0.014077	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.growing_ineq	1	0.011235	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_opp	1	0.014398	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.decreasing_ineq	1	0.011990	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_minus	1	1.010408	2161	2179
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cv_infty_cv_R0	1	0.016665	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.decreasing_prop	1	0.029867	7	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cv_speed_pow_fact	1	0.012294	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.in_holed_interval_dec	1	0.009385	1	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.middle_in_interval	1	0.009945	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.point_in_holed_interval_works	1	0.013092	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.first_in_holed_interval	1	0.012133	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.first_in_holed_interval_works	1	0.015152	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.split_couple_eq	1	0.016060	8	9	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: injection H; only 1: intros; only 1: split; only 1: subst; only 1: reflexivity; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.first_two_in_interval_works	1	0.009198	0	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.tearing_sequences	1	0.010460	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.tearing_sequences_projsig	1	0.124697	5	6	0.0.0.0.0	synth with cache (only 1: simpl; only 1: destruct tearing_sequences; only 1: destruct x; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.tearing_sequences_inc_dec	1	0.184424	6	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.split_lt_succ	1	0.021794	20	21
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.increase_seq_transit	1	0.012672	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.decrease_seq_transit	1	0.012187	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.tearing_sequences_ordered_forall	1	0.011076	1	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.torn_number	1	0.010173	1	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.torn_number_above_first_sequence	1	0.013445	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.torn_number_below_second_sequence	1	0.013631	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.limit_index_above_all_indices	1	0.047329	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.first_indices_increasing	1	0.014269	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.R_uncountable	1	0.011746	5	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.MaxRlist_P1	1	0.017178	14	15
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.MinRlist_P1	1	0.017538	15	16
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.AbsList_P1	1	0.022493	14	15	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction l; only 1: elim H; only 1: simpl; only 1: simpl in H; only 1: elim H; only 1: intros ?; only 1: left; only 1: rewrite H0; only 1: reflexivity; only 1: intros ?; only 1: right; only 1: apply IHl; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.MinRlist_P2	1	0.018374	9	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.AbsList_P2	1	0.026805	12	14
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.MaxRlist_P2	1	0.026101	10	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.pos_Rl_P1	1	0.012042	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.pos_Rl_P2	1	0.017617	11	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.Rlist_P1	1	0.018024	8	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P0	1	0.019652	12	13	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction l; only 1: left; only 1: reflexivity; only 1: simpl; only 1: case Rle_dec; only 1: intros ?; only 1: right; only 1: reflexivity; only 1: intros ?; only 1: left; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P1	1	0.013260	7	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P2	1	0.009617	0	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P3	1	0.026660	19	20
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P4	1	0.012530	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P5	1	0.016692	11	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P6	1	0.010058	0	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P7	1	0.011767	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P8	1	0.028788	0	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P9	1	0.009524	0	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P10	1	0.017649	11	12	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: case Rle_dec; only 1: intros ?; only 1: simpl; only 1: rewrite IHl; only 1: reflexivity; only 1: intros ?; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P11	1	0.009882	0	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P12	1	0.010834	0	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P13	1	0.010010	0	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P14	1	0.022898	0	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P15	1	0.017383	9	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P16	1	0.017503	9	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P17	1	0.010444	0	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P18	1	0.010145	0	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P19	1	0.016177	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction l; only 1: elim H; only 1: reflexivity; only 1: exists r; only 1: exists l; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P20	1	0.014291	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P21	1	0.011689	3	4	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P22	1	0.010390	0	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P23	1	0.010492	0	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P24	1	0.010357	0	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P25	1	0.010068	0	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P26	1	0.010024	0	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P27	1	0.009880	0	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P28	1	0.010352	0	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P29	1	0.010555	0	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.EUn_noempty	1	0.011746	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.Un_in_EUn	1	0.011382	4	5	0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold EUn; only 1: split with n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.Un_bound_imp	1	0.014786	8	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.growing_prop	1	0.009621	0	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.Un_cv_crit_lub	1	0.012339	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.Un_cv_crit	1	0.010946	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.finite_greater	1	0.011984	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.cauchy_bound	1	0.014794	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.GP_infinite	1	0.013434	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.CV_shift	1	0.014370	7	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.CV_shift'	1	0.013972	7	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.Un_growing_shift	1	0.012212	5	6	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.INR_fact_neq_0	1	0.011770	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.fact_simpl	1	0.011615	2	3	0.0	synth with cache (only 1: intros ?; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.simpl_fact	1	0.020006	14	15	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Rinv_involutive; only 1: unfold fact at 1; only 1: fold fact; only 1: rewrite mult_INR; only 1: rewrite Rinv_mult_distr; only 1: rewrite Rmult_assoc; only 1: rewrite Rinv_l; only 1: apply Rmult_ne; only 1: apply INR_fact_neq_0; only 1: apply not_0_INR; only 1: discriminate; only 1: apply INR_fact_neq_0; only 1: apply INR_fact_neq_0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_O	1	0.009216	1	2	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_1	1	0.012024	4	5	0.0.0.0	synth with cache (only 1: simpl; only 1: intros ?; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_add	1	0.020865	11	12	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rpow_mult_distr	1	0.042093	11	12	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction n; only 1: field; only 1: simpl; only 1: rewrite Rmult_assoc; only 1: rewrite Rmult_assoc; only 1: apply Rmult_eq_compat_l; only 1: rewrite IHn; only 1: field).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_nonzero	1	0.010896	1	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_RN_plus	1	0.036375	14	15	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Rmult_assoc; only 1: rewrite <- H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_lt	1	0.016291	10	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rlt_pow_R1	1	0.012909	8	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rlt_pow	1	0.013549	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.tech_pow_Rmult	1	0.009246	0	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.tech_pow_Rplus	1	0.018455	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.poly	1	0.012860	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Power_monotonic	1	0.021646	16	17
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.RPow_abs	1	0.009721	1	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Pow_x_infinity	1	0.011427	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_ne_zero	1	0.008444	0	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rinv_pow	1	0.018598	13	14	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: elim n; only 1: simpl; only 1: apply Rinv_1; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: rewrite Rinv_mult_distr; only 1: rewrite H0; only 1: reflexivity; only 1: assumption; only 1: apply pow_nonzero; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_lt_1_zero	1	0.011601	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_R1	1	0.022654	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_Rsqr	1	0.011319	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_le	1	0.013140	9	10	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction n; only 1: simpl; only 1: left; only 1: auto with real; only 1: simpl; only 1: apply Rmult_le_pos; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_1_even	1	0.012045	4	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_1_odd	1	0.016050	6	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_1_abs	1	0.010889	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_mult	1	0.010804	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_incr	1	0.021588	8	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_R1_Rle	1	0.012211	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rle_pow	1	0.011448	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow1	1	0.013040	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: rewrite Rmult_1_r; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_Rabs	1	0.012477	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_maj_Rabs	1	0.009751	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rsqr_pow2	1	0.017046	3	4	0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: field).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.Z_compl.intP	1	0.109667	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.Zpower_NR0	1	0.008552	0	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_O	1	0.009918	1	2	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_1	1	0.011430	4	5	0.0.0.0	synth with cache (only 1: simpl; only 1: intros ?; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_NOR	1	0.008545	0	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_pos_sub	1	0.043980	24	24
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_add	1	0.041482	46	47	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct n; only 1: intros ?; only 1: destruct m; only 1: simpl; only 1: intros; only 1: auto with real; only 1: simpl; only 1: intros; only 1: auto with real; only 1: simpl; only 1: intros; only 1: auto with real; only 1: intros ?; only 1: destruct m; only 1: simpl; only 1: intros; only 1: auto with real; only 1: simpl; only 1: intros; only 1: rewrite Pos2Nat.inj_add; only 1: auto with real; only 1: simpl; only 1: intros ?; only 1: apply powerRZ_pos_sub; only 1: auto; only 1: intros ?; only 1: destruct m; only 1: simpl; only 1: intros; only 1: auto with real; only 1: simpl; only 1: intros; only 1: rewrite Rmult_comm; only 1: apply powerRZ_pos_sub; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite Pos2Nat.inj_add; only 1: rewrite pow_add; only 1: apply Rinv_mult_distr; only 1: apply pow_nonzero; only 1: auto; only 1: apply pow_nonzero; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ	1	0.026718	20	21	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: elim m; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: rewrite SuccNat2Pos.id_succ; only 1: simpl; only 1: rewrite mult_IZR; only 1: rewrite <- INR_IZR_INZ; only 1: rewrite H; only 1: case n0; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros ?; only 1: rewrite SuccNat2Pos.id_succ; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.Zpower_pos_powerRZ	1	0.016120	10	11	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Zpower_pos_nat; only 1: simpl; only 1: induction BinPosDef.Pos.to_nat; only 1: easy; only 1: unfold Zpower_nat; only 1: simpl; only 1: rewrite mult_IZR; only 1: rewrite <- IHn0; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_lt	1	0.013712	9	10	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: case z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_le	1	0.010310	5	6	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Rlt_le; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ_absolu	1	0.022392	21	22
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_R1	1	0.035183	28	29	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: case n; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros ?; only 1: elim BinPosDef.Pos.to_nat; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: ring; only 1: simpl; only 1: intros ?; only 1: elim BinPosDef.Pos.to_nat; only 1: simpl; only 1: exact Rinv_1; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: rewrite Rinv_mult_distr; only 1: rewrite Rinv_1; only 1: rewrite H; only 1: auto with real; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.pow_powerRZ	1	0.020310	5	6	0.0.0.0.0	synth with cache (only 1: induction n; only 1: easy; only 1: simpl; only 1: rewrite SuccNat2Pos.id_succ; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_ind	1	0.024873	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_inv	1	0.009518	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_neg	1	0.018150	18	19	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct alpha; only 1: intros ?; only 1: simpl; only 1: easy; only 1: intros ?; only 1: simpl; only 1: rewrite Rinv_pow; only 1: easy; only 1: easy; only 1: intros ?; only 1: simpl; only 1: rewrite Rinv_pow; only 1: rewrite Rinv_involutive; only 1: easy; only 1: easy; only 1: apply Rinv_neq_0_compat; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_mult_distr	1	0.012647	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.GP_finite	1	0.019940	8	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.sum_f_R0_triangle	1	0.011878	6	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_pos	1	0.012672	8	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_sym	1	0.055025	28	29	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold R_dist; only 1: intros; only 1: unfold Rabs; only 1: destruct Rcase_abs; only 1: destruct Rcase_abs; only 1: apply Rminus_lt in r; only 1: apply Rlt_asym in r; only 1: apply Rminus_lt in r0; only 1: contradiction; only 1: ring; only 1: destruct Rcase_abs; only 1: ring; only 1: destruct r; only 1: destruct r0; only 1: apply Ropp_lt_gt_0_contravar in H; only 1: rewrite Ropp_minus_distr in H; only 1: apply Rlt_asym in H0; only 1: contradiction; only 1: apply Rminus_diag_uniq in H0; only 1: intropattern subst -> H0; only 1: trivial; only 1: destruct r0; only 1: apply Rminus_diag_uniq in H; only 1: intropattern subst -> H; only 1: trivial; only 1: apply Rminus_diag_uniq in H0; only 1: intropattern subst -> H0; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_refl	1	0.014803	8	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_eq	1	0.018916	5	6	0.0.0.0.0	synth with cache (only 1: unfold R_dist; only 1: intros; only 1: split_Rabs; only 1: ring; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_tri	1	0.011153	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_plus	1	0.025260	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_mult_l	1	0.014804	7	8	0.0.0.0.0.0.0	synth with cache (only 1: unfold R_dist; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- Rmult_minus_distr_l; only 1: rewrite Rabs_mult; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.Rmax_l	1	0.013754	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: intros ?; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.Rmax_r	1	0.013202	4	5	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.Rmin_l	1	0.039483	8	9	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Rmin; only 1: intros; only 1: destruct Rle_dec; only 1: unfold Rle in *; only 1: intuition; only 1: apply Rnot_le_lt in n; only 1: unfold Rle in *; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.Rmin_r	1	0.016779	9	10	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Rmin; only 1: intros; only 1: destruct Rle_dec; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption; only 1: apply Rnot_le_lt in n; only 1: unfold Rle in *; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.plus_max_distr_l	1	0.014329	5	6	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply max_monotone; only 1: intros ?; only 1: intros ?; only 1: apply Rplus_le_compat_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.plus_max_distr_r	1	1.009900	2738	2758
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.plus_min_distr_l	1	0.014354	5	6	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply min_monotone; only 1: intros ?; only 1: intros ?; only 1: apply Rplus_le_compat_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.plus_min_distr_r	1	1.010332	2775	2795
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.opp_max_distr	1	0.018142	15	16	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rmax_case_strong; only 1: intros ?; only 1: rewrite Rmin_left; only 1: easy; only 1: elim H; only 1: auto with real; only 1: auto with real; only 1: intros ?; only 1: rewrite Rmin_right; only 1: easy; only 1: apply Rge_le; only 1: apply Ropp_le_ge_contravar; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.opp_min_distr	1	0.017909	15	16	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: rewrite Rmax_left; only 1: easy; only 1: apply Rge_le; only 1: apply Ropp_le_ge_contravar; only 1: assumption; only 1: intros ?; only 1: rewrite Rmax_right; only 1: easy; only 1: elim H; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.minus_max_distr_l	1	0.014213	4	5	0.0.0.0	synth with cache (only 1: unfold Rminus; only 1: intros; only 1: rewrite opp_min_distr; only 1: apply plus_max_distr_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.minus_max_distr_r	1	0.011731	3	4	0.0.0	synth with cache (only 1: unfold Rminus; only 1: intros; only 1: apply plus_max_distr_r).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.minus_min_distr_l	1	0.012913	4	5	0.0.0.0	synth with cache (only 1: unfold Rminus; only 1: intros; only 1: rewrite opp_max_distr; only 1: apply plus_min_distr_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.minus_min_distr_r	1	0.013268	3	4	0.0.0	synth with cache (only 1: unfold Rminus; only 1: intros; only 1: apply plus_min_distr_r).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.minus_neq_O	1	0.010315	4	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.le_minusni_n	1	0.008126	0	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.lt_minus_O_lt	1	0.012486	9	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.even_odd_cor	1	0.010369	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.le_double	1	0.010647	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.euclidian_division	1	0.010190	1	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.tech8	1	0.009787	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_neg	1	0.009361	1	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_mult	1	0.026203	2	3	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_plus	1	0.017651	2	3	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_minus	1	0.017667	2	3	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_neg_minus	1	0.016160	2	3	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_1	1	0.011416	1	2	0	synth with cache (only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_gt_0_0	1	0.012674	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_pos_lt	1	0.010184	3	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_div	1	0.135832	13	14	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: unfold Rdiv; only 1: rewrite Rinv_mult_distr; only 1: rewrite Rmult_assoc; only 1: rewrite Rmult_assoc; only 1: apply Rmult_eq_compat_l; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_assoc; only 1: apply Rmult_eq_compat_l; only 1: reflexivity; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_eq_0	1	0.011850	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_minus_plus	1	0.016596	2	3	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_plus_minus	1	0.016686	2	3	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_incr_0	1	0.011548	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_incr_0_var	1	0.009875	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_incr_1	1	0.013276	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply Rmult_le_compat; only 1: assumption; only 1: assumption; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_incrst_0	1	0.011479	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_incrst_1	1	0.012673	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply Rmult_le_0_lt_compat; only 1: assumption; only 1: assumption; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	1	0.010527	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_neg_pos_le_1	1	0.011945	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.neg_pos_Rsqr_le	1	0.011187	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_abs	1	0.012202	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold Rabs; only 1: case Rcase_abs; only 1: intros ?; only 1: apply Rsqr_neg; only 1: intros ?; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_le_abs_0	1	0.011908	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rsqr_incr_0; only 1: rewrite <- Rsqr_abs; only 1: rewrite <- Rsqr_abs; only 1: assumption; only 1: apply Rabs_pos; only 1: apply Rabs_pos).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_le_abs_1	1	0.010617	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_lt_abs_0	1	0.011848	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rsqr_incrst_0; only 1: rewrite <- Rsqr_abs; only 1: rewrite <- Rsqr_abs; only 1: assumption; only 1: apply Rabs_pos; only 1: apply Rabs_pos).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_lt_abs_1	1	0.010424	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_inj	1	0.010489	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_eq_abs_0	1	0.014453	6	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_eq_asb_1	1	0.009407	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.triangle_rectangle	1	0.011705	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.triangle_rectangle_lt	1	0.011064	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.triangle_rectangle_le	1	0.011053	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_inv	1	0.011809	6	7	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: rewrite Rinv_mult_distr; only 1: reflexivity; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.canonical_Rsqr	1	0.049492	4	5	0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: field; only 1: apply a).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_eq	1	0.012377	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_case	1	0.012909	9	10	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rmin; only 1: case Rle_dec; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_case_strong	1	0.016516	9	10	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rmin; only 1: destruct Rle_dec; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_Rgt_l	1	0.015147	10	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_Rgt_r	1	0.014506	11	12	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case Rle_dec; only 1: elim H; only 1: clear H; only 1: intros; only 1: assumption; only 1: elim H; only 1: clear H; only 1: intros; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_Rgt	1	0.013603	10	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_l	1	0.013412	8	9	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case Rle_dec; only 1: intros ?; only 1: right; only 1: reflexivity; only 1: intros ?; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_r	1	0.011671	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case Rle_dec; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_left	1	0.040378	8	9	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Rmin; only 1: intros; only 1: destruct Rle_dec; only 1: unfold Rle in *; only 1: intuition; only 1: apply Rnot_le_lt in n; only 1: unfold Rle in *; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_right	1	0.015197	9	10	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Rmin; only 1: intros; only 1: destruct Rle_dec; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption; only 1: apply Rnot_le_lt in n; only 1: unfold Rle in *; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rle_min_compat_r	1	0.017341	14	15	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rle_min_compat_l	1	0.015739	14	15	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_comm	1	0.032046	19	20	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case Rle_dec; only 1: case Rle_dec; only 1: intros; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption; only 1: intros; only 1: reflexivity; only 1: case Rle_dec; only 1: intros; only 1: apply Rnot_le_lt in n; only 1: unfold Rle in *; only 1: intuition; only 1: intros; only 1: apply Rle_antisym; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	1	0.010564	5	6	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_Rgt_r; only 1: split; only 1: apply cond_pos; only 1: apply cond_pos).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_pos	1	0.012778	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case Rle_dec; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_glb	1	0.013499	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case Rle_dec; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_glb_lt	1	0.012993	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case Rle_dec; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_case	1	0.014060	9	10	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rmax; only 1: case Rle_dec; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_case_strong	1	0.017352	9	10	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rmax; only 1: case Rle_dec; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_Rle	1	0.016813	15	16
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_comm	1	0.022201	18	19	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Rmax; only 1: case Rle_dec; only 1: case Rle_dec; only 1: intros ?; only 1: intros ?; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption; only 1: auto; only 1: case Rle_dec; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: apply Rle_antisym; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_l	1	0.012235	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_r	1	0.013881	8	9	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: right; only 1: reflexivity; only 1: intros ?; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_left	1	0.013607	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: intros ?; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_right	1	0.012462	4	5	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rle_max_compat_r	1	0.017530	14	15	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: intros ?; only 1: apply Rmax_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: apply Rmax_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rle_max_compat_l	1	0.018746	14	15	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: intros ?; only 1: apply Rmax_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: apply Rmax_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.RmaxRmult	1	0.015666	6	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	1	0.013257	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: apply cond_neg; only 1: intros ?; only 1: apply cond_neg).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_lub	1	0.013701	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_lub_lt	1	0.012545	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_Rlt	1	0.023344	30	30	0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: intros ?; only 1: split; only 1: apply Rle_lt_trans with y; only 1: assumption; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: intros ?; only 1: split; only 1: assumption; only 1: apply Rlt_trans with x; only 1: apply Rnot_le_gt; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: apply Rmax_lub_lt; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_neg	1	0.013646	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rcase_abs	1	0.010879	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_R0	1	0.011594	4	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_R1	1	0.011186	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_no_R0	1	0.013143	8	9	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rabs; only 1: case Rcase_abs; only 1: intros ?; only 1: apply Ropp_neq_0_compat; only 1: auto; only 1: intros ?; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_left	1	0.011689	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_right	1	0.011221	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_left1	1	0.014577	11	12	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: case H; only 1: intros ?; only 1: apply Rabs_left; only 1: auto; only 1: intros ?; only 1: rewrite H0; only 1: rewrite Rabs_right; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_pos	1	0.011026	4	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rle_abs	1	0.016438	11	12	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold Rabs; only 1: case Rcase_abs; only 1: intros; only 1: apply Rminus_le; only 1: rewrite <- Rplus_0_r; only 1: unfold Rminus; only 1: rewrite Ropp_involutive; only 1: auto with real; only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_le	1	0.017741	18	19	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Rabs; only 1: case Rcase_abs; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: clear H0; only 1: clear r; only 1: apply Ropp_le_cancel; only 1: rewrite Ropp_involutive; only 1: exact H; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: clear H; only 1: clear r; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_pos_eq	1	0.011492	4	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_Rabsolu	1	0.009552	3	4	0.0.0	synth with cache (only 1: intros ?; only 1: apply Rabs_pos_eq; only 1: apply Rabs_pos).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_pos_lt	1	0.009619	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_minus_sym	1	0.070355	27	28	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rabs; only 1: destruct Rcase_abs; only 1: destruct Rcase_abs; only 1: apply Rminus_lt in r; only 1: apply Rlt_asym in r; only 1: apply Rminus_lt in r0; only 1: contradiction; only 1: ring; only 1: destruct Rcase_abs; only 1: ring; only 1: destruct r; only 1: destruct r0; only 1: apply Ropp_lt_gt_0_contravar in H; only 1: rewrite Ropp_minus_distr in H; only 1: apply Rlt_asym in H0; only 1: contradiction; only 1: apply Rminus_diag_uniq in H0; only 1: intropattern subst -> H0; only 1: trivial; only 1: destruct r0; only 1: apply Rminus_diag_uniq in H; only 1: intropattern subst -> H; only 1: trivial; only 1: apply Rminus_diag_uniq in H0; only 1: intropattern subst -> H0; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_mult	1	0.048220	5	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_Rinv	1	0.014918	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_Ropp	1	0.009227	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_triang	1	0.023763	17	19
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_triang_inv	1	0.011057	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_triang_inv2	1	0.011187	1	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_def1	1	0.013130	5	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_def2	1	0.014523	5	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.RmaxAbs	1	0.012492	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_Zabs	1	0.022724	16	17	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: case z; only 1: unfold BinIntDef.Z.abs; only 1: apply Rabs_R0; only 1: unfold BinIntDef.Z.abs; only 1: intros ?; only 1: apply Rabs_pos_eq; only 1: apply IZR_le; only 1: easy; only 1: unfold BinIntDef.Z.abs; only 1: unfold IZR at 1; only 1: intros ?; only 1: rewrite Rabs_Ropp; only 1: apply Rabs_pos_eq; only 1: apply IZR_le; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.abs_IZR	1	0.011488	3	4	0.0.0	synth with cache (only 1: intros; only 1: rewrite Rabs_Zabs; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Ropp_Rmax	1	0.018640	15	16	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rmax_case_strong; only 1: intros ?; only 1: rewrite Rmin_left; only 1: easy; only 1: elim H; only 1: auto with real; only 1: auto with real; only 1: intros ?; only 1: rewrite Rmin_right; only 1: easy; only 1: apply Rge_le; only 1: apply Ropp_le_ge_contravar; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Ropp_Rmin	1	0.017799	15	16	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: rewrite Rmax_left; only 1: easy; only 1: apply Rge_le; only 1: apply Ropp_le_ge_contravar; only 1: assumption; only 1: intros ?; only 1: rewrite Rmax_right; only 1: easy; only 1: elim H; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_assoc	1	0.021055	5	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rminmax	1	0.016507	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_assoc	1	0.018553	5	7
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.IZR_nz	1	0.013010	3	4	0.0.0	synth with cache (only 1: intros; only 1: apply not_0_IZR; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.eqR_Qeq	1	0.027197	12	14
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Qeq_eqR	1	0.018305	9	11
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Rle_Qle	1	0.019880	12	14
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Qle_Rle	1	0.018224	9	11
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Rlt_Qlt	1	0.020304	12	14
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Qlt_Rlt	1	0.018365	9	11
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_plus	1	0.048219	16	17	0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: unfold Qplus; only 1: unfold Q2R; only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: unfold Qden; only 1: unfold Qnum; only 1: simpl_mult; only 1: rewrite plus_IZR; only 1: rewrite mult_IZR; only 1: rewrite mult_IZR; only 1: rewrite mult_IZR; only 1: field; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_mult	1	0.047507	13	14	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Qmult; only 1: unfold Q2R; only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: unfold Qden; only 1: unfold Qnum; only 1: simpl_mult; only 1: rewrite mult_IZR; only 1: rewrite mult_IZR; only 1: field; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_opp	1	0.024669	10	11	0.0.0.0.0.0.0.0.1	synth with cache (only 1: unfold Qopp; only 1: unfold Q2R; only 1: intros ?; only 1: destruct x; only 1: unfold Qden; only 1: unfold Qnum; only 1: rewrite Ropp_Ropp_IZR; only 1: field; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_minus	1	0.011831	6	7	0.0.0.0.1	synth with cache (only 1: unfold Qminus; only 1: intros; only 1: rewrite Q2R_plus; only 1: rewrite Q2R_opp; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_inv	1	0.052520	21	22
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_div	1	0.015155	7	8	0.0.0.0.0.0.0	synth with cache (only 1: unfold Qdiv; only 1: unfold Rdiv; only 1: intros; only 1: rewrite Q2R_mult; only 1: rewrite Q2R_inv; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.tech_up	1	0.011991	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.up_tech	1	0.012550	5	6	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply tech_up with (1 := H0); only 1: rewrite plus_IZR; only 1: apply Rplus_le_compat_r; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.fp_R0	1	0.009703	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.for_base_fp	1	0.011379	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.base_fp	1	0.011488	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.base_Int_part	1	0.010404	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.Int_part_INR	1	0.009432	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.fp_nat	1	0.010118	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.R0_fp_O	1	0.012678	6	7	0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: rewrite <- H0 in H; only 1: generalize fp_R0; only 1: intros ?; only 1: auto with zarith real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.Rminus_Int_part1	1	0.010296	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.Rminus_Int_part2	1	0.010272	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.Rminus_fp1	1	0.011371	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.Rminus_fp2	1	0.011843	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.plus_Int_part1	1	0.010777	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.plus_Int_part2	1	0.011150	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.plus_frac_part1	1	0.012515	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.plus_frac_part2	1	0.012905	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlogic.Arithmetical_dec.sig_forall_dec	1	0.009892	1	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlogic.not_not_archimedean	1	0.009958	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlogic.sig_not_dec	1	0.009319	1	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_refl	1	0.009433	3	4	0.0.0	synth with cache (only 1: intros ?; only 1: right; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_refl	1	0.009863	3	4	0.0.0	synth with cache (only 1: intros ?; only 1: right; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_irrefl	1	0.010870	5	6	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: eapply Rlt_asym; only 1: eauto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_irrefl	1	0.008440	1	2	0	synth with cache (only 1: exact Rlt_irrefl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_not_eq	1	0.012345	9	10	0.0.0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst -> H0; only 1: eapply Rlt_asym; only 1: eauto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_not_eq	1	0.011081	4	5	0.0.0.0	synth with cache (only 1: intros; only 1: apply not_eq_sym; only 1: apply Rlt_not_eq; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_dichotomy_converse	1	0.068747	5	6	0.0.0.0.0	synth with cache (only 1: intuition; only 1: apply Rlt_not_eq in H1; only 1: eauto; only 1: apply Rgt_not_eq in H1; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_dec	1	0.011863	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rtotal_order	1	0.010235	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rdichotomy	1	0.011128	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_le	1	0.010211	3	4	0.0.0	synth with cache (only 1: intros; only 1: red; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_ge	1	0.021748	3	4	0.0.0	synth with cache (only 1: intros; only 1: red; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_ge	1	0.023710	5	6	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_le	1	0.011300	5	6	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_gt	1	0.009521	1	2	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_lt	1	0.008923	1	2	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_le_lt	1	0.010307	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_ge_gt	1	0.010450	4	5	0.0.0.0	synth with cache (only 1: intros; only 1: red; only 1: apply Rnot_le_lt; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_le_gt	1	0.010338	4	5	0.0.0.0	synth with cache (only 1: intros; only 1: red; only 1: apply Rnot_le_lt; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_ge_lt	1	0.010051	3	4	0.0.0	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_lt_le	1	0.010471	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_gt_le	1	0.010641	0	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_gt_ge	1	0.012196	1	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_lt_ge	1	0.012101	4	5	1	synth with cache (only 1: eauto using Rnot_gt_ge with rorders).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_not_le	1	0.018187	4	5	0.0.0.0	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: unfold not; only 1: intuition eauto  3).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_not_le	1	0.008880	1	2	0	synth with cache (only 1: exact Rlt_not_le).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_not_ge	1	0.011273	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_not_ge	1	0.009533	1	2	0	synth with cache (only 1: exact Rlt_not_ge).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_not_lt	1	0.010917	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_not_lt	1	0.010024	3	4	0.0.0	synth with cache (only 1: intros; only 1: apply Rle_not_lt; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_not_gt	1	0.009118	3	4	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rle_not_lt).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_not_gt	1	0.009385	3	4	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rge_not_lt).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_le	1	0.010495	2	3	0.0	synth with cache (only 1: unfold Rle; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_ge	1	0.010306	2	3	0.0	synth with cache (only 1: unfold Rge; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_le_sym	1	0.011487	2	3	0.0	synth with cache (only 1: unfold Rle; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_ge_sym	1	0.009590	2	3	0.0	synth with cache (only 1: unfold Rge; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_asym	1	0.020995	3	4	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rlt_asym).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_antisym	1	0.021893	4	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_antisym	1	0.009661	1	2	0	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_le_eq	1	0.014681	1	2	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_ge_eq	1	0.016252	1	2	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_eq_compat	1	0.014603	8	9	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros; only 1: replace r1 with r2; only 1: replace r3 with r4; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_eq_compat	1	0.013511	6	7	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: red; only 1: apply Rlt_eq_compat with (r2 := r4) (r4 := r2); only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_trans	1	0.014151	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_trans	1	0.023031	1	2	0	synth with cache (only 1: eauto using Rle_trans with rorders).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_trans	1	0.009864	1	2	0	synth with cache (only 1: eauto using Rlt_trans with rorders).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_lt_trans	1	0.016002	3	4	0.0.0	synth with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_le_trans	1	0.017510	3	4	0.0.0	synth with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_gt_trans	1	0.010622	1	2	0	synth with cache (only 1: eauto using Rlt_le_trans with rorders).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_ge_trans	1	0.010063	1	2	0	synth with cache (only 1: eauto using Rle_lt_trans with rorders).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_dec	1	0.009716	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_dec	1	0.018993	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_dec	1	0.010278	3	4	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rlt_dec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_dec	1	0.010417	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_le_dec	1	0.010003	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_ge_dec	1	0.011262	4	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_lt_dec	1	0.009908	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_gt_dec	1	0.011199	4	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_or_le	1	0.009770	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_or_ge	1	0.012823	4	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_or_lt	1	0.009462	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_or_gt	1	0.012567	4	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_lt_or_eq_dec	1	0.010429	4	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.inser_trans_R	1	0.013179	6	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_0_r	1	0.014907	3	3	1.0	synth with cache (only 1: intros ?; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ne	1	0.014536	6	7	0.0.0.0.0.0	synth with cache (only 1: split; only 1: auto with real; only 1: apply Rquot1; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_0; only 1: apply CReal_plus_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_opp_l	1	0.012441	2	3	0.0	synth with cache (only 1: intros ?; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_opp_r_uniq	1	0.010825	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_compat_l	1	0.015052	4	5	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_compat_r	1	0.015573	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_reg_l	1	0.015138	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_reg_r	1	1.007706	3057	3078
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_0_r_uniq	1	0.013315	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_0_l	1	0.013536	7	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_R0	1	0.019217	12	13	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: apply Rplus_eq_0_l with r2; only 1: auto with real; only 1: auto with real; only 1: auto with real; only 1: apply Rplus_eq_0_l with r1; only 1: auto with real; only 1: auto with real; only 1: rewrite Rplus_comm; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_r	1	0.018977	3	4	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_l_sym	1	0.028864	3	4	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_r_sym	1	0.018343	3	4	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_0_r	1	0.014122	2	3	0.0	synth with cache (only 1: intros ?; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_0_l	1	0.014600	2	3	0.0	synth with cache (only 1: intros ?; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_ne	1	0.014211	5	6	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: split; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l; only 1: apply Rmult_1_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_1_r	1	0.013144	3	4	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_compat_l	1	0.012860	1	2	0	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_compat_r	1	1.009173	3066	3087
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_reg_l	1	0.014237	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_reg_r	1	1.009024	2464	2483
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_integral	1	0.014516	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_0_compat	1	0.017940	8	9	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: rewrite H; only 1: auto with real; only 1: rewrite H; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_0_compat_r	1	0.015537	1	2	0	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_0_compat_l	1	0.013592	1	2	0	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_neq_0_reg	1	0.022540	12	13	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: red; only 1: intros ?; only 1: apply H; only 1: auto with real; only 1: red; only 1: intros ?; only 1: apply H; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_integral_contrapositive	1	0.016770	7	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	1	0.015844	1	2	0	synth with cache (only 1: auto using Rmult_integral_contrapositive).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_plus_distr_r	1	0.074380	70	71	1.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rsqr_0	1	0.016272	2	3	0.0	synth with cache (only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rsqr_0_uniq	1	0.017256	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_eq_compat	1	0.015689	3	4	1	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_0	1	0.016937	1	2	0	synth with cache (only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_eq_0_compat	1	0.015920	3	4	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_involutive	1	0.017417	2	3	0.0	synth with cache (only 1: intros ?; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_neq_0_compat	1	0.016876	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_plus_distr	1	0.020153	2	3	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_mult_distr_l	1	0.019424	2	3	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	1	0.018493	2	3	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_opp_opp	1	0.020034	2	3	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_mult_distr_r	1	0.030303	2	3	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	1	0.019271	2	3	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_0_r	1	0.017903	2	3	0.0	synth with cache (only 1: intros ?; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_0_l	1	0.018613	2	3	0.0	synth with cache (only 1: intros ?; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_minus_distr	1	0.019936	2	3	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_minus_distr'	1	0.020159	2	3	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_diag_eq	1	0.021009	3	4	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_diag_uniq	1	0.022965	7	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_diag_uniq_sym	1	0.017167	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_minus	1	0.020606	2	3	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_eq_contra	1	0.020904	7	8	0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_not_eq	1	0.035642	5	6	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: apply Rminus_diag_eq; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_not_eq_right	1	0.030121	5	6	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: rewrite H0; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_minus_distr_l	1	0.034629	2	3	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_1	1	0.035186	1	2	0	synth with cache (only 1: field).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_neq_0_compat	1	0.022032	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_involutive	1	0.025750	3	4	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_mult_distr	1	0.038117	3	4	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_inv_permute	1	0.029651	3	4	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_r_simpl_r	1	0.028417	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_r_simpl_l	1	0.019714	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_r_simpl_m	1	0.017645	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_mult_simpl	1	0.025582	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_compat_l	1	0.017808	1	2	0	synth with cache (only 1: eauto using Rplus_lt_compat_l with rorders).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_compat_r	1	1.011227	3183	3204
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_compat_r	1	0.020354	4	5	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Rplus_lt_compat_r).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_compat_l	1	0.022516	6	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_compat_l	1	0.017874	0	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_compat_r	1	0.022852	6	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_compat_r	1	0.019967	1	2	0	synth with cache (only 1: auto using Rplus_le_compat_r with rorders).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_compat	1	0.020577	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_compat	1	0.020579	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_compat	1	0.020604	1	2	0	synth with cache (only 1: auto using Rplus_lt_compat with rorders).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_compat	1	0.021422	1	2	0	synth with cache (only 1: auto using Rplus_le_compat with rorders).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_le_compat	1	0.021575	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_lt_compat	1	0.021429	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_ge_compat	1	0.020843	1	2	0	synth with cache (only 1: auto using Rplus_lt_le_compat with rorders).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_gt_compat	1	0.031804	1	2	0	synth with cache (only 1: auto using Rplus_le_lt_compat with rorders).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_0_compat	1	0.029477	9	10	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros; only 1: apply Rlt_trans with r1; only 1: assumption; only 1: pattern r1 at 1; only 1: rewrite <- Rplus_0_r; only 1: apply Rplus_lt_compat_l; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_lt_0_compat	1	0.028995	11	11	0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros; only 1: apply Rle_lt_trans with r1; only 1: assumption; only 1: pattern r1 at 1; only 1: rewrite <- Rplus_0_r; only 1: apply Rplus_lt_compat_l; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_le_0_compat	1	0.024427	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros; only 1: rewrite <- Rplus_comm; only 1: apply Rplus_le_lt_0_compat; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_le_0_compat	1	0.026068	9	10	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros; only 1: apply Rle_trans with r1; only 1: assumption; only 1: pattern r1 at 1; only 1: rewrite <- Rplus_0_r; only 1: apply Rplus_le_compat_l; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.sum_inequa_Rle_lt	1	0.022080	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_reg_l	1	0.024758	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_reg_r	1	0.022672	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_reg_l	1	0.024660	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_reg_r	1	0.022878	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_reg_l	1	0.023805	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_reg_l	1	0.026609	4	5	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rle_ge; only 1: apply Rplus_le_reg_l with r; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_reg_pos_r	1	0.025139	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_reg_pos_r	1	0.025147	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_reg_neg_r	1	0.027016	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_reg_neg_r	1	0.025714	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_gt_lt_contravar	1	0.035148	10	11	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp; only 1: rewrite Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: unfold Rgt in H; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_lt_gt_contravar	1	0.032295	10	11	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rgt; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp; only 1: rewrite Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_lt_contravar	1	0.023421	1	2	0	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_gt_contravar	1	0.023963	1	2	0	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_le_ge_contravar	1	0.041680	7	8	0.0.0.0.0.0.0	synth with cache (only 1: unfold Rge; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_ge_le_contravar	1	0.050922	7	8	0.0.0.0.0.0.0	synth with cache (only 1: unfold Rle; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_le_contravar	1	0.027215	6	7	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_ge_contravar	1	0.025895	1	2	0	synth with cache (only 1: auto using Ropp_le_contravar with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	1	0.025843	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	1	0.025070	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	1	0.026126	3	4	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Ropp_0; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	1	0.028540	3	4	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Ropp_0; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_0_le_ge_contravar	1	0.026209	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_0_ge_le_contravar	1	0.025816	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_lt_cancel	1	0.027597	4	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_gt_cancel	1	0.032829	1	2	0	synth with cache (only 1: auto using Ropp_lt_cancel with rorders).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_le_cancel	1	0.030596	7	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_ge_cancel	1	0.025995	1	2	0	synth with cache (only 1: auto using Ropp_le_cancel with rorders).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_compat_r	1	1.016753	2764	2784
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_gt_compat_r	1	0.028330	1	2	0	synth with cache (only 1: eauto using Rmult_lt_compat_r with rorders).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_gt_compat_l	1	0.027454	1	2	0	synth with cache (only 1: eauto using Rmult_lt_compat_l with rorders).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_compat_l	1	0.066969	20	21	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: destruct H0; only 1: unfold Rle; only 1: auto with real; only 1: unfold Rle; only 1: auto with real; only 1: destruct H0; only 1: unfold Rle; only 1: right; only 1: rewrite <- H; only 1: rewrite Rmult_0_l; only 1: rewrite Rmult_0_l; only 1: reflexivity; only 1: unfold Rle; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_compat_r	1	1.017034	2816	2836
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_ge_compat_l	1	0.029328	1	2	0	synth with cache (only 1: eauto using Rmult_le_compat_l with rorders).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_ge_compat_r	1	0.029929	1	2	0	synth with cache (only 1: eauto using Rmult_le_compat_r with rorders).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_compat	1	0.034216	8	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_ge_compat	1	0.027618	0	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_gt_0_lt_compat	1	0.030337	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_0_lt_compat	1	0.031327	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_0_compat	1	0.033046	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_compat_neg_l	1	0.038595	3	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	1	0.035507	3	4	0.0.0	synth with cache (only 1: intros; only 1: apply Rle_ge; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	1	0.032188	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_reg_l	1	0.033458	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_reg_r	1	1.018345	2853	2873
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_gt_reg_l	1	0.038763	7	7	1	synth with cache (only 1: eauto using Rmult_lt_reg_l with rorders).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_reg_l	1	0.038657	8	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_reg_r	1	1.020526	2620	2639
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_minus	1	0.034755	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_minus	1	0.034875	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_Rminus	1	0.034903	3	4	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rgt_minus).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_minus	1	0.047877	5	6	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: unfold Rle; only 1: auto with real; only 1: unfold Rle; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_minus	1	0.036690	4	5	0.0.0.0	synth with cache (only 1: destruct 1; only 1: auto using Rgt_minus, Rgt_ge; only 1: right; only 1: auto using Rminus_diag_eq with rorders).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_lt	1	0.033671	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_gt	1	0.034636	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_gt_0_lt	1	0.035538	3	4	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rminus_gt).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_le	1	0.035970	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_ge	1	0.035933	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.tech_Rplus	1	0.040331	11	11	0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: apply not_eq_sym; only 1: apply Rlt_not_eq; only 1: apply Rle_lt_trans with r; only 1: assumption; only 1: pattern r at 1; only 1: rewrite <- Rplus_0_r; only 1: apply Rplus_lt_compat_l; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_0_sqr	1	0.035193	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_0_sqr	1	0.035286	3	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_sqr_eq_0_l	1	0.036739	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_sqr_eq_0	1	0.041245	8	9	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: apply Rplus_sqr_eq_0_l with r2; only 1: auto with real; only 1: apply Rplus_sqr_eq_0_l with r1; only 1: rewrite Rplus_comm; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_0_1	1	0.034369	2	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_0_1	1	0.034684	2	3	0.0	synth with cache (only 1: left; only 1: exact Rlt_0_1).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_0_lt_compat	1	0.035738	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_lt_0_compat	1	0.035659	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_lt_contravar	1	0.035048	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_1_lt_contravar	1	0.037422	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_lt_0_plus_1	1	0.034140	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_plus_1	1	0.042091	14	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.tech_Rgt_minus	1	0.039518	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.S_INR	1	0.039256	4	5	0.0.0.0	synth with cache (only 1: intros ?; only 1: case n; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.S_O_plus_INR	1	0.040678	6	7	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: simpl; only 1: case n; only 1: auto with real; only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.plus_INR	1	0.039975	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.minus_INR	1	0.037949	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.mult_INR	1	0.050795	10	11	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: induction n; only 1: simpl; only 1: auto with real; only 1: rewrite S_INR; only 1: simpl; only 1: rewrite plus_INR; only 1: rewrite IHn; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.pow_INR	1	0.040615	6	7	0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: easy; only 1: simpl; only 1: rewrite mult_INR; only 1: rewrite IHn; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.lt_0_INR	1	0.041302	5	6	0.0.0.0.0	synth with cache (only 1: simple induction 1; only 1: auto with real; only 1: intros; only 1: rewrite S_INR; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.lt_INR	1	0.040907	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.lt_1_INR	1	0.037888	1	2	0	synth with cache (only 1: apply lt_INR).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.pos_INR_nat_of_P	1	0.038556	3	4	0.0.0	synth with cache (only 1: intros ?; only 1: apply lt_0_INR; only 1: apply Pos2Nat.is_pos).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.pos_INR	1	0.049318	4	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_lt	1	0.040555	7	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.le_INR	1	0.041113	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_not_0	1	0.041429	7	8	0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: rewrite H0; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.not_0_INR	1	0.041645	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.not_INR	1	0.040672	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_eq	1	0.040423	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_le	1	0.041445	4	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.not_1_INR	1	0.040094	2	3	0.0	synth with cache (only 1: intros ?; only 1: apply not_INR).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.IZN	1	0.038445	2	3	0.0	synth with cache (only 1: intros ?; only 1: apply Z_of_nat_complete).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_IPR	1	0.039279	1	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_IZR_INZ	1	0.043868	8	9	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct n; only 1: easy; only 1: simpl BinIntDef.Z.of_nat; only 1: unfold IZR; only 1: rewrite <- INR_IPR; only 1: rewrite SuccNat2Pos.id_succ; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.plus_IZR_NEG_POS	1	0.078000	33	34	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: rewrite Z.pos_sub_spec; only 1: case Pos.compare_spec; only 1: intros ?; only 1: unfold IZR; only 1: subst; only 1: ring; only 1: intros ?; only 1: unfold IZR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_sub; only 1: rewrite minus_INR; only 1: ring; only 1: apply Nat.lt_le_incl; only 1: apply Pos2Nat.inj_lt; only 1: trivial; only 1: trivial; only 1: intros ?; only 1: unfold IZR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_sub; only 1: rewrite minus_INR; only 1: ring; only 1: apply Nat.lt_le_incl; only 1: apply Pos2Nat.inj_lt; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.plus_IZR	1	0.060775	32	33	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct n; only 1: intros ?; only 1: destruct m; only 1: auto with real; only 1: auto with real; only 1: auto with real; only 1: intros ?; only 1: destruct m; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_add; only 1: apply plus_INR; only 1: apply plus_IZR_NEG_POS; only 1: intros ?; only 1: destruct m; only 1: auto with real; only 1: rewrite Z.add_comm; only 1: rewrite Rplus_comm; only 1: apply plus_IZR_NEG_POS; only 1: simpl; only 1: unfold IZR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_add; only 1: rewrite plus_INR; only 1: apply Ropp_plus_distr).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.mult_IZR	1	0.108255	56	57	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: case n; only 1: case m; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: case m; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: intros ?; only 1: intros ?; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite mult_INR; only 1: ring; only 1: simpl; only 1: unfold IZR; only 1: intros ?; only 1: intros ?; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite mult_INR; only 1: ring; only 1: case m; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: intros ?; only 1: intros ?; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite mult_INR; only 1: ring; only 1: simpl; only 1: unfold IZR; only 1: intros ?; only 1: intros ?; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite mult_INR; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.pow_IZR	1	0.060216	17	18	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite Zpower_pos_nat; only 1: rewrite SuccNat2Pos.id_succ; only 1: unfold Zpower_nat; only 1: simpl; only 1: rewrite mult_IZR; only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite mult_IZR; only 1: ring [ IHn ]).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.succ_IZR	1	0.047924	3	4	0.0.0	synth with cache (only 1: intros ?; only 1: unfold BinIntDef.Z.succ; only 1: apply plus_IZR).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.opp_IZR	1	0.047512	11	12	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct n; only 1: unfold IZR; only 1: simpl; only 1: auto with real; only 1: unfold IZR; only 1: simpl; only 1: auto with real; only 1: unfold IZR; only 1: simpl; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.minus_IZR	1	0.044258	5	6	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold BinIntDef.Z.sub; only 1: unfold Rminus; only 1: rewrite <- opp_IZR; only 1: apply plus_IZR).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Z_R_minus	1	0.045604	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Rminus; only 1: unfold BinIntDef.Z.sub; only 1: rewrite <- Ropp_Ropp_IZR; only 1: symmetry; only 1: apply plus_IZR).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.lt_0_IZR	1	0.044325	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.lt_IZR	1	0.044866	7	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.eq_IZR_R0	1	0.045324	5	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.eq_IZR	1	0.045700	4	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.not_0_IZR	1	0.049076	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: red; only 1: intros ?; only 1: case H; only 1: apply eq_IZR; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.le_0_IZR	1	0.045969	7	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.le_IZR	1	0.052028	13	13
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.le_IZR_R1	1	0.044570	2	3	0.0	synth with cache (only 1: intros ?; only 1: apply le_IZR).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.IZR_ge	1	0.049841	7	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.IZR_le	1	0.047976	8	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.IZR_lt	1	0.048438	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.IZR_neq	1	0.045591	6	7	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: red; only 1: intros ?; only 1: elim H; only 1: apply eq_IZR; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.one_IZR_lt1	1	0.051436	8	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.one_IZR_r_R1	1	0.056572	12	13
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.single_z_r_R1	1	0.046829	4	5	0.0.0.0	synth with cache (only 1: intros; only 1: apply one_IZR_r_R1 with r; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.tech_single_z_r_R1	1	0.056770	14	15	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H1; only 1: destruct H1; only 1: destruct H2; only 1: apply H1; only 1: apply single_z_r_R1 with r; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_pos	1	0.046405	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_le_contravar	1	0.053975	13	14	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: apply Rlt_le; only 1: apply Rinv_lt_contravar with (2 := H0); only 1: apply Rmult_lt_0_compat with (1 := H); only 1: apply Rlt_trans with x; only 1: assumption; only 1: apply H0; only 1: rewrite H0; only 1: apply Rle_refl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_Rinv	1	0.051857	15	16	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H0; only 1: intros ?; only 1: destruct H0; only 1: apply Rlt_le; only 1: apply Rinv_lt_contravar with (2 := H0); only 1: apply Rmult_lt_0_compat with (1 := H); only 1: apply Rlt_trans with x; only 1: assumption; only 1: apply H0; only 1: rewrite H0; only 1: apply Rle_refl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_div	1	0.053499	5	6	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Rdiv; only 1: rewrite <- Ropp_mult_distr_l_reverse; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.double	1	0.051915	2	3	0.0	synth with cache (only 1: intros ?; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.double_var	1	0.052688	8	9	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- double; only 1: unfold Rdiv; only 1: rewrite <- Rmult_assoc; only 1: symmetry; only 1: apply Rinv_r_simpl_m; only 1: apply not_0_IZR; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.R_rm	1	0.130815	103	104	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: easy; only 1: easy; only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: auto with real; only 1: auto with real; only 1: auto with real; only 1: intros ?; only 1: destruct y; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_add; only 1: apply plus_INR; only 1: apply plus_IZR_NEG_POS; only 1: intros ?; only 1: destruct y; only 1: auto with real; only 1: rewrite Z.add_comm; only 1: rewrite Rplus_comm; only 1: apply plus_IZR_NEG_POS; only 1: simpl; only 1: unfold IZR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_add; only 1: rewrite plus_INR; only 1: apply Ropp_plus_distr; only 1: intros; only 1: unfold BinIntDef.Z.sub; only 1: unfold Rminus; only 1: rewrite <- opp_IZR; only 1: apply plus_IZR; only 1: intros ?; only 1: intros ?; only 1: case x; only 1: case y; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: case y; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: intros ?; only 1: intros ?; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite mult_INR; only 1: ring; only 1: simpl; only 1: unfold IZR; only 1: intros ?; only 1: intros ?; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite mult_INR; only 1: ring; only 1: case y; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: intros ?; only 1: intros ?; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite mult_INR; only 1: ring; only 1: simpl; only 1: unfold IZR; only 1: intros ?; only 1: intros ?; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite mult_INR; only 1: ring; only 1: exact opp_IZR; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply f_equal; only 1: apply Zeq_bool_eq; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Zeq_bool_IZR	1	0.047043	4	5	0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Zeq_is_eq_bool; only 1: apply eq_IZR; only 1: auto with zarith real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	1	0.046419	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.le_epsilon	1	0.047831	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.completeness_weak	1	0.047766	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rdiv_lt_0_compat	1	0.048628	4	5	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rdiv_plus_distr	1	0.050076	4	5	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Rmult_plus_distr_r).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rdiv_minus_distr	1	0.063226	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rminus; only 1: unfold Rdiv; only 1: rewrite Rmult_plus_distr_r; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_EM_T	1	0.050836	3	4
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.RTheory	1	1.008690	2990	2576
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rfield	1	0.011916	7	7	0.0.1.0.0	synth with cache (only 1: constructor; only 1: exact RTheory; only 1: exact R1_neq_R0; only 1: reflexivity; only 1: exact Rinv_l).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rlt_n_Sn	1	0.014203	14	12
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rlt_0_2	1	0.008665	2	2
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rgen_phiPOS	1	0.009236	1	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	1	0.010434	3	5
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rdef_pow_add	1	0.011152	4	6
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.R_power_theory	1	0.008791	1	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.is_upper_bound_dec	1	0.010699	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.is_upper_bound_epsilon	1	0.015781	11	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.is_upper_bound_not_epsilon	1	0.013470	7	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.DDlow_below_up	1	0.009159	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.DDcut_limit_fix	1	0.016179	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.DDcut_limit	1	0.009553	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.glb_dec_Q	1	0.009873	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.is_upper_bound_glb	1	0.014720	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.is_upper_bound_closed	1	0.019222	8	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.sig_lub	1	0.013357	6	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.CR_sig_lub	1	0.012490	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rdefinitions.total_order_T	1	0.011023	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rdefinitions.Req_appart_dec	1	0.009553	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rdefinitions.Rrepr_appart_0	1	0.021992	13	14	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply CRealLtDisjunctEpsilon; only 1: destruct H; only 1: left; only 1: rewrite Rlt_def in H; only 1: rewrite R0_def in H; only 1: rewrite Rquot2 in H; only 1: exact H; only 1: right; only 1: rewrite Rlt_def in H; only 1: rewrite R0_def in H; only 1: rewrite Rquot2 in H; only 1: exact H).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rdefinitions.up	1	0.013942	1	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	1	0.032981	31	32	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply and_hprop; only 1: apply forall_hprop; only 1: intros ?; only 1: apply forall_hprop; only 1: intros ?; only 1: apply impl_hprop; only 1: apply impl_hprop; only 1: intros ?; only 1: intros ?; only 1: apply eq_proofs_unicity_on; only 1: intros ?; only 1: destruct f; only 1: destruct y; only 1: left; only 1: reflexivity; only 1: right; only 1: discriminate; only 1: destruct y; only 1: right; only 1: discriminate; only 1: left; only 1: reflexivity; only 1: apply and_hprop; only 1: apply not_hprop; only 1: apply and_hprop; only 1: apply not_hprop; only 1: apply forall_hprop; only 1: intros ?; only 1: apply impl_hprop; only 1: apply not_hprop).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.lowerCutBelow	1	0.008851	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.lowerCutAbove	1	0.009004	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	1	0.025204	7	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealQlim	1	0.011061	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealAbstr	1	0.008985	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.UpperAboveLower	1	0.014580	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealRepr	1	0.008255	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.Rle_antisym	1	0.017782	9	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.lowerUpper	1	0.014634	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealOpen	1	0.010479	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealReprQ	1	0.016082	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealReprQup	1	0.089587	15	16
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealQuot1	1	0.012101	6	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	1	0.392334	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct x; only 1: unfold DRealAbstr in H; only 1: unfold proj1_sig in H; only 1: destruct sig_forall_dec; only 1: discriminate; only 1: apply q1).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealQuot2	1	0.083019	10	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_increasing_inv	1	0.011361	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_unique	1	0.012349	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.Endomorph_id	1	0.015251	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_proper	1	0.015640	9	10	0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: apply CRmorph_increasing_inv in H0; only 1: destruct H; only 1: contradiction; only 1: intros ?; only 1: apply CRmorph_increasing_inv in H0; only 1: destruct H; only 1: contradiction).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_compose	1	0.010339	1	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le	1	0.012930	4	5	0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: apply CRmorph_increasing_inv in H0; only 1: contradiction).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le_inv	1	0.011235	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_zero	1	0.010649	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_one	1	0.010772	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_opp	1	0.011852	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	1	0.011123	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	1	0.010938	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus_rat	1	0.011546	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus	1	0.012909	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos	1	0.008472	0	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.NatOfZ	1	0.011347	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_int	1	0.010832	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_inv	1	0.012748	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_rat	1	0.013089	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	1	0.012412	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	1	0.016009	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult	1	0.011924	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart	1	0.015514	8	9	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct app; only 1: left; only 1: apply CRmorph_increasing; only 1: exact c; only 1: right; only 1: apply CRmorph_increasing; only 1: exact c).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart_zero	1	0.013561	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_inv	1	0.013402	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph	1	0.010614	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_rat	1	0.058253	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Ql	1	0.088796	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Qr	1	0.096647	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing	1	0.009467	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphism	1	0.010535	1	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.RightBound	1	0.016352	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv	1	0.008361	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_rat	1	0.077407	12	13
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing_Qr	1	0.011433	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing	1	0.009343	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphismInv	1	0.010217	1	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_surject	1	0.012443	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inject	1	0.010960	2	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Z.Zcri	1	0.009322	2	3	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Z.Z_one_zero	1	0.007006	0	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Z.Zdi	1	0.011271	3	4	0.0.0	synth with cache (only 1: constructor; only 1: exact Zmult_integral; only 1: exact Z_one_zero).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.CReal_absSmall	1	0.064156	15	16
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.Un_cv_mod_eq	1	0.012401	6	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.Rfloor	1	0.008823	1	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.FQ_dense	1	0.010656	4	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.RQ_limit	1	0.194960	9	10	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply FQ_dense; only 1: rewrite <- CReal_plus_0_r; only 1: rewrite CReal_plus_assoc; only 1: apply CReal_plus_lt_compat_l; only 1: rewrite CReal_plus_0_l; only 1: apply inject_Q_lt; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.Rdiag_cauchy_sequence	1	0.020868	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.doubleLeCovariant	1	0.026702	7	8	0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: rewrite <- H; only 1: rewrite <- H0; only 1: apply H2; only 1: rewrite <- H0; only 1: rewrite <- H1; only 1: apply H2).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.CReal_cv_self	1	0.013346	6	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.Un_cv_extens	1	0.010642	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.R_has_all_rational_limits	1	0.010066	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.Rcauchy_complete	1	0.013231	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.CRealImplem	1	0.007660	1	2
coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatAxioms.Prim2SF_inj	1	0.012916	6	7	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- SF2Prim_Prim2SF; only 1: symmetry; only 1: rewrite <- SF2Prim_Prim2SF; only 1: rewrite H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatAxioms.SF2Prim_inj	1	0.014874	8	9	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Prim2SF_SF2Prim; only 1: symmetry; only 1: rewrite <- Prim2SF_SF2Prim; only 1: rewrite H; only 1: reflexivity; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	1	0.168744	39	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: constructor; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	1	0.009452	1	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	1	0.010372	1	2	0	synth with cache (only 1: apply eqb_spec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Ring63.TestRing.test	1	0.020137	2	3	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Q.Qri	1	0.028951	17	18	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: apply Q_Setoid; only 1: apply Qplus_comp; only 1: apply Qmult_comp; only 1: apply Qminus_comp; only 1: apply Qopp_comp; only 1: exact Qplus_0_l; only 1: exact Qplus_comm; only 1: apply Qplus_assoc; only 1: exact Qmult_1_l; only 1: exact Qmult_1_r; only 1: apply Qmult_assoc; only 1: apply Qmult_plus_distr_l; only 1: intros; only 1: apply Qmult_plus_distr_r; only 1: reflexivity; only 1: exact Qplus_opp_r).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Q.Qcri	1	0.009753	2	3	0.0	synth with cache (only 1: red; only 1: exact Qmult_comm).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Q.Q_one_zero	1	0.008914	1	2	0	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Q.Qdi	1	0.036912	3	4	0.0.0	synth with cache (only 1: constructor; only 1: exact Qmult_integral; only 1: exact Q_one_zero).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	1	0.017882	5	6	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite is_zero_spec; only 1: intros ?; only 1: rewrite H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	1	0.012389	1	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	1	0.016110	4	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	1	0.015254	4	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	1	0.015716	6	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	1	0.019313	4	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	1	0.012610	5	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.P	1	0.010377	1	2	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	1	0.012887	2	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	1	0.011886	3	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	1	0.015852	4	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	1	0.051495	39	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: constructor; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	1	0.010764	1	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	1	0.032285	15	16	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold eqb31; only 1: intros ?; only 1: intros ?; only 1: rewrite spec_compare; only 1: split; only 1: case Z.compare_spec; only 1: intuition; only 1: apply Int31_canonic; only 1: auto; only 1: easy; only 1: easy; only 1: intros ?; only 1: intropattern subst -> H; only 1: rewrite Z.compare_refl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	1	0.010508	1	2	0	synth with cache (only 1: apply eqb31_eq).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.TestRing.test	1	0.052784	2	3	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Integral_domain.integral_domain.integral_domain_minus_one_zero	1	0.011606	3	4
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Integral_domain.integral_domain.pow_not_zero	1	0.008257	0	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Integral_domain.integral_domain.Rintegral_domain_pow	1	0.012255	2	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_eq0	1	0.009655	0	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_not_eq0	1	0.016155	6	7	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H0 in H; only 1: simpl in *; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakl_shiftr	1	0.010801	0	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakr_shiftl	1	0.009436	0	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_zero	1	0.010546	0	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_or_twice_plus_one	1	0.012148	2	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S	1	0.011585	1	2	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S_tail	1	0.016500	8	9	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: elim n; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: f_equal; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_n_0	1	0.010739	0	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_size	1	0.009923	0	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_above_size	1	0.011845	2	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S	1	0.011443	1	2	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S_tail	1	0.018100	9	10	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: elim n; only 1: simpl; only 1: intros; only 1: f_equal; only 1: simpl; only 1: intros; only 1: f_equal; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_n_0	1	0.011028	0	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_size	1	0.010630	0	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_above_size	1	0.013014	2	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstr_firstl	1	0.011291	0	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstl_firstr	1	0.010559	0	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_predsize_0_firstl	1	0.011785	0	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_propagates	1	0.015562	2	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_firstl	1	0.028496	5	6	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply nshiftr_predsize_0_firstl; only 1: apply nshiftr_0_propagates with n; only 1: lia; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_sneakl	1	0.014685	2	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_twice	1	0.018953	0	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_eqn	1	0.023800	4	5	0.0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_converges	1	0.010834	0	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_eqn	1	0.011981	3	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_aux_equiv	1	0.009633	0	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_equiv	1	0.010876	2	3	0.0	synth with cache (only 1: intros; only 1: apply recrbis_aux_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incrbis_aux_equiv	1	0.015862	7	8	0.0.0.0.0.0.0	synth with cache (only 1: unfold incr; only 1: unfold recr; only 1: unfold incrbis_aux; only 1: fold Incr; only 1: intros; only 1: apply recrbis_aux_equiv; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn1	1	0.011656	2	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn2	1	0.011961	2	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice	1	0.019745	8	9	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite incr_eqn1; only 1: destruct x; only 1: simpl; only 1: auto; only 1: destruct x; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice_plus_one_firstl	1	0.023811	10	11	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite incr_eqn2; only 1: f_equal; only 1: f_equal; only 1: destruct x; only 1: simpl in *; only 1: rewrite H; only 1: auto; only 1: destruct x; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phibis_aux_equiv	1	0.013639	7	8	0.0.0.0.0.0.0	synth with cache (only 1: unfold phi; only 1: unfold recr; only 1: unfold phibis_aux; only 1: fold Phi; only 1: intros; only 1: apply recrbis_aux_equiv; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn1	1	0.011581	2	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn2	1	0.011037	2	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_firstl	1	0.023951	10	11	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite phi_eqn1; only 1: f_equal; only 1: f_equal; only 1: destruct x; only 1: simpl in *; only 1: rewrite H; only 1: auto; only 1: destruct x; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_plus_one_firstl	1	0.023814	10	11	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite phi_eqn2; only 1: f_equal; only 1: f_equal; only 1: destruct x; only 1: simpl in *; only 1: rewrite H; only 1: auto; only 1: destruct x; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_pos	1	0.009514	0	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_bounded	1	0.009282	0	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_nonneg	1	0.011661	4	4	0.1.0	synth with cache (only 1: intros; only 1: rewrite <- phibis_aux_equiv; only 1: apply phibis_aux_pos).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_bounded	1	0.012361	5	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_lowerbound	1	0.009438	0	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_lowerbound	1	0.025329	2	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_zero	1	0.028656	7	8	0.0.0.0.0.0.0	synth with cache (only 1: unfold EqShiftL; only 1: intros; only 1: unfold nshiftl; only 1: simpl; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_size	1	0.016809	7	8	0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: rewrite nshiftl_above_size; only 1: rewrite nshiftl_above_size; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_le	1	0.012895	3	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_firstr	1	0.017946	8	9	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite firstr_firstl; only 1: rewrite firstr_firstl; only 1: f_equal; only 1: apply EqShiftL_le with k; only 1: unfold size; only 1: auto with arith; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice	1	0.016693	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold EqShiftL; only 1: rewrite nshiftl_S_tail; only 1: rewrite nshiftl_S_tail; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_length	1	0.012027	2	3	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.l2i_i2l	1	0.010989	0	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakr	1	0.010378	0	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakl	1	0.009149	0	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_l2i	1	0.008834	0	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_nshiftl	1	0.010206	0	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_i2l	1	0.011761	2	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice_plus_one	1	0.011488	2	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_shiftr	1	0.010625	2	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incrbis	1	0.010495	0	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incr	1	0.016218	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- incrbis_aux_equiv; only 1: rewrite <- incrbis_aux_equiv; only 1: apply EqShiftL_incrbis; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_twice_plus_one	1	0.040883	10	11	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite incr_eqn2; only 1: apply EqShiftL_incr; only 1: red; only 1: destruct x; only 1: simpl; only 1: auto; only 1: destruct x; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_firstr	1	0.011050	2	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_inv	1	0.011844	2	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double_plus_one	1	0.018049	0	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double	1	0.009572	0	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_incr	1	0.009455	0	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi_aux	1	0.009839	0	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi	1	0.012030	3	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_bounded	1	0.010027	0	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_spec	1	0.009806	0	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_positive_p2ibis	1	0.009326	0	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_positive	1	0.011412	2	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_firstl	1	0.013447	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold mul31; only 1: rewrite <- Z.double_spec; only 1: rewrite <- phi_twice_firstl; only 1: rewrite phi_inv_phi; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_plus_one_firstl	1	0.016866	11	12	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite double_twice_firstl; only 1: unfold add31; only 1: rewrite phi_twice_firstl; only 1: rewrite <- Z.succ_double_spec; only 1: rewrite <- phi_twice_plus_one_firstl; only 1: rewrite phi_inv_phi; only 1: auto; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2i_p2ibis	1	0.011247	0	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_phi_inv_positive	1	0.013782	6	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_spec	1	0.015406	6	7	0.0.0.0.0.0	synth with cache (only 1: unfold positive_to_int31; only 1: intros; only 1: rewrite p2i_p2ibis; only 1: apply p2ibis_spec; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice	1	0.013122	5	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice_plus_one	1	0.024704	5	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_incr	1	0.014664	5	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_negative	1	0.009754	0	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv	1	0.009306	0	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.wB_pos	1	0.011138	1	2	0	synth with cache (only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_zdigits	1	0.013316	1	2	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_more_than_1_digit	1	0.011463	1	2	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_0	1	0.010549	1	2	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_1	1	0.010849	1	2	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_m1	1	0.012298	1	2	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_compare	1	0.010541	1	2	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_c	1	0.018595	6	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ_c	1	0.012626	2	3	0.0	synth with cache (only 1: intros; only 1: apply spec_add_c).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry_c	1	0.017813	5	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add	1	0.012176	2	3	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry	1	0.019134	5	6	0.0.0.0.0	synth with cache (only 1: unfold add31; only 1: intros; only 1: rewrite phi_phi_inv; only 1: rewrite phi_phi_inv; only 1: apply Zplus_mod_idemp_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ	1	0.014122	3	4	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- spec_1; only 1: apply spec_add).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_c	1	0.020627	6	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry_c	1	0.021214	5	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub	1	0.012306	2	3	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry	1	0.019675	5	6	0.0.0.0.0	synth with cache (only 1: unfold sub31; only 1: intros; only 1: rewrite phi_phi_inv; only 1: rewrite phi_phi_inv; only 1: apply Zminus_mod_idemp_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_c	1	0.014067	2	3	0.0	synth with cache (only 1: intros; only 1: apply spec_sub_c).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp	1	0.012841	2	3	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_carry	1	0.021350	5	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred_c	1	0.013184	2	3	0.0	synth with cache (only 1: intros; only 1: apply spec_sub_c).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred	1	0.013349	2	3	0.0	synth with cache (only 1: intros; only 1: apply spec_sub).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi2_phi_inv2	1	0.010935	1	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul_c	1	0.020397	5	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul	1	0.012781	2	3	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_square_c	1	0.011371	2	3	0.0	synth with cache (only 1: intros; only 1: apply spec_mul_c).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div21	1	0.019186	3	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div	1	0.014121	3	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mod	1	0.012817	3	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_gcd	1	0.018107	8	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_gcd	1	0.014675	6	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter_int31_iter_nat	1	0.032495	12	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.addmuldiv31_equiv	1	0.013623	3	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_mul_div	1	0.013916	3	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.shift_unshift_mod_2	1	0.027983	6	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pos_mod	1	0.034665	4	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head00	1	0.026425	2	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.head031_equiv	1	0.023624	2	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_nz	1	0.018046	8	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head0	1	0.013151	3	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail00	1	0.018092	2	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.tail031_equiv	1	0.023989	2	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail0	1	0.013122	3	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.quotient_by_2	1	0.010331	1	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main_trick	1	0.027047	13	15
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main	1	0.011484	3	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_init	1	0.010339	2	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_true	1	0.012767	5	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_false	1	0.012198	4	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_def	1	0.028997	8	9	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold sqrt31_step; only 1: case div31; only 1: intros; only 1: simpl; only 1: case compare31; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div31_phi	1	0.012649	2	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_correct	1	0.014255	1	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter31_sqrt_correct	1	0.262855	68	69
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt	1	0.024276	5	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_def	1	0.037551	8	9	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold sqrt312_step; only 1: case div3121; only 1: intros; only 1: simpl; only 1: case compare31; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_lower_bound	1	0.010741	2	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div312_phi	1	0.014048	3	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_correct	1	0.012839	1	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter312_sqrt_correct	1	0.270150	63	64	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert rec ih il j; only 1: elim n; only 1: unfold iter312_sqrt; only 1: clear n; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply sqrt312_step_correct; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith; only 1: intros; only 1: apply H2; only 1: lia; only 1: rewrite Z.pow_0_r; only 1: lia; only 1: lia; only 1: unfold iter312_sqrt; only 1: fold iter312_sqrt; only 1: clear n; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply sqrt312_step_correct; only 1: auto; only 1: auto; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: lia; only 1: lia; only 1: lia; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H3; only 1: auto; only 1: rewrite Nat2Z.inj_succ; only 1: rewrite Z.pow_succ_r; only 1: lia; only 1: lia).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt2	1	0.025790	5	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_eq0	1	0.016443	5	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_is_even	1	0.026258	4	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.log2_phi_bounded	1	0.010644	1	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lor	1	0.028208	19	20	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold ZnZ.lor; only 1: unfold int31_ops; only 1: unfold lor31; only 1: rewrite phi_phi_inv; only 1: apply Z.mod_small; only 1: split; only 1: apply Z.lor_nonneg; only 1: split; only 1: apply phi_bounded; only 1: apply phi_bounded; only 1: apply Z.log2_lt_cancel; only 1: rewrite Z.log2_pow2; only 1: rewrite Z.log2_lor; only 1: apply Z.max_lub_lt; only 1: apply log2_phi_bounded; only 1: apply log2_phi_bounded; only 1: apply phi_bounded; only 1: apply phi_bounded; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_land	1	0.030948	19	20	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold ZnZ.land; only 1: unfold int31_ops; only 1: unfold land31; only 1: rewrite phi_phi_inv; only 1: apply Z.mod_small; only 1: split; only 1: apply Z.land_nonneg; only 1: left; only 1: apply phi_bounded; only 1: apply Z.log2_lt_cancel; only 1: rewrite Z.log2_pow2; only 1: eapply Z.le_lt_trans; only 1: apply Z.log2_land; only 1: apply phi_bounded; only 1: apply phi_bounded; only 1: apply Z.min_lt_iff; only 1: left; only 1: apply log2_phi_bounded; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lxor	1	0.031308	22	23	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold ZnZ.lxor; only 1: unfold int31_ops; only 1: unfold lxor31; only 1: rewrite phi_phi_inv; only 1: apply Z.mod_small; only 1: split; only 1: apply Z.lxor_nonneg; only 1: split; only 1: intros; only 1: apply phi_bounded; only 1: intros; only 1: apply phi_bounded; only 1: apply Z.log2_lt_cancel; only 1: rewrite Z.log2_pow2; only 1: eapply Z.le_lt_trans; only 1: apply Z.log2_lxor; only 1: apply phi_bounded; only 1: apply phi_bounded; only 1: apply Z.max_lub_lt; only 1: apply log2_phi_bounded; only 1: apply log2_phi_bounded; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.cring.cring_eq_ext	1	0.036031	4	5	0.0.0.0	synth with cache (only 1: apply mk_reqe; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.cring.cring_almost_ring_theory	1	0.015007	4	6
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.cring.cring_morph	1	0.021136	8	10
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.cring.cring_power_theory	1	0.011982	2	3	0.0	synth with cache (only 1: apply Ring_theory.mkpow_th; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.cring.cring_div_theory	1	0.010539	4	6
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.Zcri	1	0.009340	2	3	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.BoundFromZero	1	0.020885	7	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.QCauchySeq_bounded	1	0.009961	1	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_cauchy	1	0.027169	10	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.linear_max	1	0.014630	9	10	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite max_l; only 1: rewrite Pos2Nat.inj_mul; only 1: apply Nat.mul_le_mono_nonneg; only 1: apply Nat.le_0_l; only 1: apply Nat.le_refl; only 1: apply Nat.le_0_l; only 1: apply H; only 1: apply Nat.le_refl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult	1	0.010262	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_unfold	1	0.043954	10	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc_bounded_r	1	0.012166	3	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc	1	0.015282	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_comm	1	0.015052	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_proper_l	1	0.070628	5	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat	1	0.017513	4	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	1	0.014561	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	1	0.013431	4	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_l	1	0.032170	11	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRingExt	1	0.014204	17	18
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRing	1	0.112745	57	54
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	1	0.010573	1	2	0	synth with cache (only 1: apply CReal_isRingExt).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_T	1	0.010260	1	2	0	synth with cache (only 1: apply CReal_isRingExt).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	1	0.022011	1	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_T	1	0.121082	1	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	1	0.017795	5	6	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold CReal_minus; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_T	1	0.019090	10	11	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold CReal_minus; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_l	1	0.010717	2	3	0.0	synth with cache (only 1: intros ?; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_r	1	0.011023	2	3	0.0	synth with cache (only 1: intros ?; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_r	1	0.010741	2	3	0.0	synth with cache (only 1: intros ?; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	1	0.012416	2	3	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	1	0.012192	2	3	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	1	0.009206	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	1	1.007587	34	36
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	1	0.012945	5	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	1	0.015248	4	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealArchimedean	1	0.012419	3	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.Rup_pos	1	0.008170	1	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealLtDisjunctEpsilon	1	0.009391	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftReal	1	0.020960	16	18
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftEqual	1	0.015935	7	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealNegShift	1	0.030296	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealPosShift	1	0.015392	2	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_neg	1	0.021938	10	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_pos	1	0.021927	10	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv	1	0.008646	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	1	0.078124	16	17
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift	1	0.019547	12	13
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift_eq	1	0.016769	6	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_l	1	0.070202	11	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_r	1	0.012122	4	5	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite CReal_mult_comm; only 1: rewrite CReal_inv_l; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_1	1	0.012323	4	5	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- CReal_mult_1_l; only 1: rewrite CReal_inv_r; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	1	0.010430	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.Rinv_eq_compat	1	0.014880	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	1	0.011611	6	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	1	1.007044	37	39
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	1	0.009945	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	1	0.019430	6	6	0.1.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	1	0.011157	3	4	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	1	0.008785	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	1	0.010811	5	6	0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: apply CReal_mult_lt_reg_l in H1; only 1: contradiction; only 1: apply H).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_invQ	1	0.011023	2	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealQ_dense	1	0.019063	4	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.inject_Q_mult	1	0.079480	17	18	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: destruct H; only 1: simpl in q0; only 1: destruct QCauchySeq_bounded; only 1: destruct QCauchySeq_bounded; only 1: simpl in q0; only 1: ring_simplify in q0; only 1: discriminate q0; only 1: intros ?; only 1: destruct H; only 1: simpl in q0; only 1: destruct QCauchySeq_bounded; only 1: destruct QCauchySeq_bounded; only 1: simpl in q0; only 1: ring_simplify in q0; only 1: discriminate q0).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_more_than_1_digit	1	0.013856	10	10	0.0.0.0.0.0.0.0.1	synth with cache (only 1: generalize digits_ne_1; only 1: destruct digits; only 1: red; only 1: auto; only 1: red; only 1: auto; only 1: red; only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.wB_pos	1	0.010013	4	5	0.0.0.0	synth with cache (only 1: apply Z.lt_gt; only 1: unfold wB; only 1: unfold base; only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_1	1	0.009758	3	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_2	1	0.009370	3	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z	1	0.009510	1	2	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_of_pos	1	0.031391	3	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_zdigits	1	0.012166	9	10	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold to_Z; only 1: unfold zdigits; only 1: apply Zmod_small; only 1: unfold wB; only 1: unfold base; only 1: split; only 1: auto with zarith; only 1: apply Zpower2_lt_lin; only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_0	1	0.015116	5	6	0.0.0.0.0	synth with cache (only 1: unfold to_Z; only 1: unfold zero; only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: lia).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_1	1	0.011405	8	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_Bm1	1	0.011234	7	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_compare	1	0.009519	1	2	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_eq0	1	0.014547	6	7	0.0.0.0.0.0	synth with cache (only 1: unfold eq0; only 1: intros; only 1: destruct to_Z; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_c	1	0.012732	4	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp	1	0.031384	4	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_carry	1	1.008740	2193	2211
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zmod_equal	1	0.011610	2	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ_c	1	0.013046	5	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_c	1	0.017117	7	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry_c	1	0.018438	7	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ	1	0.012236	6	7	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold succ; only 1: unfold to_Z; only 1: unfold BinIntDef.Z.succ; only 1: symmetry; only 1: apply Zplus_mod_idemp_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add	1	0.011137	4	5	0.0.0.0	synth with cache (only 1: intros; only 1: unfold add; only 1: unfold to_Z; only 1: apply Zplus_mod).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry	1	0.013508	5	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred_c	1	0.013329	5	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_c	1	0.022470	6	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry_c	1	0.017797	6	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred	1	0.012293	6	7	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold pred; only 1: unfold to_Z; only 1: unfold BinIntDef.Z.pred; only 1: rewrite <- Zplus_mod_idemp_l; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub	1	0.011295	4	5	0.0.0.0	synth with cache (only 1: intros; only 1: unfold sub; only 1: unfold to_Z; only 1: apply Zminus_mod).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry	1	0.012835	5	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul_c	1	0.012485	4	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul	1	0.011293	4	5	0.0.0.0	synth with cache (only 1: intros; only 1: unfold mul; only 1: unfold to_Z; only 1: apply Zmult_mod).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_square_c	1	0.010212	2	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div	1	0.012587	3	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div_gt	1	0.012315	3	4	0.0.0	synth with cache (only 1: intros; only 1: apply spec_div; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo	1	0.012818	4	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo_gt	1	0.011910	3	4	0.0.0	synth with cache (only 1: intros; only 1: apply spec_modulo; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zgcd_bound	1	0.012370	2	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd	1	0.018588	3	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd_gt	1	0.012851	2	3	0.0	synth with cache (only 1: intros; only 1: apply spec_gcd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div21	1	0.017222	3	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_mul_div	1	0.014621	3	4	0.0.0	synth with cache (only 1: intros; only 1: unfold add_mul_div; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pos_mod	1	0.015319	4	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_is_even	1	0.017978	5	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt	1	0.021316	5	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt2	1	0.020170	3	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.two_p_power2	1	0.017140	9	10	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold two_p; only 1: destruct x; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply two_power_pos_correct; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head00	1	0.016602	5	6	0.0.0.0.0	synth with cache (only 1: unfold head0; only 1: intros ?; only 1: intros ?; only 1: intropattern subst -> H; only 1: apply spec_zdigits).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head0	1	0.017756	3	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_pos	1	0.012766	0	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_bounded	1	0.012573	0	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail00	1	0.016954	4	5	0.0.0.0	synth with cache (only 1: unfold tail0; only 1: intros; only 1: rewrite H; only 1: apply spec_zdigits).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail0	1	0.019358	3	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lor	1	0.023134	9	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_land	1	0.029981	9	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lxor	1	0.022322	9	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_non_negative	1	0.010882	0	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.avl_node	1	0.013874	2	3	0.0	synth with cache (only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_0	1	0.020857	4	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.empty_avl	1	0.011249	2	3	0.0	synth with cache (only 1: unfold empty; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_avl	1	0.016367	2	3	0.0	synth with cache (only 1: unfold create; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_height	1	0.018957	3	4	0.0.0	synth with cache (only 1: unfold create; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_avl	1	0.019529	5	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_1	1	0.020388	5	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_2	1	0.028976	5	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl_1	1	0.015345	4	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl	1	0.012486	2	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl_1	1	0.028567	5	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl	1	0.018103	2	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl_1	1	0.019781	3	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl	1	0.017905	2	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl_1	1	0.016963	3	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl	1	0.012239	2	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl_1	1	0.051777	6	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl	1	0.013031	2	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.concat_avl	1	0.012181	3	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.split_avl	1	0.012434	3	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map.map_height	1	0.013179	0	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map.map_avl	1	0.010059	0	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_height	1	0.009985	0	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_avl	1	0.009753	0	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map_option.map_option_avl	1	0.009959	0	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map2_opt.map2_opt_avl	1	0.012399	3	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map2.map2_avl	1	0.015488	2	3	0.0	synth with cache (only 1: unfold map2; only 1: auto using map2_opt_avl, map_option_avl).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.MapsTo_1	1	0.014035	2	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.mem_1	1	0.020490	7	8	0.0.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: unfold mem; only 1: intros ?; only 1: intros ?; only 1: rewrite In_alt; only 1: apply mem_1; only 1: apply is_bst).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.mem_2	1	0.017633	6	7	0.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: unfold mem; only 1: intros ?; only 1: intros ?; only 1: rewrite In_alt; only 1: apply mem_2).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.empty_1	1	0.010233	1	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_1	1	0.010868	2	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_2	1	0.011943	2	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.add_1	1	0.015635	5	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.add_2	1	0.017015	6	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.add_3	1	0.016348	6	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.remove_1	1	0.036711	9	10	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: unfold remove; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite In_alt; only 1: simpl; only 1: apply remove_1; only 1: apply is_bst).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.remove_2	1	0.013536	5	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.remove_3	1	0.015158	5	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.find_1	1	0.015246	4	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.find_2	1	0.013188	2	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.fold_1	1	0.015752	2	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.elements_1	1	0.014640	5	6	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold elements; only 1: unfold eq_key_elt; only 1: rewrite elements_mapsto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.elements_2	1	0.014206	4	5	0.0.0.0	synth with cache (only 1: intros; only 1: unfold MapsTo; only 1: rewrite <- elements_mapsto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3	1	0.011141	2	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3w	1	0.011736	2	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.cardinal_1	1	0.013075	2	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.Equivb_Equivb	1	0.034108	7	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.equal_1	1	0.027104	13	14	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold equal; only 1: intros ?; only 1: destruct m; only 1: intros ?; only 1: destruct m'; only 1: intros ?; only 1: rewrite Equivb_Equivb; only 1: intros; only 1: simpl in *; only 1: rewrite equal_Equivb; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.equal_2	1	0.027241	13	14	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold equal; only 1: intros ?; only 1: destruct m; only 1: intros ?; only 1: destruct m'; only 1: intros ?; only 1: rewrite Equivb_Equivb; only 1: intros; only 1: simpl in *; only 1: rewrite <- equal_Equivb; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.map_1	1	0.015867	7	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.map_2	1	0.022770	10	11	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold In in *; only 1: rewrite In_alt; only 1: rewrite In_alt; only 1: simpl; only 1: apply map_2).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.mapi_1	1	0.018869	7	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.mapi_2	1	0.023369	10	11	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold In in *; only 1: rewrite In_alt; only 1: rewrite In_alt; only 1: simpl; only 1: apply mapi_2).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.map2_1	1	0.065288	18	19	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold find; only 1: unfold map2; only 1: unfold In; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite In_alt; only 1: rewrite In_alt; only 1: intros; only 1: simpl; only 1: apply map2_1; only 1: apply is_bst; only 1: apply is_bst; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.map2_2	1	0.052690	18	19	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: unfold map2; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite In_alt; only 1: rewrite In_alt; only 1: rewrite In_alt; only 1: intros; only 1: simpl in *; only 1: eapply map2_2; only 1: apply is_bst; only 1: apply is_bst; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.cons_cardinal_e	1	0.011428	0	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_tcc	1	0.014901	0	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.cons_Cmp	1	0.018601	0	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_Cmp	1	0.017791	2	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	1	0.020224	2	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare	1	0.018086	3	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_seq	1	0.021769	5	6	0.0.0.0.0	synth with cache (only 1: unfold eq; only 1: unfold seq; only 1: unfold selements; only 1: unfold LO.eq; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	1	0.017947	5	6	0.0.0.0.0	synth with cache (only 1: unfold lt; only 1: unfold slt; only 1: unfold selements; only 1: unfold LO.lt; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_1	1	0.038541	7	8	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite eq_seq; only 1: unfold seq; only 1: rewrite Equivb_Equivb; only 1: rewrite Equivb_elements; only 1: auto using LO.eq_1).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	1	0.027727	8	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_refl	1	0.013408	4	5	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite eq_seq; only 1: unfold seq; only 1: apply LO.eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_sym	1	0.021773	8	9	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite eq_seq; only 1: rewrite eq_seq; only 1: unfold seq; only 1: intros; only 1: apply LO.eq_sym; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_trans	1	0.026945	10	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_trans	1	0.031811	10	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	1	0.020627	9	10	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite lt_slt; only 1: rewrite eq_seq; only 1: unfold slt; only 1: unfold seq; only 1: intros; only 1: apply LO.lt_not_eq; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Translation.poly_of_formula_eval_compat	1	0.074686	67	68	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: induction f; only 1: simpl poly_of_formula; only 1: simpl formula_eval; only 1: simpl; only 1: destruct @list_nth; only 1: reflexivity; only 1: reflexivity; only 1: simpl poly_of_formula; only 1: simpl formula_eval; only 1: auto; only 1: simpl poly_of_formula; only 1: simpl formula_eval; only 1: auto; only 1: simpl poly_of_formula; only 1: simpl formula_eval; only 1: rewrite poly_mul_compat; only 1: rewrite IHf1; only 1: rewrite IHf2; only 1: ring; only 1: simpl poly_of_formula; only 1: simpl formula_eval; only 1: rewrite poly_add_compat; only 1: rewrite poly_add_compat; only 1: rewrite poly_mul_compat; only 1: try_rewrite; only 1: destruct formula_eval; only 1: destruct formula_eval; only 1: reflexivity; only 1: reflexivity; only 1: destruct formula_eval; only 1: reflexivity; only 1: reflexivity; only 1: simpl poly_of_formula; only 1: simpl formula_eval; only 1: rewrite poly_add_compat; only 1: try_rewrite; only 1: destruct formula_eval; only 1: reflexivity; only 1: reflexivity; only 1: simpl poly_of_formula; only 1: simpl formula_eval; only 1: rewrite poly_add_compat; only 1: congruence; only 1: simpl poly_of_formula; only 1: simpl formula_eval; only 1: rewrite poly_add_compat; only 1: rewrite poly_add_compat; only 1: rewrite poly_mul_compat; only 1: rewrite poly_mul_compat; only 1: try_rewrite; only 1: destruct formula_eval; only 1: destruct formula_eval; only 1: destruct formula_eval; only 1: reflexivity; only 1: reflexivity; only 1: destruct formula_eval; only 1: reflexivity; only 1: reflexivity; only 1: destruct formula_eval; only 1: destruct formula_eval; only 1: reflexivity; only 1: reflexivity; only 1: destruct formula_eval; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Translation.poly_of_formula_valid_compat	1	0.011806	4	5
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Translation.poly_of_formula_sound	1	0.014093	8	9	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- poly_of_formula_eval_compat; only 1: rewrite <- poly_of_formula_eval_compat; only 1: rewrite H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound	1	0.013732	7	8
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.list_nth_base	1	0.014247	6	7	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold list_nth; only 1: rewrite Pos.peano_rect_base; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.list_nth_succ	1	0.018884	6	7	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold list_nth; only 1: rewrite Pos.peano_rect_succ; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.list_nth_nil	1	0.014830	8	9	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction n using Pos.peano_rect; only 1: rewrite list_nth_base; only 1: easy; only 1: rewrite list_nth_succ; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.make_last_nth_1	1	0.037822	22	23
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.make_last_nth_2	1	0.018117	11	12
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.list_replace_nth_1	1	0.130309	34	35	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: induction var; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: rewrite make_last_nth_1; only 1: rewrite list_nth_nil; only 1: auto; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: induction j using Pos.peano_rect; only 1: rewrite Pos.peano_rect_base; only 1: induction i using Pos.peano_rect; only 1: elim H; only 1: auto; only 1: rewrite list_nth_succ; only 1: rewrite list_nth_succ; only 1: reflexivity; only 1: rewrite Pos.peano_rect_succ; only 1: induction i using Pos.peano_rect; only 1: rewrite list_nth_base; only 1: rewrite list_nth_base; only 1: reflexivity; only 1: rewrite list_nth_succ; only 1: rewrite list_nth_succ; only 1: apply IHvar; only 1: zify; only 1: omega).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.list_replace_nth_2	1	0.023922	16	17	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: induction var; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: apply make_last_nth_2; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: induction i using Pos.peano_rect; only 1: rewrite Pos.peano_rect_base; only 1: rewrite list_nth_base; only 1: reflexivity; only 1: rewrite Pos.peano_rect_succ; only 1: rewrite list_nth_succ; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.boolean_witness_nonzero	1	0.022945	16	17
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound_alt	1	0.013957	7	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	1	0.014032	7	8	0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: firstorder; only 1: firstorder; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply eq_trans).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_1	1	0.011474	6	7	0.0.0.0.0.0	synth with cache (only 1: unfold base; only 1: apply Zpower_gt_1; only 1: red; only 1: auto; only 1: unfold Z.lt; only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_0	1	0.012774	2	3	0.0	synth with cache (only 1: pose proof gt_wB_1; only 1: lia).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	1	0.013983	10	11	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite Zmod_small; only 1: auto; only 1: split; only 1: auto with zarith; only 1: unfold base; only 1: apply Zpower_gt_1; only 1: red; only 1: auto; only 1: unfold Z.lt; only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.succ_mod_wB	1	0.027615	4	5	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- one_mod_wB  at 2; only 1: rewrite <- Zplus_mod; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	1	0.026613	4	5	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- one_mod_wB  at 2; only 1: rewrite Zminus_mod; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	1	0.015592	6	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_succ	1	0.012751	1	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	1	0.016040	4	5	0.0.0.0	synth with cache (only 1: zify; only 1: simpl BinIntDef.Z.add; only 1: rewrite one_mod_wB; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.two_succ	1	0.009208	1	2	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B0	1	0.008462	0	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.BS	1	0.011287	4	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.Zbounded_induction	1	0.025636	4	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B_holds	1	0.012486	4	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.bi_induction	1	0.010778	2	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_0_l	1	0.021298	7	8	1.0.0.0	synth with cache (only 1: intros ?; only 1: zify; only 1: rewrite Z.add_0_l; only 1: apply NZ_to_Z_mod).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_succ_l	1	0.040738	9	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_0_r	1	0.018500	7	8	1.0.0.0	synth with cache (only 1: intros ?; only 1: zify; only 1: rewrite Z.sub_0_r; only 1: apply NZ_to_Z_mod).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	1	1.009126	1544	1559
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	1	0.015208	3	4	0.0.0	synth with cache (only 1: intros ?; only 1: zify; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_succ_l	1	0.030564	8	9	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: zify; only 1: rewrite Zplus_mod_idemp_l; only 1: rewrite Zmult_mod_idemp_l; only 1: rewrite Z.mul_add_distr_r; only 1: rewrite Z.mul_1_l; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_tac.Zeqb_ok	1	0.010083	4	5
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_tac.comm	1	0.011351	0	1
