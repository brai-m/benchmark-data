
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rplus_morph_Proper	40	15.6	synth with cache (only 1: intros x y; only 1: firstorder).	0.33195400238	404
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rtimes_morph_Proper	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.ropp_morph_Proper	40	34	synth with cache (only 1: firstorder).	0.811372041702	1316
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rle_morph_Proper	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rlt_morph_Proper	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rminus_morph_Proper	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rneq_symm	40	27.29	synth with cache (only 1: intros H1 H2 H3; only 1: intuition).	2.76700305939	5200
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_l	40	61.19	synth with cache (only 1: intros; only 1: firstorder).	1.57679891586	5714
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_r	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0186359882355	2
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_r	40	2.7	synth with cache (only 1: intro; only 1: ring).	0.0324840545654	23
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_comm	40	0.2.1	synth with cache (only 1: intro; only 1: intro; only 1: ring).	0.0200040340424	6
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_l	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0203959941864	2
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_comm	40	0.2.1	synth with cache (only 1: intro; only 1: intro; only 1: ring).	0.0272941589355	6
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rminus_eq_0	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_cancel_l	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_em	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_dne	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_eq	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_trans	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_trans	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_le_trans	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_gt_cases	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_neq	40	0.1.3.1	synth with cache (only 1: intros n m; only 1: rewrite Rlt_le_neq; only 1: intro H; only 1: now destruct H).	0.326384067535	20
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_ngt	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_nge	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_l	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_r	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_l	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_r	40	1.0.0.5.3.0	synth with cache (only 1: intros n m p; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm n p); only 1: do 2 rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).	2.27531695366	816
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_le_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_lt_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_pos	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_pos	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_le_minus	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_minus	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_lt_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_pos_neg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_nonneg_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_pos_neg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neg_neg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_square_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neq_0	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_neg_pos	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_0_1	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_succ_r	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_succ	40
Coq.micromega.Ztac.eq_incl	40	4.8.8	synth with cache (only 1: intros n Hn; only 1: intuition; only 1: now subst).	1.40975403786	903
Coq.micromega.Ztac.elim_concl_eq	40	15.5.0	synth with cache (only 1: intros n m; only 1: intuition; only 1: Z.Private_Tac.order).	2.80820012093	2117
Coq.micromega.Ztac.elim_concl_le	40	1.13	synth with cache (only 1: intros R L n; only 1: Z.order).	1.9031791687	1303
Coq.micromega.Ztac.elim_concl_lt	40
Coq.micromega.Ztac.Zlt_le_add_1	40	15.1.3	synth with cache (only 1: intros H; only 1: unfold Z.lt in *; only 1: apply Z.le_succ_l).	1.61445403099	777
Coq.micromega.Ztac.add_le	40	9.4	synth with cache (only 1: intros n m H; only 1: now apply Z.add_nonneg_nonneg).	0.271978139877	290
Coq.micromega.Ztac.mul_le	40
Coq.micromega.ZifyInst.PropAnd	40	5.36	synth with cache (only 1: split; only 1: tauto).	1.54790687561	940
Coq.micromega.ZifyInst.PropOr	40	2.53	synth with cache (only 1: split; only 1: tauto).	0.369751930237	1614
Coq.micromega.ZifyInst.PropArrow	40	8.8.46	synth with cache (only 1: do 2 constructor; only 1: tauto; only 1: tauto).	1.51076889038	2379
Coq.micromega.ZifyInst.PropIff	40	0.0.20	synth with cache (only 1: compute; only 1: constructor; only 1: tauto).	0.861773967743	232
Coq.micromega.ZifyInst.PropNot	40	0.0.64	synth with cache (only 1: constructor; only 1: intros; only 1: tauto).	1.4900188446	2465
Coq.micromega.ZifyInst.of_nat_to_nat_eq	40
Coq.micromega.ZifyInst.z_max_spec	40	11.1	synth with cache (only 1: intros; only 1: Z.solve_max).	0.267046928406	178
Coq.micromega.ZifyInst.z_min_spec	40	17.0	synth with cache (only 1: intros; only 1: Z.solve_min).	4.33888483047	1847
Coq.micromega.ZCoeff.InitialMorphism.req_refl	40
Coq.micromega.ZCoeff.InitialMorphism.req_sym	40
Coq.micromega.ZCoeff.InitialMorphism.req_trans	40
Coq.micromega.ZCoeff.InitialMorphism.rplus_morph_Proper	40	0	synth with cache (only 1: exact (SORplus_wd sor)).	0.0307929515839	1
Coq.micromega.ZCoeff.InitialMorphism.rtimes_morph_Proper	40	0	synth with cache (only 1: exact (SORtimes_wd sor)).	0.0269978046417	1
Coq.micromega.ZCoeff.InitialMorphism.ropp_morph_Proper	40	0	synth with cache (only 1: exact (SORopp_wd sor)).	0.0318031311035	1
Coq.micromega.ZCoeff.InitialMorphism.rle_morph_Proper	40	1	synth with cache (only 1: exact (SORle_wd sor)).	0.211138963699	40
Coq.micromega.ZCoeff.InitialMorphism.rlt_morph_Proper	40	0	synth with cache (only 1: exact (SORlt_wd sor)).	0.0323550701141	1
Coq.micromega.ZCoeff.InitialMorphism.rminus_morph_Proper	40	1.0.0.0.1	synth with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	0.385818004608	24
Coq.micromega.ZCoeff.InitialMorphism.ring_ops_wd	40
Coq.micromega.ZCoeff.InitialMorphism.Zring_morph	40
Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_pos	40
Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_succ	40
Coq.micromega.ZCoeff.InitialMorphism.clt_pos_morph	40
Coq.micromega.ZCoeff.InitialMorphism.clt_morph	40
Coq.micromega.ZCoeff.InitialMorphism.Zcleb_morph	40
Coq.micromega.ZCoeff.InitialMorphism.Zcneqb_morph	40
Coq.micromega.Fourier_util.Rlt_mult_inv_pos	40
Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	40	3.9.0	synth with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: apply (Rle_lt_0_plus_1 x (Rlt_le 0 x H))).	0.63935303688	193
Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40
Coq.micromega.Fourier_util.Rle_mult_inv_pos	40	0.0.0.12	synth with cache (only 1: intros r r1 r2 H; only 1: replace 0 with (r * 0); only 1: auto with real; only 1: auto with real).	2.0684659481	1074
Coq.micromega.ZifyClasses.mkapp2	40
Coq.micromega.ZifyClasses.mkapp	40
Coq.micromega.ZifyClasses.mkapp0	40
Coq.micromega.ZifyClasses.mkrel	40
Coq.micromega.ZMicromega.eq_le_iff	40	4	synth with cache (only 1: intuition Z.order).	0.0334410667419	21
Coq.micromega.ZMicromega.lt_le_iff	40	0	synth with cache (only 1: apply Z.lt_le_pred).	0.0108549594879	1
Coq.micromega.ZMicromega.le_0_iff	40	0.0.1	synth with cache (only 1: split; only 1: now rewrite Z.le_0_sub; only 1: now rewrite Z.le_0_sub).	0.0877740383148	13
Coq.micromega.ZMicromega.le_neg	40
Coq.micromega.ZMicromega.eq_cnf	40
Coq.micromega.ZMicromega.Zsor	40
Coq.micromega.ZMicromega.ZSORaddon	40
Coq.micromega.ZMicromega.ZNpower	40
Coq.micromega.ZMicromega.Zeval_expr_compat	40
Coq.micromega.ZMicromega.Zeval_formula_compat'	40
Coq.micromega.ZMicromega.Zeval_nformula_dec	40
Coq.micromega.ZMicromega.ZWeakChecker_sound	40	12.30	synth with cache (only 1: fix odd_spec 1; only 1: easy).	4.60910105705	7624
Coq.micromega.ZMicromega.eval_pol_sub	40
Coq.micromega.ZMicromega.eval_pol_add	40
Coq.micromega.ZMicromega.eval_pol_mul	40
Coq.micromega.ZMicromega.eval_pol_norm	40
Coq.micromega.ZMicromega.Zunsat_sound	40	12.44	synth with cache (only 1: fix odd_spec 1; only 1: trivial).	23.7529890537	35959
Coq.micromega.ZMicromega.xnnormalise_correct	40
Coq.micromega.ZMicromega.eval_pol_Pc	40	0.0	synth with cache (only 1: intros; only 1: intuition auto using Z.le_ge, Z.ge_le, Z.lt_gt, Z.gt_lt).	0.0109798908234	2
Coq.micromega.ZMicromega.xnormalise_correct	40
Coq.micromega.ZMicromega.cnf_of_list_correct	40
Coq.micromega.ZMicromega.normalise_correct	40
Coq.micromega.ZMicromega.xnegate_correct	40
Coq.micromega.ZMicromega.negate_correct	40
Coq.micromega.ZMicromega.Zdivide_ceiling	40
Coq.micromega.ZMicromega.narrow_interval_lower_bound	40
Coq.micromega.ZMicromega.isZ0_0	40	6.18	synth with cache (only 1: fix even_spec 1; only 1: eauto).	1.72117185593	1158
Coq.micromega.ZMicromega.isZ0_n0	40
Coq.micromega.ZMicromega.Zdiv_pol_correct	40
Coq.micromega.ZMicromega.Zgcd_pol_ge	40
Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	40
Coq.micromega.ZMicromega.Zdivide_pol_one	40
Coq.micromega.ZMicromega.Zgcd_minus	40
Coq.micromega.ZMicromega.Zdivide_pol_sub	40
Coq.micromega.ZMicromega.Zdivide_pol_sub_0	40
Coq.micromega.ZMicromega.Zgcd_pol_div	40
Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	40
Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40
Coq.micromega.ZMicromega.pos_le_add	40
Coq.micromega.ZMicromega.max_var_le	40
Coq.micromega.ZMicromega.max_var_correct	40
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux	40
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux'	40
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_correct_aux	40
Coq.micromega.ZMicromega.max_var_nformalae_correct	40
Coq.micromega.ZMicromega.in_bdepth	40
Coq.micromega.ZMicromega.eval_Psatz_sound	40
Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40
Coq.micromega.ZMicromega.cutting_plane_sound	40
Coq.micromega.ZMicromega.genCuttingPlaneNone	40
Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40
Coq.micromega.ZMicromega.eval_nformula_bound_var	40
Coq.micromega.ZMicromega.agree_env_subset	40	3.0.28.2.38.1	synth with cache (only 1: intros; only 1: red; only 1: intros; only 1: rewrite H; only 1: auto with zarith; only 1: Pos.Private_Tac.order).	22.4021580219	17629
Coq.micromega.ZMicromega.agree_env_jump	40
Coq.micromega.ZMicromega.agree_env_tail	40
Coq.micromega.ZMicromega.max_var_acc	40
Coq.micromega.ZMicromega.agree_env_eval_nformula	40
Coq.micromega.ZMicromega.agree_env_eval_nformulae	40
Coq.micromega.ZMicromega.eq_true_iff_eq	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0388758182526	5
Coq.micromega.ZMicromega.ZChecker_sound	40
Coq.micromega.ZMicromega.ZTautoChecker_sound	40
Coq.micromega.ZifyBool.Z_of_bool_bound	40
Coq.micromega.ZifyBool.Z_eqb_isZero	40
Coq.micromega.ZifyBool.Z_leb_sub	40
Coq.micromega.ZifyBool.Z_ltb_leb	40
Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	40
Coq.micromega.ZifyBool.Z_eqb_ZSpec_ok	40
Coq.micromega.ZifyBool.leZeroSpec_ok	40
Coq.micromega.Env.S.jump_add	40
Coq.micromega.Env.S.jump_simpl	40
Coq.micromega.Env.S.jump_tl	40
Coq.micromega.Env.S.jump_succ	40
Coq.micromega.Env.S.jump_pred_double	40
Coq.micromega.Env.S.nth_spec	40
Coq.micromega.Env.S.nth_jump	40	3.2.0.0	synth with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: symmetry; only 1: apply Pos.add_comm).	0.0193901062012	11
Coq.micromega.Env.S.nth_pred_double	40	0.0.0	synth with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: now rewrite Pos.add_1_r, Pos.succ_pred_double, Pos.add_diag).	0.013002872467	3
Coq.micromega.Tauto.S.eval_f_morph	40
Coq.micromega.Tauto.map_simpl	40	0.1.1.0	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: reflexivity || discriminate).	0.0275070667267	6
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_X_inv	40	0.5.0.3.0.3.1.6.6.6.5.20.0	synth with cache (only 1: intros; only 1: induction f; only 1: easy; only 1: easy; only 1: simpl in *; only 1: now injection H as [=->]; only 1: firstorder  discriminate; only 1: simpl in *; only 1: easy; only 1: simpl in *; only 1: easy; only 1: easy; only 1: easy).	18.6641190052	38184
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_same	40	24	synth with cache (only 1: destr_bool).	0.358679056168	378
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_cnf_ff	40	2	synth with cache (only 1: easy).	0.0158069133759	3
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_cnf_ff	40	3	synth with cache (only 1: trivial).	0.0139617919922	4
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_inv	40	6.10	synth with cache (only 1: fix odd_spec 1; only 1: auto).	0.305794000626	343
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_inv	40	8.24	synth with cache (only 1: fix even_spec 1; only 1: easy).	4.41285300255	6466
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_cnf_tt	40	0.0.0.6.12.0	synth with cache (only 1: unfold cnf_tt; only 1: intro l'; only 1: elim l'; only 1: simpl; only 1: congruence; only 1: reflexivity).	0.401606082916	551
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff	40	3.4.0.5.1.2.5.38.0.1	synth with cache (only 1: intros; only 1: unfold cnf_ff; only 1: firstorder; only 1: destruct f; only 1: reflexivity; only 1: destruct c; only 1: destruct f; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	27.7615380287	70056
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_and_pol	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_or_pol	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_l	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff_r	40	4.4.0.7.0.0.3.1	synth with cache (only 1: intros; only 1: unfold or_cnf_opt; only 1: rewrite is_cnf_tt_cnf_ff; only 1: simpl; only 1: destruct (is_cnf_tt f) eqn:EQ; only 1: apply is_cnf_tt_inv in EQ; only 1: auto; only 1: reflexivity).	6.46517205238	8959
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_r	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_form_correct	40
Coq.micromega.Tauto.S.radd_term_term	40
Coq.micromega.Tauto.S.radd_term_term'	40
Coq.micromega.Tauto.S.xror_clause_clause	40
Coq.micromega.Tauto.S.ror_clause_clause	40
Coq.micromega.Tauto.S.ror_cnf_cnf	40
Coq.micromega.Tauto.S.ror_opt_cnf_cnf	40
Coq.micromega.Tauto.S.ratom_cnf	40
Coq.micromega.Tauto.S.rxcnf_xcnf	40
Coq.micromega.Tauto.S.eval_cnf_app	40
Coq.micromega.Tauto.S.eval_cnf_ff	40	37	synth with cache (only 1: firstorder).	6.98791098595	9727
Coq.micromega.Tauto.S.eval_cnf_tt	40	2.0.0	synth with cache (only 1: unfold eval_cnf; only 1: intros; only 1: tauto).	0.0620949268341	5
Coq.micromega.Tauto.S.eval_cnf_and_opt	40
Coq.micromega.Tauto.S.add_term_correct	40
Coq.micromega.Tauto.S.no_middle_eval_tt	40	50.72	synth with cache (only 1: intros EQ; only 1: eauto).	13.1408631802	25897
Coq.micromega.Tauto.S.or_clause_correct	40
Coq.micromega.Tauto.S.or_clause_cnf_correct	40
Coq.micromega.Tauto.S.eval_cnf_cons	40	0.2.13.10.6	synth with cache (only 1: unfold eval_cnf; only 1: intros; only 1: unfold eval_clause; only 1: rewrite !make_conj_cons in *; only 1: tauto).	16.8735570908	6826
Coq.micromega.Tauto.S.eval_cnf_cons_iff	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: tauto).	0.0875749588013	5
Coq.micromega.Tauto.S.or_cnf_correct	40
Coq.micromega.Tauto.S.or_cnf_opt_correct	40
Coq.micromega.Tauto.S.xcnf_correct	40
Coq.micromega.Tauto.S.cnf_checker_sound	40
Coq.micromega.Tauto.S.tauto_checker_sound	40
Coq.micromega.Tauto.S.eval_bf_map	40
Coq.micromega.ZifyComparison.Z_of_comparison_bound	40
Coq.micromega.ZifyComparison.Zcompare_spec	40
Coq.micromega.EnvRing.MakeRingPol.radd_ext_Proper	40	52	synth with cache (only 1: firstorder).	7.64078211784	5805
Coq.micromega.EnvRing.MakeRingPol.rmul_ext_Proper	40	36.14	synth with cache (only 1: intuition; only 1: firstorder).	5.2804980278	3927
Coq.micromega.EnvRing.MakeRingPol.ropp_ext_Proper	40	37.3	synth with cache (only 1: intuition; only 1: firstorder).	4.30040788651	3832
Coq.micromega.EnvRing.MakeRingPol.rsub_ext_Proper	40	3.13	synth with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	0.408719062805	132
Coq.micromega.EnvRing.MakeRingPol.Peq_ok	40
Coq.micromega.EnvRing.MakeRingPol.Peq_spec	40
Coq.micromega.EnvRing.MakeRingPol.Pphi0	40	68	synth with cache (only 1: CRelationClasses.simpl_crelation).	2.62140393257	3856
Coq.micromega.EnvRing.MakeRingPol.Pphi1	40	84	synth with cache (only 1: CRelationClasses.simpl_crelation).	5.11967515945	7492
Coq.micromega.EnvRing.MakeRingPol.env_morph	40
Coq.micromega.EnvRing.MakeRingPol.Pjump_add	40
Coq.micromega.EnvRing.MakeRingPol.Pjump_xO_tail	40
Coq.micromega.EnvRing.MakeRingPol.Pjump_pred_double	40
Coq.micromega.EnvRing.MakeRingPol.mkPinj_ok	40
Coq.micromega.EnvRing.MakeRingPol.pow_pos_add	40
Coq.micromega.EnvRing.MakeRingPol.ceqb_spec	40
Coq.micromega.EnvRing.MakeRingPol.mkPX_ok	40
Coq.micromega.EnvRing.MakeRingPol.PaddC_ok	40
Coq.micromega.EnvRing.MakeRingPol.PsubC_ok	40
Coq.micromega.EnvRing.MakeRingPol.PmulC_aux_ok	40
Coq.micromega.EnvRing.MakeRingPol.PmulC_ok	40
Coq.micromega.EnvRing.MakeRingPol.Popp_ok	40
Coq.micromega.EnvRing.MakeRingPol.PaddX_ok	40
Coq.micromega.EnvRing.MakeRingPol.Padd_ok	40
Coq.micromega.EnvRing.MakeRingPol.PsubX_ok	40
Coq.micromega.EnvRing.MakeRingPol.Psub_ok	40
Coq.micromega.EnvRing.MakeRingPol.PmulI_ok	40
Coq.micromega.EnvRing.MakeRingPol.Pmul_ok	40
Coq.micromega.EnvRing.MakeRingPol.Psquare_ok	40
Coq.micromega.EnvRing.MakeRingPol.Mphi_morph	40
Coq.micromega.EnvRing.MakeRingPol.Mjump_xO_tail	40
Coq.micromega.EnvRing.MakeRingPol.Mjump_pred_double	40	0.0.0.0	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: now jump_simpl).	0.0840239524841	4
Coq.micromega.EnvRing.MakeRingPol.Mjump_add	40	0.1.0.0.3	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.126672029495	9
Coq.micromega.EnvRing.MakeRingPol.mkZmon_ok	40	0.0.5.0.3.4	synth with cache (only 1: induction M; only 1: rsimpl; only 1: simpl; only 1: rsimpl; only 1: simpl; only 1: rsimpl).	1.35412812233	517
Coq.micromega.EnvRing.MakeRingPol.zmon_pred_ok	40
Coq.micromega.EnvRing.MakeRingPol.mkVmon_ok	40
Coq.micromega.EnvRing.MakeRingPol.Mphi_ok	40
Coq.micromega.EnvRing.MakeRingPol.POneSubst_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubst1_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubst_ok	40
Coq.micromega.EnvRing.MakeRingPol.PSubstL1_ok	40
Coq.micromega.EnvRing.MakeRingPol.PSubstL_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubstL_ok	40
Coq.micromega.EnvRing.MakeRingPol.mkX_ok	40
Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_pos_ok	40
Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_N_ok	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40
Coq.micromega.RingMicromega.Micromega.rplus_morph_Proper	40	0	synth with cache (only 1: exact (SORplus_wd sor)).	0.0131480693817	1
Coq.micromega.RingMicromega.Micromega.rtimes_morph_Proper	40	1	synth with cache (only 1: exact (SORtimes_wd sor)).	0.0117120742798	2
Coq.micromega.RingMicromega.Micromega.ropp_morph_Proper	40	2	synth with cache (only 1: exact (SORopp_wd sor)).	0.0137960910797	3
Coq.micromega.RingMicromega.Micromega.rle_morph_Proper	40	4	synth with cache (only 1: exact (SORle_wd sor)).	0.0640139579773	24
Coq.micromega.RingMicromega.Micromega.rlt_morph_Proper	40	4	synth with cache (only 1: exact (SORlt_wd sor)).	0.0164251327515	5
Coq.micromega.RingMicromega.Micromega.rminus_morph_Proper	40	1.0.0.0.6	synth with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	0.99676990509	85
Coq.micromega.RingMicromega.Micromega.cleb_sound	40
Coq.micromega.RingMicromega.Micromega.cneqb_sound	40
Coq.micromega.RingMicromega.Micromega.cltb_sound	40
Coq.micromega.RingMicromega.Micromega.OpMult_sound	40
Coq.micromega.RingMicromega.Micromega.OpAdd_sound	40
Coq.micromega.RingMicromega.Micromega.pexpr_times_nformula_correct	40
Coq.micromega.RingMicromega.Micromega.nformula_times_nformula_correct	40
Coq.micromega.RingMicromega.Micromega.nformula_plus_nformula_correct	40
Coq.micromega.RingMicromega.Micromega.eval_Psatz_Sound	40
Coq.micromega.RingMicromega.Micromega.ge_bool_cases	40
Coq.micromega.RingMicromega.Micromega.extract_hyps_app	40
Coq.micromega.RingMicromega.Micromega.nhyps_of_psatz_correct	40
Coq.micromega.RingMicromega.Micromega.check_inconsistent_sound	40
Coq.micromega.RingMicromega.Micromega.checker_nf_sound	40
Coq.micromega.RingMicromega.Micromega.eval_pol_sub	40
Coq.micromega.RingMicromega.Micromega.eval_pol_add	40	39.1.6.0	synth with cache (only 1: intros; only 1: unfold eval_pol; only 1: rewrite (Padd_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: reflexivity).	6.79000902176	6577
Coq.micromega.RingMicromega.Micromega.eval_pol_mul	40	36.3.11.9	synth with cache (only 1: unfold eval_pol; only 1: intros; only 1: rewrite (Pmul_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: reflexivity).	8.98637294769	9593
Coq.micromega.RingMicromega.Micromega.eval_pol_opp	40
Coq.micromega.RingMicromega.Micromega.eval_pol_norm	40
Coq.micromega.RingMicromega.Micromega.normalise_sound	40
Coq.micromega.RingMicromega.Micromega.negate_correct	40
Coq.micromega.RingMicromega.Micromega.cnf_of_list_correct	40
Coq.micromega.RingMicromega.Micromega.eq0_cnf	40
Coq.micromega.RingMicromega.Micromega.xnormalise_correct	40
Coq.micromega.RingMicromega.Micromega.xnegate_correct	40
Coq.micromega.RingMicromega.Micromega.cnf_normalise_correct	40
Coq.micromega.RingMicromega.Micromega.cnf_negate_correct	40
Coq.micromega.RingMicromega.Micromega.eval_nformula_dec	40
Coq.micromega.RingMicromega.Micromega.xdenorm_correct	40
Coq.micromega.RingMicromega.Micromega.denorm_correct	40
Coq.micromega.RingMicromega.Micromega.eval_pexprSC	40
Coq.micromega.RingMicromega.Micromega.eval_formulaSC	40
Coq.micromega.Refl.make_impl_true	40	1.3.2.25	synth with cache (only 1: intro H2; only 1: induction l as [| x l]; only 1: easy; only 1: now f_equal).	0.578858137131	1350
Coq.micromega.Refl.make_impl_map	40
Coq.micromega.Refl.make_conj_cons	40	0.0.2.0.10.5	synth with cache (only 1: simpl; only 1: induction l; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intuition).	2.20324206352	2775
Coq.micromega.Refl.make_conj_impl	40	5.4.0.1.3.0.0.0.18	synth with cache (only 1: intro n; only 1: induction l as [| a l IH]; only 1: simpl; only 1: tauto; only 1: intros; only 1: destruct l; only 1: simpl; only 1: tauto; only 1: firstorder  (subst; auto)).	27.467828989	22576
Coq.micromega.Refl.make_conj_in	40	6.4.1.0.1.0	synth with cache (only 1: induction l; only 1: simpl; only 1: tauto; only 1: destruct l; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	4.79777979851	3515
Coq.micromega.Refl.make_conj_app	40
Coq.micromega.Refl.make_conj_rapp	40
Coq.micromega.Refl.not_make_conj_cons	40	1.3.0	synth with cache (only 1: intros; only 1: rewrite make_conj_cons; only 1: tauto).	0.0319910049438	7
Coq.micromega.Refl.not_make_conj_app	40
Coq.micromega.QMicromega.Qsor	40
Coq.micromega.QMicromega.QSORaddon	40
Coq.micromega.QMicromega.Qeval_expr_simpl	40
Coq.micromega.QMicromega.QNpower	40	0.0.0	synth with cache (only 1: intros r [| n]; only 1: reflexivity; only 1: reflexivity).	0.01606798172	3
Coq.micromega.QMicromega.Qeval_expr_compat	40
Coq.micromega.QMicromega.Qeval_formula_compat	40
Coq.micromega.QMicromega.Qeval_nformula_dec	40
Coq.micromega.QMicromega.QWeakChecker_sound	40	6.29	synth with cache (only 1: fix odd_spec 1; only 1: tauto).	3.3455080986	2722
Coq.micromega.QMicromega.QTautoChecker_sound	40
Coq.micromega.RMicromega.Rsrt	40	0	synth with cache (only 1: exact RTheory).	0.0124108791351	1
Coq.micromega.RMicromega.Rsor	40
Coq.micromega.RMicromega.Rinv_1	40	3.0.3	synth with cache (only 1: rewrite Rinv_1; only 1: intros; only 1: ring).	0.0658638477325	24
Coq.micromega.RMicromega.Qeq_true	40
Coq.micromega.RMicromega.Qeq_false	40
Coq.micromega.RMicromega.Qle_true	40
Coq.micromega.RMicromega.Q2R_0	40	0.1.0.27	synth with cache (only 1: rewrite <- Ropp_0; only 1: unfold Qinv, Q2R, Qeq; only 1: unfold Qden, Qnum; only 1: field).	0.758548974991	673
Coq.micromega.RMicromega.Q2R_1	40
Coq.micromega.RMicromega.Q2R_inv_ext	40
Coq.micromega.RMicromega.QSORaddon	40
Coq.micromega.RMicromega.is_neg_true	40
Coq.micromega.RMicromega.is_neg_false	40
Coq.micromega.RMicromega.Q2R_m_Proper	40
Coq.micromega.RMicromega.Q2R_pow_pos	40
Coq.micromega.RMicromega.Q2R_pow_N	40	1.0.2.0.0.0.2.0.0.0.5.4.0.0.0	synth with cache (only 1: destruct n; only 1: compute; only 1: apply Rinv_1; only 1: simpl; only 1: induction p; only 1: simpl; only 1: rewrite <- IHp; only 1: repeat rewrite Q2R_mult; only 1: reflexivity; only 1: simpl; only 1: rewrite <- IHp; only 1: repeat rewrite Q2R_mult; only 1: reflexivity; only 1: simpl; only 1: auto).	14.5955779552	7748
Coq.micromega.RMicromega.Qmult_integral	40	0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qmult; only 1: simpl; only 1: now rewrite <- Z.mul_eq_0, !Z.mul_1_r).	0.0359070301056	4
Coq.micromega.RMicromega.Qpower_positive_eq_zero	40
Coq.micromega.RMicromega.Qpower_positive_zero	40
Coq.micromega.RMicromega.Q2RpowerRZ	40
Coq.micromega.RMicromega.Qpower0	40
Coq.micromega.RMicromega.Q_of_RcstR	40
Coq.micromega.RMicromega.Reval_formula_compat	40
Coq.micromega.RMicromega.Reval_nformula_dec	40
Coq.micromega.RMicromega.RWeakChecker_sound	40
Coq.micromega.RMicromega.RTautoChecker_sound	40
Coq.rtauto.Bintree.Gt_Psucc	40
Coq.rtauto.Bintree.Psucc_Gt	40	2.3.9.4.6	synth with cache (only 1: induction p; only 1: apply Pos.compare_succ_l || apply Pos.compare_succ_r || now destruct p || now destruct q; only 1: rewrite <- Pos.compare_succ_succ; only 1: apply Pos.compare_succ_l || apply Pos.compare_succ_r || now destruct p || now destruct q; only 1: trivial).	10.0343811512	9178
Coq.rtauto.Bintree.map_app	40	2.0.1.0.4.0	synth with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).	0.77440404892	483
Coq.rtauto.Bintree.length_map	40	0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).	0.0178921222687	5
Coq.rtauto.Bintree.Lget_map	40
Coq.rtauto.Bintree.Lget_app	40
Coq.rtauto.Bintree.Lget_app_Some	40
Coq.rtauto.Bintree.Store.Tget_Tempty	40	4.0.0.0.20	synth with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: trivial; only 1: trivial).	0.414100170135	628
Coq.rtauto.Bintree.Store.Tget_Tadd	40
Coq.rtauto.Bintree.Store.get_empty	40	0.1.2.3	synth with cache (only 1: destruct i; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.0161499977112	10
Coq.rtauto.Bintree.Store.get_Full_Gt	40
Coq.rtauto.Bintree.Store.get_Full_Eq	40
Coq.rtauto.Bintree.Store.get_push_Full	40
Coq.rtauto.Bintree.Store.Full_push_compat	40
Coq.rtauto.Bintree.Store.Full_index_one_empty	40
Coq.rtauto.Bintree.Store.push_not_empty	40	0.1.10.4.0.7	synth with cache (only 1: intro H; only 1: unfold empty, get; only 1: intros; only 1: unfold get, push; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: congruence).	1.08699202538	1685
Coq.rtauto.Bintree.Store.get_In	40
Coq.rtauto.Bintree.Map.Tget_Tmap	40
Coq.rtauto.Bintree.Map.Tmap_Tadd	40
Coq.rtauto.Bintree.Map.get_map	40
Coq.rtauto.Bintree.Map.map_push	40
Coq.rtauto.Bintree.Map.Full_map	40
Coq.rtauto.Rtauto.pos_eq_refl	40
Coq.rtauto.Rtauto.form_eq_refl	40	4.4.17	synth with cache (only 1: fix odd_spec 1; only 1: destruct 1; only 1: auto).	0.787887096405	1796
Coq.rtauto.Rtauto.with_env.compose0	40	7.1.0.3.11.16	synth with cache (only 1: intros (r, Hr); only 1: induction F; only 1: clean; only 1: unfold index, get, push; only 1: intros i e; only 1: firstorder).	5.46060490608	13280
Coq.rtauto.Rtauto.with_env.compose1	40
Coq.rtauto.Rtauto.with_env.compose2	40	1.0.5.0.1.1.0.1.0	synth with cache (only 1: induction F; only 1: intros A H; only 1: simpl; only 1: trivial; only 1: intros A H; only 1: simpl; only 1: intros i e; only 1: apply IHF; only 1: auto).	3.14833211899	3980
Coq.rtauto.Rtauto.with_env.compose3	40	1.0.6.0.0.0.0.1.0	synth with cache (only 1: induction F; only 1: intros A B C H; only 1: simpl; only 1: auto; only 1: intros A B H; only 1: simpl; only 1: intros i e; only 1: apply IHF; only 1: auto).	2.89059090614	3763
Coq.rtauto.Rtauto.with_env.weaken	40
Coq.rtauto.Rtauto.with_env.project_In	40
Coq.rtauto.Rtauto.with_env.project	40
Coq.rtauto.Rtauto.with_env.interp_proof	40	13.14	synth with cache (only 1: fix even_spec 1; only 1: trivial).	16.8240289688	16656
Coq.rtauto.Rtauto.with_env.Reflect	40	5.20	synth with cache (only 1: fix even_spec 1; only 1: tauto).	0.886024951935	1525
Coq.nsatz.Nsatz.nsatz1.psos_r1b	40
Coq.nsatz.Nsatz.nsatz1.psos_r1	40	2.0.2.0.0.0	synth with cache (only 1: intros x y H; only 1: setoid_replace x with (x - y + y); only 1: setoid_rewrite H; only 1: cring; only 1: setoid_rewrite H; only 1: cring).	0.247644901276	10
Coq.nsatz.Nsatz.nsatz1.nsatzR_diff	40
Coq.nsatz.Nsatz.nsatz1.P0Z_correct	40	5.2	synth with cache (only 1: intros; only 1: trivial).	0.0513250827789	9
Coq.nsatz.Nsatz.nsatz1.Rext	40
Coq.nsatz.Nsatz.nsatz1.Rset	40	7	synth with cache (only 1: apply ring_setoid).	0.0156419277191	8
Coq.nsatz.Nsatz.nsatz1.Rtheory	40
Coq.nsatz.Nsatz.nsatz1.PolZadd_correct	40
Coq.nsatz.Nsatz.nsatz1.PolZmul_correct	40
Coq.nsatz.Nsatz.nsatz1.R_power_theory	40
Coq.nsatz.Nsatz.nsatz1.norm_correct	40
Coq.nsatz.Nsatz.nsatz1.PolZeq_correct	40
Coq.nsatz.Nsatz.nsatz1.mult_l_correct	40
Coq.nsatz.Nsatz.nsatz1.compute_list_correct	40
Coq.nsatz.Nsatz.nsatz1.check_correct	40
Coq.nsatz.Nsatz.Rsth	40	1.0.6.0.1.0.3	synth with cache (only 1: constructor; only 1: constructor; only 1: congruence; only 1: unfold Transitive; only 1: intuition eauto  2; only 1: subst; only 1: trivial).	1.11005997658	769
Coq.nsatz.Nsatz.Rri	40
Coq.nsatz.Nsatz.R_one_zero	40	1	synth with cache (only 1: auto with real arith).	0.0302290916443	2
Coq.nsatz.Nsatz.Rcri	40	2.0.12.2.0.4.15	synth with cache (only 1: unfold Rminus; only 1: intro; only 1: intros; only 1: unfold eq_notation in *; only 1: rewrite Rmult_comm; only 1: unfold equality; only 1: reflexivity).	6.78035187721	3778
Coq.nsatz.Nsatz.Rdi	40
Coq.nsatz.Nsatz.Qri	40
Coq.nsatz.Nsatz.Q_one_zero	40	2	synth with cache (only 1: discriminate).	0.0169148445129	3
Coq.nsatz.Nsatz.Qcri	40
Coq.nsatz.Nsatz.Qdi	40
Coq.nsatz.Nsatz.Z_one_zero	40	0.5	synth with cache (only 1: intro EQ; only 1: discriminate).	0.0382390022278	7
Coq.nsatz.Nsatz.Zcri	40	1.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).	0.0226130485535	3
Coq.nsatz.Nsatz.Zdi	40
Coq.omega.OmegaLemmas.Zred_factor0	40	0	synth with cache (only 1: now Z.nzsimpl).	0.0396780967712	1
Coq.omega.OmegaLemmas.Zred_factor1	40	2.1.1.1	synth with cache (only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: apply Z.add_diag).	0.159296035767	58
Coq.omega.OmegaLemmas.Zred_factor2	40
Coq.omega.OmegaLemmas.Zred_factor3	40	0.4	synth with cache (only 1: Z.nzsimpl; only 1: now Z.nzsimpl).	0.32452082634	61
Coq.omega.OmegaLemmas.Zred_factor4	40
Coq.omega.OmegaLemmas.Zred_factor5	40	1	synth with cache (only 1: now Z.nzsimpl).	0.0359568595886	2
Coq.omega.OmegaLemmas.Zred_factor6	40	0	synth with cache (only 1: now Z.nzsimpl).	0.0361151695251	1
Coq.omega.OmegaLemmas.new_var	40	2.10.15	synth with cache (only 1: intros; only 1: exists x; only 1: now f_equal).	0.114895105362	514
Coq.omega.OmegaLemmas.OMEGA1	40	1	synth with cache (only 1: Z.order).	0.012011051178	2
Coq.omega.OmegaLemmas.OMEGA2	40
Coq.omega.OmegaLemmas.OMEGA3	40
Coq.omega.OmegaLemmas.OMEGA4	40
Coq.omega.OmegaLemmas.OMEGA5	40
Coq.omega.OmegaLemmas.OMEGA6	40
Coq.omega.OmegaLemmas.OMEGA7	40
Coq.omega.OmegaLemmas.OMEGA8	40
Coq.omega.OmegaLemmas.OMEGA9	40
Coq.omega.OmegaLemmas.OMEGA10	40
Coq.omega.OmegaLemmas.OMEGA11	40
Coq.omega.OmegaLemmas.OMEGA12	40	2.0	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: apply Z.add_shuffle3).	0.0132179260254	4
Coq.omega.OmegaLemmas.OMEGA13	40
Coq.omega.OmegaLemmas.OMEGA14	40	0.1.0.0.0.0.0.0.0	synth with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l, <- Pos2Z.opp_neg, Z.add_opp_diag_r; only 1: now Z.nzsimpl).	0.142664909363	13
Coq.omega.OmegaLemmas.OMEGA15	40	2.2.1.0	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal; only 1: apply Z.add_shuffle3).	0.0248599052429	9
Coq.omega.OmegaLemmas.OMEGA16	40	1.1	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: now Z.nzsimpl).	0.0310089588165	4
Coq.omega.OmegaLemmas.OMEGA17	40	0.0	synth with cache (only 1: intros H ->; only 1: now Z.nzsimpl).	0.0376110076904	2
Coq.omega.OmegaLemmas.OMEGA18	40	10.3	synth with cache (only 1: intros NE EQ; only 1: now intros ->).	0.174590110779	163
Coq.omega.OmegaLemmas.OMEGA19	40
Coq.omega.OmegaLemmas.OMEGA20	40	0.0.1.0	synth with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now Z.nzsimpl).	0.0473880767822	5
Coq.omega.OmegaLemmas.intro_Z	40
Coq.omega.PreOmega.Z.mod_0_r_ext	40
Coq.omega.PreOmega.Z.div_0_r_ext	40	2.7.6.19	synth with cache (only 1: destruct x; only 1: trivial; only 1: easy || now destruct y; only 1: easy || now destruct y).	2.69428610802	2228
Coq.omega.PreOmega.Z.rem_0_r_ext	40	7.1.0.17.2.2.7	synth with cache (only 1: destruct x; only 1: trivial; only 1: symmetry; only 1: rewrite H; only 1: trivial; only 1: unfold Z.rem; only 1: easy || now destruct y).	32.8703701496	33808
Coq.omega.PreOmega.Z.quot_0_r_ext	40
Coq.omega.PreOmega.Z.rem_bound_pos_pos	40
Coq.omega.PreOmega.Z.rem_bound_neg_pos	40
Coq.omega.PreOmega.Z.rem_bound_pos_neg	40
Coq.omega.PreOmega.Z.rem_bound_neg_neg	40
Coq.btauto.Algebra.Decidable_sound	40	0.0.41.12	synth with cache (only 1: intros l; only 1: intros (cc, pp); only 1: simpl; only 1: intuition).	11.2173798084	28558
Coq.btauto.Algebra.Decidable_complete	40	0.0.43.14	synth with cache (only 1: intros l; only 1: intros (cc, pp); only 1: simpl; only 1: intuition).	15.2647199631	24533
Coq.btauto.Algebra.Decidable_sound_alt	40	0.0.0.0.2	synth with cache (only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).	0.0405218601227	21
Coq.btauto.Algebra.Decidable_complete_alt	40	1.1.0.2.0	synth with cache (only 1: intros P [wit spec] Hd; only 1: simpl in *; only 1: destruct wit; only 1: intuition; only 1: intuition).	0.0722589492798	21
Coq.btauto.Algebra.Computational.Decidable_PosEq_obligation_1	40	11	synth with cache (only 1: apply Pos.eqb_eq).	1.80084586143	592
Coq.btauto.Algebra.Computational.Decidable_PosLt_obligation_1	40
Coq.btauto.Algebra.Computational.Decidable_PosLe_obligation_1	40
Coq.btauto.Algebra.Computational.Decidable_eq_poly_obligation_1	40
Coq.btauto.Algebra.Computational.Decidable_null_obligation_3	40
Coq.btauto.Algebra.Computational.Decidable_valid_obligation_1	40
Coq.btauto.Algebra.Validity.valid_le_compat	40
Coq.btauto.Algebra.Validity.linear_le_compat	40	0.0.0.7.0.0.2.0	synth with cache (only 1: intros k l p H Hl; only 1: destruct H; only 1: constructor; only 1: constructor; only 1: Pos.Private_Tac.order; only 1: eauto; only 1: eauto; only 1: eauto).	3.82462000847	2070
Coq.btauto.Algebra.Validity.linear_valid_incl	40
Coq.btauto.Algebra.Evaluation.eval_null_zero	40	6.10.3.15.23	synth with cache (only 1: intros LT; only 1: intros [] ?; only 1: now rewrite H; only 1: destruct H; only 1: split).	31.6422739029	15682
Coq.btauto.Algebra.Evaluation.eval_extensional_eq_compat	40
Coq.btauto.Algebra.Evaluation.eval_suffix_compat	40
Coq.btauto.Algebra.Algebra.poly_add_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_cst_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_mon_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_compat	40
Coq.btauto.Algebra.Algebra.poly_add_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_cst_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_mon_null_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_mon_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_add_linear_compat	40
Coq.btauto.Algebra.Reduce.reduce_aux_eval_compat	40
Coq.btauto.Algebra.Reduce.reduce_eval_compat	40
Coq.btauto.Algebra.Reduce.reduce_aux_le_compat	40
Coq.btauto.Algebra.Reduce.linear_reduce_aux	40
Coq.btauto.Algebra.Reduce.linear_reduce	40
Coq.btauto.Reflect.Translation.poly_of_formula_eval_compat	40
Coq.btauto.Reflect.Translation.poly_of_formula_valid_compat	40
Coq.btauto.Reflect.Translation.poly_of_formula_sound	40
Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound	40
Coq.btauto.Reflect.Completeness.list_nth_base	40	3.2.1	synth with cache (only 1: induction l; only 1: auto; only 1: trivial).	0.0478410720825	19
Coq.btauto.Reflect.Completeness.list_nth_succ	40	1.0.2	synth with cache (only 1: zify; only 1: unfold list_nth; only 1: now rewrite Pos.peano_rect_succ).	0.144539833069	25
Coq.btauto.Reflect.Completeness.list_nth_nil	40
Coq.btauto.Reflect.Completeness.make_last_nth_1	40
Coq.btauto.Reflect.Completeness.make_last_nth_2	40	0.0.0.0.0.6.3.1.1	synth with cache (only 1: intros A n; only 1: induction n using Pos.peano_rect; only 1: now auto; only 1: intros; only 1: unfold make_last; only 1: rewrite Pos.peano_rect_succ; only 1: fold (make_last n x def); only 1: rewrite list_nth_succ; only 1: apply IHn).	1.21221399307	1044
Coq.btauto.Reflect.Completeness.list_replace_nth_1	40
Coq.btauto.Reflect.Completeness.list_replace_nth_2	40
Coq.btauto.Reflect.Completeness.boolean_witness_nonzero	40
Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound_alt	40
Coq.funind.Recdef.le_lt_SS	40	2.0.4.0.4.10	synth with cache (only 1: constructor; only 1: destruct H; only 1: apply le_S_n; only 1: trivial; only 1: constructor; only 1: auto with arith).	0.372764825821	517
Coq.funind.Recdef.Splus_lt	40	28	synth with cache (only 1: intuition).	0.114089012146	390
Coq.funind.Recdef.SSplus_lt	40	22	synth with cache (only 1: intuition).	26.3317711353	22780
Coq.funind.Recdef.max	40
Coq.setoid_ring.Rings_Z.Zcri	40	1.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).	0.0457201004028	3
Coq.setoid_ring.Rings_Z.Z_one_zero	40	3.0.4	synth with cache (only 1: intro EQ; only 1: symmetry in EQ; only 1: discriminate).	0.15372300148	19
Coq.setoid_ring.Rings_Z.Zdi	40
Coq.setoid_ring.Integral_domain.integral_domain.integral_domain_minus_one_zero	40
Coq.setoid_ring.Integral_domain.integral_domain.pow_not_zero	40
Coq.setoid_ring.Integral_domain.integral_domain.Rintegral_domain_pow	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.cO	40	8	synth with cache (only 1: trivial).	0.0414068698883	9
Coq.setoid_ring.Ncring_polynom.MakeRingPol.cI	40	0	synth with cache (only 1: exact ring0).	0.0322570800781	1
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Peq_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi0	40	30	synth with cache (only 1: firstorder).	6.94640278816	1164
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi1	40	17.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: firstorder).	2.30026292801	651
Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkPX_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddCl_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_aux_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Popp_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddXPX	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok2	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Padd_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psub_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pmul_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psquare_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkX_ok	40	3.14.7	synth with cache (only 1: intros; only 1: Esimpl; only 1: Esimpl2).	4.6963570118	543
Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_pos_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_N_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.norm_subst_ok	40	15.0.0	synth with cache (only 1: intros; only 1: unfold norm_subst; only 1: apply norm_aux_spec).	11.4673559666	543
Coq.setoid_ring.Ncring_polynom.MakeRingPol.ring_correct	40
Coq.setoid_ring.Ring.BoolTheory	40	0.5.0.4.0.2.0.3	synth with cache (only 1: repeat split; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool).	1.74734711647	1411
Coq.setoid_ring.Ring.bool_eq_ok	40	8	synth with cache (only 1: destr_bool).	0.0338938236237	21
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.radd_ext_Proper	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_ext_Proper	40	86.11	synth with cache (only 1: intros; only 1: firstorder).	19.7106120586	22839
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_ext_Proper	40	105	synth with cache (only 1: CRelationClasses.simpl_crelation).	18.9932198524	27122
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_ext_Proper	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_ext_Proper	40	4	synth with cache (only 1: trivial).	0.0162479877472	5
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ceqb_spec	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEequiv_eq	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEeval_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_l	40	6	synth with cache (only 1: eauto).	0.161181926727	11
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_simpl	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_reg_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.field_is_integral_domain	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_neq_0	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_r_r	40	25	synth with cache (only 1: eauto).	3.77416610718	598
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv1	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv5	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv3b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv6	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_nz	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv8	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.cross_product_eq	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_N_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_0	40	1.1.0.0.0.1	synth with cache (only 1: induction p as [p IH| p IH| ]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite !IH, ?H; only 1: trivial).	1.39297986031	11
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_1	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_cst	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_add_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_nz	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_div	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEadd_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsub_ext	40	0.0.1	synth with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.840879917145	4
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEmul_ext	40	0.0.1	synth with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	1.09307599068	4
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEopp_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_r	40	5.0.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: trivial).	1.40369701385	9
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_0_r	40	8.0	synth with cache (only 1: intros l; only 1: eauto).	2.99715209007	32
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_r	40	0.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).	1.12733411789	3
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_add_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_nz	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.if_true	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_semi_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_spec	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEadd_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEsub_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEopp_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEpow_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEmul_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsimp_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_r	40	1.3.0.0.0	synth with cache (only 1: destruct l1; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct 1).	19.9921631813	30
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_app	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.absurd_PCond_bottom	40	3.6	synth with cache (only 1: destruct 1; only 1: trivial).	7.30678081512	25
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Z_pos_sub_gt	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.default_isIn_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.isIn_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok1	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Pcond_Fnorm	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_FEeval_PEeval	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_crossproduct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_pow_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_aux_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_in_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_in_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_impl.fcons_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons0_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons00_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.ceqb_spec'	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons1_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons2_fcons_inv	40
Coq.setoid_ring.Field_theory.Complete.radd_ext3_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.00838303565979	1
Coq.setoid_ring.Field_theory.Complete.rmul_ext3_Proper	40	0	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.00905609130859	1
Coq.setoid_ring.Field_theory.Complete.ropp_ext3_Proper	40	0	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.00890803337097	1
Coq.setoid_ring.Field_theory.Complete.AlmostField.add_inj_r	40
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiPOS_inj	40
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_inj	40
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_complete	40
Coq.setoid_ring.Field_theory.Complete.Field.ring_S_inj	40
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiPOS_discr_sgn	40
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_inj	40
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_complete	40
Coq.setoid_ring.Ncring_initial.Zsth	40	62	synth with cache (only 1: auto with *).	2.72530889511	1971
Coq.setoid_ring.Ncring_initial.Zr	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_gen	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_add	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_mult	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_genZ	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_Zeqb_ok	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ1_add_pos_neg	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.match_compOpp	40	3.6.5.28	synth with cache (only 1: destruct x; only 1: let rec Esimpl3 := let rec Esimpl2 := let rec Esimpl := let rec rsimpl := repeat gen_rewrite || rewrite phiCR_comm in repeat progress match goal with | |- context [ @Pphi ?l ?P ] => match P with | P0 => rewrite (Pphi0 (C:=l)) | P1 => rewrite (Pphi1 (C:=l)) | @mkPX ?P ?i ?n ?Q => rewrite (@mkPX_ok l P i n Q) end | |- context [ bracket ?c ] => match c with | 0 => rewrite ring_morphism0 | 1 => rewrite ring_morphism1 | ?x + ?y => rewrite ring_morphism_add | ?x * ?y => rewrite ring_morphism_mul | ?x - ?y => rewrite ring_morphism_sub | - ?x => rewrite ring_morphism_opp end end; simpl; rsimpl in Esimpl; repeat progress match goal with | |- context [ @Pphi ?l (@PaddCl ?c ?P) ] => rewrite (@PaddCl_ok c P l) | |- context [ @Pphi ?l (@PmulC ?P ?c) ] => rewrite (@PmulC_ok c P l) | |- context [ @Pphi ?l (@Popp ?P) ] => rewrite (@Popp_ok P l) end; Esimpl in repeat match goal with | |- context [ @Pphi ?l (@Padd ?P1 ?P2) ] => rewrite (@Padd_ok P1 P2 l) | |- context [ @Pphi ?l (@Psub ?P1 ?P2) ] => rewrite (@Psub_ok P1 P2 l) end; try Esimpl2; try reflexivity; try apply ring_add_comm in Esimpl3; only 1: trivial; only 1: trivial).	3.24032282829	3885
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_add	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_opp	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_mul	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_ext	40	10.2.4.0	synth with cache (only 1: intros x y H7; only 1: repeat rewrite same_genZ; only 1: subst; only 1: reflexivity).	15.0696280003	5199
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_morph	40
Coq.setoid_ring.ArithRing.natSRth	40
Coq.setoid_ring.ArithRing.nat_morph_N	40
Coq.setoid_ring.Rings_R.Rsth	40	1.0.6.0.1.0.3	synth with cache (only 1: constructor; only 1: constructor; only 1: congruence; only 1: unfold Transitive; only 1: intuition eauto  2; only 1: subst; only 1: trivial).	1.36205196381	769
Coq.setoid_ring.Rings_R.Rri	40
Coq.setoid_ring.Rings_R.Rcri	40
Coq.setoid_ring.Rings_R.R_one_zero	40	1	synth with cache (only 1: auto with real arith).	0.0508511066437	2
Coq.setoid_ring.Rings_R.Rdi	40
Coq.setoid_ring.RealField.RTheory	40
Coq.setoid_ring.RealField.Rfield	40
Coq.setoid_ring.RealField.Rlt_n_Sn	40
Coq.setoid_ring.RealField.Rlt_0_2	40
Coq.setoid_ring.RealField.Rgen_phiPOS	40
Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	40
Coq.setoid_ring.RealField.Rdef_pow_add	40
Coq.setoid_ring.RealField.R_power_theory	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_swap	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_succ	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_add	40
Coq.setoid_ring.Ring_theory.Power.pow_N_pow_N	40	1	synth with cache (only 1: reflexivity).	0.00832605361938	2
Coq.setoid_ring.Ring_theory.DEFINITIONS.MORPHISM.get_sign_None_th	40	14.6.2	synth with cache (only 1: repeat split; only 1: intros; only 1: discriminate).	0.919188976288	998
Coq.setoid_ring.Ring_theory.DEFINITIONS.IDmorph	40	3	synth with cache (only 1: easy).	0.0152161121368	4
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eqsth	40	11	synth with cache (only 1: CRelationClasses.simpl_crelation).	0.0382149219513	33
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_s_ext	40	3	synth with cache (only 1: simpl_relation).	0.0253939628601	4
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_ext	40	23	synth with cache (only 1: CRelationClasses.simpl_crelation).	0.127855062485	255
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.radd_ext1_Proper	40	3.31	synth with cache (only 1: intros m H; only 1: firstorder).	2.94315981865	2301
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.rmul_ext1_Proper	40	10.25	synth with cache (only 1: intros n IH; only 1: firstorder).	1.68988609314	1790
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_ext	40	9	synth with cache (only 1: Tactics.program_simpl).	0.0187659263611	10
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SReqe_Reqe	40	10	synth with cache (only 1: firstorder).	0.0244569778442	21
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_mul_l	40	6	synth with cache (only 1: reflexivity).	0.00867509841919	7
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_add	40	1	synth with cache (only 1: reflexivity).	0.00882601737976	2
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRsub_def	40	0	synth with cache (only 1: reflexivity).	0.00776314735413	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRIDmorph	40	9	synth with cache (only 1: firstorder).	0.0411469936371	16
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRmorph_Rmorph	40	100	synth with cache (only 1: CRelationClasses.simpl_crelation).	11.680961132	20720
Coq.setoid_ring.Ring_theory.ALMOST_RING.radd_ext2_Proper	40	8	synth with cache (only 1: firstorder).	0.0422830581665	14
Coq.setoid_ring.Ring_theory.ALMOST_RING.rmul_ext2_Proper	40	5.13	synth with cache (only 1: intros x y H; only 1: firstorder).	0.365010976791	295
Coq.setoid_ring.Ring_theory.ALMOST_RING.ropp_ext2_Proper	40	4.22	synth with cache (only 1: intros k H1 H2; only 1: firstorder).	0.552121162415	598
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Rmul_0_l	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_mul_l	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_add	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_opp	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cadd_ext_Proper	40	47	synth with cache (only 1: firstorder).	0.574398994446	1643
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cmul_ext_Proper	40	50.18	synth with cache (only 1: intuition; only 1: firstorder).	5.62106204033	6992
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.copp_ext_Proper	40	54	synth with cache (only 1: firstorder).	0.66154384613	2108
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.phi_ext1_Proper	40	12	synth with cache (only 1: auto).	0.162421941757	120
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_opp	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_sub	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARth_SRth	40	12	synth with cache (only 1: firstorder).	0.139423847198	110
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARsub_ext	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_0_r	40	24	synth with cache (only 1: firstorder).	0.427928924561	752
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_1_r	40	1	synth with cache (only 1: mrewrite).	0.0142951011658	2
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_0_r	40	3	synth with cache (only 1: mrewrite).	0.0176010131836	4
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARdistr_r	40	0.2.0.2.16.3	synth with cache (only 1: mrewrite; only 1: f_equiv; only 1: elim ARth; only 1: trivial; only 1: elim ARth; only 1: trivial).	3.86540007591	723
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc1	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc2	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc1	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc2	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_mul_r	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_zero	40
Coq.setoid_ring.InitialRing.Zth	40
Coq.setoid_ring.InitialRing.ZMORPHISM.radd_ext3_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.00752091407776	1
Coq.setoid_ring.InitialRing.ZMORPHISM.rmul_ext3_Proper	40	1	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.00847315788269	2
Coq.setoid_ring.InitialRing.ZMORPHISM.ropp_ext3_Proper	40	2	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.00823712348938	3
Coq.setoid_ring.InitialRing.ZMORPHISM.get_signZ_th	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.rsub_ext3_Proper	40	0.26	synth with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	0.515935182571	392
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.same_gen	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_add	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_mult	40
Coq.setoid_ring.InitialRing.ZMORPHISM.rsub_ext4_Proper	40	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0078809261322	1
Coq.setoid_ring.InitialRing.ZMORPHISM.same_genZ	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_Zeqb_ok	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ1_pos_sub	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_add	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_mul	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_ext	40	1.11.0	synth with cache (only 1: intros x y H; only 1: rewrite H; only 1: rrefl).	2.62147283554	682
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_morph	40
Coq.setoid_ring.InitialRing.Nth	40
Coq.setoid_ring.InitialRing.Neqb_ok	40
Coq.setoid_ring.InitialRing.NMORPHISM.radd_ext4_Proper	40	20.32	synth with cache (only 1: intros H1 H2 H3; only 1: firstorder).	5.88972592354	2095
Coq.setoid_ring.InitialRing.NMORPHISM.rmul_ext4_Proper	40	22	synth with cache (only 1: exact (SRmul_ext SReqe)).	0.234610080719	231
Coq.setoid_ring.InitialRing.NMORPHISM.same_genN	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_add	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_mult	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_sub	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_morph	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.radd_ext5_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.00704216957092	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.rmul_ext5_Proper	40	0	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.00801396369934	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.ropp_ext5_Proper	40	0	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.00841808319092	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.rsub_ext7_Proper	40	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0107138156891	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword0_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_cons	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_Nwcons	40	0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: induction w; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros; only 1: destruct n; only 1: norm; only 1: norm).	1.25090503693	217
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwadd_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwopp_ok	40	0.0.12	synth with cache (only 1: induction x; only 1: norm; only 1: norm).	0.19024181366	121
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwscal_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwmul_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_morph	40
Coq.setoid_ring.InitialRing.GEN_DIV.radd_ext_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.0120930671692	1
Coq.setoid_ring.InitialRing.GEN_DIV.rmul_ext_Proper	40	1	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0143721103668	2
Coq.setoid_ring.InitialRing.GEN_DIV.ropp_ext_Proper	40	2	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0131068229675	3
Coq.setoid_ring.InitialRing.GEN_DIV.rsub_ext_Proper	40	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0119760036469	1
Coq.setoid_ring.InitialRing.GEN_DIV.triv_div_th	40
Coq.setoid_ring.InitialRing.GEN_DIV.Ztriv_div_th	40
Coq.setoid_ring.InitialRing.GEN_DIV.Ntriv_div_th	40
Coq.setoid_ring.Cring.cring.cring_eq_ext	40
Coq.setoid_ring.Cring.cring.cring_almost_ring_theory	40
Coq.setoid_ring.Cring.cring.cring_morph	40
Coq.setoid_ring.Cring.cring.cring_power_theory	40	4.85	synth with cache (only 1: split; only 1: reflexivity).	16.9319109917	4161
Coq.setoid_ring.Cring.cring.cring_div_theory	40
Coq.setoid_ring.Cring.Zcri	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.radd_ext_Proper	40	57	synth with cache (only 1: firstorder).	7.16072893143	8489
Coq.setoid_ring.Ring_polynom.MakeRingPol.rmul_ext_Proper	40	63	synth with cache (only 1: firstorder).	4.55429005623	5962
Coq.setoid_ring.Ring_polynom.MakeRingPol.ropp_ext_Proper	40	34	synth with cache (only 1: firstorder).	0.577193021774	1054
Coq.setoid_ring.Ring_polynom.MakeRingPol.rsub_ext_Proper	40	3.13	synth with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	0.183584213257	132
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pequiv_eq	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_ext	40	0.17.1.0.0.0	synth with cache (only 1: red; only 1: red; only 1: red; only 1: intros; only 1: subst; only 1: now etransitivity).	23.9007809162	3804
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pinj_ext	40	23.1	synth with cache (only 1: unfold Pequiv; only 1: solve_proper).	21.6395640373	6059
Coq.setoid_ring.Ring_polynom.MakeRingPol.PX_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.jump_add'	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi0	40	52	synth with cache (only 1: firstorder).	3.20395803452	2339
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi1	40	43	synth with cache (only 1: firstorder).	2.45712089539	1473
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.pow_pos_add	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ceqb_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddC_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PsubC_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_aux_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Popp_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Padd_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_opp	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulI_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pmul_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkZmon_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.zmon_pred_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkVmon_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Mcphi_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Mphi_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POneSubst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubstL_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_pos_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_N_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mon_of_pol_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.interp_PElist_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.norm_subst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_correct	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_rec_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmultm1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.r_list_pow_rev	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_pos_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkadd_mult_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_pow_list_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.Pphi_avoid_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.local_mkpow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_pow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_pow_correct	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkmult_pow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkpow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkopp_pow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_correct	40
Coq.setoid_ring.BinList.MakeBinList.jump_tl	40
Coq.setoid_ring.BinList.MakeBinList.jump_succ	40
Coq.setoid_ring.BinList.MakeBinList.jump_add	40
Coq.setoid_ring.BinList.MakeBinList.jump_pred_double	40
Coq.setoid_ring.BinList.MakeBinList.nth_jump	40
Coq.setoid_ring.BinList.MakeBinList.nth_pred_double	40
Coq.setoid_ring.Ncring.Ring.pow_pos_comm	40
Coq.setoid_ring.Ncring.Ring.pow_pos_succ	40
Coq.setoid_ring.Ncring.Ring.pow_pos_add	40
Coq.setoid_ring.Ncring.Ring.pow_N_pow_N	40	5	synth with cache (only 1: reflexivity).	0.0311639308929	6
Coq.setoid_ring.Ncring.Ring.ring_mul_0_l	40
Coq.setoid_ring.Ncring.Ring.ring_mul_0_r	40
Coq.setoid_ring.Ncring.Ring.ring_opp_mul_l	40
Coq.setoid_ring.Ncring.Ring.ring_opp_mul_r	40
Coq.setoid_ring.Ncring.Ring.ring_opp_add	40
Coq.setoid_ring.Ncring.Ring.ring_opp_opp	40
Coq.setoid_ring.Ncring.Ring.ring_sub_ext	40	37	synth with cache (only 1: firstorder).	5.87322711945	3261
Coq.setoid_ring.Ncring.Ring.ring_add_0_r	40	3.0.1.11	synth with cache (only 1: intro x; only 1: rewrite (ring_add_comm x); only 1: rewrite ring_add_0_l; only 1: reflexivity).	0.795878887177	192
Coq.setoid_ring.Ncring.Ring.ring_add_assoc1	40	18.6.10.0	synth with cache (only 1: intros; only 1: rewrite <- ring_add_assoc; only 1: rewrite (ring_add_comm x); only 1: mrewrite).	25.7664179802	6692
Coq.setoid_ring.Ncring.Ring.ring_add_assoc2	40	0.2.1.9.0	synth with cache (only 1: intros; only 1: rewrite (ring_add_comm y); only 1: rewrite <- (ring_add_assoc x); only 1: rewrite (ring_add_comm x); only 1: reflexivity).	1.39269900322	297
Coq.setoid_ring.Ncring.Ring.ring_opp_zero	40
Coq.setoid_ring.Ncring_tac.Zeqb_ok	40	0.4.1	synth with cache (only 1: intros; only 1: apply Zeq_is_eq_bool; only 1: now destruct Zeq_bool).	0.374722957611	30
Coq.setoid_ring.Ncring_tac.comm	40
Coq.setoid_ring.Rings_Q.Qri	40
Coq.setoid_ring.Rings_Q.Qcri	40	1.0.4.19.0.5	synth with cache (only 1: intros (x1, x2); only 1: intros; only 1: apply Ncring_initial.Zsth; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	6.62649202347	4459
Coq.setoid_ring.Rings_Q.Q_one_zero	40	1	synth with cache (only 1: discriminate).	0.0108728408813	2
Coq.setoid_ring.Rings_Q.Qdi	40
Coq.ssr.ssreflect.master_key	40	1	synth with cache (only 1: tauto).	0.00611615180969	2
Coq.ssr.ssreflect.lock	40
Coq.ssr.ssreflect.not_locked_false_eq_true	40	0.3	synth with cache (only 1: unlock; only 1: discriminate).	0.0227718353271	13
Coq.ssr.ssreflect.unlock	40
Coq.ssr.ssreflect.locked_withE	40
Coq.ssr.ssreflect.unlock_with	40	1	synth with cache (only 1: by case : k ).	0.00892186164856	2
Coq.ssr.ssreflect.nary_congruence	40
Coq.ssr.ssreflect.ssr_congr_arrow	40	2.3.6	synth with cache (only 1: intro H; only 1: destruct H; only 1: tauto).	0.0416488647461	81
Coq.ssr.ssreflect.ApplyIff.iffLR	40	0	synth with cache (only 1: intuition).	0.00914883613586	1
Coq.ssr.ssreflect.ApplyIff.iffRL	40	0	synth with cache (only 1: by case : eqPQ ).	0.00822496414185	1
Coq.ssr.ssreflect.ApplyIff.iffLRn	40	3	synth with cache (only 1: intuition).	0.0172719955444	4
Coq.ssr.ssreflect.ApplyIff.iffRLn	40	0	synth with cache (only 1: by move  =>nP tQ; case : nP ; case : eqPQ tQ ).	0.0090229511261	1
Coq.ssr.ssreflect.abstract_context	40	7.101.53	synth with cache (only 1: intro H; only 1: apply H; only 1: auto).	4.69874000549	57236
Coq.ssr.ssrbool.prop_congr	40	0.4	synth with cache (only 1: destruct 1; only 1: trivial).	0.0442039966583	71
Coq.ssr.ssrbool.is_true_true	40	5	synth with cache (only 1: repeat split).	0.00599598884583	6
Coq.ssr.ssrbool.not_false_is_true	40	1	synth with cache (only 1: by [  ]).	0.00849485397339	2
Coq.ssr.ssrbool.is_true_locked_true	40	0.0	synth with cache (only 1: unlock; only 1: by [  ]).	0.00854396820068	2
Coq.ssr.ssrbool.negbT	40	1	synth with cache (only 1: Bool.destr_bool).	0.00849103927612	2
Coq.ssr.ssrbool.negbTE	40	0	synth with cache (only 1: by case : b ).	0.00758004188538	1
Coq.ssr.ssrbool.negbF	40	0	synth with cache (only 1: by case : b ).	0.00785613059998	1
Coq.ssr.ssrbool.negbFE	40	0	synth with cache (only 1: by case : b ).	0.0082950592041	1
Coq.ssr.ssrbool.negbK	40	0.11	synth with cache (only 1: intro H; only 1: Bool.destr_bool).	0.0204548835754	46
Coq.ssr.ssrbool.negbNE	40	0	synth with cache (only 1: by case : b ).	0.00583910942078	1
Coq.ssr.ssrbool.negb_inj	40	0.19	synth with cache (only 1: intro H; only 1: Bool.destr_bool).	0.0897288322449	186
Coq.ssr.ssrbool.negbLR	40	7	synth with cache (only 1: Bool.destr_bool).	0.0194368362427	8
Coq.ssr.ssrbool.negbRL	40	8	synth with cache (only 1: Bool.destr_bool).	0.0191609859467	9
Coq.ssr.ssrbool.contra	40	4.13	synth with cache (only 1: Bool.destr_bool; only 1: tauto).	0.329343795776	227
Coq.ssr.ssrbool.contraL	40	0	synth with cache (only 1: by case : b  => //; case : c ).	0.0116910934448	1
Coq.ssr.ssrbool.contraR	40	0	synth with cache (only 1: by case : b  => //; case : c ).	0.0113639831543	1
Coq.ssr.ssrbool.contraLR	40	0	synth with cache (only 1: by case : b  => //; case : c ).	0.0115809440613	1
Coq.ssr.ssrbool.contraT	40	13.12	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.524388074875	500
Coq.ssr.ssrbool.wlog_neg	40	1	synth with cache (only 1: by case : b  => // ->).	0.0107469558716	2
Coq.ssr.ssrbool.contraFT	40	12.15	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	1.01834106445	649
Coq.ssr.ssrbool.contraFN	40	13.16	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	1.12802696228	746
Coq.ssr.ssrbool.contraTF	40	14.15	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.937466859818	632
Coq.ssr.ssrbool.contraNF	40	15.16	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	1.14543700218	733
Coq.ssr.ssrbool.contraFF	40
Coq.ssr.ssrbool.BoolIf.ifP	40
Coq.ssr.ssrbool.BoolIf.ifPn	40	0	synth with cache (only 1: by case  def_b: b ; constructor).	0.00766491889954	1
Coq.ssr.ssrbool.BoolIf.ifT	40	3	synth with cache (only 1: by case : b ).	0.0132148265839	4
Coq.ssr.ssrbool.BoolIf.ifF	40	1	synth with cache (only 1: by move ->).	0.00822305679321	2
Coq.ssr.ssrbool.BoolIf.ifN	40	3	synth with cache (only 1: by case : b ).	0.0126440525055	4
Coq.ssr.ssrbool.BoolIf.if_same	40	2	synth with cache (only 1: by case  def_b: b ; constructor).	0.00808382034302	3
Coq.ssr.ssrbool.BoolIf.if_neg	40	1	synth with cache (only 1: by case  def_b: b ; constructor; rewrite ?def_b).	0.00735712051392	2
Coq.ssr.ssrbool.BoolIf.fun_if	40	0	synth with cache (only 1: by case b).	0.00711989402771	1
Coq.ssr.ssrbool.BoolIf.if_arg	40	0	synth with cache (only 1: by case b).	0.00699186325073	1
Coq.ssr.ssrbool.BoolIf.ifE	40	6	synth with cache (only 1: reflexivity).	0.012088060379	7
Coq.ssr.ssrbool.ReflectCore.introNTF	40
Coq.ssr.ssrbool.ReflectCore.introTF	40	0	synth with cache (only 1: by case c; case Hb).	0.0103271007538	1
Coq.ssr.ssrbool.ReflectCore.elimNTF	40	0	synth with cache (only 1: by case c; case Hb).	0.0106091499329	1
Coq.ssr.ssrbool.ReflectCore.elimTF	40	0	synth with cache (only 1: by case c; case Hb).	0.0104138851166	1
Coq.ssr.ssrbool.ReflectCore.equivPif	40
Coq.ssr.ssrbool.ReflectCore.xorPif	40	0.0.10	synth with cache (only 1: destruct 1; only 1: by case Hb; auto; only 1: by case Hb; auto).	0.0594100952148	47
Coq.ssr.ssrbool.ReflectNegCore.introTFn	40
Coq.ssr.ssrbool.ReflectNegCore.elimTFn	40
Coq.ssr.ssrbool.ReflectNegCore.equivPifn	40
Coq.ssr.ssrbool.ReflectNegCore.xorPifn	40
Coq.ssr.ssrbool.Reflect.introT	40
Coq.ssr.ssrbool.Reflect.introF	40
Coq.ssr.ssrbool.Reflect.introN	40
Coq.ssr.ssrbool.Reflect.introNf	40
Coq.ssr.ssrbool.Reflect.introTn	40
Coq.ssr.ssrbool.Reflect.introFn	40
Coq.ssr.ssrbool.Reflect.elimT	40
Coq.ssr.ssrbool.Reflect.elimF	40
Coq.ssr.ssrbool.Reflect.elimN	40
Coq.ssr.ssrbool.Reflect.elimNf	40
Coq.ssr.ssrbool.Reflect.elimTn	40
Coq.ssr.ssrbool.Reflect.elimFn	40
Coq.ssr.ssrbool.Reflect.introP	40
Coq.ssr.ssrbool.Reflect.iffP	40
Coq.ssr.ssrbool.Reflect.equivP	40	1.21	synth with cache (only 1: intuition; only 1: by case : Pb ; constructor; auto).	0.25462603569	256
Coq.ssr.ssrbool.Reflect.sumboolP	40
Coq.ssr.ssrbool.Reflect.appP	40
Coq.ssr.ssrbool.Reflect.sameP	40
Coq.ssr.ssrbool.Reflect.decPcases	40
Coq.ssr.ssrbool.Reflect.decP	40
Coq.ssr.ssrbool.Reflect.rwP	40	17	synth with cache (only 1: by case Pb).	0.160587072372	126
Coq.ssr.ssrbool.Reflect.rwP2	40
Coq.ssr.ssrbool.Reflect.altP	40
Coq.ssr.ssrbool.impliesP	40	32.13.33	synth with cache (only 1: intro p; only 1: destruct p; only 1: assumption).	1.23173284531	8122
Coq.ssr.ssrbool.impliesPn	40	24.2.11	synth with cache (only 1: intuition; only 1: destruct H; only 1: auto).	0.571348905563	1453
Coq.ssr.ssrbool.unlessL	40	27.6.24	synth with cache (only 1: split; only 1: intros; only 1: by move  =>fK injf' x; apply : injf' ).	0.5569190979	2815
Coq.ssr.ssrbool.unlessR	40	28.25.27	synth with cache (only 1: split; only 1: intros H ?; only 1: auto).	1.21798086166	7483
Coq.ssr.ssrbool.unless_sym	40	3.8.27.14.26.27	synth with cache (only 1: split; only 1: intros H ?; only 1: intros; only 1: apply H; only 1: by [  ]; only 1: apply H0).	3.60280299187	23913
Coq.ssr.ssrbool.unlessP	40
Coq.ssr.ssrbool.bind_unless	40
Coq.ssr.ssrbool.unless_contra	40
Coq.ssr.ssrbool.classicP	40
Coq.ssr.ssrbool.classicW	40	0.20	synth with cache (only 1: red; only 1: by move  =>b b' ->).	0.0494549274445	208
Coq.ssr.ssrbool.classic_bind	40
Coq.ssr.ssrbool.classic_EM	40
Coq.ssr.ssrbool.classic_pick	40
Coq.ssr.ssrbool.classic_imply	40
Coq.ssr.ssrbool.AllAnd.all_and2	40	1.0.16.1.0.16.41	synth with cache (only 1: repeat split; only 1: intro z; only 1: destruct (H z); only 1: assumption; only 1: intro z; only 1: destruct (H z); only 1: assumption).	3.07086610794	12276
Coq.ssr.ssrbool.AllAnd.all_and3	40	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0109989643097	1
Coq.ssr.ssrbool.AllAnd.all_and4	40	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0121970176697	1
Coq.ssr.ssrbool.AllAnd.all_and5	40	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0134809017181	1
Coq.ssr.ssrbool.pair_andP	40	12	synth with cache (only 1: intuition).	0.0241742134094	52
Coq.ssr.ssrbool.ReflectConnectives.idP	40	0.0.68	synth with cache (only 1: destruct b1; only 1: intuition; only 1: intuition).	37.5078020096	2527
Coq.ssr.ssrbool.ReflectConnectives.boolP	40	0	synth with cache (only 1: by case b1; constructor).	0.0054178237915	1
Coq.ssr.ssrbool.ReflectConnectives.idPn	40	1	synth with cache (only 1: by case b1; constructor).	0.00555109977722	2
Coq.ssr.ssrbool.ReflectConnectives.negP	40	0	synth with cache (only 1: by case b1; constructor).	0.00836682319641	1
Coq.ssr.ssrbool.ReflectConnectives.negPn	40	0	synth with cache (only 1: by case b1; constructor).	0.00538897514343	1
Coq.ssr.ssrbool.ReflectConnectives.negPf	40	0	synth with cache (only 1: by case b1; constructor; auto).	0.00722694396973	1
Coq.ssr.ssrbool.ReflectConnectives.andP	40
Coq.ssr.ssrbool.ReflectConnectives.and3P	40
Coq.ssr.ssrbool.ReflectConnectives.and4P	40
Coq.ssr.ssrbool.ReflectConnectives.and5P	40
Coq.ssr.ssrbool.ReflectConnectives.orP	40
Coq.ssr.ssrbool.ReflectConnectives.or3P	40
Coq.ssr.ssrbool.ReflectConnectives.or4P	40
Coq.ssr.ssrbool.ReflectConnectives.nandP	40	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0114262104034	1
Coq.ssr.ssrbool.ReflectConnectives.norP	40	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case; auto).	0.00998306274414	1
Coq.ssr.ssrbool.ReflectConnectives.implyP	40	1	synth with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0223689079285	2
Coq.ssr.ssrbool.andTb	40	0	synth with cache (only 1: repeat split).	0.00582003593445	1
Coq.ssr.ssrbool.andFb	40	1	synth with cache (only 1: repeat split).	0.00561308860779	2
Coq.ssr.ssrbool.andbT	40	3.12	synth with cache (only 1: intro H; only 1: Bool.destr_bool).	0.0400130748749	114
Coq.ssr.ssrbool.andbF	40	9	synth with cache (only 1: by case).	0.0092191696167	10
Coq.ssr.ssrbool.andbb	40	2	synth with cache (only 1: by case).	0.00855994224548	3
Coq.ssr.ssrbool.andbC	40	4.14	synth with cache (only 1: intro H; only 1: Bool.destr_bool).	0.0931708812714	185
Coq.ssr.ssrbool.andbA	40	0	synth with cache (only 1: by do 2!case).	0.00727295875549	1
Coq.ssr.ssrbool.andbCA	40	0	synth with cache (only 1: by do 2!case).	0.00680804252625	1
Coq.ssr.ssrbool.andbAC	40	8	synth with cache (only 1: by do 3!case).	0.0163159370422	9
Coq.ssr.ssrbool.andbACA	40	5	synth with cache (only 1: by do 3!case).	0.0165400505066	6
Coq.ssr.ssrbool.orTb	40	0	synth with cache (only 1: reflexivity).	0.0059380531311	1
Coq.ssr.ssrbool.orFb	40	0	synth with cache (only 1: by [  ]).	0.00522112846375	1
Coq.ssr.ssrbool.orbT	40	2	synth with cache (only 1: Bool.destr_bool).	0.00996613502502	3
Coq.ssr.ssrbool.orbF	40	0	synth with cache (only 1: by case).	0.00686502456665	1
Coq.ssr.ssrbool.orbb	40	0	synth with cache (only 1: by case).	0.00569891929626	1
Coq.ssr.ssrbool.orbC	40	0	synth with cache (only 1: by do 2!case).	0.00641298294067	1
Coq.ssr.ssrbool.orbA	40	0	synth with cache (only 1: by do 3!case).	0.00903296470642	1
Coq.ssr.ssrbool.orbCA	40	0	synth with cache (only 1: by do 3!case).	0.00873780250549	1
Coq.ssr.ssrbool.orbAC	40	0	synth with cache (only 1: by do 3!case).	0.00970578193665	1
Coq.ssr.ssrbool.orbACA	40	0	synth with cache (only 1: by do 4!case).	0.0144100189209	1
Coq.ssr.ssrbool.andbN	40	0	synth with cache (only 1: Bool.destr_bool).	0.00849890708923	1
Coq.ssr.ssrbool.andNb	40	0	synth with cache (only 1: by case : b ).	0.00605797767639	1
Coq.ssr.ssrbool.orbN	40	1	synth with cache (only 1: Bool.destr_bool).	0.00825715065002	2
Coq.ssr.ssrbool.orNb	40	0	synth with cache (only 1: by case : b ).	0.00666403770447	1
Coq.ssr.ssrbool.andb_orl	40	14	synth with cache (only 1: by do 3!case).	0.0523838996887	75
Coq.ssr.ssrbool.andb_orr	40	0	synth with cache (only 1: by do 3!case).	0.00963807106018	1
Coq.ssr.ssrbool.orb_andl	40	0	synth with cache (only 1: by do 3!case).	0.00976800918579	1
Coq.ssr.ssrbool.orb_andr	40	0	synth with cache (only 1: by do 3!case).	0.00964117050171	1
Coq.ssr.ssrbool.andb_idl	40	7.39	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	1.32629394531	1208
Coq.ssr.ssrbool.andb_idr	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.010812997818	1
Coq.ssr.ssrbool.andb_id2l	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0123879909515	1
Coq.ssr.ssrbool.andb_id2r	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0157568454742	1
Coq.ssr.ssrbool.orb_idl	40	2	synth with cache (only 1: by case : a ; case : b  => // ->).	0.011656999588	3
Coq.ssr.ssrbool.orb_idr	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0108909606934	1
Coq.ssr.ssrbool.orb_id2l	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0120542049408	1
Coq.ssr.ssrbool.orb_id2r	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.015506029129	1
Coq.ssr.ssrbool.negb_and	40	0	synth with cache (only 1: Bool.destr_bool).	0.0102701187134	1
Coq.ssr.ssrbool.negb_or	40	0	synth with cache (only 1: by case : a ; case : b ).	0.00765180587769	1
Coq.ssr.ssrbool.andbK	40	0	synth with cache (only 1: by case : a ; case : b ).	0.00810503959656	1
Coq.ssr.ssrbool.andKb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.00843691825867	1
Coq.ssr.ssrbool.orbK	40	0	synth with cache (only 1: by case : a ; case : b ).	0.00765299797058	1
Coq.ssr.ssrbool.orKb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.00768303871155	1
Coq.ssr.ssrbool.implybT	40	0	synth with cache (only 1: Bool.destr_bool).	0.00758790969849	1
Coq.ssr.ssrbool.implybF	40	0	synth with cache (only 1: by case : b ).	0.00697112083435	1
Coq.ssr.ssrbool.implyFb	40	0	synth with cache (only 1: by case : b ).	0.00581002235413	1
Coq.ssr.ssrbool.implyTb	40	0	synth with cache (only 1: by case : b ).	0.00608491897583	1
Coq.ssr.ssrbool.implybb	40	1	synth with cache (only 1: by case : b ).	0.00778698921204	2
Coq.ssr.ssrbool.negb_imply	40	0	synth with cache (only 1: by case : a ; case : b ).	0.00781798362732	1
Coq.ssr.ssrbool.implybE	40	0	synth with cache (only 1: by case : a ; case : b ).	0.00833487510681	1
Coq.ssr.ssrbool.implyNb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.00825190544128	1
Coq.ssr.ssrbool.implybN	40	0	synth with cache (only 1: by case : a ; case : b ).	0.00735092163086	1
Coq.ssr.ssrbool.implybNN	40	0	synth with cache (only 1: by case : a ; case : b ).	0.00716304779053	1
Coq.ssr.ssrbool.implyb_idl	40	10	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0569179058075	21
Coq.ssr.ssrbool.implyb_idr	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0110440254211	1
Coq.ssr.ssrbool.implyb_id2l	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0139288902283	1
Coq.ssr.ssrbool.addFb	40	0	synth with cache (only 1: by [  ]).	0.00570297241211	1
Coq.ssr.ssrbool.addbF	40	0	synth with cache (only 1: by case).	0.00592803955078	1
Coq.ssr.ssrbool.addbb	40	0	synth with cache (only 1: by case).	0.00593304634094	1
Coq.ssr.ssrbool.addbC	40	0	synth with cache (only 1: by do 2!case).	0.00687599182129	1
Coq.ssr.ssrbool.addbA	40	0	synth with cache (only 1: by do 3!case).	0.00958704948425	1
Coq.ssr.ssrbool.addbCA	40	0	synth with cache (only 1: by do 3!case).	0.00950598716736	1
Coq.ssr.ssrbool.addbAC	40	0	synth with cache (only 1: by do 3!case).	0.0103919506073	1
Coq.ssr.ssrbool.addbACA	40	0	synth with cache (only 1: by do 4!case).	0.0136778354645	1
Coq.ssr.ssrbool.andb_addl	40	0	synth with cache (only 1: by do 3!case).	0.00956988334656	1
Coq.ssr.ssrbool.andb_addr	40	0	synth with cache (only 1: by do 3!case).	0.00976920127869	1
Coq.ssr.ssrbool.addKb	40	0	synth with cache (only 1: by do 2!case).	0.0073230266571	1
Coq.ssr.ssrbool.addbK	40	0	synth with cache (only 1: by do 2!case).	0.0073881149292	1
Coq.ssr.ssrbool.addIb	40	2	synth with cache (only 1: by do 3!case).	0.034726858139	3
Coq.ssr.ssrbool.addbI	40	3	synth with cache (only 1: by do 3!case).	0.0157601833344	4
Coq.ssr.ssrbool.addTb	40	0	synth with cache (only 1: by case : b ).	0.00668001174927	1
Coq.ssr.ssrbool.addbT	40	1	synth with cache (only 1: by case : b ).	0.00835204124451	2
Coq.ssr.ssrbool.addbN	40	2	synth with cache (only 1: by case : a ; case : b ).	0.0110678672791	3
Coq.ssr.ssrbool.addNb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0071759223938	1
Coq.ssr.ssrbool.addbP	40	0.0.0.0.45	synth with cache (only 1: Bool.destr_bool; only 1: intuition; only 1: intuition; only 1: now constructor; only 1: intuition).	1.28213810921	1241
Coq.ssr.ssrbool.subrelUl	40	0.32.24.7.36	synth with cache (only 1: intro H; only 1: simpl; only 1: intros; only 1: elim eq_sym with (1 := H0); only 1: by [  ]).	5.86843109131	23458
Coq.ssr.ssrbool.subrelUr	40	30.5.61.37	synth with cache (only 1: intro H; only 1: red; only 1: simpl; only 1: intuition).	23.796435833	99005
Coq.ssr.ssrbool.sub_refl	40	11.33	synth with cache (only 1: intro H; only 1: case  =>// undecP).	0.283957004547	1138
Coq.ssr.ssrbool.PredicateSimplification.mem_topred	40
Coq.ssr.ssrbool.PredicateSimplification.topredE	40	0	synth with cache (only 1: by case : pT pp ).	0.00690484046936	1
Coq.ssr.ssrbool.PredicateSimplification.app_predE	40
Coq.ssr.ssrbool.PredicateSimplification.in_applicative	40
Coq.ssr.ssrbool.PredicateSimplification.in_collective	40
Coq.ssr.ssrbool.PredicateSimplification.in_simpl	40	0	synth with cache (only 1: by case : msp  => _ /= ->).	0.00946307182312	1
Coq.ssr.ssrbool.PredicateSimplification.unfold_in	40	4	synth with cache (only 1: by rewrite -mem_topred).	0.00834107398987	5
Coq.ssr.ssrbool.PredicateSimplification.simpl_predE	40	0	synth with cache (only 1: by [  ]).	0.0053608417511	1
Coq.ssr.ssrbool.PredicateSimplification.mem_simpl	40	1	synth with cache (only 1: by [  ]).	0.00591206550598	2
Coq.ssr.ssrbool.PredicateSimplification.mem_mem	40
Coq.ssr.ssrbool.qualifE	40	1	synth with cache (only 1: by [  ]).	0.0060088634491	2
Coq.ssr.ssrbool.KeyPred.keyed_predE	40
Coq.ssr.ssrbool.KeyedQualifier.keyed_qualifier_suproof	40
Coq.ssr.ssrbool.all_tag_cond_dep	40
Coq.ssr.ssrbool.all_tag_cond	40
Coq.ssr.ssrbool.all_sig_cond_dep	40
Coq.ssr.ssrbool.all_sig_cond	40
Coq.ssr.ssrbool.RelationProperties.symmetric_from_pre	40
Coq.ssr.ssrbool.RelationProperties.PER.sym_left_transitive	40
Coq.ssr.ssrbool.RelationProperties.PER.sym_right_transitive	40
Coq.ssr.ssrbool.RelationProperties.equivalence_relP	40
Coq.ssr.ssrbool.rev_trans	40
Coq.ssr.ssrbool.LocalProperties.forE	40	10	synth with cache (only 1: reflexivity).	0.0106680393219	21
Coq.ssr.ssrbool.LocalGlobal.in1W	40	0.16	synth with cache (only 1: intro H; only 1: by [  ]).	0.0675439834595	126
Coq.ssr.ssrbool.LocalGlobal.in2W	40	0	synth with cache (only 1: by move  =>? ?).	0.00990009307861	1
Coq.ssr.ssrbool.LocalGlobal.in3W	40	0	synth with cache (only 1: by move  =>? ?).	0.00789904594421	1
Coq.ssr.ssrbool.LocalGlobal.in1T	40	17.36	synth with cache (only 1: intros n m; only 1: auto).	1.03011822701	2681
Coq.ssr.ssrbool.LocalGlobal.in2T	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0141489505768	2
Coq.ssr.ssrbool.LocalGlobal.in3T	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0162179470062	2
Coq.ssr.ssrbool.LocalGlobal.sub_in1	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0156099796295	2
Coq.ssr.ssrbool.LocalGlobal.sub_in11	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0159199237823	2
Coq.ssr.ssrbool.LocalGlobal.sub_in111	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0184440612793	2
Coq.ssr.ssrbool.LocalGlobal.on1W	40	0	synth with cache (only 1: by move  =>? ?).	0.00753712654114	1
Coq.ssr.ssrbool.LocalGlobal.on1lW	40	0	synth with cache (only 1: by move  =>? ?).	0.00756096839905	1
Coq.ssr.ssrbool.LocalGlobal.on2W	40	0	synth with cache (only 1: by move  =>? ?).	0.00808095932007	1
Coq.ssr.ssrbool.LocalGlobal.on1T	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0162091255188	2
Coq.ssr.ssrbool.LocalGlobal.on1lT	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0170159339905	2
Coq.ssr.ssrbool.LocalGlobal.on2T	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0171809196472	2
Coq.ssr.ssrbool.LocalGlobal.subon1	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0161299705505	2
Coq.ssr.ssrbool.LocalGlobal.subon1l	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0168519020081	2
Coq.ssr.ssrbool.LocalGlobal.subon2	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0183110237122	2
Coq.ssr.ssrbool.LocalGlobal.can_in_inj	40
Coq.ssr.ssrbool.LocalGlobal.canLR_in	40
Coq.ssr.ssrbool.LocalGlobal.canRL_in	40
Coq.ssr.ssrbool.LocalGlobal.on_can_inj	40	0	synth with cache (only 1: by move  =>fK x y /fK {+2}<- /fK {+2}<- ->).	0.0138928890228	1
Coq.ssr.ssrbool.LocalGlobal.canLR_on	40	1	synth with cache (only 1: by move  =>fK D1y ->; rewrite fK).	0.010509967804	2
Coq.ssr.ssrbool.LocalGlobal.canRL_on	40	2	synth with cache (only 1: by move  =>fK D1x <-; rewrite fK).	0.0110528469086	3
Coq.ssr.ssrbool.LocalGlobal.inW_bij	40	6.6.65.102	synth with cache (only 1: intros [x y]; only 1: exists x; only 1: by move  =>? ?; only 1: by move  =>? ?).	20.1916530132	74990
Coq.ssr.ssrbool.LocalGlobal.onW_bij	40	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0105769634247	1
Coq.ssr.ssrbool.LocalGlobal.inT_bij	40	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0154700279236	1
Coq.ssr.ssrbool.LocalGlobal.onT_bij	40	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0146510601044	1
Coq.ssr.ssrbool.LocalGlobal.sub_in_bij	40	0.58	synth with cache (only 1: intro H; only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	1.0049700737	1785
Coq.ssr.ssrbool.LocalGlobal.subon_bij	40	5	synth with cache (only 1: by move  =>subD [g' fK g'K]; exists g' => x; move /subD ; [ apply : fK  | apply : g'K  ]).	0.0240850448608	6
Coq.ssr.ssrbool.sub_in2	40	10.33	synth with cache (only 1: intros; only 1: by move  =>? ?; auto).	0.802912950516	1214
Coq.ssr.ssrbool.sub_in3	40	13.33	synth with cache (only 1: intros; only 1: by move  =>? ?; auto).	1.02349996567	1344
Coq.ssr.ssrbool.sub_in12	40	1.31	synth with cache (only 1: intro x; only 1: by move  =>/= sub_dd'; apply : sub_in111 ).	0.58774805069	557
Coq.ssr.ssrbool.sub_in21	40	1	synth with cache (only 1: by move  =>/= sub_dd'; apply : sub_in111 ).	0.0147619247437	2
Coq.ssr.ssrbool.equivalence_relP_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoW	40	15.117.6	synth with cache (only 1: move  =>f0 fP; only 1: apply eq_trans; only 1: Bool.destr_bool).	6.10435318947	19983
Coq.ssr.ssrbool.MonoHomoMorphismTheory.mono2W	40	70	synth with cache (only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).	1.95758605003	4839
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoRL	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoLR	40	0	synth with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).	0.00969910621643	1
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homo_mono	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoLR	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoRL	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.can_mono	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoW_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.mono2W_in	40	0	synth with cache (only 1: by move  =>hf x ax; rewrite hf).	0.0108160972595	1
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoRL_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoLR_in	40	0	synth with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK_on //; apply).	0.0171799659729	1
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homo_mono_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoLR_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoRL_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.can_mono_in	40
Coq.ssr.ssrsetoid.compat_Reflexive	40	0	synth with cache (only 1: tauto).	0.00493407249451	1
Coq.ssr.ssrfun.unitE	40	3.1.7.14	synth with cache (only 1: intro H; only 1: simpl; only 1: destruct H; only 1: tauto).	0.153883934021	544
Coq.ssr.ssrfun.ExtensionalEquality.frefl	40	20	synth with cache (only 1: split).	0.030669927597	186
Coq.ssr.ssrfun.ExtensionalEquality.fsym	40	1.29	synth with cache (only 1: red; only 1: by [  ]).	0.105870962143	484
Coq.ssr.ssrfun.ExtensionalEquality.ftrans	40	1.20.67.27	synth with cache (only 1: intros Hfst Hsnd; only 1: intro H1; only 1: rewrite Hfst; only 1: by [  ]).	3.43154788017	23058
Coq.ssr.ssrfun.ExtensionalEquality.rrefl	40	8	synth with cache (only 1: repeat split).	0.00593709945679	9
Coq.ssr.ssrfun.Composition.eq_comp	40
Coq.ssr.ssrfun.all_tag	40
Coq.ssr.ssrfun.all_tag2	40	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).	0.0118148326874	1
Coq.ssr.ssrfun.Sig.svalP	40	12	synth with cache (only 1: apply proj2_sig).	0.0148460865021	46
Coq.ssr.ssrfun.Sig.s2valP	40	4	synth with cache (only 1: by case : u ).	0.00685787200928	5
Coq.ssr.ssrfun.Sig.s2valP'	40	0	synth with cache (only 1: by case : u ).	0.00638294219971	1
Coq.ssr.ssrfun.all_sig	40	1	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).	0.0136919021606	2
Coq.ssr.ssrfun.all_sig2	40	1	synth with cache (only 1: by case /all_tag =>f /all_pair []; exists f).	0.0190651416779	2
Coq.ssr.ssrfun.Injections.can_pcan	40	0.104.55	synth with cache (only 1: intros H x0; only 1: rewrite H; only 1: reflexivity).	18.9924170971	154525
Coq.ssr.ssrfun.Injections.pcan_inj	40
Coq.ssr.ssrfun.Injections.can_inj	40	1	synth with cache (only 1: by move  =>fK x y /(congr1 g); rewrite !fK => [[]]).	0.00944304466248	2
Coq.ssr.ssrfun.Injections.canLR	40	6.25.8	synth with cache (only 1: intros h1 h2; only 1: subst; only 1: trivial).	0.369307994843	1800
Coq.ssr.ssrfun.Injections.canRL	40	18.8.11	synth with cache (only 1: intros h1 h2; only 1: destruct h2; only 1: auto).	0.379549026489	1580
Coq.ssr.ssrfun.Some_inj	40	2.62	synth with cache (only 1: inversion 1; only 1: reflexivity).	1.10364198685	4395
Coq.ssr.ssrfun.of_voidK	40	6.18	synth with cache (only 1: intro H; only 1: destruct H).	0.186913013458	327
Coq.ssr.ssrfun.esymK	40	0.18.14.8	synth with cache (only 1: red; only 1: symmetry; only 1: subst; only 1: reflexivity).	0.497776985168	1808
Coq.ssr.ssrfun.etrans_id	40	1.20	synth with cache (only 1: rewrite eq_trans_refl_l; only 1: reflexivity).	0.0672631263733	232
Coq.ssr.ssrfun.InjectionsTheory.inj_id	40	1	synth with cache (only 1: by move  =>x y []).	0.00659012794495	2
Coq.ssr.ssrfun.InjectionsTheory.inj_can_sym	40	29.49	synth with cache (only 1: red; only 1: auto).	1.69196200371	7922
Coq.ssr.ssrfun.InjectionsTheory.inj_comp	40	14.19.37	synth with cache (only 1: intros Hfst Hsnd; only 1: intros H ?; only 1: auto).	2.27747702599	9176
Coq.ssr.ssrfun.InjectionsTheory.inj_compr	40
Coq.ssr.ssrfun.InjectionsTheory.can_comp	40	4.18.63	synth with cache (only 1: red; only 1: simpl; only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).	1.79667496681	8415
Coq.ssr.ssrfun.InjectionsTheory.pcan_pcomp	40
Coq.ssr.ssrfun.InjectionsTheory.eq_inj	40
Coq.ssr.ssrfun.InjectionsTheory.eq_can	40
Coq.ssr.ssrfun.InjectionsTheory.inj_can_eq	40
Coq.ssr.ssrfun.Bijections.bij_inj	40
Coq.ssr.ssrfun.Bijections.bij_can_sym	40
Coq.ssr.ssrfun.Bijections.bij_can_eq	40
Coq.ssr.ssrfun.BijectionsTheory.eq_bij	40
Coq.ssr.ssrfun.BijectionsTheory.bij_comp	40
Coq.ssr.ssrfun.BijectionsTheory.bij_can_bij	40
Coq.ssr.ssrfun.Involutions.inv_inj	40
Coq.ssr.ssrfun.Involutions.inv_bij	40	18.18.100.27	synth with cache (only 1: set (Hfsymf := fun a => eq_sym (Hf a)); only 1: exists f; only 1: trivial; only 1: trivial).	3.17447400093	31118
Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	2.6	synth with cache (only 1: intros; only 1: trivial).	0.0114789009094	17
Coq.ssr.ssrunder.Under_rel.Under_relE	40	0	synth with cache (only 1: now trivial).	0.00489091873169	1
Coq.ssr.ssrunder.Under_rel.over_rel	40	0	synth with cache (only 1: now trivial).	0.00534415245056	1
Coq.ssr.ssrunder.Under_rel.over_rel_done	40	0	synth with cache (only 1: now trivial).	0.00553488731384	1
Coq.ssr.ssrunder.Under_rel.under_rel_done	40	0	synth with cache (only 1: now unfold Over_rel).	0.00537705421448	1
Coq.Vectors.VectorEq.BEQ.eqb_nat_eq	40	13.14	synth with cache (only 1: fix even_spec 1; only 1: trivial).	5.16703796387	5441
Coq.Vectors.VectorEq.BEQ.eqb_eq	40
Coq.Vectors.VectorEq.BEQ.eq_dec	40
Coq.Vectors.VectorEq.CAST.cast	40	0.4.0.8	synth with cache (only 1: intros a b; only 1: intros m n v1; only 1: subst; only 1: now f_equal).	0.411315917969	411
Coq.Vectors.VectorDef.BASES.trunc	40
Coq.Vectors.VectorSpec.eta	40
Coq.Vectors.VectorSpec.eq_nth_iff	40
Coq.Vectors.VectorSpec.nth_order_last	40
Coq.Vectors.VectorSpec.shiftin_nth	40
Coq.Vectors.VectorSpec.shiftin_last	40
Coq.Vectors.VectorSpec.shiftrepeat_nth	40
Coq.Vectors.VectorSpec.shiftrepeat_last	40	0.0.0.0	synth with cache (only 1: refine (@rectS _ _ _ _); only 1: now simpl; only 1: intros; only 1: now simpl).	0.0576450824738	4
Coq.Vectors.VectorSpec.const_nth	40	0.0.17.1	synth with cache (only 1: generalize dependent n; only 1: induction p; only 1: now simpl; only 1: now simpl).	1.69656896591	1001
Coq.Vectors.VectorSpec.nth_map	40
Coq.Vectors.VectorSpec.nth_map2	40
Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40
Coq.Vectors.VectorSpec.to_list_of_list_opp	40
Coq.Vectors.VectorSpec.take_O	40	1.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0360388755798	3
Coq.Vectors.VectorSpec.take_idem	40
Coq.Vectors.VectorSpec.take_app	40
Coq.Vectors.VectorSpec.take_prf_irr	40	1.0.0.0.0.1.0.0.1	synth with cache (only 1: induction p; only 1: intros n v le le'; only 1: auto; only 1: intros n v le le'; only 1: destruct v; only 1: inversion le; only 1: simpl; only 1: apply f_equal; only 1: apply IHp).	3.22849011421	879
Coq.Vectors.VectorSpec.uncons_cons	40	4	synth with cache (only 1: split).	0.031238079071	5
Coq.Vectors.VectorSpec.append_comm_cons	40	0.1.0	synth with cache (only 1: intros m w le; only 1: intros; only 1: reflexivity).	0.053092956543	4
Coq.Vectors.VectorSpec.splitat_append	40	1.55.7	synth with cache (only 1: intros p1 p2 H1; only 1: fix even_spec 1; only 1: auto).	14.979580164	18073
Coq.Vectors.VectorSpec.append_splitat	40
Coq.Vectors.Fin.of_nat_ext	40
Coq.Vectors.Fin.of_nat_to_nat_inv	40
Coq.Vectors.Fin.to_nat_of_nat	40
Coq.Vectors.Fin.to_nat_inj	40
Coq.Vectors.Fin.L_sanity	40
Coq.Vectors.Fin.L_R	40
Coq.Vectors.Fin.R_sanity	40
Coq.Vectors.Fin.depair_sanity	40
Coq.Vectors.Fin.eqb_nat_eq	40	7.10	synth with cache (only 1: fix even_spec 1; only 1: auto).	1.64932203293	2008
Coq.Vectors.Fin.eqb_eq	40	0.13	synth with cache (only 1: fix even_spec 1; only 1: easy).	1.17509102821	736
Coq.Vectors.Fin.eq_dec	40
Coq.Vectors.Fin.cast	40	23	synth with cache (only 1: congruence).	1.08050394058	1194
Coq.Setoids.Setoid.Seq_refl	40	26	synth with cache (only 1: firstorder).	0.51137304306	849
Coq.Setoids.Setoid.Seq_sym	40	6.0.0	synth with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: intuition).	0.0186238288879	11
Coq.Setoids.Setoid.Seq_trans	40	6.0.0.0	synth with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: symmetry; only 1: now transitivity y).	0.0452561378479	32
Coq.Setoids.Setoid.gen_st	40	4.8	synth with cache (only 1: red; only 1: simpl_relation).	0.0548660755157	86
Coq.Bool.IfProp.Iftrue_inv	40	4.0.2	synth with cache (only 1: destruct 1; only 1: tauto; only 1: discriminate).	0.0393099784851	21
Coq.Bool.IfProp.Iffalse_inv	40	2.2.1.0.0	synth with cache (only 1: destruct 1; only 1: intros; only 1: case diff_true_false; only 1: auto with bool; only 1: auto with bool).	0.0424649715424	13
Coq.Bool.IfProp.IfProp_true	40	2.6.8.34	synth with cache (only 1: intros n m; only 1: revert m; only 1: inversion 1; only 1: trivial).	7.5309009552	30819
Coq.Bool.IfProp.IfProp_false	40	1.0.0.0.0.0.0.1	synth with cache (only 1: intros; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: assumption).	0.0567030906677	20
Coq.Bool.IfProp.IfProp_or	40	3.1.0.0.0.5	synth with cache (only 1: intro z; only 1: destruct 1; only 1: left; only 1: trivial; only 1: right; only 1: trivial).	1.8436820507	1145
Coq.Bool.IfProp.IfProp_sum	40
Coq.Bool.Zerob.zerob_true_intro	40	0.0.7	synth with cache (only 1: induction n; only 1: easy; only 1: easy).	0.0761890411377	10
Coq.Bool.Zerob.zerob_true_elim	40	0.0.0	synth with cache (only 1: destruct n; only 1: trivial with bool; only 1: inversion 1).	0.0537028312683	3
Coq.Bool.Zerob.zerob_false_intro	40	2.4.0	synth with cache (only 1: destruct n; only 1: apply Nat.eqb_neq; only 1: trivial).	0.0748870372772	11
Coq.Bool.Zerob.zerob_false_elim	40	1.1.5.0	synth with cache (only 1: destruct n; only 1: discriminate; only 1: inversion 1; only 1: inversion 1).	0.417269945145	89
Coq.Bool.DecBool.ifdec_left	40	1.7.7.3	synth with cache (only 1: intros ? ? ? Fl Fr; only 1: destruct Fl; only 1: reflexivity; only 1: contradiction).	1.97429299355	5412
Coq.Bool.DecBool.ifdec_right	40	0.5.0.0	synth with cache (only 1: intros; only 1: case H; only 1: contradiction; only 1: auto).	0.086268901825	44
Coq.Bool.Sumbool.sumbool_of_bool	40	4.4.17.0	synth with cache (only 1: intro H; only 1: destruct H; only 1: auto; only 1: auto).	0.300336837769	1205
Coq.Bool.Sumbool.bool_eq_rec	40	1.2.1.2.3	synth with cache (only 1: destruct b; only 1: intro z; only 1: auto; only 1: intro z; only 1: auto).	0.244007825851	341
Coq.Bool.Sumbool.bool_eq_ind	40	0.0.0	synth with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.0150928497314	3
Coq.Bool.Sumbool.connectives.sumbool_and	40
Coq.Bool.Sumbool.connectives.sumbool_or	40	2.2.1.2.0	synth with cache (only 1: case H1; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	3.90240597725	3257
Coq.Bool.Sumbool.connectives.sumbool_not	40	2.2.0	synth with cache (only 1: case H1; only 1: auto; only 1: auto).	0.588721990585	368
Coq.Bool.Sumbool.bool_of_sumbool	40
Coq.Bool.Bool.bool_dec	40
Coq.Bool.Bool.diff_true_false	40	17	synth with cache (only 1: discriminate).	0.0678000450134	334
Coq.Bool.Bool.diff_false_true	40	0	synth with cache (only 1: discriminate).	0.0065438747406	1
Coq.Bool.Bool.eq_true_false_abs	40	3.3.14.0	synth with cache (only 1: intro H; only 1: destruct H; only 1: discriminate; only 1: discriminate).	0.350496053696	1002
Coq.Bool.Bool.not_true_is_false	40	2.20.4	synth with cache (only 1: destr_bool; only 1: reflexivity || destruct H; only 1: repeat split).	0.609283924103	2130
Coq.Bool.Bool.not_false_is_true	40	1.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.011029958725	3
Coq.Bool.Bool.not_true_iff_false	40	1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0172739028931	5
Coq.Bool.Bool.not_false_iff_true	40	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0174610614777	3
Coq.Bool.Bool.leb_implb	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0192849636078	5
Coq.Bool.Bool.eqb_subst	40	6.0.0	synth with cache (only 1: intro H; only 1: intro z; only 1: destr_bool).	0.0160911083221	11
Coq.Bool.Bool.eqb_reflx	40	0	synth with cache (only 1: destr_bool).	0.00762510299683	1
Coq.Bool.Bool.eqb_prop	40	0	synth with cache (only 1: destr_bool).	0.00937390327454	1
Coq.Bool.Bool.eqb_true_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0246248245239	5
Coq.Bool.Bool.eqb_false_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.026046037674	5
Coq.Bool.Bool.negb_orb	40	0.0.0.0.0.1.2	synth with cache (only 1: destruct b1; only 1: destruct b2; only 1: repeat split; only 1: repeat split; only 1: destruct b2; only 1: repeat split; only 1: repeat split).	0.0357389450073	31
Coq.Bool.Bool.negb_andb	40	0	synth with cache (only 1: destr_bool).	0.0115759372711	1
Coq.Bool.Bool.negb_involutive	40	0	synth with cache (only 1: destr_bool).	0.00848984718323	1
Coq.Bool.Bool.negb_involutive_reverse	40	0	synth with cache (only 1: destr_bool).	0.00854396820068	1
Coq.Bool.Bool.negb_sym	40	0	synth with cache (only 1: destr_bool).	0.0101499557495	1
Coq.Bool.Bool.no_fixpoint_negb	40	0	synth with cache (only 1: destr_bool).	0.00993895530701	1
Coq.Bool.Bool.eqb_negb1	40	0	synth with cache (only 1: destr_bool).	0.00951886177063	1
Coq.Bool.Bool.eqb_negb2	40	0	synth with cache (only 1: destr_bool).	0.0095419883728	1
Coq.Bool.Bool.if_negb	40	0	synth with cache (only 1: destr_bool).	0.00928497314453	1
Coq.Bool.Bool.negb_true_iff	40	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.017569065094	3
Coq.Bool.Bool.negb_false_iff	40	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0177028179169	3
Coq.Bool.Bool.orb_true_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0279669761658	5
Coq.Bool.Bool.orb_false_iff	40	0.1.0.1.0.0.2.1	synth with cache (only 1: split; only 1: split; only 1: destr_bool; only 1: destr_bool; only 1: intros; only 1: destruct H; only 1: subst; only 1: destr_bool).	0.66264295578	646
Coq.Bool.Bool.orb_true_elim	40	4.4.5.0	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).	0.577239990234	747
Coq.Bool.Bool.orb_prop	40	0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.0239100456238	4
Coq.Bool.Bool.orb_true_intro	40	0.1.0	synth with cache (only 1: intros; only 1: destr_bool; only 1: intuition).	0.0192329883575	4
Coq.Bool.Bool.orb_false_intro	40	0	synth with cache (only 1: destr_bool).	0.0109388828278	1
Coq.Bool.Bool.orb_false_elim	40	2.0	synth with cache (only 1: destr_bool; only 1: repeat split).	0.0148119926453	4
Coq.Bool.Bool.orb_diag	40	5.0	synth with cache (only 1: intros; only 1: destr_bool).	0.0131158828735	7
Coq.Bool.Bool.orb_true_r	40	4.0.1.1	synth with cache (only 1: intros; only 1: apply orb_true_iff; only 1: apply orb_true_iff; only 1: destr_bool).	0.0248320102692	15
Coq.Bool.Bool.orb_true_l	40	0	synth with cache (only 1: destr_bool).	0.00938105583191	1
Coq.Bool.Bool.orb_false_r	40	6.1	synth with cache (only 1: intros; only 1: destr_bool).	0.0169599056244	9
Coq.Bool.Bool.orb_false_l	40	0	synth with cache (only 1: destr_bool).	0.0121669769287	1
Coq.Bool.Bool.orb_negb_r	40	0	synth with cache (only 1: destr_bool).	0.00963807106018	1
Coq.Bool.Bool.orb_comm	40	6.0	synth with cache (only 1: intros; only 1: destr_bool).	0.0170781612396	8
Coq.Bool.Bool.orb_assoc	40	6.0	synth with cache (only 1: intros; only 1: destr_bool).	0.0206019878387	8
Coq.Bool.Bool.andb_true_iff	40	0.0.0.0.4	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.206899881363	84
Coq.Bool.Bool.andb_false_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0307850837708	5
Coq.Bool.Bool.andb_true_eq	40	2.2	synth with cache (only 1: destr_bool; only 1: repeat split).	0.147066116333	92
Coq.Bool.Bool.andb_false_intro1	40	1	synth with cache (only 1: destr_bool).	0.0252590179443	15
Coq.Bool.Bool.andb_false_intro2	40	0.0.0	synth with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.0170798301697	3
Coq.Bool.Bool.andb_false_r	40	1.4.1	synth with cache (only 1: intros; only 1: apply andb_false_iff; only 1: intuition).	0.0176820755005	9
Coq.Bool.Bool.andb_false_l	40	1	synth with cache (only 1: destr_bool).	0.0104629993439	2
Coq.Bool.Bool.andb_diag	40	7.0	synth with cache (only 1: intros; only 1: destr_bool).	0.0149738788605	9
Coq.Bool.Bool.andb_true_r	40	2	synth with cache (only 1: destr_bool).	0.0103569030762	3
Coq.Bool.Bool.andb_true_l	40	1	synth with cache (only 1: destr_bool).	0.0103600025177	2
Coq.Bool.Bool.andb_false_elim	40	0.0.0.2	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).	0.0984201431274	24
Coq.Bool.Bool.andb_negb_r	40	0	synth with cache (only 1: destr_bool).	0.010812997818	1
Coq.Bool.Bool.andb_comm	40	4	synth with cache (only 1: destr_bool).	0.0873508453369	21
Coq.Bool.Bool.andb_assoc	40	4	synth with cache (only 1: destr_bool).	0.0927059650421	25
Coq.Bool.Bool.andb_orb_distrib_r	40	0	synth with cache (only 1: destr_bool).	0.0151801109314	1
Coq.Bool.Bool.andb_orb_distrib_l	40	0	synth with cache (only 1: destr_bool).	0.0164520740509	1
Coq.Bool.Bool.orb_andb_distrib_r	40	0	synth with cache (only 1: destr_bool).	0.016627073288	1
Coq.Bool.Bool.orb_andb_distrib_l	40	0	synth with cache (only 1: destr_bool).	0.016606092453	1
Coq.Bool.Bool.absorption_andb	40	0	synth with cache (only 1: destr_bool).	0.0136289596558	1
Coq.Bool.Bool.absorption_orb	40	0	synth with cache (only 1: destr_bool).	0.0129778385162	1
Coq.Bool.Bool.xorb_false_r	40	1.2.1.1	synth with cache (only 1: intros; only 1: repeat match goal with | p:(_ * _)%type |- _ => destruct p | b:bool |- _ => destruct b end; only 1: repeat split; only 1: trivial).	0.0264499187469	18
Coq.Bool.Bool.xorb_false_l	40	0	synth with cache (only 1: destr_bool).	0.0113937854767	1
Coq.Bool.Bool.xorb_true_r	40	0	synth with cache (only 1: destr_bool).	0.0111038684845	1
Coq.Bool.Bool.xorb_true_l	40	0	synth with cache (only 1: reflexivity).	0.00976586341858	1
Coq.Bool.Bool.xorb_nilpotent	40	0	synth with cache (only 1: destr_bool).	0.0114469528198	1
Coq.Bool.Bool.xorb_comm	40	1	synth with cache (only 1: destr_bool).	0.0129420757294	2
Coq.Bool.Bool.xorb_assoc_reverse	40	1	synth with cache (only 1: destr_bool).	0.0162789821625	2
Coq.Bool.Bool.xorb_eq	40	0	synth with cache (only 1: destr_bool).	0.0138158798218	1
Coq.Bool.Bool.xorb_move_l_r_1	40	0	synth with cache (only 1: destr_bool).	0.0174148082733	1
Coq.Bool.Bool.xorb_move_l_r_2	40	0	synth with cache (only 1: destr_bool).	0.0173590183258	1
Coq.Bool.Bool.xorb_move_r_l_1	40	0	synth with cache (only 1: destr_bool).	0.0174448490143	1
Coq.Bool.Bool.xorb_move_r_l_2	40	0	synth with cache (only 1: destr_bool).	0.0175049304962	1
Coq.Bool.Bool.negb_xorb_l	40	1	synth with cache (only 1: destr_bool).	0.0129981040955	2
Coq.Bool.Bool.negb_xorb_r	40	0.0.0.0.0	synth with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.0216150283813	5
Coq.Bool.Bool.xorb_negb_negb	40	0.0.0.0.0	synth with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.0232181549072	5
Coq.Bool.Bool.eq_iff_eq_true	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0414690971375	5
Coq.Bool.Bool.eq_true_iff_eq	40	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0235879421234	3
Coq.Bool.Bool.eq_true_negb_classical	40	1.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.0164291858673	3
Coq.Bool.Bool.eq_true_not_negb	40	1.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.0167820453644	3
Coq.Bool.Bool.absurd_eq_bool	40	5.5.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.169378042221	220
Coq.Bool.Bool.absurd_eq_true	40	5.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.0162978172302	7
Coq.Bool.Bool.trans_eq_bool	40	0.5.1	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0498988628387	26
Coq.Bool.Bool.Is_true_eq_true	40	1.6	synth with cache (only 1: destr_bool; only 1: contradiction).	0.0576679706573	36
Coq.Bool.Bool.Is_true_eq_left	40	0	synth with cache (only 1: destr_bool).	0.0124609470367	1
Coq.Bool.Bool.Is_true_eq_right	40	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: auto with bool).	0.0366940498352	3
Coq.Bool.Bool.eqb_refl	40	0	synth with cache (only 1: destr_bool).	0.0333330631256	1
Coq.Bool.Bool.eqb_eq	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.019544839859	3
Coq.Bool.Bool.orb_prop_elim	40	1.0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: tauto).	0.0347759723663	16
Coq.Bool.Bool.orb_prop_intro	40	0.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.0154149532318	2
Coq.Bool.Bool.andb_prop_intro	40	1.0.0.1	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto).	0.0307080745697	22
Coq.Bool.Bool.andb_prop_elim	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.0224130153656	5
Coq.Bool.Bool.eq_bool_prop_intro	40	0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0327520370483	16
Coq.Bool.Bool.eq_bool_prop_elim	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0210900306702	3
Coq.Bool.Bool.negb_prop_elim	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.014790058136	3
Coq.Bool.Bool.negb_prop_intro	40	0.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.0130741596222	2
Coq.Bool.Bool.negb_prop_classical	40	0.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.0130620002747	2
Coq.Bool.Bool.negb_prop_involutive	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0151410102844	3
Coq.Bool.Bool.andb_if	40	4	synth with cache (only 1: destr_bool).	0.0170090198517	14
Coq.Bool.Bool.negb_if	40	0	synth with cache (only 1: destr_bool).	0.0118639469147	1
Coq.Bool.Bool.andb_lazy_alt	40	1.0	synth with cache (only 1: intros; only 1: repeat split).	0.0144181251526	3
Coq.Bool.Bool.orb_lazy_alt	40	0.0	synth with cache (only 1: intros; only 1: trivial).	0.0128200054169	2
Coq.Bool.Bool.reflect_iff	40	1.0.0.23	synth with cache (only 1: intros A B []; only 1: intuition; only 1: intuition; only 1: destr_bool).	6.84009313583	14867
Coq.Bool.Bool.iff_reflect	40	2.1.2.0	synth with cache (only 1: destruct 1; only 1: repeat match goal with | p:(_ * _)%type |- _ => destruct p | b:bool |- _ => destruct b end; only 1: intuition; only 1: intuition).	0.0256741046906	9
Coq.Bool.Bool.reflect_dec	40	0.5.0.4	synth with cache (only 1: unfold not; only 1: destruct 1; only 1: auto; only 1: intuition).	0.554426908493	282
Coq.Bool.Bool.eqb_spec	40	0.0.0.0.8	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.178750038147	113
Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_true	40	7.1.1	synth with cache (only 1: intros; only 1: destruct H; only 1: destr_bool).	0.0913209915161	118
Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_not_false	40
Coq.Bool.BoolEq.Bool_eq_dec.beq_false_not_eq	40
Coq.Bool.BoolEq.Bool_eq_dec.exists_beq_eq	40
Coq.Bool.BoolEq.Bool_eq_dec.not_eq_false_beq	40	12.51.1	synth with cache (only 1: intros x y e; only 1: apply eq_iff_eq_true; only 1: intuition).	29.7242870331	107024
Coq.Bool.BoolEq.Bool_eq_dec.eq_dec	40
Coq.Lists.ListSet.first_definitions.set_In_dec	40
Coq.Lists.ListSet.first_definitions.set_mem_ind	40	0.0.9.5.0.0.1.0	synth with cache (only 1: unfold set_In; only 1: simple induction x; only 1: auto; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: case (Aeq_dec a a0); only 1: auto with datatypes; only 1: auto with datatypes).	11.5640749931	11976
Coq.Lists.ListSet.first_definitions.set_mem_ind2	40
Coq.Lists.ListSet.first_definitions.set_mem_correct1	40
Coq.Lists.ListSet.first_definitions.set_mem_correct2	40
Coq.Lists.ListSet.first_definitions.set_mem_complete1	40
Coq.Lists.ListSet.first_definitions.set_mem_complete2	40
Coq.Lists.ListSet.first_definitions.set_add_intro1	40
Coq.Lists.ListSet.first_definitions.set_add_intro2	40
Coq.Lists.ListSet.first_definitions.set_add_intro	40	20	synth with cache (only 1: intuition).	5.76954102516	5118
Coq.Lists.ListSet.first_definitions.set_add_elim	40
Coq.Lists.ListSet.first_definitions.set_add_elim2	40	0.0.0.0.0.0.0.0.0.1.0.0.1	synth with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: intros [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes; only 1: simpl; only 1: do 3 intro; only 1: elim (Aeq_dec b a0); only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto).	1.13173913956	714
Coq.Lists.ListSet.first_definitions.set_add_not_empty	40
Coq.Lists.ListSet.first_definitions.set_add_iff	40
Coq.Lists.ListSet.first_definitions.set_add_nodup	40
Coq.Lists.ListSet.first_definitions.set_remove_1	40
Coq.Lists.ListSet.first_definitions.set_remove_2	40
Coq.Lists.ListSet.first_definitions.set_remove_3	40
Coq.Lists.ListSet.first_definitions.set_remove_iff	40
Coq.Lists.ListSet.first_definitions.set_remove_nodup	40
Coq.Lists.ListSet.first_definitions.set_union_intro1	40
Coq.Lists.ListSet.first_definitions.set_union_intro2	40	0.0.0.0.7.14.0.0	synth with cache (only 1: simple induction y; only 1: simpl; only 1: tauto; only 1: intros H H0 H1 [| ]; only 1: simpl; only 1: auto with datatypes; only 1: simpl; only 1: auto with datatypes).	28.6120381355	20454
Coq.Lists.ListSet.first_definitions.set_union_intro	40	0.0.1.1.0.0.0	synth with cache (only 1: simple induction y; only 1: simpl; only 1: tauto; only 1: intros; only 1: elim H0; only 1: auto with datatypes; only 1: auto with datatypes).	0.135355949402	27
Coq.Lists.ListSet.first_definitions.set_union_elim	40
Coq.Lists.ListSet.first_definitions.set_union_iff	40
Coq.Lists.ListSet.first_definitions.set_union_nodup	40
Coq.Lists.ListSet.first_definitions.set_union_emptyL	40	0.1.4.2.0.0.0.0.7	synth with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros; only 1: generalize (set_add_elim _ _ _ H0); only 1: intros [H1| H1]; only 1: auto with datatypes; only 1: tauto).	5.33663606644	3054
Coq.Lists.ListSet.first_definitions.set_union_emptyR	40	0.0.0.1.0.0.0.0	synth with cache (only 1: intros a x H; only 1: case (set_union_elim _ _ _ H); only 1: case (set_union_elim _ _ _ H); only 1: case (set_union_elim _ _ _ H); only 1: auto || contradiction; only 1: auto || contradiction; only 1: auto || contradiction; only 1: auto || contradiction).	0.199871063232	40
Coq.Lists.ListSet.first_definitions.set_inter_intro	40
Coq.Lists.ListSet.first_definitions.set_inter_elim1	40
Coq.Lists.ListSet.first_definitions.set_inter_elim2	40
Coq.Lists.ListSet.first_definitions.set_inter_elim	40	0.3	synth with cache (only 1: intros a0 l Hrec y; only 1: eauto with datatypes).	0.0376319885254	5
Coq.Lists.ListSet.first_definitions.set_inter_iff	40
Coq.Lists.ListSet.first_definitions.set_inter_nodup	40
Coq.Lists.ListSet.first_definitions.set_diff_intro	40
Coq.Lists.ListSet.first_definitions.set_diff_elim1	40
Coq.Lists.ListSet.first_definitions.set_diff_elim2	40
Coq.Lists.ListSet.first_definitions.set_diff_iff	40
Coq.Lists.ListSet.first_definitions.set_diff_nodup	40
Coq.Lists.ListSet.first_definitions.set_diff_trivial	40
Coq.Lists.ListDec.Dec_in_Prop.In_decidable	40	2.0.0.0.2.5	synth with cache (only 1: induction l as [| a l' Hrec]; only 1: simpl; only 1: unfold decidable, not; only 1: tauto; only 1: simpl; only 1: intuition).	0.561288118362	371
Coq.Lists.ListDec.Dec_in_Prop.incl_decidable	40
Coq.Lists.ListDec.Dec_in_Prop.NoDup_decidable	40
Coq.Lists.ListDec.Dec_in_Type.incl_dec	40
Coq.Lists.ListDec.Dec_in_Type.NoDup_dec	40
Coq.Lists.ListDec.uniquify_map	40
Coq.Lists.ListDec.uniquify	40
Coq.Lists.Streams.Streams.unfold_Stream	40	1.1.0.16.31	synth with cache (only 1: intro H; only 1: destruct H; only 1: destruct H; only 1: destruct H; only 1: reflexivity).	0.509475946426	3219
Coq.Lists.Streams.Streams.tl_nth_tl	40	0.0.0.2.4	synth with cache (only 1: induction n; only 1: trivial; only 1: intro x; only 1: case x; only 1: trivial).	0.111921787262	114
Coq.Lists.Streams.Streams.Str_nth_tl_plus	40
Coq.Lists.Streams.Streams.Str_nth_plus	40
Coq.Lists.Streams.Streams.EqSt_reflex	40
Coq.Lists.Streams.Streams.sym_EqSt	40	2.2.11.0.3	synth with cache (only 1: intro x; only 1: coinduction ltac:(EqSt_reflex); only 1: destruct H; only 1: auto; only 1: trivial).	1.2380361557	2233
Coq.Lists.Streams.Streams.trans_EqSt	40
Coq.Lists.Streams.Streams.eqst_ntheq	40
Coq.Lists.Streams.Streams.ntheq_eqst	40
Coq.Lists.Streams.Streams.Stream_Properties.ForAll_Str_nth_tl	40
Coq.Lists.Streams.Streams.Stream_Properties.Co_Induction_ForAll.ForAll_coind	40	6.3.19	synth with cache (only 1: coinduction ltac:(EqSt_reflex); only 1: auto; only 1: auto).	0.801465988159	1957
Coq.Lists.Streams.Map.Str_nth_tl_map	40	2.0.4.0.3	synth with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.235514163971	246
Coq.Lists.Streams.Map.Str_nth_map	40	0.0.0.0.0.5	synth with cache (only 1: unfold Str_nth; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: intros s; only 1: apply IHn).	0.1231508255	122
Coq.Lists.Streams.Map.ForAll_map	40
Coq.Lists.Streams.Map.Exists_map	40
Coq.Lists.Streams.Zip.Str_nth_tl_zipWith	40	0.5.0.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: apply IHn).	0.0346949100494	21
Coq.Lists.Streams.Zip.Str_nth_zipWith	40	0.0.0.0.2.1	synth with cache (only 1: unfold Str_nth; only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: simpl in *; only 1: apply IHn).	0.0567870140076	35
Coq.Lists.List.Facts.nil_cons	40	12.1	synth with cache (only 1: intros a b; only 1: now Nat.nzsimpl).	0.385458946228	431
Coq.Lists.List.Facts.destruct_list	40
Coq.Lists.List.Facts.hd_error_tl_repr	40
Coq.Lists.List.Facts.hd_error_some_nil	40	0.0.0.0.4.0	synth with cache (only 1: unfold hd_error, tl; only 1: destruct l as [| x xs]; only 1: intros a r; only 1: firstorder  discriminate; only 1: intros; only 1: inversion 1).	0.0375099182129	18
Coq.Lists.List.Facts.length_zero_iff_nil	40	2.2.1.1.9	synth with cache (only 1: destruct l as [| x xs]; only 1: firstorder  discriminate; only 1: split; only 1: inversion 1; only 1: inversion 1).	1.14245700836	1100
Coq.Lists.List.Facts.hd_error_nil	40	2	synth with cache (only 1: split).	0.00734686851501	3
Coq.Lists.List.Facts.hd_error_cons	40	0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: reflexivity).	0.0116600990295	3
Coq.Lists.List.Facts.in_eq	40	6.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: now left).	0.0242989063263	20
Coq.Lists.List.Facts.in_cons	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.00813698768616	2
Coq.Lists.List.Facts.not_in_cons	40	12.0	synth with cache (only 1: simpl; only 1: intuition).	0.590314149857	402
Coq.Lists.List.Facts.in_nil	40	0.0	synth with cache (only 1: simpl; only 1: tauto).	0.00815486907959	2
Coq.Lists.List.Facts.in_split	40
Coq.Lists.List.Facts.in_inv	40	0.0.0	synth with cache (only 1: destruct 1; only 1: intuition; only 1: intuition).	0.0164308547974	3
Coq.Lists.List.Facts.in_dec	40
Coq.Lists.List.Facts.app_cons_not_nil	40
Coq.Lists.List.Facts.app_nil_l	40	0	synth with cache (only 1: auto).	0.00741195678711	1
Coq.Lists.List.Facts.app_nil_r	40	0.3.8.1.6	synth with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: apply f_equal; only 1: auto).	0.701254844666	1299
Coq.Lists.List.Facts.app_nil_end	40	1.0.0.1.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: firstorder  discriminate; only 1: simpl; only 1: f_equal; only 1: auto).	0.0207450389862	9
Coq.Lists.List.Facts.app_assoc	40	2.0.0.0.8.6	synth with cache (only 1: symmetry; only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	0.859807014465	890
Coq.Lists.List.Facts.app_assoc_reverse	40	1.0.0.0.0.2.0	synth with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.0522310733795	29
Coq.Lists.List.Facts.app_comm_cons	40	6	synth with cache (only 1: auto).	0.00978708267212	7
Coq.Lists.List.Facts.app_eq_nil	40	4.3.0.3.6	synth with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: intros; only 1: discriminate H).	0.648119926453	1013
Coq.Lists.List.Facts.app_eq_unit	40
Coq.Lists.List.Facts.app_inj_tail	40
Coq.Lists.List.Facts.app_length	40
Coq.Lists.List.Facts.in_app_or	40	1.1.1.0.8.12	synth with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	19.4564981461	36773
Coq.Lists.List.Facts.in_or_app	40	10.2.0.7.0.0.0	synth with cache (only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intro H1; only 1: intuition).	22.5943169594	31733
Coq.Lists.List.Facts.in_app_iff	40
Coq.Lists.List.Facts.app_inv_head	40
Coq.Lists.List.Facts.app_inv_tail	40
Coq.Lists.List.Elts.nth_in_or_default	40
Coq.Lists.List.Elts.nth_S_cons	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.00979208946228	2
Coq.Lists.List.Elts.nth_default_eq	40	2.3.0.3.0.0.0.2.3.1.0	synth with cache (only 1: intros n l d; only 1: revert n; only 1: induction l; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: intros [| n]; only 1: auto; only 1: simpl; only 1: destruct (IHl n); only 1: auto).	19.5608839989	26294
Coq.Lists.List.Elts.nth_In	40
Coq.Lists.List.Elts.In_nth	40
Coq.Lists.List.Elts.nth_overflow	40
Coq.Lists.List.Elts.nth_indep	40	0.0.0.0.6.0.0	synth with cache (only 1: induction l as [| a l IH]; only 1: easy; only 1: destruct n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	1.05999898911	752
Coq.Lists.List.Elts.app_nth1	40	0.0.0.0.7.0.0	synth with cache (only 1: induction l; only 1: easy; only 1: destruct n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	0.741604804993	622
Coq.Lists.List.Elts.app_nth2	40	0.1.0.1.1.1.2.3.0.0	synth with cache (only 1: induction l; only 1: inversion 1; only 1: auto with arith; only 1: auto with arith; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	4.92867207527	3430
Coq.Lists.List.Elts.nth_split	40
Coq.Lists.List.Elts.nth_error_In	40
Coq.Lists.List.Elts.In_nth_error	40
Coq.Lists.List.Elts.nth_error_None	40
Coq.Lists.List.Elts.nth_error_Some	40
Coq.Lists.List.Elts.nth_error_split	40
Coq.Lists.List.Elts.nth_error_app1	40	1.0.0.0.0.2.1.5.0	synth with cache (only 1: revert n; only 1: induction l; only 1: simpl; only 1: easy; only 1: destruct n; only 1: simpl; only 1: now auto with arith; only 1: simpl; only 1: auto with arith).	2.464594841	1165
Coq.Lists.List.Elts.nth_error_app2	40	0.0.0.1.3.0.1.1.0.0.1	synth with cache (only 1: revert l; only 1: induction n; only 1: intros [| a l] H; only 1: auto; only 1: simpl in *; only 1: now auto with arith; only 1: intros [| a l] H; only 1: auto; only 1: simpl in *; only 1: apply IHn; only 1: auto with arith).	2.67755699158	1449
Coq.Lists.List.Elts.nth_error_nth	40
Coq.Lists.List.Elts.nth_error_nth'	40	0.0.0.0.0.0.0.21	synth with cache (only 1: induction l; only 1: simpl in *; only 1: easy; only 1: destruct n; only 1: simpl; only 1: now auto with arith; only 1: simpl; only 1: now auto with arith).	8.79663395882	4964
Coq.Lists.List.Elts.remove_In	40
Coq.Lists.List.Elts.app_removelast_last	40
Coq.Lists.List.Elts.exists_last	40
Coq.Lists.List.Elts.removelast_app	40
Coq.Lists.List.Elts.count_occ_In	40
Coq.Lists.List.Elts.count_occ_not_In	40
Coq.Lists.List.Elts.count_occ_nil	40	6	synth with cache (only 1: intuition).	0.0153779983521	16
Coq.Lists.List.Elts.count_occ_inv_nil	40
Coq.Lists.List.Elts.count_occ_cons_eq	40	2.2.1.7	synth with cache (only 1: simpl; only 1: destruct eq_dec as [_| NEQ]; only 1: intuition; only 1: intuition).	0.317713975906	242
Coq.Lists.List.Elts.count_occ_cons_neq	40	0.1.0	synth with cache (only 1: intros H; only 1: simpl; only 1: now destruct (eq_dec x y)).	0.0183310508728	4
Coq.Lists.List.ListOps.rev_app_distr	40
Coq.Lists.List.ListOps.rev_unit	40	0.1.3.3.5.19	synth with cache (only 1: induction l; only 1: auto; only 1: intro y; only 1: simpl; only 1: rewrite (IHl y); only 1: trivial).	3.20281505585	6468
Coq.Lists.List.ListOps.rev_involutive	40
Coq.Lists.List.ListOps.in_rev	40
Coq.Lists.List.ListOps.rev_length	40
Coq.Lists.List.ListOps.rev_nth	40
Coq.Lists.List.ListOps.rev_append_rev	40
Coq.Lists.List.ListOps.rev_alt	40
Coq.Lists.List.ListOps.Reverse_Induction.rev_list_ind	40	9.2.24.4	synth with cache (only 1: intro y; only 1: induction l as [| a tail]; only 1: auto; only 1: auto).	6.17012786865	13043
Coq.Lists.List.ListOps.Reverse_Induction.rev_ind	40
Coq.Lists.List.ListOps.concat_nil	40	3	synth with cache (only 1: trivial).	0.00903916358948	4
Coq.Lists.List.ListOps.concat_cons	40	0	synth with cache (only 1: now f_equal).	0.0072238445282	1
Coq.Lists.List.ListOps.concat_app	40
Coq.Lists.List.ListOps.list_eq_dec	40	34	synth with cache (only 1: decide equality).	6.27418994904	9035
Coq.Lists.List.Map.map_cons	40	9	synth with cache (only 1: auto).	0.0122580528259	15
Coq.Lists.List.Map.in_map	40	3.11.0.2.3.1.1.0	synth with cache (only 1: induction l as [| x l]; only 1: intros a H; only 1: inversion_clear H; only 1: intros; only 1: simpl; only 1: firstorder; only 1: inversion_clear H; only 1: auto).	26.7832419872	31261
Coq.Lists.List.Map.in_map_iff	40	0.0.0	synth with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	0.105707883835	3
Coq.Lists.List.Map.map_length	40	3.1.0.2.1	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).	0.114583969116	93
Coq.Lists.List.Map.map_nth	40	2.0.0.18.2.0.0.3.0	synth with cache (only 1: induction l; only 1: destruct n; only 1: firstorder  (subst; auto); only 1: simpl; only 1: reflexivity; only 1: destruct n; only 1: auto; only 1: simpl; only 1: auto).	30.8356130123	43031
Coq.Lists.List.Map.map_nth_error	40
Coq.Lists.List.Map.map_app	40
Coq.Lists.List.Map.map_rev	40
Coq.Lists.List.Map.map_eq_nil	40	14.4	synth with cache (only 1: intros; only 1: now destruct l).	0.981649875641	1088
Coq.Lists.List.Map.count_occ_map	40
Coq.Lists.List.Map.in_flat_map	40
Coq.Lists.List.flat_map_concat_map	40	2.0.0.1.0	synth with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.0180299282074	8
Coq.Lists.List.concat_map	40	4.0.3.0.1.0.2.0	synth with cache (only 1: intros A B f l; only 1: induction l as [| x l IH]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite map_app; only 1: rewrite IH; only 1: auto).	1.99780702591	2133
Coq.Lists.List.map_id	40	1.5.0.2.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite IHl; only 1: reflexivity).	0.637569904327	465
Coq.Lists.List.map_map	40	2.0.3.1.0	synth with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.469310998917	200
Coq.Lists.List.map_ext_in	40
Coq.Lists.List.ext_in_map	40
Coq.Lists.List.map_ext_in_iff	40
Coq.Lists.List.map_ext	40	3.0.1.1.0.1.1	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto).	0.370556116104	291
Coq.Lists.List.Fold_Left_Recursor.fold_left_app	40	4.0.0.2.0	synth with cache (only 1: induction l; only 1: intros; only 1: auto; only 1: simpl; only 1: auto).	0.109981775284	105
Coq.Lists.List.fold_left_length	40
Coq.Lists.List.fold_right_app	40	0.1.0.1.2.0.0.6.0	synth with cache (only 1: intro H; only 1: induction l; only 1: simpl; only 1: firstorder  (subst; auto); only 1: intro y; only 1: intros; only 1: simpl; only 1: rewrite (IHl y); only 1: auto).	1.55405902863	1274
Coq.Lists.List.fold_left_rev_right	40
Coq.Lists.List.fold_symmetric	40
Coq.Lists.List.Bool.existsb_exists	40
Coq.Lists.List.Bool.existsb_nth	40
Coq.Lists.List.Bool.existsb_app	40
Coq.Lists.List.Bool.forallb_forall	40
Coq.Lists.List.Bool.forallb_app	40	1.0.2.0.1.3.1.2	synth with cache (only 1: induction l1; only 1: reflexivity; only 1: intro y; only 1: simpl; only 1: case (f a); only 1: simpl; only 1: solve [ auto ]; only 1: solve [ auto ]).	2.38871908188	2467
Coq.Lists.List.Bool.filter_In	40
Coq.Lists.List.Bool.filter_app	40
Coq.Lists.List.Bool.concat_filter_map	40
Coq.Lists.List.Bool.find_some	40	1.2.0.2.0.4	synth with cache (only 1: induction l as [| a l IH]; only 1: easy; only 1: simpl; only 1: case_eq (f a); only 1: intuition congruence; only 1: intuition congruence).	0.711293935776	281
Coq.Lists.List.Bool.find_none	40
Coq.Lists.List.Bool.partition_cons1	40	2.3.6.10.4.1	synth with cache (only 1: simpl; only 1: case (f a); only 1: intros; only 1: rewrite H; only 1: now f_equal; only 1: now f_equal).	10.8159189224	6958
Coq.Lists.List.Bool.partition_cons2	40	0.0	synth with cache (only 1: simpl; only 1: now intros -> ->).	0.0131750106812	2
Coq.Lists.List.Bool.partition_length	40
Coq.Lists.List.Bool.partition_inv_nil	40	7.5.5.0.0.4.0.5	synth with cache (only 1: split; only 1: induction l as [| a l' Hrec]; only 1: trivial; only 1: simpl; only 1: destruct (f a), (partition l') as (left, right); only 1: now intros [=<- <-]; only 1: now intros [=<- <-]; only 1: now intros ->).	15.9751229286	21293
Coq.Lists.List.Bool.elements_in_partition	40
Coq.Lists.List.Filtering.filter_map	40
Coq.Lists.List.Filtering.filter_ext_in	40
Coq.Lists.List.Filtering.ext_in_filter	40	32.0.0.0.5	synth with cache (only 1: induction l as [| a l IHl]; only 1: rewrite filter_map; only 1: intros [=] ? []; only 1: rewrite filter_map; only 1: apply ext_in_map).	27.5179541111	44717
Coq.Lists.List.Filtering.filter_ext_in_iff	40	0.1.1.1.13	synth with cache (only 1: split; only 1: rewrite filter_map; only 1: apply ext_in_map; only 1: rewrite filter_map; only 1: apply map_ext_in).	1.10564613342	906
Coq.Lists.List.Filtering.filter_ext	40	4.2.0	synth with cache (only 1: intros f g l H; only 1: apply filter_ext_in; only 1: auto).	0.0266020298004	14
Coq.Lists.List.ListPairs.in_split_l	40
Coq.Lists.List.ListPairs.in_split_r	40
Coq.Lists.List.ListPairs.split_nth	40
Coq.Lists.List.ListPairs.split_length_l	40	0.0.1.0.0.7.0	synth with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: destruct (split l); only 1: destruct a; only 1: simpl in *; only 1: auto).	0.651155948639	482
Coq.Lists.List.ListPairs.split_length_r	40	0.0.0.1.0.7.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: now subst; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).	0.478285074234	385
Coq.Lists.List.ListPairs.split_combine	40
Coq.Lists.List.ListPairs.combine_split	40
Coq.Lists.List.ListPairs.in_combine_l	40
Coq.Lists.List.ListPairs.in_combine_r	40
Coq.Lists.List.ListPairs.combine_length	40	6.0.0.0.4.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: trivial; only 1: destruct l'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto).	3.73866486549	2896
Coq.Lists.List.ListPairs.combine_nth	40
Coq.Lists.List.ListPairs.in_prod_aux	40	14.3.4	synth with cache (only 1: induction l; only 1: auto; only 1: firstorder  (subst; auto)).	1.3470249176	1710
Coq.Lists.List.ListPairs.in_prod	40
Coq.Lists.List.ListPairs.in_prod_iff	40
Coq.Lists.List.ListPairs.prod_length	40
Coq.Lists.List.length_order.lel_refl	40	26	synth with cache (only 1: left).	0.472733974457	665
Coq.Lists.List.length_order.lel_trans	40
Coq.Lists.List.length_order.lel_cons_cons	40	1.0.0	synth with cache (only 1: unfold lel; only 1: simpl in *; only 1: auto with arith).	0.0201740264893	4
Coq.Lists.List.length_order.lel_cons	40	0.0.0	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0144670009613	3
Coq.Lists.List.length_order.lel_tail	40	0.0.0	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0138409137726	3
Coq.Lists.List.length_order.lel_nil	40	24.2.15	synth with cache (only 1: destruct l' as [| y l']; only 1: trivial; only 1: easy).	9.60968804359	15989
Coq.Lists.List.SetIncl.incl_refl	40	0.4.0	synth with cache (only 1: induction l as [| x l]; only 1: easy; only 1: now f_equal).	0.0215659141541	7
Coq.Lists.List.SetIncl.incl_tl	40	6.5	synth with cache (only 1: intros a b l H; only 1: firstorder  (subst; auto)).	0.179282188416	63
Coq.Lists.List.SetIncl.incl_tran	40	0	synth with cache (only 1: auto with datatypes).	0.00950193405151	1
Coq.Lists.List.SetIncl.incl_appl	40	0	synth with cache (only 1: auto with datatypes).	0.00997281074524	1
Coq.Lists.List.SetIncl.incl_appr	40	0	synth with cache (only 1: auto with datatypes).	0.0105729103088	1
Coq.Lists.List.SetIncl.incl_cons	40	9.1	synth with cache (only 1: intros a b l H; only 1: firstorder  (subst; auto)).	0.0538949966431	63
Coq.Lists.List.SetIncl.incl_app	40	5.3.0.0.2.1	synth with cache (only 1: unfold incl; only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: auto; only 1: firstorder).	4.53757095337	3155
Coq.Lists.List.Cutting.firstn_nil	40	0.0.60	synth with cache (only 1: induction n as [| n IH]; only 1: trivial; only 1: easy).	0.635845899582	2063
Coq.Lists.List.Cutting.firstn_cons	40	0	synth with cache (only 1: now simpl).	0.00913095474243	1
Coq.Lists.List.Cutting.firstn_all	40	1.14.1.29	synth with cache (only 1: induction l; only 1: now simpl; only 1: simpl; only 1: now f_equal).	7.99781608582	14378
Coq.Lists.List.Cutting.firstn_all2	40
Coq.Lists.List.Cutting.firstn_O	40	1	synth with cache (only 1: now simpl).	0.00818085670471	2
Coq.Lists.List.Cutting.firstn_le_length	40	6.0.3.0.3.0	synth with cache (only 1: induction n as [| k iHk]; only 1: auto; only 1: destruct l as [| x xs]; only 1: now auto with arith; only 1: simpl; only 1: now auto with arith).	4.29626512527	3695
Coq.Lists.List.Cutting.firstn_length_le	40	1.0.3.0.1.1.0.2.4	synth with cache (only 1: induction l; only 1: destruct n; only 1: now simpl; only 1: now simpl; only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto with arith).	19.6708900928	14428
Coq.Lists.List.Cutting.firstn_app	40
Coq.Lists.List.Cutting.firstn_app_2	40
Coq.Lists.List.Cutting.firstn_firstn	40
Coq.Lists.List.Cutting.firstn_skipn_comm	40
Coq.Lists.List.Cutting.skipn_firstn_comm	40
Coq.Lists.List.Cutting.skipn_O	40	1.3.3	synth with cache (only 1: destruct l; only 1: now reflexivity; only 1: now simpl).	0.0158860683441	10
Coq.Lists.List.Cutting.skipn_nil	40	0.0.3.6	synth with cache (only 1: intros; only 1: induction n; only 1: reflexivity; only 1: easy).	0.0569260120392	62
Coq.Lists.List.Cutting.skipn_cons	40	0	synth with cache (only 1: now simpl).	0.00849294662476	1
Coq.Lists.List.Cutting.skipn_none	40	4.1.43	synth with cache (only 1: induction l as [| a tail]; only 1: easy; only 1: now simpl).	4.46642804146	10213
Coq.Lists.List.Cutting.skipn_all2	40	1.1.0.0.0.0.5.0.9	synth with cache (only 1: induction n as [| k iHk]; only 1: now induction l; only 1: destruct l as [| x xs]; only 1: simpl; only 1: now reflexivity; only 1: simpl; only 1: intro H; only 1: apply Peano.le_S_n in H; only 1: apply iHk, H).	3.19570398331	1656
Coq.Lists.List.Cutting.firstn_skipn	40	12.3.2.1.6.1.0	synth with cache (only 1: induction n as [| k iHk]; only 1: now simpl; only 1: destruct l as [| x xs]; only 1: simpl; only 1: now reflexivity; only 1: simpl; only 1: now f_equal).	6.47267699242	9833
Coq.Lists.List.Cutting.firstn_length	40	7.0.0.0.0.0.0.0.0.14	synth with cache (only 1: induction n as [| k iHk]; only 1: induction l as [| x xs Hrec]; only 1: now simpl; only 1: now simpl; only 1: simpl; only 1: destruct l as [| x xs]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto with arith).	16.2195980549	14757
Coq.Lists.List.Cutting.skipn_length	40	3.0.0.15.5.3	synth with cache (only 1: induction n; only 1: now induction l; only 1: induction l as [| a l' Hrec]; only 1: auto; only 1: simpl in *; only 1: auto).	4.6195230484	2921
Coq.Lists.List.Cutting.skipn_all	40	3.1.1.0	synth with cache (only 1: rewrite <- (firstn_all l)  at 1; only 1: rewrite <- (firstn_all l)  at 1; only 1: rewrite <- (firstn_all l)  at 1; only 1: now induction l).	0.266053199768	13
Coq.Lists.List.Cutting.skipn_app	40	0.0.0.3.0.0.0.1.3	synth with cache (only 1: induction n as [| k iHk]; only 1: intros l1 l2; only 1: now simpl; only 1: intros l1 l2; only 1: destruct l1 as [| x xs]; only 1: auto; only 1: rewrite <- app_comm_cons; only 1: simpl; only 1: apply iHk).	1.43490505219	845
Coq.Lists.List.Cutting.firstn_skipn_rev	40
Coq.Lists.List.Cutting.firstn_rev	40
Coq.Lists.List.Cutting.skipn_rev	40
Coq.Lists.List.Cutting.removelast_firstn	40
Coq.Lists.List.Cutting.firstn_removelast	40
Coq.Lists.List.Combining.combine_nil	40	2.0.0.0.3	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal).	0.0324699878693	20
Coq.Lists.List.Combining.combine_firstn_l	40	0.0.0.1.0.0.1.5.5.0.4	synth with cache (only 1: induction l; only 1: intros l; only 1: auto; only 1: destruct l'; only 1: simpl; only 1: apply length_zero_iff_nil; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	24.4832699299	24982
Coq.Lists.List.Combining.combine_firstn_r	40	0.1.0.0.0.0.1.1.1.3.0	synth with cache (only 1: induction l as [| x l IHl]; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: reflexivity; only 1: intros l'; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: simpl; only 1: specialize IHl with (l' := l'); only 1: rewrite <- IHl; only 1: reflexivity).	4.82316994667	4433
Coq.Lists.List.Combining.combine_firstn	40
Coq.Lists.List.Add.Add_app	40
Coq.Lists.List.Add.Add_split	40
Coq.Lists.List.Add.Add_in	40	3.5.0.6	synth with cache (only 1: induction 1; only 1: firstorder  (subst; auto); only 1: simpl; only 1: firstorder).	2.42961001396	1452
Coq.Lists.List.Add.Add_length	40	2.3.2.3	synth with cache (only 1: induction 1; only 1: now f_equal; only 1: simpl; only 1: auto).	0.475236177444	228
Coq.Lists.List.Add.Add_inv	40
Coq.Lists.List.Add.incl_Add_inv	40
Coq.Lists.List.ReDun.NoDup_Add	40
Coq.Lists.List.ReDun.NoDup_remove	40
Coq.Lists.List.ReDun.NoDup_remove_1	40
Coq.Lists.List.ReDun.NoDup_remove_2	40	0.0	synth with cache (only 1: apply NoDup_Add; only 1: apply Add_app).	0.0113949775696	2
Coq.Lists.List.ReDun.NoDup_cons_iff	40	1.2.2.1	synth with cache (only 1: split; only 1: inversion_clear 1; only 1: intuition; only 1: now constructor).	0.0808110237122	10
Coq.Lists.List.ReDun.nodup_fixed_point	40
Coq.Lists.List.ReDun.nodup_In	40
Coq.Lists.List.ReDun.NoDup_nodup	40
Coq.Lists.List.ReDun.nodup_inv	40
Coq.Lists.List.ReDun.NoDup_count_occ	40
Coq.Lists.List.ReDun.NoDup_count_occ'	40
Coq.Lists.List.ReDun.NoDup_nth_error	40
Coq.Lists.List.ReDun.NoDup_nth	40
Coq.Lists.List.ReDun.NoDup_incl_length	40
Coq.Lists.List.ReDun.NoDup_length_incl	40
Coq.Lists.List.NoDup_map_inv	40
Coq.Lists.List.NatSeq.seq_length	40	1.4.1.1.11	synth with cache (only 1: intro n; only 1: induction n as [| n IH]; only 1: easy; only 1: simpl; only 1: auto with arith).	0.710003137589	1355
Coq.Lists.List.NatSeq.seq_nth	40
Coq.Lists.List.NatSeq.seq_shift	40	5.11.1.1.0.19.58	synth with cache (only 1: intro l'; only 1: elim l'; only 1: auto; only 1: simpl; only 1: intros; only 1: f_equal; only 1: auto).	16.0455648899	46382
Coq.Lists.List.NatSeq.in_seq	40
Coq.Lists.List.NatSeq.seq_NoDup	40
Coq.Lists.List.NatSeq.seq_app	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_exists	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_nil	40	2.0	synth with cache (only 1: firstorder; only 1: inversion_clear H).	0.0181050300598	4
Coq.Lists.List.Exists_Forall.One_predicate.Exists_cons	40	0.0.21.2	synth with cache (only 1: firstorder; only 1: inversion_clear H; only 1: auto; only 1: auto).	1.60547018051	2638
Coq.Lists.List.Exists_Forall.One_predicate.Exists_dec	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_forall	40	0.0.4.2.0.0.0.0.0	synth with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: firstorder; only 1: induction l; only 1: firstorder; only 1: firstorder).	1.67992305756	1178
Coq.Lists.List.Exists_Forall.One_predicate.Forall_inv	40	0.36	synth with cache (only 1: inversion 1; only 1: auto).	0.836009025574	2596
Coq.Lists.List.Exists_Forall.One_predicate.Forall_rect	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_dec	40
Coq.Lists.List.Exists_Forall.Forall_inv_tail	40	0.3.1	synth with cache (only 1: intros; only 1: inversion H; only 1: trivial).	0.021576166153	27
Coq.Lists.List.Exists_Forall.Exists_impl	40	8.7.20.4.10	synth with cache (only 1: intros f g H l; only 1: induction 1; only 1: constructor; only 1: auto; only 1: now apply Exists_cons_tl).	27.8237259388	49918
Coq.Lists.List.Exists_Forall.Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall.Exists_Forall_neg	40
Coq.Lists.List.Exists_Forall.neg_Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall.Forall_Exists_dec	40	2.2.4.1.1.0.3.0.0.1.0.1	synth with cache (only 1: intro Pdec; only 1: induction l as [| a l' Hrec]; only 1: left; only 1: left; only 1: destruct Hrec as [Hl'| Hl']; only 1: destruct (Pdec a) as [Ha| Ha]; only 1: left; only 1: now apply Forall_cons; only 1: right; only 1: now apply Exists_cons_hd; only 1: right; only 1: now apply Exists_cons_tl).	29.1780269146	40363
Coq.Lists.List.Exists_Forall.Forall_impl	40	1.1.17.1.3.1.6	synth with cache (only 1: intros x H2; only 1: intros Pdec l; only 1: induction 1; only 1: left; only 1: constructor; only 1: auto; only 1: auto).	25.3255159855	51290
Coq.Lists.List.Forall2.Forall2_refl	40	0	synth with cache (only 1: trivial).	0.00773191452026	1
Coq.Lists.List.Forall2.Forall2_app_inv_l	40
Coq.Lists.List.Forall2.Forall2_app_inv_r	40
Coq.Lists.List.Forall2.Forall2_app	40
Coq.Lists.List.ForallPairs.ForallOrdPairs_In	40
Coq.Lists.List.ForallPairs.ForallPairs_ForallOrdPairs	40
Coq.Lists.List.ForallPairs.ForallOrdPairs_ForallPairs	40
Coq.Lists.List.Repeat.repeat_length	40	5.1.0.1.13	synth with cache (only 1: induction n as [| n IH]; only 1: simpl in *; only 1: now simpl; only 1: simpl in *; only 1: auto).	0.500597000122	456
Coq.Lists.List.Repeat.repeat_spec	40	3.0.0.2.1.5.0.3.43	synth with cache (only 1: revert n; only 1: induction n as [| k Hrec]; only 1: simpl; only 1: intro HF; only 1: destruct HF; only 1: destruct 1; only 1: subst; only 1: intuition; only 1: auto).	1.58357715607	4937
Coq.Lists.SetoidPermutation.Permutation.Equivalence_instance_0	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons	40	5.1	synth with cache (only 1: intros x x' Hxx' l l' Hll'; only 1: auto).	0.0214779376984	8
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_head	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_tail	40	0.1.1.0.1.7	synth with cache (only 1: induction 1; only 1: easy; only 1: now apply permA_skip; only 1: rewrite <- !app_comm_cons; only 1: now apply permA_swap; only 1: do 2 (etransitivity; try eassumption)).	1.26581406593	572
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_append	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_comm	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_app	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_middle	40	0	synth with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).	0.0242857933044	1
Coq.Lists.SetoidPermutation.Permutation.PermutationA_equivlistA	40
Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_PermutationA	40
Coq.Lists.SetoidPermutation.Permutation.Permutation_eqlistA_commute	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_decompose	40
Coq.Lists.SetoidPermutation.Permutation.Permutation_PermutationA	40	7.0.8.1.8	synth with cache (only 1: induction 1; only 1: intuition; only 1: intuition; only 1: eauto; only 1: eauto).	1.41448688507	1597
Coq.Lists.SetoidPermutation.Permutation.eqlistA_PermutationA	40	5.1.1	synth with cache (only 1: induction 1; only 1: intuition; only 1: auto).	0.0675041675568	10
Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_decompose	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_preserves_NoDupA	40
Coq.Lists.StreamMemo.MemoFunction.memo_get_correct	40
Coq.Lists.StreamMemo.MemoFunction.imemo_get_correct	40
Coq.Lists.StreamMemo.DependentMemoFunction.dmemo_get_correct	40
Coq.Lists.StreamMemo.DependentMemoFunction.dimemo_get_correct	40
Coq.Lists.SetoidList.Type_with_equality.InA_altdef	40	1.1.3.1.5.1.1.0.15	synth with cache (only 1: intros a r; only 1: split; only 1: induction 1; only 1: firstorder; only 1: auto; only 1: induction 1; only 1: constructor; only 1: tauto; only 1: auto).	18.3309960365	22605
Coq.Lists.SetoidList.Type_with_equality.InA_cons	40	0.0.1.0.0.4.2	synth with cache (only 1: split; only 1: inversion 1; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).	0.294987201691	213
Coq.Lists.SetoidList.Type_with_equality.InA_nil	40	1.0	synth with cache (only 1: intuition; only 1: invlist InA).	0.0199010372162	3
Coq.Lists.SetoidList.Type_with_equality.InA_alt	40	0.0.0.0.0.1.1.3	synth with cache (only 1: induction l; only 1: firstorder; only 1: simpl; only 1: invlist InA; only 1: firstorder  (subst; auto); only 1: invlist InA; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	1.05004501343	511
Coq.Lists.SetoidList.Type_with_equality.NoDupA_altdef	40
Coq.Lists.SetoidList.Type_with_equality.incl_nil	40	7	synth with cache (only 1: now simpl).	0.0196568965912	13
Coq.Lists.SetoidList.Type_with_equality.eqlistA_altdef	40	0.2.3.9.3.3.7	synth with cache (only 1: split; only 1: induction 1; only 1: apply Forall2_nil; only 1: auto; only 1: induction 1; only 1: trivial; only 1: auto).	3.38612794876	6504
Coq.Lists.SetoidList.Type_with_equality.equivlist_equiv	40	6.0	synth with cache (only 1: compute; only 1: firstorder).	0.0232930183411	13
Coq.Lists.SetoidList.Type_with_equality.eqlistA_equiv	40
Coq.Lists.SetoidList.Type_with_equality.eqlistA_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.InA_compat	40
Coq.Lists.SetoidList.Type_with_equality.InA_eqA	40	1.0.12	synth with cache (only 1: intros x x' H; only 1: rewrite 2!InA_alt; only 1: firstorder).	0.795407056808	305
Coq.Lists.SetoidList.Type_with_equality.In_InA	40	0.3.1	synth with cache (only 1: intros; only 1: rewrite InA_altdef, Exists_exists; only 1: firstorder).	0.0195109844208	7
Coq.Lists.SetoidList.Type_with_equality.InA_split	40
Coq.Lists.SetoidList.Type_with_equality.InA_app	40
Coq.Lists.SetoidList.Type_with_equality.InA_app_iff	40
Coq.Lists.SetoidList.Type_with_equality.InA_rev	40
Coq.Lists.SetoidList.Type_with_equality.InA_singleton	40	5.3.18	synth with cache (only 1: intuition; only 1: invlist InA; only 1: intuition).	1.15299987793	1002
Coq.Lists.SetoidList.Type_with_equality.InA_double_head	40	0.7	synth with cache (only 1: rewrite 2!InA_alt; only 1: firstorder).	0.0804948806763	9
Coq.Lists.SetoidList.Type_with_equality.InA_permute_heads	40	0.0	synth with cache (only 1: rewrite !InA_cons; only 1: tauto).	0.0423221588135	2
Coq.Lists.SetoidList.Type_with_equality.InA_app_idem	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_app	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_rev	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_split	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_swap	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_singleton	40	0.0.2.1	synth with cache (only 1: constructor; only 1: intro; only 1: inv; only 1: auto).	0.0189609527588	7
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_proper	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_proper	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_nil	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_nil_eq	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_double_head	40	1.0.4.0	synth with cache (only 1: red; only 1: intros; only 1: rewrite !InA_cons; only 1: tauto).	0.0369970798492	9
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_permute_heads	40	1.2.1.0	synth with cache (only 1: intro; only 1: rewrite 2!InA_cons; only 1: rewrite 2!InA_cons; only 1: tauto).	0.056606054306	8
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_idem	40	0.0.0.0.2.4	synth with cache (only 1: red; only 1: split; only 1: rewrite InA_app_iff; only 1: tauto; only 1: rewrite InA_app_iff; only 1: tauto).	0.136723995209	53
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_NoDupA_split	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_eqlistA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.ForallOrdPairs_inclA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_commutes_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_equivlistA_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_add_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_commutes	40	4.1.0.2.1.1.0.0.0.0.6	synth with cache (only 1: induction s1; only 1: simpl; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: apply IHs1; only 1: auto).	2.00487613678	2189
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_add	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_eqlistA2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_commutes_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_equivlistA_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_add_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_commutes2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_equivlistA2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_add2	40
Coq.Lists.SetoidList.Type_with_equality.Remove.InA_dec	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_filter	40	3.4.7.5.17.4.8	synth with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: destruct IHl; only 1: destruct (eqA_dec x a); only 1: auto; only 1: auto).	24.0011558533	37666
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_InA	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_NoDupA	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.InfA_ltA	40	2.2.5.9.2.50.1.1	synth with cache (only 1: intros x; only 1: intuition; only 1: destruct H0; only 1: intuition; only 1: right; only 1: transitivity y; only 1: intuition; only 1: intuition).	10.8404550552	24808
Coq.Lists.SetoidList.Type_with_equality.InfA_compat	40
Coq.Lists.SetoidList.Type_with_equality.InfA_eqA	40
Coq.Lists.SetoidList.Type_with_equality.SortA_InfA_InA	40
Coq.Lists.SetoidList.Type_with_equality.In_InfA	40	11.0.0.0	synth with cache (only 1: simple induction l; only 1: intros; only 1: intuition; only 1: intuition).	9.35166311264	2244
Coq.Lists.SetoidList.Type_with_equality.InA_InfA	40	2.1.0.0.0.0	synth with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intros; only 1: constructor; only 1: eauto).	0.0434949398041	11
Coq.Lists.SetoidList.Type_with_equality.InfA_alt	40
Coq.Lists.SetoidList.Type_with_equality.InfA_app	40
Coq.Lists.SetoidList.Type_with_equality.SortA_app	40
Coq.Lists.SetoidList.Type_with_equality.SortA_NoDupA	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_length	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.app_eqlistA_compat	40	0.0.4.3.1.11	synth with cache (only 1: induction 1; only 1: simpl in *; only 1: congruence; only 1: constructor; only 1: congruence; only 1: auto).	7.79162788391	1247
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_app	40	0.0.3.0.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: congruence; only 1: simpl; only 1: auto).	0.0530738830566	16
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev_app	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.rev_eqlistA_compat	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev	40	23.0	synth with cache (only 1: intros; only 1: now rewrite H).	2.82542896271	2341
Coq.Lists.SetoidList.Type_with_equality.EqlistA.SortA_equivlistA_eqlistA	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_sort	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_InA	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_split	40
Coq.Lists.SetoidList.Find.findA_NoDupA	40
Coq.NArith.BinNat.N.eq_dec	40	0.0.0.12.1.5	synth with cache (only 1: intros A eq_dec; only 1: decide equality; only 1: destruct p; only 1: decide equality; only 1: decide equality; only 1: decide equality).	1.78495693207	2042
Coq.NArith.BinNat.N.discr	40
Coq.NArith.BinNat.N.peano_rect_base	40	2	synth with cache (only 1: auto).	0.014280796051	3
Coq.NArith.BinNat.N.peano_rect_succ	40
Coq.NArith.BinNat.N.peano_rec_base	40	0	synth with cache (only 1: reflexivity).	0.0120840072632	1
Coq.NArith.BinNat.N.peano_rec_succ	40	0.1.1.143	synth with cache (only 1: induction n as [| n IH]; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).	1.88482904434	17740
Coq.NArith.BinNat.N.bi_induction	40
Coq.NArith.BinNat.N.recursion_wd	40
Coq.NArith.BinNat.N.recursion_0	40	0	synth with cache (only 1: trivial).	0.0139439105988	1
Coq.NArith.BinNat.N.recursion_succ	40
Coq.NArith.BinNat.N.one_succ	40	0	synth with cache (only 1: trivial).	0.0135200023651	1
Coq.NArith.BinNat.N.two_succ	40	0	synth with cache (only 1: reflexivity).	0.0127151012421	1
Coq.NArith.BinNat.N.pred_0	40	0	synth with cache (only 1: reflexivity).	0.0119431018829	1
Coq.NArith.BinNat.N.pos_pred_spec	40	1.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: reflexivity).	0.031525850296	8
Coq.NArith.BinNat.N.succ_pos_spec	40	0.0.1	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: reflexivity).	0.0213170051575	4
Coq.NArith.BinNat.N.pos_pred_succ	40	0.0.0.0.0.0.0.0.0.0.3.1.0.0.1.1	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	7.44073200226	6545
Coq.NArith.BinNat.N.succ_pos_pred	40	0.1.0.0.0.0.0.2.1.0.0.0.1	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: reflexivity).	5.45586395264	3822
Coq.NArith.BinNat.N.pred_succ	40	2.0.3	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Pos.pred_N_succ).	0.0346751213074	13
Coq.NArith.BinNat.N.pred_sub	40	0.1.0.3	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now destruct p).	0.0273089408875	8
Coq.NArith.BinNat.N.succ_0_discr	40	0	synth with cache (only 1: now destruct n).	0.0267131328583	1
Coq.NArith.BinNat.N.add_0_l	40	0.0.10	synth with cache (only 1: induction n; only 1: trivial; only 1: trivial).	0.0394930839539	47
Coq.NArith.BinNat.N.add_succ_l	40
Coq.NArith.BinNat.N.sub_0_r	40	2.1.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: auto).	0.0202329158783	6
Coq.NArith.BinNat.N.sub_succ_r	40
Coq.NArith.BinNat.N.mul_0_l	40	0	synth with cache (only 1: trivial).	0.0123670101166	1
Coq.NArith.BinNat.N.mul_succ_l	40
Coq.NArith.BinNat.N.eqb_eq	40
Coq.NArith.BinNat.N.ltb_lt	40	6.12.11.4	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: intros; only 1: destr_bool).	25.8921759129	20216
Coq.NArith.BinNat.N.leb_le	40
Coq.NArith.BinNat.N.compare_eq_iff	40
Coq.NArith.BinNat.N.compare_lt_iff	40	0.1.1.0.2	synth with cache (only 1: unfold ltb, lt; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	0.552494049072	201
Coq.NArith.BinNat.N.compare_le_iff	40	2	synth with cache (only 1: reflexivity).	0.462041854858	89
Coq.NArith.BinNat.N.compare_antisym	40
Coq.NArith.BinNat.N.min_l	40
Coq.NArith.BinNat.N.min_r	40
Coq.NArith.BinNat.N.max_l	40
Coq.NArith.BinNat.N.max_r	40	0.1.0.0.0.0	synth with cache (only 1: unfold max, le; only 1: rewrite compare_antisym; only 1: case compare_spec; only 1: trivial; only 1: now destruct 2; only 1: trivial).	0.0319530963898	7
Coq.NArith.BinNat.N.lt_succ_r	40
Coq.NArith.BinNat.N.double_spec	40	11.0	synth with cache (only 1: rewrite two_succ; only 1: trivial).	1.14443397522	204
Coq.NArith.BinNat.N.succ_double_spec	40	1.1.0.5.0.0.1.0.7.0	synth with cache (only 1: rewrite two_succ; only 1: nzinduct n; only 1: simpl; only 1: trivial; only 1: intro n; only 1: simpl; only 1: nzsimpl; only 1: split; only 1: now destruct n; only 1: now destruct n).	24.3120570183	6572
Coq.NArith.BinNat.N.double_add	40	1.0.0.0.0.1.2.9	synth with cache (only 1: destruct n, m; only 1: nzsimpl; only 1: tauto; only 1: unfold succ, add; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l; only 1: unfold succ, add; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l; only 1: reflexivity).	12.1951100826	3027
Coq.NArith.BinNat.N.succ_double_add	40	0	synth with cache (only 1: now destruct n, m).	0.0185530185699	1
Coq.NArith.BinNat.N.double_mul	40	0.0.0.0.0.0.1.11	synth with cache (only 1: destruct n, m; only 1: reflexivity; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.692348957062	245
Coq.NArith.BinNat.N.succ_double_mul	40	2.1.0.8.0.0.0.2	synth with cache (only 1: destruct n, m; only 1: now nzsimpl; only 1: simpl; only 1: trivial; only 1: now rewrite add_0_l; only 1: simpl; only 1: rewrite Pos.add_comm; only 1: f_equal).	9.01263594627	7374
Coq.NArith.BinNat.N.div2_double	40	0.0.0.1	synth with cache (only 1: destruct n; only 1: tauto; only 1: simpl; only 1: trivial).	0.0263118743896	5
Coq.NArith.BinNat.N.div2_succ_double	40	0	synth with cache (only 1: now destruct n).	0.0156350135803	1
Coq.NArith.BinNat.N.double_inj	40
Coq.NArith.BinNat.N.succ_double_inj	40
Coq.NArith.BinNat.N.succ_double_lt	40
Coq.NArith.BinNat.N.double_lt_mono	40	3.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: easy; only 1: easy; only 1: easy; only 1: unfold lt in *; only 1: simpl in *; only 1: trivial).	0.0344798564911	10
Coq.NArith.BinNat.N.double_le_mono	40	0.0.0.0.1.0	synth with cache (only 1: intro H; only 1: destruct n as [| n], m as [| m]; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.0340578556061	7
Coq.NArith.BinNat.N.succ_double_lt_mono	40	3.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: easy; only 1: easy; only 1: easy; only 1: unfold lt in *; only 1: simpl in *; only 1: trivial).	0.0368640422821	10
Coq.NArith.BinNat.N.succ_double_le_mono	40
Coq.NArith.BinNat.N.compare_0_r	40	4.0.5	synth with cache (only 1: rewrite compare_lt_iff; only 1: apply le_ngt; only 1: apply le_0_l).	0.828487873077	310
Coq.NArith.BinNat.N.pow_0_r	40	10	synth with cache (only 1: reflexivity).	0.0328080654144	24
Coq.NArith.BinNat.N.pow_succ_r	40
Coq.NArith.BinNat.N.pow_neg_r	40	6.5	synth with cache (only 1: intro H; only 1: false_hyp H nlt_0_r).	0.0601868629456	67
Coq.NArith.BinNat.N.square_spec	40
Coq.NArith.BinNat.N.size_log2	40
Coq.NArith.BinNat.N.size_gt	40
Coq.NArith.BinNat.N.size_le	40
Coq.NArith.BinNat.N.log2_spec	40
Coq.NArith.BinNat.N.log2_nonpos	40	1.1.3.2.0.0.2	synth with cache (only 1: intro H; only 1: destruct n as [| [n| n| ]]; only 1: trivial; only 1: easy'; only 1: easy; only 1: rewrite one_succ; only 1: reflexivity).	2.03953409195	1992
Coq.NArith.BinNat.N.even_spec	40
Coq.NArith.BinNat.N.odd_spec	40
Coq.NArith.BinNat.N.pos_div_eucl_spec	40
Coq.NArith.BinNat.N.div_eucl_spec	40
Coq.NArith.BinNat.N.div_mod'	40
Coq.NArith.BinNat.N.div_mod	40	0.0.0	synth with cache (only 1: generalize (div_eucl_spec a b); only 1: unfold div, modulo; only 1: now destruct div_eucl).	0.0260529518127	3
Coq.NArith.BinNat.N.pos_div_eucl_remainder	40
Coq.NArith.BinNat.N.mod_lt	40
Coq.NArith.BinNat.N.mod_bound_pos	40
Coq.NArith.BinNat.N.sqrtrem_sqrt	40
Coq.NArith.BinNat.N.sqrtrem_spec	40
Coq.NArith.BinNat.N.sqrt_spec	40
Coq.NArith.BinNat.N.sqrt_neg	40	4.3	synth with cache (only 1: intro H; only 1: false_hyp H nlt_0_r).	0.1750831604	131
Coq.NArith.BinNat.N.ggcd_gcd	40	2.6.3.2.1.1.1.6	synth with cache (only 1: destruct a, b; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: generalize (Pos.sqrtrem_spec p); only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: easy).	6.49787592888	7696
Coq.NArith.BinNat.N.ggcd_correct_divisors	40
Coq.NArith.BinNat.N.gcd_divide_l	40
Coq.NArith.BinNat.N.gcd_divide_r	40
Coq.NArith.BinNat.N.gcd_greatest	40
Coq.NArith.BinNat.N.gcd_nonneg	40	14.0.0.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: apply le_0_l).	5.56958508492	3946
Coq.NArith.BinNat.N.testbit_even_0	40	3.0.3.115	synth with cache (only 1: destruct a as [| a]; only 1: nzsimpl'; only 1: tauto; only 1: reflexivity).	17.0338680744	36974
Coq.NArith.BinNat.N.testbit_odd_0	40	0	synth with cache (only 1: now destruct a).	0.0145900249481	1
Coq.NArith.BinNat.N.testbit_succ_r_div2	40
Coq.NArith.BinNat.N.testbit_odd_succ	40
Coq.NArith.BinNat.N.testbit_even_succ	40	0.0.0.1	synth with cache (only 1: intros H; only 1: rewrite testbit_succ_r_div2 by trivial; only 1: f_equal; only 1: now destruct a).	0.0313730239868	5
Coq.NArith.BinNat.N.testbit_neg_r	40	0.22	synth with cache (only 1: unfold ltb, lt; only 1: now destruct n).	0.574352025986	503
Coq.NArith.BinNat.N.shiftr_succ_r	40
Coq.NArith.BinNat.N.shiftl_succ_r	40
Coq.NArith.BinNat.N.shiftr_spec	40
Coq.NArith.BinNat.N.shiftl_spec_high	40
Coq.NArith.BinNat.N.shiftl_spec_low	40
Coq.NArith.BinNat.N.div2_spec	40	0.1	synth with cache (only 1: simpl; only 1: trivial).	0.0180289745331	3
Coq.NArith.BinNat.N.pos_lxor_spec	40
Coq.NArith.BinNat.N.lxor_spec	40
Coq.NArith.BinNat.N.pos_lor_spec	40
Coq.NArith.BinNat.N.lor_spec	40
Coq.NArith.BinNat.N.pos_land_spec	40
Coq.NArith.BinNat.N.land_spec	40
Coq.NArith.BinNat.N.pos_ldiff_spec	40
Coq.NArith.BinNat.N.ldiff_spec	40
Coq.NArith.BinNat.N.gt_lt_iff	40
Coq.NArith.BinNat.N.gt_lt	40	1.0	synth with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.90434384346	184
Coq.NArith.BinNat.N.lt_gt	40	0	synth with cache (only 1: apply gt_lt_iff).	0.0168840885162	1
Coq.NArith.BinNat.N.ge_le_iff	40
Coq.NArith.BinNat.N.ge_le	40	1.0	synth with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.819643974304	112
Coq.NArith.BinNat.N.le_ge	40	0	synth with cache (only 1: apply ge_le_iff).	0.0137300491333	1
Coq.NArith.BinNat.N.pos_pred_shiftl_low	40
Coq.NArith.BinNat.N.pos_pred_shiftl_high	40
Coq.NArith.BinNat.N.pred_div2_up	40	2.1.0.1.0.17	synth with cache (only 1: induction p as [p IH| p IH| ]; only 1: simpl; only 1: apply Pos.pred_N_succ; only 1: now destruct p; only 1: rewrite div2_spec, shiftr_div_pow2; only 1: now nzsimpl).	3.21913290024	1155
Coq.NArith.Ndec.Peqb_complete	40	2.2	synth with cache (only 1: rewrite Pos.eqb_eq; only 1: trivial).	0.0441291332245	16
Coq.NArith.Ndec.Peqb_Pcompare	40	0.3	synth with cache (only 1: rewrite ?Pos.compare_eq_iff; only 1: now apply Pos.eqb_eq).	0.0387370586395	5
Coq.NArith.Ndec.Pcompare_Peqb	40	0	synth with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).	0.0326750278473	1
Coq.NArith.Ndec.Neqb_Ncompare	40	6.71	synth with cache (only 1: fix odd_spec 1; only 1: easy').	11.2901749611	17452
Coq.NArith.Ndec.Ncompare_Neqb	40	0	synth with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).	0.030130147934	1
Coq.NArith.Ndec.Neqb_complete	40	0.8.18	synth with cache (only 1: intros EQ; only 1: apply N.eqb_eq in EQ; only 1: now subst).	1.36997890472	1254
Coq.NArith.Ndec.Nxor_eq_true	40
Coq.NArith.Ndec.Nxor_eq_false	40
Coq.NArith.Ndec.Nodd_not_double	40
Coq.NArith.Ndec.Nnot_div2_not_double	40
Coq.NArith.Ndec.Neven_not_double_plus_one	40
Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	40
Coq.NArith.Ndec.Nbit0_neq	40
Coq.NArith.Ndec.Ndiv2_eq	40	2.1.1.0	synth with cache (only 1: intros H; only 1: eqb2eq; only 1: apply Nbit_faithful; only 1: now subst).	0.0345160961151	8
Coq.NArith.Ndec.Ndiv2_neq	40	0.3.1.0	synth with cache (only 1: intros H; only 1: eqb2eq; only 1: contradict H; only 1: now subst).	0.048935174942	8
Coq.NArith.Ndec.Ndiv2_bit_eq	40
Coq.NArith.Ndec.Ndiv2_bit_neq	40	0.3.1.1	synth with cache (only 1: eqb2eq; only 1: intros H H'; only 1: contradict H; only 1: now rewrite (N.div2_odd a), (N.div2_odd a'), H, H').	0.589628219604	46
Coq.NArith.Ndec.Nneq_elim	40
Coq.NArith.Ndec.Ndouble_or_double_plus_un	40
Coq.NArith.Ndec.Nleb_alt	40
Coq.NArith.Ndec.Nleb_Nle	40
Coq.NArith.Ndec.Nleb_refl	40	0	synth with cache (only 1: now rewrite Nleb_alt, N.leb_le).	0.021467924118	1
Coq.NArith.Ndec.Nleb_antisym	40	8.1.2	synth with cache (only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: N.order).	0.877382993698	222
Coq.NArith.Ndec.Nleb_trans	40	2.0	synth with cache (only 1: rewrite !Nleb_Nle; only 1: intuition N.order).	0.0518929958344	4
Coq.NArith.Ndec.Nleb_ltb_trans	40
Coq.NArith.Ndec.Nltb_leb_trans	40	5.12.14.0.1	synth with cache (only 1: rewrite !Nleb_Nle; only 1: unfold Nleb; only 1: rewrite <- ?negb_true_iff, ?N.negb_even, ?N.odd_spec, ?N.even_spec; only 1: fix odd_spec 1; only 1: assumption).	38.1348230839	41369
Coq.NArith.Ndec.Nltb_trans	40
Coq.NArith.Ndec.Nltb_leb_weak	40	4.12.38	synth with cache (only 1: rewrite <- ?negb_true_iff, ?Nat.negb_even, ?Nat.odd_spec, ?Nat.even_spec; only 1: fix odd_spec 1; only 1: auto).	16.0154461861	28183
Coq.NArith.Ndec.Nleb_double_mono	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono	40
Coq.NArith.Ndec.Nleb_double_mono_conv	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40	3.1.0.3.1.0	synth with cache (only 1: unfold Nleb; only 1: rewrite !N2Nat.inj_succ_double; only 1: intro; only 1: apply leb_correct; only 1: apply (mult_S_le_reg_l 1); only 1: now apply leb_complete).	1.20125579834	495
Coq.NArith.Ndec.Nltb_double_mono	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono	40
Coq.NArith.Ndec.Nltb_double_mono_conv	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Gt_Nltb	40	0	synth with cache (only 1: now rewrite N.compare_nle_iff, <- Nleb_Nle, not_true_iff_false).	0.036171913147	1
Coq.NArith.Ndec.Ncompare_Lt_Nltb	40
Coq.NArith.Ndec.Nmin_le_1	40	3.0	synth with cache (only 1: rewrite !Nleb_Nle; only 1: N.solve_min).	0.0372939109802	5
Coq.NArith.Ndec.Nmin_le_2	40	4.0	synth with cache (only 1: rewrite Nleb_Nle; only 1: N.solve_min).	0.0371499061584	6
Coq.NArith.Ndec.Nmin_le_3	40	14.0.0	synth with cache (only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: N.solve_min).	1.40440678596	832
Coq.NArith.Ndec.Nmin_le_4	40	14.0	synth with cache (only 1: rewrite !Nleb_Nle; only 1: N.solve_min).	1.67223000526	811
Coq.NArith.Ndec.Nmin_le_5	40
Coq.NArith.Ndec.Nmin_lt_3	40
Coq.NArith.Ndec.Nmin_lt_4	40	0.0.1	synth with cache (only 1: rewrite <- !not_true_iff_false, !Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).	0.0613038539886	4
Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40
Coq.NArith.Ndist.Nplength_infty	40	42.9	synth with cache (only 1: intros n m; only 1: now destruct n).	8.32023286819	13856
Coq.NArith.Ndist.Nplength_zeros	40
Coq.NArith.Ndist.Nplength_one	40
Coq.NArith.Ndist.Nplength_first_one	40
Coq.NArith.Ndist.ni_min_idemp	40	3.9.2.17.4	synth with cache (only 1: intro n; only 1: induction n as [| n H]; only 1: tauto; only 1: simpl; only 1: Nat.solve_min).	1.75166606903	2681
Coq.NArith.Ndist.ni_min_comm	40
Coq.NArith.Ndist.ni_min_assoc	40
Coq.NArith.Ndist.ni_min_O_l	40	1.0.7	synth with cache (only 1: simple induction d; only 1: trivial; only 1: trivial).	0.0523481369019	56
Coq.NArith.Ndist.ni_min_O_r	40	0.0.3.3.0.0	synth with cache (only 1: simple induction d; only 1: trivial; only 1: unfold ni_min; only 1: simple induction n; only 1: trivial; only 1: trivial).	0.142132997513	141
Coq.NArith.Ndist.ni_min_inf_l	40	0	synth with cache (only 1: trivial).	0.00994300842285	1
Coq.NArith.Ndist.ni_min_inf_r	40	0.0.2	synth with cache (only 1: simple induction d; only 1: trivial; only 1: trivial).	0.0171821117401	5
Coq.NArith.Ndist.ni_le_refl	40
Coq.NArith.Ndist.ni_le_antisym	40
Coq.NArith.Ndist.ni_le_trans	40
Coq.NArith.Ndist.ni_le_min_1	40
Coq.NArith.Ndist.ni_le_min_2	40	2.1.3.1.0	synth with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: trivial).	0.266428947449	234
Coq.NArith.Ndist.ni_min_case	40
Coq.NArith.Ndist.ni_le_total	40
Coq.NArith.Ndist.ni_le_min_induc	40
Coq.NArith.Ndist.le_ni_le	40	1.15.42	synth with cache (only 1: intros op Hop; only 1: fix le_div2 1; only 1: trivial).	20.5914211273	26395
Coq.NArith.Ndist.ni_le_le	40
Coq.NArith.Ndist.Nplength_lb	40
Coq.NArith.Ndist.Nplength_ub	40
Coq.NArith.Ndist.Npdist_eq_1	40
Coq.NArith.Ndist.Npdist_eq_2	40
Coq.NArith.Ndist.Npdist_comm	40
Coq.NArith.Ndist.Nplength_ultra_1	40
Coq.NArith.Ndist.Nplength_ultra	40
Coq.NArith.Ndist.Npdist_ultra	40
Coq.NArith.Ndigits.Ptestbit_Pbit	40	0.21	synth with cache (only 1: fix even_spec 1; only 1: trivial).	0.765414953232	525
Coq.NArith.Ndigits.Ntestbit_Nbit	40
Coq.NArith.Ndigits.Pbit_Ptestbit	40
Coq.NArith.Ndigits.Nbit_Ntestbit	40
Coq.NArith.Ndigits.Nshiftr_nat_S	40	0	synth with cache (only 1: trivial).	0.0161890983582	1
Coq.NArith.Ndigits.Nshiftl_nat_S	40	2	synth with cache (only 1: now destruct n).	0.202764987946	37
Coq.NArith.Ndigits.Nshiftr_nat_equiv	40
Coq.NArith.Ndigits.Nshiftr_equiv_nat	40
Coq.NArith.Ndigits.Nshiftl_nat_equiv	40
Coq.NArith.Ndigits.Nshiftl_equiv_nat	40
Coq.NArith.Ndigits.Nshiftr_nat_spec	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_low	40
Coq.NArith.Ndigits.Pshiftl_nat_0	40	0	synth with cache (only 1: auto with *).	0.0186409950256	1
Coq.NArith.Ndigits.Pshiftl_nat_S	40	0	synth with cache (only 1: trivial).	0.0164668560028	1
Coq.NArith.Ndigits.Pshiftl_nat_N	40
Coq.NArith.Ndigits.Pshiftl_nat_plus	40
Coq.NArith.Ndigits.Pxor_semantics	40
Coq.NArith.Ndigits.Nxor_semantics	40
Coq.NArith.Ndigits.Por_semantics	40
Coq.NArith.Ndigits.Nor_semantics	40	2.0.2.0.2.0.1.0.0.0	synth with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: destruct a, a'; only 1: simpl; only 1: solve_proper; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: now rewrite orb_false_r; only 1: simpl; only 1: apply N.pos_lor_spec).	2.66195106506	1527
Coq.NArith.Ndigits.Pand_semantics	40
Coq.NArith.Ndigits.Nand_semantics	40	0.0.2.0.1.0.1.0.0.0	synth with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: destruct a, a'; only 1: simpl; only 1: solve_proper; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite andb_false_r; only 1: simpl; only 1: apply N.pos_land_spec).	1.19210600853	790
Coq.NArith.Ndigits.Pdiff_semantics	40
Coq.NArith.Ndigits.Ndiff_semantics	40	0.0.2.0.1.0.1.0.0.0	synth with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: destruct a, a'; only 1: simpl; only 1: solve_proper; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite andb_true_r; only 1: simpl; only 1: apply N.pos_ldiff_spec).	1.1511080265	614
Coq.NArith.Ndigits.Pbit_faithful_0	40
Coq.NArith.Ndigits.Pbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful_iff	40
Coq.NArith.Ndigits.Nbit0_correct	40	0.0.0.0.2.6.2.3	synth with cache (only 1: induction n; only 1: trivial; only 1: rewrite <- !Ntestbit_Nbit; only 1: simpl; only 1: destruct p; only 1: trivial; only 1: easy; only 1: trivial).	1.43851399422	1447
Coq.NArith.Ndigits.Ndouble_bit0	40	31	synth with cache (only 1: now destruct n).	0.822523117065	1073
Coq.NArith.Ndigits.Ndouble_plus_one_bit0	40	1.8.5	synth with cache (only 1: destruct n; only 1: trivial; only 1: easy).	0.221695184708	160
Coq.NArith.Ndigits.Ndiv2_double	40	15.0.0.35	synth with cache (only 1: induction n; only 1: now try rewrite H; only 1: simpl; only 1: now destruct p).	26.1356158257	26068
Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	0.0.6.2.0.3.10.2.7	synth with cache (only 1: destruct n; only 1: simpl in *; only 1: now try N.order'; only 1: generalize (Pos.sqrtrem_spec p); only 1: destruct p; only 1: trivial; only 1: easy || now destruct Hb; only 1: simpl; only 1: now f_equal).	10.1648159027	11440
Coq.NArith.Ndigits.Ndiv2_correct	40	1.1.1.1.3.11	synth with cache (only 1: intros; only 1: destruct a as [| [p| p| ]]; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	2.19280695915	1004
Coq.NArith.Ndigits.Nxor_bit0	40
Coq.NArith.Ndigits.Nxor_div2	40
Coq.NArith.Ndigits.Nneg_bit0	40
Coq.NArith.Ndigits.Nneg_bit0_1	40
Coq.NArith.Ndigits.Nneg_bit0_2	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: reflexivity).	0.0983579158783	4
Coq.NArith.Ndigits.Nsame_bit0	40
Coq.NArith.Ndigits.Nbit0_less	40
Coq.NArith.Ndigits.Nbit0_gt	40	0.0.1.0.0.0.0.0.2.0.0.0.0.0.0.3.0	synth with cache (only 1: intros; only 1: destruct (N.discr (N.lxor a a')) as [(p, H2)| H1]; only 1: unfold Nless; only 1: rewrite H2; only 1: destruct p; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H1 : N.odd (N.lxor a a') = false) by (rewrite H2; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H1; only 1: discriminate H1; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H2 : N.odd (N.lxor a a') = false) by (rewrite H1; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H2; only 1: discriminate H2).	8.00329303741	4891
Coq.NArith.Ndigits.Nless_not_refl	40
Coq.NArith.Ndigits.Nless_def_1	40
Coq.NArith.Ndigits.Nless_def_2	40
Coq.NArith.Ndigits.Nless_def_3	40
Coq.NArith.Ndigits.Nless_def_4	40	0.0.0.0.0.0.1.0.3.2.3	synth with cache (only 1: destruct a; only 1: destruct a'; only 1: reflexivity; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	7.13013982773	4911
Coq.NArith.Ndigits.Nless_z	40
Coq.NArith.Ndigits.N0_less_1	40
Coq.NArith.Ndigits.N0_less_2	40
Coq.NArith.Ndigits.Nless_trans	40
Coq.NArith.Ndigits.Nless_total	40
Coq.NArith.Ndigits.Bv2N_N2Bv	40
Coq.NArith.Ndigits.Bv2N_Nsize	40	2.63.3	synth with cache (only 1: intro n; only 1: fix le_div2 1; only 1: trivial).	25.905274868	44874
Coq.NArith.Ndigits.Bv2N_Nsize_1	40	1.1.20	synth with cache (only 1: fix odd_spec 1; only 1: intros; only 1: easy).	13.8447539806	1535
Coq.NArith.Ndigits.Bv2N_upper_bound	40
Coq.NArith.Ndigits.ByteV2N_upper_bound	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	40
Coq.NArith.Ndigits.N2Bv_Bv2N	40
Coq.NArith.Ndigits.Nbit0_Blow	40
Coq.NArith.Ndigits.Bnth_Nbit	40
Coq.NArith.Ndigits.Nbit_Nsize	40
Coq.NArith.Ndigits.Nbit_Bth	40
Coq.NArith.Ndigits.Nxor_BVxor	40
Coq.NArith.Ndigits.Nand_BVand	40
Coq.NArith.Ndigits.N2Bv_sized_Nsize	40
Coq.NArith.Ndigits.N2Bv_sized_Bv2N	40
Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40	0.0.1.0.0.1.1.1.0.1.0.0	synth with cache (only 1: destruct a; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: auto).	2.05452299118	1116
Coq.NArith.NArith.TestOrder.test	40	8.6	synth with cache (only 1: intros; only 1: intuition N.Private_Tac.order).	0.583595991135	442
Coq.NArith.Nnat.N2Nat.id	40
Coq.NArith.Nnat.N2Nat.inj	40
Coq.NArith.Nnat.N2Nat.inj_iff	40	0.1.0.2.1.8.1	synth with cache (only 1: rewrite <- (id a), <- (id a'); only 1: split; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: now f_equal; only 1: intro H; only 1: now f_equal).	2.54561710358	1052
Coq.NArith.Nnat.N2Nat.inj_double	40
Coq.NArith.Nnat.N2Nat.inj_succ_double	40	0.0.0.0.4.8.1.0.0	synth with cache (only 1: destruct a; only 1: simpl N.to_nat; only 1: reflexivity; only 1: Nat.nzsimpl'; only 1: apply eq_S; only 1: simpl N.to_nat; only 1: rewrite Pmult_nat_mult, Nat.mul_comm; only 1: simpl; only 1: now rewrite Nat.add_0_r).	5.12828302383	3298
Coq.NArith.Nnat.N2Nat.inj_succ	40	2.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: simpl; only 1: trivial; only 1: simpl N.to_nat; only 1: unfold Pos.to_nat; only 1: now rewrite !Pmult_nat_mult, Pos2Nat.inj_succ).	0.0402960777283	8
Coq.NArith.Nnat.N2Nat.inj_add	40
Coq.NArith.Nnat.N2Nat.inj_mul	40
Coq.NArith.Nnat.N2Nat.inj_sub	40
Coq.NArith.Nnat.N2Nat.inj_pred	40
Coq.NArith.Nnat.N2Nat.inj_div2	40
Coq.NArith.Nnat.N2Nat.inj_compare	40
Coq.NArith.Nnat.N2Nat.inj_max	40
Coq.NArith.Nnat.N2Nat.inj_min	40
Coq.NArith.Nnat.N2Nat.inj_iter	40
Coq.NArith.Nnat.Nat2N.id	40	1.0.0.7	synth with cache (only 1: induction n; only 1: now f_equal; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.117681026459	43
Coq.NArith.Nnat.Nat2N.inj	40
Coq.NArith.Nnat.Nat2N.inj_iff	40	2.0.0.1.0.12	synth with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: now f_equal).	3.22749304771	1218
Coq.NArith.Nnat.Nat2N.inj_double	40
Coq.NArith.Nnat.Nat2N.inj_succ_double	40	0	synth with cache (only 1: nat2N).	0.0764560699463	1
Coq.NArith.Nnat.Nat2N.inj_succ	40	0	synth with cache (only 1: nat2N).	0.0304360389709	1
Coq.NArith.Nnat.Nat2N.inj_pred	40	4	synth with cache (only 1: nat2N).	0.031779050827	5
Coq.NArith.Nnat.Nat2N.inj_add	40	7	synth with cache (only 1: nat2N).	0.0492370128632	11
Coq.NArith.Nnat.Nat2N.inj_sub	40	5	synth with cache (only 1: nat2N).	0.0391330718994	6
Coq.NArith.Nnat.Nat2N.inj_mul	40	0	synth with cache (only 1: nat2N).	0.0324158668518	1
Coq.NArith.Nnat.Nat2N.inj_div2	40	5	synth with cache (only 1: nat2N).	0.0357918739319	6
Coq.NArith.Nnat.Nat2N.inj_compare	40
Coq.NArith.Nnat.Nat2N.inj_min	40	4	synth with cache (only 1: nat2N).	0.0369188785553	5
Coq.NArith.Nnat.Nat2N.inj_max	40	5	synth with cache (only 1: nat2N).	0.0385332107544	6
Coq.NArith.Nnat.Nat2N.inj_iter	40
Coq.Strings.Ascii.ascii_dec	40
Coq.Strings.Ascii.eqb_spec	40
Coq.Strings.Ascii.eqb_refl	40	19.45.1	synth with cache (only 1: destruct x; only 1: simpl; only 1: destr_bool).	8.17984580994	16815
Coq.Strings.Ascii.eqb_sym	40	0	synth with cache (only 1: t_eqb).	0.0125420093536	1
Coq.Strings.Ascii.eqb_eq	40	0	synth with cache (only 1: t_eqb).	0.0117897987366	1
Coq.Strings.Ascii.eqb_neq	40	0	synth with cache (only 1: t_eqb).	0.0119969844818	1
Coq.Strings.Ascii.eqb_compat	40	0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: t_eqb).	0.00892210006714	2
Coq.Strings.Ascii.ascii_N_embedding	40
Coq.Strings.Ascii.N_ascii_embedding	40
Coq.Strings.Ascii.N_ascii_bounded	40
Coq.Strings.Ascii.ascii_nat_embedding	40
Coq.Strings.Ascii.nat_ascii_embedding	40
Coq.Strings.Ascii.nat_ascii_bounded	40
Coq.Strings.Ascii.ascii_of_byte_of_ascii	40
Coq.Strings.Ascii.byte_of_ascii_of_byte	40
Coq.Strings.Ascii.ascii_of_byte_via_N	40
Coq.Strings.Ascii.ascii_of_byte_via_nat	40
Coq.Strings.Ascii.byte_of_ascii_via_N	40
Coq.Strings.Ascii.byte_of_ascii_via_nat	40
Coq.Strings.String.string_dec	40	0.0.0.0.0.0.0.0.26.21	synth with cache (only 1: decide equality; only 1: decide equality; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: decide equality).	8.93990492821	14770
Coq.Strings.String.eqb_spec	40
Coq.Strings.String.eqb_refl	40
Coq.Strings.String.eqb_sym	40	0	synth with cache (only 1: t_eqb).	0.0246021747589	1
Coq.Strings.String.eqb_eq	40	0	synth with cache (only 1: t_eqb).	0.0255889892578	1
Coq.Strings.String.eqb_neq	40	0	synth with cache (only 1: t_eqb).	0.0242838859558	1
Coq.Strings.String.eqb_compat	40	0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: t_eqb).	0.0215849876404	2
Coq.Strings.String.get_correct	40	0.0.24	synth with cache (only 1: fix odd_spec 1; only 1: intros a r; only 1: now auto with arith).	3.36723899841	2867
Coq.Strings.String.append_correct1	40
Coq.Strings.String.append_correct2	40
Coq.Strings.String.substring_correct1	40
Coq.Strings.String.substring_correct2	40
Coq.Strings.String.prefix_correct	40	0.2.4.5	synth with cache (only 1: intros H1; only 1: fix odd_spec 1; only 1: intros; only 1: trivial).	0.842027902603	308
Coq.Strings.String.index_correct1	40
Coq.Strings.String.index_correct2	40
Coq.Strings.String.index_correct3	40
Coq.Strings.String.index_correct4	40
Coq.Strings.String.string_of_list_ascii_of_string	40
Coq.Strings.String.list_ascii_of_string_of_list_ascii	40
Coq.Strings.String.string_of_list_byte_of_string	40
Coq.Strings.String.list_byte_of_string_of_list_byte	40
Coq.Strings.Byte.byte_dec_lb	40
Coq.Strings.Byte.byte_dec_bl	40
Coq.Strings.Byte.eqb_false	40
Coq.Strings.Byte.nat.of_to_nat	40
Coq.Strings.Byte.nat.to_of_nat	40
Coq.Strings.Byte.nat.to_of_nat_iff	40
Coq.Strings.Byte.nat.to_of_nat_option_map	40
Coq.Strings.Byte.nat.to_nat_bounded	40
Coq.Strings.Byte.nat.of_nat_None_iff	40
Coq.Strings.Byte.N.of_to_N	40
Coq.Strings.Byte.N.to_of_N	40
Coq.Strings.Byte.N.to_of_N_iff	40
Coq.Strings.Byte.N.to_of_N_option_map	40	0.1	synth with cache (only 1: cbv[of_N]; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x | _ => intro | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	0.518287181854	3
Coq.Strings.Byte.N.to_N_bounded	40
Coq.Strings.Byte.N.of_N_None_iff	40
Coq.Strings.Byte.N.to_N_via_nat	40
Coq.Strings.Byte.N.to_nat_via_N	40
Coq.Strings.Byte.N.of_N_via_nat	40
Coq.Strings.Byte.N.of_nat_via_N	40
Coq.Strings.HexString.Raw.to_N_of_pos	40	6	synth with cache (only 1: trivial).	0.0511548519135	7
Coq.Strings.HexString.to_N_of_N	40
Coq.Strings.HexString.to_Z_of_Z	40
Coq.Strings.HexString.to_nat_of_nat	40
Coq.Strings.HexString.to_pos_of_pos	40
Coq.Strings.OctalString.Raw.to_N_of_pos	40	1	synth with cache (only 1: auto).	0.0331289768219	2
Coq.Strings.OctalString.to_N_of_N	40
Coq.Strings.OctalString.to_Z_of_Z	40
Coq.Strings.OctalString.to_nat_of_nat	40
Coq.Strings.OctalString.to_pos_of_pos	40
Coq.Strings.BinaryString.Raw.to_N_of_pos	40	2	synth with cache (only 1: trivial).	0.0100259780884	3
Coq.Strings.BinaryString.to_N_of_N	40
Coq.Strings.BinaryString.Z_of_of_Z	40
Coq.Strings.BinaryString.to_nat_of_nat	40
Coq.Strings.BinaryString.to_pos_of_pos	40
Coq.Reals.Rdefinitions.total_order_T	40
Coq.Reals.Rdefinitions.Req_appart_dec	40
Coq.Reals.Rdefinitions.Rrepr_appart_0	40
Coq.Reals.Rdefinitions.up	40	98	synth with cache (only 1: constructor).	2.11688899994	4905
Coq.Reals.Rtrigo_alt.pre_sin_bound	40
Coq.Reals.Rtrigo_alt.pre_cos_bound	40
Coq.Reals.Ratan.Ropp_div	40	0.0.0	synth with cache (only 1: intros x y; only 1: unfold Rdiv; only 1: ring).	0.0422639846802	3
Coq.Reals.Ratan.pos_half_prf	40	1	synth with cache (only 1: now apply Rinv_0_lt_compat, Rlt_0_2).	0.0235679149628	2
Coq.Reals.Ratan.Boule_half_to_interval	40
Coq.Reals.Ratan.Boule_lt	40
Coq.Reals.Ratan.Un_cv_ext	40
Coq.Reals.Ratan.Alt_first_term_bound	40
Coq.Reals.Ratan.Alt_CVU	40
Coq.Reals.Ratan.pow2_ge_0	40
Coq.Reals.Ratan.pow2_abs	40
Coq.Reals.Ratan.derivable_pt_tan	40
Coq.Reals.Ratan.derive_pt_tan	40
Coq.Reals.Ratan.derive_increasing_interv	40
Coq.Reals.Ratan.plus_Rsqr_gt_0	40
Coq.Reals.Ratan.PI2_lower_bound	40
Coq.Reals.Ratan.PI2_3_2	40
Coq.Reals.Ratan.PI2_1	40
Coq.Reals.Ratan.tan_increasing	40
Coq.Reals.Ratan.tan_is_inj	40
Coq.Reals.Ratan.exists_atan_in_frame	40
Coq.Reals.Ratan.tan_1_gt_1	40
Coq.Reals.Ratan.frame_tan	40
Coq.Reals.Ratan.ub_opp	40	9.3	synth with cache (only 1: intros; only 1: lra).	2.78558206558	497
Coq.Reals.Ratan.pos_opp_lt	40	21.0	synth with cache (only 1: intro x; only 1: lra).	1.26811099052	943
Coq.Reals.Ratan.tech_opp_tan	40
Coq.Reals.Ratan.pre_atan	40
Coq.Reals.Ratan.atan_bound	40
Coq.Reals.Ratan.atan_right_inv	40
Coq.Reals.Ratan.atan_opp	40
Coq.Reals.Ratan.derivable_pt_atan	40
Coq.Reals.Ratan.atan_increasing	40
Coq.Reals.Ratan.atan_0	40
Coq.Reals.Ratan.atan_1	40
Coq.Reals.Ratan.derive_pt_atan	40
Coq.Reals.Ratan.derivable_pt_lim_atan	40
Coq.Reals.Ratan.Ratan_seq_decreasing	40
Coq.Reals.Ratan.Ratan_seq_converging	40
Coq.Reals.Ratan.ps_atan_exists_01	40
Coq.Reals.Ratan.Ratan_seq_opp	40
Coq.Reals.Ratan.sum_Ratan_seq_opp	40
Coq.Reals.Ratan.ps_atan_exists_1	40
Coq.Reals.Ratan.in_int	40
Coq.Reals.Ratan.ps_atan0_0	40
Coq.Reals.Ratan.ps_atan_exists_1_opp	40
Coq.Reals.Ratan.ps_atan_opp	40
Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40
Coq.Reals.Ratan.pow_lt_1_compat	40
Coq.Reals.Ratan.Datan_seq_Rabs	40
Coq.Reals.Ratan.Datan_seq_pos	40
Coq.Reals.Ratan.Datan_sum_eq	40
Coq.Reals.Ratan.Datan_seq_increasing	40
Coq.Reals.Ratan.Datan_seq_decreasing	40
Coq.Reals.Ratan.Datan_seq_CV_0	40
Coq.Reals.Ratan.Datan_lim	40
Coq.Reals.Ratan.Datan_CVU_prelim	40
Coq.Reals.Ratan.Datan_is_datan	40
Coq.Reals.Ratan.Ratan_CVU'	40
Coq.Reals.Ratan.Ratan_CVU	40
Coq.Reals.Ratan.Alt_PI_tg	40	0.0.0.3.0.6	synth with cache (only 1: intro; only 1: unfold Ratan_seq, PI_tg; only 1: rewrite pow1; only 1: unfold Rdiv; only 1: rewrite Rmult_1_l; only 1: ring).	1.82530212402	218
Coq.Reals.Ratan.Ratan_is_ps_atan	40
Coq.Reals.Ratan.Datan_continuity	40
Coq.Reals.Ratan.derivable_pt_lim_ps_atan	40
Coq.Reals.Ratan.derivable_pt_ps_atan	40
Coq.Reals.Ratan.ps_atan_continuity_pt_1	40
Coq.Reals.Ratan.Datan_eq_DatanSeq_interv	40
Coq.Reals.Ratan.atan_eq_ps_atan	40
Coq.Reals.Ratan.Alt_PI_eq	40
Coq.Reals.Ratan.PI_ineq	40
Coq.Reals.RList.MaxRlist_P1	40
Coq.Reals.RList.MinRlist_P1	40
Coq.Reals.RList.AbsList_P1	40
Coq.Reals.RList.MinRlist_P2	40
Coq.Reals.RList.AbsList_P2	40
Coq.Reals.RList.MaxRlist_P2	40
Coq.Reals.RList.pos_Rl_P1	40
Coq.Reals.RList.pos_Rl_P2	40
Coq.Reals.RList.Rlist_P1	40
Coq.Reals.RList.RList_P0	40
Coq.Reals.RList.RList_P1	40
Coq.Reals.RList.RList_P2	40
Coq.Reals.RList.RList_P3	40
Coq.Reals.RList.RList_P4	40
Coq.Reals.RList.RList_P5	40
Coq.Reals.RList.RList_P6	40
Coq.Reals.RList.RList_P7	40
Coq.Reals.RList.RList_P8	40
Coq.Reals.RList.RList_P9	40
Coq.Reals.RList.RList_P10	40
Coq.Reals.RList.RList_P11	40
Coq.Reals.RList.RList_P12	40
Coq.Reals.RList.RList_P13	40
Coq.Reals.RList.RList_P14	40
Coq.Reals.RList.RList_P15	40
Coq.Reals.RList.RList_P16	40
Coq.Reals.RList.RList_P17	40
Coq.Reals.RList.RList_P18	40
Coq.Reals.RList.RList_P19	40
Coq.Reals.RList.RList_P20	40
Coq.Reals.RList.RList_P21	40	2.4	synth with cache (only 1: intro; only 1: apply f_equal).	0.141754150391	47
Coq.Reals.RList.RList_P22	40	3.0.8.1.0.10	synth with cache (only 1: induction l1 as [| r l1 Hrecl1]; only 1: simpl; only 1: symmetry; only 1: elim H; only 1: reflexivity; only 1: reflexivity).	20.8518140316	10802
Coq.Reals.RList.RList_P23	40	7.1.0.0.0	synth with cache (only 1: simple induction l1; only 1: intro; only 1: reflexivity; only 1: simpl; only 1: auto).	3.44451999664	628
Coq.Reals.RList.RList_P24	40
Coq.Reals.RList.RList_P25	40
Coq.Reals.RList.RList_P26	40	0.1.0.0.0.0.1.0.1.23.14	synth with cache (only 1: intros H4 H5; only 1: elim H4; only 1: intros; only 1: elim (Nat.nlt_0_r _ H); only 1: intros; only 1: induction i as [| i Hreci]; only 1: reflexivity; only 1: simpl; only 1: apply H; only 1: apply lt_S_n; only 1: apply H0).	8.763215065	8482
Coq.Reals.RList.RList_P27	40
Coq.Reals.RList.RList_P28	40
Coq.Reals.RList.RList_P29	40
Coq.Reals.Sqrt_reg.sqrt_var_maj	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt	40
Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	40
Coq.Reals.Sqrt_reg.derivable_pt_sqrt	40
Coq.Reals.Sqrt_reg.derive_pt_sqrt	40
Coq.Reals.Sqrt_reg.continuity_pt_sqrt	40
Coq.Reals.Rsigma.Sigma.sigma_split	40	0.0.49	synth with cache (only 1: fix le_div2 1; only 1: intros LS' n; only 1: auto with arith).	16.482530117	18800
Coq.Reals.Rsigma.Sigma.sigma_diff	40
Coq.Reals.Rsigma.Sigma.sigma_diff_neg	40	0.2.0.0.0.0.0.0	synth with cache (only 1: intros low high k H1 H2; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: rewrite (sigma_split H1 H2); only 1: ring).	0.147682905197	16
Coq.Reals.Rsigma.Sigma.sigma_first	40
Coq.Reals.Rsigma.Sigma.sigma_last	40
Coq.Reals.Rsigma.Sigma.sigma_eq_arg	40	0.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sigma; only 1: rewrite <- minus_n_n; only 1: simpl; only 1: replace (low + 0)%nat with low; only 1: reflexivity; only 1: ring).	0.0995180606842	9
Coq.Reals.Rbasic_fun.Rmin_case	40
Coq.Reals.Rbasic_fun.Rmin_case_strong	40	0.3.0.0.0.0	synth with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition eauto  4 with real).	0.0761461257935	9
Coq.Reals.Rbasic_fun.Rmin_Rgt_l	40
Coq.Reals.Rbasic_fun.Rmin_Rgt_r	40	2.2.0.0.1	synth with cache (only 1: unfold Rmin; only 1: intros r1 r2; only 1: destruct (Rle_dec r1 r2) as [Hle| Hnle]; only 1: intuition eauto  4 with real; only 1: intuition eauto  4 with real).	0.44381403923	154
Coq.Reals.Rbasic_fun.Rmin_Rgt	40
Coq.Reals.Rbasic_fun.Rmin_l	40	2.0.0.1.5.0.0	synth with cache (only 1: intros r1 r2; only 1: unfold Rmin; only 1: red; only 1: case (Rle_dec r1 r2); only 1: unfold Rle; only 1: tauto; only 1: intuition).	19.0936841965	3497
Coq.Reals.Rbasic_fun.Rmin_r	40	2.2.4.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: rewrite <- (Ropp_involutive x); only 1: auto with real; only 1: auto with real).	6.10401201248	1455
Coq.Reals.Rbasic_fun.Rmin_left	40	2.1.0.0.0.1	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: reflexivity; only 1: intro H1; only 1: auto with real).	0.0509910583496	10
Coq.Reals.Rbasic_fun.Rmin_right	40	1.2.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.033921957016	7
Coq.Reals.Rbasic_fun.Rle_min_compat_r	40
Coq.Reals.Rbasic_fun.Rle_min_compat_l	40	2.2.2.2.0.0	synth with cache (only 1: intros; only 1: do 2 (apply Rmin_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	12.5247569084	2840
Coq.Reals.Rbasic_fun.Rmin_comm	40	2.2.1.2.1.0	synth with cache (only 1: intros; only 1: do 2 (apply Rmin_case_strong; intro); only 1: auto using Rle_antisym; only 1: reflexivity; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	5.34586310387	1272
Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40
Coq.Reals.Rbasic_fun.Rmin_pos	40	6.0.0.18	synth with cache (only 1: intros H1; only 1: intros; only 1: apply Rmin_Rgt_r; only 1: auto).	9.98323297501	5969
Coq.Reals.Rbasic_fun.Rmin_glb	40	2.2.2.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.358062028885	68
Coq.Reals.Rbasic_fun.Rmin_glb_lt	40	0.0.0.3.3	synth with cache (only 1: intros r1 r2; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: intuition eauto  4 with real; only 1: intuition eauto  4 with real).	1.32707190514	492
Coq.Reals.Rbasic_fun.Rmax_case	40
Coq.Reals.Rbasic_fun.Rmax_case_strong	40	1.0.0.0.0	synth with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmax; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: auto with real).	0.040207862854	6
Coq.Reals.Rbasic_fun.Rmax_Rle	40
Coq.Reals.Rbasic_fun.Rmax_comm	40
Coq.Reals.Rbasic_fun.Rmax_l	40
Coq.Reals.Rbasic_fun.Rmax_r	40	6.4.1.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: eauto using Rle_trans, Rle_refl; only 1: auto with real).	36.5930390358	6994
Coq.Reals.Rbasic_fun.Rmax_left	40	1.3.1.0.0	synth with cache (only 1: intros p q; only 1: unfold Rmax; only 1: case (Rle_dec p q); only 1: auto with real; only 1: auto).	0.505375862122	98
Coq.Reals.Rbasic_fun.Rmax_right	40	2.1.1.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: intros; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real); only 1: intros; only 1: reflexivity).	0.0424568653107	10
Coq.Reals.Rbasic_fun.Rle_max_compat_r	40
Coq.Reals.Rbasic_fun.Rle_max_compat_l	40	2.2.2.2.0.0	synth with cache (only 1: intros; only 1: do 2 (apply Rmax_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	14.8719060421	4016
Coq.Reals.Rbasic_fun.RmaxRmult	40
Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40
Coq.Reals.Rbasic_fun.Rmax_lub	40	2.2.2.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.139611959457	51
Coq.Reals.Rbasic_fun.Rmax_lub_lt	40	2.1.2.1.3.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: intro; only 1: assumption; only 1: intro; only 1: assumption).	16.0621469021	9403
Coq.Reals.Rbasic_fun.Rmax_Rlt	40
Coq.Reals.Rbasic_fun.Rmax_neg	40	0.9	synth with cache (only 1: intros x y; only 1: apply Rmax_lub_lt).	4.12210988998	821
Coq.Reals.Rbasic_fun.Rcase_abs	40
Coq.Reals.Rbasic_fun.Rabs_R0	40
Coq.Reals.Rbasic_fun.Rabs_R1	40
Coq.Reals.Rbasic_fun.Rabs_no_R0	40
Coq.Reals.Rbasic_fun.Rabs_left	40
Coq.Reals.Rbasic_fun.Rabs_right	40
Coq.Reals.Rbasic_fun.Rabs_left1	40
Coq.Reals.Rbasic_fun.Rabs_pos	40
Coq.Reals.Rbasic_fun.Rle_abs	40
Coq.Reals.Rbasic_fun.Rabs_le	40
Coq.Reals.Rbasic_fun.Rabs_pos_eq	40	0.3.4.0	synth with cache (only 1: intros a H; only 1: rewrite Rabs_right; only 1: split; only 1: auto with real).	0.431477069855	132
Coq.Reals.Rbasic_fun.Rabs_Rabsolu	40
Coq.Reals.Rbasic_fun.Rabs_pos_lt	40
Coq.Reals.Rbasic_fun.Rabs_minus_sym	40
Coq.Reals.Rbasic_fun.Rabs_mult	40
Coq.Reals.Rbasic_fun.Rabs_Rinv	40
Coq.Reals.Rbasic_fun.Rabs_Ropp	40
Coq.Reals.Rbasic_fun.Rabs_triang	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv2	40
Coq.Reals.Rbasic_fun.Rabs_def1	40
Coq.Reals.Rbasic_fun.Rabs_def2	40
Coq.Reals.Rbasic_fun.RmaxAbs	40
Coq.Reals.Rbasic_fun.Rabs_Zabs	40
Coq.Reals.Rbasic_fun.abs_IZR	40
Coq.Reals.Rbasic_fun.Ropp_Rmax	40
Coq.Reals.Rbasic_fun.Ropp_Rmin	40
Coq.Reals.Rbasic_fun.Rmax_assoc	40
Coq.Reals.Rbasic_fun.Rminmax	40
Coq.Reals.Rbasic_fun.Rmin_assoc	40
Coq.Reals.ROrderedType.Req_dec	40	0.0.14.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	23.3000750542	4466
Coq.Reals.ROrderedType.Reqb_eq	40
Coq.Reals.ROrderedType.Rcompare_spec	40
Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40
Coq.Reals.ROrderedType.R_as_OT.lt_compat	40	0	synth with cache (only 1: solve_proper).	0.541663885117	1
Coq.Reals.ROrderedType.R_as_OT.le_lteq	40	0.0	synth with cache (only 1: unfold Rle; only 1: tauto).	0.0359969139099	2
Coq.Reals.SeqSeries.sum_maj1	40
Coq.Reals.SeqSeries.Rseries_CV_comp	40
Coq.Reals.SeqSeries.Cesaro	40
Coq.Reals.SeqSeries.Cesaro_1	40
Coq.Reals.Rtrigo_def.exp_cof_no_R0	40
Coq.Reals.Rtrigo_def.exist_exp	40
Coq.Reals.Rtrigo_def.pow_i	40	16.16.2.11	synth with cache (only 1: intros x n; only 1: rewrite pow_ne_zero; only 1: ring; only 1: Nat.order').	17.4839580059	13592
Coq.Reals.Rtrigo_def.exist_exp0	40
Coq.Reals.Rtrigo_def.exp_0	40
Coq.Reals.Rtrigo_def.cosh_0	40
Coq.Reals.Rtrigo_def.sinh_0	40
Coq.Reals.Rtrigo_def.simpl_cos_n	40
Coq.Reals.Rtrigo_def.archimed_cor1	40
Coq.Reals.Rtrigo_def.Alembert_cos	40
Coq.Reals.Rtrigo_def.cosn_no_R0	40
Coq.Reals.Rtrigo_def.exist_cos	40
Coq.Reals.Rtrigo_def.simpl_sin_n	40
Coq.Reals.Rtrigo_def.Alembert_sin	40
Coq.Reals.Rtrigo_def.sin_no_R0	40	0.0.2.0.7.4	synth with cache (only 1: intro n; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	2.94115996361	340
Coq.Reals.Rtrigo_def.exist_sin	40
Coq.Reals.Rtrigo_def.cos_sym	40
Coq.Reals.Rtrigo_def.sin_antisym	40
Coq.Reals.Rtrigo_def.sin_0	40
Coq.Reals.Rtrigo_def.exist_cos0	40
Coq.Reals.Rtrigo_def.cos_0	40
Coq.Reals.NewtonInt.FTCN_step1	40
Coq.Reals.NewtonInt.FTC_Newton	40	5.0	synth with cache (only 1: intros f a b; only 1: split).	0.163894891739	14
Coq.Reals.NewtonInt.NewtonInt_P1	40
Coq.Reals.NewtonInt.NewtonInt_P2	40
Coq.Reals.NewtonInt.NewtonInt_P3	40
Coq.Reals.NewtonInt.NewtonInt_P4	40
Coq.Reals.NewtonInt.NewtonInt_P5	40
Coq.Reals.NewtonInt.antiderivative_P1	40
Coq.Reals.NewtonInt.NewtonInt_P6	40
Coq.Reals.NewtonInt.antiderivative_P2	40
Coq.Reals.NewtonInt.antiderivative_P3	40
Coq.Reals.NewtonInt.antiderivative_P4	40
Coq.Reals.NewtonInt.NewtonInt_P7	40
Coq.Reals.NewtonInt.NewtonInt_P8	40
Coq.Reals.NewtonInt.NewtonInt_P9	40
Coq.Reals.Runcountable.in_holed_interval_dec	40
Coq.Reals.Runcountable.middle_in_interval	40
Coq.Reals.Runcountable.point_in_holed_interval_works	40
Coq.Reals.Runcountable.first_in_holed_interval	40
Coq.Reals.Runcountable.first_in_holed_interval_works	40
Coq.Reals.Runcountable.split_couple_eq	40	29.6.8.0	synth with cache (only 1: split; only 1: inversion H; only 1: trivial; only 1: congruence).	14.2850239277	13008
Coq.Reals.Runcountable.first_two_in_interval_works	40
Coq.Reals.Runcountable.tearing_sequences	40
Coq.Reals.Runcountable.tearing_sequences_projsig	40
Coq.Reals.Runcountable.tearing_sequences_inc_dec	40
Coq.Reals.Runcountable.split_lt_succ	40	3.0.3.8	synth with cache (only 1: intros; only 1: apply Nat.lt_eq_cases; only 1: apply Peano.le_S_n; only 1: Nat.order).	9.44987416267	3136
Coq.Reals.Runcountable.increase_seq_transit	40	7.46.10	synth with cache (only 1: intros n IH H; only 1: fix le_div2 1; only 1: auto with real).	18.8683869839	52271
Coq.Reals.Runcountable.decrease_seq_transit	40
Coq.Reals.Runcountable.tearing_sequences_ordered_forall	40
Coq.Reals.Runcountable.torn_number	40
Coq.Reals.Runcountable.torn_number_above_first_sequence	40
Coq.Reals.Runcountable.torn_number_below_second_sequence	40
Coq.Reals.Runcountable.limit_index_above_all_indices	40
Coq.Reals.Runcountable.first_indices_increasing	40
Coq.Reals.Runcountable.R_uncountable	40
Coq.Reals.Rfunctions.INR_fact_neq_0	40
Coq.Reals.Rfunctions.fact_simpl	40	4.0	synth with cache (only 1: intro m; only 1: auto).	0.011470079422	6
Coq.Reals.Rfunctions.simpl_fact	40
Coq.Reals.Rfunctions.pow_O	40	1	synth with cache (only 1: auto with real).	0.0114588737488	2
Coq.Reals.Rfunctions.pow_1	40	1.0.8	synth with cache (only 1: intros; only 1: simpl; only 1: auto with real).	0.144788980484	52
Coq.Reals.Rfunctions.pow_add	40	1.0.1.0.0.0.0.1	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: rewrite H'; only 1: auto with real).	0.639675140381	83
Coq.Reals.Rfunctions.Rpow_mult_distr	40
Coq.Reals.Rfunctions.pow_nonzero	40	2.0.0.0.1.0.0.1	synth with cache (only 1: destruct n; only 1: simpl; only 1: auto with real; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	2.51483416557	185
Coq.Reals.Rfunctions.pow_RN_plus	40
Coq.Reals.Rfunctions.pow_lt	40	3.1.8.0.0.12.0.0.0.0	synth with cache (only 1: intro; only 1: intros; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros; only 1: apply Rmult_lt_0_compat; only 1: apply H; only 1: auto).	39.5392839909	43764
Coq.Reals.Rfunctions.Rlt_pow_R1	40
Coq.Reals.Rfunctions.Rlt_pow	40
Coq.Reals.Rfunctions.tech_pow_Rmult	40	3.0.2.0	synth with cache (only 1: simpl; only 1: intros; only 1: apply Rmult_eq_compat_l; only 1: field).	0.0524640083313	12
Coq.Reals.Rfunctions.tech_pow_Rplus	40	0.2.4	synth with cache (only 1: intros; only 1: repeat rewrite S_INR; only 1: ring).	0.164093017578	45
Coq.Reals.Rfunctions.poly	40
Coq.Reals.Rfunctions.Power_monotonic	40
Coq.Reals.Rfunctions.RPow_abs	40
Coq.Reals.Rfunctions.Pow_x_infinity	40
Coq.Reals.Rfunctions.pow_ne_zero	40
Coq.Reals.Rfunctions.Rinv_pow	40
Coq.Reals.Rfunctions.pow_lt_1_zero	40
Coq.Reals.Rfunctions.pow_R1	40
Coq.Reals.Rfunctions.pow_Rsqr	40
Coq.Reals.Rfunctions.pow_le	40
Coq.Reals.Rfunctions.pow_1_even	40
Coq.Reals.Rfunctions.pow_1_odd	40
Coq.Reals.Rfunctions.pow_1_abs	40
Coq.Reals.Rfunctions.pow_mult	40
Coq.Reals.Rfunctions.pow_incr	40
Coq.Reals.Rfunctions.pow_R1_Rle	40
Coq.Reals.Rfunctions.Rle_pow	40
Coq.Reals.Rfunctions.pow1	40	7.3.2.1.3.1	synth with cache (only 1: intro; only 1: induction n as [| n Hrecn]; only 1: reflexivity; only 1: simpl; only 1: rewrite Rmult_1_l; only 1: auto).	3.3503279686	1504
Coq.Reals.Rfunctions.pow_Rabs	40
Coq.Reals.Rfunctions.pow_maj_Rabs	40
Coq.Reals.Rfunctions.Rsqr_pow2	40	0.4.0	synth with cache (only 1: intros; only 1: simpl; only 1: ring_Rsqr).	0.0257878303528	7
Coq.Reals.Rfunctions.PowerRZ.Z_compl.intP	40
Coq.Reals.Rfunctions.PowerRZ.Zpower_NR0	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_O	40	1.2	synth with cache (only 1: intros; only 1: trivial).	0.0169761180878	5
Coq.Reals.Rfunctions.PowerRZ.powerRZ_1	40	2.3.17	synth with cache (only 1: unfold Z.succ; only 1: simpl; only 1: auto with real).	1.732888937	1074
Coq.Reals.Rfunctions.PowerRZ.powerRZ_NOR	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_pos_sub	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_add	40
Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ	40
Coq.Reals.Rfunctions.PowerRZ.Zpower_pos_powerRZ	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_lt	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_le	40	0.0.0.0.0.0.3.0.0.0	synth with cache (only 1: intros x z; only 1: case z; only 1: simpl; only 1: red; only 1: left; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	3.29813480377	978
Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ_absolu	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_R1	40
Coq.Reals.Rfunctions.PowerRZ.pow_powerRZ	40	1.1.0.10.3.9	synth with cache (only 1: case n; only 1: auto with real; only 1: intros Eq1; only 1: simpl; only 1: rewrite SuccNat2Pos.id_succ; only 1: auto).	1.87405586243	1584
Coq.Reals.Rfunctions.PowerRZ.powerRZ_ind	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_inv	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_neg	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_mult_distr	40
Coq.Reals.Rfunctions.GP_finite	40
Coq.Reals.Rfunctions.sum_f_R0_triangle	40
Coq.Reals.Rfunctions.R_dist_pos	40
Coq.Reals.Rfunctions.R_dist_sym	40
Coq.Reals.Rfunctions.R_dist_refl	40
Coq.Reals.Rfunctions.R_dist_eq	40	9.12.0.0.0	synth with cache (only 1: unfold R_dist; only 1: intros; only 1: split_Rabs; only 1: ring; only 1: ring).	4.68722605705	4816
Coq.Reals.Rfunctions.R_dist_tri	40
Coq.Reals.Rfunctions.R_dist_plus	40
Coq.Reals.Rfunctions.R_dist_mult_l	40
Coq.Reals.Rprod.prod_SO_split	40
Coq.Reals.Rprod.prod_SO_pos	40
Coq.Reals.Rprod.prod_SO_Rle	40
Coq.Reals.Rprod.fact_prodSO	40
Coq.Reals.Rprod.le_n_2n	40	0.2.0.0.0.1.0	synth with cache (only 1: intro n; only 1: simpl; only 1: rewrite <- (Nat.add_0_r n); only 1: rewrite <- Nat.add_assoc; only 1: rewrite <- Nat.add_assoc; only 1: apply Nat.add_le_mono_l; only 1: apply Nat.le_0_l).	0.213701963425	41
Coq.Reals.Rprod.RfactN_fact2N_factk	40
Coq.Reals.Rprod.INR_fact_lt_0	40	0.0.1.0.15.2	synth with cache (only 1: intros; only 1: apply lt_0_INR; only 1: induction n; only 1: auto with real; only 1: simpl; only 1: auto with arith).	1.24356102943	567
Coq.Reals.Rprod.C_maj	40
Coq.Reals.Exp_prop.E1_cvg	40
Coq.Reals.Exp_prop.exp_form	40
Coq.Reals.Exp_prop.div2_double	40	1.3	synth with cache (only 1: simpl Nat.mul; only 1: apply Nat.div2_double).	0.0222029685974	6
Coq.Reals.Exp_prop.div2_S_double	40	3	synth with cache (only 1: apply Nat.div2_succ_double).	0.0126938819885	4
Coq.Reals.Exp_prop.div2_not_R0	40
Coq.Reals.Exp_prop.Reste_E_maj	40
Coq.Reals.Exp_prop.maj_Reste_cv_R0	40
Coq.Reals.Exp_prop.Reste_E_cv	40
Coq.Reals.Exp_prop.exp_plus	40
Coq.Reals.Exp_prop.exp_pos_pos	40
Coq.Reals.Exp_prop.exp_pos	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp_0	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp	40
Coq.Reals.Rpower.P_Rmin	40
Coq.Reals.Rpower.exp_le_3	40
Coq.Reals.Rpower.exp_increasing	40
Coq.Reals.Rpower.exp_lt_inv	40
Coq.Reals.Rpower.exp_ineq1	40
Coq.Reals.Rpower.ln_exists1	40
Coq.Reals.Rpower.ln_exists	40
Coq.Reals.Rpower.exp_ln	40
Coq.Reals.Rpower.exp_inv	40
Coq.Reals.Rpower.exp_Ropp	40
Coq.Reals.Rpower.ln_increasing	40
Coq.Reals.Rpower.ln_exp	40
Coq.Reals.Rpower.ln_1	40	2.11.0.6.0	synth with cache (only 1: apply exp_inv; only 1: rewrite exp_0; only 1: apply exp_ln; only 1: pattern 1 at 1; only 1: apply Rlt_0_1).	10.6006121635	2944
Coq.Reals.Rpower.ln_lt_inv	40
Coq.Reals.Rpower.ln_inv	40
Coq.Reals.Rpower.ln_mult	40
Coq.Reals.Rpower.ln_Rinv	40
Coq.Reals.Rpower.ln_continue	40
Coq.Reals.Rpower.Rpower_plus	40
Coq.Reals.Rpower.Rpower_mult	40
Coq.Reals.Rpower.Rpower_O	40
Coq.Reals.Rpower.Rpower_1	40	1.0.0.0.0.4.4.0.1	synth with cache (only 1: intros; only 1: unfold Rpower; only 1: unfold ln; only 1: rewrite Rmult_1_l; only 1: decide (Rlt_dec 0 x) with H; only 1: unfold Rln; only 1: destruct (ln_exists {| pos := x; cond_pos := H |} (cond_pos {| pos := x; cond_pos := H |})) as (?, Hex); only 1: symmetry; only 1: apply Hex).	4.31556606293	1679
Coq.Reals.Rpower.Rpower_pow	40
Coq.Reals.Rpower.Rpower_lt	40
Coq.Reals.Rpower.Rpower_sqrt	40
Coq.Reals.Rpower.Rpower_Ropp	40
Coq.Reals.Rpower.powerRZ_Rpower	40
Coq.Reals.Rpower.Rle_Rpower	40
Coq.Reals.Rpower.ln_lt_2	40
Coq.Reals.Rpower.limit1_ext	40
Coq.Reals.Rpower.limit1_imp	40
Coq.Reals.Rpower.Rinv_Rdiv	40
Coq.Reals.Rpower.Dln	40
Coq.Reals.Rpower.derivable_pt_lim_ln	40
Coq.Reals.Rpower.D_in_imp	40
Coq.Reals.Rpower.D_in_ext	40
Coq.Reals.Rpower.Dpower	40
Coq.Reals.Rpower.derivable_pt_lim_power	40
Coq.Reals.Rpower.Rpower_mult_distr	40
Coq.Reals.Rpower.Rlt_Rpower_l	40
Coq.Reals.Rpower.Rle_Rpower_l	40
Coq.Reals.Rpower.arcsinh_sinh	40
Coq.Reals.Rpower.sinh_arcsinh	40
Coq.Reals.Rpower.derivable_pt_lim_arcsinh	40
Coq.Reals.Rpower.arcsinh_lt	40
Coq.Reals.Rpower.arcsinh_le	40
Coq.Reals.Rpower.arcsinh_0	40
Coq.Reals.ConstructiveRcomplete.CReal_absSmall	40
Coq.Reals.ConstructiveRcomplete.Un_cv_mod_eq	40
Coq.Reals.ConstructiveRcomplete.Rfloor	40
Coq.Reals.ConstructiveRcomplete.FQ_dense	40
Coq.Reals.ConstructiveRcomplete.RQ_limit	40
Coq.Reals.ConstructiveRcomplete.Rdiag_cauchy_sequence	40
Coq.Reals.ConstructiveRcomplete.doubleLeCovariant	40
Coq.Reals.ConstructiveRcomplete.CReal_cv_self	40
Coq.Reals.ConstructiveRcomplete.Un_cv_extens	40
Coq.Reals.ConstructiveRcomplete.R_has_all_rational_limits	40
Coq.Reals.ConstructiveRcomplete.Rcauchy_complete	40
Coq.Reals.ConstructiveRcomplete.CRealImplem	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_increasing_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_unique	40
Coq.Reals.ConstructiveRealsMorphisms.Endomorph_id	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_proper	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_compose	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le	40	4.10.13.0	synth with cache (only 1: intros; only 1: intro abs; only 1: apply CRmorph_increasing_inv in abs; only 1: contradiction).	1.45839905739	1880
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le_inv	40	11.1.18.0.0.35	synth with cache (only 1: intros l; only 1: intros; only 1: intro abs; only 1: destruct H; only 1: apply CRmorph_increasing; only 1: assumption).	19.4503731728	56641
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_one	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_opp	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos	40
Coq.Reals.ConstructiveRealsMorphisms.NatOfZ	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_int	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Ql	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphism	40
Coq.Reals.ConstructiveRealsMorphisms.RightBound	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphismInv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_surject	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inject	40
Coq.Reals.RIneq.Rle_refl	40	1.1.24.0	synth with cache (only 1: intros; only 1: red; only 1: right; only 1: reflexivity).	2.00287008286	2180
Coq.Reals.RIneq.Rge_refl	40	1.0.0	synth with cache (only 1: intro; only 1: right; only 1: reflexivity).	0.640981912613	11
Coq.Reals.RIneq.Rlt_irrefl	40
Coq.Reals.RIneq.Rgt_irrefl	40	19.6.0.11.1	synth with cache (only 1: intro abs; only 1: intros Hb; only 1: eapply Rlt_asym; only 1: eauto with arith; only 1: tauto).	2.61772918701	5033
Coq.Reals.RIneq.Rlt_not_eq	40
Coq.Reals.RIneq.Rgt_not_eq	40
Coq.Reals.RIneq.Rlt_dichotomy_converse	40
Coq.Reals.RIneq.Req_dec	40
Coq.Reals.RIneq.Rtotal_order	40
Coq.Reals.RIneq.Rdichotomy	40	0.1.0	synth with cache (only 1: intuition; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.0424661636353	4
Coq.Reals.RIneq.Rlt_le	40	0.4.2	synth with cache (only 1: intros; only 1: left; only 1: trivial).	0.0302951335907	17
Coq.Reals.RIneq.Rgt_ge	40	0.0.21.0	synth with cache (only 1: intuition eauto  3; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.5458111763	765
Coq.Reals.RIneq.Rle_ge	40
Coq.Reals.RIneq.Rge_le	40	1.1.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  3).	0.111642122269	9
Coq.Reals.RIneq.Rlt_gt	40	0.1	synth with cache (only 1: intros; only 1: tauto).	0.0171980857849	3
Coq.Reals.RIneq.Rgt_lt	40	0	synth with cache (only 1: trivial).	0.0128579139709	1
Coq.Reals.RIneq.Rnot_le_lt	40
Coq.Reals.RIneq.Rnot_ge_gt	40
Coq.Reals.RIneq.Rnot_le_gt	40	0.2.0.0	synth with cache (only 1: intros r1 r2; only 1: unfold Rle; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.0862638950348	6
Coq.Reals.RIneq.Rnot_ge_lt	40	0.0.2	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: auto with real).	0.0207991600037	5
Coq.Reals.RIneq.Rnot_lt_le	40	2.2.0.1.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  3).	0.14063501358	11
Coq.Reals.RIneq.Rnot_gt_le	40	0.2.0.0	synth with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.0837697982788	6
Coq.Reals.RIneq.Rnot_gt_ge	40	2.2.0.0	synth with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  3).	0.09343791008	8
Coq.Reals.RIneq.Rnot_lt_ge	40	0.2.1.0	synth with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.0349161624908	7
Coq.Reals.RIneq.Rlt_not_le	40
Coq.Reals.RIneq.Rgt_not_le	40	2.0	synth with cache (only 1: intros; only 1: auto with real).	0.131889104843	41
Coq.Reals.RIneq.Rlt_not_ge	40
Coq.Reals.RIneq.Rgt_not_ge	40	3.0	synth with cache (only 1: intros; only 1: auto with real).	0.0461299419403	19
Coq.Reals.RIneq.Rle_not_lt	40	0.0.0.2	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: unfold not; only 1: intuition eauto  3).	0.142215967178	55
Coq.Reals.RIneq.Rge_not_lt	40	0.0.0.0.1	synth with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).	0.0309979915619	6
Coq.Reals.RIneq.Rle_not_gt	40	0.0.0.8	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: unfold not; only 1: intuition eauto  3).	1.93295383453	324
Coq.Reals.RIneq.Rge_not_gt	40	0.2.0	synth with cache (only 1: intros; only 1: apply Rle_not_lt; only 1: auto with real).	0.0463869571686	14
Coq.Reals.RIneq.Req_le	40	0.0	synth with cache (only 1: unfold Rle; only 1: intuition eauto  3).	0.0261070728302	2
Coq.Reals.RIneq.Req_ge	40	0.0.0	synth with cache (only 1: intros; only 1: red; only 1: tauto).	0.0296938419342	3
Coq.Reals.RIneq.Req_le_sym	40	1.0	synth with cache (only 1: unfold Rle; only 1: intuition eauto  3).	0.0295579433441	3
Coq.Reals.RIneq.Req_ge_sym	40	1.0	synth with cache (only 1: unfold Rge; only 1: intuition eauto  3).	0.0276660919189	3
Coq.Reals.RIneq.Rgt_asym	40	0.1.1.2	synth with cache (only 1: intros; only 1: apply Rle_not_lt; only 1: red; only 1: tauto).	0.0348691940308	8
Coq.Reals.RIneq.Rle_antisym	40	0.0.6.3	synth with cache (only 1: do 2 intro; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: unfold Rle; only 1: intuition).	1.51537394524	398
Coq.Reals.RIneq.Rge_antisym	40	3.1.0	synth with cache (only 1: unfold Rge; only 1: intuition eauto  3; only 1: intuition).	0.294746875763	12
Coq.Reals.RIneq.Rle_le_eq	40	1.2.0.0	synth with cache (only 1: intros r1 r2; only 1: red; only 1: unfold Rle; only 1: intuition).	0.0768511295319	7
Coq.Reals.RIneq.Rge_ge_eq	40	3.1.0	synth with cache (only 1: unfold Rge; only 1: intuition eauto  3; only 1: intuition).	0.0733640193939	7
Coq.Reals.RIneq.Rlt_eq_compat	40	0.5.7.3.6	synth with cache (only 1: intros r1 r2 H H0; only 1: intuition; only 1: generalize (total_order_T r1 r2); only 1: subst; only 1: tauto).	2.23338294029	1855
Coq.Reals.RIneq.Rgt_eq_compat	40	0.1.9.1	synth with cache (only 1: intuition eauto  3; only 1: generalize (Rlt_asym r1 r2); only 1: subst; only 1: auto with real).	1.95059323311	739
Coq.Reals.RIneq.Rle_trans	40
Coq.Reals.RIneq.Rge_trans	40
Coq.Reals.RIneq.Rgt_trans	40	3.0.17	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intros; only 1: eauto using Rnot_lt_le with rorders).	3.45984601974	2447
Coq.Reals.RIneq.Rle_lt_trans	40	1.0.5	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	1.07163000107	141
Coq.Reals.RIneq.Rlt_le_trans	40	1.0.3	synth with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.455192089081	86
Coq.Reals.RIneq.Rge_gt_trans	40
Coq.Reals.RIneq.Rgt_ge_trans	40	0.13.10.6	synth with cache (only 1: unfold Rge; only 1: red; only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  3).	37.3444459438	25586
Coq.Reals.RIneq.Rlt_dec	40	0.1.1.9.0	synth with cache (only 1: intros; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition; only 1: generalize (total_order_T r1 r2); only 1: tauto).	7.72774505615	1992
Coq.Reals.RIneq.Rle_dec	40	0.5.0.0.0.1	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: unfold not; only 1: intuition eauto  3; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  3).	9.77806806564	491
Coq.Reals.RIneq.Rgt_dec	40
Coq.Reals.RIneq.Rge_dec	40	2.6.0.8.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	8.94423484802	1546
Coq.Reals.RIneq.Rlt_le_dec	40	1.2.0.3	synth with cache (only 1: unfold Rle; only 1: intuition eauto  3; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  3).	2.39532899857	72
Coq.Reals.RIneq.Rgt_ge_dec	40
Coq.Reals.RIneq.Rle_lt_dec	40	0.2.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  4 with real).	0.112454891205	5
Coq.Reals.RIneq.Rge_gt_dec	40	0.1.0.1.1.0	synth with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.185569047928	50
Coq.Reals.RIneq.Rlt_or_le	40	1.2.0.0	synth with cache (only 1: intros; only 1: unfold Rle; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  3).	0.0584759712219	7
Coq.Reals.RIneq.Rgt_or_ge	40	0.1.0.0.3.1	synth with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: left; only 1: eauto with rorders; only 1: right; only 1: eauto with rorders).	0.146723985672	68
Coq.Reals.RIneq.Rle_or_lt	40	0.2.0.1	synth with cache (only 1: intros; only 1: unfold Rle; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.885812997818	112
Coq.Reals.RIneq.Rge_or_gt	40	0.1.0.1.0.0	synth with cache (only 1: intros; only 1: edestruct Rlt_or_le; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.138782978058	47
Coq.Reals.RIneq.Rle_lt_or_eq_dec	40	0.8.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  4 with real).	1.84039783478	92
Coq.Reals.RIneq.inser_trans_R	40
Coq.Reals.RIneq.Rplus_0_r	40	0.0.0.13.0	synth with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_0; only 1: apply CReal_plus_0_l).	24.9543998241	780
Coq.Reals.RIneq.Rplus_ne	40	13	synth with cache (only 1: intuition).	0.18692111969	190
Coq.Reals.RIneq.Rplus_opp_l	40	7.0	synth with cache (only 1: intros; only 1: ring).	3.12530517578	33
Coq.Reals.RIneq.Rplus_opp_r_uniq	40
Coq.Reals.RIneq.Rplus_eq_compat_l	40	7.0.0	synth with cache (only 1: intros x y H; only 1: replace y with (- x + x + y) by ring; only 1: intuition eauto  4 with real).	0.0587780475616	17
Coq.Reals.RIneq.Rplus_eq_compat_r	40	2.1.0.0.2	synth with cache (only 1: intro; only 1: intros x y H; only 1: replace y with (- x + x + y) by ring; only 1: rewrite H; only 1: ring).	3.86528396606	94
Coq.Reals.RIneq.Rplus_eq_reg_l	40
Coq.Reals.RIneq.Rplus_eq_reg_r	40
Coq.Reals.RIneq.Rplus_0_r_uniq	40	0.1.0.0.0	synth with cache (only 1: intros x y H; only 1: replace y with (- x + x + y) by ring; only 1: rewrite Rplus_assoc; only 1: rewrite H; only 1: ring).	0.0482919216156	6
Coq.Reals.RIneq.Rplus_eq_0_l	40
Coq.Reals.RIneq.Rplus_eq_R0	40	2.0.0.4.0.0.1.0.0.0	synth with cache (only 1: intros a b H [H0| H0] H1; only 1: absurd (0 < a + b); only 1: rewrite H1; only 1: auto with real; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: auto using Rplus_lt_compat_l with real; only 1: auto using Rplus_lt_compat_l with real; only 1: rewrite <- H0, Rplus_0_r in H1; only 1: auto with real).	6.73447418213	1739
Coq.Reals.RIneq.Rinv_r	40
Coq.Reals.RIneq.Rinv_l_sym	40	0.0.1	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.0386290550232	4
Coq.Reals.RIneq.Rinv_r_sym	40	0.0.1	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.0390830039978	4
Coq.Reals.RIneq.Rmult_0_r	40	1.0	synth with cache (only 1: intros; only 1: field).	0.0535070896149	16
Coq.Reals.RIneq.Rmult_0_l	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0243980884552	2
Coq.Reals.RIneq.Rmult_ne	40	2.2.0.7	synth with cache (only 1: constructor; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l; only 1: apply Rmult_1_l).	6.68730711937	1034
Coq.Reals.RIneq.Rmult_1_r	40	0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l).	0.48860001564	17
Coq.Reals.RIneq.Rmult_eq_compat_l	40	10	synth with cache (only 1: intuition).	17.5013408661	231
Coq.Reals.RIneq.Rmult_eq_compat_r	40
Coq.Reals.RIneq.Rmult_eq_reg_l	40
Coq.Reals.RIneq.Rmult_eq_reg_r	40
Coq.Reals.RIneq.Rmult_integral	40
Coq.Reals.RIneq.Rmult_eq_0_compat	40
Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	8	synth with cache (only 1: auto with real).	0.243222951889	107
Coq.Reals.RIneq.Rmult_eq_0_compat_l	40	0.7.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: auto with real).	0.232501983643	112
Coq.Reals.RIneq.Rmult_neq_0_reg	40	13.7.9.3	synth with cache (only 1: intro; only 1: split; only 1: auto with real; only 1: auto with real).	26.516559124	15419
Coq.Reals.RIneq.Rmult_integral_contrapositive	40
Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	40	7.1	synth with cache (only 1: intros; only 1: auto with real).	0.593351840973	106
Coq.Reals.RIneq.Rmult_plus_distr_r	40	3.2.1.0.1	synth with cache (only 1: intros m n p; only 1: rewrite Rmult_comm; only 1: rewrite (Rmult_comm n p); only 1: rewrite (Rmult_comm m p); only 1: apply Rmult_plus_distr_l).	32.9649438858	914
Coq.Reals.RIneq.Rsqr_0	40
Coq.Reals.RIneq.Rsqr_0_uniq	40
Coq.Reals.RIneq.Ropp_eq_compat	40	2.3	synth with cache (only 1: intros; only 1: intuition eauto  4 with real).	0.0506479740143	7
Coq.Reals.RIneq.Ropp_0	40	4	synth with cache (only 1: ring).	0.866597175598	19
Coq.Reals.RIneq.Ropp_eq_0_compat	40	0.5.1	synth with cache (only 1: intros; only 1: rewrite H; only 1: ring).	0.134553194046	41
Coq.Reals.RIneq.Ropp_involutive	40	3.0	synth with cache (only 1: intros; only 1: ring).	0.578867912292	11
Coq.Reals.RIneq.Ropp_neq_0_compat	40
Coq.Reals.RIneq.Ropp_plus_distr	40	2.1	synth with cache (only 1: intros; only 1: ring).	0.0350420475006	5
Coq.Reals.RIneq.Ropp_mult_distr_l	40	5.0	synth with cache (only 1: intros; only 1: ring).	2.31442594528	24
Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0312399864197	2
Coq.Reals.RIneq.Rmult_opp_opp	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0331559181213	2
Coq.Reals.RIneq.Ropp_mult_distr_r	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0342497825623	2
Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0312550067902	2
Coq.Reals.RIneq.Rminus_0_r	40	8.0.10	synth with cache (only 1: intros; only 1: unfold IZR, IPR; only 1: ring).	0.535989046097	335
Coq.Reals.RIneq.Rminus_0_l	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.029679775238	2
Coq.Reals.RIneq.Ropp_minus_distr	40	0.1	synth with cache (only 1: intros; only 1: ring).	0.0518770217896	3
Coq.Reals.RIneq.Ropp_minus_distr'	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0525100231171	2
Coq.Reals.RIneq.Rminus_diag_eq	40
Coq.Reals.RIneq.Rminus_diag_uniq	40
Coq.Reals.RIneq.Rminus_diag_uniq_sym	40
Coq.Reals.RIneq.Rplus_minus	40	0.0.1	synth with cache (only 1: unfold Rminus; only 1: intros; only 1: ring).	0.0341339111328	4
Coq.Reals.RIneq.Rminus_eq_contra	40	7.0.1.0	synth with cache (only 1: intros; only 1: unfold Rminus; only 1: intro; only 1: auto with real).	0.940937995911	400
Coq.Reals.RIneq.Rminus_not_eq	40	1.0.0.0	synth with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply H; only 1: auto with real).	0.0460710525513	5
Coq.Reals.RIneq.Rminus_not_eq_right	40	2.3.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: apply Rminus_diag_eq; only 1: auto).	0.0603108406067	12
Coq.Reals.RIneq.Rmult_minus_distr_l	40	8.1	synth with cache (only 1: intros; only 1: ring).	2.65414500237	123
Coq.Reals.RIneq.Rinv_1	40
Coq.Reals.RIneq.Rinv_neq_0_compat	40
Coq.Reals.RIneq.Rinv_involutive	40	0.3.1	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.20481300354	23
Coq.Reals.RIneq.Rinv_mult_distr	40
Coq.Reals.RIneq.Ropp_inv_permute	40	0.0.1	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.0449728965759	4
Coq.Reals.RIneq.Rinv_r_simpl_r	40	0.0.1	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.0458421707153	4
Coq.Reals.RIneq.Rinv_r_simpl_l	40	0.0.3.0.0	synth with cache (only 1: intros; only 1: transitivity (1 * r2); only 1: field; only 1: trivial; only 1: auto with real).	0.156947135925	16
Coq.Reals.RIneq.Rinv_r_simpl_m	40	0.0.5.0.0	synth with cache (only 1: intros; only 1: transitivity (r2 * 1); only 1: field; only 1: trivial; only 1: auto with real).	0.834532976151	129
Coq.Reals.RIneq.Rinv_mult_simpl	40
Coq.Reals.RIneq.Rplus_gt_compat_l	40	2	synth with cache (only 1: intuition).	0.0338749885559	11
Coq.Reals.RIneq.Rplus_lt_compat_r	40
Coq.Reals.RIneq.Rplus_gt_compat_r	40	3	synth with cache (only 1: intuition).	0.0280339717865	11
Coq.Reals.RIneq.Rplus_le_compat_l	40	0.3.4.3	synth with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  4 with real).	3.05179810524	931
Coq.Reals.RIneq.Rplus_ge_compat_l	40
Coq.Reals.RIneq.Rplus_le_compat_r	40	0.2.2.6.1.0.0	synth with cache (only 1: unfold Rle; only 1: intros; only 1: elim H; only 1: auto with zarith real; only 1: right; only 1: rewrite <- H0; only 1: auto with zarith real).	23.6463439465	9204
Coq.Reals.RIneq.Rplus_ge_compat_r	40	13.4.3.2	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).	2.45823287964	2158
Coq.Reals.RIneq.Rplus_lt_compat	40
Coq.Reals.RIneq.Rplus_le_compat	40
Coq.Reals.RIneq.Rplus_gt_compat	40	5	synth with cache (only 1: intuition).	0.0378489494324	23
Coq.Reals.RIneq.Rplus_ge_compat	40
Coq.Reals.RIneq.Rplus_lt_le_compat	40
Coq.Reals.RIneq.Rplus_le_lt_compat	40
Coq.Reals.RIneq.Rplus_gt_ge_compat	40
Coq.Reals.RIneq.Rplus_ge_gt_compat	40
Coq.Reals.RIneq.Rplus_lt_0_compat	40
Coq.Reals.RIneq.Rplus_le_lt_0_compat	40	0.3.0.0.8.3	synth with cache (only 1: intros a b; only 1: intros; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: assumption; only 1: auto using Rplus_lt_compat_l with real).	16.514975071	11073
Coq.Reals.RIneq.Rplus_lt_le_0_compat	40
Coq.Reals.RIneq.Rplus_le_le_0_compat	40
Coq.Reals.RIneq.sum_inequa_Rle_lt	40	4.1.1	synth with cache (only 1: intros x y; only 1: intros n m p q; only 1: intuition eauto  4 with real).	0.657297849655	97
Coq.Reals.RIneq.Rplus_lt_reg_l	40
Coq.Reals.RIneq.Rplus_lt_reg_r	40
Coq.Reals.RIneq.Rplus_le_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_l	40
Coq.Reals.RIneq.Rplus_ge_reg_l	40	6.1.2.0.2.3.50	synth with cache (only 1: intro y; only 1: intros; only 1: edestruct Rlt_le_dec; only 1: left; only 1: eauto with rorders; only 1: right; only 1: eauto with real).	21.1482551098	22002
Coq.Reals.RIneq.Rplus_le_reg_pos_r	40
Coq.Reals.RIneq.Rplus_lt_reg_pos_r	40
Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_neg_r	40
Coq.Reals.RIneq.Ropp_gt_lt_contravar	40
Coq.Reals.RIneq.Ropp_lt_gt_contravar	40	3	synth with cache (only 1: intuition).	0.0738911628723	30
Coq.Reals.RIneq.Ropp_lt_contravar	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp, Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	0.0518710613251	8
Coq.Reals.RIneq.Ropp_gt_contravar	40	4.1.0	synth with cache (only 1: intros; only 1: unfold Rgt; only 1: intuition).	1.17050790787	34
Coq.Reals.RIneq.Ropp_le_ge_contravar	40	0.4.4.1	synth with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  4 with real).	1.82866811752	407
Coq.Reals.RIneq.Ropp_ge_le_contravar	40	0.1.0.0	synth with cache (only 1: unfold Rge; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).	0.0320329666138	5
Coq.Reals.RIneq.Ropp_le_contravar	40	0.0.0.0	synth with cache (only 1: unfold Rle; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).	0.0661311149597	4
Coq.Reals.RIneq.Ropp_ge_contravar	40	0.0.0.0	synth with cache (only 1: unfold Rge; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).	0.0638201236725	4
Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40
Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0281310081482	4
Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0260047912598	4
Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0313849449158	4
Coq.Reals.RIneq.Ropp_0_le_ge_contravar	40
Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0271780490875	4
Coq.Reals.RIneq.Ropp_lt_cancel	40
Coq.Reals.RIneq.Ropp_gt_cancel	40	1.1.1	synth with cache (only 1: intros; only 1: unfold Rgt; only 1: auto with real).	0.0235588550568	6
Coq.Reals.RIneq.Ropp_le_cancel	40
Coq.Reals.RIneq.Ropp_ge_cancel	40
Coq.Reals.RIneq.Rmult_lt_compat_r	40
Coq.Reals.RIneq.Rmult_gt_compat_r	40	3.1.0.0.1	synth with cache (only 1: red; only 1: intros; only 1: rewrite (Rmult_comm r2 r); only 1: rewrite (Rmult_comm r1 r); only 1: auto with real).	0.271836042404	68
Coq.Reals.RIneq.Rmult_gt_compat_l	40	3.1.2	synth with cache (only 1: red; only 1: intros; only 1: auto with real).	0.274960041046	53
Coq.Reals.RIneq.Rmult_le_compat_l	40
Coq.Reals.RIneq.Rmult_le_compat_r	40
Coq.Reals.RIneq.Rmult_ge_compat_l	40
Coq.Reals.RIneq.Rmult_ge_compat_r	40
Coq.Reals.RIneq.Rmult_le_compat	40
Coq.Reals.RIneq.Rmult_ge_compat	40
Coq.Reals.RIneq.Rmult_gt_0_lt_compat	40
Coq.Reals.RIneq.Rmult_le_0_lt_compat	40
Coq.Reals.RIneq.Rmult_lt_0_compat	40
Coq.Reals.RIneq.Rmult_le_compat_neg_l	40
Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	40	0.2.0.2.0	synth with cache (only 1: intros; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).	0.0940351486206	36
Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_r	40
Coq.Reals.RIneq.Rmult_gt_reg_l	40	6.0.1.0	synth with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: auto with real).	0.195744991302	91
Coq.Reals.RIneq.Rmult_le_reg_l	40
Coq.Reals.RIneq.Rmult_le_reg_r	40
Coq.Reals.RIneq.Rlt_minus	40
Coq.Reals.RIneq.Rgt_minus	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r).	0.0342679023743	4
Coq.Reals.RIneq.Rlt_Rminus	40
Coq.Reals.RIneq.Rle_minus	40	0.0.4.1.6.0	synth with cache (only 1: intro r; only 1: unfold Rle; only 1: intros; only 1: elim H; only 1: auto with real; only 1: auto with real).	8.88652801514	1929
Coq.Reals.RIneq.Rge_minus	40	0.0.0.0.4.4.3.2	synth with cache (only 1: intros; only 1: red; only 1: elim H; only 1: left; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r; only 1: auto with real).	14.9054169655	8244
Coq.Reals.RIneq.Rminus_lt	40
Coq.Reals.RIneq.Rminus_gt	40	0.0.1.11.2.0.0	synth with cache (only 1: intros; only 1: apply (Rplus_lt_reg_l r2); only 1: replace r2 with (0 + r2); only 1: replace r1 with (r1 - r2 + r2); only 1: auto with real; only 1: ring; only 1: auto with real).	24.3643229008	8811
Coq.Reals.RIneq.Rminus_gt_0_lt	40
Coq.Reals.RIneq.Rminus_le	40
Coq.Reals.RIneq.Rminus_ge	40
Coq.Reals.RIneq.tech_Rplus	40
Coq.Reals.RIneq.Rle_0_sqr	40
Coq.Reals.RIneq.Rlt_0_sqr	40
Coq.Reals.RIneq.Rplus_sqr_eq_0_l	40
Coq.Reals.RIneq.Rplus_sqr_eq_0	40
Coq.Reals.RIneq.Rlt_0_1	40	0.3.4	synth with cache (only 1: replace 1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.0706100463867	12
Coq.Reals.RIneq.Rle_0_1	40	15	synth with cache (only 1: auto with real).	0.134527921677	97
Coq.Reals.RIneq.Rinv_0_lt_compat	40
Coq.Reals.RIneq.Rinv_lt_0_compat	40	0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: red; only 1: intros; only 1: absurd (1 <= 0); only 1: auto with real; only 1: replace 1 with (r * / r); only 1: replace 0 with (r * 0); only 1: auto with real; only 1: auto with real; only 1: auto with real).	1.88046312332	526
Coq.Reals.RIneq.Rinv_lt_contravar	40
Coq.Reals.RIneq.Rinv_1_lt_contravar	40
Coq.Reals.RIneq.Rle_lt_0_plus_1	40
Coq.Reals.RIneq.Rlt_plus_1	40	5.0	synth with cache (only 1: intro; only 1: apply Rlt_n_Sn).	0.106566905975	56
Coq.Reals.RIneq.tech_Rgt_minus	40
Coq.Reals.RIneq.S_INR	40	3.3.1	synth with cache (only 1: destruct n; only 1: auto with real; only 1: auto with real).	0.0423009395599	12
Coq.Reals.RIneq.S_O_plus_INR	40
Coq.Reals.RIneq.plus_INR	40
Coq.Reals.RIneq.minus_INR	40
Coq.Reals.RIneq.mult_INR	40
Coq.Reals.RIneq.pow_INR	40
Coq.Reals.RIneq.lt_0_INR	40
Coq.Reals.RIneq.lt_INR	40
Coq.Reals.RIneq.lt_1_INR	40
Coq.Reals.RIneq.pos_INR_nat_of_P	40
Coq.Reals.RIneq.pos_INR	40
Coq.Reals.RIneq.INR_lt	40
Coq.Reals.RIneq.le_INR	40	3.9	synth with cache (only 1: fix le_div2 1; only 1: auto with real).	1.32956385612	624
Coq.Reals.RIneq.INR_not_0	40	0.7.3.0.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: rewrite H0; only 1: auto with real).	3.84721398354	1109
Coq.Reals.RIneq.not_0_INR	40
Coq.Reals.RIneq.not_INR	40
Coq.Reals.RIneq.INR_eq	40
Coq.Reals.RIneq.INR_le	40	3.0.11	synth with cache (only 1: fix le_div2 1; only 1: intros; only 1: auto with real).	1.41929888725	1165
Coq.Reals.RIneq.not_1_INR	40
Coq.Reals.RIneq.IZN	40	0.1.0.41	synth with cache (only 1: intros x Px; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	3.09593486786	7411
Coq.Reals.RIneq.INR_IPR	40
Coq.Reals.RIneq.INR_IZR_INZ	40
Coq.Reals.RIneq.plus_IZR_NEG_POS	40
Coq.Reals.RIneq.plus_IZR	40
Coq.Reals.RIneq.mult_IZR	40
Coq.Reals.RIneq.pow_IZR	40
Coq.Reals.RIneq.succ_IZR	40	2.3.0.0.0.4.2.0.0	synth with cache (only 1: intro t; only 1: destruct t; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: rewrite <- 3!INR_IPR, Pos2Nat.inj_add; only 1: apply plus_INR; only 1: rewrite Rplus_comm; only 1: apply plus_IZR_NEG_POS).	2.91664505005	1675
Coq.Reals.RIneq.opp_IZR	40	5.0.0.1.1.7	synth with cache (only 1: intro t; only 1: case t; only 1: auto with real; only 1: auto with real; only 1: unfold IZR; only 1: auto with real).	1.32755994797	603
Coq.Reals.RIneq.minus_IZR	40
Coq.Reals.RIneq.Z_R_minus	40
Coq.Reals.RIneq.lt_0_IZR	40
Coq.Reals.RIneq.lt_IZR	40
Coq.Reals.RIneq.eq_IZR_R0	40
Coq.Reals.RIneq.eq_IZR	40
Coq.Reals.RIneq.not_0_IZR	40
Coq.Reals.RIneq.le_0_IZR	40
Coq.Reals.RIneq.le_IZR	40
Coq.Reals.RIneq.le_IZR_R1	40
Coq.Reals.RIneq.IZR_ge	40
Coq.Reals.RIneq.IZR_le	40
Coq.Reals.RIneq.IZR_lt	40
Coq.Reals.RIneq.IZR_neq	40
Coq.Reals.RIneq.one_IZR_lt1	40
Coq.Reals.RIneq.one_IZR_r_R1	40
Coq.Reals.RIneq.single_z_r_R1	40
Coq.Reals.RIneq.tech_single_z_r_R1	40
Coq.Reals.RIneq.Rmult_le_pos	40	1.1.2.1.1.0.0.0.0.7.0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: destruct H0; only 1: replace 0 with (0 * r2); only 1: unfold Rle; only 1: auto with real; only 1: auto with real; only 1: unfold Rle; only 1: right; only 1: symmetry; only 1: auto with real; only 1: destruct H; only 1: auto with real).	39.8896610737	15244
Coq.Reals.RIneq.Rinv_le_contravar	40
Coq.Reals.RIneq.Rle_Rinv	40
Coq.Reals.RIneq.Ropp_div	40
Coq.Reals.RIneq.double	40	6.6	synth with cache (only 1: intros; only 1: ring).	0.128288984299	92
Coq.Reals.RIneq.double_var	40
Coq.Reals.RIneq.R_rm	40
Coq.Reals.RIneq.Zeq_bool_IZR	40
Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	40	1.0.2.0	synth with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 * r3); only 1: auto with real; only 1: auto with real).	0.164040088654	53
Coq.Reals.RIneq.le_epsilon	40
Coq.Reals.RIneq.completeness_weak	40
Coq.Reals.RIneq.Rdiv_lt_0_compat	40
Coq.Reals.RIneq.Rdiv_plus_distr	40
Coq.Reals.RIneq.Rdiv_minus_distr	40	2.0.7.8	synth with cache (only 1: unfold Z.sub, Rminus; only 1: intros x y H; only 1: unfold Rdiv; only 1: ring).	2.00388121605	1941
Coq.Reals.RIneq.Req_EM_T	40	0.0.12.9	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	16.7439160347	1855
Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40
Coq.Reals.ClassicalDedekindReals.lowerCutBelow	40
Coq.Reals.ClassicalDedekindReals.lowerCutAbove	40
Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40
Coq.Reals.ClassicalDedekindReals.DRealQlim	40
Coq.Reals.ClassicalDedekindReals.DRealAbstr	40
Coq.Reals.ClassicalDedekindReals.UpperAboveLower	40
Coq.Reals.ClassicalDedekindReals.DRealRepr	40
Coq.Reals.ClassicalDedekindReals.Rle_antisym	40
Coq.Reals.ClassicalDedekindReals.lowerUpper	40
Coq.Reals.ClassicalDedekindReals.DRealOpen	40
Coq.Reals.ClassicalDedekindReals.DRealReprQ	40
Coq.Reals.ClassicalDedekindReals.DRealReprQup	40
Coq.Reals.ClassicalDedekindReals.DRealQuot1	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	40
Coq.Reals.ClassicalDedekindReals.DRealQuot2	40
Coq.Reals.ArithProp.minus_neq_O	40
Coq.Reals.ArithProp.le_minusni_n	40
Coq.Reals.ArithProp.lt_minus_O_lt	40	1.2.7	synth with cache (only 1: intros n m H; only 1: apply Nat.lt_add_lt_sub_r; only 1: now Nat.nzsimpl).	0.144545078278	62
Coq.Reals.ArithProp.even_odd_cor	40
Coq.Reals.ArithProp.le_double	40
Coq.Reals.ArithProp.euclidian_division	40
Coq.Reals.ArithProp.tech8	40	3.0	synth with cache (only 1: intros Hq Hr; only 1: auto with arith).	0.0132398605347	5
Coq.Reals.R_Ifp.tech_up	40
Coq.Reals.R_Ifp.up_tech	40
Coq.Reals.R_Ifp.fp_R0	40
Coq.Reals.R_Ifp.for_base_fp	40
Coq.Reals.R_Ifp.base_fp	40
Coq.Reals.R_Ifp.base_Int_part	40
Coq.Reals.R_Ifp.Int_part_INR	40
Coq.Reals.R_Ifp.fp_nat	40	10.2	synth with cache (only 1: intros; only 1: eauto with real).	2.93639302254	1332
Coq.Reals.R_Ifp.R0_fp_O	40
Coq.Reals.R_Ifp.Rminus_Int_part1	40
Coq.Reals.R_Ifp.Rminus_Int_part2	40
Coq.Reals.R_Ifp.Rminus_fp1	40
Coq.Reals.R_Ifp.Rminus_fp2	40
Coq.Reals.R_Ifp.plus_Int_part1	40
Coq.Reals.R_Ifp.plus_Int_part2	40
Coq.Reals.R_Ifp.plus_frac_part1	40
Coq.Reals.R_Ifp.plus_frac_part2	40
Coq.Reals.Machin.atan_sub_correct	40
Coq.Reals.Machin.tech	40
Coq.Reals.Machin.Machin_2_3	40
Coq.Reals.Machin.Machin_4_5_239	40
Coq.Reals.Machin.Machin_2_3_7	40
Coq.Reals.Machin.PI_2_3_7_ineq	40
Coq.Reals.RiemannInt.phi_sequence_prop	40
Coq.Reals.RiemannInt.RiemannInt_P1	40
Coq.Reals.RiemannInt.RiemannInt_P2	40
Coq.Reals.RiemannInt.RiemannInt_P3	40
Coq.Reals.RiemannInt.RiemannInt_exists	40
Coq.Reals.RiemannInt.RiemannInt_P4	40
Coq.Reals.RiemannInt.RinvN_pos	40	20.3	synth with cache (only 1: intros n1; only 1: auto with real).	6.68989396095	2867
Coq.Reals.RiemannInt.RinvN_cv	40
Coq.Reals.RiemannInt.Riemann_integrable_ext	40
Coq.Reals.RiemannInt.RiemannInt_P5	40
Coq.Reals.RiemannInt.maxN	40
Coq.Reals.RiemannInt.Heine_cor1	40
Coq.Reals.RiemannInt.Heine_cor2	40
Coq.Reals.RiemannInt.SubEqui_P1	40	15.1	synth with cache (only 1: intros; only 1: split).	0.849903106689	264
Coq.Reals.RiemannInt.SubEqui_P2	40
Coq.Reals.RiemannInt.SubEqui_P3	40
Coq.Reals.RiemannInt.SubEqui_P4	40
Coq.Reals.RiemannInt.SubEqui_P5	40
Coq.Reals.RiemannInt.SubEqui_P6	40
Coq.Reals.RiemannInt.SubEqui_P7	40
Coq.Reals.RiemannInt.SubEqui_P8	40
Coq.Reals.RiemannInt.SubEqui_P9	40
Coq.Reals.RiemannInt.RiemannInt_P6	40
Coq.Reals.RiemannInt.RiemannInt_P7	40
Coq.Reals.RiemannInt.continuity_implies_RiemannInt	40
Coq.Reals.RiemannInt.RiemannInt_P8	40
Coq.Reals.RiemannInt.RiemannInt_P9	40
Coq.Reals.RiemannInt.RiemannInt_P10	40
Coq.Reals.RiemannInt.RiemannInt_P11	40
Coq.Reals.RiemannInt.RiemannInt_P12	40
Coq.Reals.RiemannInt.RiemannInt_P13	40
Coq.Reals.RiemannInt.RiemannInt_P14	40
Coq.Reals.RiemannInt.RiemannInt_P15	40
Coq.Reals.RiemannInt.RiemannInt_P16	40
Coq.Reals.RiemannInt.Rle_cv_lim	40
Coq.Reals.RiemannInt.RiemannInt_P17	40
Coq.Reals.RiemannInt.RiemannInt_P18	40
Coq.Reals.RiemannInt.RiemannInt_P19	40
Coq.Reals.RiemannInt.FTC_P1	40
Coq.Reals.RiemannInt.RiemannInt_P20	40
Coq.Reals.RiemannInt.RiemannInt_P21	40
Coq.Reals.RiemannInt.RiemannInt_P22	40
Coq.Reals.RiemannInt.RiemannInt_P23	40
Coq.Reals.RiemannInt.RiemannInt_P24	40
Coq.Reals.RiemannInt.RiemannInt_P25	40
Coq.Reals.RiemannInt.RiemannInt_P26	40
Coq.Reals.RiemannInt.RiemannInt_P27	40
Coq.Reals.RiemannInt.RiemannInt_P28	40
Coq.Reals.RiemannInt.RiemannInt_P29	40
Coq.Reals.RiemannInt.RiemannInt_P30	40
Coq.Reals.RiemannInt.RiemannInt_P31	40
Coq.Reals.RiemannInt.RiemannInt_P32	40
Coq.Reals.RiemannInt.RiemannInt_P33	40
Coq.Reals.RiemannInt.FTC_Riemann	40
Coq.Reals.RiemannInt.RiemannInt_const_bound	40
Coq.Reals.RiemannInt.Riemann_integrable_scal	40
Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40
Coq.Reals.Ranalysis2.formule	40
Coq.Reals.Ranalysis2.maj_term1	40
Coq.Reals.Ranalysis2.maj_term2	40
Coq.Reals.Ranalysis2.maj_term3	40
Coq.Reals.Ranalysis2.maj_term4	40
Coq.Reals.Ranalysis2.D_x_no_cond	40
Coq.Reals.Ranalysis2.Rabs_4	40
Coq.Reals.Ranalysis2.Rlt_4	40
Coq.Reals.Ranalysis2.quadruple	40	1.0	synth with cache (only 1: intros; only 1: field).	0.28133893013	3
Coq.Reals.Ranalysis2.quadruple_var	40	1.1.6	synth with cache (only 1: unfold Rdiv; only 1: intro eps; only 1: field).	0.38486289978	30
Coq.Reals.Ranalysis2.continuous_neq_0	40
Coq.Reals.Rtopology.interior_P1	40
Coq.Reals.Rtopology.interior_P2	40	5.0.0	synth with cache (only 1: intros; only 1: unfold included; only 1: assumption).	0.0576980113983	32
Coq.Reals.Rtopology.adherence_P1	40
Coq.Reals.Rtopology.included_trans	40	0.1.2	synth with cache (only 1: unfold included; only 1: intros r1 r2 P H1 H2; only 1: auto).	0.0303719043732	33
Coq.Reals.Rtopology.interior_P3	40
Coq.Reals.Rtopology.complementary_P1	40
Coq.Reals.Rtopology.adherence_P2	40
Coq.Reals.Rtopology.adherence_P3	40
Coq.Reals.Rtopology.open_set_P1	40
Coq.Reals.Rtopology.closed_set_P1	40
Coq.Reals.Rtopology.neighbourhood_P1	40	3.13.0	synth with cache (only 1: unfold included; only 1: intros f x l a df; only 1: firstorder).	1.58941102028	1337
Coq.Reals.Rtopology.open_set_P2	40	2.1.7	synth with cache (only 1: intros x y H; only 1: unfold open_set, interior; only 1: firstorder).	0.652515888214	286
Coq.Reals.Rtopology.open_set_P3	40
Coq.Reals.Rtopology.open_set_P4	40	10.34	synth with cache (only 1: intros H1; only 1: tauto).	0.649332046509	1119
Coq.Reals.Rtopology.open_set_P5	40	1.1.8.19.1.10.46	synth with cache (only 1: intro Hz; only 1: unfold neighbourhood; only 1: unfold included; only 1: exists {| pos := 1; cond_pos := Rlt_0_1 |}; only 1: clear H; only 1: intros H _; only 1: trivial).	16.8764140606	42355
Coq.Reals.Rtopology.disc_P1	40
Coq.Reals.Rtopology.continuity_P1	40
Coq.Reals.Rtopology.continuity_P2	40
Coq.Reals.Rtopology.continuity_P3	40
Coq.Reals.Rtopology.Rsepare	40
Coq.Reals.Rtopology.restriction_family	40
Coq.Reals.Rtopology.family_P1	40
Coq.Reals.Rtopology.open_set_P6	40
Coq.Reals.Rtopology.compact_P1	40
Coq.Reals.Rtopology.compact_P2	40
Coq.Reals.Rtopology.compact_EMP	40
Coq.Reals.Rtopology.compact_eqDom	40
Coq.Reals.Rtopology.compact_P3	40
Coq.Reals.Rtopology.compact_P4	40
Coq.Reals.Rtopology.compact_P5	40
Coq.Reals.Rtopology.compact_carac	40
Coq.Reals.Rtopology.continuity_compact	40
Coq.Reals.Rtopology.prolongement_C0	40
Coq.Reals.Rtopology.continuity_ab_maj	40
Coq.Reals.Rtopology.continuity_ab_min	40
Coq.Reals.Rtopology.ValAdh_un_exists	40
Coq.Reals.Rtopology.ValAdh_un_prop	40
Coq.Reals.Rtopology.adherence_P4	40	5.11.3	synth with cache (only 1: unfold included; only 1: intros A P h x; only 1: firstorder).	4.69109320641	5029
Coq.Reals.Rtopology.compact_P6	40
Coq.Reals.Rtopology.Bolzano_Weierstrass	40
Coq.Reals.Rtopology.is_lub_u	40	4.6.4.6.2.3.1	synth with cache (only 1: intuition eauto  2; only 1: destruct H; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real); only 1: case H0; only 1: eauto using Rle_trans, Rle_refl; only 1: case H0; only 1: eauto using Rle_trans, Rle_refl).	9.72036600113	6967
Coq.Reals.Rtopology.domain_P1	40
Coq.Reals.Rtopology.Heine	40
Coq.Reals.Raxioms.Rrepr_0	40
Coq.Reals.Raxioms.Rrepr_1	40
Coq.Reals.Raxioms.Rrepr_plus	40
Coq.Reals.Raxioms.Rrepr_opp	40
Coq.Reals.Raxioms.Rrepr_minus	40
Coq.Reals.Raxioms.Rrepr_mult	40
Coq.Reals.Raxioms.Rrepr_inv	40
Coq.Reals.Raxioms.Rrepr_le	40
Coq.Reals.Raxioms.Rrepr_appart	40
Coq.Reals.Raxioms.Rappart_repr	40
Coq.Reals.Raxioms.Rplus_comm	40
Coq.Reals.Raxioms.Rplus_assoc	40
Coq.Reals.Raxioms.Rplus_opp_r	40
Coq.Reals.Raxioms.Rplus_0_l	40
Coq.Reals.Raxioms.Rmult_comm	40
Coq.Reals.Raxioms.Rmult_assoc	40
Coq.Reals.Raxioms.Rinv_l	40
Coq.Reals.Raxioms.Rmult_1_l	40
Coq.Reals.Raxioms.R1_neq_R0	40
Coq.Reals.Raxioms.Rmult_plus_distr_l	40
Coq.Reals.Raxioms.Rlt_asym	40
Coq.Reals.Raxioms.Rlt_trans	40
Coq.Reals.Raxioms.Rplus_lt_compat_l	40
Coq.Reals.Raxioms.Rmult_lt_compat_l	40
Coq.Reals.Raxioms.Rrepr_INR	40
Coq.Reals.Raxioms.Rrepr_IPR2	40
Coq.Reals.Raxioms.Rrepr_IPR	40
Coq.Reals.Raxioms.Rrepr_IZR	40
Coq.Reals.Raxioms.archimed	40
Coq.Reals.Raxioms.completeness	40
Coq.Reals.Rseries.sequence.EUn_noempty	40
Coq.Reals.Rseries.sequence.Un_in_EUn	40
Coq.Reals.Rseries.sequence.Un_bound_imp	40
Coq.Reals.Rseries.sequence.growing_prop	40
Coq.Reals.Rseries.sequence.Un_cv_crit_lub	40
Coq.Reals.Rseries.sequence.Un_cv_crit	40
Coq.Reals.Rseries.sequence.finite_greater	40
Coq.Reals.Rseries.sequence.cauchy_bound	40
Coq.Reals.Rseries.GP_infinite	40
Coq.Reals.Rseries.CV_shift	40
Coq.Reals.Rseries.CV_shift'	40	0.0.6.2.0.0.0.0	synth with cache (only 1: intros f' k l cvfk eps ep; only 1: destruct (cvfk eps ep) as [N Pn]; only 1: exists (N + k)%nat; only 1: intros n nN; only 1: apply Pn; only 1: apply Nat.le_trans with (N + k)%nat; only 1: auto with arith; only 1: auto with arith).	1.36498594284	738
Coq.Reals.Rseries.Un_growing_shift	40	11.1.8	synth with cache (only 1: intros a b Ha Hb; only 1: Nat.nzsimpl; only 1: auto).	2.41286611557	1166
Coq.Reals.Binomial.pascal_step1	40
Coq.Reals.Binomial.pascal_step2	40
Coq.Reals.Binomial.pascal_step3	40
Coq.Reals.Binomial.pascal	40
Coq.Reals.Binomial.binomial	40
Coq.Reals.PSeries_reg.Boule_convex	40
Coq.Reals.PSeries_reg.boule_of_interval	40
Coq.Reals.PSeries_reg.boule_in_interval	40
Coq.Reals.PSeries_reg.Ball_in_inter	40
Coq.Reals.PSeries_reg.Boule_center	40
Coq.Reals.PSeries_reg.CVN_CVU	40
Coq.Reals.PSeries_reg.CVU_continuity	40
Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40
Coq.Reals.PSeries_reg.SFL_continuity_pt	40
Coq.Reals.PSeries_reg.SFL_continuity	40
Coq.Reals.PSeries_reg.CVN_R_CVS	40
Coq.Reals.PSeries_reg.CVU_cv	40
Coq.Reals.PSeries_reg.CVU_ext_lim	40
Coq.Reals.PSeries_reg.CVU_derivable	40
Coq.Reals.Ranalysis_reg.AppVar	40
Coq.Reals.MVT.MVT	40
Coq.Reals.MVT.MVT_cor1	40
Coq.Reals.MVT.MVT_cor2	40
Coq.Reals.MVT.MVT_cor3	40
Coq.Reals.MVT.Rolle	40
Coq.Reals.MVT.nonneg_derivative_1	40
Coq.Reals.MVT.nonpos_derivative_0	40
Coq.Reals.MVT.increasing_decreasing_opp	40	1.3.9.0.9	synth with cache (only 1: intro z; only 1: unfold opp_fct; only 1: intros m n; only 1: intros; only 1: auto with real).	1.79183483124	1816
Coq.Reals.MVT.nonpos_derivative_1	40
Coq.Reals.MVT.positive_derivative	40
Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	40	2.8.19	synth with cache (only 1: red; only 1: unfold continuity_pt, opp_fct; only 1: auto with real).	2.57805800438	3108
Coq.Reals.MVT.negative_derivative	40
Coq.Reals.MVT.null_derivative_0	40
Coq.Reals.MVT.increasing_decreasing	40
Coq.Reals.MVT.null_derivative_1	40
Coq.Reals.MVT.derive_increasing_interv_ax	40
Coq.Reals.MVT.derive_increasing_interv	40
Coq.Reals.MVT.derive_increasing_interv_var	40
Coq.Reals.MVT.IAF	40
Coq.Reals.MVT.IAF_var	40
Coq.Reals.MVT.null_derivative_loc	40
Coq.Reals.MVT.antiderivative_Ucte	40
Coq.Reals.MVT.MVT_abs	40
Coq.Reals.Ranalysis1.continuity_pt_locally_ext	40
Coq.Reals.Ranalysis1.continuity_pt_plus	40
Coq.Reals.Ranalysis1.continuity_pt_opp	40
Coq.Reals.Ranalysis1.continuity_pt_minus	40	1.2.1.0.0.0.0	synth with cache (only 1: unfold continuity_pt, plus_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_plus; only 1: assumption; only 1: apply limit_Ropp; only 1: assumption).	0.433001995087	164
Coq.Reals.Ranalysis1.continuity_pt_mult	40
Coq.Reals.Ranalysis1.continuity_pt_const	40
Coq.Reals.Ranalysis1.continuity_pt_scal	40
Coq.Reals.Ranalysis1.continuity_pt_inv	40
Coq.Reals.Ranalysis1.div_eq_inv	40	6.1	synth with cache (only 1: intros; only 1: auto).	0.0224421024323	9
Coq.Reals.Ranalysis1.continuity_pt_div	40
Coq.Reals.Ranalysis1.continuity_pt_comp	40
Coq.Reals.Ranalysis1.continuity_plus	40
Coq.Reals.Ranalysis1.continuity_opp	40
Coq.Reals.Ranalysis1.continuity_minus	40
Coq.Reals.Ranalysis1.continuity_mult	40
Coq.Reals.Ranalysis1.continuity_const	40
Coq.Reals.Ranalysis1.continuity_scal	40
Coq.Reals.Ranalysis1.continuity_inv	40	4.4.1.0.2.14	synth with cache (only 1: intros z H; only 1: red; only 1: intros; only 1: apply continuity_pt_inv; only 1: auto; only 1: auto).	24.4074640274	17723
Coq.Reals.Ranalysis1.continuity_div	40
Coq.Reals.Ranalysis1.continuity_comp	40
Coq.Reals.Ranalysis1.uniqueness_step1	40
Coq.Reals.Ranalysis1.uniqueness_step2	40
Coq.Reals.Ranalysis1.uniqueness_step3	40
Coq.Reals.Ranalysis1.uniqueness_limite	40
Coq.Reals.Ranalysis1.derive_pt_eq	40
Coq.Reals.Ranalysis1.derive_pt_eq_0	40	3.1.0.0.1.0.3.0	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).	4.43088102341	1083
Coq.Reals.Ranalysis1.derive_pt_eq_1	40	0.0.1.5.0	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derive_pt in H; only 1: rewrite H in H1; only 1: assumption).	0.15359210968	81
Coq.Reals.Ranalysis1.derive_pt_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_ext	40
Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40
Coq.Reals.Ranalysis1.derivable_derive	40	0.24	synth with cache (only 1: intros r1 r2; only 1: intuition eauto  3).	1.02344489098	1118
Coq.Reals.Ranalysis1.derivable_continuous_pt	40
Coq.Reals.Ranalysis1.derivable_continuous	40
Coq.Reals.Ranalysis1.derivable_pt_lim_plus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40
Coq.Reals.Ranalysis1.derivable_pt_lim_const	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	40
Coq.Reals.Ranalysis1.derivable_pt_lim_id	40
Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_lim_comp	40
Coq.Reals.Ranalysis1.derivable_pt_plus	40
Coq.Reals.Ranalysis1.derivable_pt_opp	40
Coq.Reals.Ranalysis1.derivable_pt_minus	40
Coq.Reals.Ranalysis1.derivable_pt_mult	40
Coq.Reals.Ranalysis1.derivable_pt_const	40
Coq.Reals.Ranalysis1.derivable_pt_scal	40
Coq.Reals.Ranalysis1.derivable_pt_id	40
Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_comp	40
Coq.Reals.Ranalysis1.derivable_plus	40
Coq.Reals.Ranalysis1.derivable_opp	40
Coq.Reals.Ranalysis1.derivable_minus	40
Coq.Reals.Ranalysis1.derivable_mult	40
Coq.Reals.Ranalysis1.derivable_const	40	0.0.0.0.1	synth with cache (only 1: unfold derivable, continuity; only 1: intros; only 1: unfold derivable_pt; only 1: exists 0; only 1: apply derivable_pt_lim_const).	0.0413870811462	19
Coq.Reals.Ranalysis1.derivable_scal	40
Coq.Reals.Ranalysis1.derivable_id	40	0.0.0.25	synth with cache (only 1: intro n; only 1: unfold derivable_pt; only 1: exists 1; only 1: apply derivable_pt_lim_id).	0.496376037598	394
Coq.Reals.Ranalysis1.derivable_Rsqr	40	0.0.0.8	synth with cache (only 1: intro; only 1: unfold derivable_pt; only 1: exists (2 * x); only 1: apply derivable_pt_lim_Rsqr).	0.0443210601807	37
Coq.Reals.Ranalysis1.derivable_comp	40
Coq.Reals.Ranalysis1.derive_pt_plus	40
Coq.Reals.Ranalysis1.derive_pt_opp	40
Coq.Reals.Ranalysis1.derive_pt_minus	40
Coq.Reals.Ranalysis1.derive_pt_mult	40
Coq.Reals.Ranalysis1.derive_pt_const	40	4.2.0	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_const).	0.686188936234	108
Coq.Reals.Ranalysis1.derive_pt_scal	40
Coq.Reals.Ranalysis1.derive_pt_id	40
Coq.Reals.Ranalysis1.derive_pt_Rsqr	40
Coq.Reals.Ranalysis1.derive_pt_comp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40
Coq.Reals.Ranalysis1.derivable_pt_pow	40
Coq.Reals.Ranalysis1.derivable_pow	40	0.0.0.0.6.7	synth with cache (only 1: intros; only 1: unfold derivable; only 1: intros; only 1: unfold derivable_pt; only 1: exists (INR n * x ^ Init.Nat.pred n); only 1: apply derivable_pt_lim_pow).	0.586146116257	386
Coq.Reals.Ranalysis1.derive_pt_pow	40
Coq.Reals.Ranalysis1.pr_nu	40
Coq.Reals.Ranalysis1.deriv_maximum	40
Coq.Reals.Ranalysis1.deriv_minimum	40
Coq.Reals.Ranalysis1.deriv_constant2	40
Coq.Reals.Ranalysis1.nonneg_derivative_0	40
Coq.Reals.SeqProp.growing_cv	40
Coq.Reals.SeqProp.decreasing_growing	40
Coq.Reals.SeqProp.decreasing_cv	40
Coq.Reals.SeqProp.ub_to_lub	40
Coq.Reals.SeqProp.lb_to_glb	40
Coq.Reals.SeqProp.maj_ss	40
Coq.Reals.SeqProp.min_ss	40
Coq.Reals.SeqProp.Wn_decreasing	40
Coq.Reals.SeqProp.Vn_growing	40
Coq.Reals.SeqProp.Vn_Un_Wn_order	40
Coq.Reals.SeqProp.min_maj	40
Coq.Reals.SeqProp.maj_min	40
Coq.Reals.SeqProp.cauchy_maj	40
Coq.Reals.SeqProp.cauchy_opp	40
Coq.Reals.SeqProp.cauchy_min	40
Coq.Reals.SeqProp.maj_cv	40
Coq.Reals.SeqProp.min_cv	40
Coq.Reals.SeqProp.cond_eq	40
Coq.Reals.SeqProp.not_Rlt	40	0.3.3.0	synth with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.470141887665	14
Coq.Reals.SeqProp.approx_maj	40
Coq.Reals.SeqProp.approx_min	40
Coq.Reals.SeqProp.UL_sequence	40
Coq.Reals.SeqProp.CV_plus	40
Coq.Reals.SeqProp.cv_cvabs	40
Coq.Reals.SeqProp.CV_Cauchy	40
Coq.Reals.SeqProp.maj_by_pos	40
Coq.Reals.SeqProp.CV_mult	40
Coq.Reals.SeqProp.tech9	40
Coq.Reals.SeqProp.tech13	40
Coq.Reals.SeqProp.growing_ineq	40
Coq.Reals.SeqProp.CV_opp	40
Coq.Reals.SeqProp.decreasing_ineq	40
Coq.Reals.SeqProp.CV_minus	40
Coq.Reals.SeqProp.cv_infty_cv_R0	40
Coq.Reals.SeqProp.decreasing_prop	40
Coq.Reals.SeqProp.cv_speed_pow_fact	40
Coq.Reals.Rcomplete.R_complete	40
Coq.Reals.Rtrigo_calc.tan_PI	40	12.11.0.0.0	synth with cache (only 1: unfold tan; only 1: unfold Rdiv; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	8.4065759182	3499
Coq.Reals.Rtrigo_calc.sin_3PI2	40	1.1.2.0.1.0.5.52	synth with cache (only 1: replace (3 * (PI / 2)) with (PI + PI / 2); only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: rewrite cos_PI; only 1: field; only 1: field).	10.3162150383	6838
Coq.Reals.Rtrigo_calc.tan_2PI	40	3.9.1.0.1.6.0.0.5.0.0	synth with cache (only 1: repeat rewrite double; only 1: unfold tan; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: rewrite cos_plus; only 1: rewrite cos_PI; only 1: rewrite sin_PI; only 1: unfold Rdiv; only 1: rewrite <- (Rmult_0_r (/ 2)); only 1: ring).	36.5625338554	9183
Coq.Reals.Rtrigo_calc.sin_cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI3_cos_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI6_cos_PI3	40	3.1.0.2.0	synth with cache (only 1: replace (PI / 6) with (PI / 2 - PI / 3) by field; only 1: rewrite sin_minus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	0.432100057602	60
Coq.Reals.Rtrigo_calc.PI6_RGT_0	40
Coq.Reals.Rtrigo_calc.PI6_RLT_PI2	40
Coq.Reals.Rtrigo_calc.sin_PI6	40
Coq.Reals.Rtrigo_calc.sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.sqrt3_2_neq_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt3_0	40
Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	0.5.2.0.8	synth with cache (only 1: change 4 with 2²; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: auto with real).	1.62046098709	388
Coq.Reals.Rtrigo_calc.cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI4	40
Coq.Reals.Rtrigo_calc.tan_PI4	40
Coq.Reals.Rtrigo_calc.cos_3PI4	40
Coq.Reals.Rtrigo_calc.sin_3PI4	40
Coq.Reals.Rtrigo_calc.cos_PI6	40
Coq.Reals.Rtrigo_calc.tan_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI3	40
Coq.Reals.Rtrigo_calc.cos_PI3	40
Coq.Reals.Rtrigo_calc.tan_PI3	40
Coq.Reals.Rtrigo_calc.sin_2PI3	40
Coq.Reals.Rtrigo_calc.cos_2PI3	40
Coq.Reals.Rtrigo_calc.tan_2PI3	40
Coq.Reals.Rtrigo_calc.cos_5PI4	40
Coq.Reals.Rtrigo_calc.sin_5PI4	40	0.3.2.6.0.0.2.1	synth with cache (only 1: replace (5 * (PI / 4)) with (PI / 4 + PI) by field; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: rewrite sin_PI4; only 1: rewrite cos_PI4; only 1: unfold Rdiv; only 1: ring).	13.621817112	2259
Coq.Reals.Rtrigo_calc.sin_cos5PI4	40	0.0.0.3.1.0.0	synth with cache (only 1: replace (5 * (PI / 4)) with (PI / 4 + PI) by field; only 1: rewrite neg_sin; only 1: rewrite neg_cos; only 1: rewrite sin_cos_PI4; only 1: rewrite cos_PI4; only 1: unfold Rdiv; only 1: ring).	1.38397789001	224
Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40
Coq.Reals.Rtrigo_calc.Rgt_2PI_0	40
Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40
Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40
Coq.Reals.Rtrigo_calc.rad_deg	40
Coq.Reals.Rtrigo_calc.toRad_inj	40
Coq.Reals.Rtrigo_calc.deg_rad	40
Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40
Coq.Reals.Rtrigo_calc.sin_lb_ge_0	40
Coq.Reals.Ranalysis4.derivable_pt_inv	40
Coq.Reals.Ranalysis4.pr_nu_var	40
Coq.Reals.Ranalysis4.pr_nu_var2	40
Coq.Reals.Ranalysis4.derivable_inv	40
Coq.Reals.Ranalysis4.derive_pt_inv	40
Coq.Reals.Ranalysis4.Rabs_derive_1	40
Coq.Reals.Ranalysis4.Rabs_derive_2	40
Coq.Reals.Ranalysis4.Rderivable_pt_abs	40
Coq.Reals.Ranalysis4.Rcontinuity_abs	40
Coq.Reals.Ranalysis4.continuity_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40
Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_finite_sum	40
Coq.Reals.Ranalysis4.derivable_finite_sum	40	0.0.0.0.0.1.1.7.0	synth with cache (only 1: intros; only 1: intro; only 1: unfold derivable_pt; only 1: pose proof (derivable_pt_lim_finite_sum An x N) as H; only 1: induction N as [| N HrecN]; only 1: exists 0; only 1: apply H; only 1: exists (sum_f_R0 (fun k : nat => INR (S k) * An (S k) * x ^ k) (Init.Nat.pred (S N))); only 1: apply H).	6.98568201065	1982
Coq.Reals.Ranalysis4.derivable_pt_lim_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_lim_sinh	40
Coq.Reals.Ranalysis4.derivable_pt_exp	40
Coq.Reals.Ranalysis4.derivable_pt_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_sinh	40
Coq.Reals.Ranalysis4.derivable_exp	40	0.0.0.0.2	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (exp x); only 1: apply derivable_pt_lim_exp).	0.0302867889404	7
Coq.Reals.Ranalysis4.derivable_cosh	40	0.0.0.0.4	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (sinh x); only 1: apply derivable_pt_lim_cosh).	0.0275890827179	9
Coq.Reals.Ranalysis4.derivable_sinh	40	0.0.0.2	synth with cache (only 1: intro; only 1: unfold derivable_pt; only 1: exists (cosh x); only 1: apply derivable_pt_lim_sinh).	0.0256750583649	6
Coq.Reals.Ranalysis4.derive_pt_exp	40	2.3.0	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_exp).	0.259813070297	27
Coq.Reals.Ranalysis4.derive_pt_cosh	40
Coq.Reals.Ranalysis4.derive_pt_sinh	40
Coq.Reals.Ranalysis4.sinh_lt	40
Coq.Reals.Ranalysis3.derivable_pt_lim_div	40
Coq.Reals.Ranalysis3.derivable_pt_div	40
Coq.Reals.Ranalysis3.derivable_div	40
Coq.Reals.Ranalysis3.derive_pt_div	40
Coq.Reals.DiscrR.Rlt_R0_R2	40	1.4.0.1.5.1	synth with cache (only 1: apply Rlt_trans with (0 + 1); only 1: apply Rlt_n_Sn; only 1: rewrite Rplus_comm; only 1: apply Rplus_lt_compat_l; only 1: apply Rnot_le_lt; only 1: auto with real).	2.97241592407	718
Coq.Reals.DiscrR.IZR_eq	40	3.4.1.2	synth with cache (only 1: intro z; only 1: intros; only 1: elim H; only 1: auto).	1.50373101234	800
Coq.Reals.ConstructiveReals.CRlt_asym	40
Coq.Reals.ConstructiveReals.CRlt_proper	40
Coq.Reals.ConstructiveReals.CRle_refl	40
Coq.Reals.ConstructiveReals.CRle_lt_trans	40
Coq.Reals.ConstructiveReals.CRlt_le_trans	40
Coq.Reals.ConstructiveReals.CRle_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans	40	30.5.0	synth with cache (only 1: intros; only 1: destruct (CRltLinear R), p; only 1: eauto).	24.4894959927	36350
Coq.Reals.ConstructiveReals.CRlt_trans_flip	40	33.8.0	synth with cache (only 1: intros; only 1: destruct (CRltLinear R), p; only 1: eauto).	37.1681098938	31098
Coq.Reals.ConstructiveReals.CReq_refl	40	2.5.2.5.7.1	synth with cache (only 1: intros; only 1: firstorder; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H); only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H)).	5.05988097191	1845
Coq.Reals.ConstructiveReals.CReq_sym	40	17.2	synth with cache (only 1: intros; only 1: firstorder).	2.68326592445	3333
Coq.Reals.ConstructiveReals.CReq_trans	40
Coq.Reals.ConstructiveReals.CR_setoid	40
Coq.Reals.ConstructiveReals.CRplus_0_r	40
Coq.Reals.ConstructiveReals.CRmult_1_r	40
Coq.Reals.ConstructiveReals.CRplus_opp_l	40
Coq.Reals.ConstructiveReals.CRplus_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_l	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_le_reg_l	40	20.2.3.10.0.0	synth with cache (only 1: intros; only 1: intros abs; only 1: apply H; only 1: destruct (CRisRing R); only 1: apply CRplus_lt_compat_l; only 1: intuition).	21.9223301411	19945
Coq.Reals.ConstructiveReals.CRplus_le_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_le_compat	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_l	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_r	40
Coq.Reals.ConstructiveReals.CRopp_involutive	40
Coq.Reals.ConstructiveReals.CRopp_gt_lt_contravar	40
Coq.Reals.ConstructiveReals.CRopp_lt_cancel	40
Coq.Reals.ConstructiveReals.CRopp_plus_distr	40
Coq.Reals.ConstructiveReals.CRmult_plus_distr_l	40
Coq.Reals.ConstructiveReals.CRzero_double	40
Coq.Reals.ConstructiveReals.CRmult_0_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_l	40
Coq.Reals.ConstructiveReals.CRmult_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRinv_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_r	40
Coq.Reals.ConstructiveReals.CRmult_eq_reg_r	40
Coq.Reals.ConstructiveReals.CR_of_Q_proper	40
Coq.Reals.ConstructiveReals.CR_of_Q_zero	40
Coq.Reals.ConstructiveReals.CR_of_Q_opp	40
Coq.Reals.ConstructiveReals.CR_of_Q_le	40	7.1.0.20.1.0	synth with cache (only 1: intros; only 1: intro abs; only 1: destruct H; only 1: apply lt_CR_of_Q in abs; only 1: apply Z.gt_lt_iff; only 1: auto with qarith).	4.35131883621	6302
Coq.Reals.ConstructiveReals.CR_of_Q_pos	40
Coq.Reals.ConstructiveReals.CR_cv_above_rat	40
Coq.Reals.ConstructiveReals.CR_cv_below_rat	40
Coq.Reals.ConstructiveReals.CR_cv_const	40
Coq.Reals.ConstructiveCauchyRealsMult.BoundFromZero	40
Coq.Reals.ConstructiveCauchyRealsMult.QCauchySeq_bounded	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_cauchy	40
Coq.Reals.ConstructiveCauchyRealsMult.linear_max	40	1.4.2.2.25.1.3.2.3.0.1.58	synth with cache (only 1: intros p n k H1 H2; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite max_l; only 1: rewrite Pos2Nat.inj_mul; only 1: apply Nat.mul_le_mono_nonneg; only 1: apply Nat.le_0_l; only 1: apply Nat.le_refl; only 1: unfold Pos.to_nat; only 1: rewrite Pmult_nat_mult, Nat.mul_comm; only 1: apply Nat.le_0_l; only 1: auto; only 1: apply Nat.le_refl).	27.2799971104	59718
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult	40	8.2	synth with cache (only 1: destruct x as [xn limx]; only 1: assumption).	0.0380370616913	48
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_unfold	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc_bounded_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_comm	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_proper_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRingExt	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRing	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_T	40	7	synth with cache (only 1: apply CReal_isRingExt).	3.20667409897	180
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_T	40	0.7	synth with cache (only 1: intro abs; only 1: apply (Ropp_ext CReal_isRingExt)).	1.02193689346	9
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_T	40	0.0.0.0	synth with cache (only 1: intros x y H x0 y0 H0; only 1: unfold CReal_minus; only 1: rewrite H, H0; only 1: reflexivity).	0.051549911499	4
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_r	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0287079811096	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_r	40	0.2	synth with cache (only 1: intro; only 1: ring).	0.651942968369	77
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40	11.3	synth with cache (only 1: intros; only 1: ring).	9.12586092949	652
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0401701927185	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealArchimedean	40
Coq.Reals.ConstructiveCauchyRealsMult.Rup_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealLtDisjunctEpsilon	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftReal	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftEqual	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealNegShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealPosShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_neg	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv	40	12	synth with cache (only 1: assumption).	0.055871963501	46
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift_eq	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_1	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	40
Coq.Reals.ConstructiveCauchyRealsMult.Rinv_eq_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40	2.1.1	synth with cache (only 1: intros [rn limr]; only 1: intros [m maj]; only 1: apply CReal_mult_proper_l).	0.585624933243	81
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	1.2.2	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.667040109634	71
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_invQ	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealQ_dense	40
Coq.Reals.ConstructiveCauchyRealsMult.inject_Q_mult	40	0.1.0.4.7	synth with cache (only 1: intros; only 1: apply CRealEq_diff; only 1: apply CRealEq_modindep; only 1: apply QSeqEquivEx_sym; only 1: apply CReal_mult_unfold).	13.8601200581	804
Coq.Reals.Rtrigo_fun.Alembert_exp	40
Coq.Reals.Alembert.Alembert_C1	40
Coq.Reals.Alembert.Alembert_C2	40
Coq.Reals.Alembert.AlembertC3_step1	40
Coq.Reals.Alembert.AlembertC3_step2	40
Coq.Reals.Alembert.Alembert_C3	40
Coq.Reals.Alembert.Alembert_C4	40
Coq.Reals.Alembert.Alembert_C5	40
Coq.Reals.Alembert.Alembert_C6	40
Coq.Reals.R_sqr.Rsqr_neg	40	4.0.0	synth with cache (only 1: unfold Rsqr; only 1: intros; only 1: ring).	0.046245098114	13
Coq.Reals.R_sqr.Rsqr_mult	40	6.4.8	synth with cache (only 1: intros m n; only 1: unfold Rsqr; only 1: ring).	4.64254879951	1534
Coq.Reals.R_sqr.Rsqr_plus	40	0.17.0	synth with cache (only 1: intro; only 1: intro t; only 1: ring_Rsqr).	2.75821399689	909
Coq.Reals.R_sqr.Rsqr_minus	40	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.0414237976074	2
Coq.Reals.R_sqr.Rsqr_neg_minus	40	1.1.0	synth with cache (only 1: unfold Rsqr; only 1: intros r1 r2; only 1: ring).	0.0457830429077	13
Coq.Reals.R_sqr.Rsqr_1	40	2.0	synth with cache (only 1: unfold Rsqr; only 1: auto with real).	0.0334610939026	4
Coq.Reals.R_sqr.Rsqr_gt_0_0	40
Coq.Reals.R_sqr.Rsqr_pos_lt	40	10.0	synth with cache (only 1: intros; only 1: auto with real).	0.309057950974	105
Coq.Reals.R_sqr.Rsqr_div	40	0.3.4.0	synth with cache (only 1: unfold Rsqr; only 1: intros r1 r2 H; only 1: field; only 1: trivial).	0.547479152679	103
Coq.Reals.R_sqr.Rsqr_eq_0	40	6	synth with cache (only 1: apply Rsqr_0_uniq).	0.151009082794	54
Coq.Reals.R_sqr.Rsqr_minus_plus	40	0.13	synth with cache (only 1: intros z1 z2; only 1: ring_Rsqr).	1.51233816147	587
Coq.Reals.R_sqr.Rsqr_plus_minus	40	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.0398759841919	2
Coq.Reals.R_sqr.Rsqr_incr_0	40
Coq.Reals.R_sqr.Rsqr_incr_0_var	40
Coq.Reals.R_sqr.Rsqr_incr_1	40	4.0.9	synth with cache (only 1: intros r r1 r2 H; only 1: unfold Rsqr; only 1: auto with real).	4.75755000114	2506
Coq.Reals.R_sqr.Rsqr_incrst_0	40
Coq.Reals.R_sqr.Rsqr_incrst_1	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_1	40
Coq.Reals.R_sqr.neg_pos_Rsqr_le	40
Coq.Reals.R_sqr.Rsqr_abs	40
Coq.Reals.R_sqr.Rsqr_le_abs_0	40
Coq.Reals.R_sqr.Rsqr_le_abs_1	40
Coq.Reals.R_sqr.Rsqr_lt_abs_0	40
Coq.Reals.R_sqr.Rsqr_lt_abs_1	40
Coq.Reals.R_sqr.Rsqr_inj	40
Coq.Reals.R_sqr.Rsqr_eq_abs_0	40
Coq.Reals.R_sqr.Rsqr_eq_asb_1	40
Coq.Reals.R_sqr.triangle_rectangle	40
Coq.Reals.R_sqr.triangle_rectangle_lt	40
Coq.Reals.R_sqr.triangle_rectangle_le	40
Coq.Reals.R_sqr.Rsqr_inv	40	5.1.0.1	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: field; only 1: auto).	0.992451906204	132
Coq.Reals.R_sqr.canonical_Rsqr	40
Coq.Reals.R_sqr.Rsqr_eq	40
Coq.Reals.RiemannInt_SF.IZN_var	40	5.1.0.0.2.3	synth with cache (only 1: intros [| p| n]; only 1: exists 0%nat; only 1: reflexivity; only 1: exists (Pos.to_nat p); only 1: now rewrite positive_nat_Z; only 1: now destruct 1 || intros _).	1.98191785812	1118
Coq.Reals.RiemannInt_SF.Nzorn	40
Coq.Reals.RiemannInt_SF.StepFun_P1	40
Coq.Reals.RiemannInt_SF.StepFun_P2	40
Coq.Reals.RiemannInt_SF.StepFun_P3	40
Coq.Reals.RiemannInt_SF.StepFun_P4	40
Coq.Reals.RiemannInt_SF.StepFun_P5	40
Coq.Reals.RiemannInt_SF.StepFun_P6	40
Coq.Reals.RiemannInt_SF.StepFun_P7	40
Coq.Reals.RiemannInt_SF.StepFun_P8	40
Coq.Reals.RiemannInt_SF.StepFun_P9	40
Coq.Reals.RiemannInt_SF.StepFun_P10	40
Coq.Reals.RiemannInt_SF.StepFun_P11	40
Coq.Reals.RiemannInt_SF.StepFun_P12	40
Coq.Reals.RiemannInt_SF.StepFun_P13	40
Coq.Reals.RiemannInt_SF.StepFun_P14	40
Coq.Reals.RiemannInt_SF.StepFun_P15	40
Coq.Reals.RiemannInt_SF.StepFun_P16	40
Coq.Reals.RiemannInt_SF.StepFun_P17	40
Coq.Reals.RiemannInt_SF.StepFun_P18	40
Coq.Reals.RiemannInt_SF.StepFun_P19	40
Coq.Reals.RiemannInt_SF.StepFun_P20	40
Coq.Reals.RiemannInt_SF.StepFun_P21	40
Coq.Reals.RiemannInt_SF.StepFun_P22	40
Coq.Reals.RiemannInt_SF.StepFun_P23	40
Coq.Reals.RiemannInt_SF.StepFun_P24	40
Coq.Reals.RiemannInt_SF.StepFun_P25	40
Coq.Reals.RiemannInt_SF.StepFun_P26	40
Coq.Reals.RiemannInt_SF.StepFun_P27	40
Coq.Reals.RiemannInt_SF.StepFun_P28	40
Coq.Reals.RiemannInt_SF.StepFun_P29	40	0.8.0.0.55	synth with cache (only 1: red; only 1: intros a b f; only 1: destruct (projT2 (pre f)) as (x, H); only 1: apply existT with x; only 1: apply H).	11.1631681919	18003
Coq.Reals.RiemannInt_SF.StepFun_P30	40
Coq.Reals.RiemannInt_SF.StepFun_P31	40
Coq.Reals.RiemannInt_SF.StepFun_P32	40
Coq.Reals.RiemannInt_SF.StepFun_P33	40
Coq.Reals.RiemannInt_SF.StepFun_P34	40
Coq.Reals.RiemannInt_SF.StepFun_P35	40
Coq.Reals.RiemannInt_SF.StepFun_P36	40
Coq.Reals.RiemannInt_SF.StepFun_P37	40
Coq.Reals.RiemannInt_SF.StepFun_P38	40
Coq.Reals.RiemannInt_SF.StepFun_P39	40
Coq.Reals.RiemannInt_SF.StepFun_P40	40
Coq.Reals.RiemannInt_SF.StepFun_P41	40
Coq.Reals.RiemannInt_SF.StepFun_P42	40
Coq.Reals.RiemannInt_SF.StepFun_P43	40
Coq.Reals.RiemannInt_SF.StepFun_P44	40
Coq.Reals.RiemannInt_SF.StepFun_P45	40
Coq.Reals.RiemannInt_SF.StepFun_P46	40
Coq.Reals.Cos_rel.cos_plus_form	40
Coq.Reals.Cos_rel.pow_sqr	40
Coq.Reals.Cos_rel.A1_cvg	40
Coq.Reals.Cos_rel.C1_cvg	40
Coq.Reals.Cos_rel.B1_cvg	40
Coq.Reals.Ranalysis5.f_incr_implies_g_incr_interv	40
Coq.Reals.Ranalysis5.derivable_pt_id_interv	40	0.0.6.1	synth with cache (only 1: intros; only 1: unfold derivable_pt; only 1: exists 1; only 1: apply derivable_pt_lim_id).	0.306257963181	43
Coq.Reals.Ranalysis5.pr_nu_var2_interv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40
Coq.Reals.Ranalysis5.IVT_interv_prelim0	40
Coq.Reals.Ranalysis5.IVT_interv_prelim1	40
Coq.Reals.Ranalysis5.IVT_interv	40
Coq.Reals.Ranalysis5.f_interv_is_interv	40
Coq.Reals.Ranalysis5.continuity_pt_recip_prelim	40
Coq.Reals.Ranalysis5.continuity_pt_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_lim_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1	40	0.2	synth with cache (only 1: intros eps0 eps0_pos; only 1: intuition).	0.0432939529419	4
Coq.Reals.Ranalysis5.derivable_pt_recip_interv	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv	40
Coq.Reals.Ranalysis5.ub_lt_2_pos	40	2.8.0	synth with cache (only 1: intros; only 1: unfold Rdiv; only 1: lra).	0.356275081635	105
Coq.Reals.Ranalysis5.mkposreal_lb_ub	40
Coq.Reals.Ranalysis5.derivable_pt_lim_CVU	40
Coq.Reals.AltSeries.CV_ALT_step0	40
Coq.Reals.AltSeries.CV_ALT_step1	40
Coq.Reals.AltSeries.CV_ALT_step2	40
Coq.Reals.AltSeries.CV_ALT_step3	40
Coq.Reals.AltSeries.CV_ALT_step4	40
Coq.Reals.AltSeries.CV_ALT	40
Coq.Reals.AltSeries.alternated_series	40
Coq.Reals.AltSeries.alternated_series_ineq	40
Coq.Reals.AltSeries.PI_tg_pos	40	4.1.0.18.2	synth with cache (only 1: left; only 1: apply Rinv_0_lt_compat; only 1: apply lt_0_INR; only 1: Nat.nzsimpl; only 1: auto with arith).	8.26792001724	8455
Coq.Reals.AltSeries.PI_tg_decreasing	40
Coq.Reals.AltSeries.PI_tg_cv	40
Coq.Reals.AltSeries.exist_PI	40
Coq.Reals.AltSeries.Alt_PI_ineq	40
Coq.Reals.AltSeries.Alt_PI_RGT_0	40
Coq.Reals.Rminmax.Rmax_l	40	2.0.3.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: reflexivity; only 1: intros; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	0.0606479644775	20
Coq.Reals.Rminmax.Rmax_r	40	4.2.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real); only 1: reflexivity).	0.0538079738617	27
Coq.Reals.Rminmax.Rmin_l	40	3.0.3.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: reflexivity; only 1: intros; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	0.523316144943	140
Coq.Reals.Rminmax.Rmin_r	40	4.3.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: intros; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real); only 1: reflexivity).	1.22766900063	438
Coq.Reals.Rminmax.R.plus_max_distr_l	40
Coq.Reals.Rminmax.R.plus_max_distr_r	40
Coq.Reals.Rminmax.R.plus_min_distr_l	40
Coq.Reals.Rminmax.R.plus_min_distr_r	40	0.0.0.3.0	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm n p), (Rplus_comm m p), (Rplus_comm _ p); only 1: apply min_monotone; only 1: intros x y; only 1: apply Rplus_le_compat_l).	0.0276679992676	8
Coq.Reals.Rminmax.R.opp_max_distr	40	1.0.0.0	synth with cache (only 1: intros x y; only 1: apply Rmax_case_strong; only 1: now intros w; rewrite Rmin_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmin_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.0296540260315	5
Coq.Reals.Rminmax.R.opp_min_distr	40	1.0.0.0	synth with cache (only 1: intros x y; only 1: apply Rmin_case_strong; only 1: now intros w; rewrite Rmax_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmax_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.0483341217041	5
Coq.Reals.Rminmax.R.minus_max_distr_l	40
Coq.Reals.Rminmax.R.minus_max_distr_r	40
Coq.Reals.Rminmax.R.minus_min_distr_l	40
Coq.Reals.Rminmax.R.minus_min_distr_r	40
Coq.Reals.Rlimit.eps2_Rgt_R0	40	0.1.0.5.60	synth with cache (only 1: unfold Rgt; only 1: intros; only 1: apply Rmult_lt_0_compat; only 1: exact H; only 1: apply Rinv_0_lt_compat, Rlt_0_2).	3.77287912369	7701
Coq.Reals.Rlimit.eps2	40	0.3	synth with cache (only 1: intros; only 1: lra).	0.0333800315857	5
Coq.Reals.Rlimit.eps4	40	5.0	synth with cache (only 1: intro esp; only 1: field).	0.0531258583069	7
Coq.Reals.Rlimit.Rlt_eps2_eps	40	0.0	synth with cache (only 1: intros; only 1: lra).	0.0706431865692	2
Coq.Reals.Rlimit.Rlt_eps4_eps	40	0.0	synth with cache (only 1: intros; only 1: lra).	0.0728571414948	2
Coq.Reals.Rlimit.prop_eps	40
Coq.Reals.Rlimit.mul_factor_wd	40
Coq.Reals.Rlimit.mul_factor_gt	40
Coq.Reals.Rlimit.mul_factor_gt_f	40
Coq.Reals.Rlimit.tech_limit	40
Coq.Reals.Rlimit.tech_limit_contr	40
Coq.Reals.Rlimit.lim_x	40
Coq.Reals.Rlimit.limit_plus	40
Coq.Reals.Rlimit.limit_Ropp	40
Coq.Reals.Rlimit.limit_minus	40
Coq.Reals.Rlimit.limit_free	40
Coq.Reals.Rlimit.limit_mul	40
Coq.Reals.Rlimit.single_limit	40
Coq.Reals.Rlimit.limit_comp	40	12.4.0	synth with cache (only 1: intros; only 1: intro; only 1: firstorder  (subst; auto)).	3.86548805237	1857
Coq.Reals.Rlimit.limit_inv	40
Coq.Reals.R_sqrt.sqrt_pos	40
Coq.Reals.R_sqrt.sqrt_positivity	40	0.0.2.0.4.1.0.3	synth with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: generalize (Rgt_not_le 0 x Hlt); only 1: exfalso; only 1: generalize (Rgt_not_le 0 x Hlt); only 1: auto; only 1: apply Rsqrt_positivity).	34.3127629757	6468
Coq.Reals.R_sqrt.sqrt_sqrt	40
Coq.Reals.R_sqrt.sqrt_0	40
Coq.Reals.R_sqrt.sqrt_1	40
Coq.Reals.R_sqrt.sqrt_eq_0	40
Coq.Reals.R_sqrt.sqrt_lem_0	40	2.0.7.2.3	synth with cache (only 1: intros p q r H; only 1: intros E1; only 1: rewrite <- E1; only 1: apply sqrt_sqrt; only 1: auto with real).	13.0962958336	1709
Coq.Reals.R_sqrt.sqrt_lem_1	40
Coq.Reals.R_sqrt.sqrt_def	40	1.0	synth with cache (only 1: intros; only 1: apply (sqrt_sqrt x H)).	0.0711529254913	3
Coq.Reals.R_sqrt.sqrt_square	40
Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	0.105883836746	5
Coq.Reals.R_sqrt.sqrt_pow2	40
Coq.Reals.R_sqrt.sqrt_Rsqr_abs	40	0.0.8.2.3.4.0	synth with cache (only 1: intros; only 1: apply Rsqr_inj; only 1: apply sqrt_pos; only 1: apply Rabs_pos; only 1: repeat rewrite <- Rsqr_abs; only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	24.3746159077	6317
Coq.Reals.R_sqrt.Rsqr_sqrt	40	1.0.1	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x H)).	0.0921440124512	5
Coq.Reals.R_sqrt.sqrt_mult_alt	40
Coq.Reals.R_sqrt.sqrt_mult	40
Coq.Reals.R_sqrt.sqrt_lt_R0	40
Coq.Reals.R_sqrt.Rlt_mult_inv_pos	40	1.15.0	synth with cache (only 1: intros; only 1: rewrite <- (Rmult_0_r x); only 1: auto with real).	9.1708240509	1656
Coq.Reals.R_sqrt.Rle_mult_inv_pos	40	0.0.0.15	synth with cache (only 1: intros r r1 r2 H; only 1: replace 0 with (r * 0); only 1: auto with real; only 1: auto with real).	9.69728803635	2362
Coq.Reals.R_sqrt.sqrt_div_alt	40
Coq.Reals.R_sqrt.sqrt_div	40
Coq.Reals.R_sqrt.sqrt_lt_0_alt	40
Coq.Reals.R_sqrt.sqrt_lt_0	40
Coq.Reals.R_sqrt.sqrt_lt_1_alt	40
Coq.Reals.R_sqrt.sqrt_lt_1	40
Coq.Reals.R_sqrt.sqrt_le_0	40
Coq.Reals.R_sqrt.sqrt_le_1_alt	40
Coq.Reals.R_sqrt.sqrt_le_1	40
Coq.Reals.R_sqrt.sqrt_inj	40
Coq.Reals.R_sqrt.sqrt_less_alt	40
Coq.Reals.R_sqrt.sqrt_less	40
Coq.Reals.R_sqrt.sqrt_more	40
Coq.Reals.R_sqrt.sqrt_cauchy	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_0	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_dec	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_epsilon	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_not_epsilon	40
Coq.Reals.ConstructiveRealsLUB.DDlow_below_up	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit_fix	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit	40
Coq.Reals.ConstructiveRealsLUB.glb_dec_Q	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_glb	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_closed	40
Coq.Reals.ConstructiveRealsLUB.sig_lub	40
Coq.Reals.ConstructiveRealsLUB.CR_sig_lub	40
Coq.Reals.Rderiv.cont_deriv	40
Coq.Reals.Rderiv.Dconst	40
Coq.Reals.Rderiv.Dx	40
Coq.Reals.Rderiv.Dadd	40
Coq.Reals.Rderiv.Dmult	40
Coq.Reals.Rderiv.Dmult_const	40
Coq.Reals.Rderiv.Dopp	40
Coq.Reals.Rderiv.Dminus	40
Coq.Reals.Rderiv.Dx_pow_n	40
Coq.Reals.Rderiv.Dcomp	40
Coq.Reals.Rderiv.D_pow_n	40
Coq.Reals.Cauchy_prod.sum_N_predN	40	8.0.1.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: elim (Nat.lt_irrefl _ H); only 1: reflexivity).	1.51436305046	303
Coq.Reals.Cauchy_prod.sum_plus	40	1.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.157306909561	9
Coq.Reals.Cauchy_prod.cauchy_finite	40
Coq.Reals.Rlogic.Arithmetical_dec.sig_forall_dec	40
Coq.Reals.Rlogic.not_not_archimedean	40
Coq.Reals.Rlogic.sig_not_dec	40
Coq.Reals.Rtrigo1.CVN_R_cos	40
Coq.Reals.Rtrigo1.continuity_cos	40
Coq.Reals.Rtrigo1.sin_gt_cos_7_8	40
Coq.Reals.Rtrigo1.PI_2_aux	40
Coq.Reals.Rtrigo1.cos_pi2	40
Coq.Reals.Rtrigo1.pi2_int	40
Coq.Reals.Rtrigo1.cos_minus	40
Coq.Reals.Rtrigo1.sin2_cos2	40
Coq.Reals.Rtrigo1.cos2	40
Coq.Reals.Rtrigo1.sin2	40	0.0.0	synth with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).	0.0558199882507	3
Coq.Reals.Rtrigo1.cos_PI2	40
Coq.Reals.Rtrigo1.sin_pos_tech	40
Coq.Reals.Rtrigo1.sin_PI2	40
Coq.Reals.Rtrigo1.PI_RGT_0	40
Coq.Reals.Rtrigo1.PI_4	40	0.1.0	synth with cache (only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	0.0584149360657	4
Coq.Reals.Rtrigo1.PI_neq0	40	0.3.1.0.0	synth with cache (only 1: unfold PI; only 1: generalize cos_pi2; only 1: generalize cos_pi2; only 1: destruct pi2_int; only 1: lra).	0.223731040955	15
Coq.Reals.Rtrigo1.cos_PI	40
Coq.Reals.Rtrigo1.sin_PI	40
Coq.Reals.Rtrigo1.sin_bound	40
Coq.Reals.Rtrigo1.cos_bound	40
Coq.Reals.Rtrigo1.neg_cos	40
Coq.Reals.Rtrigo1.sin_cos	40	2.3.0.0.0.1.5	synth with cache (only 1: pose proof PI_4 as t; only 1: intros; only 1: rewrite cos_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: pose proof (B1_cvg x) as H2; only 1: ring).	26.5254380703	5286
Coq.Reals.Rtrigo1.sin_plus	40
Coq.Reals.Rtrigo1.sin_minus	40
Coq.Reals.Rtrigo1.tan_plus	40
Coq.Reals.Rtrigo1.sin_2a	40
Coq.Reals.Rtrigo1.cos_2a	40	2.2.9.8.0	synth with cache (only 1: intro x; only 1: rewrite double; only 1: unfold Rminus; only 1: rewrite cos_plus; only 1: ring).	1.72134184837	1613
Coq.Reals.Rtrigo1.cos_2a_cos	40
Coq.Reals.Rtrigo1.cos_2a_sin	40
Coq.Reals.Rtrigo1.tan_2a	40
Coq.Reals.Rtrigo1.sin_neg	40	0.0.0.0.0.0.0	synth with cache (only 1: intro; only 1: unfold sin; only 1: replace (- x)² with x²; only 1: case (exist_sin x²); only 1: intros; only 1: ring; only 1: apply Rsqr_neg).	0.0685269832611	7
Coq.Reals.Rtrigo1.cos_neg	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold cos; only 1: replace (- x)² with x²; only 1: reflexivity; only 1: apply Rsqr_neg).	0.0545151233673	5
Coq.Reals.Rtrigo1.tan_0	40
Coq.Reals.Rtrigo1.tan_neg	40
Coq.Reals.Rtrigo1.tan_minus	40
Coq.Reals.Rtrigo1.cos_3PI2	40
Coq.Reals.Rtrigo1.sin_2PI	40
Coq.Reals.Rtrigo1.cos_2PI	40	0.3.0.0.0	synth with cache (only 1: repeat rewrite double; only 1: rewrite cos_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.135149002075	8
Coq.Reals.Rtrigo1.neg_sin	40
Coq.Reals.Rtrigo1.sin_PI_x	40	0.3.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rminus; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: rewrite sin_antisym; only 1: ring).	0.143446922302	13
Coq.Reals.Rtrigo1.sin_period	40
Coq.Reals.Rtrigo1.cos_period	40
Coq.Reals.Rtrigo1.sin_shift	40
Coq.Reals.Rtrigo1.cos_shift	40
Coq.Reals.Rtrigo1.cos_sin	40	0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: intro x; only 1: rewrite (sin_cos (PI / 2 + x)); only 1: replace (PI / 2 + (PI / 2 + x)) with (x + PI); only 1: rewrite cos_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring; only 1: pattern PI at 1; only 1: rewrite (double_var PI); only 1: ring).	0.851072072983	122
Coq.Reals.Rtrigo1.PI2_RGT_0	40	0.3.3	synth with cache (only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	0.391402959824	35
Coq.Reals.Rtrigo1.SIN_bound	40
Coq.Reals.Rtrigo1.COS_bound	40
Coq.Reals.Rtrigo1.cos_sin_0	40
Coq.Reals.Rtrigo1.cos_sin_0_var	40
Coq.Reals.Rtrigo1.sin_lb_gt_0	40
Coq.Reals.Rtrigo1.SIN	40
Coq.Reals.Rtrigo1.COS	40
Coq.Reals.Rtrigo1._PI2_RLT_0	40
Coq.Reals.Rtrigo1.PI4_RLT_PI2	40	10.0.10	synth with cache (only 1: apply Rmult_lt_compat_l; only 1: apply PI_RGT_0; only 1: lra).	2.28296399117	984
Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	0.4	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: lra).	0.0909008979797	13
Coq.Reals.Rtrigo1.sin_gt_0	40
Coq.Reals.Rtrigo1.cos_gt_0	40
Coq.Reals.Rtrigo1.sin_ge_0	40
Coq.Reals.Rtrigo1.cos_ge_0	40
Coq.Reals.Rtrigo1.sin_le_0	40
Coq.Reals.Rtrigo1.cos_le_0	40
Coq.Reals.Rtrigo1.sin_lt_0	40
Coq.Reals.Rtrigo1.sin_lt_0_var	40
Coq.Reals.Rtrigo1.cos_lt_0	40
Coq.Reals.Rtrigo1.tan_gt_0	40
Coq.Reals.Rtrigo1.tan_lt_0	40
Coq.Reals.Rtrigo1.cos_ge_0_3PI2	40
Coq.Reals.Rtrigo1.form1	40
Coq.Reals.Rtrigo1.form2	40	0.0.1.0.0.2.0.2	synth with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: rewrite <- (cos_neg q); only 1: replace (- q) with ((p - q) / 2 - (p + q) / 2) by field; only 1: rewrite cos_plus; only 1: rewrite cos_minus; only 1: ring).	1.84892296791	253
Coq.Reals.Rtrigo1.form3	40
Coq.Reals.Rtrigo1.form4	40
Coq.Reals.Rtrigo1.sin_increasing_0	40
Coq.Reals.Rtrigo1.sin_increasing_1	40
Coq.Reals.Rtrigo1.sin_decreasing_0	40
Coq.Reals.Rtrigo1.sin_decreasing_1	40
Coq.Reals.Rtrigo1.cos_increasing_0	40
Coq.Reals.Rtrigo1.cos_increasing_1	40
Coq.Reals.Rtrigo1.cos_decreasing_0	40
Coq.Reals.Rtrigo1.cos_decreasing_1	40
Coq.Reals.Rtrigo1.tan_diff	40
Coq.Reals.Rtrigo1.tan_increasing_0	40
Coq.Reals.Rtrigo1.tan_increasing_1	40
Coq.Reals.Rtrigo1.sin_incr_0	40
Coq.Reals.Rtrigo1.sin_incr_1	40
Coq.Reals.Rtrigo1.sin_decr_0	40
Coq.Reals.Rtrigo1.sin_decr_1	40
Coq.Reals.Rtrigo1.cos_incr_0	40
Coq.Reals.Rtrigo1.cos_incr_1	40
Coq.Reals.Rtrigo1.cos_decr_0	40
Coq.Reals.Rtrigo1.cos_decr_1	40
Coq.Reals.Rtrigo1.tan_incr_0	40
Coq.Reals.Rtrigo1.tan_incr_1	40
Coq.Reals.Rtrigo1.sin_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_0	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_1	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40
Coq.Reals.PartSum.tech1	40
Coq.Reals.PartSum.tech2	40
Coq.Reals.PartSum.tech3	40
Coq.Reals.PartSum.tech4	40
Coq.Reals.PartSum.tech5	40	3	synth with cache (only 1: reflexivity).	0.0224530696869	4
Coq.Reals.PartSum.tech6	40
Coq.Reals.PartSum.tech7	40
Coq.Reals.PartSum.tech11	40
Coq.Reals.PartSum.tech12	40	10.0	synth with cache (only 1: intros x y n; only 1: auto).	0.0917270183563	80
Coq.Reals.PartSum.scal_sum	40	6.4.0.1.15.0.0.1	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: field; only 1: simpl; only 1: rewrite Rmult_plus_distr_l; only 1: rewrite HrecN; only 1: ring).	4.64655613899	4507
Coq.Reals.PartSum.decomp_sum	40
Coq.Reals.PartSum.plus_sum	40	2.0.2.2.2.2.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	1.18999290466	415
Coq.Reals.PartSum.sum_eq	40
Coq.Reals.PartSum.uniqueness_sum	40
Coq.Reals.PartSum.minus_sum	40	2.1.0.3.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	1.02861905098	151
Coq.Reals.PartSum.sum_decomposition	40
Coq.Reals.PartSum.sum_Rle	40
Coq.Reals.PartSum.Rsum_abs	40
Coq.Reals.PartSum.sum_cte	40
Coq.Reals.PartSum.sum_growing	40	7.2.1.0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: apply H; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (sum_f_R0 An N + Bn (S N)); only 1: apply Rplus_le_compat_l; only 1: apply H; only 1: do 2 rewrite <- (Rplus_comm (Bn (S N))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	31.5298950672	12044
Coq.Reals.PartSum.Rabs_triang_gen	40	3.3.1.0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	6.48862099648	3676
Coq.Reals.PartSum.cond_pos_sum	40
Coq.Reals.PartSum.cauchy_abs	40
Coq.Reals.PartSum.cv_cauchy_1	40
Coq.Reals.PartSum.cv_cauchy_2	40
Coq.Reals.PartSum.sum_eq_R0	40
Coq.Reals.PartSum.sum_incr	40
Coq.Reals.PartSum.sum_cv_maj	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_sym	40
Coq.Reals.ConstructiveCauchyReals.factorDenom	40	0.0.16.3.0	synth with cache (only 1: unfold Qeq, Qdiv, Qmult; only 1: intros; only 1: Z.nzsimpl'; only 1: simpl in *; only 1: reflexivity).	5.66010785103	5361
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_sym	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_cau_r	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_inc	40	1.3.0.0.0.3.21.6	synth with cache (only 1: intros b; only 1: intro m; only 1: Nat.induct ltac:(p); only 1: Nat.nzsimpl; only 1: trivial; only 1: intro p; only 1: simpl; only 1: Nat.solve_max).	32.8326518536	18589
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_max	40
Coq.Reals.ConstructiveCauchyReals.standard_modulus	40
Coq.Reals.ConstructiveCauchyReals.CRealLtEpsilon	40
Coq.Reals.ConstructiveCauchyReals.CRealLtForget	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_lpo_dec	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_not_lt	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_diff	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_modindep	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_aboveSig	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above_same	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_asym	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_irrefl	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_refl	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_refl	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_sym	40	9.0.9.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: destruct H; only 1: contradiction; only 1: destruct H; only 1: contradiction).	5.86135697365	5487
Coq.Reals.ConstructiveCauchyReals.CRealLt_dec	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_relT	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealGt_morph	40
Coq.Reals.ConstructiveCauchyReals.CReal_appart_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealLtProp_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealGe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_l	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_r	40	6.16.5.6	synth with cache (only 1: intros EQ; only 1: intros a b; only 1: apply CRealLt_morph; only 1: now Z.nzsimpl).	12.3851101398	7443
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_l	40	5.5.2.2.1.0	synth with cache (only 1: intros; only 1: intro abs; only 1: apply H0; only 1: apply (CRealLt_morph z z (CRealEq_refl z) x y); only 1: assumption; only 1: assumption).	1.79841804504	2243
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_r	40	7.0.1.4.4.0	synth with cache (only 1: intros; only 1: intro abs; only 1: apply H0; only 1: apply (CRealLt_morph x y H z z); only 1: apply CRealEq_refl; only 1: assumption).	2.48095011711	1832
Coq.Reals.ConstructiveCauchyReals.ConstCauchy	40
Coq.Reals.ConstructiveCauchyReals.inject_Q	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_0_1	40
Coq.Reals.ConstructiveCauchyReals.CReal_injectQPos	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQ	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQopp	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_compare	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_T	40	0.0.0.0.0.0.0.0.0.0.0.0.0.5	synth with cache (only 1: intros x; only 1: split; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs).	2.52292394638	759
Coq.Reals.ConstructiveCauchyReals.CReal_plus_cauchy	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus	40	22	synth with cache (only 1: now f_equal).	0.0630948543549	231
Coq.Reals.ConstructiveCauchyReals.CReal_plus_nth	40	4.4.1.5	synth with cache (only 1: destruct x as [xn limx], y as [yn limy]; only 1: unfold proj1_sig; only 1: pose proof (CReal_plus_cauchy xn xn yn Pos.to_nat limx limy); only 1: auto).	2.13953995705	1166
Coq.Reals.ConstructiveCauchyReals.CReal_plus_unfold	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp	40	23	synth with cache (only 1: now f_equal).	0.0781331062317	255
Coq.Reals.ConstructiveCauchyReals.belowMultiple	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_assoc	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_comm	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_r	40	5.2.1.0.0.0.0	synth with cache (only 1: intros; only 1: intro abs; only 1: apply H; only 1: clear H; only 1: do 2 rewrite <- (CReal_plus_comm x); only 1: apply CReal_plus_lt_compat_l; only 1: exact abs).	3.40042805672	1086
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_lt_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_l	40	0.0.0.0.0.0.0.6.0.0.0.0	synth with cache (only 1: intros [xn limx]; only 1: apply CRealEq_diff; only 1: intros; only 1: unfold CReal_plus, CReal_opp, inject_Q, proj1_sig; only 1: rewrite Qplus_comm; only 1: setoid_replace (xn (2 * Pos.to_nat n)%nat + - xn (2 * Pos.to_nat n)%nat - 0)%Q with 0; only 1: unfold Qle; only 1: simpl; only 1: unfold Z.le; only 1: intro absurd; only 1: inversion absurd; only 1: field).	24.7991890907	4119
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_T	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_0	40	3	synth with cache (only 1: apply CReal_plus_0_l).	1.01724290848	4
Coq.Reals.ConstructiveCauchyReals.CReal_opp_plus_distr	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_involutive	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_plus	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_one	40	0	synth with cache (only 1: reflexivity).	0.0164091587067	1
Coq.Reals.ConstructiveCauchyReals.inject_Q_lt	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.lt_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.le_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_le	40
Coq.Reals.ConstructiveCauchyReals.inject_Z_plus	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Z	40	18.5	synth with cache (only 1: intro eq; only 1: now f_equiv).	8.09367609024	3378
Coq.Reals.Rtrigo_reg.continuity_sin	40
Coq.Reals.Rtrigo_reg.CVN_R_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	40
Coq.Reals.Rtrigo_reg.derivable_pt_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_cos	40
Coq.Reals.Rtrigo_reg.derivable_sin	40	0.0.1.0.2	synth with cache (only 1: unfold derivable, continuity; only 1: unfold derivable_pt; only 1: intro; only 1: exists (cos x); only 1: apply derivable_pt_lim_sin).	0.125800132751	8
Coq.Reals.Rtrigo_reg.derivable_cos	40	0.0.1.0.0	synth with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (- sin x); only 1: apply derivable_pt_lim_cos).	0.12498497963	6
Coq.Reals.Rtrigo_reg.derive_pt_sin	40
Coq.Reals.Rtrigo_reg.derive_pt_cos	40
Coq.Reals.Cos_plus.Majxy_cv_R0	40
Coq.Reals.Cos_plus.reste1_maj	40
Coq.Reals.Cos_plus.reste2_maj	40
Coq.Reals.Cos_plus.reste1_cv_R0	40
Coq.Reals.Cos_plus.reste2_cv_R0	40
Coq.Reals.Cos_plus.reste_cv_R0	40
Coq.Reals.Cos_plus.cos_plus	40
Coq.Reals.Rgeom.distance_refl	40
Coq.Reals.Rgeom.distance_symm	40	0.0.0.0.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: intros a b; only 1: intros x0 y0; only 1: unfold dist_euc; only 1: apply Rsqr_inj; only 1: apply sqrt_positivity; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: apply sqrt_positivity; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: rewrite Rsqr_sqrt; only 1: rewrite Rsqr_sqrt; only 1: unfold Rsqr; only 1: ring; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr).	11.6797070503	7178
Coq.Reals.Rgeom.law_cosines	40
Coq.Reals.Rgeom.triangle	40
Coq.Reals.Rgeom.translation_0	40
Coq.Reals.Rgeom.isometric_translation	40
Coq.Reals.Rgeom.rotation_0	40
Coq.Reals.Rgeom.rotation_PI2	40
Coq.Reals.Rgeom.isometric_rotation_0	40
Coq.Reals.Rgeom.isometric_rotation	40
Coq.Reals.Rgeom.isometric_rot_trans	40
Coq.Reals.Rgeom.isometric_trans_rot	40
Coq.Reals.Rsqrt_def.dicho_comp	40
Coq.Reals.Rsqrt_def.dicho_lb_growing	40
Coq.Reals.Rsqrt_def.dicho_up_decreasing	40
Coq.Reals.Rsqrt_def.dicho_lb_maj_y	40
Coq.Reals.Rsqrt_def.dicho_lb_maj	40
Coq.Reals.Rsqrt_def.dicho_up_min_x	40
Coq.Reals.Rsqrt_def.dicho_up_min	40
Coq.Reals.Rsqrt_def.dicho_lb_cv	40
Coq.Reals.Rsqrt_def.dicho_up_cv	40
Coq.Reals.Rsqrt_def.dicho_lb_dicho_up	40
Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40
Coq.Reals.Rsqrt_def.pow_2_n_growing	40
Coq.Reals.Rsqrt_def.pow_2_n_infty	40
Coq.Reals.Rsqrt_def.cv_dicho	40
Coq.Reals.Rsqrt_def.continuity_seq	40
Coq.Reals.Rsqrt_def.dicho_lb_car	40
Coq.Reals.Rsqrt_def.dicho_up_car	40
Coq.Reals.Rsqrt_def.cv_pow_half	40
Coq.Reals.Rsqrt_def.IVT	40
Coq.Reals.Rsqrt_def.IVT_cor	40
Coq.Reals.Rsqrt_def.Rsqrt_exists	40
Coq.Reals.Rsqrt_def.Rsqrt_positivity	40
Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40	8.0.0.0.7	synth with cache (only 1: intros; only 1: unfold Rsqrt; only 1: destruct (Rsqrt_exists x (cond_nonneg x)) as (?, []); only 1: destruct (Rsqrt_exists x (cond_nonneg x)) as (?, []); only 1: auto using Rge_le).	2.49621701241	919
Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_non_negative	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.avl_node	40	0	synth with cache (only 1: intuition).	0.0151760578156	1
Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_0	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.empty_avl	40	1.0	synth with cache (only 1: unfold empty; only 1: intuition).	0.0126540660858	3
Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_avl	40	0.7.0	synth with cache (only 1: intros; only 1: unfold assert_false, create; only 1: auto).	0.0540099143982	15
Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_height	40	0.0	synth with cache (only 1: intros; only 1: intuition).	0.0158629417419	2
Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_2	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.concat_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.split_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map.map_height	40	0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: simpl; only 1: constructor).	0.0722870826721	5
Coq.FSets.FMapFullAVL.AvlProofs.Map.map_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_height	40	0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intuition).	0.0277171134949	5
Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map_option.map_option_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map2_opt.map2_opt_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map2.map2_avl	40
Coq.FSets.FMapFullAVL.IntMake.Elt.MapsTo_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.mem_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.mem_2	40
Coq.FSets.FMapFullAVL.IntMake.Elt.empty_1	40	8	synth with cache (only 1: now Z.nzsimpl).	0.18035697937	27
Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_1	40	14.41	synth with cache (only 1: fix odd_spec 1; only 1: auto).	14.107378006	7712
Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_2	40	2.31.1.0	synth with cache (only 1: intros m; only 1: case m; only 1: fix even_spec 1; only 1: auto).	31.1287331581	14538
Coq.FSets.FMapFullAVL.IntMake.Elt.add_1	40	1.0.7.0.18	synth with cache (only 1: red; only 1: induction m; only 1: simpl; only 1: intros m x y e; only 1: auto using find_1, add_1 with ordered_type).	2.69017696381	2971
Coq.FSets.FMapFullAVL.IntMake.Elt.add_2	40
Coq.FSets.FMapFullAVL.IntMake.Elt.add_3	40
Coq.FSets.FMapFullAVL.IntMake.Elt.remove_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.remove_2	40
Coq.FSets.FMapFullAVL.IntMake.Elt.remove_3	40
Coq.FSets.FMapFullAVL.IntMake.Elt.find_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.find_2	40	8.11.0.22	synth with cache (only 1: intro f; only 1: intros m x e; only 1: apply find_2; only 1: auto).	8.62979197502	13427
Coq.FSets.FMapFullAVL.IntMake.Elt.fold_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_2	40	0.0.0.21.2	synth with cache (only 1: intros m x; only 1: intro; only 1: unfold elements, MapsTo, eq_key_elt; only 1: rewrite elements_mapsto; only 1: auto).	3.31329202652	5517
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3	40
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3w	40
Coq.FSets.FMapFullAVL.IntMake.Elt.cardinal_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.Equivb_Equivb	40
Coq.FSets.FMapFullAVL.IntMake.Elt.equal_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.equal_2	40	3.3.0.0.1.0.0.0	synth with cache (only 1: unfold equal; only 1: intros (m, b, a) (m', b', a') cmp; only 1: rewrite Equivb_Equivb; only 1: simpl in *; only 1: rewrite equal_Equivb; only 1: auto; only 1: auto; only 1: auto).	9.60442399979	1731
Coq.FSets.FMapFullAVL.IntMake.map_1	40
Coq.FSets.FMapFullAVL.IntMake.map_2	40
Coq.FSets.FMapFullAVL.IntMake.mapi_1	40
Coq.FSets.FMapFullAVL.IntMake.mapi_2	40
Coq.FSets.FMapFullAVL.IntMake.map2_1	40
Coq.FSets.FMapFullAVL.IntMake.map2_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_cardinal_e	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_tcc	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_seq	40	0.2	synth with cache (only 1: intro n; only 1: solve_proper).	0.0153138637543	4
Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	3.4	synth with cache (only 1: intros; only 1: intuition).	0.0189349651337	9
Coq.FSets.FMapFullAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_In	40	2.2.12.2.31	synth with cache (only 1: compute; only 1: induction 1; only 1: auto; only 1: auto with ordered_type; only 1: auto with ordered_type).	15.37819314	25186
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_MapsTo	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_alt	40	1.0.1.1.0.1.0.0.0.0.0.0.2.0.9	synth with cache (only 1: constructor; only 1: induction 1; only 1: induction H; only 1: auto; only 1: auto; only 1: auto; only 1: induction 1; only 1: exists e; only 1: auto; only 1: destruct IHIn as (e, He); only 1: exists e; only 1: auto; only 1: destruct IHIn as (e, He); only 1: exists e; only 1: auto).	1.24850893021	2699
Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_1	40	2.2.8.1.7.10	synth with cache (only 1: intros sorted hyp; only 1: intros y' e'' eqky'; only 1: induction 1; only 1: eauto with ordered_type; only 1: auto; only 1: auto).	4.28908610344	9035
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_node_iff	40	3	synth with cache (only 1: intuition_in).	0.0535461902618	13
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_leaf	40	0.2.3	synth with cache (only 1: red; only 1: intuition; only 1: intuition_in).	0.0167679786682	8
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_leaf	40	1.0.1	synth with cache (only 1: intros sorted hyp; only 1: intros; only 1: intuition_in).	0.0151371955872	5
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_node	40	6.3.30.0	synth with cache (only 1: intros; only 1: compute; only 1: intuition_in; only 1: L.MX.order).	5.38943004608	4810
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_node	40	0.0.6	synth with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: order).	1.06029891968	17
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_left	40	0.0	synth with cache (only 1: unfold lt_tree in *; only 1: intuition_in).	0.014838218689	2
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_right	40	0	synth with cache (only 1: intuition_in).	0.0111589431763	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_left	40	0.0	synth with cache (only 1: unfold gt_tree in *; only 1: intuition_in).	0.0121998786926	2
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_right	40	0	synth with cache (only 1: intuition_in).	0.0096390247345	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_not_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_trans	40	0.1.1.0	synth with cache (only 1: intuition_in; only 1: intro; only 1: intro; only 1: order).	0.0278580188751	6
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_not_in	40	0.4.0	synth with cache (only 1: intros m x y; only 1: intuition_in; only 1: order).	0.0490210056305	7
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_trans	40	0.0.2.1.0.0	synth with cache (only 1: unfold gt_tree in *; only 1: intuition_in; only 1: induction m; only 1: intuition_in; only 1: intuition_in; only 1: eauto with ordered_type).	0.2716319561	9
Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_bst	40	0	synth with cache (only 1: intuition).	0.00838899612427	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_1	40	0.0.1	synth with cache (only 1: intros sorted hyp; only 1: unfold empty; only 1: intuition_in).	0.0337331295013	4
Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_1	40	0.1.0.0.6.3	synth with cache (only 1: unfold empty, Empty; only 1: induction m; only 1: intuition_in; only 1: intuition_in; only 1: simpl; only 1: eauto with ordered_type).	5.74664902687	441
Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_2	40	8.0.0.0.4.0	synth with cache (only 1: destruct m as [| r x e l h]; only 1: intros a n Hn; only 1: intuition_in; only 1: simpl; only 1: intro H; only 1: now destruct Zeq_bool).	2.4822409153	1607
Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_2	40	2.0.2.7.2.0.0	synth with cache (only 1: intros m x; only 1: functional induction (mem x m); only 1: intros; only 1: now destruct Zeq_bool; only 1: auto; only 1: auto; only 1: auto).	2.03634500504	1621
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in	40	3.3.3.3.0.1	synth with cache (only 1: intros; only 1: functional induction (find x m); only 1: intuition_in; only 1: auto; only 1: auto; only 1: auto).	2.73586797714	1678
Coq.FSets.FMapAVL.Raw.Proofs.Elt.in_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_iff	40	0.0.0.3.2.0.0.0.5.2	synth with cache (only 1: split; only 1: case_eq (find x m); only 1: intros; only 1: apply MapsTo_In with e; only 1: auto using find_1, find_2; only 1: congruence; only 1: intros; only 1: destruct (In_MapsTo H0) as (d, Hd); only 1: rewrite (find_1 H Hd); only 1: discriminate).	4.20667600632	3151
Coq.FSets.FMapAVL.Raw.Proofs.Elt.not_find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_mapsto_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_bst	40	0.15.1.0	synth with cache (only 1: unfold lt_tree in *; only 1: unfold gt_tree in *; only 1: compute; only 1: intuition_in).	1.95046901703	1868
Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_in	40	0.1	synth with cache (only 1: unfold create; only 1: intuition_in).	0.0812220573425	12
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_3	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_3	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_3	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_lt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_nodup	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_app	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_node	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv_aux	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.flatten_e_elements	40	0.1.2.0.0	synth with cache (only 1: unfold elements; only 1: simpl; only 1: intros; only 1: rewrite !elements_app, !app_nil_r, !app_assoc_reverse; only 1: auto).	0.0990970134735	8
Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_end_IfEq	40	7.5.3.10.59	synth with cache (only 1: intros H; only 1: red; only 1: destruct H; only 1: intuition; only 1: auto).	20.3097298145	23742
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_more_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_cont_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.Equivb_elements	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_Equivb	40
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_1	40	0.1.1.21	synth with cache (only 1: induction m; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	19.6363511086	13546
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_2	40	0.0.0.0.0.0.0.1	synth with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	0.0997879505157	9
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_2	40
Coq.FSets.FMapAVL.IntMake.Elt.MapsTo_1	40
Coq.FSets.FMapAVL.IntMake.Elt.mem_1	40
Coq.FSets.FMapAVL.IntMake.Elt.mem_2	40	4.14.37.0	synth with cache (only 1: unfold In, mem; only 1: intros Ha Hb; only 1: fix even_spec 1; only 1: trivial).	30.2572751045	76896
Coq.FSets.FMapAVL.IntMake.Elt.empty_1	40	9	synth with cache (only 1: now Z.nzsimpl).	0.136076211929	19
Coq.FSets.FMapAVL.IntMake.Elt.is_empty_1	40
Coq.FSets.FMapAVL.IntMake.Elt.is_empty_2	40
Coq.FSets.FMapAVL.IntMake.Elt.add_1	40
Coq.FSets.FMapAVL.IntMake.Elt.add_2	40
Coq.FSets.FMapAVL.IntMake.Elt.add_3	40
Coq.FSets.FMapAVL.IntMake.Elt.remove_1	40
Coq.FSets.FMapAVL.IntMake.Elt.remove_2	40
Coq.FSets.FMapAVL.IntMake.Elt.remove_3	40
Coq.FSets.FMapAVL.IntMake.Elt.find_1	40	0.1.6.0	synth with cache (only 1: intros m x y e; only 1: apply find_1; only 1: apply (is_bst m); only 1: auto).	0.146826982498	64
Coq.FSets.FMapAVL.IntMake.Elt.find_2	40	1.4.2.37	synth with cache (only 1: intros a r; only 1: intros; only 1: apply find_2; only 1: intuition_in).	7.69957304001	23005
Coq.FSets.FMapAVL.IntMake.Elt.fold_1	40
Coq.FSets.FMapAVL.IntMake.Elt.elements_1	40
Coq.FSets.FMapAVL.IntMake.Elt.elements_2	40	1.13.5.1.16.1	synth with cache (only 1: unfold elements, MapsTo, eq_key_elt; only 1: induction m; only 1: intuition; only 1: simpl; only 1: rewrite <- elements_mapsto; only 1: intuition).	11.6411380768	25078
Coq.FSets.FMapAVL.IntMake.Elt.elements_3	40
Coq.FSets.FMapAVL.IntMake.Elt.elements_3w	40	0.6.0	synth with cache (only 1: intros; only 1: apply PX.Sort_NoDupA; only 1: exact (elements_sort (is_bst m))).	0.0133788585663	9
Coq.FSets.FMapAVL.IntMake.Elt.cardinal_1	40
Coq.FSets.FMapAVL.IntMake.Elt.Equivb_Equivb	40
Coq.FSets.FMapAVL.IntMake.Elt.equal_1	40
Coq.FSets.FMapAVL.IntMake.Elt.equal_2	40	2.2.0.0.1.0.0.0	synth with cache (only 1: unfold equal; only 1: intros (m, b) (m', b') cmp; only 1: rewrite Equivb_Equivb; only 1: simpl in *; only 1: rewrite equal_Equivb; only 1: auto; only 1: auto; only 1: auto).	4.42388081551	876
Coq.FSets.FMapAVL.IntMake.map_1	40
Coq.FSets.FMapAVL.IntMake.map_2	40
Coq.FSets.FMapAVL.IntMake.mapi_1	40
Coq.FSets.FMapAVL.IntMake.mapi_2	40
Coq.FSets.FMapAVL.IntMake.map2_1	40
Coq.FSets.FMapAVL.IntMake.map2_2	40
Coq.FSets.FMapAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_end_Cmp	40	6.6.0.16.22.53	synth with cache (only 1: intros l; only 1: destruct l; only 1: simpl; only 1: tauto; only 1: simpl; only 1: Raw.Proofs.intuition_in).	5.04120016098	27309
Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_cont_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare	40
Coq.FSets.FMapAVL.IntMake_ord.eq_seq	40	2	synth with cache (only 1: tauto).	0.0258491039276	18
Coq.FSets.FMapAVL.IntMake_ord.lt_slt	40	4	synth with cache (only 1: solve_proper).	0.00883793830872	5
Coq.FSets.FMapAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.In_eq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.mem_iff	40	23	synth with cache (only 1: intuition).	0.603427171707	738
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.not_mem_iff	40	5.78	synth with cache (only 1: Ndec.eqb2eq; only 1: intuition).	18.4277250767	33899
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.equal_iff	40	28.12	synth with cache (only 1: repeat red; only 1: intuition).	2.39069581032	3780
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.subset_iff	40	7	synth with cache (only 1: intuition).	0.0187361240387	8
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.empty_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.is_empty_iff	40	21	synth with cache (only 1: intuition).	1.12472891808	1859
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.singleton_iff	40	31	synth with cache (only 1: intuition).	0.812964200974	1605
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_neq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_neq_iff	40	5.0.2.6.4.0	synth with cache (only 1: split; only 1: intro; only 1: apply remove_3 with x; only 1: auto; only 1: apply remove_2; only 1: auto).	0.952540159225	1632
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.union_iff	40	13	synth with cache (only 1: intuition).	0.395030021667	133
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.inter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.diff_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.filter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.for_all_iff	40	1	synth with cache (only 1: intuition).	0.0224089622498	2
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.exists_iff	40	4	synth with cache (only 1: intuition).	0.33025598526	18
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.elements_iff	40	68	synth with cache (only 1: intuition).	2.32755804062	6535
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.mem_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.empty_b	40	6.8.6.21.12.78	synth with cache (only 1: rewrite <- ?negb_true_iff, ?BinNat.N.negb_even, ?BinNat.N.odd_spec, ?BinNat.N.even_spec; only 1: apply eq_true_iff_eq; only 1: split; only 1: intuition; only 1: fix odd_spec 1; only 1: intuition).	13.0693399906	17885
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_neq_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_neq_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.singleton_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.union_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.inter_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.diff_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.elements_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.filter_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.for_all_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.exists_b	40
Coq.FSets.FSetFacts.WFacts_fun.E_ST	40	4.2.6.1.5.16.1.25	synth with cache (only 1: split; only 1: auto; only 1: intros Hb; only 1: intros; only 1: intuition; only 1: intros EQ; only 1: intros; only 1: eauto).	7.08218693733	10296
Coq.FSets.FSetFacts.WFacts_fun.Equal_ST	40
Coq.FSets.FSetFacts.WFacts_fun.In_m	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40
Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40	33.4	synth with cache (only 1: repeat red; only 1: firstorder).	9.16595005989	13810
Coq.FSets.FSetFacts.WFacts_fun.mem_m	40
Coq.FSets.FSetFacts.WFacts_fun.singleton_m	40
Coq.FSets.FSetFacts.WFacts_fun.add_m	40
Coq.FSets.FSetFacts.WFacts_fun.remove_m	40
Coq.FSets.FSetFacts.WFacts_fun.union_m	40
Coq.FSets.FSetFacts.WFacts_fun.inter_m	40
Coq.FSets.FSetFacts.WFacts_fun.diff_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_m	40
Coq.FSets.FSetFacts.WFacts_fun.subset_m	40
Coq.FSets.FSetFacts.WFacts_fun.equal_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_refl	40	0.4	synth with cache (only 1: red; only 1: intuition).	0.0107870101929	6
Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	3.0	synth with cache (only 1: red; only 1: intuition).	0.0158159732819	5
Coq.FSets.FSetFacts.WFacts_fun.In_s_m	40
Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	1	synth with cache (only 1: firstorder).	0.00818181037903	2
Coq.FSets.FSetFacts.WFacts_fun.add_s_m_Proper	40
Coq.FSets.FSetFacts.WFacts_fun.remove_s_m_Proper	40	0.2.0.0.0	synth with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: do 2 rewrite remove_iff; only 1: rewrite H; only 1: intuition).	0.0745139122009	13
Coq.FSets.FSetFacts.WFacts_fun.union_s_m_Proper	40
Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	0.2.14	synth with cache (only 1: intros a b; only 1: simpl_relation; only 1: eauto with set).	0.224963188171	337
Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40
Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40
Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40
Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40	0.1.1.15.2	synth with cache (only 1: intuition; only 1: intro; only 1: do 2 (rewrite filter_iff; auto); only 1: rewrite H0; only 1: tauto).	3.22658920288	1765
Coq.FSets.FSetPositive.PositiveSet.In_1	40	18.4	synth with cache (only 1: intros x y H; only 1: <Coq.Strings.String.t_eqb>).	1.05823707581	790
Coq.FSets.FSetPositive.PositiveSet.eq_refl	40	0.1	synth with cache (only 1: intros a b; only 1: solve_proper).	0.0242908000946	3
Coq.FSets.FSetPositive.PositiveSet.eq_sym	40	5.10.0	synth with cache (only 1: unfold eq, Equal; only 1: intros; only 1: now f_equal).	1.94412207603	1322
Coq.FSets.FSetPositive.PositiveSet.eq_trans	40
Coq.FSets.FSetPositive.PositiveSet.mem_1	40	0	synth with cache (only 1: trivial).	0.0173809528351	1
Coq.FSets.FSetPositive.PositiveSet.mem_2	40	0.0	synth with cache (only 1: unfold In; only 1: trivial).	0.0216450691223	2
Coq.FSets.FSetPositive.PositiveSet.mem_Leaf	40	2	synth with cache (only 1: solve_proper).	0.0185170173645	3
Coq.FSets.FSetPositive.PositiveSet.empty_1	40	3.1	synth with cache (only 1: intros EQ; only 1: now BinInt.Z.nzsimpl).	0.0413970947266	6
Coq.FSets.FSetPositive.PositiveSet.mem_node	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_spec	40	0.10	synth with cache (only 1: fix odd_spec 1; only 1: trivial).	0.559985160828	54
Coq.FSets.FSetPositive.PositiveSet.is_empty_1	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_2	40	0.0.1	synth with cache (only 1: intro; only 1: rewrite is_empty_spec; only 1: trivial).	0.428025960922	64
Coq.FSets.FSetPositive.PositiveSet.subset_Leaf_s	40	10	synth with cache (only 1: now f_equal).	0.175875902176	90
Coq.FSets.FSetPositive.PositiveSet.subset_spec	40	1.15.1.5.1	synth with cache (only 1: induction s as [| l IHl o r IHr]; only 1: intros; only 1: now f_equal; only 1: fix even_spec 1; only 1: trivial).	12.3910059929	8479
Coq.FSets.FSetPositive.PositiveSet.subset_1	40
Coq.FSets.FSetPositive.PositiveSet.subset_2	40
Coq.FSets.FSetPositive.PositiveSet.equal_subset	40
Coq.FSets.FSetPositive.PositiveSet.equal_spec	40
Coq.FSets.FSetPositive.PositiveSet.equal_1	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: unfold Equal, Subset; only 1: firstorder).	0.15552687645	6
Coq.FSets.FSetPositive.PositiveSet.equal_2	40	0.0.0.0.0.1	synth with cache (only 1: intros s s'; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: unfold Equal, Subset; only 1: firstorder).	0.176491975784	16
Coq.FSets.FSetPositive.PositiveSet.eq_dec	40
Coq.FSets.FSetPositive.PositiveSet.lex_Opp	40
Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40
Coq.FSets.FSetPositive.PositiveSet.compare_inv	40
Coq.FSets.FSetPositive.PositiveSet.lex_Eq	40	0.0.1.4.55	synth with cache (only 1: intro n; only 1: induction n; only 1: easy; only 1: now split; only 1: easy).	37.2691090107	44000
Coq.FSets.FSetPositive.PositiveSet.compare_bool_Eq	40	1.0.0.1.0	synth with cache (only 1: destr_bool; only 1: easy'; only 1: easy'; only 1: now split; only 1: easy').	0.0511291027069	7
Coq.FSets.FSetPositive.PositiveSet.compare_equal	40
Coq.FSets.FSetPositive.PositiveSet.compare_gt	40
Coq.FSets.FSetPositive.PositiveSet.compare_eq	40
Coq.FSets.FSetPositive.PositiveSet.compare	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_cxe	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xce	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0314218997955	4
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lxl	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0270280838013	4
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_gxg	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0297768115997	4
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xll	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0279078483582	4
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xgg	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0306799411774	4
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lex	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	7.10	synth with cache (only 1: fix even_spec 1; only 1: trivial).	0.260252952576	306
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_Leaf	40	0.1.0.0.3.1	synth with cache (only 1: unfold compare_fun, equal; only 1: induction s as [| l IHl o r IHr]; only 1: simpl; only 1: tauto; only 1: simpl; only 1: trivial).	0.174260139465	58
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_empty_x	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_empty	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_fun	40
Coq.FSets.FSetPositive.PositiveSet.lt_trans	40
Coq.FSets.FSetPositive.PositiveSet.lt_not_eq	40
Coq.FSets.FSetPositive.PositiveSet.add_spec	40
Coq.FSets.FSetPositive.PositiveSet.add_1	40
Coq.FSets.FSetPositive.PositiveSet.add_2	40	2.0.0	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: intuition congruence).	0.0372359752655	12
Coq.FSets.FSetPositive.PositiveSet.add_3	40
Coq.FSets.FSetPositive.PositiveSet.remove_spec	40
Coq.FSets.FSetPositive.PositiveSet.remove_1	40
Coq.FSets.FSetPositive.PositiveSet.remove_2	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite remove_spec; only 1: tauto).	0.0339438915253	3
Coq.FSets.FSetPositive.PositiveSet.remove_3	40	0.0.19	synth with cache (only 1: intros a b c; only 1: rewrite remove_spec; only 1: tauto).	1.67919611931	1666
Coq.FSets.FSetPositive.PositiveSet.singleton_1	40
Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.0.0.0.0.0	synth with cache (only 1: unfold singleton; only 1: intros x y; only 1: rewrite add_spec; only 1: unfold In; only 1: rewrite mem_Leaf; only 1: intuition discriminate).	0.0480530261993	6
Coq.FSets.FSetPositive.PositiveSet.union_spec	40	1.28.0	synth with cache (only 1: unfold In; only 1: fix odd_spec 1; only 1: intuition congruence).	26.0910260677	19607
Coq.FSets.FSetPositive.PositiveSet.union_1	40
Coq.FSets.FSetPositive.PositiveSet.union_2	40
Coq.FSets.FSetPositive.PositiveSet.union_3	40	2.1.1.1.0	synth with cache (only 1: intros; only 1: apply <- union_spec; only 1: apply -> union_spec; only 1: apply <- union_spec; only 1: firstorder).	0.0741930007935	19
Coq.FSets.FSetPositive.PositiveSet.inter_spec	40
Coq.FSets.FSetPositive.PositiveSet.inter_1	40
Coq.FSets.FSetPositive.PositiveSet.inter_2	40	0.0.0	synth with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.029727935791	3
Coq.FSets.FSetPositive.PositiveSet.inter_3	40	0.0.0	synth with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.0345349311829	3
Coq.FSets.FSetPositive.PositiveSet.diff_spec	40
Coq.FSets.FSetPositive.PositiveSet.diff_1	40
Coq.FSets.FSetPositive.PositiveSet.diff_2	40	0.1.23	synth with cache (only 1: intros x y H; only 1: rewrite diff_spec; only 1: tauto).	33.4732918739	26381
Coq.FSets.FSetPositive.PositiveSet.diff_3	40	0.0.0	synth with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.0345380306244	3
Coq.FSets.FSetPositive.PositiveSet.fold_1	40
Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40
Coq.FSets.FSetPositive.PositiveSet.xfilter_spec	40
Coq.FSets.FSetPositive.PositiveSet.filter_1	40
Coq.FSets.FSetPositive.PositiveSet.filter_2	40	0.0.0.0	synth with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	0.0456240177155	4
Coq.FSets.FSetPositive.PositiveSet.filter_3	40	0.0.0.0	synth with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	0.0505521297455	4
Coq.FSets.FSetPositive.PositiveSet.xforall_spec	40	7.26.12.0	synth with cache (only 1: induction s as [| l IHl o r IHr]; only 1: easy; only 1: fix even_spec 1; only 1: tauto).	22.8164668083	32697
Coq.FSets.FSetPositive.PositiveSet.for_all_1	40
Coq.FSets.FSetPositive.PositiveSet.for_all_2	40	0.0.0.0	synth with cache (only 1: intros s f _; only 1: unfold for_all; only 1: rewrite xforall_spec; only 1: trivial).	0.0414779186249	4
Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40
Coq.FSets.FSetPositive.PositiveSet.exists_1	40
Coq.FSets.FSetPositive.PositiveSet.exists_2	40	0.0.0.0	synth with cache (only 1: intros s f _; only 1: unfold exists_; only 1: rewrite xexists_spec; only 1: trivial).	0.0432119369507	4
Coq.FSets.FSetPositive.PositiveSet.partition_filter	40	6.55	synth with cache (only 1: fix even_spec 1; only 1: auto).	4.19661903381	7946
Coq.FSets.FSetPositive.PositiveSet.partition_1	40
Coq.FSets.FSetPositive.PositiveSet.partition_2	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite partition_filter; only 1: apply eq_refl).	0.0272309780121	3
Coq.FSets.FSetPositive.PositiveSet.xelements_spec	40
Coq.FSets.FSetPositive.PositiveSet.elements_1	40
Coq.FSets.FSetPositive.PositiveSet.elements_2	40
Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40	4.1.1.38	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: unfold PositiveOrderedTypeBits.lt in H; only 1: eauto).	9.59769797325	8279
Coq.FSets.FSetPositive.PositiveSet.elements_3	40
Coq.FSets.FSetPositive.PositiveSet.elements_3w	40
Coq.FSets.FSetPositive.PositiveSet.choose_1	40
Coq.FSets.FSetPositive.PositiveSet.choose_2	40
Coq.FSets.FSetPositive.PositiveSet.choose_empty	40
Coq.FSets.FSetPositive.PositiveSet.choose_3'	40
Coq.FSets.FSetPositive.PositiveSet.choose_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_2	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_2	40
Coq.FSets.FMapPositive.append_assoc_0	40
Coq.FSets.FMapPositive.append_assoc_1	40
Coq.FSets.FMapPositive.append_neutral_r	40	2.9.0.5.0.6	synth with cache (only 1: induction i; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now f_equal).	4.63179302216	2028
Coq.FSets.FMapPositive.append_neutral_l	40	1.0.0.0.0.0.0	synth with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: now f_equal).	0.0268630981445	8
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gempty	40	0.0.2.5.86	synth with cache (only 1: intro n; only 1: destruct n; only 1: auto with arith; only 1: easy; only 1: easy).	21.8795650005	48665
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gss	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gleaf	40	0.0.0.0.0.0.1	synth with cache (only 1: destruct i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: easy).	0.0269310474396	8
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gso	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.rleaf	40	0.6.0.6.77.24	synth with cache (only 1: intros H; only 1: induction H; only 1: auto  4; only 1: simpl; only 1: trivial; only 1: tauto).	15.3415560722	48484
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.grs	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gro	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_correct	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_correct	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xfind_left	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ii	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_io	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oo	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oi	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ih	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oh	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_hi	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ho	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.find_xfind_h	40	1.2.0.2.0.3	synth with cache (only 1: destruct i; only 1: simpl in *; only 1: auto; only 1: simpl in *; only 1: auto; only 1: auto).	0.583920955658	307
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_complete	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_complete	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.cardinal_1	40
Coq.FSets.FMapPositive.PositiveMap.A.mem_find	40
Coq.FSets.FMapPositive.PositiveMap.A.Empty_alt	40
Coq.FSets.FMapPositive.PositiveMap.A.Empty_Node	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.MapsTo_1	40	15.6.8.0	synth with cache (only 1: destruct m; only 1: compute; only 1: congruence; only 1: congruence).	11.8544390202	16313
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_1	40	5	synth with cache (only 1: auto).	0.0125331878662	6
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_2	40	0.0	synth with cache (only 1: unfold MapsTo; only 1: auto).	0.0127708911896	2
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.empty_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_3	40	0.2.1.2.0	synth with cache (only 1: unfold MapsTo; only 1: intro H; only 1: rewrite gso; only 1: auto; only 1: auto).	0.0788750648499	56
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_3	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_sort	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3w	40
Coq.FSets.FMapPositive.PositiveMap.xgmapi	40
Coq.FSets.FMapPositive.PositiveMap.gmapi	40
Coq.FSets.FMapPositive.PositiveMap.mapi_1	40
Coq.FSets.FMapPositive.PositiveMap.mapi_2	40
Coq.FSets.FMapPositive.PositiveMap.map_1	40
Coq.FSets.FMapPositive.PositiveMap.map_2	40
Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_l	40
Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_r	40
Coq.FSets.FMapPositive.PositiveMap.map2.gmap2	40
Coq.FSets.FMapPositive.PositiveMap.map2_1	40
Coq.FSets.FMapPositive.PositiveMap.map2_2	40
Coq.FSets.FMapPositive.PositiveMap.Fold.xfoldi_1	40
Coq.FSets.FMapPositive.PositiveMap.fold_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_2	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsspec	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.xmap2_lr	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.map2_commut	40
Coq.FSets.FMapFacts.WFacts_fun.eq_bool_alt	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0560021400452	5
Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_fun	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.MapsTo_iff	40	2.11.0.11.0	synth with cache (only 1: split; only 1: intros; only 1: apply (MapsTo_1 H H0); only 1: intros; only 1: apply (MapsTo_1 (E.eq_sym H) H0)).	3.22667002678	3516
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mem_in_iff	40	1.7	synth with cache (only 1: intros s2; only 1: intuition).	0.0551989078522	27
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_mem_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_dec	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.find_mapsto_iff	40	21	synth with cache (only 1: intuition).	0.620343923569	625
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_find_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.in_find_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.equal_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_in_iff	40	0.22.0	synth with cache (only 1: unfold In; only 1: firstorder; only 1: apply (empty_1 H)).	7.43932795525	5753
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.is_empty_iff	40	1	synth with cache (only 1: intuition).	0.0497360229492	22
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_mapsto_iff	40	1.3.1.4.1.0	synth with cache (only 1: split; only 1: intuition; only 1: apply add_3 with x e; only 1: auto; only 1: auto; only 1: intuition).	1.25161409378	621
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_mapsto_iff	40	1.1.2.0.10.9.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros; only 1: apply remove_3 with x; only 1: auto; only 1: intros; only 1: apply remove_2; only 1: intuition; only 1: intuition).	11.3202590942	15178
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_inv	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_find_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.find_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_a	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_o	40	1.0	synth with cache (only 1: intros; only 1: auto with map).	0.0273559093475	3
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_o	40	8.0.0.9.2.1.1	synth with cache (only 1: intros; only 1: intuition; only 1: rewrite eq_option_alt; only 1: intros; only 1: rewrite <- 2!find_mapsto_iff; only 1: intuition; only 1: apply (add_3 H H0)).	3.31061816216	2596
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_o	40	2.3.5.14.2	synth with cache (only 1: intro e'; only 1: intuition; only 1: destruct (eq_dec x y); only 1: auto with map; only 1: intuition).	8.52247714996	7003
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_o	40	0.0.0.2.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).	0.0530009269714	7
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_o	40	0.0.0.2.0.3.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: destruct (eq_dec x y); only 1: now intuition; only 1: now intuition).	1.03624892235	244
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_b	40	0.2.0.0.2.1.0.3.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite mem_find_b; only 1: unfold eqb; only 1: destruct (eq_dec x y); only 1: rewrite remove_eq_o; only 1: auto; only 1: auto with map; only 1: rewrite remove_neq_o; only 1: auto; only 1: auto with map).	21.4999611378	7675
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map2_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_b	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equiv	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Cmp.Equiv_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb_eqdec	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	4	synth with cache (only 1: split).	0.141973972321	47
Coq.FSets.FMapFacts.WFacts_fun.Equal_sym	40	1.1.0	synth with cache (only 1: red; only 1: intros; only 1: auto).	0.0218169689178	5
Coq.FSets.FMapFacts.WFacts_fun.Equal_trans	40	0.7.3.4.1	synth with cache (only 1: red; only 1: intro e; only 1: intros; only 1: rewrite <- H0; only 1: auto with map).	9.10690522194	2724
Coq.FSets.FMapFacts.WFacts_fun.Equal_ST	40	4	synth with cache (only 1: auto).	0.0708208084106	5
Coq.FSets.FMapFacts.WFacts_fun.In_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.Empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.is_empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.mem_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.find_m_Proper	40	0.0.3.3.9.0.5	synth with cache (only 1: unfold Equal; only 1: intros k k' Hk m m' Hm; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- 2!find_mapsto_iff; only 1: rewrite (MapsTo_iff m e Hk), find_mapsto_iff, find_mapsto_iff, Hm; only 1: intuition).	22.9447290897	12008
Coq.FSets.FMapFacts.WFacts_fun.add_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.map_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.eqk_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.eqke_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.InA_eqke_eqk	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.NoDupA_eqk_eqke	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.findA_rev	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1b	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_3	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_spec_right	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_bis	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_nodep	40	0.1.3.1.1	synth with cache (only 1: intros; only 1: apply fold_rec; only 1: eauto with *; only 1: intros; only 1: auto).	0.487795829773	156
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_weak	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rel	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction_bis	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_identity	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_init	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_commutes	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_add	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Equal_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_1	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_1	40	0.1.31	synth with cache (only 1: intros Hab; only 1: rewrite <- cardinal_Empty; only 1: auto with map).	39.327244997	17740
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2b	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.filter_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.for_all_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.exists_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_alt	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_1	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_Partition	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_In	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_sym	40	0.0.3.0.13	synth with cache (only 1: compute; only 1: intros m' Hm'; only 1: intros H k ((v, Hv), (v', Hv')); only 1: eapply H; only 1: eauto).	1.04251718521	874
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_sym	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_partition	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_dec	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_m_Proper	40	0.0.0.0.0.0.1.0.0.4	synth with cache (only 1: intros m m' Hm; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_Equal with (eqA := eq); only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto).	0.853731870651	366
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.update_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.diff_m_Proper	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.sort_equivlistA_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_1	40	1.25.3.5	synth with cache (only 1: intros e; only 1: unfold O.eqke, O.ltk; only 1: fix even_spec 1; only 1: intuition).	19.0925211906	11802
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_1	40	1.3.1.3.1.0.7.0	synth with cache (only 1: intros (x, e) (y, e'); only 1: compute; only 1: destruct (E.compare x y); only 1: intuition; only 1: order; only 1: intuition; only 1: order; only 1: intuition).	17.3532130718	5917
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_compat	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_compat	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_split	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Below	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Equal_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Above	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Below	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_max	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_min	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Equal	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Below	40
Coq.FSets.FMapWeakList.Raw.Elt.empty_1	40	9.1	synth with cache (only 1: intros a b; only 1: easy).	0.0561540126801	77
Coq.FSets.FMapWeakList.Raw.Elt.empty_NoDup	40	10	synth with cache (only 1: constructor).	0.0171520709991	28
Coq.FSets.FMapWeakList.Raw.Elt.is_empty_1	40
Coq.FSets.FMapWeakList.Raw.Elt.is_empty_2	40	2.0.19	synth with cache (only 1: destruct m; only 1: auto; only 1: inversion 1).	1.14914298058	1654
Coq.FSets.FMapWeakList.Raw.Elt.mem_1	40
Coq.FSets.FMapWeakList.Raw.Elt.mem_2	40
Coq.FSets.FMapWeakList.Raw.Elt.find_2	40
Coq.FSets.FMapWeakList.Raw.Elt.find_1	40
Coq.FSets.FMapWeakList.Raw.Elt.find_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.add_1	40
Coq.FSets.FMapWeakList.Raw.Elt.add_2	40
Coq.FSets.FMapWeakList.Raw.Elt.add_3	40
Coq.FSets.FMapWeakList.Raw.Elt.add_3'	40
Coq.FSets.FMapWeakList.Raw.Elt.add_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt.add_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.add_not_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_1	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_2	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_3	40	2.0.1.1.1.0.2.0.0	synth with cache (only 1: intros m Hm x y e; only 1: clear Hm; only 1: unfold PX.MapsTo; only 1: functional induction (remove x m); only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: auto; only 1: auto).	5.35829615593	2698
Coq.FSets.FMapWeakList.Raw.Elt.remove_3'	40	0.4.0.3.0.0.0.18	synth with cache (only 1: intros m Hm x y e; only 1: functional induction (remove x m); only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: auto; only 1: inversion_clear Hm; only 1: auto).	3.02715396881	1663
Coq.FSets.FMapWeakList.Raw.Elt.remove_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt.elements_1	40	0.4	synth with cache (only 1: intros e' eqfind; only 1: auto).	0.0107860565186	6
Coq.FSets.FMapWeakList.Raw.Elt.elements_2	40	0	synth with cache (only 1: auto).	0.00692296028137	1
Coq.FSets.FMapWeakList.Raw.Elt.elements_3w	40	4.3.0	synth with cache (only 1: induction m; only 1: intuition; only 1: auto).	0.212779998779	32
Coq.FSets.FMapWeakList.Raw.Elt.fold_1	40
Coq.FSets.FMapWeakList.Raw.Elt.submap_1	40
Coq.FSets.FMapWeakList.Raw.Elt.submap_2	40
Coq.FSets.FMapWeakList.Raw.Elt.equal_1	40
Coq.FSets.FMapWeakList.Raw.Elt.equal_2	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_1	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_2	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_1	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_2	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.fold_right_pair_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_l_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_r_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_0	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_2	40
Coq.FSets.FMapWeakList.Make.Elt.MapsTo_1	40
Coq.FSets.FMapWeakList.Make.Elt.mem_1	40
Coq.FSets.FMapWeakList.Make.Elt.mem_2	40
Coq.FSets.FMapWeakList.Make.Elt.empty_1	40	0.0.10.2	synth with cache (only 1: intros a b; only 1: simpl; only 1: intro abs; only 1: inversion abs).	0.0761320590973	158
Coq.FSets.FMapWeakList.Make.Elt.is_empty_1	40
Coq.FSets.FMapWeakList.Make.Elt.is_empty_2	40	5.33.0	synth with cache (only 1: intros m; only 1: fix even_spec 1; only 1: intuition).	6.71016907692	16406
Coq.FSets.FMapWeakList.Make.Elt.add_1	40
Coq.FSets.FMapWeakList.Make.Elt.add_2	40
Coq.FSets.FMapWeakList.Make.Elt.add_3	40
Coq.FSets.FMapWeakList.Make.Elt.remove_1	40
Coq.FSets.FMapWeakList.Make.Elt.remove_2	40
Coq.FSets.FMapWeakList.Make.Elt.remove_3	40
Coq.FSets.FMapWeakList.Make.Elt.find_1	40
Coq.FSets.FMapWeakList.Make.Elt.find_2	40
Coq.FSets.FMapWeakList.Make.Elt.elements_1	40	8	synth with cache (only 1: auto).	0.0178458690643	19
Coq.FSets.FMapWeakList.Make.Elt.elements_2	40	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0103878974915	2
Coq.FSets.FMapWeakList.Make.Elt.elements_3w	40	21.10	synth with cache (only 1: induction m; only 1: trivial).	0.373157024384	1250
Coq.FSets.FMapWeakList.Make.Elt.cardinal_1	40	0.1	synth with cache (only 1: intros m; only 1: auto).	0.0109829902649	3
Coq.FSets.FMapWeakList.Make.Elt.fold_1	40
Coq.FSets.FMapWeakList.Make.Elt.equal_1	40
Coq.FSets.FMapWeakList.Make.Elt.equal_2	40
Coq.FSets.FMapWeakList.Make.map_1	40
Coq.FSets.FMapWeakList.Make.map_2	40
Coq.FSets.FMapWeakList.Make.mapi_1	40
Coq.FSets.FMapWeakList.Make.mapi_2	40
Coq.FSets.FMapWeakList.Make.map2_1	40
Coq.FSets.FMapWeakList.Make.map2_2	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	1	synth with cache (only 1: auto with *).	0.00951194763184	2
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0.0.0	synth with cache (only 1: compute; only 1: intros; only 1: tauto).	0.014270067215	3
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	26	synth with cache (only 1: firstorder).	3.9277780056	2206
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	12.0.7.6	synth with cache (only 1: red; only 1: intuition; only 1: unfold Subset, Included, Same_set, In, mkEns; only 1: Dec.fsetdec).	0.632892131805	948
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	3.1.2	synth with cache (only 1: unfold Subset, Included, Same_set, In, mkEns; only 1: unfold Empty; only 1: firstorder).	0.24827504158	111
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	2.2.23.1.12.0	synth with cache (only 1: intuition; only 1: split; only 1: intuition; only 1: intro H; only 1: unfold Same_set, Included, mkEns, In; only 1: auto with *).	8.5920009613	7080
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Ens_to_FSet	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_eq	40	0.0.0.0.0.1.0.4.0	synth with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	6.6790060997	1495
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.empty_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_equal_empty	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_1	40	4.7	synth with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: intuition).	10.3567149639	4147
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_2	40	0	synth with cache (only 1: auto with set).	0.0115730762482	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_1	40	2.7	synth with cache (only 1: apply mem_1; only 1: Dec.fsetdec).	1.12681388855	470
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_2	40	1.1.0.1.1.0.0.1.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	24.9409251213	4883
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_2	40	0.0.0.4.1.1.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	5.96094083786	1106
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_equal_add	40	0.1	synth with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.141577959061	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_3	40	0.0.0.0	synth with cache (only 1: rewrite mem_iff; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.0326280593872	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_4	40	0.0.0.2.0	synth with cache (only 1: intros; only 1: rewrite mem_iff; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.0361320972443	7
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_refl	40	1.1	synth with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.0200500488281	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_sym	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_trans	40	4.5.1	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.798048973083	300
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_equal	40	1.2.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.118732213974	6
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_cardinal	40	4.6.1	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.339283943176	137
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_refl	40	1.2.0.1	synth with cache (only 1: apply subset_1; only 1: unfold Subset; only 1: intros; only 1: intuition).	0.112528085709	8
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_antisym	40	12	synth with cache (only 1: auto with set).	0.287461996078	167
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_trans	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_equal	40	0	synth with cache (only 1: auto with set).	0.0104959011078	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_3	40	6.2	synth with cache (only 1: intros; only 1: auto with set).	0.340166091919	119
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_equal	40	0.1.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).	0.0142560005188	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_3	40	4.3	synth with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: intuition).	0.104909896851	34
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_equal	40	2.3	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.268264055252	36
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_remove	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_add	40	3.7	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	1.49334216118	226
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_cardinal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_1	40	0.3	synth with cache (only 1: apply mem_1; only 1: Dec.fsetdec).	0.394977092743	110
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_sym	40	1.1.1.0.0	synth with cache (only 1: destruct (mem x (union s s')); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: intuition).	1.52677798271	169
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0141310691833	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_1	40	0	synth with cache (only 1: auto with set).	0.0111789703369	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_2	40	0	synth with cache (only 1: auto with set).	0.0104529857635	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_assoc	40	0	synth with cache (only 1: auto with set).	0.00948691368103	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_union_singleton	40	2	synth with cache (only 1: auto with set).	0.0210390090942	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_add	40	0	synth with cache (only 1: auto with set).	0.00932598114014	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_1	40	0	synth with cache (only 1: auto with set).	0.00825381278992	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_2	40	0	synth with cache (only 1: auto with set).	0.00836300849915	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_3	40	0	synth with cache (only 1: auto with set).	0.0167329311371	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_sym	40	0	synth with cache (only 1: intuition).	0.0838000774384	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0128200054169	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: auto with set).	0.0103459358215	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: auto with set).	0.075352191925	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_assoc	40	0	synth with cache (only 1: auto with set).	0.010922908783	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_1	40	1	synth with cache (only 1: auto with set).	0.0231370925903	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_2	40	0	synth with cache (only 1: auto with set).	0.0107309818268	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_1	40	0	synth with cache (only 1: auto with set).	0.010311126709	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_1	40	0	synth with cache (only 1: auto with set).	0.00924587249756	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_2	40	0	synth with cache (only 1: auto with set).	0.00983285903931	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_3	40	0	synth with cache (only 1: auto with set).	0.017196893692	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset	40	0.2	synth with cache (only 1: apply subset_1; only 1: Dec.fsetdec).	0.0329020023346	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0108120441437	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_inter_singleton	40	0.2	synth with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.0755989551544	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_empty	40	1	synth with cache (only 1: auto with set).	0.0218238830566	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_all	40	1	synth with cache (only 1: auto with set).	0.0215120315552	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exclusive_set	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_empty	40	0.0	synth with cache (only 1: apply fold_1b; only 1: auto with set).	0.0155968666077	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_equal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_add	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.add_fold	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_1	40	0.2.2.2.2.0.1	synth with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	2.19443511963	908
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_1	40	1	synth with cache (only 1: auto with set fset).	0.0244429111481	16
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_2	40	2.0.0.0.3.5.1	synth with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: rewrite mem_iff; only 1: destruct (mem x s); only 1: intuition; only 1: intuition; only 1: auto with set).	1.97789597511	1067
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_1	40	7.1.1.0.0.6.1.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: destruct (mem x s); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto with set).	30.3975100517	17763
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_cardinal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	7.0	synth with cache (only 1: intros; only 1: auto with set fset).	0.0263810157776	12
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.Comp'	40	33	synth with cache (only 1: solve_proper).	0.796094894409	682
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.exists_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_1	40	13	synth with cache (only 1: auto with set).	0.0871920585632	109
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_2	40	0	synth with cache (only 1: auto with set).	0.0117878913879	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_2	40	2.1.0.4.0.0.0.1.0.1.0	synth with cache (only 1: red; only 1: unfold Add, MP.Add; only 1: intros; only 1: do 2 (rewrite filter_iff; auto); only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate).	31.4005410671	7052
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.union_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_union	40	0.0.0.1.0.3.0.0.1	synth with cache (only 1: red; only 1: intros; only 1: repeat rewrite filter_iff; only 1: set_iff; only 1: repeat rewrite filter_iff; only 1: intuition; only 1: auto; only 1: auto; only 1: auto).	6.40439105034	817
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_1	40	14.0.0.1.0	synth with cache (only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intuition).	2.99079990387	1867
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_2	40	0.33.2.0	synth with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: auto with set; only 1: auto).	13.5735731125	11498
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_exists	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.Comp'	40	2.1.1.8	synth with cache (only 1: repeat red; only 1: intros; only 1: f_equal; only 1: auto).	0.139826059341	125
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_plus	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.fold_compat	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_compat	40
Coq.FSets.FSetBridge.DepOfNodep.empty	40	419	synth with cache (only 1: eauto with *).	5.91814303398	91768
Coq.FSets.FSetBridge.DepOfNodep.is_empty	40
Coq.FSets.FSetBridge.DepOfNodep.mem	40
Coq.FSets.FSetBridge.DepOfNodep.add	40
Coq.FSets.FSetBridge.DepOfNodep.singleton	40
Coq.FSets.FSetBridge.DepOfNodep.remove	40
Coq.FSets.FSetBridge.DepOfNodep.union	40
Coq.FSets.FSetBridge.DepOfNodep.inter	40
Coq.FSets.FSetBridge.DepOfNodep.diff	40
Coq.FSets.FSetBridge.DepOfNodep.equal	40
Coq.FSets.FSetBridge.DepOfNodep.subset	40
Coq.FSets.FSetBridge.DepOfNodep.elements	40	3.1.232	synth with cache (only 1: compute; only 1: intuition; only 1: eauto with set).	35.8108680248	197380
Coq.FSets.FSetBridge.DepOfNodep.fold	40	7.7	synth with cache (only 1: simpl; only 1: eauto).	0.285554885864	377
Coq.FSets.FSetBridge.DepOfNodep.cardinal	40	50.0.12	synth with cache (only 1: simpl; only 1: intros; only 1: eauto using PeanoNat.Nat.Private_Tac.eq_trans, PeanoNat.Nat.Private_Tac.eq_sym).	2.09090185165	9977
Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	40
Coq.FSets.FSetBridge.DepOfNodep.filter	40
Coq.FSets.FSetBridge.DepOfNodep.for_all	40
Coq.FSets.FSetBridge.DepOfNodep.exists_	40
Coq.FSets.FSetBridge.DepOfNodep.partition	40
Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40
Coq.FSets.FSetBridge.DepOfNodep.choose	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40
Coq.FSets.FSetBridge.DepOfNodep.choose_equal	40
Coq.FSets.FSetBridge.DepOfNodep.min_elt	40
Coq.FSets.FSetBridge.DepOfNodep.max_elt	40
Coq.FSets.FSetBridge.NodepOfDep.empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	40
Coq.FSets.FSetBridge.NodepOfDep.mem_1	40
Coq.FSets.FSetBridge.NodepOfDep.mem_2	40
Coq.FSets.FSetBridge.NodepOfDep.equal_1	40
Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	5.0.1.0.0.2	synth with cache (only 1: intros s x; only 1: unfold equal; only 1: case M.equal; only 1: intuition; only 1: intuition; only 1: discriminate).	0.329461812973	361
Coq.FSets.FSetBridge.NodepOfDep.subset_1	40
Coq.FSets.FSetBridge.NodepOfDep.subset_2	40	3.0.0.0.0.3	synth with cache (only 1: intros s x; only 1: unfold subset; only 1: case M.subset; only 1: intuition; only 1: intuition; only 1: inversion H).	0.297971010208	247
Coq.FSets.FSetBridge.NodepOfDep.choose_1	40
Coq.FSets.FSetBridge.NodepOfDep.choose_2	40
Coq.FSets.FSetBridge.NodepOfDep.choose_3	40
Coq.FSets.FSetBridge.NodepOfDep.elements_1	40
Coq.FSets.FSetBridge.NodepOfDep.elements_2	40	1.0.0.6	synth with cache (only 1: intros s x; only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).	3.98149514198	427
Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	1.0.1.53	synth with cache (only 1: intros; only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).	1.25218391418	4311
Coq.FSets.FSetBridge.NodepOfDep.elements_3w	40	2.0	synth with cache (only 1: intros; only 1: firstorder).	0.5070540905	181
Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	40
Coq.FSets.FSetBridge.NodepOfDep.add_1	40
Coq.FSets.FSetBridge.NodepOfDep.add_2	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.0167820453644	5
Coq.FSets.FSetBridge.NodepOfDep.add_3	40	0.0.0.0.3	synth with cache (only 1: intros s x; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.287441968918	110
Coq.FSets.FSetBridge.NodepOfDep.remove_1	40
Coq.FSets.FSetBridge.NodepOfDep.remove_2	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold remove; only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: firstorder).	0.0759840011597	11
Coq.FSets.FSetBridge.NodepOfDep.remove_3	40	1.0.0.11	synth with cache (only 1: intros s x; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).	0.182585954666	263
Coq.FSets.FSetBridge.NodepOfDep.singleton_1	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_2	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x y; only 1: unfold singleton; only 1: case (M.singleton x); only 1: case (M.singleton x); only 1: case (M.singleton x); only 1: case (M.singleton x); only 1: case (M.singleton x); only 1: case (M.singleton x); only 1: firstorder).	0.0726819038391	11
Coq.FSets.FSetBridge.NodepOfDep.union_1	40
Coq.FSets.FSetBridge.NodepOfDep.union_2	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: firstorder).	0.0332469940186	11
Coq.FSets.FSetBridge.NodepOfDep.union_3	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: firstorder).	0.0353860855103	11
Coq.FSets.FSetBridge.NodepOfDep.inter_1	40
Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: firstorder).	0.0421569347382	11
Coq.FSets.FSetBridge.NodepOfDep.inter_3	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: firstorder).	0.0436928272247	11
Coq.FSets.FSetBridge.NodepOfDep.diff_1	40
Coq.FSets.FSetBridge.NodepOfDep.diff_2	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: firstorder).	0.0421659946442	11
Coq.FSets.FSetBridge.NodepOfDep.diff_3	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: firstorder).	0.0447149276733	11
Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40
Coq.FSets.FSetBridge.NodepOfDep.fold_1	40
Coq.FSets.FSetBridge.NodepOfDep.f_dec	40	1	synth with cache (only 1: decide equality).	0.0116100311279	2
Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	40	0.13.10.1.11.1	synth with cache (only 1: intros; only 1: intro s; only 1: intros; only 1: rewrite <- H; only 1: easy; only 1: firstorder).	13.7984700203	11356
Coq.FSets.FSetBridge.NodepOfDep.filter_1	40
Coq.FSets.FSetBridge.NodepOfDep.filter_2	40	2.0.0.1.0.0.0	synth with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.379219055176	14
Coq.FSets.FSetBridge.NodepOfDep.filter_3	40	2.0.0.1.0.0.0	synth with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.379273891449	14
Coq.FSets.FSetBridge.NodepOfDep.for_all_1	40
Coq.FSets.FSetBridge.NodepOfDep.for_all_2	40	4.3.0.0.0.0	synth with cache (only 1: intros s f; only 1: unfold for_all; only 1: case M.for_all; only 1: intuition; only 1: unfold compat_bool, compat_P, Proper, respectful, impl; only 1: firstorder).	1.4609849453	836
Coq.FSets.FSetBridge.NodepOfDep.exists_1	40
Coq.FSets.FSetBridge.NodepOfDep.exists_2	40	2.0.1.0.0.0	synth with cache (only 1: intros s f; only 1: unfold exists_; only 1: case M.exists_; only 1: intuition; only 1: intuition; only 1: inversion H0).	0.0286011695862	9
Coq.FSets.FSetBridge.NodepOfDep.partition_1	40
Coq.FSets.FSetBridge.NodepOfDep.partition_2	40
Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40
Coq.FSets.FSetCompat.Backport_Sets.compare	40
Coq.FSets.FSetCompat.Update_WSets.In_compat	40	3	synth with cache (only 1: solve_proper).	0.0517649650574	19
Coq.FSets.FSetCompat.Update_WSets.Spec.mem_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.equal_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.subset_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.is_empty_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.add_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.remove_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.singleton_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.elements_spec1	40
Coq.FSets.FSetCompat.Update_WSets.Spec.for_all_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.exists_spec	40
Coq.FSets.FSetCompat.Update_Sets.lt_strorder	40
Coq.FSets.FSetCompat.Update_Sets.lt_compat	40
Coq.FSets.FSetCompat.Update_Sets.compare_spec	40
Coq.FSets.FSetProperties.WProperties_fun.In_dec	40	1.2.0.6.0	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	1.72657799721	250
Coq.FSets.FSetProperties.WProperties_fun.Add_Equal	40
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_refl	40	0	synth with cache (only 1: fsetdec).	0.015655040741	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_sym	40	0	synth with cache (only 1: fsetdec).	0.0306620597839	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_trans	40	1.2.1	synth with cache (only 1: intuition; only 1: rewrite H; only 1: intuition).	0.0993769168854	42
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_refl	40	0	synth with cache (only 1: intuition).	0.00880098342896	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_trans	40	4.1.1	synth with cache (only 1: unfold Subset, Empty, impl; only 1: intros until 3; only 1: firstorder).	0.0125141143799	9
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_antisym	40	1.0	synth with cache (only 1: intuition; only 1: fsetdec).	0.0393149852753	3
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0205869674683	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_empty	40	0	synth with cache (only 1: fsetdec).	0.0165829658508	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_remove_3	40	1.8	synth with cache (only 1: red; only 1: fsetdec).	0.0716569423676	40
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_diff	40	0	synth with cache (only 1: fsetdec).	0.0290608406067	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_3	40	0	synth with cache (only 1: fsetdec).	0.0685629844666	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_2	40	0	synth with cache (only 1: fsetdec).	0.0304529666901	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.in_subset	40	0	synth with cache (only 1: fsetdec).	0.025260925293	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.double_inclusion	40	0.0.0.3	synth with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.437981843948	18
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_1	40	3	synth with cache (only 1: fsetdec).	0.473625898361	83
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_2	40	0	synth with cache (only 1: fsetdec).	0.0259630680084	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_equal	40	0.0.0	synth with cache (only 1: red; only 1: intros; only 1: fsetdec).	0.0453021526337	3
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_add	40	0	synth with cache (only 1: fsetdec).	0.105793952942	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_equal	40	2.1.0.1.5.2.4	synth with cache (only 1: split; only 1: apply remove_3; only 1: intro; only 1: apply remove_2; only 1: intuition; only 1: fsetdec; only 1: auto).	3.11146688461	2028
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Equal_remove	40	1	synth with cache (only 1: fsetdec).	0.200248003006	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_remove	40	0	synth with cache (only 1: fsetdec).	0.0903639793396	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_add	40	0	synth with cache (only 1: fsetdec).	0.0860340595245	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.singleton_equal_add	40	0	synth with cache (only 1: fsetdec).	0.049665927887	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_singleton_empty	40	0	synth with cache (only 1: fsetdec).	0.257055044174	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_sym	40	6	synth with cache (only 1: fsetdec).	0.166582107544	22
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0454270839691	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_1	40	0	synth with cache (only 1: fsetdec).	0.100449085236	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_2	40	0	synth with cache (only 1: fsetdec).	0.0630769729614	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_assoc	40	0	synth with cache (only 1: fsetdec).	0.15886092186	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_union_singleton	40	0	synth with cache (only 1: fsetdec).	0.052619934082	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_add	40	0	synth with cache (only 1: fsetdec).	0.130529880524	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_1	40	0	synth with cache (only 1: fsetdec).	0.468176841736	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_2	40	0	synth with cache (only 1: fsetdec).	0.302114009857	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_1	40	0	synth with cache (only 1: fsetdec).	0.0192730426788	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_2	40	0	synth with cache (only 1: fsetdec).	0.0187368392944	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_3	40	1	synth with cache (only 1: fsetdec).	0.0673670768738	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_4	40	0	synth with cache (only 1: fsetdec).	0.037358045578	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_5	40	0	synth with cache (only 1: fsetdec).	0.0316829681396	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_1	40	0	synth with cache (only 1: fsetdec).	0.043594121933	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_2	40	0	synth with cache (only 1: fsetdec).	0.0453639030457	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.not_in_union	40
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_sym	40	6	synth with cache (only 1: fsetdec).	0.164397001266	18
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0812699794769	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: fsetdec).	0.0577049255371	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: fsetdec).	0.139455080032	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_assoc	40	0	synth with cache (only 1: fsetdec).	0.0793039798737	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_1	40	0	synth with cache (only 1: fsetdec).	0.143913030624	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_2	40	0	synth with cache (only 1: fsetdec).	0.182593107224	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_1	40	12	synth with cache (only 1: fsetdec).	1.92623305321	892
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_2	40	0	synth with cache (only 1: fsetdec).	0.0872149467468	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_1	40	3.3.0	synth with cache (only 1: destruct (mem x s'); only 1: fsetdec; only 1: fsetdec).	1.20686507225	195
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_2	40	0	synth with cache (only 1: fsetdec).	0.333096981049	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_1	40	0	synth with cache (only 1: fsetdec).	0.0189599990845	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_2	40	0	synth with cache (only 1: fsetdec).	0.0194461345673	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_3	40	0	synth with cache (only 1: fsetdec).	0.0367350578308	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_1	40	11	synth with cache (only 1: fsetdec).	0.70783996582	390
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_2	40	0	synth with cache (only 1: fsetdec).	0.0822970867157	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset	40	6	synth with cache (only 1: fsetdec).	0.801007986069	366
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0686419010162	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_diff_singleton	40	0	synth with cache (only 1: fsetdec).	0.221042871475	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_empty	40	0	synth with cache (only 1: fsetdec).	0.128492116928	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_all	40	0	synth with cache (only 1: fsetdec).	0.0865750312805	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_add	40	2.10.10	synth with cache (only 1: split; only 1: fsetdec; only 1: intuition).	1.59944581985	796
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_remove	40	0.1	synth with cache (only 1: expAdd; only 1: fsetdec).	0.122951984406	3
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Add	40	0.2	synth with cache (only 1: expAdd; only 1: fsetdec).	0.218586921692	4
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add	40	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.296811819077	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Equal	40	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.218517065048	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add_2	40	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.189152956009	2
Coq.FSets.FSetProperties.WProperties_fun.elements_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_1	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_2	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_3	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_spec_right	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_bis	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_nodep	40	0.0.0.1.0	synth with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: intro x; only 1: auto with *; only 1: auto with *).	0.145059108734	64
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_weak	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rel	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction_bis	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_identity	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_0	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1	40	8.0.13.3.1	synth with cache (only 1: intros; only 1: apply fold_rec; only 1: intuition; only 1: intros; only 1: fsetdec).	5.1553850174	3888
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_2	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1b	40	0.6.2.0.2	synth with cache (only 1: intros; only 1: rewrite M.fold_1; only 1: fsetdec; only 1: intuition; only 1: fsetdec).	0.74494099617	471
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_commutes	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_init	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_equal	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_empty	40	4.3.11.6	synth with cache (only 1: intros; only 1: apply fold_1; only 1: auto with *; only 1: auto with *).	12.5142350197	9530
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_add	40	2.3.3.3.3.0.0	synth with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto with *; only 1: auto with *; only 1: auto with *; only 1: auto with *; only 1: auto with *).	6.69705700874	5375
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.add_fold	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_1	40	4.4.4.4.4.0.2	synth with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with *; only 1: auto with *; only 1: auto with *; only 1: auto with *; only 1: auto with *).	17.584207058	16143
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_2	40	0.12.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	1.55614709854	839
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union_inter	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_diff_inter	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_plus	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_0	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2b	40	0.0.6.0.0.0.1	synth with cache (only 1: intros; only 1: rewrite M.cardinal_1 in H; only 1: generalize (elements_2 (s:=s)); only 1: destruct (elements s); only 1: intuition; only 1: exists e; only 1: auto).	0.661071062088	418
Coq.FSets.FSetProperties.WProperties_fun.Equal_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40
Coq.FSets.FSetProperties.WProperties_fun.empty_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.singleton_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal_lt	40
Coq.FSets.FSetProperties.WProperties_fun.union_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_1	40	4.2.0.0	synth with cache (only 1: intro; only 1: generalize (cardinal_inv_2 (s:=s)); only 1: generalize (cardinal_inv_2 (s:=s)); only 1: intuition).	0.310054063797	68
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_2	40	0.0.4.1.1	synth with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: auto with *; only 1: expAdd; only 1: fsetdec).	0.393368959427	104
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_1	40	0.0.1.0.5.0	synth with cache (only 1: intros; only 1: rewrite (cardinal_2 (s:=remove x s) (s':=s) (x:=x)); only 1: eauto with set; only 1: fsetdec; only 1: expAdd; only 1: fsetdec).	0.403476953506	144
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_2	40	5.1.1	synth with cache (only 1: intro; only 1: generalize (cardinal_inv_2 (s:=s)); only 1: intuition).	0.198485851288	68
Coq.FSets.FSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FSetProperties.OrdProperties.gtb_1	40
Coq.FSets.FSetProperties.OrdProperties.leb_1	40
Coq.FSets.FSetProperties.OrdProperties.gtb_compat	40	0.1.2.0.0.0.1.5.1.16	synth with cache (only 1: intros m Hm; only 1: unfold gtb; only 1: intros H'; only 1: ME.elim_comp; only 1: ME.elim_comp; only 1: intuition; only 1: ME.elim_comp; only 1: intuition; only 1: ME.elim_comp; only 1: intuition).	21.4644589424	4784
Coq.FSets.FSetProperties.OrdProperties.leb_compat	40
Coq.FSets.FSetProperties.OrdProperties.elements_split	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Below	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_max	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_min	40
Coq.FSets.FSetProperties.OrdProperties.fold_3	40
Coq.FSets.FSetProperties.OrdProperties.fold_4	40
Coq.FSets.FSetProperties.OrdProperties.FoldOpt.fold_equal	40
Coq.FSets.FSetProperties.OrdProperties.FoldOpt.add_fold	40	0.1.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.021418094635	4
Coq.FSets.FSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0158269405365	3
Coq.FSets.FSetProperties.OrdProperties.choose_equal	40
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_push	40	3.0	synth with cache (only 1: unfold decidable; only 1: auto).	1.0141658783	5
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_pull	40	0.0.0	synth with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.172523021698	3
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.eq_refl_iff	40	2.0.2.0.0	synth with cache (only 1: split; only 1: intros; only 1: auto; only 1: intros; only 1: auto).	0.0219399929047	9
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_In	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_eq	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_1	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_2	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_1	40	1	synth with cache (only 1: fsetdec).	0.0578219890594	15
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_2	40	0	synth with cache (only 1: fsetdec).	0.19313788414	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	5	synth with cache (only 1: firstorder).	0.0121901035309	6
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_add_In	40	1	synth with cache (only 1: fsetdec).	0.0415771007538	2
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_Subset_add_remove	40	0.0	synth with cache (only 1: unfold Subset; only 1: fsetdec).	0.044685125351	2
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	0	synth with cache (only 1: fsetdec).	0.0625619888306	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	0	synth with cache (only 1: fsetdec).	0.108204126358	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_conj	40	0	synth with cache (only 1: fsetdec).	0.198198080063	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	1	synth with cache (only 1: fsetdec).	0.0530109405518	2
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_set_ops_1	40	0	synth with cache (only 1: fsetdec).	0.197679042816	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.eq_chain_test	40	0	synth with cache (only 1: fsetdec).	0.28630399704	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	3.7	synth with cache (only 1: unfold Subset, Empty, impl; only 1: intuition).	0.805977106094	168
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_1	40	1	synth with cache (only 1: fsetdec).	0.123309135437	19
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_2	40	0	synth with cache (only 1: fsetdec).	0.0677790641785	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_baydemir	40	0	synth with cache (only 1: fsetdec).	0.0522408485413	1
Coq.FSets.FMapList.Raw.Elt.empty_1	40	6.4	synth with cache (only 1: intros a b; only 1: easy).	0.0826239585876	59
Coq.FSets.FMapList.Raw.Elt.empty_sorted	40	10	synth with cache (only 1: constructor).	0.0455899238586	31
Coq.FSets.FMapList.Raw.Elt.is_empty_1	40	1.41	synth with cache (only 1: fix odd_spec 1; only 1: intuition).	20.9406838417	3460
Coq.FSets.FMapList.Raw.Elt.is_empty_2	40	6.3.0.1	synth with cache (only 1: intros m; only 1: case m; only 1: auto; only 1: inversion 1).	8.02423810959	825
Coq.FSets.FMapList.Raw.Elt.mem_1	40
Coq.FSets.FMapList.Raw.Elt.mem_2	40
Coq.FSets.FMapList.Raw.Elt.find_2	40
Coq.FSets.FMapList.Raw.Elt.find_1	40
Coq.FSets.FMapList.Raw.Elt.add_1	40
Coq.FSets.FMapList.Raw.Elt.add_2	40
Coq.FSets.FMapList.Raw.Elt.add_3	40
Coq.FSets.FMapList.Raw.Elt.add_Inf	40
Coq.FSets.FMapList.Raw.Elt.add_sorted	40
Coq.FSets.FMapList.Raw.Elt.remove_1	40
Coq.FSets.FMapList.Raw.Elt.remove_2	40
Coq.FSets.FMapList.Raw.Elt.remove_3	40
Coq.FSets.FMapList.Raw.Elt.remove_Inf	40
Coq.FSets.FMapList.Raw.Elt.remove_sorted	40	0.0.0.0.2.2.0.0.1.8	synth with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: destruct a as (x'', e''); only 1: simpl; only 1: inversion_clear Hm; only 1: case (X.compare x x''); only 1: intuition; only 1: intuition; only 1: intuition).	22.8046400547	8423
Coq.FSets.FMapList.Raw.Elt.elements_1	40	0	synth with cache (only 1: auto).	0.0299870967865	1
Coq.FSets.FMapList.Raw.Elt.elements_2	40	0	synth with cache (only 1: auto).	0.0307490825653	1
Coq.FSets.FMapList.Raw.Elt.elements_3	40	0.1.0.4.0	synth with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: destruct a as (x'', e''); only 1: intuition).	0.0685129165649	15
Coq.FSets.FMapList.Raw.Elt.elements_3w	40
Coq.FSets.FMapList.Raw.Elt.fold_1	40
Coq.FSets.FMapList.Raw.Elt.equal_1	40
Coq.FSets.FMapList.Raw.Elt.equal_2	40
Coq.FSets.FMapList.Raw.Elt.equal_cons	40
Coq.FSets.FMapList.Raw.Elt2.map_1	40
Coq.FSets.FMapList.Raw.Elt2.map_2	40
Coq.FSets.FMapList.Raw.Elt2.map_lelistA	40	0.1.3.0.0.0.1.0	synth with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: intros; only 1: destruct a as (x'', e''); only 1: simpl; only 1: inversion_clear H; only 1: intuition).	3.63073897362	704
Coq.FSets.FMapList.Raw.Elt2.map_sorted	40
Coq.FSets.FMapList.Raw.Elt2.mapi_1	40
Coq.FSets.FMapList.Raw.Elt2.mapi_2	40
Coq.FSets.FMapList.Raw.Elt2.mapi_lelistA	40	0.0.0.0.2.0.2.1	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x0, e0); only 1: inversion_clear H; only 1: auto).	1.53592896461	287
Coq.FSets.FMapList.Raw.Elt2.mapi_sorted	40	1.0.0.0.4.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: inversion_clear 1; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: auto).	2.26168179512	504
Coq.FSets.FMapList.Raw.Elt3.map2_alt_equiv	40
Coq.FSets.FMapList.Raw.Elt3.combine_lelistA	40
Coq.FSets.FMapList.Raw.Elt3.combine_sorted	40
Coq.FSets.FMapList.Raw.Elt3.map2_sorted	40
Coq.FSets.FMapList.Raw.Elt3.combine_1	40
Coq.FSets.FMapList.Raw.Elt3.map2_0	40
Coq.FSets.FMapList.Raw.Elt3.map2_1	40
Coq.FSets.FMapList.Raw.Elt3.map2_2	40
Coq.FSets.FMapList.Make.Elt.MapsTo_1	40	2.0.0.2.6	synth with cache (only 1: intros; only 1: apply InA_eqA with (x, e); only 1: intuition; only 1: eauto with *; only 1: auto).	0.380294084549	167
Coq.FSets.FMapList.Make.Elt.mem_1	40
Coq.FSets.FMapList.Make.Elt.mem_2	40
Coq.FSets.FMapList.Make.Elt.empty_1	40	0.0.0	synth with cache (only 1: intros a b; only 1: intro abs; only 1: inversion abs).	0.0452690124512	3
Coq.FSets.FMapList.Make.Elt.is_empty_1	40
Coq.FSets.FMapList.Make.Elt.is_empty_2	40
Coq.FSets.FMapList.Make.Elt.add_1	40
Coq.FSets.FMapList.Make.Elt.add_2	40
Coq.FSets.FMapList.Make.Elt.add_3	40
Coq.FSets.FMapList.Make.Elt.remove_1	40
Coq.FSets.FMapList.Make.Elt.remove_2	40
Coq.FSets.FMapList.Make.Elt.remove_3	40
Coq.FSets.FMapList.Make.Elt.find_1	40
Coq.FSets.FMapList.Make.Elt.find_2	40
Coq.FSets.FMapList.Make.Elt.elements_1	40	12	synth with cache (only 1: auto with ordered_type).	0.162592887878	96
Coq.FSets.FMapList.Make.Elt.elements_2	40	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0358610153198	2
Coq.FSets.FMapList.Make.Elt.elements_3	40	6.6	synth with cache (only 1: induction m; only 1: intuition).	0.226938009262	208
Coq.FSets.FMapList.Make.Elt.elements_3w	40
Coq.FSets.FMapList.Make.Elt.cardinal_1	40	6.0	synth with cache (only 1: intros m; only 1: auto).	0.0398070812225	8
Coq.FSets.FMapList.Make.Elt.fold_1	40
Coq.FSets.FMapList.Make.Elt.equal_1	40	16.20	synth with cache (only 1: fix odd_spec 1; only 1: intuition).	6.81576895714	5951
Coq.FSets.FMapList.Make.Elt.equal_2	40	14.1.22	synth with cache (only 1: fix odd_spec 1; only 1: intros m m'; only 1: intuition).	4.99943304062	7436
Coq.FSets.FMapList.Make.map_1	40
Coq.FSets.FMapList.Make.map_2	40
Coq.FSets.FMapList.Make.mapi_1	40
Coq.FSets.FMapList.Make.mapi_2	40
Coq.FSets.FMapList.Make.map2_1	40
Coq.FSets.FMapList.Make.map2_2	40
Coq.FSets.FMapList.Make_ord.eq_equal	40
Coq.FSets.FMapList.Make_ord.eq_1	40
Coq.FSets.FMapList.Make_ord.eq_2	40
Coq.FSets.FMapList.Make_ord.eq_refl	40
Coq.FSets.FMapList.Make_ord.eq_sym	40
Coq.FSets.FMapList.Make_ord.eq_trans	40
Coq.FSets.FMapList.Make_ord.lt_trans	40
Coq.FSets.FMapList.Make_ord.lt_not_eq	40
Coq.FSets.FMapList.Make_ord.compare	40
Coq.Wellfounded.Inclusion.WfInclusion.Acc_incl	40	1.2.27.8.19.0	synth with cache (only 1: intro H; only 1: apply Acc_rect; only 1: intro x; only 1: split; only 1: intro z; only 1: auto).	11.7229199409	84373
Coq.Wellfounded.Inclusion.WfInclusion.wf_incl	40	0.4.10	synth with cache (only 1: intros; only 1: intro z; only 1: auto with sets).	0.111684083939	226
Coq.Wellfounded.Well_Ordering.WellOrdering.wf_WO	40
Coq.Wellfounded.Well_Ordering.Characterisation_wf_relations.wof	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.left_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.right_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_tail	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_aux	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_Desc_concat	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_end	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.ltl_unit	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.acc_app	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.wf_lex_exp	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_lemma	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_image	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_image	40	0.1.5.4.5.1	synth with cache (only 1: intros y0 H1; only 1: apply Acc_intro; only 1: intros x H; only 1: apply (Acc_lemma (f x)); only 1: trivial; only 1: trivial).	1.13311100006	1444
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_rel	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_rel	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_A_sum	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_B_sum	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.wf_disjoint_sum	40
Coq.Wellfounded.Union.WfUnion.strip_commut	40
Coq.Wellfounded.Union.WfUnion.Acc_union	40
Coq.Wellfounded.Union.WfUnion.wf_union	40
Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.acc_A_B_lexprod	40
Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.wf_lexprod	40
Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.Acc_symprod	40
Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.wf_symprod	40
Coq.Wellfounded.Lexicographic_Product.Swap.swap_Acc	40
Coq.Wellfounded.Lexicographic_Product.Swap.Acc_swapprod	40
Coq.Wellfounded.Lexicographic_Product.Swap.wf_swapprod	40
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.incl_clos_trans	40	3.70	synth with cache (only 1: left; only 1: trivial).	4.22532296181	35700
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_inv_trans	40	0.0.0.1.8.2.2.11	synth with cache (only 1: intro x; only 1: intros y H2; only 1: induction H2; only 1: intros; only 1: apply Acc_inv with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	2.76135396957	5727
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.wf_clos_trans	40	0.0	synth with cache (only 1: red; only 1: auto with sets).	0.0099561214447	2
Coq.Numbers.DecimalFacts.uint_dec	40
Coq.Numbers.DecimalFacts.rev_revapp	40
Coq.Numbers.DecimalFacts.rev_rev	40
Coq.Numbers.DecimalFacts.nzhead_revapp_0	40
Coq.Numbers.DecimalFacts.nzhead_revapp	40
Coq.Numbers.DecimalFacts.nzhead_rev	40
Coq.Numbers.DecimalFacts.rev_nztail_rev	40
Coq.Numbers.DecimalFacts.revapp_nil_inv	40
Coq.Numbers.DecimalFacts.rev_nil_inv	40	6.0.5.6.5	synth with cache (only 1: symmetry; only 1: rewrite <- (rev_rev d); only 1: rewrite H; only 1: unfold rev; only 1: now rewrite ?IHd).	6.27084803581	9099
Coq.Numbers.DecimalFacts.rev_lnorm_rev	40
Coq.Numbers.DecimalFacts.nzhead_nonzero	40	0.0.0.0.0.0.0.0.0.0.0.16	synth with cache (only 1: induction d; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).	26.4355690479	17524
Coq.Numbers.DecimalFacts.unorm_0	40	0.0.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	6.8431828022	3036
Coq.Numbers.DecimalFacts.unorm_nonnil	40	0.0.0.0.0.0.0.0.0.1.2.0.0	synth with cache (only 1: unfold unorm; only 1: destruct nzhead; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).	5.52138400078	2850
Coq.Numbers.DecimalFacts.nzhead_invol	40	0.0.0.0.0.0.0.0.0.0.0.9	synth with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	10.2251131535	10046
Coq.Numbers.DecimalFacts.unorm_invol	40
Coq.Numbers.DecimalFacts.norm_invol	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_simpl	40	24	synth with cache (only 1: now destruct n).	1.11300706863	658
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_eqn	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double_gen	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_succ_double	40
Coq.Numbers.DecimalPos.Unsigned.of_to	40
Coq.Numbers.DecimalPos.Unsigned.succ_double_alt	40
Coq.Numbers.DecimalPos.Unsigned.double_succ	40
Coq.Numbers.DecimalPos.Unsigned.to_lu_succ	40
Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	0	synth with cache (only 1: trivial).	0.0161139965057	1
Coq.Numbers.DecimalPos.Unsigned.nat_iter_0	40	0	synth with cache (only 1: reflexivity).	0.0149610042572	1
Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_0	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu	40
Coq.Numbers.DecimalPos.Unsigned.to_of	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonnil	40	0.0.0	synth with cache (only 1: intro E; only 1: generalize (of_to p); only 1: now rewrite E).	0.0296380519867	3
Coq.Numbers.DecimalPos.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_norm	40
Coq.Numbers.DecimalPos.Unsigned.of_inj	40
Coq.Numbers.DecimalPos.Unsigned.of_iff	40
Coq.Numbers.DecimalPos.Signed.of_to	40
Coq.Numbers.DecimalPos.Signed.to_of	40
Coq.Numbers.DecimalPos.Signed.to_int_inj	40
Coq.Numbers.DecimalPos.Signed.to_int_pos_surj	40	0.1.1.0.1.4.14	synth with cache (only 1: simpl; only 1: destruct (Pos.of_uint d) eqn:E; only 1: rewrite <- Unsigned.to_of; only 1: now rewrite E; only 1: rewrite <- Unsigned.to_of; only 1: exists p; only 1: now rewrite E).	28.9079010487	28297
Coq.Numbers.DecimalPos.Signed.of_int_norm	40
Coq.Numbers.DecimalPos.Signed.of_inj_pos	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_succ	40	0	synth with cache (only 1: trivial).	0.00906491279602	1
Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_eqn	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_succ	40
Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_to	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_0	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40
Coq.Numbers.DecimalNat.Unsigned.to_of	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_norm	40
Coq.Numbers.DecimalNat.Unsigned.of_inj	40
Coq.Numbers.DecimalNat.Unsigned.of_iff	40
Coq.Numbers.DecimalNat.Signed.of_to	40
Coq.Numbers.DecimalNat.Signed.to_of	40
Coq.Numbers.DecimalNat.Signed.to_int_inj	40
Coq.Numbers.DecimalNat.Signed.to_int_pos_surj	40	0.0.1.0.1	synth with cache (only 1: unfold Nat.to_int; only 1: simpl; only 1: exists (Nat.of_uint d); only 1: rewrite Unsigned.to_of; only 1: f_equal).	0.0163588523865	7
Coq.Numbers.DecimalNat.Signed.of_int_norm	40
Coq.Numbers.DecimalNat.Signed.of_inj_pos	40
Coq.Numbers.DecimalN.Unsigned.of_to	40	3.17.1.42	synth with cache (only 1: destruct n; only 1: now f_equal; only 1: simpl; only 1: now rewrite Unsigned.of_to).	6.20495319366	3842
Coq.Numbers.DecimalN.Unsigned.to_of	40
Coq.Numbers.DecimalN.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	28	synth with cache (only 1: now induction d).	1.11156916618	548
Coq.Numbers.DecimalN.Unsigned.of_inj	40	3	synth with cache (only 1: apply Unsigned.of_inj).	0.0611679553986	4
Coq.Numbers.DecimalN.Unsigned.of_iff	40
Coq.Numbers.DecimalN.Signed.of_to	40
Coq.Numbers.DecimalN.Signed.to_of	40
Coq.Numbers.DecimalN.Signed.to_int_inj	40
Coq.Numbers.DecimalN.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalN.Signed.of_int_norm	40	0.0.0.0.0.0.0.0.0.0.0.0.1.1.2	synth with cache (only 1: unfold N.to_int, N.of_int, norm; only 1: destruct d; only 1: now rewrite DecimalPos.Unsigned.of_uint_norm; only 1: destruct (nzhead d) eqn:E; only 1: auto; only 1: destruct (nzhead_nonzero _ _ E); only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	32.3460121155	7244
Coq.Numbers.DecimalN.Signed.of_inj_pos	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_add_opp	40	3.1	synth with cache (only 1: intros a b; only 1: tauto).	0.0138909816742	6
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pair_wd	40	12.3.10.6	synth with cache (only 1: intros n IH m H; only 1: intros; only 1: compute; only 1: now f_equiv).	17.0426440239	9812
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40	5.2.3.4.6	synth with cache (only 1: repeat red; only 1: intros m H1; only 1: simpl in *; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	3.32247185707	969
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_wd	40	0.5.2.0.0	synth with cache (only 1: unfold Z.succ, Z.eq; only 1: intros n m H; only 1: simpl; only 1: nzsimpl; only 1: now rewrite H).	0.412530899048	100
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_comm	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.Induction.bi_induction	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_succ	40	7.2.0.5.0.13	synth with cache (only 1: induction n; only 1: unfold Z.succ, Z.eq; only 1: simpl; only 1: rewrite add_succ_l; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	4.81793785095	4084
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	0.0.0.15	synth with cache (only 1: intro n; only 1: unfold Z.pred, Z.succ, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.622256040573	502
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.one_succ	40	1.10.1	synth with cache (only 1: unfold Z.eq, Z.add; only 1: rewrite one_succ; only 1: now nzsimpl).	0.572603940964	153
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	0.0.0	synth with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl').	0.0609939098358	3
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	4.1.0	synth with cache (only 1: compute; only 1: nzsimpl; only 1: solve_proper).	0.0993759632111	8
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_succ	40	0.0.0.1	synth with cache (only 1: unfold Z.zero, Z.succ, Z.eq in *; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.133311986923	5
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_0_l	40	0.1.1	synth with cache (only 1: compute; only 1: intro H; only 1: now nzsimpl).	0.315737009048	32
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_succ_l	40	0.0.0.2	synth with cache (only 1: intros a b; only 1: unfold Z.add, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.24042391777	15
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_0_r	40	0.0.3.0	synth with cache (only 1: unfold Z.eq; only 1: intro H1; only 1: simpl; only 1: now nzsimpl).	0.105698823929	7
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_succ_r	40	0.0.4.1.0	synth with cache (only 1: unfold Z.succ, Z.pred, Z.eq; only 1: simpl; only 1: intro H1; only 1: intro n; only 1: now nzsimpl).	0.578959941864	30
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_0_l	40	0.3.1.1	synth with cache (only 1: unfold Z.mul, Z.eq; only 1: simpl; only 1: intro n; only 1: now nzsimpl).	0.441500902176	9
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_eq_cases	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_irrefl	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_succ_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_nge	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_wd	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	40	0.1.5	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).	0.133437871933	19
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).	0.0476789474487	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).	0.0440890789032	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	40	0.0.2	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).	0.463687896729	38
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	40	7.7.14	synth with cache (only 1: intros n m Hn; only 1: rewrite <- 2!add_opp_r; only 1: now apply add_lt_mono_r).	10.1942768097	4636
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40	0.15.4.13	synth with cache (only 1: intro p; only 1: intros n m; only 1: rewrite (add_comm p m); only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).	24.3510658741	7241
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	40	0.22.2.5	synth with cache (only 1: intro p; only 1: intros; only 1: rewrite add_comm; only 1: now rewrite (sub_le_mono_r _ _ p), add_simpl_r).	21.4524769783	6399
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	40	17.3.17.0	synth with cache (only 1: intros; only 1: apply add_le_cases; only 1: apply le_add_le_sub_r; only 1: now nzsimpl).	31.1052758694	10173
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.PosNeg.zero_pos_neg	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	40	0.0.3.1.1.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	0.265161991119	105
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	40	3.12.0	synth with cache (only 1: intros n m; only 1: apply opp_inj; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	0.485373973846	347
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40	12.5.0.0	synth with cache (only 1: intros n m p; only 1: do 2 rewrite <- add_opp_r; only 1: rewrite mul_add_distr_r; only 1: now rewrite mul_opp_l, <- mul_opp_r).	5.48763895035	2139
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	40	1.1.12.7.3	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: apply mul_le_mono_nonpos_r; only 1: trivial; only 1: trivial).	23.9737308025	16685
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	0.7.3	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).	0.556170940399	307
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	40	11.4.0.2.0.0.1.3	synth with cache (only 1: intros n m H1 H2; only 1: le_elim H2; only 1: rewrite <- (mul_0_l m)  at 1; only 1: now apply mul_le_mono_pos_r; only 1: rewrite H2; only 1: apply eq_le_incl; only 1: rewrite <- H2; only 1: now nzsimpl).	22.4798090458	13768
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40	3.1.3.1.1.3	synth with cache (only 1: intros n m H1 H2; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_nonpos; only 1: rewrite <- H2; only 1: now apply eq_le_incl).	2.14910006523	1651
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40	0.0.0.0.0.6.5.0.0	synth with cache (only 1: intros n m H1 H2; only 1: apply (mul_lt_mono_neg_r m) in H1; only 1: rewrite mul_1_l in H1; only 1: apply lt_le_pred in H2; only 1: setoid_replace (P 0) with (-1) in H2; only 1: now apply lt_le_trans with m; only 1: apply eq_opp_r; only 1: now rewrite one_succ, opp_pred, opp_0; only 1: assumption).	12.2899320126	8318
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_m1_mul_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.eq_mul_1	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	40	0.0.21	synth with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.110790967941	292
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	40	1.4.69.9	synth with cache (only 1: intros a0 a; only 1: rewrite add_comm; only 1: rewrite testbit_0_r; only 1: now try order').	16.676005125	17153
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	40	0.0.0.0.10	synth with cache (only 1: intros; only 1: apply b2z_inj; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; split; simpl; order')).	0.186648130417	111
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	0.0.1.0.1.0.0.1.0.1.0.2.1.0.0.0.1.0	synth with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: left; only 1: destruct b; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: order'; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: order'; only 1: trivial).	15.1208851337	11896
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	40	2.7.2	synth with cache (only 1: intros x x' EQ; only 1: intro H; only 1: now f_equiv).	0.400026082993	97
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40	1.1.0.0.0.1.1.8.1	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite mul_pow2_bits by trivial; only 1: destruct (le_gt_cases n m); only 1: now apply shiftl_spec_high; only 1: rewrite shiftl_spec_low, testbit_neg_r; only 1: trivial; only 1: now apply lt_sub_0; only 1: trivial).	1.52619194984	920
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	40	1.1.1.3.2.0.3.0.12	synth with cache (only 1: intros H1 H2 n; only 1: rewrite div2_spec, shiftr_div_pow2; only 1: nzsimpl; only 1: rewrite div2_spec, shiftr_div_pow2; only 1: f_equiv; only 1: tauto; only 1: now nzsimpl'; only 1: order'; only 1: order').	3.38952803612	1719
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	40	0.0.1	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0485148429871	17
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	40	0.0.1	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.094908952713	16
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	40	0.0.1	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0926399230957	14
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	40	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.016105890274	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	40	3.6.8	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.155503034592	226
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	2.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0184960365295	5
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	40	6.4.8	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.819910049438	869
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	1.3.10	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	5.68276500702	399
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	40	4.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_comm).	0.017715215683	7
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	40	0.4.0.4.1.3	synth with cache (only 1: intros a a' Ha n n' Hn; only 1: destruct (le_ge_cases n 0) as [H| H]; only 1: unfold setbit; only 1: now rewrite <- 2!shiftr_opp_r, Ha, Hn; only 1: unfold setbit; only 1: now rewrite <- 2!shiftr_opp_r, Ha, Hn).	7.96809601784	1304
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	40	4.1.0.4	synth with cache (only 1: intros a a' Ha n n' Hn; only 1: unfold clearbit; only 1: bitwise; only 1: now rewrite <- 2!shiftr_opp_r, Ha, Hn).	1.47124004364	313
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	40	7.13.23	synth with cache (only 1: intros x x' Hx; only 1: compute; only 1: now rewrite <- Hx).	9.6760160923	8120
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	40	9.35.0.4	synth with cache (only 1: intros m; only 1: bitwise; only 1: apply eq_true_iff_eq; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	11.0837111473	20530
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	24.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	0.639050960541	926
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	4.1.10	synth with cache (only 1: intros n; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).	1.38570404053	1162
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	40	4.3.11	synth with cache (only 1: intros n; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).	2.13170289993	1555
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	40	0.3.0	synth with cache (only 1: intros a n; only 1: rewrite <- shiftl_opp_r; only 1: now rewrite 2!lt_nge, shiftl_nonneg).	0.105934858322	13
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite div2_spec; only 1: now rewrite 2!lt_nge, shiftr_nonneg).	0.0189361572266	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	40	1.2.1.2.2	synth with cache (only 1: split; only 1: unfold lnot; only 1: now rewrite <- opp_succ, opp_nonneg_nonpos, le_succ_l; only 1: unfold lnot; only 1: now rewrite <- opp_succ, opp_nonneg_nonpos, le_succ_l).	0.218035936356	101
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_abs	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_nonneg	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_abs_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	40	1.0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: rewrite and_comm; only 1: rewrite and_comm; only 1: apply gcd_divide_iff).	0.0366599559784	11
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40	6.0.1.1.16.2.0	synth with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: now apply divide_abs_l, divide_abs_r; only 1: easy).	34.6638929844	23424
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.Bezout_wd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.bezout_1_gcd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_bezout	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r_nonneg	40	0.3.1.0	synth with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm; only 1: trivial).	0.0756859779358	13
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gauss	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	40	3.2.0.35.1	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: generalize (CRelationClasses.partial_order_equivalence y y'); only 1: compute; only 1: rewrite Hx, Hy; only 1: easy).	38.8415930271	6355
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	40	22.14	synth with cache (only 1: intros n m; only 1: apply abs_nonneg).	27.0615339279	19511
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40	0.0.16.4.2	synth with cache (only 1: intros; only 1: unfold lcm; only 1: rewrite abs_eq; only 1: now nzsimpl; only 1: now nzsimpl).	4.8669719696	2824
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	40	0.3.2.6.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: now rewrite (sub_le_mono_l _ _ n), sub_0_r; only 1: apply divide_0_r; only 1: apply divide_0_r; only 1: trivial).	0.837480783463	544
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	40	0.0.8.2.1.3	synth with cache (only 1: intros a b; only 1: apply lcm_unique; only 1: trivial; only 1: easy; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl).	2.17235302925	1420
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	40	0.5.5.1.9.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: rewrite <- (add_0_l 0); only 1: now nzsimpl; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).	4.39558601379	3203
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	40	1.4.1.1.0.2	synth with cache (only 1: intros; only 1: apply divide_antisym_nonneg; only 1: apply lcm_nonneg; only 1: trivial; only 1: now apply lcm_least; only 1: apply divide_lcm_r).	0.476655006409	415
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	0.0293471813202	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40	0.8.0.9.1.2.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: trivial using divide_1_l, le_0_1; only 1: now apply divide_abs_l; only 1: intros a b; only 1: now apply divide_abs_l).	10.2031209469	6040
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	40	0.4.0.0.1.13.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: now apply divide_abs_l; only 1: intros a b; only 1: now apply divide_abs_l).	6.99428796768	3454
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	40	1.9.1.0	synth with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), lcm_mul_mono_l, mul_comm; only 1: trivial).	16.1229069233	960
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	40	1.3.2.1.0.1.3.2.1.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: now f_equiv; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!max_l; only 1: order; only 1: now f_equiv; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).	39.5834429264	33536
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	40	1.2.1.2.1.2.1.3.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now f_equiv; only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!min_r; only 1: order; only 1: now f_equiv; only 1: now apply mul_le_mono_nonneg_l).	10.9424331188	10698
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	40	1.3.2.1.0.1.3.2.1.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now f_equiv; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!min_r; only 1: order; only 1: now f_equiv; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).	32.5790779591	28398
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40	0.3.2.2.0.0.3.2.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l by trivial; only 1: rewrite max_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite min_r by trivial; only 1: rewrite max_r; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).	15.2351601124	10554
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40	0.3.3.4.0.0.3.3.0.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: rewrite min_r; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite max_l by trivial; only 1: rewrite min_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).	31.6016819477	23466
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40	1.1.1.1.57.6	synth with cache (only 1: split; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: intuition order; only 1: intuition order; only 1: intuition order; only 1: intuition order).	26.7917330265	45884
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	40	0.0.0.26.2.0	synth with cache (only 1: intro n; only 1: rewrite lt_eq_cases; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: tauto; only 1: tauto; only 1: tauto).	1.90004897118	2794
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40	0.1.0.26.4.0	synth with cache (only 1: intro; only 1: rewrite lt_eq_cases; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: tauto; only 1: intuition; only 1: tauto).	2.35861206055	3919
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	40	1.1.1	synth with cache (only 1: intro; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0438401699066	6
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	40	25.1.5	synth with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	1.31210803986	1424
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	40	0.41.3.0	synth with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	7.30305290222	7676
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	40	0.0.5.1	synth with cache (only 1: intro; only 1: rewrite nle_gt; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	0.0404050350189	26
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	40	8.1.1.7	synth with cache (only 1: intros n m H; only 1: apply lt_le_incl; only 1: apply le_succ_l; only 1: now rewrite succ_pred).	4.97339892387	3058
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	2.0.5.1.0.1	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred m); only 1: apply lt_succ_r; only 1: apply lt_le_incl; only 1: rewrite <- (succ_pred m); only 1: now rewrite pred_succ).	5.3914680481	1919
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	40	3.0.1.0.3.0	synth with cache (only 1: intros; only 1: apply lt_le_incl; only 1: rewrite <- (succ_pred m); only 1: apply lt_succ_r; only 1: rewrite <- (succ_pred m); only 1: now rewrite pred_succ).	4.10987997055	1176
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	40	0.1.0.9.1.0	synth with cache (only 1: intros n m; only 1: symmetry; only 1: rewrite <- lt_le_pred; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply le_succ_l).	6.12637400627	3285
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	40	6.0.0	synth with cache (only 1: intros; only 1: rewrite lt_le_pred; only 1: apply le_succ_l).	0.0837659835815	24
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	1.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- lt_pred_le; only 1: rewrite pred_succ; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: apply lt_succ_r).	0.0406169891357	7
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	40	0.1.0.3.1.1.3.0	synth with cache (only 1: intros n m; only 1: symmetry; only 1: rewrite lt_le_pred; only 1: symmetry; only 1: rewrite pred_succ; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply le_succ_l).	3.93267989159	1859
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	40	7.1.3.0	synth with cache (only 1: intros n m; only 1: symmetry; only 1: rewrite <- lt_pred_le; only 1: apply lt_succ_r).	3.22619199753	1469
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	40	15.1.2	synth with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply neq_sym, neq_succ_diag_l).	0.854589939117	975
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	3.0.0.0.0.0	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order').	0.0245280265808	9
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	40	0.0.0.0.0.0	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.0211460590363	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	40	1.1.1.3	synth with cache (only 1: intros n m; only 1: rewrite abs_neq; only 1: auto with relations; only 1: now rewrite (opp_le_mono n 0), opp_0).	0.208569049835	79
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	40	5.3.5.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: trivial; only 1: rewrite opp_nonneg_nonpos; only 1: trivial).	1.26897001266	1360
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	3.4	synth with cache (only 1: apply abs_eq; only 1: solve_proper).	0.0141501426697	17
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	8.8.4.1	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: auto with relations).	4.67697000504	3792
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	40	1.12.0	synth with cache (only 1: intros; only 1: apply abs_eq; only 1: apply abs_nonneg).	0.418480873108	496
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	40	1.1.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: auto).	0.026859998703	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40	9.1.3.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: apply eq_refl; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	2.38712000847	1717
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	11.11.0	synth with cache (only 1: rewrite sgn_null; only 1: now f_equiv; only 1: now f_equiv).	0.426362037659	821
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	3.21.1.0.3.1.0.0.0	synth with cache (only 1: intros; only 1: destruct_sgn x; only 1: rewrite sgn_pos; only 1: auto with relations; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).	20.6056220531	32638
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	10	synth with cache (only 1: apply NZQuot.div_pos).	0.570808887482	170
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	40	4.1.1.6.0	synth with cache (only 1: intros; only 1: rewrite <- (quot_mul q b) by order; only 1: apply quot_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	13.1054050922	6253
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	40	0.1.0.5.1.0.1.1.1.1	synth with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: trivial; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	10.5598599911	6485
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.0.4.3.0	synth with cache (only 1: intros; only 1: apply div_unique with r; only 1: right; only 1: trivial; only 1: trivial).	0.476193189621	233
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	0.1.0.5.1.0.1.1.1.1	synth with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: trivial; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	11.3970179558	6392
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	40	0.0.4.2.0	synth with cache (only 1: intros; only 1: apply mod_unique with q; only 1: right; only 1: trivial; only 1: trivial).	0.241466999054	97
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	40	1.1.1.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: left; only 1: intuition; only 1: now nzsimpl).	0.128180980682	41
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	1.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply mod_small; only 1: intuition).	0.0656139850616	23
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	40	1.3.4.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: intuition; only 1: apply lt_0_1; only 1: now nzsimpl).	1.54112410545	1935
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	40	4.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: order).	0.0182559490204	9
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	40	4.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: order).	0.0188629627228	9
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	40	1.0.0.0.0.2.1.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: intuition; only 1: right; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: apply mul_comm).	10.819177866	4226
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	40	0.10.0.3.0.1.13.3.10.10	synth with cache (only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: intuition order; only 1: right; only 1: intuition order; only 1: nzsimpl; only 1: trivial).	15.8661150932	13553
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	40	3.3.12.0	synth with cache (only 1: intros; only 1: apply mod_le; only 1: trivial; only 1: trivial).	19.5543510914	11209
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	40	4.1	synth with cache (only 1: intros; only 1: auto using div_pos).	0.148318052292	46
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	40	0.6.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: apply div_str_pos; only 1: auto).	0.15313911438	57
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	40	0.5.6.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: destruct (mod_pos_bound a b); only 1: trivial; only 1: trivial).	5.13723683357	2280
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	40	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0280070304871	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	40	0.0.0.1.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	0.024090051651	7
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	40	4.2.4.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: now apply mul_div_le; only 1: order).	3.85002398491	1562
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	3.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply Private_NZDiv.div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0803179740906	25
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	40	1.0.2.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_bound_or; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.285624027252	94
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	40	1.1.0.2.0.2.0	synth with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: trivial; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.466022968292	241
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	40	1.1.2.0	synth with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: tauto).	0.0493187904358	11
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40	6.5.1	synth with cache (only 1: intros a b c; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r).	14.9910879135	3129
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	40	5.6.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	5.47238898277	1023
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	40	0.0.4.12.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now rewrite mul_comm; only 1: tauto; only 1: tauto).	15.6334049702	6097
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	40	0.6.5.0	synth with cache (only 1: intros a b n Hn; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: tauto).	4.29593896866	1593
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	0.0.10.7.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: tauto; only 1: tauto).	14.3741850853	6801
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	40	3.0.3.1.0.3.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: order; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: order; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	32.0160188675	9342
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.1.1.2	synth with cache (only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).	0.050980091095	17
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	40	0.0.5.0.0.1.5.1	synth with cache (only 1: intro m; only 1: nzinduct m; only 1: rewrite <- add_opp_r; only 1: now nzsimpl; only 1: intro m; only 1: rewrite sub_succ_r; only 1: rewrite sub_succ_l; only 1: now rewrite pred_succ).	1.84495902061	1148
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	40	5.5.3.5.0.12	synth with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro p; only 1: split; only 1: now rewrite add_comm, add_opp_r, sub_diag; only 1: now rewrite add_comm, add_opp_r, sub_diag).	15.2853758335	7389
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	40	8.1.4.4.1	synth with cache (only 1: intro m; only 1: intro n; only 1: rewrite <- add_opp_r; only 1: rewrite add_comm; only 1: now nzsimpl).	27.589345932	9958
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40	6.4.1.1.4.1.2.4	synth with cache (only 1: intro m; only 1: split; only 1: intros; only 1: apply opp_inj; only 1: now rewrite opp_involutive; only 1: intros; only 1: apply opp_inj; only 1: now rewrite opp_involutive).	25.8685832024	18400
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	40	0.1	synth with cache (only 1: intros n m; only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive).	0.0416429042816	16
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	40	0.0.0.0	synth with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr; only 1: now rewrite add_assoc).	0.0407500267029	4
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	2.7.2.0	synth with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: now rewrite opp_involutive).	2.00208902359	625
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	40	8.0.0.0.0	synth with cache (only 1: intro n; only 1: intro m; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now rewrite add_comm).	1.37502217293	427
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	40	0.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: now rewrite opp_involutive).	0.0275661945343	3
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	40	16.0.0	synth with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: apply add_shuffle0).	2.9273879528	1242
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40	8.11.4	synth with cache (only 1: intros n m p; only 1: rewrite <- add_opp_r; only 1: now apply add_move_l).	12.1680870056	6490
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	40	0.17.0	synth with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: now rewrite add_move_l, sub_0_l).	3.59226202965	1267
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	4.0.0.1	synth with cache (only 1: intro n; only 1: intro m; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).	0.0336639881134	9
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40	0.1	synth with cache (only 1: intros n m; only 1: now rewrite add_comm, <- add_sub_assoc, sub_diag, add_0_r).	0.03102684021	3
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	40	5.1.0	synth with cache (only 1: intros; only 1: rewrite add_comm; only 1: now rewrite add_comm, <- add_sub_assoc, sub_diag, add_0_r).	0.0995860099792	18
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	1.0.1.3	synth with cache (only 1: nzinduct m; only 1: now nzsimpl; only 1: intro m; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.200623035431	37
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	4.0	synth with cache (only 1: intros; only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.0638809204102	6
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40	0.23.0	synth with cache (only 1: intros; only 1: rewrite (add_comm p); only 1: now rewrite (add_comm n m), <- add_sub_assoc, sub_add_distr, sub_diag, sub_0_l, add_opp_r).	24.2401847839	10227
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	40	3.9.0.4	synth with cache (only 1: intro m; only 1: intros; only 1: rewrite add_comm; only 1: apply add_add_simpl_l_l).	9.0134408474	3972
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	40	0.16.0	synth with cache (only 1: intros n m p; only 1: rewrite (add_comm p m); only 1: now rewrite <- sub_sub_distr, sub_add_distr, sub_diag, sub_0_l, sub_opp_r).	1.27908301353	804
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	40	1.8.3.7.20.4.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with 0; only 1: split; only 1: intuition; only 1: now rewrite abs_pos; only 1: now nzsimpl).	17.8665401936	31663
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	40	0.0.3.0.49.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: split; only 1: intuition; only 1: now rewrite abs_pos; only 1: now nzsimpl).	24.3882749081	57228
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	1.3.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: apply div_small; only 1: intuition).	0.0656790733337	37
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	8.0	synth with cache (only 1: intros; only 1: auto using mod_small).	0.0489840507507	36
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.0.3.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: intuition; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.129567861557	71
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	40	1.0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: now nzsimpl).	0.0453209877014	10
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	4.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: order).	0.0193848609924	9
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	40	4.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: order).	0.016685962677	9
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	1.0.3.1.1.5.6.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: intuition; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).	2.32638502121	2006
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	40	0.1.10.8.3.11	synth with cache (only 1: intuition; only 1: apply Private_NZDiv.div_unique with 0; only 1: intuition; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: order).	35.0453310013	25498
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	11	synth with cache (only 1: auto using div_pos).	0.8889939785	277
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	40	0.7.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: apply div_str_pos; only 1: auto).	0.210264921188	82
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	40	0.0.3.0.0.13.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: destruct (mod_always_pos a b); only 1: intuition; only 1: order; only 1: rewrite abs_eq in *; only 1: auto using Private_NZDiv.div_pos; only 1: intuition order).	21.5727350712	10757
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0282871723175	4
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	40	1.0.0.1.2.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: intuition; only 1: order; only 1: auto).	0.279657125473	92
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	40	1.0.3.1.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: trivial).	0.269062995911	109
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	2.1.0.1.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply Private_NZDiv.div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0725529193878	32
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	40	1.0.2.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_always_pos; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.138175964355	55
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	40	1.1.0.2.0.2.0	synth with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: trivial; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.47128200531	232
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	40	4.0.2.0	synth with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: trivial).	0.0258870124817	14
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40	4.5.1	synth with cache (only 1: intros a b c; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r).	5.37667798996	1174
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	5.6.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	2.30661892891	505
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	40	0.6.7.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: tauto).	17.9972519875	5341
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	40	0.0.4.11.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now rewrite mul_comm; only 1: tauto; only 1: tauto).	12.5363090038	5109
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40	0.5.6.0	synth with cache (only 1: intros a b n Hn; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: tauto).	13.2806508541	3822
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	40	0.0.7.6.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: tauto; only 1: tauto).	9.13197112083	3685
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	0.0.3.2.2.0.2.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: order; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: order; only 1: apply Private_NZDiv.mul_div_le; only 1: intuition; only 1: order).	8.78969192505	3412
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	40
Coq.Numbers.Integer.Binary.ZBinary.TestOrder.test	40	0.3	synth with cache (only 1: intros a n Hn; only 1: BinInt.Z.order).	0.0262558460236	5
Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40
Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40	10.2	synth with cache (only 1: intros; only 1: firstorder).	0.604469060898	122
Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	40	0.0.0.1.0.1.0.0.0	synth with cache (only 1: unfold eqb31; only 1: intros x y; only 1: rewrite spec_compare; only 1: case Z.compare_spec; only 1: intuition; only 1: apply Int31_canonic; only 1: intuition; only 1: easy; only 1: easy).	0.54833316803	81
Coq.Numbers.Cyclic.Int31.Ring31.TestRing.test	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_not_eq0	40	1.1	synth with cache (only 1: intros; only 1: now intros ->).	5.85522007942	50
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakl_shiftr	40	3.24	synth with cache (only 1: destruct x; only 1: trivial).	2.9148671627	648
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakr_shiftl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_zero	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_or_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S	40	1.0	synth with cache (only 1: intro n; only 1: trivial).	0.0353269577026	3
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S_tail	40	0.3.2.0.0.12	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros; only 1: simpl in *; only 1: rewrite ?IHn; only 1: reflexivity).	19.7804129124	7014
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_n_0	40	5.81	synth with cache (only 1: fix le_div2 1; only 1: trivial).	34.8089020252	16383
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.319287061691	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S_tail	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_n_0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_size	40	0.0.3	synth with cache (only 1: destruct x; only 1: simpl; only 1: auto).	2.60137701035	13
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_above_size	40	0.4.1.1.0.4.0.0.2	synth with cache (only 1: intros; only 1: replace k with (k - size + size)%nat by lia; only 1: induction (k - size)%nat; only 1: destruct x; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHn; only 1: auto).	16.9033448696	1420
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstr_firstl	40	4.2.14.2.13	synth with cache (only 1: etransitivity; only 1: eauto; only 1: compute; only 1: destruct x; only 1: tauto).	29.2001628876	2240
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstl_firstr	40	0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: trivial).	0.055330991745	3
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_predsize_0_firstl	40	0.7.2.0.1	synth with cache (only 1: intros; only 1: destruct x; only 1: simpl in *; only 1: inversion H; only 1: auto).	19.386605978	615
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_propagates	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_sneakl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_eqn	40	36.4.2	synth with cache (only 1: intros; only 1: simpl; only 1: now rewrite H).	20.5974287987	11608
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_converges	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_eqn	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incrbis_aux_equiv	40	1.1	synth with cache (only 1: apply recrbis_aux_equiv; only 1: auto).	0.0322558879852	4
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phibis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_pos	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_nonneg	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_zero	40	5.2.0	synth with cache (only 1: destruct x; only 1: compute; only 1: auto).	0.0574460029602	11
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_le	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_length	40	2.0.1	synth with cache (only 1: intros; only 1: simpl; only 1: repeat match goal with | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	0.0454518795013	6
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.l2i_i2l	40	4.0.1.0	synth with cache (only 1: intros; only 1: destruct x; only 1: compute; only 1: auto).	0.0548388957977	9
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakr	40	0.0.9	synth with cache (only 1: destruct x; only 1: compute; only 1: auto).	6.14736819267	58
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakl	40	0.0.0.0	synth with cache (only 1: intros; only 1: destruct x; only 1: compute; only 1: auto).	0.0613920688629	4
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_l2i	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_nshiftl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_i2l	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_shiftr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incrbis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi_aux	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_positive_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2i_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_negative	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.wB_pos	40	0	synth with cache (only 1: auto with zarith).	0.0279579162598	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_zdigits	40	10	synth with cache (only 1: split).	0.0869648456573	32
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_more_than_1_digit	40	0.1	synth with cache (only 1: red; only 1: auto).	0.0332832336426	3
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_0	40	2	synth with cache (only 1: auto).	0.0267388820648	3
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_1	40	0	synth with cache (only 1: reflexivity).	0.0524098873138	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_m1	40	7	synth with cache (only 1: auto with zarith).	0.0319840908051	8
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_compare	40	5.0	synth with cache (only 1: intros; only 1: auto with zarith).	1.39320206642	22
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ	40	6.0.0	synth with cache (only 1: unfold add31; only 1: intros; only 1: apply phi_phi_inv).	0.0731418132782	16
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub	40	4.3	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.262731075287	45
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp	40	1.1	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.680438995361	41
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred_c	40	0.0	synth with cache (only 1: intros; only 1: apply spec_sub_c).	0.0381190776825	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred	40	2.1	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.297079086304	74
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi2_phi_inv2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul	40	1.1	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0380477905273	4
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_square_c	40	1.4.0.0.0.0	synth with cache (only 1: unfold mul31c; only 1: intros; only 1: rewrite phi2_phi_inv2; only 1: apply Zmod_small; only 1: generalize (phi_bounded x); only 1: nia).	8.52758789062	190
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div21	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter_int31_iter_nat	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.addmuldiv31_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_mul_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pos_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head00	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.head031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_nz	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail00	40	1.0.2.0.0.1.0	synth with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).	3.91919016838	56
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.tail031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.quotient_by_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_init	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_true	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_false	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div31_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter31_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_lower_bound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div312_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter312_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_is_even	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.log2_phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lor	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_land	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lxor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_more_than_1_digit	40	15	synth with cache (only 1: lia).	0.220970869064	139
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.wB_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_2	40	0.1.1.0	synth with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0228369235992	6
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z	40	0.1.1.0	synth with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0295350551605	6
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_of_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_zdigits	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_0	40	1.2.0.0	synth with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: unfold wB, base; only 1: auto with zarith).	0.0397610664368	11
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_Bm1	40	0.7.0.0	synth with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: auto with zarith).	0.268309831619	101
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_compare	40	0.0.0.0	synth with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0267670154572	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_eq0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zmod_equal	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ	40	15.9.0.0	synth with cache (only 1: intros; only 1: unfold opp, to_Z; only 1: rewrite Zplus_mod_idemp_l; only 1: auto).	19.2605419159	8925
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_square_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zgcd_bound	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div21	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_mul_div	40	3	synth with cache (only 1: auto with zarith).	0.0151379108429	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pos_mod	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_is_even	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.two_p_power2	40	0.28.0.2.1	synth with cache (only 1: intros; only 1: destruct x; only 1: trivial; only 1: apply two_power_pos_equiv; only 1: trivial).	20.239563942	10246
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_bounded	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_land	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lxor	40
Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40
Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	13	synth with cache (only 1: auto).	0.0247740745544	100
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	40	0.0.1.0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros n p a H; only 1: rewrite Zmod_eq by auto with zarith; only 1: unfold Z.sub at 1; only 1: rewrite Z_div_plus_full_l by auto with zarith; only 1: replace (2 ^ n) with (2 ^ (n - p) * 2 ^ p) by (rewrite <- Zpower_exp; [ f_equal |  |  ]; lia); only 1: rewrite <- Zdiv_Zdiv, Z_div_mult by auto with zarith; only 1: rewrite (Z.mul_comm (2 ^ (n - p))), Z.mul_assoc; only 1: rewrite Zopp_mult_distr_l; only 1: rewrite Z_div_mult by auto with zarith; only 1: symmetry; only 1: apply Zmod_eq; only 1: auto with zarith).	10.8927271366	1842
Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40
Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	19.0.2	synth with cache (only 1: intros EQ; only 1: apply Z.lt_gt; only 1: Z.order_pos).	1.91980314255	655
Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40	0	synth with cache (only 1: Z.order_nz).	0.0298030376434	1
Coq.Numbers.Cyclic.Int63.Int63.wB_diff_0	40	3	synth with cache (only 1: now Z.nzsimpl).	0.0527181625366	4
Coq.Numbers.Cyclic.Int63.Int63.wB_pos	40	5	synth with cache (only 1: now Z.nzsimpl).	0.0406339168549	6
Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	1	synth with cache (only 1: tauto).	0.0181460380554	2
Coq.Numbers.Cyclic.Int63.Int63.to_Z_1	40	0	synth with cache (only 1: now Z.nzsimpl).	0.0405910015106	1
Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	280	synth with cache (only 1: congruence).	20.0278198719	53478
Coq.Numbers.Cyclic.Int63.Int63.to_Z_inj	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- not_true_iff_false, eqb_spec; only 1: trivial).	0.0400199890137	3
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_correct	40	0.0.1	synth with cache (only 1: intros x y; only 1: rewrite eqb_false_spec; only 1: trivial).	0.0930168628693	13
Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40
Coq.Numbers.Cyclic.Int63.Int63.cast_refl	40
Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40	0.3.1.0.1	synth with cache (only 1: unfold eqo; only 1: intros; only 1: generalize (eqb_correct i j); only 1: rewrite H; only 1: trivial).	0.0703639984131	15
Coq.Numbers.Cyclic.Int63.Int63.eqbP	40
Coq.Numbers.Cyclic.Int63.Int63.ltbP	40
Coq.Numbers.Cyclic.Int63.Int63.lebP	40
Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_zero_spec	40	3.2.23	synth with cache (only 1: <Coq.Strings.Ascii.t_eqb>; only 1: auto using eqb_correct, eqb_complete; only 1: tauto).	1.46884012222	1109
Coq.Numbers.Cyclic.Int63.Int63.diveucl_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succ_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.pred_spec	40
Coq.Numbers.Cyclic.Int63.Int63.predc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.oppc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40
Coq.Numbers.Cyclic.Int63.Int63.oppcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_gcd	40
Coq.Numbers.Cyclic.Int63.Int63.gcd_spec	40
Coq.Numbers.Cyclic.Int63.Int63.head00_spec	40
Coq.Numbers.Cyclic.Int63.Int63.tail00_spec	40	0	synth with cache (only 1: now intros h; rewrite (to_Z_inj _ 0 h)).	0.0206270217896	1
Coq.Numbers.Cyclic.Int63.Int63.eqm_mod	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_sub	40
Coq.Numbers.Cyclic.Int63.Int63.eqmE	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40
Coq.Numbers.Cyclic.Int63.Int63.int_eqm	40	5.13.10	synth with cache (only 1: intro H; only 1: subst; only 1: reflexivity).	15.2121989727	8656
Coq.Numbers.Cyclic.Int63.Int63.eqmI	40
Coq.Numbers.Cyclic.Int63.Int63.add_assoc	40
Coq.Numbers.Cyclic.Int63.Int63.add_comm	40
Coq.Numbers.Cyclic.Int63.Int63.add_le_r	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_l	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_r	40	0.0.0.0.0.1.0	synth with cache (only 1: intros h; only 1: apply int_eqm in h; only 1: rewrite !add_spec in h; only 1: apply eqm_mod, eqm_sub in h; only 1: replace (_ + _ - _) with (φ (y) - φ (z)) in h by lia; only 1: rewrite <- eqm_subE in h; only 1: apply eqmI, h).	0.0529398918152	8
Coq.Numbers.Cyclic.Int63.Int63.lsr0	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	0.4.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: Z.nzsimpl; only 1: reflexivity).	0.0935111045837	14
Coq.Numbers.Cyclic.Int63.Int63.lsr_1	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_add	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_M_r	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0_spec	40
Coq.Numbers.Cyclic.Int63.Int63.bit_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.bit_b2i	40
Coq.Numbers.Cyclic.Int63.Int63.bit_1	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_M	40
Coq.Numbers.Cyclic.Int63.Int63.bit_half	40
Coq.Numbers.Cyclic.Int63.Int63.bit_ext	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40
Coq.Numbers.Cyclic.Int63.Int63.lor_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.lor_le	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0	40
Coq.Numbers.Cyclic.Int63.Int63.bit_add_or	40
Coq.Numbers.Cyclic.Int63.Int63.addmuldiv_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_bit	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	1	synth with cache (only 1: auto with zarith).	0.0195140838623	2
Coq.Numbers.Cyclic.Int63.Int63.is_even_lsl_1	40
Coq.Numbers.Cyclic.Int63.Int63.quotient_by_2	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_false	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_spec	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_def	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_lower_bound	40
Coq.Numbers.Cyclic.Int63.Int63.diveucl_21_spec_aux	40
Coq.Numbers.Cyclic.Int63.Int63.div2_phi	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_spec	40
Coq.Numbers.Cyclic.Int63.Int63.of_pos_rec_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_int	40
Coq.Numbers.Cyclic.Int63.Int63.of_Z_spec	40
Coq.Numbers.Cyclic.Int63.Int63.negbE	40	0.49.9	synth with cache (only 1: intro Hn; only 1: subst; only 1: apply negb_involutive).	3.59449005127	7493
Coq.Numbers.Cyclic.Int63.Int63.Z_oddE	40	0.3	synth with cache (only 1: rewrite Zmod_odd, Zodd_even_bool; only 1: now destruct Z.even).	0.0500700473785	14
Coq.Numbers.Cyclic.Int63.Int63.Z_evenE	40	1.7	synth with cache (only 1: rewrite Zmod_even; only 1: now destruct Z.even).	0.0655407905579	10
Coq.Numbers.Cyclic.Int63.Int63.is_zeroE	40
Coq.Numbers.Cyclic.Int63.Int63.bitE	40
Coq.Numbers.Cyclic.Int63.Int63.lt_pow_lt_log	40
Coq.Numbers.Cyclic.Int63.Int63.land_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lxor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.landC	40
Coq.Numbers.Cyclic.Int63.Int63.landA	40
Coq.Numbers.Cyclic.Int63.Int63.land0	40	1.0.3.2.0.0	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite !land_spec, andb_comm; only 1: unfold bit; only 1: rewrite lsr0, lsl0, andb_false_r; only 1: auto).	0.496772050858	172
Coq.Numbers.Cyclic.Int63.Int63.land0_r	40	6.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite land_spec, bit_0; only 1: now rewrite andb_false_r).	0.126312971115	31
Coq.Numbers.Cyclic.Int63.Int63.lorC	40
Coq.Numbers.Cyclic.Int63.Int63.lorA	40
Coq.Numbers.Cyclic.Int63.Int63.lor0	40
Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lxorC	40
Coq.Numbers.Cyclic.Int63.Int63.lxorA	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0_r	40
Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	40	10.0	synth with cache (only 1: intros; only 1: firstorder).	0.448554039001	70
Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40
Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	40	1.0	synth with cache (only 1: intros x y H; only 1: auto using eqb_correct, eqb_complete).	0.0532629489899	3
Coq.Numbers.Cyclic.Int63.Ring63.TestRing.test	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WO	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_OW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_pos_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_Z_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_0_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_1_l	40	0.0.12.2.72.35	synth with cache (only 1: red; only 1: intros EQ; only 1: zify; only 1: Z.nzsimpl'; only 1: apply Zmod_small; only 1: apply ZnZ.spec_to_Z).	34.9090559483	71231
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_comm	40	6.6.7.1.41	synth with cache (only 1: intros a n; only 1: zify; only 1: unfold base; only 1: Morphisms.f_equiv; only 1: auto with zarith).	10.2951519489	12737
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_add_distr_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.CyclicRing	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40	3.0.6.0.3	synth with cache (only 1: intro H; only 1: intros; only 1: apply Z.eqb_eq; only 1: unfold eqb, eq; only 1: easy || lia).	1.3342320919	997
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_1	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_0	40	8.0	synth with cache (only 1: unfold base; only 1: now apply Z.pow_pos_nonneg).	0.0601398944855	17
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.succ_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40	2.0.0.0.3.0	synth with cache (only 1: zify; only 1: rewrite Zmod_small; only 1: trivial; only 1: split; only 1: auto with zarith; only 1: apply gt_wB_1).	0.887166976929	83
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.two_succ	40	7.1.0	synth with cache (only 1: zify; only 1: rewrite <- one_mod_wB  at 2; only 1: now rewrite one_mod_wB).	0.779679059982	66
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B0	40	4	synth with cache (only 1: assumption).	0.00920701026917	5
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.BS	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.Zbounded_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B_holds	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.bi_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_0_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_succ_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_0_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	1.4.8.0.0	synth with cache (only 1: intro n; only 1: zify; only 1: apply Zmod_small; only 1: pose proof gt_wB_1; only 1: lia).	0.807792901993	664
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_succ_l	40
Coq.Numbers.DecimalString.uint_of_char_spec	40
Coq.Numbers.DecimalString.NilEmpty.usu	40
Coq.Numbers.DecimalString.NilEmpty.sus	40
Coq.Numbers.DecimalString.NilEmpty.isi	40
Coq.Numbers.DecimalString.NilEmpty.sis	40
Coq.Numbers.DecimalString.NilZero.uint_of_string_nonnil	40
Coq.Numbers.DecimalString.NilZero.sus	40
Coq.Numbers.DecimalString.NilZero.usu	40
Coq.Numbers.DecimalString.NilZero.usu_nil	40	1.4	synth with cache (only 1: simpl; only 1: easy).	0.0246360301971	7
Coq.Numbers.DecimalString.NilZero.usu_gen	40
Coq.Numbers.DecimalString.NilZero.isi	40
Coq.Numbers.DecimalString.NilZero.isi_posnil	40	3.0	synth with cache (only 1: simpl; only 1: auto).	0.0187478065491	5
Coq.Numbers.DecimalString.NilZero.isi_negnil	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0236608982086	2
Coq.Numbers.DecimalString.NilZero.sis	40
Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40	5.5.3	synth with cache (only 1: split; only 1: parity_binop; only 1: parity_binop).	0.505732059479	366
Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40	5.5.3	synth with cache (only 1: split; only 1: parity_binop; only 1: parity_binop).	0.576381921768	378
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	40	20.7.25.11.3	synth with cache (only 1: intro H; only 1: rewrite nle_gt; only 1: apply le_succ_l; only 1: rewrite <- succ_le_mono; only 1: apply le_0_l).	22.9843070507	78010
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	40	13.27.24	synth with cache (only 1: intro n; only 1: apply lt_succ_r; only 1: apply le_0_l).	5.84737300873	11730
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	40	2.2.5.6	synth with cache (only 1: cases ltac:(n); only 1: intuition; only 1: right; only 1: apply lt_0_succ).	0.310025930405	284
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.le_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.lt_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	40	0.0.0.3	synth with cache (only 1: intros; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).	0.0770411491394	49
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	40	0.18.1.1.1.0.0	synth with cache (only 1: intro n; only 1: cases n; only 1: rewrite pred_0; only 1: order; only 1: intros; only 1: apply le_le_succ_r; only 1: now rewrite pred_succ).	2.32726192474	4438
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	40	7.3.1.2.2.0.2	synth with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros n _; only 1: rewrite pred_succ; only 1: apply lt_succ_diag_r).	3.79701495171	5240
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	40	1.1.0.3.4.4.0.0	synth with cache (only 1: cases ltac:(n); only 1: intro H; only 1: rewrite pred_0; only 1: order'; only 1: intros m H2 H3; only 1: rewrite pred_succ; only 1: rewrite <- le_succ_l; only 1: order).	1.39935684204	2057
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	40	0.0.2.20	synth with cache (only 1: intros z n H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).	4.3540160656	5472
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	40	1.1.1.1.2.0.1	synth with cache (only 1: cases ltac:(n); only 1: intro H; only 1: rewrite pred_0; only 1: order; only 1: intros m IH; only 1: rewrite pred_succ; only 1: now apply le_succ_l).	0.462430953979	538
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	40	2.2.1.1.5.3.6	synth with cache (only 1: cases ltac:(m); only 1: rewrite pred_0; only 1: order; only 1: intros m IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: order).	9.37586212158	16362
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	40	11.0.6.2.2.0.0	synth with cache (only 1: intro n; only 1: cases ltac:(m); only 1: rewrite pred_0; only 1: order; only 1: intro H; only 1: rewrite pred_succ; only 1: apply le_le_succ_r).	19.7869839668	32782
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	40	1.2.0.1.0.1.2.0.2.0	synth with cache (only 1: intros n m; only 1: cases n; only 1: rewrite pred_0; only 1: rewrite lt_succ_r; only 1: now apply lt_le_incl; only 1: intros n IH; only 1: rewrite pred_lt_mono by apply neq_succ_0; only 1: rewrite pred_succ in IH; only 1: rewrite pred_succ; only 1: now rewrite pred_succ).	3.14760398865	3315
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	0.1.15.1.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: order).	5.00782108307	4316
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	3.1.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: auto'; only 1: now nzsimpl).	0.115979909897	14
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	40	1.0.22.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: now nzsimpl).	1.80181884766	3005
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	40	1.11.3.4.1	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: intuition; only 1: now nzsimpl).	4.4907951355	5581
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	40	0.1.1	synth with cache (only 1: intros; only 1: apply mod_small; only 1: auto').	0.013491153717	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	40	0.2.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto').	0.0124471187592	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	40	0.1.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').	0.014673948288	4
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	40	1.0.2.7.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with 0; only 1: rewrite succ_lt_mono, <- one_succ; only 1: apply lt_succ_diag_r; only 1: now nzsimpl).	0.652144193649	801
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	40	1.0.2.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: rewrite succ_lt_mono, <- one_succ; only 1: apply lt_succ_diag_r; only 1: now nzsimpl).	0.147820949554	45
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	40	7.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: order).	0.0918619632721	10
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	40	7.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: order).	0.0940220355988	10
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	40	11.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: auto'; only 1: apply mul_comm).	1.04383993149	1067
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	40	1.0.10.0	synth with cache (only 1: intros; only 1: apply mod_mul; only 1: auto'; only 1: auto').	2.42962384224	1714
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	40	1.0.9.0	synth with cache (only 1: intros; only 1: apply mod_le; only 1: auto'; only 1: auto').	0.29274392128	207
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	40	0.9.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: apply div_str_pos; only 1: auto).	0.513614177704	151
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	40	1.0.9.0	synth with cache (only 1: intros; only 1: apply mul_div_le; only 1: auto'; only 1: auto').	0.404984951019	237
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	1.0.2.2.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').	0.411638975143	119
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	40	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0250549316406	4
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	40	0.0.7.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite <- (Private_NZDiv.div_mul q b); only 1: apply Private_NZDiv.div_le_mono; only 1: auto'; only 1: rewrite mul_comm; only 1: auto'; only 1: auto').	2.47652387619	1752
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40	0.0.8.0.1.2.0	synth with cache (only 1: intros; only 1: rewrite <- (Private_NZDiv.div_mul q b); only 1: apply Private_NZDiv.div_le_mono; only 1: auto'; only 1: rewrite mul_comm; only 1: auto'; only 1: auto').	3.72402000427	2690
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40	2.0.0.0.5.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: apply mod_bound_pos; only 1: auto'; only 1: auto'; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	2.25428009033	1350
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	40	4.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: auto'; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.404633998871	152
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	40	1.2.1.0	synth with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: auto').	0.0194020271301	8
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	0.0.0.3.0.6	synth with cache (only 1: intros n m; only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').	1.47341299057	845
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	40	0.0.0.4.0.7	synth with cache (only 1: intros n m; only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: auto'; only 1: auto').	1.4770450592	1119
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	40	0.0.0.2.0.1.1.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: auto'; only 1: auto').	2.70301389694	733
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	40	0.0.0.2.0.1.2.0	synth with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: auto'; only 1: auto').	1.0455520153	312
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	40	1.0.4.0.0.0	synth with cache (only 1: intros; only 1: destruct (mod_bound_pos a n); only 1: auto'; only 1: apply neq_0_lt_0; only 1: tauto; only 1: now rewrite Private_NZDiv.mod_small_iff).	0.0783150196075	55
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	40	1.0.0.7.0	synth with cache (only 1: intros; only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.73156785965	201
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	0.0.3.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: tauto).	0.0248901844025	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	40	0.0.8.4.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: tauto; only 1: tauto).	1.1934170723	435
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	40	1.0.0.4.0	synth with cache (only 1: intros; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.156714916229	35
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	40	0.0.2.0	synth with cache (only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: tauto).	0.0270202159882	6
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	40	0.0.5.2.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: tauto; only 1: tauto).	0.587603092194	123
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	40	0.0.2.0.0.0.2	synth with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: now apply div_mod).	0.366888046265	67
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	1.0.0.1.0.1.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto'; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: auto').	0.0924289226532	56
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.0.0.3.3.0.0	synth with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: auto; only 1: auto; only 1: intros; only 1: auto; only 1: apply le_0_l).	0.608389139175	255
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40	7.5	synth with cache (only 1: intro n; only 1: now apply (neq_succ_diag_l 0)).	0.207467079163	95
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	40	2.0.8.2.1	synth with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intro n; only 1: now rewrite pred_succ).	0.808714866638	1100
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.PairInduction.pair_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.TwoDimensionalInduction.two_dim_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.DoubleInduction.double_induction	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	40	0.2.2.0	synth with cache (only 1: unfold def_mul; only 1: unfold def_add; only 1: intros; only 1: now rewrite recursion_0).	0.029639005661	8
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	40	1.4.1.18	synth with cache (only 1: unfold if_zero; only 1: unfold ltb; only 1: unfold if_zero; only 1: now rewrite recursion_0).	12.8644168377	960
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	40	0.0.0.5.12.13	synth with cache (only 1: intro n; only 1: intros; only 1: compute; only 1: f_equiv; only 1: f_equiv'; only 1: f_equiv').	17.5756418705	5358
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	40	1.10	synth with cache (only 1: unfold even; only 1: now rewrite recursion_0).	0.0472619533539	47
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	40	4.3.0	synth with cache (only 1: intros; only 1: unfold even; only 1: now rewrite recursion_succ).	0.0594301223755	17
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40	0.0.199	synth with cache (only 1: compute; only 1: rewrite recursion_0; only 1: now nzsimpl).	6.01815199852	30453
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	40	0.0.0.0.0.5.0	synth with cache (only 1: unfold half; only 1: setoid_rewrite one_succ; only 1: rewrite half_aux_succ; only 1: simpl; only 1: rewrite half_aux_0; only 1: simpl; only 1: now nzsimpl).	0.142711162567	69
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	40	1.4.16	synth with cache (only 1: unfold pow; only 1: intro n; only 1: now rewrite recursion_0).	1.20578289032	1079
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	40	5.3.2.4.4	synth with cache (only 1: intros; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: intuition order).	6.23240184784	4899
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.lt_0_mul'	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.eq_mul_1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	40	3.2.1	synth with cache (only 1: intros x x' EQ; only 1: subst; only 1: now f_equiv).	0.0166878700256	9
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	40	1.1.0.0.0.1.0.0.0	synth with cache (only 1: intros a n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: simpl; only 1: split; only 1: now try order'; only 1: now try order'; only 1: simpl; only 1: intuition).	0.475939035416	280
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	40	0.0.16	synth with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.0921659469604	182
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	40	0.0.0.0.19	synth with cache (only 1: intros; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; order')).	0.157173871994	265
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	40	0.0.3.0.0.2.38	synth with cache (only 1: intros a0; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: now nzsimpl; only 1: order'; only 1: order_nz).	3.58944416046	6987
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	40	0.0.0.1.1.0.0.1.0	synth with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).	0.283003091812	161
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	40	0.1	synth with cache (only 1: intros; only 1: apply testbit_even_succ, le_0_l).	0.0120630264282	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	40	2.21.39.17	synth with cache (only 1: split; only 1: now nzsimpl; only 1: now try order'; only 1: congruence).	3.070333004	7518
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	40	5.20.2	synth with cache (only 1: intros x x' EQ; only 1: intro H; only 1: now f_equiv).	1.81039595604	1110
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	40	0.1.1.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec'; only 1: now nzsimpl).	0.0375249385834	6
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	5.0.9	synth with cache (only 1: intro H; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).	0.607620000839	478
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.10.1.12	synth with cache (only 1: intro H; only 1: rewrite shiftr_div_pow2; only 1: apply Private_NZDiv.div_0_l; only 1: order_nz).	4.20187211037	3280
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	40	0.1.0.3.0.1	synth with cache (only 1: intros; only 1: rewrite shiftr_div_pow2, div_small_iff by order_nz; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: trivial; only 1: trivial using le_0_l).	0.768466949463	356
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	40	0.2.4	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.390408039093	78
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	40	0.2.4	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.214582204819	55
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	40	0.2.4	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.276000022888	53
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	40	1.0.5.2.0.0.0.2.8.1	synth with cache (only 1: intros; only 1: split; only 1: intros; only 1: bitwise; only 1: apply xorb_eq; only 1: now rewrite <- lxor_spec, H, bits_0; only 1: intros; only 1: rewrite H  at 1; only 1: bitwise; only 1: apply xorb_nilpotent).	8.6104850769	6278
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	40	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0746319293976	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	1.0.2	synth with cache (only 1: intro n; only 1: bitwise; only 1: destr_bool).	0.0155689716339	6
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0162439346313	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	40	1.0.3	synth with cache (only 1: intro H; only 1: bitwise; only 1: reflexivity).	0.0172278881073	7
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	40	12.15.1.5	synth with cache (only 1: intro H; only 1: bitwise; only 1: apply andb_false_iff; only 1: intuition).	1.63611602783	3313
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	40	1.0.2	synth with cache (only 1: intro n; only 1: bitwise; only 1: trivial).	0.0801439285278	6
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	40	5.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_comm).	0.0164320468903	8
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	40	54.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: intuition).	18.1609330177	30323
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	40	0.0.4.4	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: unfold setbit; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.871445894241	167
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	40	0.3.0.7	synth with cache (only 1: unfold lnot; only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	1.37014722824	605
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	7.0.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: apply lxor_nilpotent).	0.0228111743927	15
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40	0.0.1.0.0.0.1.0.0.2.0.0	synth with cache (only 1: intros a n H; only 1: bitwise; only 1: destruct (le_gt_cases n m); only 1: rewrite ones_spec_high, lnot_spec_high, bits_above_log2; only 1: trivial; only 1: now apply lt_le_trans with n; only 1: trivial; only 1: trivial; only 1: rewrite lnot_spec_low, ones_spec_low; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial).	3.24509882927	2212
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	40	0.0.1.7	synth with cache (only 1: unfold lnot; only 1: intros; only 1: bitwise; only 1: apply xorb_assoc_reverse).	0.968495130539	655
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gauss	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_mul_split	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	0.0.1.1.0.0.0.0.24.17.0	synth with cache (only 1: unfold natural_isomorphism; only 1: simpl_relation; only 1: split; only 1: now rewrite N1.recursion_0; only 1: intro n; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).	2.45511388779	5413
Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40
Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	40	26.0.7	synth with cache (only 1: intro n; only 1: apply sqrt_square; only 1: apply le_0_l).	0.909121990204	1495
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_le	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_or	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.add_sqrt_le	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	40	10.2.1.1.0.0.0	synth with cache (only 1: intros n m; only 1: cases n; only 1: intros H; only 1: exfalso; only 1: now apply H; only 1: intros H; only 1: now nzsimpl).	6.3691868782	6206
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	33.7	synth with cache (only 1: intros n m; only 1: apply lt_lt_add_r).	29.6147968769	17761
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	7.5.4.5.7.9	synth with cache (only 1: intros H; only 1: intros n m; only 1: rewrite add_comm; only 1: apply add_pos_nonneg; only 1: trivial; only 1: apply le_0_l).	33.4636900425	22565
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	40	4.0.1.22	synth with cache (only 1: intros n m; only 1: nzsimpl; only 1: now nzsimpl; only 1: apply le_0_l).	1.96031808853	1488
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	40	0.1.1.0.0	synth with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: order; only 1: now apply pow_0_l).	0.0323438644409	7
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	40	17.0.4.32	synth with cache (only 1: intros H; only 1: nzsimpl; only 1: solve_proper; only 1: apply le_0_l).	9.04136610031	12255
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	40	1.1.1.2.1.0.0.0.0.0.0.0.0.6.0	synth with cache (only 1: intros a b c; only 1: destruct (lt_ge_cases c 0) as [Hc| Hc]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: now nzsimpl; only 1: apply le_ind with (4 := Hc); only 1: solve_proper; only 1: now nzsimpl; only 1: clear c Hc; only 1: intros c Hc IH; only 1: nzsimpl; only 1: rewrite IH; only 1: apply mul_shuffle1; only 1: trivial; only 1: trivial; only 1: trivial).	8.46230387688	3302
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	40	1.1.8.21.4.0.0	synth with cache (only 1: intros a b Ha Hb; only 1: contradict Ha; only 1: apply Private_NZPow.pow_eq_0 with b; only 1: intros H; only 1: rewrite H, pow_0_r in Hb; only 1: order'; only 1: trivial).	12.2276148796	21742
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	0.0.2.20.3	synth with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: trivial; only 1: trivial).	33.0885019302	7348
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40	0.0.4.7.5.23	synth with cache (only 1: intros n m; only 1: intros; only 1: apply pow_le_mono_r; only 1: apply neq_0_lt_0; only 1: order; only 1: order).	36.8572728634	30063
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	3.1.3.3.1.0.3	synth with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: intuition order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: intuition order).	8.20626521111	5411
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_l	40	0.5.5.0.4.12.2	synth with cache (only 1: intros; only 1: destruct (lt_trichotomy a b) as [LT| [EQ'| GT]]; only 1: assert (a ^ c < b ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order; only 1: trivial; only 1: assert (b ^ c < a ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order).	3.2124080658	6141
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_r	40	0.1.0.0.2.4.3	synth with cache (only 1: intros; only 1: destruct (lt_trichotomy b c) as [LT| [EQ'| GT]]; only 1: assert (a ^ b < a ^ c) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order).	0.361084938049	387
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r_iff	40	2.0.5.5.1.11	synth with cache (only 1: split; only 1: now apply Private_NZPow.pow_lt_mono_r; only 1: destruct (le_gt_cases c b) as [LE| GT]; only 1: assert (a ^ c <= a ^ b) by (apply Private_NZPow.pow_le_mono_r; order'); only 1: order; only 1: trivial).	26.3201768398	20062
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r_iff	40	0.2.0.8.1.6.3.2.7	synth with cache (only 1: split; only 1: intro LE; only 1: apply Private_NZPow.pow_le_mono_r; only 1: order'; only 1: trivial; only 1: destruct (le_gt_cases b c) as [LE'| GT]; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; order'); only 1: order).	29.102836132	22489
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_lin_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.even_pow	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40	4.0.0.0.4.0.0.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?succ_le_mono; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now f_equiv; only 1: now rewrite <- ?succ_le_mono; only 1: now apply add_le_mono_r).	12.3557810783	4815
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_r	40	4.0.2.1.4.0.1.0.2.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now f_equiv; only 1: now rewrite <- ?succ_le_mono; only 1: now apply add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?succ_le_mono; only 1: now apply add_le_mono_r).	28.5462968349	12128
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_r	40	1.0.7.1.1.0.7.0.2.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?succ_le_mono; only 1: now apply mul_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?succ_le_mono; only 1: now apply mul_le_mono_r).	23.0735869408	17689
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_alt	40	2.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0140800476074	4
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec0_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_succ	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0	40	0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: intros; only 1: rewrite !strong_rec_alt; only 1: unfold strong_rec0; only 1: f_equiv; only 1: rewrite recursion_succ; only 1: f_equiv'; only 1: rewrite recursion_0; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').	7.32554411888	70
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_more_steps	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0_any	40	0.1.3.3.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt, strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).	2.14874696732	103
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_any_fst_arg	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	40	9.1.15.3	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: compute; only 1: rewrite Hx, Hy; only 1: easy).	6.59372401237	2083
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	10.2.5	synth with cache (only 1: intros n; only 1: intros; only 1: apply divide_mul_l, divide_refl).	0.321137189865	564
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_least	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_comm	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_assoc	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	0.5.4	synth with cache (only 1: unfold lcm; only 1: symmetry; only 1: now nzsimpl).	0.133094787598	125
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_r	40	0.5.3.8.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: solve_proper; only 1: apply divide_0_r; only 1: apply divide_refl; only 1: trivial).	1.18113088608	1700
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_l	40	6.0.1.3.3.1.3.7.12.1.3	synth with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: destruct (lt_ge_cases n 0); only 1: apply le_0_l; only 1: trivial; only 1: intros; only 1: split; only 1: split; only 1: trivial using divide_1_l, le_0_1; only 1: trivial; only 1: now destruct 1).	26.180562973	38385
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	6.1.0.3.3.1.12.3.0	synth with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: intros; only 1: split; only 1: split; only 1: trivial; only 1: trivial using divide_1_l, le_0_1; only 1: now destruct 1).	6.92457985878	10580
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_diag	40	6.1.12.3.0	synth with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: intros; only 1: now split).	1.26754689217	2348
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_eq_0	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_eq_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	40	3.0.0.0.5.0.7.19	synth with cache (only 1: intro H; only 1: induct ltac:(m); only 1: rewrite sub_succ_r; only 1: now nzsimpl'; only 1: intros n IH; only 1: rewrite sub_succ_r; only 1: rewrite IH; only 1: now nzsimpl').	24.3571970463	16242
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40	0.8.1.8.2	synth with cache (only 1: intros n m H; only 1: rewrite add_comm; only 1: symmetry; only 1: rewrite add_comm; only 1: now apply add_sub_assoc).	14.5519979	10078
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	40	0.3.1.0.0.4.1	synth with cache (only 1: intros n m p LE; only 1: destruct (le_ge_cases n p) as [LE'| GE]; only 1: rewrite <- sub_0_le in LE'; only 1: rewrite LE'; only 1: apply le_0_l; only 1: apply le_add_le_sub_r; only 1: now rewrite sub_add).	6.72448801994	3205
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	40	1.0.0.1.2	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: compute; only 1: setoid_rewrite Hx; only 1: setoid_rewrite Hy; only 1: auto with *).	0.378399133682	17
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	40
Coq.Numbers.DecimalZ.of_to	40
Coq.Numbers.DecimalZ.to_of	40
Coq.Numbers.DecimalZ.to_int_inj	40
Coq.Numbers.DecimalZ.to_int_surj	40
Coq.Numbers.DecimalZ.of_int_norm	40
Coq.Numbers.DecimalZ.of_inj	40
Coq.Numbers.DecimalZ.of_iff	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	0.18.0	synth with cache (only 1: apply sqrt_unique' with 0; only 1: now nzsimpl'; only 1: now nzsimpl).	0.769958019257	646
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	40	0.1.4.0.0.19.11.18.0	synth with cache (only 1: intros a Ha; only 1: pose proof (lt_succ_pred 0 a Ha) as EQ; only 1: assert (P a < a) by now rewrite <- le_succ_l, EQ; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: rewrite succ_lt_mono, <- one_succ; only 1: order; only 1: order).	17.0902979374	23345
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	4.0.4.0.6	synth with cache (only 1: unfold sqrt_up; only 1: case compare_spec; only 1: trivial; only 1: order; only 1: reflexivity).	0.515712022781	698
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	40	0.0.0.1.0.0.1.0.4.0	synth with cache (only 1: intros a b q r Ha (Hb, Hr) EQ; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: apply mod_bound_pos; only 1: order; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).	1.36495804787	813
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	40	1.0.0.4.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: order; only 1: intuition; only 1: now nzsimpl).	0.779414176941	389
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	0.0.0.1.5.2.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: trivial; only 1: rewrite succ_lt_mono, <- one_succ; only 1: apply lt_succ_diag_r; only 1: nzsimpl; only 1: order).	0.90155506134	1099
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	40	7.1.2.0	synth with cache (only 1: intros; only 1: apply div_small; only 1: intuition; only 1: order').	0.633063077927	628
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	40	0.3.4.0	synth with cache (only 1: intros; only 1: apply mod_small; only 1: intuition; only 1: apply le_0_1).	0.34037899971	213
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	40	1.0.0.0.1.1.18.5	synth with cache (only 1: symmetry; only 1: apply mod_unique with a; only 1: apply mul_nonneg_nonneg; only 1: trivial; only 1: order; only 1: now try split; only 1: nzsimpl; only 1: apply mul_comm).	39.7698009014	29663
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	40	3.3.1.10.1	synth with cache (only 1: intros; only 1: apply mod_small; only 1: apply mod_bound_pos; only 1: trivial; only 1: trivial).	7.04675602913	3009
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	40	0.1.0.0.2.3.0.0	synth with cache (only 1: intro; only 1: intro; only 1: nzinduct n; only 1: nzsimpl; only 1: now rewrite succ_inj_wd; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.898000001907	480
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	40	0.0.0.0.1.0.0	synth with cache (only 1: intros n m; only 1: nzsimpl; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0494480133057	8
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	40	0.0.0.0.2.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0459439754486	8
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0217220783234	2
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	40	0.0.0.0.2.4.1	synth with cache (only 1: intros n m; only 1: intro; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	1.19872999191	541
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	40	0.0.0.0.1.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0812540054321	7
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	40	0.0.0.0.4.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.129956007004	19
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40	0.0.0.0.3.5.4.0	synth with cache (only 1: intros n m p; only 1: intro; only 1: nzinduct p; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	15.6592278481	4995
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	40	0.0.0.2.6.7.0	synth with cache (only 1: intros n m p q; only 1: nzinduct p; only 1: nzsimpl; only 1: apply add_shuffle0; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	10.2077519894	4548
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	40	0.0.0.0.3.1	synth with cache (only 1: intros n m p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0691649913788	10
Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	3.1.1.5	synth with cache (only 1: nzinduct n; only 1: now nzsimpl'; only 1: intros; only 1: now nzsimpl').	0.265898942947	160
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	38.0.0	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: intuition).	39.5230967999	32952
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	6.4.3.2.0	synth with cache (only 1: intro; only 1: intro; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: tauto).	3.63285303116	1337
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40	0.0.5.1.3.0.0.0.12	synth with cache (only 1: intros n m; only 1: compute; only 1: rewrite lt_eq_cases; only 1: rewrite lt_eq_cases; only 1: intuition; only 1: generalize (le_gt_cases n m); only 1: elim (lt_asymm n m); only 1: tauto; only 1: tauto).	31.1189980507	8547
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	40	3.2.0.7	synth with cache (only 1: intros n H; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl).	2.18790698051	977
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	40	2	synth with cache (only 1: intuition order).	0.0519819259644	25
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	40	0.1	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.259907007217	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	1.1	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.384571075439	52
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	0.4.0	synth with cache (only 1: intros x y z; only 1: rewrite 2!lt_eq_cases; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.120206832886	13
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	0.4.0	synth with cache (only 1: intros x y z; only 1: rewrite 2!lt_eq_cases; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.131465911865	13
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	40	7	synth with cache (only 1: intuition order).	0.126415967941	87
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	7.1	synth with cache (only 1: intro n; only 1: order).	0.0943601131439	51
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	40	2	synth with cache (only 1: order).	0.108397960663	34
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	40	1.17.4.2	synth with cache (only 1: intros n H; only 1: intro m; only 1: apply le_succ_l; only 1: now apply lt_le_incl).	2.27969813347	4671
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	40	3.11.0.1	synth with cache (only 1: intro m; only 1: intro n; only 1: rewrite lt_succ_r; only 1: now apply lt_le_incl).	2.10770487785	1618
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	40	0.19.0	synth with cache (only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.578577041626	392
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.1.1.22.35	synth with cache (only 1: rewrite <- le_succ_l; only 1: apply lt_le_incl; only 1: rewrite two_succ; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r).	1.10195207596	2805
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	40	0.20.1.0.1	synth with cache (only 1: transitivity 1; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite two_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	2.40886902809	2348
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	2.0.1.1.1	synth with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intuition).	0.268073797226	23
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.0.1.0.2.1	synth with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: tauto).	0.229605913162	20
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	5.4.0	synth with cache (only 1: intros; only 1: generalize (le_gt_cases n m); only 1: intuition order).	1.66914200783	248
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	40	0.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (lt_trichotomy n m); only 1: destruct (lt_trichotomy n m); only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order; only 1: intuition order; only 1: intuition order).	0.567613124847	35
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	40	7.0	synth with cache (only 1: intro n; only 1: intuition order).	0.0843439102173	36
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0	synth with cache (only 1: intuition order).	0.0333549976349	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	40	0.0.0.2.1.4.2	synth with cache (only 1: intros; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intuition; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	9.97045397758	528
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	40	0.0.0.1.0.0.0.1	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m); only 1: destruct (lt_trichotomy n m); only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order; only 1: intuition order; only 1: intuition order).	0.302666902542	25
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	40	0	synth with cache (only 1: intuition order).	0.034078836441	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0	synth with cache (only 1: intuition order).	0.0267331600189	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	0.0.1.1.1.3	synth with cache (only 1: intro n; only 1: intro m; only 1: rewrite lt_eq_cases; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	1.28410291672	160
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	40	7.0.5.1	synth with cache (only 1: intro m; only 1: symmetry; only 1: rewrite <- le_succ_l; only 1: intuition order).	9.88603711128	3377
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs_rs'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs'_rs''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rbase	40	38.11	synth with cache (only 1: intros RS' n; only 1: order).	2.65737700462	3718
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.A'A_right	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls_ls'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls'_ls''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.lbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.A'A_left	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.lt_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.le_ind	40	3	synth with cache (only 1: apply right_induction).	0.0260000228882	4
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rlt_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rgt_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.lt_wf	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.gt_wf	40
Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40	0.1.2.0.53.0	synth with cache (only 1: compute; only 1: induction n; only 1: intros; only 1: intuition; only 1: intros P z Hz IH x Hxz; only 1: eauto).	26.5614299774	44208
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_unique	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_ancestor	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.SuccPred.succ_pred_approx	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_gives_succ_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_pred_injective	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	40	11	synth with cache (only 1: now f_equal).	0.0295979976654	33
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	40	0.0.2	synth with cache (only 1: induction n; only 1: reflexivity; only 1: now f_equal).	0.0276710987091	13
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	40	8.2.22.0.3.1.5	synth with cache (only 1: PeanoNat.Nat.cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: tauto; only 1: simpl; only 1: intro n; only 1: now rewrite PeanoNat.Nat.pred_succ).	27.6936450005	40773
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	40	14.0.2.4.5	synth with cache (only 1: unfold ofnat; only 1: induction n; only 1: simpl; only 1: apply lt_succ_diag_r; only 1: now apply lt_lt_succ_r).	9.71584391594	12581
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	40	3.20.7	synth with cache (only 1: simpl; only 1: fix even_spec 1; only 1: now unfold ofnat).	12.2821350098	19278
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	0.0.0.0.0.24.2.0	synth with cache (only 1: induction n; only 1: intros; only 1: symmetry; only 1: apply add_0_l; only 1: intros; only 1: rewrite ofnat_succ, add_succ_l; only 1: simpl; only 1: now f_equiv).	7.28758692741	5388
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	40	11.8	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.271692037582	253
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	40	0.0.24.0	synth with cache (only 1: intros n m p (q, Hq); only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: exists q; only 1: now rewrite mul_shuffle3, Hq).	1.90507006645	2678
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	40	0.0.0.2.0.5.0	synth with cache (only 1: intros n m p Hp; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: split; only 1: intros (q, Hq); only 1: exists q; only 1: now rewrite mul_shuffle3, mul_cancel_l in Hq; only 1: apply mul_divide_mono_l).	0.706691026688	585
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40	0.4.1.1	synth with cache (only 1: intros; only 1: apply divide_mul_l; only 1: exists 1; only 1: now nzsimpl).	0.0214350223541	13
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	40	1.3.1	synth with cache (only 1: intros; only 1: rewrite mul_comm; only 1: apply divide_mul_l, divide_refl).	0.0194671154022	13
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40	2.13.6.5.0.1.1	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: apply gcd_nonneg; only 1: apply gcd_divide_r; only 1: apply gcd_divide_l; only 1: intros; only 1: now apply gcd_greatest).	7.38900113106	16074
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	40	1.8.2.0.3.1.4	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	1.7999150753	2242
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	40	0.1.1.3.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.0605840682983	58
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	40	4.0.0.8.0.3.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: apply lt_le_incl, lt_0_1; only 1: now nzsimpl'; only 1: exists n; only 1: now nzsimpl; only 1: trivial).	2.00940203667	2158
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	40	0.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).	0.0429201126099	12
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	40	0.1.1.3.1.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).	0.0977628231049	111
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	5.7.1.3.1.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: trivial using divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial).	1.75279903412	2079
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	40	0.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: now rewrite le_succ_l; only 1: order').	0.129065990448	6
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	40
Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	0.0.0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	2.08031201363	886
Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	40	0.0.0.0.0	synth with cache (only 1: split; only 1: rewrite <- even_spec, <- odd_spec; only 1: now rewrite <- negb_odd, odd_succ, negb_even; only 1: rewrite <- even_spec, <- odd_spec; only 1: now rewrite <- negb_odd, odd_succ, negb_even).	0.0533611774445	5
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	40	0.15.0	synth with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!odd_spec; only 1: now rewrite Odd_succ, Even_succ).	0.988935947418	1019
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	40	0.0.1.0.2	synth with cache (only 1: intros n m Hm; only 1: rewrite <- !negb_even; only 1: apply even_spec in Hm; only 1: rewrite even_add; only 1: now destruct (even n), (even m)).	0.176017999649	50
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	40	0.1.1.0.2.2	synth with cache (only 1: intros n m p Hm; only 1: rewrite <- !negb_even; only 1: apply even_spec in Hm; only 1: rewrite even_add; only 1: rewrite even_mul; only 1: now destruct (even n), (even m)).	0.457001209259	285
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	40	0.15.0.1	synth with cache (only 1: intros; only 1: apply even_add_even; only 1: exists m; only 1: now f_equiv).	4.91045212746	2209
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40	0.16.1.1	synth with cache (only 1: intros; only 1: apply odd_add_even; only 1: exists m; only 1: now f_equiv).	2.58963298798	1841
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	40	0.0.0.0.2.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	0.134448051453	8
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	40	0.0.0.0.2.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).	0.0983021259308	8
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40	0.1.0.0.3.11.5.7	synth with cache (only 1: intro; only 1: intro p; only 1: nzinduct p; only 1: rewrite <- (add_0_l 0); only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	4.48501300812	2825
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	40	1.0.0	synth with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: now nzsimpl).	0.02357006073	4
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	40	1.0.0	synth with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0231578350067	4
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	40	1.1.0.0.1	synth with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now nzsimpl).	0.0438349246979	8
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	0.0.0.6.2.1	synth with cache (only 1: intros; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: nzsimpl; only 1: now rewrite add_cancel_r).	1.14998197556	636
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	40	9.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.241526126862	68
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0214660167694	2
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	40	2.0.0.4.0.5.2.4	synth with cache (only 1: apply log2_unique; only 1: order_pos; only 1: split; only 1: now nzsimpl; only 1: nzsimpl; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: order_pos).	2.72775697708	1902
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	40	2.1.4.2.4.1.3	synth with cache (only 1: apply log2_unique' with 0; only 1: apply lt_le_incl, lt_0_1; only 1: split; only 1: order_pos; only 1: nzsimpl; only 1: order'; only 1: now nzsimpl).	1.80864500999	1223
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	40	0.0.0.0.2.9	synth with cache (only 1: unfold log2_up; only 1: intros a Ha; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.532446146011	231
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.8.0.0.0.0	synth with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order'; only 1: order).	0.745093822479	455
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	40	1.13.1.2.2.0	synth with cache (only 1: intros; only 1: unfold log2_up; only 1: case compare; only 1: order; only 1: order_pos; only 1: order).	10.3702898026	8622
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	40	0.0.0.0.1	synth with cache (only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.0284271240234	6
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40	0.2.0.2.2.6.6.1.7.2.9	synth with cache (only 1: apply log2_up_unique; only 1: apply succ_lt_mono; only 1: rewrite one_succ, <- succ_lt_mono; only 1: apply lt_succ_diag_r; only 1: split; only 1: rewrite one_succ; only 1: nzsimpl; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: nzsimpl; only 1: order).	14.2133779526	11749
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	0	synth with cache (only 1: simpl_relation).	0.01194190979	1
Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	40	4.0.4	synth with cache (only 1: intro A; only 1: intros; only 1: simpl_relation).	0.134731054306	167
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	40	0.1.4.1.12.20	synth with cache (only 1: intros z Hz; only 1: apply imp_iff_compat_r; only 1: split; only 1: apply succ_inj; only 1: intros; only 1: now f_equiv).	17.9785969257	37350
Coq.Numbers.NatInt.NZBase.NZBaseProp.CentralInduction.central_induction	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40	0.0.1.0.0.12.1.0.0.1.0	synth with cache (only 1: intros n m p H1 H2; only 1: le_elim H2; only 1: le_elim H1; only 1: apply lt_le_incl; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_lt_mono_pos_l; only 1: apply eq_le_incl; only 1: rewrite <- H1; only 1: now nzsimpl; only 1: apply eq_le_incl; only 1: now rewrite H2).	27.6189949512	13741
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	40	0.1.0.0.0.6.0.0.1.0.0	synth with cache (only 1: intros n m p H1 H2; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_neg_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: apply eq_le_incl; only 1: rewrite H1; only 1: now do 2 rewrite mul_0_l).	10.3134047985	4056
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	40	1.0.0.4.0	synth with cache (only 1: intros n m p H; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_pos_l p n m) by assumption; only 1: now rewrite (mul_cancel_l n m p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl)).	0.0553870201111	25
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	40	3.1.0.1.2.0.0	synth with cache (only 1: intros n m p H; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_neg_l p n m); only 1: rewrite (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl); only 1: now setoid_replace (n == m) with (m == n) by split; now intro; only 1: trivial).	1.06061291695	432
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	2.7.6	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).	0.401568889618	316
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	40	1.7.6	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r).	0.31719493866	262
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40	6.2.0.15.3.8	synth with cache (only 1: split; only 1: intro H1; only 1: apply eq_mul_0 in H1; only 1: tauto; only 1: intro H; only 1: now rewrite H, mul_0_l).	26.4895970821	17805
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	40	0.9.2.2	synth with cache (only 1: intros n m; only 1: intro H1; only 1: apply eq_mul_0 in H1; only 1: tauto).	1.29211187363	1197
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	40	0.9.2	synth with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: tauto).	0.510097980499	467
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	40	0.5	synth with cache (only 1: intros n m p H; only 1: now apply mul_lt_mono_nonneg).	0.0213050842285	13
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	40	0.2.0.0.2.6	synth with cache (only 1: intros n m H1 H2; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_nonneg; only 1: rewrite H2; only 1: now apply eq_le_incl).	0.513856887817	581
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	40
Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	6	synth with cache (only 1: solve_proper).	0.0120739936829	7
Coq.Structures.OrdersTac.OrderFacts.le_refl	40
Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	40
Coq.Structures.OrdersTac.OrderFacts.eq_sym	40	13	synth with cache (only 1: simpl_relation).	0.0770840644836	131
Coq.Structures.OrdersTac.OrderFacts.le_antisym	40
Coq.Structures.OrdersTac.OrderFacts.neq_sym	40	0	synth with cache (only 1: auto with *).	0.0122528076172	1
Coq.Structures.OrdersTac.OrderFacts.trans	40
Coq.Structures.OrdersTac.OrderFacts.eq_neq	40
Coq.Structures.OrdersTac.OrderFacts.neq_eq	40	0	synth with cache (only 1: eauto using eq_trans, eq_sym).	0.0122680664062	1
Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40
Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	40	0.1.3.0.11.4.0.2	synth with cache (only 1: intros x y; only 1: rewrite ?P.le_lteq; only 1: intro H; only 1: destruct (P.lt_total x y) as [H'| [H'| H']]; only 1: intuition auto; subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: destruct H; only 1: intuition; only 1: intuition auto; subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	10.056992054	13744
Coq.Structures.OrdersTac.OrderFacts.not_gt_le	40	2.2.1.3.2.0	synth with cache (only 1: intros x y H; only 1: destruct (P.lt_total x y); only 1: rewrite P.le_lteq; only 1: auto; only 1: rewrite P.le_lteq; only 1: intuition auto; subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	3.2177028656	1969
Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	40	0.1.2.2	synth with cache (only 1: intros x y; only 1: rewrite P.le_lteq; only 1: generalize (P.lt_total x y); only 1: intuition).	0.102150201797	44
Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40
Coq.Structures.OrdersEx.PairOrderedType.lt_compat	40
Coq.Structures.OrdersEx.PairOrderedType.compare_spec	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_compat	40	4	synth with cache (only 1: solve_proper).	0.719996929169	60
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.compare_spec	40
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_trans	40	10.0.3.0.3	synth with cache (only 1: intros x y H; only 1: destruct H; only 1: now subst; only 1: intuition; only 1: now rewrite <- H1).	1.70057106018	1750
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_not_eq	40	3	synth with cache (only 1: intuition Nat.order).	0.0199790000916	12
Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_trans	40	5.4	synth with cache (only 1: intros a b c Ha Hc; only 1: Z.order).	0.390601158142	159
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_not_eq	40	2.2	synth with cache (only 1: intros n m; only 1: Z.order).	0.250355958939	70
Coq.Structures.OrderedTypeEx.Z_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.lt_not_eq	40	2.24	synth with cache (only 1: intros m'; only 1: intuition Pos.Private_Tac.order).	2.0530860424	1371
Coq.Structures.OrderedTypeEx.Positive_as_OT.compare	40
Coq.Structures.OrderedTypeEx.N_as_OT.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_refl	40	10.1	synth with cache (only 1: intros EQ; only 1: now f_equal).	0.147225141525	76
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_sym	40	1.3.0.0.0.2	synth with cache (only 1: intros EQ; only 1: intros (x1, x2); only 1: red; only 1: simpl; only 1: intros (U, V); only 1: auto with ordered_type).	0.395891904831	334
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_trans	40
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_trans	40
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	2.2.2.3	synth with cache (only 1: induction x; only 1: intuition; only 1: intuition; only 1: eauto).	0.225088119507	135
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.compare	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.eq_dec	40	6	synth with cache (only 1: decide equality).	0.114237070084	28
Coq.Structures.OrderedTypeEx.String_as_OT.nat_of_ascii_inverse	40
Coq.Structures.OrderedTypeEx.String_as_OT.lts_tail_unique	40	19.9.3.4	synth with cache (only 1: intros H; only 1: inversion H; only 1: auto; only 1: Nat.order).	21.1418771744	17030
Coq.Structures.OrderedTypeEx.String_as_OT.lt_trans	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.String_as_OT.compare	40
Coq.Structures.Orders.Compare2EqBool.eqb_eq	40
Coq.Structures.Orders.OT_to_Full.le_lteq	40	0.2.1.0	synth with cache (only 1: intros; only 1: apply or_iff_compat_r; only 1: compute; only 1: intuition).	0.0247120857239	15
Coq.Structures.Orders.OTF_LtIsTotal.lt_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_le	40
Coq.Structures.Orders.OTF_to_TTLB.leb_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_trans	40
Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40
Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	40
Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	40
Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	40
Coq.Structures.Orders.TTLB_to_OTF.lt_compat	40
Coq.Structures.Orders.TTLB_to_OTF.le_lteq	40	0.0.0.2.1.0.11	synth with cache (only 1: intros x y; only 1: unfold eq, lt, le in *; only 1: case leb; only 1: case leb; only 1: intuition; only 1: intuition; only 1: intuition).	2.45906209946	1071
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	3	synth with cache (only 1: now f_equal).	0.0156528949738	4
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_sym	40	7.2.0.9.0	synth with cache (only 1: intros (x1, x2); only 1: intros; only 1: red; only 1: destruct H; only 1: intuition).	1.84708499908	1886
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40	4.4.1.5.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold eq; only 1: simpl; only 1: intros; only 1: intuition; only 1: eauto; only 1: eauto).	4.87865710258	4272
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_dec	40
Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40
Coq.Structures.Equalities.UpdateEq.eq_equiv	40
Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40
Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	16.1.6.4	synth with cache (only 1: apply eq_true_iff_eq; only 1: intuition; only 1: apply eqb_eq; only 1: intuition).	20.2382721901	27913
Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	40	6.2.1.6.2.1.7.4	synth with cache (only 1: apply eq_true_iff_eq; only 1: intuition; only 1: apply eqb_eq; only 1: symmetry; only 1: now apply eqb_eq; only 1: apply eqb_eq; only 1: symmetry; only 1: now apply eqb_eq).	38.5790519714	48616
Coq.Structures.OrderedType.MOT_to_OT.eq_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	40
Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	40	15	synth with cache (only 1: auto with *).	0.279120206833	363
Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	40	0	synth with cache (only 1: order).	0.00836896896362	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	40	5	synth with cache (only 1: order).	0.0113689899445	6
Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0	synth with cache (only 1: order).	0.00961399078369	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	0	synth with cache (only 1: order).	0.00815296173096	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	40	0	synth with cache (only 1: order).	0.00748085975647	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	40	0	synth with cache (only 1: order).	0.00764918327332	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	40	0	synth with cache (only 1: order).	0.00793695449829	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	40	0	synth with cache (only 1: order).	0.0077908039093	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0	synth with cache (only 1: order).	0.0933210849762	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	40	0	synth with cache (only 1: order).	0.00734901428223	1
Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0	synth with cache (only 1: order).	0.00875186920166	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	40	0	synth with cache (only 1: order).	0.00767803192139	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	40	0	synth with cache (only 1: order).	0.0078010559082	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	40	0	synth with cache (only 1: order).	0.00756311416626	1
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	40	3.2.0.0.1.0.0.1.0.2.2	synth with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).	3.25012397766	3939
Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_eq	40	5.15.0	synth with cache (only 1: intros; only 1: rewrite <- H; only 1: auto with ordered_type).	2.08871388435	2402
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_In	40	2.1.1.0.1.1.1.1	synth with cache (only 1: simple induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: constructor; only 1: subst; only 1: order).	0.590883970261	600
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_Inf_In	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_Inf	40	6.3.24	synth with cache (only 1: induction l; only 1: easy; only 1: firstorder).	6.12998199463	8072
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_Inf	40	30.8.34.6	synth with cache (only 1: intros; only 1: induction l; only 1: auto; only 1: intuition).	8.39435005188	30437
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_NoDup	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_eqk	40	1.0.6.19	synth with cache (only 1: intros l; only 1: intros; only 1: destruct H; only 1: auto).	0.305803060532	511
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_r	40	5.3	synth with cache (only 1: intros; only 1: auto).	0.00893902778625	10
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_l	40	0	synth with cache (only 1: auto).	0.00630402565002	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_refl	40	0.0	synth with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0121638774872	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_refl	40	0.0	synth with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0120689868927	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_sym	40	0	synth with cache (only 1: auto with ordered_type).	0.00722694396973	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_sym	40	0.1	synth with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0174009799957	3
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_trans	40	0.20.1.0.1	synth with cache (only 1: unfold eqk, eqke; only 1: intuition; only 1: simpl; only 1: rewrite H; only 1: intuition).	2.41069602966	4178
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_trans	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_trans	40	1.2	synth with cache (only 1: intuition; only 1: eauto with ordered_type).	0.0476031303406	5
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqk	40	1	synth with cache (only 1: eauto with ordered_type).	0.0118088722229	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqke	40	5.4.0.2.0	synth with cache (only 1: unfold eqk, ltk; only 1: unfold eqke; only 1: intuition; only 1: simpl in *; only 1: order).	1.33735609055	765
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_equiv	40	2.0.0.0.0.26	synth with cache (only 1: split; only 1: unfold eqk, ltk; only 1: intuition; only 1: unfold eqk, ltk; only 1: intuition; only 1: eauto with ordered_type).	0.473616123199	1191
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_equiv	40	0.0.0.0	synth with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.0239939689636	4
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_strorder	40	0.17.47.0.8	synth with cache (only 1: constructor; only 1: unfold eqk, ltk; only 1: intros Base Step; only 1: order; only 1: eauto with ordered_type).	27.5269069672	68294
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat	40	6.5.2	synth with cache (only 1: unfold eqke, ltk; only 1: unfold eqk, eqke; only 1: solve_proper).	2.46758198738	1074
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat'	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_not_ltk	40	1.0	synth with cache (only 1: unfold eqk, ltk; only 1: auto with ordered_type).	0.096540927887	18
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_eqk	40	1.0.0	synth with cache (only 1: unfold eqk, ltk; only 1: intuition; only 1: eauto with ordered_type).	0.0149719715118	4
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_ltk	40	1.0.0	synth with cache (only 1: unfold eqk, ltk; only 1: intuition; only 1: eauto with ordered_type).	0.0147979259491	4
Coq.Structures.OrderedType.KeyOrderedType.Elt.InA_eqke_eqk	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_alt	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.MapsTo_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_lt	40	4.0.4.34.1	synth with cache (only 1: unfold eqk, ltk; only 1: intros y q u H; only 1: induction 1; only 1: intuition; only 1: eauto with *).	11.3478870392	16533
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_In	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_NotIn	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_NoDupA	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_1	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_2	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_3	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_2	40	0.2.0	synth with cache (only 1: inversion_clear 1; only 1: intuition; only 1: eauto with ordered_type).	0.0842959880829	5
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_3	40	0.0.6.2	synth with cache (only 1: unfold eqke; only 1: inversion_clear 1; only 1: intuition; only 1: intuition).	2.53806114197	298
Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	1.0.1.0.1.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).	0.0237970352173	10
Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_compat	40
Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	1.0	synth with cache (only 1: autorewrite with order; only 1: easy).	0.0113859176636	3
Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40	3.1.9.7.27	synth with cache (only 1: split; only 1: simpl_relation; only 1: iorder; only 1: repeat red; only 1: iorder).	0.566890001297	1876
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	40	0.1.8	synth with cache (only 1: red; only 1: compute; only 1: iorder).	3.12375092506	195
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	40	3.0	synth with cache (only 1: compute; only 1: iorder).	0.0155630111694	18
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	10	synth with cache (only 1: iorder).	0.0374460220337	36
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0	synth with cache (only 1: iorder).	0.00873899459839	1
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	40	2.2.2.0.0.0	synth with cache (only 1: intros; only 1: rewrite le_lteq; only 1: destruct (compare_spec x y); only 1: intuition; only 1: intuition; only 1: intuition).	4.60006999969	924
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	40	0	synth with cache (only 1: iorder).	0.011106967926	1
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	40	4.0	synth with cache (only 1: rewrite compare_gt_iff; only 1: iorder).	0.0359151363373	6
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.0.0	synth with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).	0.015044927597	3
Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	40	5.1	synth with cache (only 1: intro H; only 1: order).	0.0216610431671	14
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	40	0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0154740810394	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	40	0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0139269828796	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	40	1.0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	1.78540706635	3
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	0	synth with cache (only 1: order).	0.00786805152893	1
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	40	2.0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	1.77700519562	4
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0	synth with cache (only 1: order).	0.00776791572571	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	40	0	synth with cache (only 1: order).	0.00641512870789	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	0	synth with cache (only 1: order).	0.00642395019531	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0	synth with cache (only 1: order).	0.00735402107239	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	40	2	synth with cache (only 1: order).	0.0270810127258	18
Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	40	2.1	synth with cache (only 1: intro H; only 1: order).	0.0180659294128	12
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	5.1	synth with cache (only 1: intro H; only 1: order).	0.0252108573914	22
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	40	5	synth with cache (only 1: order).	0.0287039279938	22
Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	2.1	synth with cache (only 1: intro H; only 1: order).	0.0100018978119	5
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	40	2	synth with cache (only 1: order).	0.0929620265961	19
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	40	2	synth with cache (only 1: order).	0.0940761566162	19
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	40	5	synth with cache (only 1: order).	0.026782989502	22
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	40	12.0.0.0.0.0.0.5.8.1	synth with cache (only 1: split; only 1: intro H; only 1: rewrite H; only 1: intuition; only 1: eapply OrderTac.lt_irrefl; only 1: eauto; only 1: eapply OrderTac.lt_irrefl; only 1: eauto; only 1: intuition; only 1: order).	22.2252960205	23389
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	40
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40	0.7.9.1.3	synth with cache (only 1: compute; only 1: intros; only 1: rewrite H0; only 1: rewrite <- H; only 1: tauto).	24.7075099945	31813
Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	40
Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	40	2.1	synth with cache (only 1: intros H; only 1: now apply compare_eq_iff).	0.00807118415833	5
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	40	3.0.0.0.0.0.0	synth with cache (only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: now apply compare_eq_iff).	0.0261700153351	16
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	0	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.00994896888733	1
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	40	5	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0470790863037	22
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	2.2.0.1.3	synth with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: case leb_spec0; only 1: now rewrite <- compare_le_iff, compare_ngt_iff; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	1.50156593323	584
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	40	3.8.3	synth with cache (only 1: case leb_spec0; only 1: now rewrite <- compare_lt_iff, compare_nge_iff; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	1.72683405876	927
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	40	3.5.3	synth with cache (only 1: case ltb_spec0; only 1: intuition; only 1: intuition).	0.538830041885	389
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	0.1.8	synth with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).	0.423861980438	167
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	40	0.0.9.0	synth with cache (only 1: apply leb_le; only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- compare_lt_iff, compare_refl).	0.211828947067	223
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40	2.0.4.0.4.3.12	synth with cache (only 1: case ltb_spec0; only 1: case leb_spec0; only 1: now rewrite <- compare_lt_iff, compare_nge_iff; only 1: constructor; only 1: case leb_spec0; only 1: constructor; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	10.7819261551	10362
Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	40	1.1.1.0.1.3.2.21	synth with cache (only 1: case leb_spec0; only 1: rewrite <- compare_le_iff; only 1: now destruct compare; only 1: rewrite <- compare_le_iff; only 1: destruct compare; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: split).	8.31593394279	9745
Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	40	8.1.10	synth with cache (only 1: intros y Hy; only 1: intros; only 1: CRelationClasses.simpl_crelation).	0.344741106033	335
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	40	3.4.9.0	synth with cache (only 1: intros; only 1: rewrite InA_alt; only 1: exists x; only 1: intuition).	0.552523136139	612
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	40	1.1.2.4	synth with cache (only 1: induction l; only 1: auto; only 1: firstorder using Sorted_inv; only 1: now rewrite H).	0.459962844849	168
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	40
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	40	4.0.18	synth with cache (only 1: induction l; only 1: easy; only 1: firstorder).	0.616130113602	899
Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	40	11.5.14	synth with cache (only 1: simple induction l; only 1: constructor; only 1: firstorder using Sorted_inv).	0.912703037262	1621
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	40	10	synth with cache (only 1: eauto with *).	0.273432016373	77
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	40	27.0	synth with cache (only 1: unfold eqk, ltk; only 1: solve_proper).	23.3649129868	4924
Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	40	3	synth with cache (only 1: eauto with *).	0.145282030106	20
Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqk	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqke	40	2.0.0	synth with cache (only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: elim (StrictOrder_Irreflexive _ LT)).	0.0290009975433	5
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_eq	40	15	synth with cache (only 1: now intros <-).	0.192847013474	136
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_lt	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_In	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_NotIn	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_NoDupA	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_1	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_2	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_3	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	40	0	synth with cache (only 1: firstorder).	0.0167610645294	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	40	2	synth with cache (only 1: split).	0.0131208896637	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	40	0	synth with cache (only 1: reflexivity).	0.0151090621948	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	40	2.13.2.12	synth with cache (only 1: compute in *; only 1: intros; only 1: destruct H; only 1: trivial).	0.613667011261	1326
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	40	1	synth with cache (only 1: now destruct 1).	0.0161101818085	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	40	0	synth with cache (only 1: reflexivity).	0.0129680633545	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	40	0	synth with cache (only 1: firstorder).	0.0124700069427	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	40	5	synth with cache (only 1: auto with arith).	0.0164520740509	6
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	0.0.28	synth with cache (only 1: induction 1; only 1: firstorder; only 1: firstorder).	14.570319891	6599
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	40	0.0.0	synth with cache (only 1: induction 1; only 1: firstorder; only 1: firstorder).	0.0328550338745	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	1.42.1	synth with cache (only 1: firstorder; only 1: rewrite <- H; only 1: firstorder).	3.11966490746	7229
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	40	0.0.0	synth with cache (only 1: unfold In, MapsTo; only 1: setoid_rewrite InA_alt; only 1: firstorder).	0.0312149524689	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_eq	40	4	synth with cache (only 1: now intros <-).	0.0702409744263	34
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	2	synth with cache (only 1: now intros <-).	0.183685064316	38
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	0.0	synth with cache (only 1: rewrite !In_alt2, Exists_cons; only 1: intuition).	0.072653055191	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	5.17.6.26	synth with cache (only 1: setoid_rewrite InA_alt; only 1: intuition; only 1: firstorder  (subst; auto); only 1: firstorder).	17.9604361057	17327
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_3	40	2.28.10	synth with cache (only 1: setoid_rewrite InA_alt; only 1: firstorder  (subst; auto); only 1: firstorder).	39.3093569279	31255
Coq.Structures.EqualitiesFacts.PairDecidableType.eq_dec	40
Coq.Structures.EqualitiesFacts.PairUsualDecidableType.eq_dec	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_eqk	40	1.0.0.0.4.1	synth with cache (only 1: intros l l'; only 1: intros; only 1: destruct H; only 1: induction l; only 1: simpl in *; only 1: auto).	0.221354961395	108
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_refl	40	0.0	synth with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.016382932663	2
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_refl	40	0.0	synth with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0198979377747	2
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_sym	40	0.0	synth with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0182459354401	2
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_sym	40	0.0	synth with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0260169506073	2
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_trans	40	5.0.3.16	synth with cache (only 1: intros l1 l2 Eq x; only 1: intuition; only 1: unfold eqk, eqke; only 1: eauto).	2.66081309319	3488
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_trans	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_equiv	40	1.1.0.0.13	synth with cache (only 1: split; only 1: unfold eqk, eqke; only 1: intuition; only 1: auto; only 1: eauto).	0.297044992447	375
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_equiv	40	0.0.0.0	synth with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).	0.0452029705048	4
Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqke_eqk	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqk	40	0.3.2.28	synth with cache (only 1: intros y q u H; only 1: induction 1; only 1: eauto; only 1: intuition).	3.94689583778	5726
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_alt	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.MapsTo_eq	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_eq	40	0.0.0.2.2.0.1.4.3.23	synth with cache (only 1: intros l1 l2 Eq x; only 1: firstorder; only 1: induction H; only 1: destruct y; only 1: exists e; only 1: firstorder; only 1: eauto; only 1: destruct IHInA as [e H0]; only 1: exists e; only 1: auto).	7.82381606102	16136
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_2	40	0.6.0	synth with cache (only 1: inversion 1; only 1: intuition; only 1: eauto).	0.0383369922638	9
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_3	40	0.0.3.0	synth with cache (only 1: unfold eqke; only 1: inversion_clear 1; only 1: intuition; only 1: intuition).	1.16464400291	42
Coq.Structures.OrdersAlt.Update_OT.lt_strorder	40
Coq.Structures.OrdersAlt.Update_OT.lt_compat	40
Coq.Structures.OrdersAlt.Update_OT.compare_spec	40
Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40
Coq.Structures.OrdersAlt.Backport_OT.lt_trans	40	2.0.0.3	synth with cache (only 1: intros EQ; only 1: intros x y L E; only 1: rewrite E in L; only 1: auto).	0.034970998764	46
Coq.Structures.OrdersAlt.Backport_OT.compare	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	40
Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40
Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40
Coq.Structures.GenericMinMax.GenericMinMax.max_l	40
Coq.Structures.GenericMinMax.GenericMinMax.max_r	40
Coq.Structures.GenericMinMax.GenericMinMax.min_l	40
Coq.Structures.GenericMinMax.GenericMinMax.min_r	40	2.4.4.1.0.2.0.0	synth with cache (only 1: unfold min, gmin; only 1: case compare_spec; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt x y); only 1: auto; only 1: auto; only 1: auto with relations).	9.72732710838	15992
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	40	6.2.1.1.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros R R' EQ a a' Ha WF; only 1: order).	1.3883869648	709
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	40	2.12	synth with cache (only 1: apply max_r; only 1: order).	0.0726089477539	94
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	40	4.0.3.0.16	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).	3.35056710243	1930
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0	synth with cache (only 1: solve_max).	0.0131471157074	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	40	20	synth with cache (only 1: solve_max).	2.40466189384	1240
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	40	0	synth with cache (only 1: solve_max).	0.0209240913391	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	40	5	synth with cache (only 1: solve_max).	0.0264389514923	16
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	40	5	synth with cache (only 1: solve_max).	0.0295639038086	16
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	40	5.0	synth with cache (only 1: intuition; only 1: solve_max).	0.0223569869995	7
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	40	6	synth with cache (only 1: solve_max).	0.08487200737	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	40	0.0.0.0.2.1	synth with cache (only 1: intuition; only 1: destruct (max_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order)).	0.0331170558929	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	40	0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.129322052002	39
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	40	0.1.0	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0272541046143	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	40	2.2.1	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.078113079071	12
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	2.0.2.0.0.0.0.0.4.0.2	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: order || (right; order) || (left; order); only 1: apply min_l; only 1: order || (right; order) || (left; order); only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: intuition; only 1: now apply min_r).	19.0800139904	6774
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	1.1	synth with cache (only 1: apply min_l; only 1: order || (right; order) || (left; order)).	0.0109839439392	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	3.3.0.7	synth with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).	0.477070093155	209
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0	synth with cache (only 1: solve_min).	0.0133440494537	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	3.3.3.0.8	synth with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order; only 1: order).	2.82469797134	1009
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	0	synth with cache (only 1: solve_min).	0.0161459445953	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	0	synth with cache (only 1: solve_min).	0.0161709785461	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	40	0	synth with cache (only 1: solve_min).	0.080137014389	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	40	0	synth with cache (only 1: solve_min).	0.0172691345215	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	0.0.3.0	synth with cache (only 1: split; only 1: solve_min; only 1: intuition; only 1: solve_min).	0.0514171123505	16
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	40	0.0.0.0.2.1	synth with cache (only 1: intuition; only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order)).	0.0348691940308	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	40	0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.156015872955	39
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	40	0.1.0	synth with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.0246999263763	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	40	0.2.1	synth with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.0979390144348	6
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	40	0.1	synth with cache (only 1: apply max_l; only 1: solve_min).	0.0172579288483	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40	12.44	synth with cache (only 1: apply max_mono; only 1: eauto with *).	12.6941430569	17708
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	40	1.59	synth with cache (only 1: apply min_mono; only 1: congruence).	16.520170927	23034
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	40	1.1.1.0.2	synth with cache (only 1: intros Compat Hl Hr; only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: congruence; only 1: congruence).	0.0425629615784	29
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	6.6.0.6	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).	0.457501888275	564
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	13.13.3.10.0	synth with cache (only 1: intros; only 1: apply min_case_strong; only 1: congruence; only 1: auto; only 1: auto).	27.2754590511	35598
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	40	3.3.4.0	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: congruence; only 1: congruence).	0.265273094177	168
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	6.6.0.1	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).	0.494652032852	536
Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	40	0.2.0.11.2	synth with cache (only 1: intros; only 1: unfold not; only 1: unfold eq; only 1: rewrite H; only 1: discriminate).	4.79481697083	3039
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_dec	40
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40
Coq.ZArith.Znat.nat_N_Z	40	0.1.41	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	1.63301801682	1343
Coq.ZArith.Znat.N_nat_Z	40
Coq.ZArith.Znat.positive_nat_Z	40	0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.0208840370178	5
Coq.ZArith.Znat.positive_N_Z	40	0.0	synth with cache (only 1: simpl; only 1: now f_equal).	0.0123980045319	2
Coq.ZArith.Znat.positive_N_nat	40	1.0	synth with cache (only 1: simpl N.to_nat; only 1: now subst).	0.00872397422791	3
Coq.ZArith.Znat.positive_nat_N	40	2.0.0.0.1	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.0974929332733	13
Coq.ZArith.Znat.Z_N_nat	40	0.1.1.5	synth with cache (only 1: induction n; only 1: trivial; only 1: trivial; only 1: reflexivity).	0.10839009285	31
Coq.ZArith.Znat.Z_nat_N	40
Coq.ZArith.Znat.Zabs_N_nat	40	0.1.0.0.14	synth with cache (only 1: induction n; only 1: now f_equal; only 1: simpl; only 1: now subst; only 1: trivial).	0.147919893265	188
Coq.ZArith.Znat.Zabs_nat_N	40	1.1.1.0.0.51	synth with cache (only 1: destruct n; only 1: now f_equal; only 1: simpl; only 1: apply positive_nat_N; only 1: simpl; only 1: apply positive_nat_N).	2.19105792046	3383
Coq.ZArith.Znat.N2Z.id	40	1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.0115170478821	4
Coq.ZArith.Znat.N2Z.inj	40	1.4.1.0.1.0.0.26	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	2.93580293655	3328
Coq.ZArith.Znat.N2Z.inj_iff	40	0.0.2.0.0.0.2.0.0.0.2.0.3.0.0	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: tauto; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence).	6.2866859436	4526
Coq.ZArith.Znat.N2Z.is_nonneg	40	0.9.0	synth with cache (only 1: destruct n; only 1: now Z.nzsimpl; only 1: now f_equal).	0.0675859451294	52
Coq.ZArith.Znat.N2Z.inj_0	40	0	synth with cache (only 1: trivial).	0.00782203674316	1
Coq.ZArith.Znat.N2Z.inj_pos	40	0	synth with cache (only 1: reflexivity).	0.0078911781311	1
Coq.ZArith.Znat.N2Z.inj_compare	40	1.1.0.0.1.2.0	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: easy'; only 1: easy').	0.200818061829	123
Coq.ZArith.Znat.N2Z.inj_le	40	0	synth with cache (only 1: now destruct n, m).	0.0083601474762	1
Coq.ZArith.Znat.N2Z.inj_lt	40	0.5	synth with cache (only 1: unfold N.lt, N.gt; only 1: now destruct n, m).	0.0131080150604	7
Coq.ZArith.Znat.N2Z.inj_ge	40	0.1.0.0.1	synth with cache (only 1: destruct n; only 1: unfold Z.le, Z.ge; only 1: now rewrite inj_compare; only 1: unfold Z.le, Z.ge; only 1: now rewrite inj_compare).	0.0248320102692	12
Coq.ZArith.Znat.N2Z.inj_gt	40	0.0	synth with cache (only 1: unfold Z.lt, Z.gt; only 1: now rewrite inj_compare).	0.0116279125214	2
Coq.ZArith.Znat.N2Z.inj_abs_N	40	0.0.0.36.86	synth with cache (only 1: pattern z; only 1: destruct z; only 1: trivial; only 1: trivial; only 1: trivial).	2.40567493439	8877
Coq.ZArith.Znat.N2Z.inj_add	40
Coq.ZArith.Znat.N2Z.inj_mul	40	0	synth with cache (only 1: now destruct n, m).	0.00843095779419	1
Coq.ZArith.Znat.N2Z.inj_sub_max	40
Coq.ZArith.Znat.N2Z.inj_sub	40
Coq.ZArith.Znat.N2Z.inj_succ	40	0.1.2.101.13	synth with cache (only 1: unfold Z.succ, Z.pred; only 1: destruct n; only 1: now Z.nzsimpl'; only 1: simpl; only 1: now rewrite Pos.add_1_r).	27.6566729546	27203
Coq.ZArith.Znat.N2Z.inj_pred_max	40	12	synth with cache (only 1: now destruct n as [| [p| p| ]]).	0.138683080673	46
Coq.ZArith.Znat.N2Z.inj_pred	40
Coq.ZArith.Znat.N2Z.inj_min	40
Coq.ZArith.Znat.N2Z.inj_max	40
Coq.ZArith.Znat.N2Z.inj_div	40
Coq.ZArith.Znat.N2Z.inj_mod	40
Coq.ZArith.Znat.N2Z.inj_quot	40
Coq.ZArith.Znat.N2Z.inj_rem	40
Coq.ZArith.Znat.N2Z.inj_div2	40	7.0.6	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct p).	0.220575094223	203
Coq.ZArith.Znat.N2Z.inj_quot2	40	1.0.0	synth with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: now destruct p).	0.0143549442291	4
Coq.ZArith.Znat.N2Z.inj_pow	40
Coq.ZArith.Znat.N2Z.inj_testbit	40	0.0.1.0.1.0.0.0.0	synth with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: tauto; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial).	0.207395076752	95
Coq.ZArith.Znat.Z2N.id	40	3.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct 1).	0.0190958976746	7
Coq.ZArith.Znat.Z2N.inj	40
Coq.ZArith.Znat.Z2N.inj_iff	40	2.0.0.1.0.11	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now f_equal; only 1: intros; only 1: now f_equal).	4.55176496506	1624
Coq.ZArith.Znat.Z2N.inj_0	40	1.0	synth with cache (only 1: simpl; only 1: tauto).	0.0102550983429	3
Coq.ZArith.Znat.Z2N.inj_pos	40	6	synth with cache (only 1: easy').	0.00749087333679	7
Coq.ZArith.Znat.Z2N.inj_neg	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.00975012779236	2
Coq.ZArith.Znat.Z2N.inj_add	40
Coq.ZArith.Znat.Z2N.inj_mul	40	1.0.0.0.0.0.0.0.0.3	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2).	1.1866350174	448
Coq.ZArith.Znat.Z2N.inj_succ	40	2.1.5.0.7	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: now destruct 1 || trivial).	1.42852282524	839
Coq.ZArith.Znat.Z2N.inj_sub	40
Coq.ZArith.Znat.Z2N.inj_pred	40
Coq.ZArith.Znat.Z2N.inj_compare	40	1.7.5	synth with cache (only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now destruct n, m).	1.06856298447	525
Coq.ZArith.Znat.Z2N.inj_le	40
Coq.ZArith.Znat.Z2N.inj_lt	40
Coq.ZArith.Znat.Z2N.inj_min	40
Coq.ZArith.Znat.Z2N.inj_max	40
Coq.ZArith.Znat.Z2N.inj_div	40
Coq.ZArith.Znat.Z2N.inj_mod	40
Coq.ZArith.Znat.Z2N.inj_quot	40
Coq.ZArith.Znat.Z2N.inj_rem	40
Coq.ZArith.Znat.Z2N.inj_div2	40	0.32.0.12.10	synth with cache (only 1: unfold N.div2, N.to_nat; only 1: destruct n; only 1: trivial; only 1: now destruct p; only 1: trivial).	4.17350816727	8982
Coq.ZArith.Znat.Z2N.inj_quot2	40	1.1.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	0.0195498466492	6
Coq.ZArith.Znat.Z2N.inj_pow	40
Coq.ZArith.Znat.Z2N.inj_testbit	40
Coq.ZArith.Znat.Zabs2N.abs_N_spec	40	0.0.0.0.0.1	synth with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	0.0224559307098	7
Coq.ZArith.Znat.Zabs2N.abs_N_nonneg	40	13	synth with cache (only 1: now destruct n).	0.14927816391	105
Coq.ZArith.Znat.Zabs2N.id_abs	40	1	synth with cache (only 1: now destruct n).	0.00793886184692	2
Coq.ZArith.Znat.Zabs2N.id	40	0.0.1.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: tauto; only 1: simpl; only 1: now f_equal).	0.0207450389862	6
Coq.ZArith.Znat.Zabs2N.inj_0	40	1.0	synth with cache (only 1: simpl; only 1: tauto).	0.010281085968	3
Coq.ZArith.Znat.Zabs2N.inj_pos	40	0	synth with cache (only 1: trivial).	0.00800204277039	1
Coq.ZArith.Znat.Zabs2N.inj_neg	40	0	synth with cache (only 1: trivial).	0.00719809532166	1
Coq.ZArith.Znat.Zabs2N.inj_opp	40	0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: trivial).	0.0137691497803	4
Coq.ZArith.Znat.Zabs2N.inj_succ	40	1.1.2.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: now destruct 1).	0.0288319587708	9
Coq.ZArith.Znat.Zabs2N.inj_add	40
Coq.ZArith.Znat.Zabs2N.inj_mul	40
Coq.ZArith.Znat.Zabs2N.inj_sub	40
Coq.ZArith.Znat.Zabs2N.inj_pred	40
Coq.ZArith.Znat.Zabs2N.inj_compare	40
Coq.ZArith.Znat.Zabs2N.inj_le	40	2.2.0	synth with cache (only 1: intros; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).	0.0393788814545	25
Coq.ZArith.Znat.Zabs2N.inj_lt	40	0.2.1	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt, N.lt; only 1: now rewrite inj_compare).	0.0379390716553	21
Coq.ZArith.Znat.Zabs2N.inj_min	40
Coq.ZArith.Znat.Zabs2N.inj_max	40
Coq.ZArith.Znat.Zabs2N.inj_quot	40
Coq.ZArith.Znat.Zabs2N.inj_rem	40
Coq.ZArith.Znat.Zabs2N.inj_pow	40
Coq.ZArith.Znat.Zabs2N.inj_succ_abs	40	3.4.3.5.3.4	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: simpl; only 1: now rewrite Pos.add_1_r).	23.4305660725	19812
Coq.ZArith.Znat.Zabs2N.inj_add_abs	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: assert (forall p q, Z.abs_N (Z.rem (Z.pos p) (Z.pos q)) = (N.pos p mod N.pos q)%N); only 1: intros; only 1: rewrite abs_N_nonneg; only 1: now apply Z2N.inj_rem; only 1: now apply Z.rem_nonneg; only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	11.2470312119	5884
Coq.ZArith.Znat.Zabs2N.inj_mul_abs	40	0	synth with cache (only 1: now destruct n, m).	0.0113220214844	1
Coq.ZArith.Znat.Nat2Z.inj_0	40	1	synth with cache (only 1: tauto).	0.00787019729614	2
Coq.ZArith.Znat.Nat2Z.inj_succ	40	2.0.18.7.1.14	synth with cache (only 1: destruct n; only 1: now rewrite <- ?Z.succ_le_mono; only 1: unfold Z.succ; only 1: simpl; only 1: f_equal; only 1: now rewrite Pos.add_1_r).	12.2033631802	5188
Coq.ZArith.Znat.Nat2Z.is_nonneg	40	2.10.0.0.0	synth with cache (only 1: destruct n; only 1: intros EQ; only 1: easy'; only 1: intro H; only 1: easy).	0.730854034424	681
Coq.ZArith.Znat.Nat2Z.id	40	2.0.1.0	synth with cache (only 1: destruct n; only 1: tauto; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.247797966003	7
Coq.ZArith.Znat.Nat2Z.inj	40
Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.1.0.1.11	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H).	0.647132873535	201
Coq.ZArith.Znat.Nat2Z.inj_compare	40
Coq.ZArith.Znat.Nat2Z.inj_le	40
Coq.ZArith.Znat.Nat2Z.inj_lt	40
Coq.ZArith.Znat.Nat2Z.inj_ge	40
Coq.ZArith.Znat.Nat2Z.inj_gt	40
Coq.ZArith.Znat.Nat2Z.inj_abs_nat	40
Coq.ZArith.Znat.Nat2Z.inj_add	40
Coq.ZArith.Znat.Nat2Z.inj_mul	40
Coq.ZArith.Znat.Nat2Z.inj_sub_max	40
Coq.ZArith.Znat.Nat2Z.inj_sub	40
Coq.ZArith.Znat.Nat2Z.inj_pred_max	40
Coq.ZArith.Znat.Nat2Z.inj_pred	40
Coq.ZArith.Znat.Nat2Z.inj_min	40
Coq.ZArith.Znat.Nat2Z.inj_max	40
Coq.ZArith.Znat.Z2Nat.id	40	2.2.0.0.0.0.1.0.21.3	synth with cache (only 1: intros EQ; only 1: destruct n; only 1: reflexivity; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: simpl; only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: easy || now destruct Hm).	5.53635501862	4795
Coq.ZArith.Znat.Z2Nat.inj	40	3.5.1	synth with cache (only 1: intros; only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial; only 1: now Morphisms.f_equiv).	0.159059047699	55
Coq.ZArith.Znat.Z2Nat.inj_iff	40	2.0.0.1.0.4	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now f_equal; only 1: intros; only 1: now f_equal).	1.03757691383	325
Coq.ZArith.Znat.Z2Nat.inj_0	40	0	synth with cache (only 1: now subst).	0.00844883918762	1
Coq.ZArith.Znat.Z2Nat.inj_pos	40	6.1	synth with cache (only 1: simpl; only 1: trivial).	0.00937986373901	9
Coq.ZArith.Znat.Z2Nat.inj_neg	40	0	synth with cache (only 1: reflexivity).	0.00699710845947	1
Coq.ZArith.Znat.Z2Nat.inj_add	40
Coq.ZArith.Znat.Z2Nat.inj_mul	40
Coq.ZArith.Znat.Z2Nat.inj_succ	40	1.0.2.2.5.6.1.14.0.8	synth with cache (only 1: destruct n as [| n| n]; only 1: now f_equal; only 1: simpl; only 1: destruct n; only 1: now destruct 1 || intros _; only 1: rewrite ?Pos.add_1_r, ?Pos.pred_N_succ; only 1: apply Pos2Nat.inj_succ; only 1: now repeat split; only 1: trivial; only 1: now destruct 1 || intros _).	25.4996888638	27350
Coq.ZArith.Znat.Z2Nat.inj_sub	40
Coq.ZArith.Znat.Z2Nat.inj_pred	40
Coq.ZArith.Znat.Z2Nat.inj_compare	40
Coq.ZArith.Znat.Z2Nat.inj_le	40
Coq.ZArith.Znat.Z2Nat.inj_lt	40
Coq.ZArith.Znat.Z2Nat.inj_min	40
Coq.ZArith.Znat.Z2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.abs_nat_spec	40	2.1.0.3.18	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: now subst; only 1: trivial).	1.6899638176	1382
Coq.ZArith.Znat.Zabs2Nat.abs_nat_nonneg	40	1.2.0.36	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: now f_equal; only 1: now destruct 1 || now destruct 2).	2.50715184212	3210
Coq.ZArith.Znat.Zabs2Nat.id_abs	40	0.0.0.0.2.0.0.0.0.0.2.0.2.0.15	synth with cache (only 1: destruct n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	4.946611166	4523
Coq.ZArith.Znat.Zabs2Nat.id	40	1.22.0.16	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	1.21849107742	1753
Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0	synth with cache (only 1: trivial).	0.00701379776001	1
Coq.ZArith.Znat.Zabs2Nat.inj_pos	40	0	synth with cache (only 1: trivial).	0.00645399093628	1
Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	1.0	synth with cache (only 1: simpl; only 1: now subst).	0.00877714157104	3
Coq.ZArith.Znat.Zabs2Nat.inj_succ	40
Coq.ZArith.Znat.Zabs2Nat.inj_add	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul	40
Coq.ZArith.Znat.Zabs2Nat.inj_sub	40
Coq.ZArith.Znat.Zabs2Nat.inj_pred	40
Coq.ZArith.Znat.Zabs2Nat.inj_compare	40
Coq.ZArith.Znat.Zabs2Nat.inj_le	40	0.6.0	synth with cache (only 1: intros; only 1: unfold Z.le, N.le; only 1: now rewrite nat_compare_le, Z2Nat.inj_compare).	0.0288782119751	14
Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	3.2.0	synth with cache (only 1: unfold Z.lt; only 1: intros; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).	0.0232059955597	8
Coq.ZArith.Znat.Zabs2Nat.inj_min	40
Coq.ZArith.Znat.Zabs2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.inj_succ_abs	40
Coq.ZArith.Znat.Zabs2Nat.inj_add_abs	40	1.0.1.0.0.1.1.0.1.0.0.0.1.1.5	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: reflexivity; only 1: simpl; only 1: trivial; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: simpl; only 1: apply Pos2Nat.inj_add).	28.5274789333	20792
Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul).	25.1633810997	15000
Coq.ZArith.Znat.inj_neq	40
Coq.ZArith.Znat.inj_minus2	40
Coq.ZArith.Wf_Z.Z_of_nat_complete	40
Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40	0.1.0	synth with cache (only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	0.0318100452423	4
Coq.ZArith.Wf_Z.Z_of_nat_prop	40
Coq.ZArith.Wf_Z.Z_of_nat_set	40
Coq.ZArith.Wf_Z.natlike_ind	40
Coq.ZArith.Wf_Z.natlike_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.R_wf	40
Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec2	40
Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec3	40
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_ind	40
Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_induction	40
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_ind	40
Coq.ZArith.Zpow_facts.Zpower_pos_1_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40	2.0.1.0.2.5.0.10.0.0	synth with cache (only 1: unfold Z.pow_pos; only 1: generalize 1; only 1: induction p; only 1: intros; only 1: now Z.nzsimpl; only 1: simpl; only 1: intros; only 1: apply IHp; only 1: simpl; only 1: now f_equal).	4.71655106544	2474
Coq.ZArith.Zpow_facts.Zpower_pos_pos	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone	40
Coq.ZArith.Zpow_facts.Zpower_lt_monotone	40
Coq.ZArith.Zpow_facts.Zpower_gt_1	40
Coq.ZArith.Zpow_facts.Zmult_power	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	40
Coq.ZArith.Zpow_facts.Zpower2_lt_lin	40
Coq.ZArith.Zpow_facts.Zpower2_le_lin	40
Coq.ZArith.Zpow_facts.Zpower2_Psize	40
Coq.ZArith.Zpow_facts.Zpower_mod	40
Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	40
Coq.ZArith.Zpow_facts.Zpow_mod_correct	40
Coq.ZArith.Zpow_facts.Zpower_divide	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower	40
Coq.ZArith.Zpow_facts.prime_power_prime	40
Coq.ZArith.Zpow_facts.Zdivide_power_2	40
Coq.ZArith.Zpow_def.Zpower_theory	40
Coq.ZArith.Zcompare.Zcompare_Gt_trans	40
Coq.ZArith.Zcompare.Zcompare_opp	40	1.0.0.0.0.0.2.0.0.1.1.0.0.1.0.0	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: easy || now destruct y; only 1: trivial; only 1: simpl; only 1: apply Pos.compare_antisym; only 1: easy || now destruct y; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite <- ?Pos.compare_antisym).	31.7443349361	29379
Coq.ZArith.Zcompare.Zcompare_Gt_spec	40
Coq.ZArith.Zcompare.Zcompare_plus_compat	40
Coq.ZArith.Zcompare.Zplus_compare_compat	40
Coq.ZArith.Zcompare.Zcompare_succ_Gt	40
Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40
Coq.ZArith.Zcompare.Zcompare_succ_compat	40
Coq.ZArith.Zcompare.Zcompare_mult_compat	40
Coq.ZArith.Zcompare.Zmult_compare_compat_l	40
Coq.ZArith.Zcompare.Zmult_compare_compat_r	40
Coq.ZArith.Zcompare.Zcompare_elim	40
Coq.ZArith.Zcompare.Zcompare_eq_case	40
Coq.ZArith.Zcompare.Zle_compare	40
Coq.ZArith.Zcompare.Zlt_compare	40	2.0.15.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.Private_Tac.order; only 1: trivial; only 1: Z.order).	0.872175931931	1104
Coq.ZArith.Zcompare.Zge_compare	40	8.1	synth with cache (only 1: intros; only 1: now case Z.compare_spec).	0.1197681427	92
Coq.ZArith.Zcompare.Zgt_compare	40	0.1	synth with cache (only 1: intros x y H; only 1: now rewrite H).	0.100409984589	31
Coq.ZArith.Zquot.Zquot_0_r	40
Coq.ZArith.Zquot.Zrem_0_r	40
Coq.ZArith.Zquot.Zrem_0_l	40	2	synth with cache (only 1: now destruct a).	0.0128910541534	3
Coq.ZArith.Zquot.Zquot_0_l	40	3	synth with cache (only 1: now destruct a).	0.031035900116	17
Coq.ZArith.Zquot.Z_rem_same	40
Coq.ZArith.Zquot.Z_rem_mult	40
Coq.ZArith.Zquot.Zquot_opp_l	40
Coq.ZArith.Zquot.Zquot_opp_r	40
Coq.ZArith.Zquot.Zrem_opp_l	40
Coq.ZArith.Zquot.Zrem_opp_r	40
Coq.ZArith.Zquot.Zquot_opp_opp	40
Coq.ZArith.Zquot.Zrem_opp_opp	40
Coq.ZArith.Zquot.Zrem_sgn	40
Coq.ZArith.Zquot.Zrem_sgn2	40
Coq.ZArith.Zquot.Zrem_lt_pos	40
Coq.ZArith.Zquot.Zrem_lt_neg	40
Coq.ZArith.Zquot.Zrem_lt_pos_pos	40	0.2.3.0	synth with cache (only 1: intros Ha Hb; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: generalize (Z.rem_nonneg a b), (Z.rem_bound_abs a b); only 1: lia).	0.324467897415	62
Coq.ZArith.Zquot.Zrem_lt_pos_neg	40	0.3.1.1.0	synth with cache (only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: generalize (Z.rem_nonneg a b), (Z.rem_bound_abs a b); only 1: lia).	2.90650486946	16
Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.1.1.0	synth with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).	0.052375793457	6
Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.3.3.0	synth with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).	0.140962123871	21
Coq.ZArith.Zquot.Remainder_equiv	40
Coq.ZArith.Zquot.Zquot_mod_unique_full	40
Coq.ZArith.Zquot.Zquot_unique_full	40
Coq.ZArith.Zquot.Zrem_unique_full	40	1.3.3.3.2	synth with cache (only 1: intros; only 1: destruct (Zquot_mod_unique_full a b q r); only 1: auto; only 1: auto; only 1: auto).	3.58036088943	1123
Coq.ZArith.Zquot.Z_quot_pos	40
Coq.ZArith.Zquot.Z_quot_lt	40
Coq.ZArith.Zquot.Z_quot_monotone	40
Coq.ZArith.Zquot.Z_mult_quot_le	40
Coq.ZArith.Zquot.Z_mult_quot_ge	40
Coq.ZArith.Zquot.Z_quot_exact_full	40
Coq.ZArith.Zquot.Zrem_le	40
Coq.ZArith.Zquot.Zquot_le_upper_bound	40
Coq.ZArith.Zquot.Zquot_lt_upper_bound	40
Coq.ZArith.Zquot.Zquot_le_lower_bound	40
Coq.ZArith.Zquot.Zquot_sgn	40
Coq.ZArith.Zquot.Z_rem_plus	40
Coq.ZArith.Zquot.Z_quot_plus	40
Coq.ZArith.Zquot.Z_quot_plus_l	40
Coq.ZArith.Zquot.Zquot_mult_cancel_r	40
Coq.ZArith.Zquot.Zquot_mult_cancel_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_r	40
Coq.ZArith.Zquot.Zrem_rem	40
Coq.ZArith.Zquot.Zmult_rem	40
Coq.ZArith.Zquot.Zplus_rem	40
Coq.ZArith.Zquot.Zplus_rem_idemp_l	40
Coq.ZArith.Zquot.Zplus_rem_idemp_r	40
Coq.ZArith.Zquot.Zmult_rem_idemp_l	40
Coq.ZArith.Zquot.Zmult_rem_idemp_r	40
Coq.ZArith.Zquot.Zquot_Zquot	40
Coq.ZArith.Zquot.Zquot_mult_le	40
Coq.ZArith.Zquot.Zrem_divides	40
Coq.ZArith.Zquot.Zquot2_odd_remainder	40
Coq.ZArith.Zquot.Zrem_odd	40
Coq.ZArith.Zquot.Zrem_even	40
Coq.ZArith.Zquot.Zeven_rem	40
Coq.ZArith.Zquot.Zodd_rem	40	1.1.0.0.0.0	synth with cache (only 1: intros a; only 1: rewrite Zrem_even; only 1: destruct a as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	0.0341868400574	8
Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	40
Coq.ZArith.Zquot.Zquot_Zdiv_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_zero	40
Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.binary_value	40	1.2.58	synth with cache (only 1: assert (leS : forall n m, n <= m -> S n <= S m) by (induction 1; auto); only 1: intro n; only 1: now constructor).	8.99581098557	22133
Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.two_compl_value	40	0.0.0.1.0.3	synth with cache (only 1: refine (nat_rect _ _ _); only 1: intros; only 1: exact 0%Z; only 1: intros; only 1: inversion H0; only 1: exact (bit_value h + 2 * H H2)%Z).	0.0396020412445	39
Coq.ZArith.Zdigits.ENCODING_VALUE.Zmod2_twice	40
Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_binary	40
Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_two_compl	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_Sn	40	5	synth with cache (only 1: trivial).	0.0113158226013	6
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_pos	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.two_compl_value_Sn	40	2.3.1.0	synth with cache (only 1: destruct b; only 1: simpl; only 1: auto; only 1: auto).	0.028167963028	11
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn_z	40	0	synth with cache (only 1: auto).	0.00926303863525	1
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_div2_value	40	0.4.0.2.0.0.1.0.0.2.0.1	synth with cache (only 1: destruct z; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct p; only 1: auto; only 1: simpl; only 1: auto; only 1: now destruct Hn || easy; only 1: simpl; only 1: destruct 1; only 1: trivial).	21.5595388412	9565
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Pdiv2	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zdiv2_two_power_nat	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn_z	40	0.1.0.0.0.0.0	synth with cache (only 1: destruct z as [| p| p]; only 1: auto; only 1: auto; only 1: destruct p as [p| p| ]; only 1: auto; only 1: auto; only 1: auto).	0.0708560943604	22
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zeven_bit_value	40	0.0.0.1.1.2.1.4.1.1.19.6	synth with cache (only 1: intros n m; only 1: destruct n; only 1: now f_equal; only 1: destruct p; only 1: easy || now destruct 1; only 1: auto; only 1: now Z.nzsimpl; only 1: destruct p; only 1: now destruct Hn || easy; only 1: simpl; only 1: trivial; only 1: easy).	11.8901810646	9051
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zodd_bit_value	40	0.3.0.1.0.3.0.0.0.2	synth with cache (only 1: intros; only 1: destruct z as [| p| p]; only 1: unfold bit_value; only 1: easy; only 1: now destruct p; only 1: unfold bit_value; only 1: destruct p; only 1: tauto || (intro H; elim H); only 1: now destruct Hn || easy; only 1: tauto || (intro H; elim H)).	20.6311302185	8401
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zge_minus_two_power_nat_S	40	2.3.7	synth with cache (only 1: fix le_div2 1; only 1: intros m IH; only 1: auto).	1.69959688187	708
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zlt_two_power_nat_S	40	1.0.1.0.1.1.0.0	synth with cache (only 1: intros n z; only 1: rewrite (two_power_nat_S n); only 1: generalize (Zmod2_twice z); only 1: destruct (Zeven_odd_dec z) as [H| H]; only 1: rewrite (Zeven_bit_value z H); only 1: lia; only 1: rewrite (Zodd_bit_value z H); only 1: lia).	1.32379508018	407
Coq.ZArith.Zdigits.COHERENT_VALUE.binary_to_Z_to_binary	40
Coq.ZArith.Zdigits.COHERENT_VALUE.two_compl_to_Z_to_two_compl	40
Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_binary_to_Z	40
Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_two_compl_to_Z	40
Coq.ZArith.BinInt.Z.eq_dec	40
Coq.ZArith.BinInt.Z.pos_sub_spec	40
Coq.ZArith.BinInt.Z.pos_sub_discr	40
Coq.ZArith.BinInt.Z.pos_sub_diag	40
Coq.ZArith.BinInt.Z.pos_sub_lt	40
Coq.ZArith.BinInt.Z.pos_sub_gt	40
Coq.ZArith.BinInt.Z.pos_sub_opp	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	40	2.2.0.8	synth with cache (only 1: induction n; only 1: trivial; only 1: trivial; only 1: trivial).	0.18456697464	141
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	40	1	synth with cache (only 1: now destruct n).	0.0153701305389	2
Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	40
Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	40	0.0.0.0.0.0.5	synth with cache (only 1: destruct n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl).	0.189910173416	73
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	14.3970170021	12364
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	40
Coq.ZArith.BinInt.Z.one_succ	40	0	synth with cache (only 1: trivial).	0.0136640071869	1
Coq.ZArith.BinInt.Z.two_succ	40	0	synth with cache (only 1: reflexivity).	0.0119299888611	1
Coq.ZArith.BinInt.Z.add_0_l	40	0	synth with cache (only 1: now destruct n).	0.0149121284485	1
Coq.ZArith.BinInt.Z.add_succ_l	40
Coq.ZArith.BinInt.Z.opp_0	40	0.0	synth with cache (only 1: simpl; only 1: now f_equal).	0.0163979530334	2
Coq.ZArith.BinInt.Z.opp_succ	40
Coq.ZArith.BinInt.Z.succ_pred	40
Coq.ZArith.BinInt.Z.pred_succ	40	0.0	synth with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).	0.017737865448	2
Coq.ZArith.BinInt.Z.sub_0_r	40	0	synth with cache (only 1: now destruct n).	0.0140159130096	1
Coq.ZArith.BinInt.Z.sub_succ_r	40
Coq.ZArith.BinInt.Z.mul_0_l	40	0	synth with cache (only 1: now destruct n).	0.0146479606628	1
Coq.ZArith.BinInt.Z.mul_succ_l	40
Coq.ZArith.BinInt.Z.eqb_eq	40	11.18.3	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: destr_bool).	13.1677751541	18617
Coq.ZArith.BinInt.Z.ltb_lt	40
Coq.ZArith.BinInt.Z.leb_le	40	6.7.6	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: trivial).	9.91885900497	6902
Coq.ZArith.BinInt.Z.compare_eq_iff	40
Coq.ZArith.BinInt.Z.compare_sub	40
Coq.ZArith.BinInt.Z.compare_antisym	40
Coq.ZArith.BinInt.Z.compare_lt_iff	40	0.0.0.0.1.0.1	synth with cache (only 1: unfold ltb, lt; only 1: destruct compare; only 1: split; only 1: congruence; only 1: congruence; only 1: easy'; only 1: easy').	0.403687000275	130
Coq.ZArith.BinInt.Z.compare_le_iff	40	0.0.0.0.1	synth with cache (only 1: unfold leb, le; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	0.571470975876	143
Coq.ZArith.BinInt.Z.lt_succ_r	40
Coq.ZArith.BinInt.Z.max_l	40
Coq.ZArith.BinInt.Z.max_r	40
Coq.ZArith.BinInt.Z.min_l	40
Coq.ZArith.BinInt.Z.min_r	40	0.0.0.1.1.0	synth with cache (only 1: unfold le, min; only 1: rewrite (compare_antisym n m); only 1: case compare_spec; only 1: intuition; only 1: intuition; only 1: intuition).	0.560262918472	160
Coq.ZArith.BinInt.Z.peano_ind	40
Coq.ZArith.BinInt.Z.bi_induction	40
Coq.ZArith.BinInt.Z.abs_eq	40
Coq.ZArith.BinInt.Z.abs_neq	40	0.2.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1; only 1: trivial).	0.035768032074	17
Coq.ZArith.BinInt.Z.sgn_null	40	0.0.0.17	synth with cache (only 1: destruct n; only 1: now f_equal; only 1: congruence; only 1: congruence).	0.328655004501	353
Coq.ZArith.BinInt.Z.sgn_pos	40	8.59	synth with cache (only 1: rewrite lt_le_pred; only 1: now destruct n).	4.85583806038	5332
Coq.ZArith.BinInt.Z.sgn_neg	40	0	synth with cache (only 1: now destruct n).	0.109262943268	1
Coq.ZArith.BinInt.Z.pow_0_r	40	6	synth with cache (only 1: split).	0.0158231258392	7
Coq.ZArith.BinInt.Z.pow_succ_r	40
Coq.ZArith.BinInt.Z.pow_neg_r	40	0.22.1.1.0	synth with cache (only 1: destruct m as [| m| m]; only 1: simpl; only 1: order'; only 1: now nzsimpl; only 1: now destruct 1 || intros _).	24.9345800877	26756
Coq.ZArith.BinInt.Z.pow_pos_fold	40	1.0.1	synth with cache (only 1: simpl; only 1: unfold pow_pos; only 1: trivial).	0.0238268375397	5
Coq.ZArith.BinInt.Z.square_spec	40
Coq.ZArith.BinInt.Z.sqrtrem_spec	40
Coq.ZArith.BinInt.Z.sqrt_spec	40
Coq.ZArith.BinInt.Z.sqrt_neg	40	21	synth with cache (only 1: now destruct n).	0.205010175705	312
Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40
Coq.ZArith.BinInt.Z.log2_spec	40
Coq.ZArith.BinInt.Z.log2_nonpos	40	0.0.3.6.0.0	synth with cache (only 1: destruct n as [| [p| p| ]| ]; only 1: trivial; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	1.91110992432	1197
Coq.ZArith.BinInt.Z.even_spec	40
Coq.ZArith.BinInt.Z.odd_spec	40
Coq.ZArith.BinInt.Z.double_spec	40	0	synth with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.0172159671783	1
Coq.ZArith.BinInt.Z.succ_double_spec	40	8	synth with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.346436977386	34
Coq.ZArith.BinInt.Z.pred_double_spec	40	0	synth with cache (only 1: now destruct n).	0.0159149169922	1
Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_mod	40
Coq.ZArith.BinInt.Z.pos_div_eucl_bound	40
Coq.ZArith.BinInt.Z.mod_pos_bound	40
Coq.ZArith.BinInt.Z.mod_neg_bound	40
Coq.ZArith.BinInt.Z.quotrem_eq	40
Coq.ZArith.BinInt.Z.quot_rem'	40
Coq.ZArith.BinInt.Z.quot_rem	40	0.0.1.0.0.0.0.0	synth with cache (only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: now destruct quotrem).	0.107460975647	24
Coq.ZArith.BinInt.Z.rem_bound_pos	40
Coq.ZArith.BinInt.Z.rem_opp_l'	40
Coq.ZArith.BinInt.Z.rem_opp_r'	40
Coq.ZArith.BinInt.Z.rem_opp_l	40
Coq.ZArith.BinInt.Z.rem_opp_r	40
Coq.ZArith.BinInt.Z.divide_Zpos	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40	7.0.1.7.0.1.0	synth with cache (only 1: split; only 1: intros (m, H); only 1: exists (- m); only 1: now destruct n, m; only 1: intros (m, H); only 1: exists (- m); only 1: now destruct n, m).	2.06061387062	1811
Coq.ZArith.BinInt.Z.ggcd_gcd	40
Coq.ZArith.BinInt.Z.ggcd_correct_divisors	40
Coq.ZArith.BinInt.Z.gcd_divide_l	40
Coq.ZArith.BinInt.Z.gcd_divide_r	40	2.0.11.0.1.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: exists bb; only 1: simpl; only 1: now rewrite mul_comm).	15.8216929436	9066
Coq.ZArith.BinInt.Z.gcd_greatest	40
Coq.ZArith.BinInt.Z.gcd_nonneg	40
Coq.ZArith.BinInt.Z.ggcd_opp	40
Coq.ZArith.BinInt.Z.testbit_of_N	40	2.1.0.0.0.1.0.0.0.1.1.1.1	synth with cache (only 1: destruct a as [| [a| a| ]], n as [| n]; only 1: trivial; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: tauto; only 1: trivial).	4.87201499939	4145
Coq.ZArith.BinInt.Z.testbit_of_N'	40	0.0.0.1.0.2.3.0.0.8.80	synth with cache (only 1: unfold le; only 1: simpl; only 1: destruct a as [| a], n; only 1: trivial; only 1: easy'; only 1: auto; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: easy').	20.1298520565	45938
Coq.ZArith.BinInt.Z.testbit_Zpos	40	1.0.0.0.0.2.0	synth with cache (only 1: rewrite <- testbit_of_N; only 1: intro Hn; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).	0.066333770752	10
Coq.ZArith.BinInt.Z.testbit_Zneg	40
Coq.ZArith.BinInt.Z.div2_spec	40	6	synth with cache (only 1: easy).	0.0145869255066	7
Coq.ZArith.BinInt.Z.testbit_0_l	40	24.21	synth with cache (only 1: rewrite <- ?negb_true_iff, ?PeanoNat.Nat.negb_even, ?PeanoNat.Nat.odd_spec, ?PeanoNat.Nat.even_spec; only 1: now destruct n as [| [| | ]| [| | ]]).	1.80693697929	2411
Coq.ZArith.BinInt.Z.testbit_neg_r	40	0	synth with cache (only 1: now destruct n).	0.0239291191101	1
Coq.ZArith.BinInt.Z.testbit_odd_0	40
Coq.ZArith.BinInt.Z.testbit_even_0	40	0	synth with cache (only 1: now destruct a as [| a| [a| a| ]]).	0.0177218914032	1
Coq.ZArith.BinInt.Z.testbit_odd_succ	40
Coq.ZArith.BinInt.Z.testbit_even_succ	40
Coq.ZArith.BinInt.Z.shiftr_spec_aux	40
Coq.ZArith.BinInt.Z.shiftl_spec_low	40
Coq.ZArith.BinInt.Z.shiftl_spec_high	40
Coq.ZArith.BinInt.Z.shiftr_spec	40
Coq.ZArith.BinInt.Z.lor_spec	40
Coq.ZArith.BinInt.Z.land_spec	40
Coq.ZArith.BinInt.Z.ldiff_spec	40
Coq.ZArith.BinInt.Z.lxor_spec	40
Coq.ZArith.BinInt.Z.gt_lt_iff	40
Coq.ZArith.BinInt.Z.gt_lt	40	0.0	synth with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0272748470306	2
Coq.ZArith.BinInt.Z.lt_gt	40	0.0	synth with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0272960662842	2
Coq.ZArith.BinInt.Z.ge_le_iff	40
Coq.ZArith.BinInt.Z.ge_le	40	2.0	synth with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.344228029251	44
Coq.ZArith.BinInt.Z.le_ge	40	2.0	synth with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.345323085785	44
Coq.ZArith.BinInt.Z.gtb_ltb	40
Coq.ZArith.BinInt.Z.geb_leb	40
Coq.ZArith.BinInt.Z.gtb_lt	40
Coq.ZArith.BinInt.Z.geb_le	40	1.7.2.0	synth with cache (only 1: unfold geb, leb; only 1: rewrite compare_antisym; only 1: unfold leb, le; only 1: now destruct compare).	11.7335710526	3085
Coq.ZArith.BinInt.Z.gtb_spec	40	0.2.5.0.0.0	synth with cache (only 1: rewrite gtb_ltb; only 1: case ltb_spec0; only 1: constructor; only 1: now nzsimpl; only 1: constructor; only 1: order).	0.541918039322	208
Coq.ZArith.BinInt.Z.geb_spec	40
Coq.ZArith.BinInt.Z.add_reg_l	40	4	synth with cache (only 1: apply add_cancel_l).	0.33265709877	15
Coq.ZArith.BinInt.Z.mul_reg_l	40	0.6.0	synth with cache (only 1: intro H; only 1: apply mul_cancel_l; only 1: now nzsimpl).	0.049418926239	9
Coq.ZArith.BinInt.Z.mul_reg_r	40	4.5	synth with cache (only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: exact (fun Hp => proj1 (mul_cancel_l n m p Hp))).	0.141565799713	58
Coq.ZArith.BinInt.Z.opp_eq_mul_m1	40	1.2.0.1.3.1.0.6.2.58	synth with cache (only 1: apply opp_inj; only 1: apply add_move_0_r; only 1: destruct n; only 1: trivial; only 1: rewrite mul_comm; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl; only 1: simpl; only 1: rewrite ?Pos.mul_1_r; only 1: now rewrite pos_sub_spec, Pos.compare_refl).	28.9878489971	36302
Coq.ZArith.BinInt.Z.add_diag	40	3.9	synth with cache (only 1: apply succ_inj; only 1: now nzsimpl').	0.590883016586	123
Coq.ZArith.BinInt.Z.compare_opp	40
Coq.ZArith.BinInt.Z.add_compare_mono_l	40
Coq.ZArith.BinInt.Z.testbit_mod_pow2	40
Coq.ZArith.BinInt.Z.testbit_ones	40
Coq.ZArith.BinInt.Z.testbit_ones_nonneg	40	0.0.4.0.0.0.0.0.0	synth with cache (only 1: destruct (leb_spec 0 i), (ltb_spec i n); only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: order; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial).	1.49709200859	471
Coq.ZArith.BinInt.Pos2Z.id	40	1.1	synth with cache (only 1: simpl; only 1: now f_equal).	0.0205919742584	4
Coq.ZArith.BinInt.Pos2Z.inj	40	7	synth with cache (only 1: congruence).	0.155565977097	27
Coq.ZArith.BinInt.Pos2Z.inj_iff	40	0.2.1.4	synth with cache (only 1: split; only 1: now injection 1; only 1: destruct 1; only 1: now f_equal).	0.221451044083	32
Coq.ZArith.BinInt.Pos2Z.is_pos	40	0	synth with cache (only 1: easy).	0.0213060379028	1
Coq.ZArith.BinInt.Pos2Z.is_nonneg	40	0.2	synth with cache (only 1: red; only 1: easy').	0.0300559997559	4
Coq.ZArith.BinInt.Pos2Z.inj_1	40	1	synth with cache (only 1: now Z.nzsimpl).	0.122689962387	2
Coq.ZArith.BinInt.Pos2Z.inj_xO	40	1.3.0	synth with cache (only 1: simpl; only 1: generalize (Pos.sqrtrem_spec p); only 1: auto).	0.124021053314	11
Coq.ZArith.BinInt.Pos2Z.inj_xI	40	1.0	synth with cache (only 1: simpl; only 1: easy).	0.115231990814	3
Coq.ZArith.BinInt.Pos2Z.inj_succ	40	1.0	synth with cache (only 1: rewrite <- Pos.add_1_r; only 1: trivial).	0.0200810432434	3
Coq.ZArith.BinInt.Pos2Z.inj_add	40	1.0	synth with cache (only 1: simpl; only 1: trivial).	0.110719919205	3
Coq.ZArith.BinInt.Pos2Z.inj_sub	40
Coq.ZArith.BinInt.Pos2Z.inj_sub_max	40
Coq.ZArith.BinInt.Pos2Z.inj_pred	40	3.1.0.1.0.1.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: easy).	4.30000281334	1394
Coq.ZArith.BinInt.Pos2Z.inj_mul	40	0.0	synth with cache (only 1: simpl; only 1: now f_equal).	0.0212600231171	2
Coq.ZArith.BinInt.Pos2Z.inj_pow_pos	40	0	synth with cache (only 1: now apply Pos.iter_swap_gen).	0.0173578262329	1
Coq.ZArith.BinInt.Pos2Z.inj_pow	40	0	synth with cache (only 1: now apply Pos.iter_swap_gen).	0.0165679454803	1
Coq.ZArith.BinInt.Pos2Z.inj_square	40	0	synth with cache (only 1: trivial).	0.0159409046173	1
Coq.ZArith.BinInt.Pos2Z.inj_compare	40	0.0.1	synth with cache (only 1: simpl in *; only 1: revert q; only 1: trivial).	0.022824048996	4
Coq.ZArith.BinInt.Pos2Z.inj_leb	40	0.0	synth with cache (only 1: unfold Pos.leb, Pos.le; only 1: reflexivity).	0.0201330184937	2
Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0	synth with cache (only 1: now f_equal).	0.0145540237427	1
Coq.ZArith.BinInt.Pos2Z.inj_eqb	40	4.0	synth with cache (only 1: revert q; only 1: split).	0.378165006638	113
Coq.ZArith.BinInt.Pos2Z.inj_max	40
Coq.ZArith.BinInt.Pos2Z.inj_min	40
Coq.ZArith.BinInt.Pos2Z.inj_sqrt	40	3.0	synth with cache (only 1: unfold Z.sqrt; only 1: now f_equal).	0.0201878547668	5
Coq.ZArith.BinInt.Pos2Z.inj_gcd	40	0.4	synth with cache (only 1: simpl; only 1: congruence).	0.0194001197815	6
Coq.ZArith.BinInt.Pos2Z.inj_divide	40
Coq.ZArith.BinInt.Pos2Z.inj_testbit	40	0.0.4.1.4.27.23	synth with cache (only 1: simpl; only 1: destruct n as [| n| n]; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: now destruct 1 || intros _).	7.05066895485	11497
Coq.ZArith.BinInt.Pos2Z.inj_neg	40	3	synth with cache (only 1: congruence).	0.0492980480194	18
Coq.ZArith.BinInt.Pos2Z.inj_neg_iff	40	0.2.1.3	synth with cache (only 1: split; only 1: now injection 1; only 1: destruct 1; only 1: now f_equal).	0.0464918613434	10
Coq.ZArith.BinInt.Pos2Z.inj_pos	40	2	synth with cache (only 1: now injection 1).	0.0298271179199	3
Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.3.2.0	synth with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.057018995285	9
Coq.ZArith.BinInt.Pos2Z.neg_is_neg	40	0	synth with cache (only 1: easy).	0.0157790184021	1
Coq.ZArith.BinInt.Pos2Z.neg_is_nonpos	40	2	synth with cache (only 1: easy).	0.0253989696503	3
Coq.ZArith.BinInt.Pos2Z.pos_is_pos	40	0	synth with cache (only 1: reflexivity).	0.0212650299072	1
Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	2	synth with cache (only 1: easy).	0.0258960723877	3
Coq.ZArith.BinInt.Pos2Z.neg_le_pos	40	0	synth with cache (only 1: easy).	0.0206370353699	1
Coq.ZArith.BinInt.Pos2Z.neg_lt_pos	40	0	synth with cache (only 1: easy).	0.0179920196533	1
Coq.ZArith.BinInt.Pos2Z.neg_le_neg	40
Coq.ZArith.BinInt.Pos2Z.neg_lt_neg	40	0.8.0.11.0.17	synth with cache (only 1: assert (le0 : forall n, (0 <= n)%nat) by (induction n; auto); only 1: revert q; only 1: unfold Z.lt in *; only 1: simpl; only 1: intros H; only 1: now rewrite <- Pos.compare_antisym).	12.7411360741	11998
Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	2.1.0	synth with cache (only 1: intros; only 1: unfold Z.le; only 1: easy').	0.0306589603424	12
Coq.ZArith.BinInt.Pos2Z.pos_lt_pos	40	0.0.2.0	synth with cache (only 1: intros; only 1: unfold Z.lt; only 1: simpl; only 1: trivial).	0.0258550643921	6
Coq.ZArith.BinInt.Pos2Z.neg_xO	40	2.0	synth with cache (only 1: simpl; only 1: trivial).	0.0203609466553	4
Coq.ZArith.BinInt.Pos2Z.neg_xI	40	1.0	synth with cache (only 1: simpl; only 1: trivial).	0.0209829807281	3
Coq.ZArith.BinInt.Pos2Z.pos_xO	40	0	synth with cache (only 1: reflexivity).	0.0182220935822	1
Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0	synth with cache (only 1: reflexivity).	0.018678188324	1
Coq.ZArith.BinInt.Pos2Z.opp_neg	40	0.0	synth with cache (only 1: simpl; only 1: now f_equal).	0.0235159397125	2
Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0.0	synth with cache (only 1: simpl; only 1: now f_equal).	0.0187621116638	2
Coq.ZArith.BinInt.Pos2Z.add_neg_neg	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0172729492188	2
Coq.ZArith.BinInt.Pos2Z.add_pos_neg	40	0	synth with cache (only 1: trivial).	0.0166699886322	1
Coq.ZArith.BinInt.Pos2Z.add_neg_pos	40	0	synth with cache (only 1: reflexivity).	0.0134329795837	1
Coq.ZArith.BinInt.Pos2Z.add_pos_pos	40	0	synth with cache (only 1: reflexivity).	0.0142910480499	1
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_l	40	9.0.2.9.0.2.1	synth with cache (only 1: split; only 1: intros (m, H); only 1: exists (- m); only 1: now destruct n, m; only 1: intros (m, H); only 1: exists (- m); only 1: now destruct n, m).	3.01537895203	2649
Coq.ZArith.BinInt.Pos2Z.testbit_neg	40	2.0.3.2.5.11.1	synth with cache (only 1: intro Hn; only 1: destruct n as [| n| n]; only 1: unfold Z.testbit; only 1: now destruct a as [| [| | ]| ]; only 1: simpl; only 1: now destruct (Pos.pred_N a); only 1: now destruct Hn).	2.5219039917	1980
Coq.ZArith.BinInt.Pos2Z.testbit_pos	40	0	synth with cache (only 1: apply Z.testbit_Zpos).	0.0162999629974	1
Coq.ZArith.BinInt.Z2Pos.id	40
Coq.ZArith.BinInt.Z2Pos.inj	40
Coq.ZArith.BinInt.Z2Pos.inj_iff	40
Coq.ZArith.BinInt.Z2Pos.to_pos_nonpos	40	0.2.0.0.3	synth with cache (only 1: destruct x; only 1: simpl; only 1: easy; only 1: easy; only 1: easy).	0.193562984467	30
Coq.ZArith.BinInt.Z2Pos.inj_1	40	0	synth with cache (only 1: trivial).	0.0140290260315	1
Coq.ZArith.BinInt.Z2Pos.inj_double	40	1.2.0.3	synth with cache (only 1: destruct x; only 1: now f_equal; only 1: now f_equal; only 1: easy).	0.189718961716	28
Coq.ZArith.BinInt.Z2Pos.inj_succ_double	40	4.2	synth with cache (only 1: intros; only 1: now destruct x).	0.181969881058	15
Coq.ZArith.BinInt.Z2Pos.inj_succ	40	2.2.1.1.1.3	synth with cache (only 1: destruct x; only 1: now f_equal; only 1: intros _; only 1: simpl; only 1: now destruct p; only 1: easy).	1.51776099205	727
Coq.ZArith.BinInt.Z2Pos.inj_add	40
Coq.ZArith.BinInt.Z2Pos.inj_sub	40
Coq.ZArith.BinInt.Z2Pos.inj_pred	40
Coq.ZArith.BinInt.Z2Pos.inj_mul	40	0.0.0.0.3	synth with cache (only 1: destruct x; only 1: simpl; only 1: easy; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.194948911667	22
Coq.ZArith.BinInt.Z2Pos.inj_pow	40
Coq.ZArith.BinInt.Z2Pos.inj_pow_pos	40
Coq.ZArith.BinInt.Z2Pos.inj_compare	40	0.0.0.8	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.247990846634	71
Coq.ZArith.BinInt.Z2Pos.inj_leb	40	0.0.0.0.1	synth with cache (only 1: destruct x; only 1: simpl; only 1: easy; only 1: easy || now destruct y; only 1: easy).	0.0713319778442	6
Coq.ZArith.BinInt.Z2Pos.inj_ltb	40	0.1.0.1.0	synth with cache (only 1: intros; only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.056351184845	7
Coq.ZArith.BinInt.Z2Pos.inj_eqb	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0660300254822	4
Coq.ZArith.BinInt.Z2Pos.inj_max	40
Coq.ZArith.BinInt.Z2Pos.inj_min	40
Coq.ZArith.BinInt.Z2Pos.inj_sqrt	40	0.0.0.3	synth with cache (only 1: destruct x; only 1: trivial; only 1: trivial; only 1: easy).	0.0291700363159	7
Coq.ZArith.BinInt.Z2Pos.inj_gcd	40	0.0.0.3.2	synth with cache (only 1: intros; only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0699818134308	10
Coq.ZArith.BinInt.Zplus_minus_eq	40
Coq.ZArith.BinInt.Zpos_eq	40	0.1	synth with cache (only 1: intros; only 1: now f_equal).	0.0289390087128	12
Coq.ZArith.BinInt.ZL0	40	8	synth with cache (only 1: now PeanoNat.Nat.nzsimpl).	0.0768749713898	9
Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40	0.11.0	synth with cache (only 1: change 2 with (1 + 1); only 1: Z.nzsimpl; only 1: now Z.nzsimpl).	1.18968486786	261
Coq.ZArith.BinInt.Z_eq_mult	40	1.1.46.2	synth with cache (only 1: intro H1; only 1: rewrite H1; only 1: Z.nzsimpl; only 1: tauto).	2.42288899422	5406
Coq.ZArith.Zcomplements.floor_gt0	40	0	synth with cache (only 1: easy).	0.0103471279144	1
Coq.ZArith.Zcomplements.floor_ok	40
Coq.ZArith.Zcomplements.Z_lt_abs_rec	40
Coq.ZArith.Zcomplements.Z_lt_abs_induction	40
Coq.ZArith.Zcomplements.Zcase_sign	40
Coq.ZArith.Zcomplements.sqr_pos	40	0.0.1.1.0.43.0	synth with cache (only 1: Z.swap_greater; only 1: destruct n; only 1: Z.nzsimpl; only 1: intros EQ; only 1: discriminate; only 1: easy; only 1: easy).	12.4948871136	13859
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_correct	40
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil	40	0.0	synth with cache (only 1: unfold Zlength; only 1: trivial).	0.0104179382324	2
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_cons	40
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil_inv	40
Coq.ZArith.Zeven.Zeven_equiv	40
Coq.ZArith.Zeven.Zodd_equiv	40
Coq.ZArith.Zeven.Zeven_bool_iff	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.35	synth with cache (only 1: destruct n; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	12.8958740234	8804
Coq.ZArith.Zeven.Zodd_bool_iff	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.7	synth with cache (only 1: destruct n as [| [| | ]| [| | ]]; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	9.47276592255	4162
Coq.ZArith.Zeven.Zodd_even_bool	40
Coq.ZArith.Zeven.Zeven_odd_bool	40	12.17.1.6.60	synth with cache (only 1: destruct n as [| n| n]; only 1: simpl; only 1: tauto; only 1: now destruct n; only 1: now destruct n).	8.36860895157	45708
Coq.ZArith.Zeven.Zeven_odd_dec	40
Coq.ZArith.Zeven.Zeven_dec	40	1.0.0.0.3.0.0.1.0.0.0.3.0.0.0.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: auto; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: auto; only 1: destruct p; only 1: simpl; only 1: auto; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: auto).	29.4974219799	32625
Coq.ZArith.Zeven.Zodd_dec	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right).	7.24897098541	4388
Coq.ZArith.Zeven.Zeven_not_Zodd	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: tauto; only 1: destruct p; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto; only 1: destruct p; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto).	17.109181881	10291
Coq.ZArith.Zeven.Zodd_not_Zeven	40	0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: intuition).	0.0462181568146	5
Coq.ZArith.Zeven.Zeven_Sn	40
Coq.ZArith.Zeven.Zodd_Sn	40
Coq.ZArith.Zeven.Zeven_pred	40	3.1.0.1.1.0.0.0.0.1.3.0	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: tauto; only 1: destruct p; only 1: simpl; only 1: tauto; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: tauto; only 1: simpl; only 1: now destruct p).	10.6429040432	8122
Coq.ZArith.Zeven.Zodd_pred	40	3.1.1.1.0.1.0.2.1	synth with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: destruct p; only 1: easy || now destruct 1; only 1: simpl; only 1: now destruct p; only 1: easy || now destruct 1; only 1: simpl; only 1: now destruct p).	3.92861700058	2927
Coq.ZArith.Zeven.Zeven_div2	40	0	synth with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.0289778709412	1
Coq.ZArith.Zeven.Zodd_div2	40
Coq.ZArith.Zeven.Zquot2_odd_eqn	40
Coq.ZArith.Zeven.Zeven_quot2	40	0	synth with cache (only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.0277378559113	1
Coq.ZArith.Zeven.Zodd_quot2	40	0	synth with cache (only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.029844045639	1
Coq.ZArith.Zeven.Zodd_quot2_neg	40	2.0	synth with cache (only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.0449910163879	4
Coq.ZArith.Zeven.Zquot2_opp	40	0	synth with cache (only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.0220899581909	1
Coq.ZArith.Zeven.Zquot2_quot	40
Coq.ZArith.Zeven.Z_modulo_2	40
Coq.ZArith.Zeven.Zsplit2	40
Coq.ZArith.Zeven.Zeven_ex	40	5.0	synth with cache (only 1: exists (Z.div2 n); only 1: now destruct n as [| [| | ]| [| | ]]).	0.222228050232	17
Coq.ZArith.Zeven.Zodd_ex	40
Coq.ZArith.Zeven.Zeven_2p	40	3.0.5.0.4.3.10.2	synth with cache (only 1: boolify_even_odd; only 1: destruct p; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: simpl; only 1: tauto; only 1: simpl; only 1: trivial; only 1: reflexivity).	2.70989084244	3148
Coq.ZArith.Zeven.Zodd_2p_plus_1	40
Coq.ZArith.Zeven.Zeven_plus_Zodd	40
Coq.ZArith.Zeven.Zeven_plus_Zeven	40	1.2.0.2.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: now rewrite Z.odd_add, Ha, Hb).	0.218363046646	77
Coq.ZArith.Zeven.Zodd_plus_Zeven	40	1.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0705330371857	5
Coq.ZArith.Zeven.Zodd_plus_Zodd	40	1.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0716691017151	5
Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40
Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40
Coq.ZArith.Zeven.Zodd_mult_Zodd	40	1.2.13.33.0	synth with cache (only 1: boolify_even_odd; only 1: fix even_spec 1; only 1: Z.pos_or_neg b; only 1: now destruct Hn || easy; only 1: now destruct Hn || easy).	7.48019385338	8389
Coq.ZArith.Zmisc.iter_nat_of_Z	40
Coq.ZArith.Znumtheory.Zdivide_opp_r	40
Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0	synth with cache (only 1: apply Z.divide_opp_r).	0.00879311561584	1
Coq.ZArith.Znumtheory.Zdivide_opp_l	40
Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	40	0	synth with cache (only 1: apply Z.divide_opp_l).	0.00749397277832	1
Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40
Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	40	0	synth with cache (only 1: apply Z.divide_abs_l).	0.00715517997742	1
Coq.ZArith.Znumtheory.Zmult_one	40
Coq.ZArith.Znumtheory.Zdivide_bounds	40
Coq.ZArith.Znumtheory.Zmod_divide	40	1.1.2.13.4.1	synth with cache (only 1: intros a b Hb; only 1: exists (a / b); only 1: rewrite Z.mul_comm; only 1: rewrite Z.div_exact; only 1: now Z.nzsimpl; only 1: now Z.nzsimpl).	6.66365504265	3403
Coq.ZArith.Znumtheory.Zdivide_mod	40	1.16.0.3.0.3	synth with cache (only 1: intros a b; only 1: intros (c, Hc); only 1: zero_or_not b; only 1: rewrite Hc; only 1: apply Z.mod_mul; only 1: trivial).	6.96451997757	5442
Coq.ZArith.Znumtheory.Zdivide_dec	40
Coq.ZArith.Znumtheory.Z_lt_neq	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40
Coq.ZArith.Znumtheory.Zdivide_le	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	40
Coq.ZArith.Znumtheory.Zmod_div_mod	40
Coq.ZArith.Znumtheory.Zmod_divide_minus	40
Coq.ZArith.Znumtheory.Zdivide_mod_minus	40
Coq.ZArith.Znumtheory.Zis_gcd_sym	40
Coq.ZArith.Znumtheory.Zis_gcd_0	40	0.13.6.52	synth with cache (only 1: split; only 1: intuition; only 1: auto with zarith; only 1: trivial).	26.3865878582	48750
Coq.ZArith.Znumtheory.Zis_gcd_1	40	2.14.9.5.1	synth with cache (only 1: constructor; only 1: apply Z.divide_Zpos_Zneg_l; only 1: auto with zarith; only 1: now Z.nzsimpl; only 1: auto).	3.4728910923	4120
Coq.ZArith.Znumtheory.Zis_gcd_refl	40	0.6.6.1	synth with cache (only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.252544879913	239
Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.0.0.0.1.0	synth with cache (only 1: intros a b; only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.220525026321	40
Coq.ZArith.Znumtheory.Zis_gcd_opp	40	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.0592789649963	5
Coq.ZArith.Znumtheory.Zis_gcd_0_abs	40
Coq.ZArith.Znumtheory.Zis_gcd_unique	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	40
Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid_rec	40
Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	3.3.0.0	synth with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).	0.103204011917	45
Coq.ZArith.Znumtheory.Zis_gcd_bezout	40
Coq.ZArith.Znumtheory.Zis_gcd_mult	40
Coq.ZArith.Znumtheory.rel_prime_bezout	40
Coq.ZArith.Znumtheory.bezout_rel_prime	40
Coq.ZArith.Znumtheory.Gauss	40
Coq.ZArith.Znumtheory.rel_prime_mult	40
Coq.ZArith.Znumtheory.rel_prime_cross_prod	40
Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_sym	40	19.0	synth with cache (only 1: intros; only 1: now apply Zis_gcd_sym).	0.933903932571	861
Coq.ZArith.Znumtheory.rel_prime_div	40
Coq.ZArith.Znumtheory.rel_prime_1	40	0.2.5.0.0.13	synth with cache (only 1: intros a; only 1: apply Zis_gcd_sym; only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: trivial).	1.02601695061	857
Coq.ZArith.Znumtheory.not_rel_prime_0	40
Coq.ZArith.Znumtheory.rel_prime_mod	40
Coq.ZArith.Znumtheory.rel_prime_mod_rev	40
Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	40
Coq.ZArith.Znumtheory.prime_divisors	40
Coq.ZArith.Znumtheory.prime_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_le_prime	40
Coq.ZArith.Znumtheory.prime_mult	40
Coq.ZArith.Znumtheory.not_prime_0	40	11.3	synth with cache (only 1: intros (c, Hc); only 1: discriminate).	0.395925998688	306
Coq.ZArith.Znumtheory.not_prime_1	40	13	synth with cache (only 1: easy || now destruct 1).	0.580440998077	284
Coq.ZArith.Znumtheory.prime_2	40
Coq.ZArith.Znumtheory.prime_3	40
Coq.ZArith.Znumtheory.prime_ge_2	40
Coq.ZArith.Znumtheory.Z_0_1_more	40
Coq.ZArith.Znumtheory.prime_alt	40
Coq.ZArith.Znumtheory.square_not_prime	40
Coq.ZArith.Znumtheory.prime_div_prime	40
Coq.ZArith.Znumtheory.Zgcd_is_gcd	40
Coq.ZArith.Znumtheory.Zgcd_spec	40
Coq.ZArith.Znumtheory.Zdivide_Zgcd	40	0.8	synth with cache (only 1: intros a b H; only 1: apply Z.gcd_greatest).	0.0828850269318	64
Coq.ZArith.Znumtheory.Zis_gcd_gcd	40
Coq.ZArith.Znumtheory.Zgcd_div_swap0	40
Coq.ZArith.Znumtheory.Zgcd_div_swap	40
Coq.ZArith.Znumtheory.Zgcd_ass	40
Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_dec	40
Coq.ZArith.Znumtheory.prime_dec_aux	40
Coq.ZArith.Znumtheory.prime_dec	40
Coq.ZArith.Znumtheory.not_prime_divide	40
Coq.ZArith.Zdiv.Z_div_mod_POS	40
Coq.ZArith.Zdiv.Z_div_mod	40
Coq.ZArith.Zdiv.Remainder_equiv	40
Coq.ZArith.Zdiv.Z_div_mod_full	40
Coq.ZArith.Zdiv.Z_mod_remainder	40	0.0.1.0.0.0.0.1.1.0.1.0.23	synth with cache (only 1: unfold Z.div, Z.modulo; only 1: intros Hb; only 1: generalize (Z.div_eucl_eq a b Hb), (Z.mod_pos_bound a b), (Z.mod_neg_bound a b); only 1: unfold Z.modulo; only 1: destruct Z.div_eucl as (q, r); only 1: intros EQ POS NEG; only 1: red; only 1: destruct b; only 1: now destruct Hb; only 1: left; only 1: now apply POS; only 1: right; only 1: now apply NEG).	13.3949759007	4736
Coq.ZArith.Zdiv.Z_div_mod_eq	40
Coq.ZArith.Zdiv.Zmod_eq_full	40
Coq.ZArith.Zdiv.Zmod_eq	40
Coq.ZArith.Zdiv.Zdiv_eucl_exist	40
Coq.ZArith.Zdiv.Zdiv_mod_unique	40
Coq.ZArith.Zdiv.Zdiv_unique	40
Coq.ZArith.Zdiv.Zmod_unique	40
Coq.ZArith.Zdiv.Zmod_0_l	40	3	synth with cache (only 1: trivial).	0.0781970024109	13
Coq.ZArith.Zdiv.Zmod_0_r	40	0.0.2.3.0	synth with cache (only 1: intros; only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0405759811401	10
Coq.ZArith.Zdiv.Zdiv_0_l	40	5.0	synth with cache (only 1: intros; only 1: tauto).	0.0537669658661	19
Coq.ZArith.Zdiv.Zdiv_0_r	40	0.0.7.1	synth with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.65752696991	177
Coq.ZArith.Zdiv.Zmod_1_r	40	6.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: now Z.nzsimpl).	0.101758956909	19
Coq.ZArith.Zdiv.Zdiv_1_r	40	3.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: now Z.nzsimpl).	0.0891139507294	11
Coq.ZArith.Zdiv.Z_mod_same_full	40
Coq.ZArith.Zdiv.Z_mod_mult	40
Coq.ZArith.Zdiv.Z_div_pos	40
Coq.ZArith.Zdiv.Z_div_ge0	40
Coq.ZArith.Zdiv.Z_div_lt	40
Coq.ZArith.Zdiv.Z_div_ge	40
Coq.ZArith.Zdiv.Z_div_le	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).	0.031182050705	4
Coq.ZArith.Zdiv.Z_mult_div_ge	40
Coq.ZArith.Zdiv.Z_mult_div_ge_neg	40
Coq.ZArith.Zdiv.Z_div_exact_full_1	40
Coq.ZArith.Zdiv.Z_div_exact_full_2	40	0.0.2.1	synth with cache (only 1: intros; only 1: rewrite Z.div_exact; only 1: now Z.nzsimpl; only 1: now Z.nzsimpl).	0.114817142487	7
Coq.ZArith.Zdiv.Zmod_le	40
Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40
Coq.ZArith.Zdiv.Zdiv_le_compat_l	40
Coq.ZArith.Zdiv.Zdiv_sgn	40
Coq.ZArith.Zdiv.Z_mod_plus_full	40
Coq.ZArith.Zdiv.Zdiv_opp_opp	40
Coq.ZArith.Zdiv.Zmod_opp_opp	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_r	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_r	40
Coq.ZArith.Zdiv.Z_div_zero_opp_full	40
Coq.ZArith.Zdiv.Z_div_nz_opp_full	40
Coq.ZArith.Zdiv.Z_div_zero_opp_r	40
Coq.ZArith.Zdiv.Z_div_nz_opp_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_r	40
Coq.ZArith.Zdiv.Zmod_mod	40
Coq.ZArith.Zdiv.Zmult_mod	40
Coq.ZArith.Zdiv.Zplus_mod	40
Coq.ZArith.Zdiv.Zminus_mod	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_l	40	4.1.6.9.9.1	synth with cache (only 1: intros; only 1: rewrite Zplus_mod; only 1: symmetry; only 1: rewrite Zplus_mod; only 1: repeat rewrite Zmod_mod; only 1: auto with zarith).	22.8924760818	26650
Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.4.9	synth with cache (only 1: intros a b Hb; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: trivial).	0.971735954285	643
Coq.ZArith.Zdiv.Zminus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zminus_mod_idemp_r	40	0.1.1.1.0	synth with cache (only 1: intros; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: replace (a - b) with (a + -1 * b); only 1: auto with zarith; only 1: auto with zarith).	0.261851072311	53
Coq.ZArith.Zdiv.Zmult_mod_idemp_l	40	0.1.5.0.1.12.1	synth with cache (only 1: intros; only 1: rewrite Zmult_mod; only 1: repeat rewrite Zmod_mod; only 1: zero_or_not n; only 1: symmetry; only 1: apply Z.mul_mod; only 1: tauto).	5.85679984093	4359
Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.0.1	synth with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: trivial).	0.0615029335022	4
Coq.ZArith.Zdiv.EqualityModulo.eqm_refl	40	3.5	synth with cache (only 1: intro n; only 1: now Z.nzsimpl).	0.0699329376221	10
Coq.ZArith.Zdiv.EqualityModulo.eqm_sym	40	0.0	synth with cache (only 1: unfold eqm; only 1: auto).	0.0544109344482	2
Coq.ZArith.Zdiv.EqualityModulo.eqm_trans	40	10.0.1	synth with cache (only 1: intros a b; only 1: unfold eqm; only 1: Z.order).	1.98969507217	588
Coq.ZArith.Zdiv.EqualityModulo.eqm_setoid	40	1.0.1.245	synth with cache (only 1: split; only 1: firstorder; only 1: congruence; only 1: congruence).	13.8415291309	31595
Coq.ZArith.Zdiv.EqualityModulo.Zplus_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zminus_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zmult_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zopp_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zmod_eqm	40	2.5.1.0	synth with cache (only 1: repeat red; only 1: intros; only 1: repeat rewrite Zmod_mod; only 1: auto).	0.151998996735	101
Coq.ZArith.Zdiv.Zdiv_Zdiv	40
Coq.ZArith.Zdiv.Zmod_div	40
Coq.ZArith.Zdiv.Zdiv_mult_le	40
Coq.ZArith.Zdiv.Zmod_divides	40
Coq.ZArith.Zdiv.Zmod_odd	40
Coq.ZArith.Zdiv.Zmod_even	40
Coq.ZArith.Zdiv.Zodd_mod	40
Coq.ZArith.Zdiv.Zeven_mod	40	0.2.0	synth with cache (only 1: intros a; only 1: rewrite Zmod_odd, Zodd_even_bool; only 1: now destruct Z.even).	0.0942220687866	13
Coq.ZArith.Zdiv.Z_mod_same	40
Coq.ZArith.Zdiv.Z_div_same	40
Coq.ZArith.Zdiv.Z_div_plus	40
Coq.ZArith.Zdiv.Z_div_mult	40
Coq.ZArith.Zdiv.Z_mod_plus	40	2.2.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: apply Z.mod_add; only 1: now intros ->).	0.135112047195	36
Coq.ZArith.Zdiv.Z_div_exact_1	40	0.4.9.2.0	synth with cache (only 1: intros a b; only 1: intros Hb; only 1: rewrite Z.div_exact; only 1: now destruct b; only 1: now destruct b).	2.31022000313	1327
Coq.ZArith.Zdiv.Z_div_exact_2	40	3.5.10.0	synth with cache (only 1: intros; only 1: rewrite Z.div_exact; only 1: now destruct b; only 1: now destruct b).	3.77809000015	1696
Coq.ZArith.Zdiv.Z_mod_zero_opp	40	0.7.6	synth with cache (only 1: intros a b Hb; only 1: apply Z.mod_opp_l_z; only 1: now destruct b).	1.74415612221	960
Coq.ZArith.Zdiv.Zmod_POS_correct	40
Coq.ZArith.Zdiv.Zmod'_correct	40
Coq.ZArith.Zdiv.Zdiv_eucl_extended	40
Coq.ZArith.Zdiv.div_Zdiv	40
Coq.ZArith.Zdiv.mod_Zmod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_wd	40	0	synth with cache (only 1: solve_proper).	0.0946800708771	1
Coq.ZArith.Zeuclid.ZEuclid.div_wd	40	0	synth with cache (only 1: solve_proper).	0.0962150096893	1
Coq.ZArith.Zeuclid.ZEuclid.div_mod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_always_pos	40
Coq.ZArith.Zeuclid.ZEuclid.mod_bound_pos	40	0.3.0.10.1.0	synth with cache (only 1: intros Hb; only 1: unfold modulo; only 1: destruct b as [| b| b]; only 1: apply Z.mod_pos_bound; only 1: apply Z.mod_pos_bound; only 1: easy).	5.17900800705	1863
Coq.ZArith.Zabs.Zabs_ind	40	1.1.3.0.0	synth with cache (only 1: intros; only 1: Z.destruct_max n; only 1: Z.swap_greater; only 1: auto; only 1: auto).	0.0484130382538	10
Coq.ZArith.Zabs.Zabs_intro	40	6.1.11	synth with cache (only 1: intros EQ; only 1: intros; only 1: now destruct n).	1.22968196869	1297
Coq.ZArith.Zabs.Zabs_dec	40
Coq.ZArith.Zabs.Zabs_spec	40
Coq.ZArith.Zabs.Zsgn_spec	40
Coq.ZArith.Zabs.Zabs_nat_le	40
Coq.ZArith.Zabs.Zabs_nat_lt	40
Coq.ZArith.Int.MoreInt.eqb_eq	40
Coq.ZArith.Int.MoreInt.eqb_neq	40
Coq.ZArith.Int.MoreInt.ltb_lt	40
Coq.ZArith.Int.MoreInt.ltb_nlt	40
Coq.ZArith.Int.MoreInt.leb_le	40
Coq.ZArith.Int.MoreInt.leb_nle	40
Coq.ZArith.Int.MoreInt.norm_ei_correct	40
Coq.ZArith.Int.MoreInt.norm_ez_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct2	40
Coq.ZArith.Int.Z_as_Int.gt_le_dec	40
Coq.ZArith.Int.Z_as_Int.ge_lt_dec	40
Coq.ZArith.Int.Z_as_Int.i2z_eq	40	8	synth with cache (only 1: auto with relations).	0.0105109214783	9
Coq.ZArith.Int.Z_as_Int.i2z_0	40	2	synth with cache (only 1: tauto).	0.00688314437866	3
Coq.ZArith.Int.Z_as_Int.i2z_1	40	1.1	synth with cache (only 1: Z.nzsimpl; only 1: now Z.nzsimpl).	0.0485150814056	4
Coq.ZArith.Int.Z_as_Int.i2z_2	40	2	synth with cache (only 1: trivial).	0.00907397270203	3
Coq.ZArith.Int.Z_as_Int.i2z_3	40	0	synth with cache (only 1: reflexivity).	0.00858998298645	1
Coq.ZArith.Int.Z_as_Int.i2z_add	40	0.2.0.1.0.10	synth with cache (only 1: destruct n; only 1: now Z.nzsimpl; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	1.04110693932	289
Coq.ZArith.Int.Z_as_Int.i2z_opp	40	0	synth with cache (only 1: reflexivity).	0.00894284248352	1
Coq.ZArith.Int.Z_as_Int.i2z_sub	40	0	synth with cache (only 1: reflexivity).	0.00778985023499	1
Coq.ZArith.Int.Z_as_Int.i2z_mul	40	4.1	synth with cache (only 1: Z.nzsimpl; only 1: trivial).	0.0584890842438	7
Coq.ZArith.Int.Z_as_Int.i2z_max	40	0	synth with cache (only 1: reflexivity).	0.00663208961487	1
Coq.ZArith.Int.Z_as_Int.i2z_eqb	40	0	synth with cache (only 1: reflexivity).	0.00653219223022	1
Coq.ZArith.Int.Z_as_Int.i2z_leb	40	2.0	synth with cache (only 1: unfold Z.geb, Z.leb; only 1: reflexivity).	0.0101690292358	4
Coq.ZArith.Int.Z_as_Int.i2z_ltb	40	0	synth with cache (only 1: reflexivity).	0.00891399383545	1
Coq.ZArith.Zpower.Zpower_nat_0_r	40	3	synth with cache (only 1: trivial).	0.0664441585541	4
Coq.ZArith.Zpower.Zpower_nat_succ_r	40	0	synth with cache (only 1: trivial).	0.0292220115662	1
Coq.ZArith.Zpower.Zpower_nat_is_exp	40
Coq.ZArith.Zpower.Zpower_pos_nat	40
Coq.ZArith.Zpower.Zpower_nat_Z	40
Coq.ZArith.Zpower.Zpower_nat_Zpower	40	0.1.5.2.4.2.1.19	synth with cache (only 1: destruct n as [| [p| p| ]| ]; only 1: now Z.nzsimpl; only 1: now destruct 1 || intros _; only 1: apply Pos2Nat.inj_iter; only 1: intros Hn; only 1: apply Pos2Nat.inj_iter; only 1: now f_equal; only 1: now destruct 1 || intros _).	17.8383989334	5219
Coq.ZArith.Zpower.Zpower_pos_is_exp	40
Coq.ZArith.Zpower.Zpower_exp	40
Coq.ZArith.Zpower.Powers_of_2.shift_nat_equiv	40	0	synth with cache (only 1: intuition).	0.0349128246307	1
Coq.ZArith.Zpower.Powers_of_2.shift_pos_equiv	40	2.0	synth with cache (only 1: simpl in *; only 1: now f_equal).	0.0425071716309	4
Coq.ZArith.Zpower.Powers_of_2.shift_equiv	40
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_equiv	40
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_equiv	40	52	synth with cache (only 1: now apply Pos.iter_swap_gen).	2.78761816025	1506
Coq.ZArith.Zpower.Powers_of_2.two_p_equiv	40
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_S	40	2	synth with cache (only 1: now Morphisms.f_equiv).	0.0362060070038	3
Coq.ZArith.Zpower.Powers_of_2.shift_nat_plus	40
Coq.ZArith.Zpower.Powers_of_2.shift_nat_correct	40
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_correct	40
Coq.ZArith.Zpower.Powers_of_2.shift_pos_nat	40	22	synth with cache (only 1: apply Pos2Nat.inj_iter).	0.70454788208	286
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_nat	40
Coq.ZArith.Zpower.Powers_of_2.shift_pos_correct	40
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_correct	40	10	synth with cache (only 1: now apply Pos.iter_swap_gen).	0.561314105988	58
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_is_exp	40
Coq.ZArith.Zpower.Powers_of_2.two_p_is_exp	40
Coq.ZArith.Zpower.Powers_of_2.two_p_gt_ZERO	40	3.2.1.5.3.0	synth with cache (only 1: Z.swap_greater; only 1: destruct x; only 1: now Z.nzsimpl; only 1: red; only 1: easy'; only 1: easy).	9.03690600395	1737
Coq.ZArith.Zpower.Powers_of_2.two_p_S	40
Coq.ZArith.Zpower.Powers_of_2.two_p_pred	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct1	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct2	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_ok	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_shiftr	40
Coq.ZArith.Zwf.wf_proof.Zwf_well_founded	40
Coq.ZArith.Zwf.wf_proof_up.Zwf_up_well_founded	40
Coq.ZArith.auxiliary.Zne_left	40
Coq.ZArith.auxiliary.Zegal_left	40	0	synth with cache (only 1: now rewrite <- Z.sub_move_0_r).	0.12754201889	1
Coq.ZArith.auxiliary.Zle_left	40
Coq.ZArith.auxiliary.Zle_left_rev	40	0	synth with cache (only 1: apply Z.le_0_sub).	0.0182890892029	1
Coq.ZArith.auxiliary.Zlt_left_rev	40	89	synth with cache (only 1: apply Z.lt_0_sub).	5.29580307007	4711
Coq.ZArith.auxiliary.Zlt_left_lt	40	0	synth with cache (only 1: apply Z.lt_0_sub).	0.0184030532837	1
Coq.ZArith.auxiliary.Zlt_left	40
Coq.ZArith.auxiliary.Zge_left	40	10.3	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_0_sub).	0.220710992813	115
Coq.ZArith.auxiliary.Zgt_left	40	0.3.2.3.1	synth with cache (only 1: change (-1) with (- Z.succ 0); only 1: Z.swap_greater; only 1: intros; only 1: rewrite Z.add_shuffle0; only 1: now apply Z.le_0_sub, Z.le_succ_l, Z.lt_0_sub).	0.98179101944	411
Coq.ZArith.auxiliary.Zgt_left_gt	40	2.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0379512310028	4
Coq.ZArith.auxiliary.Zgt_left_rev	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0386400222778	2
Coq.ZArith.auxiliary.Zle_mult_approx	40
Coq.ZArith.auxiliary.Zmult_le_approx	40
Coq.ZArith.Zmax.Zmax_spec	40
Coq.ZArith.Zmax.Zmax_left	40	0.15	synth with cache (only 1: unfold Z.le, Z.max; only 1: now case Z.compare_spec).	0.433782815933	163
Coq.ZArith.Zmax.Zpos_max_1	40	4.3.7	synth with cache (only 1: unfold Z.max, Pos.max; only 1: simpl; only 1: apply Pos.compare_succ_l || apply Pos.compare_succ_r || now destruct p || now destruct q).	0.464923858643	159
Coq.ZArith.Zmin.Zmin_spec	40
Coq.ZArith.Zmin.Zmin_irreducible	40	31	synth with cache (only 1: Z.solve_min).	0.292154073715	483
Coq.ZArith.Zmin.Zmin_le_prime_inf	40
Coq.ZArith.Zmin.Zpos_min_1	40	4.3.0	synth with cache (only 1: unfold Z.min, Pos.min; only 1: simpl; only 1: apply Pos.compare_succ_l || apply Pos.compare_succ_r || now destruct p || now destruct q).	0.0231380462646	10
Coq.ZArith.Zgcd_alt.Zgcdn_pos	40
Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	40
Coq.ZArith.Zgcd_alt.fibonacci_pos	40
Coq.ZArith.Zgcd_alt.fibonacci_incr	40	8.11	synth with cache (only 1: fix le_div2 1; only 1: now auto).	1.35050582886	1377
Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	40
Coq.ZArith.Zgcd_alt.Zgcdn_opp	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	40
Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	40
Coq.ZArith.Zorder.Ztrichotomy_inf	40
Coq.ZArith.Zorder.Ztrichotomy	40	0.0.0.0.1.3	synth with cache (only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.121676921844	21
Coq.ZArith.Zorder.dec_Zne	40
Coq.ZArith.Zorder.dec_Zgt	40
Coq.ZArith.Zorder.dec_Zge	40
Coq.ZArith.Zorder.not_Zeq	40
Coq.ZArith.Zorder.Zle_not_lt	40	0	synth with cache (only 1: Z.order).	0.0218420028687	1
Coq.ZArith.Zorder.Zlt_not_le	40	0	synth with cache (only 1: Z.order).	0.0211479663849	1
Coq.ZArith.Zorder.Zle_not_gt	40	5.0	synth with cache (only 1: intro H; only 1: auto).	0.027535200119	14
Coq.ZArith.Zorder.Zgt_not_le	40	0.1	synth with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0338830947876	3
Coq.ZArith.Zorder.Znot_ge_lt	40	0.0.0.0.0	synth with cache (only 1: destruct (Z.le_decidable m n); only 1: Z.swap_greater; only 1: Z.order; only 1: Z.swap_greater; only 1: Z.order).	0.0610129833221	5
Coq.ZArith.Zorder.Znot_lt_ge	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0348069667816	2
Coq.ZArith.Zorder.Znot_gt_le	40	0	synth with cache (only 1: trivial).	0.0149431228638	1
Coq.ZArith.Zorder.Znot_le_gt	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).	0.0351779460907	2
Coq.ZArith.Zorder.not_Zne	40	14.1.0.4	synth with cache (only 1: destruct (Z.eq_decidable n m); only 1: subst; only 1: auto; only 1: now Morphisms.f_equiv).	5.0414018631	2860
Coq.ZArith.Zorder.Zgt_asym	40	2.3.0.1	synth with cache (only 1: Z.swap_greater; only 1: intro H; only 1: intro H1; only 1: Z.order).	0.0523750782013	10
Coq.ZArith.Zorder.Zgt_irrefl	40	2.0.1	synth with cache (only 1: Z.swap_greater; only 1: intro H; only 1: Z.order).	0.0287530422211	6
Coq.ZArith.Zorder.Zle_lt_or_eq	40
Coq.ZArith.Zorder.Zgt_trans	40	4.0	synth with cache (only 1: Z.swap_greater; only 1: now transitivity m).	0.0505640506744	6
Coq.ZArith.Zorder.Zle_gt_trans	40	7.0	synth with cache (only 1: Z.swap_greater; only 1: Z.Private_Tac.order || (right; Z.Private_Tac.order) || (left; Z.Private_Tac.order)).	0.0735528469086	18
Coq.ZArith.Zorder.Zgt_le_trans	40	3.0	synth with cache (only 1: Z.swap_greater; only 1: Z.Private_Tac.order).	0.0412299633026	5
Coq.ZArith.Zorder.Zge_trans	40	8.4	synth with cache (only 1: Z.swap_greater; only 1: Z.Private_Tac.order).	1.42836213112	559
Coq.ZArith.Zorder.Zsucc_le_compat	40
Coq.ZArith.Zorder.Zsucc_lt_compat	40
Coq.ZArith.Zorder.Zsucc_gt_compat	40	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0809338092804	24
Coq.ZArith.Zorder.Zsucc_gt_reg	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0366811752319	2
Coq.ZArith.Zorder.Zsucc_le_reg	40	1	synth with cache (only 1: apply Z.succ_le_mono).	0.026547908783	2
Coq.ZArith.Zorder.Zsucc_lt_reg	40	0	synth with cache (only 1: apply Z.succ_lt_mono).	0.0168559551239	1
Coq.ZArith.Zorder.Zgt_succ	40	2.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_diag_r).	0.0298020839691	11
Coq.ZArith.Zorder.Znot_le_succ	40
Coq.ZArith.Zorder.Zgt_le_succ	40
Coq.ZArith.Zorder.Zle_gt_succ	40
Coq.ZArith.Zorder.Zle_lt_succ	40	1	synth with cache (only 1: apply Z.lt_succ_r).	0.0155839920044	2
Coq.ZArith.Zorder.Zlt_le_succ	40	1	synth with cache (only 1: apply Z.le_succ_l).	0.0194489955902	2
Coq.ZArith.Zorder.Zgt_succ_le	40	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	0.0285739898682	3
Coq.ZArith.Zorder.Zlt_succ_le	40	1	synth with cache (only 1: apply Z.lt_succ_r).	0.0161261558533	2
Coq.ZArith.Zorder.Zle_succ_gt	40	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.0314750671387	3
Coq.ZArith.Zorder.Zle_succ_le	40
Coq.ZArith.Zorder.Zgt_succ_pred	40
Coq.ZArith.Zorder.Zlt_succ_pred	40	0	synth with cache (only 1: apply Z.lt_succ_lt_pred).	0.0182609558105	1
Coq.ZArith.Zorder.Zlt_0_le_0_pred	40
Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.0680890083313	4
Coq.ZArith.Zorder.Zle_neg_pos	40	2	synth with cache (only 1: easy || now destruct Hm).	0.0581319332123	3
Coq.ZArith.Zorder.Zgt_pos_0	40	0	synth with cache (only 1: easy).	0.0149149894714	1
Coq.ZArith.Zorder.Zle_0_pos	40	2	synth with cache (only 1: easy || now destruct Hm).	0.0234899520874	3
Coq.ZArith.Zorder.Zlt_neg_0	40	1	synth with cache (only 1: easy).	0.0162069797516	2
Coq.ZArith.Zorder.Zle_0_nat	40	0.0.29.35	synth with cache (only 1: intros m Hm; only 1: destruct m; only 1: now subst; only 1: discriminate).	2.88074922562	4328
Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40	6.25.16.3.0	synth with cache (only 1: Z.swap_greater; only 1: intuition; only 1: apply Z.lt_eq_cases; only 1: apply Z.lt_succ_r; only 1: Z.order).	29.8650109768	29384
Coq.ZArith.Zorder.Zplus_gt_compat_l	40
Coq.ZArith.Zorder.Zplus_gt_compat_r	40
Coq.ZArith.Zorder.Zplus_le_compat_l	40
Coq.ZArith.Zorder.Zplus_le_compat_r	40
Coq.ZArith.Zorder.Zplus_lt_compat_l	40	1	synth with cache (only 1: apply Z.add_lt_mono_l).	0.0428099632263	2
Coq.ZArith.Zorder.Zplus_lt_compat_r	40	6	synth with cache (only 1: apply Z.add_lt_mono_r).	0.757385969162	30
Coq.ZArith.Zorder.Zplus_le_reg_l	40	9	synth with cache (only 1: apply Z.add_le_mono_l).	0.520534992218	28
Coq.ZArith.Zorder.Zplus_le_reg_r	40	6	synth with cache (only 1: apply Z.add_le_mono_r).	0.525275945663	25
Coq.ZArith.Zorder.Zplus_lt_reg_l	40	1	synth with cache (only 1: apply Z.add_lt_mono_l).	0.0438320636749	2
Coq.ZArith.Zorder.Zplus_lt_reg_r	40	6	synth with cache (only 1: apply Z.add_lt_mono_r).	0.751809835434	30
Coq.ZArith.Zorder.Zplus_gt_reg_l	40	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	0.06085896492	3
Coq.ZArith.Zorder.Zplus_gt_reg_r	40	6.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	0.645050048828	26
Coq.ZArith.Zorder.Zmult_le_compat_r	40
Coq.ZArith.Zorder.Zmult_le_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_r	40
Coq.ZArith.Zorder.Zmult_gt_compat_r	40	10.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.858996152878	114
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40
Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40
Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	2	synth with cache (only 1: apply Z.mul_le_mono_pos_r).	0.13118314743	3
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_l	40	2	synth with cache (only 1: apply Z.mul_lt_mono_pos_l).	0.0768799781799	11
Coq.ZArith.Zorder.Zmult_gt_compat_l	40	2.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.105407953262	11
Coq.ZArith.Zorder.Zmult_ge_compat_r	40	11.2.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_r).	2.01535487175	1092
Coq.ZArith.Zorder.Zmult_ge_compat_l	40	8.2.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_l).	0.739583969116	261
Coq.ZArith.Zorder.Zmult_ge_compat	40
Coq.ZArith.Zorder.Zmult_le_compat	40	3.1	synth with cache (only 1: intros; only 1: now apply Z.mul_le_mono_nonneg).	0.0965528488159	11
Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	2.0.2	synth with cache (only 1: rewrite 2!(Z.mul_comm _ p); only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.408014059067	49
Coq.ZArith.Zorder.Zmult_lt_reg_r	40	11	synth with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.322057008743	60
Coq.ZArith.Zorder.Zmult_le_reg_r	40	2.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0350730419159	4
Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	2	synth with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0225458145142	3
Coq.ZArith.Zorder.Zmult_ge_reg_r	40	2.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0518748760223	4
Coq.ZArith.Zorder.Zmult_gt_reg_r	40	11.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	1.62778615952	223
Coq.ZArith.Zorder.Zmult_lt_compat	40
Coq.ZArith.Zorder.Zmult_lt_compat2	40
Coq.ZArith.Zorder.Zmult_gt_0_compat	40	2.4.15.0	synth with cache (only 1: Z.swap_greater; only 1: revert n m; only 1: intros a b Ha Hb; only 1: Z.order_pos).	6.65631699562	1930
Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40	15.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.366765022278	192
Coq.ZArith.Zorder.Zmult_le_0_reg_r	40
Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40
Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	32.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	4.66476893425	2240
Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40
Coq.ZArith.Zorder.Zlt_square_simpl	40
Coq.ZArith.Zorder.Zgt_square_simpl	40	9.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).	0.392503023148	56
Coq.ZArith.Zorder.Zeq_plus_swap	40
Coq.ZArith.Zorder.Zlt_0_minus_lt	40
Coq.ZArith.Zorder.Zle_0_minus_le	40
Coq.ZArith.Zorder.Zle_minus_le_0	40	0	synth with cache (only 1: apply Z.le_0_sub).	0.0165159702301	1
Coq.ZArith.Zbool.Zle_cases	40
Coq.ZArith.Zbool.Zlt_cases	40
Coq.ZArith.Zbool.Zge_cases	40
Coq.ZArith.Zbool.Zgt_cases	40
Coq.ZArith.Zbool.Zle_bool_imp_le	40	0.0.0.3.0	synth with cache (only 1: unfold Z.leb, Z.le; only 1: destruct (n ?= m); only 1: easy'; only 1: easy'; only 1: easy').	0.0654590129852	8
Coq.ZArith.Zbool.Zle_imp_le_bool	40	0.0.0.3.0	synth with cache (only 1: unfold Z.leb, Z.le; only 1: destruct (n ?= m); only 1: easy'; only 1: easy'; only 1: easy').	0.0386559963226	8
Coq.ZArith.Zbool.Zle_bool_antisym	40
Coq.ZArith.Zbool.Zle_bool_trans	40	9.3	synth with cache (only 1: rewrite !Z.leb_le; only 1: Z.Private_Tac.order).	0.521466970444	275
Coq.ZArith.Zbool.Zle_bool_total	40
Coq.ZArith.Zbool.Zle_bool_plus_mono	40
Coq.ZArith.Zbool.Zone_pos	40	5	synth with cache (only 1: trivial).	0.0167200565338	6
Coq.ZArith.Zbool.Zone_min_pos	40	1.0.2.3.13.1.7.10.3	synth with cache (only 1: intros H; only 1: destruct n; only 1: now try Z.order'; only 1: apply Z.leb_gt in H; only 1: destruct p; only 1: easy; only 1: reflexivity; only 1: reflexivity; only 1: now destruct Hn || easy).	33.9170651436	44756
Coq.ZArith.Zbool.Zle_is_le_bool	40	0.0.0.2.0	synth with cache (only 1: unfold Z.leb, Z.le; only 1: destruct (n ?= m); only 1: easy'; only 1: easy'; only 1: easy').	0.0678858757019	7
Coq.ZArith.Zbool.Zge_is_le_bool	40	0.0.0.4.0.0	synth with cache (only 1: case Z.leb_spec; only 1: now Z.swap_greater; only 1: destruct n; only 1: now destruct Hn || easy; only 1: now destruct Hn || easy; only 1: now split).	0.10169005394	14
Coq.ZArith.Zbool.Zlt_is_lt_bool	40	0.0.0.3.0	synth with cache (only 1: unfold Z.ltb, Z.lt; only 1: destruct (n ?= m); only 1: easy'; only 1: easy'; only 1: easy').	0.0559370517731	8
Coq.ZArith.Zbool.Zgt_is_gt_bool	40	1.0.0.0.6.0.0.0.3.7	synth with cache (only 1: revert m; only 1: split; only 1: rewrite Z.gtb_ltb; only 1: case Z.ltb_spec; only 1: now Z.swap_greater; only 1: now try Z.order'; only 1: rewrite Z.gtb_ltb; only 1: case Z.ltb_spec; only 1: now Z.swap_greater; only 1: discriminate).	10.2297849655	7821
Coq.ZArith.Zbool.Zlt_is_le_bool	40
Coq.ZArith.Zbool.Zgt_is_le_bool	40	2.4.2.4.7.0	synth with cache (only 1: rewrite Z.leb_le; only 1: split; only 1: Z.swap_greater; only 1: apply Z.lt_le_pred; only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	36.1251060963	22381
Coq.ZArith.Zbool.Zeq_is_eq_bool	40
Coq.ZArith.Zbool.Zeq_bool_eq	40	1.0.0.0.0.0	synth with cache (only 1: unfold Zeq_bool; only 1: rewrite <- Z.compare_eq_iff; only 1: destruct Z.compare; only 1: easy'; only 1: easy'; only 1: easy').	0.0537528991699	7
Coq.ZArith.Zbool.Zeq_bool_neq	40	1.0.0.0.0.0.21	synth with cache (only 1: red; only 1: unfold Zeq_bool; only 1: rewrite <- Z.compare_eq_iff; only 1: destruct Z.compare; only 1: easy'; only 1: easy'; only 1: easy').	0.793372154236	1038
Coq.ZArith.Zbool.Zeq_bool_if	40
Coq.ZArith.ZArith_dec.Dcompare_inf	40	5.2.1.2.1.0.1.1.3	synth with cache (only 1: destruct r; only 1: left; only 1: left; only 1: now subst; only 1: left; only 1: right; only 1: now subst; only 1: right; only 1: trivial).	4.54252386093	4320
Coq.ZArith.ZArith_dec.Zcompare_rect	40
Coq.ZArith.ZArith_dec.Zcompare_rec	40	2.2.2.0	synth with cache (only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	1.04615211487	271
Coq.ZArith.ZArith_dec.decidability.Z_lt_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_le_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_gt_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_ge_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_lt_ge_dec	40	0.0.0.0.1.1	synth with cache (only 1: unfold Z.lt; only 1: unfold Z.ge; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	0.182955026627	44
Coq.ZArith.ZArith_dec.decidability.Z_lt_le_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_le_gt_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_gt_le_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_ge_lt_dec	40	0.0.0.0.3.3	synth with cache (only 1: unfold Z.lt; only 1: unfold Z.ge; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	0.381619930267	174
Coq.ZArith.ZArith_dec.decidability.Z_le_lt_eq_dec	40	3.0.7.4.2.1	synth with cache (only 1: elim Z_lt_ge_dec; only 1: now left; only 1: intro; only 1: Z.swap_greater; only 1: right; only 1: Z.order).	21.5488340855	14495
Coq.ZArith.ZArith_dec.Zlt_cotrans	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	40
Coq.ZArith.ZArith_dec.not_Zeq_inf	40
Coq.ZArith.ZArith_dec.Z_dec	40
Coq.ZArith.ZArith_dec.Z_dec'	40
Coq.ZArith.ZArith_dec.Z_zerop	40	0.0.0.3	synth with cache (only 1: intros; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.0353050231934	7
Coq.ZArith.Zpow_alt.Piter_mul_acc	40
Coq.ZArith.Zpow_alt.Piter_op_square	40
Coq.ZArith.Zpow_alt.Zpower_equiv	40
Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	7	synth with cache (only 1: reflexivity).	0.00838398933411	8
Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40
Coq.Program.Wf.Well_founded.Fix_F_eq	40	0.4	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).	0.0198330879211	14
Coq.Program.Wf.Well_founded.Fix_F_inv	40	0.11.7.4.1	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: intros; only 1: rewrite <- Wf.Fix_F_eq; only 1: rewrite <- Wf.Fix_F_eq; only 1: auto).	3.71551918983	5425
Coq.Program.Wf.Well_founded.Fix_eq	40
Coq.Program.Wf.Well_founded.fix_sub_eq	40	0.0.0.0.0.0	synth with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.022166967392	6
Coq.Program.Wf.Measure_well_founded.measure_wf	40
Coq.Program.Wf.Fix_rects.F_unfold	40	0.1	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).	0.0149738788605	3
Coq.Program.Wf.Fix_rects.Fix_F_sub_rect	40	0.9.7.1	synth with cache (only 1: intros; only 1: induction (Rwf x); only 1: rewrite <- Fix_F_eq; only 1: auto).	0.330697059631	574
Coq.Program.Wf.Fix_rects.eq_Fix_F_sub	40	0.13	synth with cache (only 1: apply Fix_F_inv; only 1: auto).	0.52822303772	402
Coq.Program.Wf.Fix_rects.Fix_sub_rect	40
Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	40
Coq.Program.Subset.subset_eq	40
Coq.Program.Subset.match_eq_rewrite	40	0.1.3.15.52	synth with cache (only 1: intros A B H; only 1: intro; only 1: intros [x y]; only 1: subst; only 1: reflexivity).	6.64955306053	41962
Coq.Program.Equality.JMeq_eq_refl	40	3	synth with cache (only 1: apply UIP).	0.00644207000732	4
Coq.Program.Equality.UIP_refl_refl	40	6	synth with cache (only 1: apply UIP).	0.0104641914368	13
Coq.Program.Equality.inj_pairT2_refl	40	31	synth with cache (only 1: apply UIP_refl).	0.273414134979	828
Coq.Program.Equality.solution_left	40	2.1.34	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.193619966507	931
Coq.Program.Equality.solution_right	40	3.0.0	synth with cache (only 1: intros; only 1: subst; only 1: trivial).	0.00936102867126	6
Coq.Program.Equality.deletion	40	2.2.1	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.010321855545	8
Coq.Program.Equality.simplification_heq	40	1.6.24.9	synth with cache (only 1: intros h1 h2; only 1: subst; only 1: apply h1; only 1: trivial).	0.471386909485	2036
Coq.Program.Equality.simplification_existT2	40	0.0.37.7.23	synth with cache (only 1: intro H; only 1: intros; only 1: apply H; only 1: apply eq_dep_eq; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	2.86474013329	14224
Coq.Program.Equality.simplification_existT1	40	0.4.6.8.13.51	synth with cache (only 1: intro eq_dep_eq; only 1: intros; only 1: apply eq_dep_eq; only 1: dependent rewrite H; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT; only 1: assumption).	7.40168786049	39697
Coq.Program.Equality.simplification_K	40	15.5.4	synth with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: assumption).	0.465158939362	1141
Coq.Program.Combinators.compose_id_left	40	1.2	synth with cache (only 1: intro H; only 1: reflexivity).	0.00676798820496	5
Coq.Program.Combinators.compose_id_right	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.00627493858337	2
Coq.Program.Combinators.compose_assoc	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.00670504570007	2
Coq.Program.Combinators.flip_flip	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0061628818512	2
Coq.Program.Combinators.prod_uncurry_curry	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.00785708427429	2
Coq.Program.Combinators.prod_curry_uncurry	40	1.30.0.11.0.9.5.33.26	synth with cache (only 1: intro H; only 1: intro x; only 1: intro z; only 1: apply functional_extensionality_dep_good; only 1: intros; only 1: apply functional_extensionality_dep_good; only 1: intros; only 1: repeat match goal with | p:(_ * _)%type |- _ => destruct p | b:bool |- _ => destruct b end; only 1: reflexivity).	21.8187611103	192342
Coq.Sorting.PermutEq.Perm.multiplicity_In	40
Coq.Sorting.PermutEq.Perm.multiplicity_In_O	40
Coq.Sorting.PermutEq.Perm.multiplicity_In_S	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: eapply In_InA, multiplicity_InA in H; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances).	0.0459699630737	5
Coq.Sorting.PermutEq.Perm.multiplicity_NoDup	40
Coq.Sorting.PermutEq.Perm.NoDup_permut	40
Coq.Sorting.PermutEq.Perm.permut_In_In	40
Coq.Sorting.PermutEq.Perm.permut_cons_In	40
Coq.Sorting.PermutEq.Perm.permut_nil	40
Coq.Sorting.PermutEq.Perm.permutation_Permutation	40
Coq.Sorting.PermutEq.Perm.permut_length_1	40
Coq.Sorting.PermutEq.Perm.permut_length_2	40
Coq.Sorting.PermutEq.Perm.permut_length	40
Coq.Sorting.PermutEq.Perm.permutation_map	40
Coq.Sorting.Mergesort.Sort.Sorted_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	40	1.1.1.3.0.3.17.0	synth with cache (only 1: induction stack as [| [| ]]; only 1: constructor; only 1: intros; only 1: destruct H; only 1: apply Sorted_merge; only 1: auto; only 1: auto; only 1: auto).	4.53393793106	7289
Coq.Sorting.Mergesort.Sort.Permuted_merge_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_sort	40
Coq.Sorting.Mergesort.Sort.LocallySorted_sort	40
Coq.Sorting.Mergesort.Sort.Permuted_sort	40
Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40
Coq.Sorting.Mergesort.NatOrder.leb_total	40	1.4.22.8.24.0	synth with cache (only 1: intro n; only 1: PeanoNat.Nat.cases ltac:(n); only 1: now left; only 1: fix le_div2 1; only 1: intros n m; only 1: auto).	39.2739319801	60489
Coq.Sorting.Permutation.Permutation.Permutation_nil	40
Coq.Sorting.Permutation.Permutation.Permutation_nil_cons	40
Coq.Sorting.Permutation.Permutation.Permutation_refl	40	1.5.2	synth with cache (only 1: induction l as [| x l]; only 1: discriminate || auto; only 1: discriminate || auto).	0.0287082195282	29
Coq.Sorting.Permutation.Permutation.Permutation_sym	40
Coq.Sorting.Permutation.Permutation.Permutation_trans	40	1.0	synth with cache (only 1: intros l l' Hperm; only 1: apply perm_trans with (l' := l')).	0.0124990940094	3
Coq.Sorting.Permutation.Permutation_cons	40	0.8.1	synth with cache (only 1: reduce; only 1: subst; only 1: auto).	0.228682041168	50
Coq.Sorting.Permutation.Permutation_properties.Permutation_in	40	0.0.0.0.0.0.8.1	synth with cache (only 1: intros l HF; only 1: induction 1; only 1: tauto; only 1: simpl in *; only 1: tauto; only 1: simpl; only 1: tauto; only 1: intuition).	2.58165407181	1446
Coq.Sorting.Permutation.Permutation_properties.Permutation_in'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_tail	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_head	40	0.0.0.0.1.7	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: auto).	3.6035528183	481
Coq.Sorting.Permutation.Permutation_properties.Permutation_app	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_add_inside	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_append	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_comm	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_Add	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_middle	40	4.2	synth with cache (only 1: intro l'; only 1: auto).	0.014151096344	8
Coq.Sorting.Permutation.Permutation_properties.Permutation_rev	40	2.1.5.2.7	synth with cache (only 1: induction l; only 1: constructor; only 1: simpl; only 1: rewrite <- IHl; only 1: auto).	5.51607108116	959
Coq.Sorting.Permutation.Permutation_properties.Permutation_rev'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length'	40	0.0.0.0.0.0.5.13	synth with cache (only 1: intros R L n; only 1: induction n; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto with arith; only 1: now transitivity (length l')).	1.26583194733	1614
Coq.Sorting.Permutation.Permutation_properties.Permutation_ind_bis	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_nil_app_cons	40	1.2.5.4.1.0.0.0.0.8.0	synth with cache (only 1: induction l; only 1: simpl; only 1: intros l x HF; only 1: apply Permutation_nil in HF; only 1: discriminate; only 1: intros; only 1: repeat rewrite <- app_comm_cons; only 1: rewrite app_comm_cons, Permutation_cons_append; only 1: rewrite <- app_assoc; only 1: simpl; only 1: auto).	15.1367928982	11346
Coq.Sorting.Permutation.Permutation_properties.Permutation_Add_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app_inv	40	0.2.0.4.3	synth with cache (only 1: intros; only 1: eapply Permutation_Add_inv; only 1: eauto using Add_app; only 1: eauto using Add_head; only 1: eauto using Add_app).	8.92187809944	106
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_l	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_r	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2	40
Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation	40
Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation_bis	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup'	40
Coq.Sorting.Permutation.Permutation_map.Permutation_map	40
Coq.Sorting.Permutation.Permutation_map.Permutation_map'	40	0.0.0.0.0.0.0.0.15	synth with cache (only 1: intros Su; only 1: induction 1; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: eauto).	15.9931278229	374
Coq.Sorting.Permutation.nat_bijection_Permutation	40
Coq.Sorting.Permutation.Permutation_alt.adapt_injective	40
Coq.Sorting.Permutation.Permutation_alt.adapt_ok	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error_bis	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth	40
Coq.Sorting.PermutSetoid.Permut.list_contents_app	40
Coq.Sorting.PermutSetoid.Permut.permut_refl	40	22.2	synth with cache (only 1: intros; only 1: split).	1.49599790573	1535
Coq.Sorting.PermutSetoid.Permut.permut_sym	40	1.0	synth with cache (only 1: unfold permutation; only 1: auto with datatypes).	0.0218942165375	3
Coq.Sorting.PermutSetoid.Permut.permut_trans	40
Coq.Sorting.PermutSetoid.Permut.permut_cons_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_cons	40	0.0.0	synth with cache (only 1: unfold permutation; only 1: simpl; only 1: auto with datatypes).	0.0277030467987	3
Coq.Sorting.PermutSetoid.Permut.permut_app	40
Coq.Sorting.PermutSetoid.Permut.permut_add_inside_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_add_inside	40
Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside	40
Coq.Sorting.PermutSetoid.Permut.permut_middle	40
Coq.Sorting.PermutSetoid.Permut.permut_sym_app	40	2.0.4.0.1	synth with cache (only 1: unfold permutation, meq in *; only 1: intros; only 1: repeat rewrite list_contents_app in *; only 1: simpl in *; only 1: auto with arith).	0.945437908173	130
Coq.Sorting.PermutSetoid.Permut.permut_rev	40
Coq.Sorting.PermutSetoid.Permut.permut_conv_inv	40
Coq.Sorting.PermutSetoid.Permut.permut_app_inv1	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_then	40
Coq.Sorting.PermutSetoid.Permut.permut_app_inv2	40	0.1.0.0.0.0.1.0.0.1	synth with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: intros; only 1: apply plus_reg_l with (multiplicity (list_contents l) a); only 1: trivial).	3.42571878433	803
Coq.Sorting.PermutSetoid.Permut.permut_remove_hd_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_remove_hd	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_else	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_refl	40	5.0.2.1.0.2	synth with cache (only 1: intros H a; only 1: intros; only 1: destruct eqA_dec as [_| NEQ]; only 1: auto; only 1: contradict NEQ; only 1: reflexivity).	0.911253929138	668
Coq.Sorting.PermutSetoid.Permut.if_eqA	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_l	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_r	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_eqA	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_O	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_S	40	0.0.0.0.0	synth with cache (only 1: intros l a; only 1: rewrite multiplicity_InA; only 1: destruct (multiplicity (list_contents l) a); only 1: auto with *; only 1: auto with arith).	0.064169883728	5
Coq.Sorting.PermutSetoid.Permut.multiplicity_NoDupA	40
Coq.Sorting.PermutSetoid.Permut.permut_InA_InA	40
Coq.Sorting.PermutSetoid.Permut.permut_cons_InA	40	1.1.0.2.0.0.0.5.4	synth with cache (only 1: unfold permutation, meq; only 1: intros a'; only 1: intros l a; only 1: simpl; only 1: intros; only 1: rewrite multiplicity_InA; only 1: specialize (H a); only 1: rewrite if_eqA_refl in H; only 1: omega).	14.3595221043	7805
Coq.Sorting.PermutSetoid.Permut.permut_nil	40
Coq.Sorting.PermutSetoid.Permut.permut_length_1	40
Coq.Sorting.PermutSetoid.Permut.permut_length_2	40
Coq.Sorting.PermutSetoid.Permut.permut_length	40
Coq.Sorting.PermutSetoid.Permut.NoDupA_equivlistA_permut	40
Coq.Sorting.PermutSetoid.Permut_map.permut_map	40
Coq.Sorting.PermutSetoid.Permut_permut.Permutation_impl_permutation	40
Coq.Sorting.PermutSetoid.Permut_permut.permut_eqA	40	1.1.1.3.0.0	synth with cache (only 1: induction 1; only 1: apply permut_refl; only 1: apply permut_cons_eq; only 1: trivial; only 1: trivial; only 1: trivial).	0.494883060455	137
Coq.Sorting.PermutSetoid.Permut_permut.permutation_Permutation	40
Coq.Sorting.Sorted.defs.HdRel_inv	40	3.7.0	synth with cache (only 1: intros; only 1: inversion_clear H; only 1: auto).	0.268536090851	97
Coq.Sorting.Sorted.defs.Sorted_inv	40	0.0	synth with cache (only 1: inversion 1; only 1: auto).	0.0345270633698	2
Coq.Sorting.Sorted.defs.Sorted_rect	40
Coq.Sorting.Sorted.defs.Sorted_LocallySorted_iff	40
Coq.Sorting.Sorted.defs.StronglySorted_inv	40
Coq.Sorting.Sorted.defs.StronglySorted_rect	40
Coq.Sorting.Sorted.defs.StronglySorted_rec	40	0.0.0	synth with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).	0.0283808708191	3
Coq.Sorting.Sorted.defs.StronglySorted_Sorted	40
Coq.Sorting.Sorted.defs.Sorted_extends	40
Coq.Sorting.Sorted.defs.Sorted_StronglySorted	40
Coq.Sorting.Heap.defs.leA_Tree_Leaf	40	7.11.5	synth with cache (only 1: intro l; only 1: simpl in *; only 1: trivial).	0.444966077805	620
Coq.Sorting.Heap.defs.leA_Tree_Node	40	0.0	synth with cache (only 1: simpl; only 1: auto with datatypes).	0.0244529247284	2
Coq.Sorting.Heap.defs.invert_heap	40	1.8.9.3	synth with cache (only 1: intro l; only 1: intros; only 1: inversion H; only 1: auto with datatypes).	0.782619953156	693
Coq.Sorting.Heap.defs.is_heap_rect	40
Coq.Sorting.Heap.defs.is_heap_rec	40
Coq.Sorting.Heap.defs.low_trans	40
Coq.Sorting.Heap.defs.Equivalence_instance_0	40
Coq.Sorting.Heap.defs.Proper_instance_0	40	1.0.6.1.1.0.0	synth with cache (only 1: red; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: simpl in *; only 1: auto).	0.626914978027	362
Coq.Sorting.Heap.defs.merge	40
Coq.Sorting.Heap.defs.insert	40	1.24	synth with cache (only 1: fix merge 1; only 1: auto with datatypes).	6.14979600906	6029
Coq.Sorting.Heap.defs.list_to_heap	40	2.4	synth with cache (only 1: fix merge0 1; only 1: auto with datatypes).	0.0320010185242	14
Coq.Sorting.Heap.defs.heap_to_list	40	1.31	synth with cache (only 1: fix merge0 1; only 1: auto with datatypes).	2.03224301338	3033
Coq.Sorting.Heap.defs.treesort	40	3.5	synth with cache (only 1: fix merge0 1; only 1: auto with datatypes).	0.0337688922882	15
Coq.Init.Wf.Well_founded.Acc_inv	40	3.2.14.30	synth with cache (only 1: intro; only 1: intro; only 1: destruct H; only 1: trivial).	15.3831179142	2926
Coq.Init.Wf.Well_founded.well_founded_induction_type	40
Coq.Init.Wf.Well_founded.well_founded_induction	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.010360956192	4
Coq.Init.Wf.Well_founded.well_founded_ind	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0121238231659	4
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	40	0.113	synth with cache (only 1: intros f [x]; only 1: auto).	5.88193702698	59757
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	40
Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	40
Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	40
Coq.Init.Tactics.decide_left	40	0.1.0.3.13.7.4.1	synth with cache (only 1: unfold not; only 1: intro A; only 1: intro H1; only 1: elim H1; only 1: auto; only 1: intro H; only 1: intro z; only 1: destruct (H z)).	5.2188911438	28031
Coq.Init.Tactics.decide_right	40	1.0.1.0	synth with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	0.0111939907074	6
Coq.Init.Peano.pred_Sn	40	2	synth with cache (only 1: trivial).	0.00829291343689	3
Coq.Init.Peano.not_eq_S	40	8.3	synth with cache (only 1: intro H; only 1: auto).	0.0361800193787	82
Coq.Init.Peano.O_S	40	8	synth with cache (only 1: discriminate).	0.0154228210449	28
Coq.Init.Peano.n_Sn	40
Coq.Init.Peano.plus_n_O	40	0.4.1.1	synth with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	0.016587972641	15
Coq.Init.Peano.plus_O_n	40	0.0.1.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.011440038681	6
Coq.Init.Peano.plus_n_Sm	40	0.1.0.2	synth with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	0.0147860050201	7
Coq.Init.Peano.plus_Sn_m	40	0.0.1.0.0.0.0	synth with cache (only 1: intros n m; only 1: simpl; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0146219730377	8
Coq.Init.Peano.mult_n_O	40	0.1.3	synth with cache (only 1: induction n; only 1: auto; only 1: auto).	0.00941395759583	7
Coq.Init.Peano.mult_n_Sm	40
Coq.Init.Peano.le_pred	40
Coq.Init.Peano.le_S_n	40
Coq.Init.Peano.le_0_n	40	2.0.4	synth with cache (only 1: induction n; only 1: auto; only 1: auto).	0.0103158950806	9
Coq.Init.Peano.le_n_S	40	3.0.6	synth with cache (only 1: induction 1; only 1: constructor; only 1: auto).	0.130218982697	266
Coq.Init.Peano.nat_case	40	1.7.1	synth with cache (only 1: induction n; only 1: auto; only 1: auto).	0.0489921569824	94
Coq.Init.Peano.nat_double_ind	40	0.0.13.2.0	synth with cache (only 1: induction n; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).	0.337285995483	882
Coq.Init.Peano.max_l	40
Coq.Init.Peano.max_r	40	0.1.2.0.6.0.0.0.1.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	20.4884870052	31327
Coq.Init.Peano.min_l	40	0.1.3.2.2.3.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: trivial; only 1: destruct m; only 1: inversion 1; only 1: intros; only 1: simpl; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	6.90600013733	11192
Coq.Init.Peano.min_r	40	0.1.2.0.0.0.0.1.1.1.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: simpl; only 1: inversion 1; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	5.8021299839	7478
Coq.Init.Peano.nat_rect_succ_r	40	1.0.3.1.13	synth with cache (only 1: induction n as [| p H]; only 1: reflexivity; only 1: simpl; only 1: destruct H; only 1: auto).	0.283684015274	581
Coq.Init.Peano.nat_rect_plus	40	0.1.4.2.1.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: rewrite <- ?IHn; only 1: trivial).	1.37214517593	1363
Coq.Init.Byte.of_bits_to_bits	40
Coq.Init.Byte.to_bits_of_bits	40
Coq.Init.Datatypes.andb_prop	40
Coq.Init.Datatypes.andb_true_intro	40	1.1.3.29.82	synth with cache (only 1: intro H; only 1: destruct 1; only 1: destruct H; only 1: assumption; only 1: assumption).	22.4114189148	271935
Coq.Init.Datatypes.eq_true_ind_r	40	6.61.19	synth with cache (only 1: intros A P H; only 1: destruct 1; only 1: assumption).	1.0759100914	16608
Coq.Init.Datatypes.eq_true_rec_r	40	1.0.0	synth with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00898504257202	4
Coq.Init.Datatypes.eq_true_rect_r	40	1.0.0	synth with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.0100519657135	4
Coq.Init.Datatypes.surjective_pairing	40	5.1.6	synth with cache (only 1: intros; only 1: destruct p; only 1: reflexivity).	0.0344638824463	115
Coq.Init.Datatypes.injective_projections	40
Coq.Init.Datatypes.pair_equal_spec	40
Coq.Init.Datatypes.rew_pair	40	1.4	synth with cache (only 1: destruct H; only 1: trivial).	0.011834859848	7
Coq.Init.Datatypes.comparison_eq_stable	40
Coq.Init.Datatypes.CompOpp_involutive	40	2.2.2.3.1	synth with cache (only 1: intro H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H).	0.0808050632477	215
Coq.Init.Datatypes.CompOpp_inj	40	0.2.2.2.0.2.2.2.0.2	synth with cache (only 1: destruct c, c'; only 1: reflexivity; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: reflexivity; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: reflexivity).	2.90305113792	9188
Coq.Init.Datatypes.CompOpp_iff	40
Coq.Init.Datatypes.CompareSpec2Type	40
Coq.Init.Datatypes.CompSpec2Type	40
Coq.Init.Logic.Conjunction.proj1	40
Coq.Init.Logic.Conjunction.proj2	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.00469708442688	2
Coq.Init.Logic.Equivalence.iff_refl	40
Coq.Init.Logic.Equivalence.iff_trans	40	2.2.0.2.2	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.0209069252014	95
Coq.Init.Logic.Equivalence.iff_sym	40	0.0.0.3	synth with cache (only 1: destruct 1; only 1: split; only 1: trivial; only 1: trivial).	0.00723505020142	12
Coq.Init.Logic.and_iff_compat_l	40	0.0.2.0.0.0.2.0.1.3	synth with cache (only 1: destruct 1; only 1: split; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.0672650337219	625
Coq.Init.Logic.and_iff_compat_r	40	2.2.1.0.2.2.1.0.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: auto; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: auto).	0.32537817955	2959
Coq.Init.Logic.or_iff_compat_l	40
Coq.Init.Logic.or_iff_compat_r	40	4.1.4.0.1.4.1.4.0.1.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: auto; only 1: right; only 1: auto; only 1: intros [?| ?]; only 1: left; only 1: auto; only 1: right; only 1: auto).	1.1953728199	13174
Coq.Init.Logic.imp_iff_compat_l	40	4.4.0.3	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	0.0426390171051	233
Coq.Init.Logic.imp_iff_compat_r	40	5.5.0.3	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	0.0606529712677	357
Coq.Init.Logic.not_iff_compat	40	8.8.0.0	synth with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: auto; only 1: auto).	0.105875968933	721
Coq.Init.Logic.neg_false	40	2.11.9.2.2.2.0	synth with cache (only 1: intros; only 1: split; only 1: split; only 1: trivial; only 1: destruct 1; only 1: intros [? ?]; only 1: trivial).	1.34615182877	11890
Coq.Init.Logic.and_cancel_l	40
Coq.Init.Logic.and_cancel_r	40
Coq.Init.Logic.and_comm	40	0.1.7.3.0.1.7.3.3	synth with cache (only 1: split; only 1: intros [HypL HypR]; only 1: split; only 1: trivial; only 1: apply HypL; only 1: intros [HypL HypR]; only 1: split; only 1: trivial; only 1: apply HypL).	1.83578014374	10042
Coq.Init.Logic.and_assoc	40	5.5.0.6.6.3.5.0.6.0.6.3.1.0	synth with cache (only 1: intros; only 1: split; only 1: intros [HypL HypR]; only 1: split; only 1: apply HypL; only 1: split; only 1: apply HypL; only 1: apply HypR; only 1: intros [HypL HypR]; only 1: split; only 1: split; only 1: apply HypL; only 1: apply HypR; only 1: apply HypR).	19.217592001	127730
Coq.Init.Logic.or_cancel_l	40
Coq.Init.Logic.or_cancel_r	40
Coq.Init.Logic.or_comm	40	0.2.1.5.10.1.2.0.5.10.5	synth with cache (only 1: split; only 1: intros [?| ?]; only 1: right; only 1: exact H; only 1: left; only 1: trivial; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: exact H).	5.81065201759	42981
Coq.Init.Logic.or_assoc	40
Coq.Init.Logic.iff_and	40	2.2	synth with cache (only 1: intros; only 1: assumption).	0.00990796089172	12
Coq.Init.Logic.iff_to_and	40	1.1.4.3.5	synth with cache (only 1: intros; only 1: apply and_iff_compat_r; only 1: split; only 1: trivial; only 1: trivial).	0.607708930969	1676
Coq.Init.Logic.universal_quantification.inst	40	12	synth with cache (only 1: trivial).	0.0187649726868	89
Coq.Init.Logic.universal_quantification.gen	40	1.0	synth with cache (only 1: unfold all; only 1: auto).	0.0077269077301	3
Coq.Init.Logic.Logic_lemmas.absurd	40	3.16.2.14	synth with cache (only 1: unfold not; only 1: intro H; only 1: intros A B []; only 1: trivial).	0.976824998856	8818
Coq.Init.Logic.Logic_lemmas.equality.eq_sym	40	1.17	synth with cache (only 1: destruct 1; only 1: trivial).	0.0495748519897	265
Coq.Init.Logic.Logic_lemmas.equality.eq_trans	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.00802993774414	2
Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	40	1.0	synth with cache (only 1: destruct 2; only 1: trivial).	0.00815796852112	3
Coq.Init.Logic.Logic_lemmas.equality.f_equal	40	0.1	synth with cache (only 1: destruct 1; only 1: trivial).	0.00819206237793	3
Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	40	0.7.1.5.16	synth with cache (only 1: unfold not; only 1: intro H1; only 1: destruct 1; only 1: elim H1; only 1: trivial).	0.502713918686	3092
Coq.Init.Logic.Logic_lemmas.eq_sind_r	40	2.6	synth with cache (only 1: destruct 2; only 1: auto).	0.00864815711975	16
Coq.Init.Logic.Logic_lemmas.eq_ind_r	40	1.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00810694694519	4
Coq.Init.Logic.Logic_lemmas.eq_rec_r	40	1.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00838589668274	4
Coq.Init.Logic.Logic_lemmas.eq_rect_r	40	1.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.0086829662323	4
Coq.Init.Logic.equality_dep.f_equal_dep	40
Coq.Init.Logic.equality_dep2.f_equal_dep2	40	0.3.0	synth with cache (only 1: destruct H; only 1: destruct 1; only 1: reflexivity).	0.0139009952545	6
Coq.Init.Logic.rew_opp_r	40	0.1	synth with cache (only 1: destruct H; only 1: reflexivity).	0.00834512710571	3
Coq.Init.Logic.rew_opp_l	40	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.0097188949585	3
Coq.Init.Logic.f_equal2	40	1.11.1.0	synth with cache (only 1: intros; only 1: destruct H; only 1: elim eq_sym with (1 := H0); only 1: trivial).	0.221181869507	482
Coq.Init.Logic.f_equal3	40	0.1.0.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0144250392914	21
Coq.Init.Logic.f_equal4	40	0.1.0.0.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0175559520721	22
Coq.Init.Logic.f_equal5	40	0.1.0.0.0.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0196969509125	23
Coq.Init.Logic.f_equal_compose	40	0.4.7.3	synth with cache (only 1: intros A x P H y H0; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).	0.120647192001	345
Coq.Init.Logic.eq_trans_refl_l	40	0.1	synth with cache (only 1: destruct e; only 1: reflexivity).	0.00882482528687	3
Coq.Init.Logic.eq_trans_refl_r	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.00858402252197	2
Coq.Init.Logic.eq_sym_involutive	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.00854110717773	2
Coq.Init.Logic.eq_trans_sym_inv_l	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.00918292999268	2
Coq.Init.Logic.eq_trans_sym_inv_r	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.00883197784424	2
Coq.Init.Logic.eq_trans_assoc	40	0.5.8.0	synth with cache (only 1: destruct e; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).	0.189144849777	349
Coq.Init.Logic.rew_map	40	0.0.1	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.0120780467987	4
Coq.Init.Logic.eq_trans_map	40	3.23.2.22.7	synth with cache (only 1: intros A x P H y H0; only 1: intros ? ? ? Fl Fr; only 1: destruct 1; only 1: destruct Fl; only 1: assumption).	7.73508620262	53274
Coq.Init.Logic.map_subst	40	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).	0.0091860294342	2
Coq.Init.Logic.map_subst_map	40	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).	0.00959801673889	2
Coq.Init.Logic.rew_swap	40	0.2.3.1	synth with cache (only 1: destruct H; only 1: intros; only 1: destruct H; only 1: reflexivity).	0.0172700881958	25
Coq.Init.Logic.rew_compose	40	2.0.0	synth with cache (only 1: intros; only 1: destruct H2; only 1: trivial).	0.010605096817	5
Coq.Init.Logic.eq_id_comm_l	40
Coq.Init.Logic.eq_id_comm_r	40
Coq.Init.Logic.eq_refl_map_distr	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.00947499275208	2
Coq.Init.Logic.eq_trans_map_distr	40	0.1.1.18.7.0	synth with cache (only 1: intros; only 1: unfold f_equal; only 1: destruct e; only 1: rewrite eq_trans_refl_l; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).	0.860499858856	3266
Coq.Init.Logic.eq_sym_map_distr	40	0.5	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0139830112457	14
Coq.Init.Logic.eq_trans_sym_distr	40	0.3.8	synth with cache (only 1: destruct e'; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).	0.150762796402	168
Coq.Init.Logic.eq_trans_rew_distr	40	0.6	synth with cache (only 1: destruct e'; only 1: reflexivity).	0.0124340057373	16
Coq.Init.Logic.rew_const	40	0.23	synth with cache (only 1: destruct e; only 1: reflexivity).	0.173532962799	522
Coq.Init.Logic.unique_existence	40
Coq.Init.Logic.forall_exists_unique_domain_coincide	40
Coq.Init.Logic.forall_exists_coincide_unique_domain	40
Coq.Init.Logic.exists_inhabited	40	13.11.1	synth with cache (only 1: intros A P H; only 1: destruct H; only 1: auto).	0.319175958633	1708
Coq.Init.Logic.inhabited_covariant	40	0.2.10	synth with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.134618997574	102
Coq.Init.Logic.eq_stepl	40	0.7.3.6	synth with cache (only 1: intros; only 1: destruct H; only 1: elim eq_sym with (1 := H0); only 1: trivial).	0.161288976669	290
Coq.Init.Logic.iff_stepl	40	22.22.4.2	synth with cache (only 1: intros A B C [H1 H2] [H3 H4]; only 1: split; only 1: auto; only 1: auto).	9.93514800072	57159
Coq.Init.Logic.ex.eq_ex_uncurried	40
Coq.Init.Logic.ex.rew_ex	40
Coq.Init.Logic.ex2.eq_ex2_uncurried	40	0.0.0.5.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct H; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0283708572388	37
Coq.Init.Logic.ex2.rew_ex2	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.00973701477051	2
Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	40	1.6	synth with cache (only 1: destruct 1; only 1: trivial).	0.00997996330261	9
Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.00900411605835	2
Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	40	1.1	synth with cache (only 1: destruct 1; only 1: trivial).	0.0102138519287	4
Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	40	0.13.2	synth with cache (only 1: destruct 2; only 1: destruct H; only 1: trivial).	0.172152996063	546
Coq.Init.Logic_Type.identity_ind_r	40	2.7.12	synth with cache (only 1: intros A P H; only 1: destruct 2; only 1: trivial).	0.122010946274	553
Coq.Init.Logic_Type.identity_rec_r	40	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.0101079940796	3
Coq.Init.Logic_Type.identity_rect_r	40	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.0112340450287	3
Coq.Init.Specif.sigT_eta	40	4.1	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0109000205994	7
Coq.Init.Specif.sig_eta	40	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.00883316993713	2
Coq.Init.Specif.sigT2_eta	40	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.010241985321	2
Coq.Init.Specif.sig2_eta	40	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0099778175354	2
Coq.Init.Specif.exists_to_inhabited_sig	40	1.13.16.15	synth with cache (only 1: destruct 1; only 1: split; only 1: exists x; only 1: trivial).	0.466809034348	3670
Coq.Init.Specif.inhabited_sig_to_exists	40	4.7.0.83.78	synth with cache (only 1: intro H1; only 1: elim H1; only 1: intros [x y]; only 1: exists x; only 1: auto).	4.37348604202	78638
Coq.Init.Specif.sigT.eq_existT_uncurried	40	0.1.1.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0164458751678	6
Coq.Init.Specif.sigT.eq_sigT_uncurried	40
Coq.Init.Specif.sigT.eq_existT_curried	40	0.0.0	synth with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0136458873749	3
Coq.Init.Specif.sigT.eq_existT_curried_map	40	0.0	synth with cache (only 1: destruct p, q; only 1: reflexivity).	0.0161468982697	2
Coq.Init.Specif.sigT.eq_existT_curried_trans	40	0.46	synth with cache (only 1: subst; only 1: reflexivity).	4.23922896385	15892
Coq.Init.Specif.sigT.eq_existT_curried_congr	40	0.8.14.18	synth with cache (only 1: intros; only 1: destruct H; only 1: destruct r, q, p; only 1: reflexivity).	6.75589585304	13867
Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	40
Coq.Init.Specif.sigT.eq_sigT_rect	40
Coq.Init.Specif.sigT.rew_sigT	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0132510662079	2
Coq.Init.Specif.sig.eq_exist_uncurried	40	0.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct p, q; only 1: reflexivity).	0.0144810676575	3
Coq.Init.Specif.sig.eq_sig_uncurried	40	0.0.0.3.0.5	synth with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: destruct pq as [p q]; only 1: simpl in *; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.225409984589	143
Coq.Init.Specif.sig.eq_sig_rect	40
Coq.Init.Specif.sig.eq_sig_uncurried_iff	40	0.0.0.5.10.5.2.4	synth with cache (only 1: split; only 1: intro p; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: apply eq_exist_uncurried).	2.10131502151	6519
Coq.Init.Specif.sig.rew_sig	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0111210346222	2
Coq.Init.Specif.sigT2.eq_existT2_uncurried	40
Coq.Init.Specif.sigT2.eq_sigT2_uncurried	40	2.0.0.18.6.10	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	1.93766117096	4095
Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	40	0.0.0.2.2.6.4.2.2	synth with cache (only 1: split; only 1: intro p; only 1: destruct p; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: apply eq_existT2_uncurried).	5.46221280098	9392
Coq.Init.Specif.sigT2.eq_sigT2_rect	40
Coq.Init.Specif.sigT2.rew_sigT2	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.01265001297	2
Coq.Init.Specif.sig2.eq_exist2_uncurried	40	1.0.0.0	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl in *; only 1: reflexivity).	0.0171639919281	5
Coq.Init.Specif.sig2.eq_sig2_uncurried	40	2.0.0.4.0.11	synth with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: destruct pqr as [p q r]; only 1: simpl in *; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	1.19615197182	1324
Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	40	0.0.0.3.2.7.4.7.2	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: apply eq_exist2_uncurried).	9.25910496712	17609
Coq.Init.Specif.sig2.eq_sig2_rect	40
Coq.Init.Specif.sig2.rew_sig2	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0123379230499	2
Coq.Init.Specif.Choice_lemmas.Choice	40
Coq.Init.Specif.Choice_lemmas.Choice2	40
Coq.Init.Specif.Choice_lemmas.bool_choice	40
Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	40
Coq.Init.Specif.absurd_set	40	0.1.1	synth with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).	0.0162129402161	26
Coq.QArith.QOrderedType.Q_as_OT.lt_strorder	40
Coq.QArith.QOrderedType.Q_as_OT.lt_compat	40	0.0.0	synth with cache (only 1: intros p q H r s H'; only 1: rewrite 2!Qlt_alt, H, H'; only 1: auto with *).	0.0229361057281	3
Coq.QArith.Qreduction.Qred_correct	40
Coq.QArith.Qreduction.Qred_complete	40
Coq.QArith.Qreduction.Qred_eq_iff	40
Coq.QArith.Qreduction.Qred_comp_Proper	40
Coq.QArith.Qreduction.Qplus'_correct	40
Coq.QArith.Qreduction.Qmult'_correct	40	1.0.16	synth with cache (only 1: intro E; only 1: intros; only 1: apply Qred_correct).	3.35171294212	3152
Coq.QArith.Qreduction.Qminus'_correct	40
Coq.QArith.Qreduction.Qplus'_comp_Proper	40
Coq.QArith.Qreduction.Qmult'_comp_Proper	40
Coq.QArith.Qreduction.Qminus'_comp_Proper	40
Coq.QArith.Qreduction.Qred_opp	40
Coq.QArith.Qreduction.Qred_compare	40
Coq.QArith.Qreduction.Qred_le	40	5.14.3.1.3.1	synth with cache (only 1: split; only 1: intros E; only 1: rewrite <- (Qred_correct q), <- (Qred_correct q'); only 1: auto with qarith; only 1: destruct q'; only 1: now rewrite !Qred_correct).	26.770565033	11589
Coq.QArith.Qreduction.Qred_lt	40	5.5.2.2.21	synth with cache (only 1: revert q; only 1: intros (x, y); only 1: split; only 1: now rewrite !Qred_correct; only 1: now rewrite !Qred_correct).	24.5279219151	11333
Coq.QArith.Qcabs.Qred_abs	40
Coq.QArith.Qcabs.Qcabs_canon	40
Coq.QArith.Qcabs.Qcabs_case	40
Coq.QArith.Qcabs.Qcabs_pos	40
Coq.QArith.Qcabs.Qcabs_neg	40
Coq.QArith.Qcabs.Qcabs_nonneg	40	7.0.4.0.2.0.5	synth with cache (only 1: Qc_unfolds; only 1: fold (this x); only 1: set (K := canon [x]); only 1: simpl in K; only 1: apply Qabs_case; only 1: auto; only 1: apply (Qopp_le_compat x 0)).	11.8435409069	7086
Coq.QArith.Qcabs.Qcabs_opp	40
Coq.QArith.Qcabs.Qcabs_triangle	40
Coq.QArith.Qcabs.Qcabs_Qcmult	40
Coq.QArith.Qcabs.Qcabs_Qcminus	40
Coq.QArith.Qcabs.Qcle_Qcabs	40	18.4	synth with cache (only 1: Qc_unfolds; only 1: auto using Qle_Qabs).	2.93119287491	2207
Coq.QArith.Qcabs.Qcabs_triangle_reverse	40
Coq.QArith.Qcabs.Qcabs_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_null	40
Coq.QArith.Qpower.Qpower_positive_1	40
Coq.QArith.Qpower.Qpower_1	40
Coq.QArith.Qpower.Qpower_positive_0	40	1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: simpl; only 1: red; only 1: auto with qarith).	0.311192989349	118
Coq.QArith.Qpower.Qpower_0	40
Coq.QArith.Qpower.Qpower_not_0_positive	40
Coq.QArith.Qpower.Qpower_pos_positive	40
Coq.QArith.Qpower.Qpower_pos	40
Coq.QArith.Qpower.Qmult_power_positive	40
Coq.QArith.Qpower.Qmult_power	40
Coq.QArith.Qpower.Qinv_power_positive	40	4.2.3.0.0.2.0.0.2.0.3	synth with cache (only 1: induction n; only 1: simpl in *; only 1: repeat rewrite IHn; only 1: rewrite Qinv_mult_distr; only 1: rewrite Qinv_mult_distr; only 1: reflexivity; only 1: simpl in *; only 1: rewrite Qinv_mult_distr; only 1: repeat rewrite IHn; only 1: reflexivity; only 1: reflexivity).	24.4119460583	12125
Coq.QArith.Qpower.Qinv_power	40
Coq.QArith.Qpower.Qdiv_power	40
Coq.QArith.Qpower.Qinv_power_n	40
Coq.QArith.Qpower.Qpower_plus_positive	40
Coq.QArith.Qpower.Qpower_opp	40
Coq.QArith.Qpower.Qpower_minus_positive	40
Coq.QArith.Qpower.Qpower_plus	40
Coq.QArith.Qpower.Qpower_plus'	40
Coq.QArith.Qpower.Qpower_mult_positive	40
Coq.QArith.Qpower.Qpower_mult	40
Coq.QArith.Qpower.Zpower_Qpower	40
Coq.QArith.Qpower.Qsqr_nonneg	40	0.0.0.0.1.0.10	synth with cache (only 1: intros [[| n| n] d] Ha; only 1: simpl in *; only 1: discriminate; only 1: simpl in *; only 1: congruence; only 1: simpl in *; only 1: congruence).	1.5751760006	775
Coq.QArith.Qpower.Qpower_decomp	40
Coq.QArith.Qfield.Qsrt	40
Coq.QArith.Qfield.Qsft	40
Coq.QArith.Qfield.Qpower_theory	40
Coq.QArith.Qfield.Examples.ex1	40	0	synth with cache (only 1: exact Qmult_plus_distr_l).	0.00724482536316	1
Coq.QArith.Qfield.Examples.ex2	40	0.1	synth with cache (only 1: intros; only 1: ring).	0.0159158706665	3
Coq.QArith.Qfield.Examples.ex3	40	0.1	synth with cache (only 1: intros; only 1: ring).	0.0184969902039	3
Coq.QArith.Qfield.Examples.ex4	40	7	synth with cache (only 1: reflexivity).	0.0139939785004	15
Coq.QArith.Qfield.Examples.ex5	40	0	synth with cache (only 1: ring).	0.0900940895081	1
Coq.QArith.Qfield.Examples.ex6	40	0	synth with cache (only 1: ring).	0.0126521587372	1
Coq.QArith.Qfield.Examples.ex7	40	0.1.1.4	synth with cache (only 1: red; only 1: simpl; only 1: intro; only 1: ring).	0.0285580158234	10
Coq.QArith.Qfield.Examples.ex8	40	1.0	synth with cache (only 1: intro; only 1: ring).	0.016970872879	3
Coq.QArith.Qfield.Examples.ex9	40	1.0	synth with cache (only 1: intro; only 1: ring).	0.0173540115356	3
Coq.QArith.Qfield.Examples.ex10	40
Coq.QArith.Qfield.Qopp_plus	40	2.0.0.0.3	synth with cache (only 1: red; only 1: simpl; only 1: intro; only 1: intro; only 1: ring).	0.163503170013	42
Coq.QArith.Qfield.Qopp_opp	40	0.0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).	0.0246458053589	4
Coq.QArith.Qcanon.Qred_identity	40
Coq.QArith.Qcanon.Qred_identity2	40
Coq.QArith.Qcanon.Qred_iff	40
Coq.QArith.Qcanon.Qc_is_canon	40
Coq.QArith.Qcanon.Qc_decomp	40	2.1.1.8.0.0.5	synth with cache (only 1: destruct q as [a b]; only 1: simpl in *; only 1: intros; only 1: destruct q'; only 1: subst; only 1: simpl; only 1: intuition).	1.95023202896	1555
Coq.QArith.Qcanon.Qred_involutive	40	3.0.47	synth with cache (only 1: intros def_n0; only 1: apply Qred_complete; only 1: apply Qred_correct).	14.0929801464	25457
Coq.QArith.Qcanon.Q2Qc_eq_iff	40
Coq.QArith.Qcanon.Qceq_alt	40	7.43	synth with cache (only 1: fix odd_spec 1; only 1: trivial).	15.955671072	24107
Coq.QArith.Qcanon.Qclt_alt	40	3	synth with cache (only 1: easy).	0.0167899131775	4
Coq.QArith.Qcanon.Qcgt_alt	40	1.2.0.0	synth with cache (only 1: unfold Qccompare; only 1: intros; only 1: symmetry; only 1: apply Z.gt_lt_iff).	0.0328588485718	7
Coq.QArith.Qcanon.Qcle_alt	40	3.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0238778591156	5
Coq.QArith.Qcanon.Qcge_alt	40	1.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Z.ge_le_iff).	0.0477151870728	12
Coq.QArith.Qcanon.Qc_eq_dec	40
Coq.QArith.Qcanon.Q_apart_0_1	40	0	synth with cache (only 1: discriminate).	0.0206499099731	1
Coq.QArith.Qcanon.Qcplus_assoc	40
Coq.QArith.Qcanon.Qcplus_0_l	40
Coq.QArith.Qcanon.Qcplus_0_r	40
Coq.QArith.Qcanon.Qcplus_comm	40	1.0.0.11.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl in *; only 1: rewrite Pos.mul_comm; only 1: ring).	7.11441206932	721
Coq.QArith.Qcanon.Qcopp_involutive	40
Coq.QArith.Qcanon.Qcplus_opp_r	40	0.2.5.0.2	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: ring).	2.10082197189	358
Coq.QArith.Qcanon.Qcmult_assoc	40	6.0.0.10	synth with cache (only 1: intro n; only 1: intros; only 1: qc; only 1: ring).	1.30860614777	700
Coq.QArith.Qcanon.Qcmult_0_l	40	5.1.0	synth with cache (only 1: intros; only 1: qc; only 1: field).	0.119270086288	22
Coq.QArith.Qcanon.Qcmult_0_r	40	6.0.0	synth with cache (only 1: intros; only 1: qc; only 1: field).	0.0752730369568	9
Coq.QArith.Qcanon.Qcmult_1_l	40	5.0.1.0	synth with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: field).	0.14480304718	34
Coq.QArith.Qcanon.Qcmult_1_r	40	0.1.0.0	synth with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_1_l).	0.0496151447296	5
Coq.QArith.Qcanon.Qcmult_comm	40	3.2.0.5	synth with cache (only 1: intros a b; only 1: qc; only 1: rewrite Qmult_comm; only 1: split).	1.37823009491	213
Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	8.0.0	synth with cache (only 1: intros; only 1: qc; only 1: ring).	1.38017988205	66
Coq.QArith.Qcanon.Qcmult_plus_distr_l	40	9.0.0	synth with cache (only 1: intros; only 1: qc; only 1: ring).	2.50083017349	119
Coq.QArith.Qcanon.Qcmult_integral	40
Coq.QArith.Qcanon.Qcmult_integral_l	40
Coq.QArith.Qcanon.Qcmult_inv_r	40	2.1.7.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qmult_inv_r; only 1: auto).	0.550423145294	248
Coq.QArith.Qcanon.Qcmult_inv_l	40	0.0.2.0.0	synth with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).	0.0531170368195	7
Coq.QArith.Qcanon.Qcinv_mult_distr	40
Coq.QArith.Qcanon.Qcdiv_mult_l	40
Coq.QArith.Qcanon.Qcmult_div_r	40
Coq.QArith.Qcanon.Qcle_refl	40
Coq.QArith.Qcanon.Qcle_antisym	40	2	synth with cache (only 1: auto with qarith).	0.0755100250244	45
Coq.QArith.Qcanon.Qcle_trans	40	5.25.4	synth with cache (only 1: intros EQ; only 1: fix even_spec 1; only 1: tauto).	36.144903183	27053
Coq.QArith.Qcanon.Qclt_not_eq	40
Coq.QArith.Qcanon.Qclt_le_weak	40	6.0.1.0	synth with cache (only 1: unfold Qclt; only 1: unfold Qcle; only 1: intros; only 1: auto with qarith).	0.409356117249	175
Coq.QArith.Qcanon.Qcle_lt_trans	40	0.2.7.0.1	synth with cache (only 1: unfold Qclt; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: eauto; only 1: auto).	3.10821795464	1700
Coq.QArith.Qcanon.Qclt_le_trans	40
Coq.QArith.Qcanon.Qclt_trans	40	2.0.3.0.0.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: eapply Qle_lt_trans; only 1: apply Qlt_le_weak; only 1: eauto; only 1: eauto).	0.321151971817	102
Coq.QArith.Qcanon.Qcnot_lt_le	40	3.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: auto with qarith).	0.0552041530609	30
Coq.QArith.Qcanon.Qcnot_le_lt	40	1.0.5	synth with cache (only 1: intros a b; only 1: unfold Qcle, Qclt; only 1: apply Z.nle_gt).	0.125028133392	81
Coq.QArith.Qcanon.Qclt_not_le	40	2.0.5	synth with cache (only 1: intros a b; only 1: unfold Qcle, Qclt; only 1: apply Z.nle_gt).	0.0908999443054	65
Coq.QArith.Qcanon.Qcle_not_lt	40	3.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: auto with qarith).	0.0310020446777	13
Coq.QArith.Qcanon.Qcle_lt_or_eq	40
Coq.QArith.Qcanon.Qc_dec	40
Coq.QArith.Qcanon.Qclt_le_dec	40	0.0.5.1	synth with cache (only 1: unfold Qcle; only 1: unfold Qplus, Qle, Qlt; only 1: intros; only 1: exact (Z_lt_le_dec (Qnum x * QDen y) (Qnum y * QDen x))).	0.0860550403595	53
Coq.QArith.Qcanon.Qcopp_le_compat	40
Coq.QArith.Qcanon.Qcle_minus_iff	40
Coq.QArith.Qcanon.Qclt_minus_iff	40
Coq.QArith.Qcanon.Qcplus_le_compat	40
Coq.QArith.Qcanon.Qcmult_le_compat_r	40
Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40	3.0.1.8.2	synth with cache (only 1: unfold Qcle, Qcminus; only 1: intros (a1, a2) (b1, b2) (c1, c2); only 1: simpl in *; only 1: repeat rewrite Qred_correct; only 1: apply Qmult_le_r).	10.9255721569	6556
Coq.QArith.Qcanon.Qcmult_lt_compat_r	40
Coq.QArith.Qcanon.Qcpower_1	40
Coq.QArith.Qcanon.Qcpower_0	40	1.0.4.3.3	synth with cache (only 1: intros; only 1: induction n; only 1: tauto; only 1: simpl; only 1: auto with qarith).	0.997152090073	317
Coq.QArith.Qcanon.Qcpower_pos	40
Coq.QArith.Qcanon.Qc_eq_bool_correct	40	3.15.17	synth with cache (only 1: intros EQ; only 1: fix even_spec 1; only 1: intuition).	19.1611011028	22648
Coq.QArith.Qcanon.Qcrt	40
Coq.QArith.Qcanon.Qcft	40
Coq.QArith.Qcanon.test_field	40	0.0.4.3.0.0	synth with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_r; only 1: tauto).	1.40514302254	316
Coq.QArith.Qreals.IZR_nz	40	1	synth with cache (only 1: auto with real).	0.0211369991302	2
Coq.QArith.Qreals.eqR_Qeq	40
Coq.QArith.Qreals.Qeq_eqR	40
Coq.QArith.Qreals.Rle_Qle	40
Coq.QArith.Qreals.Qle_Rle	40
Coq.QArith.Qreals.Rlt_Qlt	40
Coq.QArith.Qreals.Qlt_Rlt	40
Coq.QArith.Qreals.Q2R_plus	40
Coq.QArith.Qreals.Q2R_mult	40
Coq.QArith.Qreals.Q2R_opp	40
Coq.QArith.Qreals.Q2R_minus	40
Coq.QArith.Qreals.Q2R_inv	40
Coq.QArith.Qreals.Q2R_div	40
Coq.QArith.QArith_base.inject_Z_injective	40
Coq.QArith.QArith_base.Qeq_alt	40
Coq.QArith.QArith_base.Qlt_alt	40	2.1.1.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply iff_refl).	0.0447731018066	11
Coq.QArith.QArith_base.Qgt_alt	40
Coq.QArith.QArith_base.Qle_alt	40	3.1.1.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: reflexivity).	0.039057970047	12
Coq.QArith.QArith_base.Qge_alt	40
Coq.QArith.QArith_base.Qcompare_antisym	40
Coq.QArith.QArith_base.Qcompare_spec	40
Coq.QArith.QArith_base.Qeq_refl	40	20	synth with cache (only 1: auto with *).	0.115243911743	189
Coq.QArith.QArith_base.Qeq_sym	40	5.0	synth with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: Z.order).	0.0240669250488	7
Coq.QArith.QArith_base.Qeq_trans	40
Coq.QArith.QArith_base.Q_Setoid	40
Coq.QArith.QArith_base.Qeq_dec	40	0.0.7.0	synth with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.127342224121	31
Coq.QArith.QArith_base.Qeq_bool_iff	40	40.7	synth with cache (only 1: symmetry; only 1: apply Zeq_is_eq_bool).	6.13465595245	7225
Coq.QArith.QArith_base.Qeq_bool_eq	40	1	synth with cache (only 1: apply Zeq_is_eq_bool).	0.248598814011	96
Coq.QArith.QArith_base.Qeq_eq_bool	40	0	synth with cache (only 1: apply Qeq_bool_iff).	0.0166759490967	1
Coq.QArith.QArith_base.Qeq_bool_neq	40
Coq.QArith.QArith_base.Qle_bool_iff	40
Coq.QArith.QArith_base.Qle_bool_imp_le	40	0	synth with cache (only 1: apply Zle_is_le_bool).	0.0169489383698	1
Coq.QArith.QArith_base.Qnot_eq_sym	40	0.2	synth with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: auto with qarith).	0.0702209472656	20
Coq.QArith.QArith_base.Qeq_bool_comm	40
Coq.QArith.QArith_base.Qeq_bool_refl	40	1.0	synth with cache (only 1: apply Qeq_bool_iff; only 1: auto with qarith).	0.023353099823	3
Coq.QArith.QArith_base.Qeq_bool_sym	40	3.3	synth with cache (only 1: rewrite !Qeq_bool_iff; only 1: now symmetry).	0.114405870438	37
Coq.QArith.QArith_base.Qeq_bool_trans	40	0.0.0.2.0.2	synth with cache (only 1: rewrite !Qeq_bool_iff; only 1: unfold Qeq; only 1: intros XY YZ; only 1: apply Z.mul_reg_r with (QDen y); only 1: auto with qarith; only 1: now rewrite Z.mul_shuffle0, XY, Z.mul_shuffle0, YZ, Z.mul_shuffle0).	0.0677201747894	10
Coq.QArith.QArith_base.Qmake_Qdiv	40	4.15.0.15.109	synth with cache (only 1: Z.bitwise; only 1: unfold Z.testbit; only 1: simpl; only 1: Z.nzsimpl'; only 1: trivial).	6.78775811195	14370
Coq.QArith.QArith_base.Qplus_comp	40
Coq.QArith.QArith_base.Qopp_comp	40
Coq.QArith.QArith_base.Qminus_comp	40
Coq.QArith.QArith_base.Qmult_comp	40
Coq.QArith.QArith_base.Qinv_comp	40
Coq.QArith.QArith_base.Qdiv_comp	40
Coq.QArith.QArith_base.Qcompare_comp	40
Coq.QArith.QArith_base.Qle_comp	40
Coq.QArith.QArith_base.Qlt_compat	40
Coq.QArith.QArith_base.Qeqb_comp	40
Coq.QArith.QArith_base.Qleb_comp	40
Coq.QArith.QArith_base.Q_apart_0_1	40	0	synth with cache (only 1: now subst).	0.0234689712524	1
Coq.QArith.QArith_base.Qplus_assoc	40
Coq.QArith.QArith_base.Qplus_0_l	40	6.1.2.14	synth with cache (only 1: intros; only 1: red; only 1: simpl in *; only 1: ring).	5.64598798752	1874
Coq.QArith.QArith_base.Qplus_0_r	40	0.10.0.0.0	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: rewrite ?Pos.mul_1_r; only 1: ring).	3.51530504227	483
Coq.QArith.QArith_base.Qplus_comm	40	3.0.0.0.1.6	synth with cache (only 1: intros EQ; only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	1.59647703171	789
Coq.QArith.QArith_base.Qopp_involutive	40	0.7.4.1.2	synth with cache (only 1: unfold Qeq; only 1: simpl; only 1: intros; only 1: f_equal; only 1: ring).	2.10075902939	563
Coq.QArith.QArith_base.Qplus_opp_r	40	1.0.0.0	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.0437128543854	5
Coq.QArith.QArith_base.Qplus_inj_r	40
Coq.QArith.QArith_base.Qplus_inj_l	40
Coq.QArith.QArith_base.Qmult_assoc	40	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.0680229663849	5
Coq.QArith.QArith_base.Qmult_0_l	40	3.2.0.0	synth with cache (only 1: red; only 1: simpl in *; only 1: intros EQ; only 1: now f_equal).	0.0319740772247	9
Coq.QArith.QArith_base.Qmult_0_r	40	0.0.0.3	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.193274974823	74
Coq.QArith.QArith_base.Qmult_1_l	40
Coq.QArith.QArith_base.Qmult_1_r	40	0.1.0.0.0.5	synth with cache (only 1: intros (x1, x2); only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).	1.94905209541	585
Coq.QArith.QArith_base.Qmult_comm	40	1.0.0.0.0.4	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: ring).	0.615761995316	225
Coq.QArith.QArith_base.Qmult_plus_distr_r	40	0.0.0.0.1	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.108370065689	16
Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.0917141437531	5
Coq.QArith.QArith_base.Qmult_integral	40
Coq.QArith.QArith_base.Qmult_integral_l	40
Coq.QArith.QArith_base.inject_Z_plus	40
Coq.QArith.QArith_base.inject_Z_mult	40	3	synth with cache (only 1: auto with qarith).	0.0182590484619	4
Coq.QArith.QArith_base.inject_Z_opp	40	4.0	synth with cache (only 1: unfold Qplus, inject_Z; only 1: reflexivity).	0.0212211608887	6
Coq.QArith.QArith_base.Qinv_involutive	40
Coq.QArith.QArith_base.Qmult_inv_r	40
Coq.QArith.QArith_base.Qinv_mult_distr	40
Coq.QArith.QArith_base.Qdiv_mult_l	40
Coq.QArith.QArith_base.Qmult_div_r	40
Coq.QArith.QArith_base.Qinv_plus_distr	40
Coq.QArith.QArith_base.Qinv_minus_distr	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	0.0640141963959	5
Coq.QArith.QArith_base.Qmult_inj_r	40
Coq.QArith.QArith_base.Qmult_inj_l	40
Coq.QArith.QArith_base.Qle_refl	40	16.3	synth with cache (only 1: red; only 1: solve_proper).	0.5113260746	559
Coq.QArith.QArith_base.Qle_antisym	40
Coq.QArith.QArith_base.Qle_trans	40
Coq.QArith.QArith_base.Qlt_irrefl	40
Coq.QArith.QArith_base.Qlt_not_eq	40	15.5.0	synth with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: intros XY YZ; only 1: Z.order).	2.13258099556	1245
Coq.QArith.QArith_base.Zle_Qle	40
Coq.QArith.QArith_base.Zlt_Qlt	40
Coq.QArith.QArith_base.Qle_lteq	40
Coq.QArith.QArith_base.Qlt_le_weak	40
Coq.QArith.QArith_base.Qle_lt_trans	40
Coq.QArith.QArith_base.Qlt_le_trans	40
Coq.QArith.QArith_base.Qlt_trans	40
Coq.QArith.QArith_base.Qnot_lt_le	40
Coq.QArith.QArith_base.Qnot_le_lt	40
Coq.QArith.QArith_base.Qlt_not_le	40	0	synth with cache (only 1: apply Z.nle_gt).	0.0192050933838	1
Coq.QArith.QArith_base.Qle_not_lt	40	0	synth with cache (only 1: apply Z.nlt_ge).	0.0158190727234	1
Coq.QArith.QArith_base.Qle_lt_or_eq	40
Coq.QArith.QArith_base.Q_dec	40
Coq.QArith.QArith_base.Qlt_le_dec	40
Coq.QArith.QArith_base.Qarchimedean	40
Coq.QArith.QArith_base.Qopp_le_compat	40
Coq.QArith.QArith_base.Qle_minus_iff	40
Coq.QArith.QArith_base.Qlt_minus_iff	40
Coq.QArith.QArith_base.Qplus_le_compat	40
Coq.QArith.QArith_base.Qplus_lt_le_compat	40
Coq.QArith.QArith_base.Qplus_le_l	40
Coq.QArith.QArith_base.Qplus_le_r	40
Coq.QArith.QArith_base.Qplus_lt_l	40
Coq.QArith.QArith_base.Qplus_lt_r	40	0.0.1.0.0.0.1.0.2.0.0.7	synth with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *).	24.6230840683	7974
Coq.QArith.QArith_base.Qmult_le_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	40
Coq.QArith.QArith_base.Qmult_le_r	40
Coq.QArith.QArith_base.Qmult_le_l	40	0.4.1.2.0.2.0.6	synth with cache (only 1: rewrite (Qmult_comm z x), (Qmult_comm z y); only 1: split; only 1: intro; only 1: now apply Qmult_lt_0_le_reg_r with z; only 1: intro; only 1: apply Qmult_le_compat_r; only 1: auto with qarith; only 1: auto with qarith).	11.8642771244	4584
Coq.QArith.QArith_base.Qmult_lt_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_r	40
Coq.QArith.QArith_base.Qmult_lt_l	40
Coq.QArith.QArith_base.Qmult_le_0_compat	40	5.0.0.0.0.0.17	synth with cache (only 1: intros (a1, a2) (b1, b2); only 1: unfold Qle, Qlt; only 1: simpl; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: now apply Z.mul_nonneg_nonneg).	9.54997014999	5506
Coq.QArith.QArith_base.Qinv_le_0_compat	40
Coq.QArith.QArith_base.Qle_shift_div_l	40
Coq.QArith.QArith_base.Qle_shift_inv_l	40
Coq.QArith.QArith_base.Qle_shift_div_r	40
Coq.QArith.QArith_base.Qle_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_0_compat	40	0.0.0.3	synth with cache (only 1: intros [[| n| n] d] Ha; only 1: assumption; only 1: assumption; only 1: assumption).	0.0302839279175	7
Coq.QArith.QArith_base.Qlt_shift_div_l	40
Coq.QArith.QArith_base.Qlt_shift_inv_l	40
Coq.QArith.QArith_base.Qlt_shift_div_r	40
Coq.QArith.QArith_base.Qlt_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_contravar	40
Coq.QArith.QArith_base.Qpower_positive_comp	40
Coq.QArith.QArith_base.Qpower_comp	40
Coq.QArith.Qminmax.Q.plus_max_distr_l	40
Coq.QArith.Qminmax.Q.plus_max_distr_r	40
Coq.QArith.Qminmax.Q.plus_min_distr_l	40
Coq.QArith.Qminmax.Q.plus_min_distr_r	40	2.0.0.0.1.0.0.0.2.0	synth with cache (only 1: intros; only 1: rewrite (Qplus_comm n p), (Qplus_comm m p), (Qplus_comm _ p); only 1: apply min_monotone; only 1: intros x x' Hx; only 1: rewrite Hx; only 1: auto with qarith; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).	5.64894294739	1826
Coq.QArith.Qround.Qopp_lt_compat	40
Coq.QArith.Qround.Qfloor_Z	40	2.9.0.16	synth with cache (only 1: intros Hb; only 1: unfold Qplus, inject_Z; only 1: simpl; only 1: apply Z.div_1_r).	0.981772899628	1067
Coq.QArith.Qround.Qceiling_Z	40
Coq.QArith.Qround.Qfloor_le	40
Coq.QArith.Qround.Qle_ceiling	40
Coq.QArith.Qround.Qle_floor_ceiling	40
Coq.QArith.Qround.Qlt_floor	40
Coq.QArith.Qround.Qceiling_lt	40
Coq.QArith.Qround.Qfloor_resp_le	40
Coq.QArith.Qround.Qceiling_resp_le	40
Coq.QArith.Qround.Qfloor_comp_Proper	40
Coq.QArith.Qround.Qceiling_comp_Proper	40	1.2.1.0.17	synth with cache (only 1: intuition; only 1: apply Z.le_antisymm; only 1: auto with *; only 1: symmetry in H; only 1: auto with *).	8.98639798164	5508
Coq.QArith.Qround.Zdiv_Qdiv	40
Coq.QArith.Qabs.Qabs_case	40
Coq.QArith.Qabs.Qabs_wd_Proper	40
Coq.QArith.Qabs.Qabs_pos	40
Coq.QArith.Qabs.Qabs_neg	40	3.14.1.0.1	synth with cache (only 1: intros x H; only 1: destruct x as [[| xn| xn] xd]; only 1: reflexivity; only 1: auto with qarith; only 1: reflexivity).	23.284047842	20182
Coq.QArith.Qabs.Qabs_nonneg	40	1.1.1.0.10	synth with cache (only 1: intros; only 1: destruct x as [[| xn| xn] xd]; only 1: abstract (compute; discriminate); only 1: abstract (compute; discriminate); only 1: abstract (compute; discriminate)).	0.365725040436	258
Coq.QArith.Qabs.Zabs_Qabs	40	4.0.0	synth with cache (only 1: unfold Qeq in *; only 1: simpl in *; only 1: reflexivity).	0.0338599681854	12
Coq.QArith.Qabs.Qabs_opp	40	3.4.0.0.1.2.1.2	synth with cache (only 1: intros; only 1: destruct x as [[| xn| xn] xd]; only 1: simpl; only 1: red; only 1: simpl in *; only 1: trivial; only 1: reflexivity; only 1: reflexivity).	6.49266791344	5008
Coq.QArith.Qabs.Qabs_triangle	40
Coq.QArith.Qabs.Qabs_Qmult	40	1.3.0.0.0.10	synth with cache (only 1: intros [xn xd] [yn yd]; only 1: simpl; only 1: unfold Qeq in *; only 1: simpl in *; only 1: repeat rewrite <- Z.abs_mul; only 1: congruence).	12.6251778603	5124
Coq.QArith.Qabs.Qabs_Qinv	40	3.5.0.1.0.0.6.1	synth with cache (only 1: intros x; only 1: destruct x as [[| xn| xn] xd]; only 1: simpl; only 1: red; only 1: simpl; only 1: trivial; only 1: reflexivity; only 1: reflexivity).	6.80538082123	6001
Coq.QArith.Qabs.Qabs_Qminus	40
Coq.QArith.Qabs.Qle_Qabs	40	2.0.3.0.0.4.0.1.2.3.23	synth with cache (only 1: intros (x1, x2); only 1: simpl; only 1: unfold Qle, Qlt; only 1: case x1; only 1: simpl; only 1: easy; only 1: intros; only 1: simpl in *; only 1: now f_equal; only 1: simpl; only 1: easy).	25.3997988701	28260
Coq.QArith.Qabs.Qabs_triangle_reverse	40
Coq.QArith.Qabs.Qabs_Qle_condition	40
Coq.QArith.Qabs.Qabs_diff_Qle_condition	40
Coq.Classes.CMorphisms.Proper.eq_proper_proxy	40	1.5	synth with cache (only 1: red; only 1: trivial).	0.00866794586182	8
Coq.Classes.CMorphisms.Proper.reflexive_proper_proxy	40	1	synth with cache (only 1: firstorder).	0.00689196586609	2
Coq.Classes.CMorphisms.Proper.proper_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.00648403167725	1
Coq.Classes.CMorphisms.Relations.pointwise_pointwise	40	8.1.19.1.1.1	synth with cache (only 1: red; only 1: constructor; only 1: intros; only 1: destruct 1; only 1: firstorder; only 1: firstorder).	14.2075541019	33598
Coq.Classes.CMorphisms.Relations.subrelation_id_proper	40	0	synth with cache (only 1: firstorder).	0.0058479309082	1
Coq.Classes.CMorphisms.Relations.subrelation_respectful	40	0	synth with cache (only 1: firstorder).	0.0115578174591	1
Coq.Classes.CMorphisms.Relations.subrelation_refl	40	5.0.0	synth with cache (only 1: hnf; only 1: intros; only 1: firstorder).	0.0115311145782	8
Coq.Classes.CMorphisms.Relations.subrelation_proper	40	0	synth with cache (only 1: firstorder).	0.00732707977295	1
Coq.Classes.CMorphisms.Relations.proper_subrelation_proper_arrow	40	4	synth with cache (only 1: simpl_crelation).	0.0437080860138	5
Coq.Classes.CMorphisms.Relations.pointwise_subrelation	40	1	synth with cache (only 1: simpl_crelation).	0.0140690803528	2
Coq.Classes.CMorphisms.Relations.forall_subrelation	40	16.5	synth with cache (only 1: reduce; only 1: firstorder).	0.885446071625	1062
Coq.Classes.CMorphisms.iff_impl_subrelation	40	4.0.0.1	synth with cache (only 1: hnf; only 1: intros; only 1: destruct H; only 1: trivial).	0.0209908485413	9
Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0.2.0.0.0	synth with cache (only 1: hnf; only 1: intros x y H'; only 1: red in H'; only 1: unfold flip; only 1: firstorder).	0.0146479606628	7
Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	0	synth with cache (only 1: firstorder).	0.00752997398376	1
Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0	synth with cache (only 1: firstorder).	0.00607395172119	1
Coq.Classes.CMorphisms.GenericInstances.respectful_per_obligation_2	40
Coq.Classes.CMorphisms.GenericInstances.flip_proper_obligation_1	40	4	synth with cache (only 1: firstorder).	0.0243439674377	5
Coq.Classes.CMorphisms.GenericInstances.trans_contra_co_type_morphism_obligation_1	40	9	synth with cache (only 1: firstorder).	0.545454025269	364
Coq.Classes.CMorphisms.GenericInstances.trans_contra_inv_impl_type_morphism_obligation_1	40	11	synth with cache (only 1: firstorder).	6.3211081028	4431
Coq.Classes.CMorphisms.GenericInstances.trans_co_impl_type_morphism_obligation_1	40	12	synth with cache (only 1: firstorder).	19.467258215	12383
Coq.Classes.CMorphisms.GenericInstances.trans_sym_co_inv_impl_type_morphism_obligation_1	40
Coq.Classes.CMorphisms.GenericInstances.trans_sym_contra_arrow_morphism_obligation_1	40
Coq.Classes.CMorphisms.GenericInstances.per_partial_app_type_morphism_obligation_1	40	11	synth with cache (only 1: firstorder).	0.685626983643	322
Coq.Classes.CMorphisms.GenericInstances.trans_co_eq_inv_arrow_morphism_obligation_1	40	14	synth with cache (only 1: firstorder).	5.42195796967	5523
Coq.Classes.CMorphisms.GenericInstances.PER_type_morphism_obligation_1	40	14	synth with cache (only 1: firstorder).	14.583356142	10218
Coq.Classes.CMorphisms.GenericInstances.symmetric_equiv_flip	40	5.0	synth with cache (only 1: hnf; only 1: firstorder).	0.0146338939667	7
Coq.Classes.CMorphisms.GenericInstances.compose_proper_obligation_1	40	7	synth with cache (only 1: firstorder).	0.0327169895172	8
Coq.Classes.CMorphisms.GenericInstances.reflexive_eq_dom_reflexive	40	5	synth with cache (only 1: simpl_crelation).	0.0168609619141	11
Coq.Classes.CMorphisms.GenericInstances.respectful_morphism	40
Coq.Classes.CMorphisms.GenericInstances.Reflexive_partial_app_morphism	40	0.4	synth with cache (only 1: unfold respectful, relation_equivalence in *; only 1: firstorder).	0.0151741504669	6
Coq.Classes.CMorphisms.GenericInstances.flip_respectful	40	5.3	synth with cache (only 1: simpl_crelation; only 1: firstorder).	0.0445079803467	19
Coq.Classes.CMorphisms.GenericInstances.flip1	40	3.0.0	synth with cache (only 1: hnf; only 1: intros; only 1: auto).	0.0124440193176	6
Coq.Classes.CMorphisms.GenericInstances.flip2	40	0	synth with cache (only 1: firstorder).	0.00626707077026	1
Coq.Classes.CMorphisms.GenericInstances.eq_subrelation	40	3	synth with cache (only 1: simpl_crelation).	0.0123429298401	4
Coq.Classes.CMorphisms.GenericInstances.reflexive_proper	40	0	synth with cache (only 1: firstorder).	0.00643610954285	1
Coq.Classes.CMorphisms.GenericInstances.proper_eq	40	1	synth with cache (only 1: firstorder).	0.00651693344116	2
Coq.Classes.CMorphisms.proper_proper	40	0.0.1	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.0148758888245	4
Coq.Classes.CMorphisms.Normalize.proper_normalizes_proper	40	10	synth with cache (only 1: firstorder).	0.0174810886383	35
Coq.Classes.CMorphisms.Normalize.flip_atom	40	0	synth with cache (only 1: firstorder).	0.00722694396973	1
Coq.Classes.CMorphisms.flip_arrow	40
Coq.Classes.CMorphisms.proper_sym_flip	40	0.1.1	synth with cache (only 1: intros A B R R' HRR' S S' HSS' f g; only 1: unfold flip, respectful; only 1: simpl_crelation).	0.0228378772736	5
Coq.Classes.CMorphisms.proper_sym_flip_2	40	3.0.6.0	synth with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: unfold flip, respectful; only 1: intro H; only 1: firstorder).	1.41683197021	357
Coq.Classes.CMorphisms.proper_sym_impl_iff	40	19.9	synth with cache (only 1: simpl_crelation; only 1: firstorder).	12.0858089924	5177
Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.0.1.0.1	synth with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0206179618835	7
Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40	0.0.1.0.3	synth with cache (only 1: intros A R Sym B R' Sym' f Hf x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0594761371613	47
Coq.Classes.CMorphisms.PartialOrder_proper_type	40
Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40
Coq.Classes.CMorphisms.StrictOrder_PreOrder	40
Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40
Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40
Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40
Coq.Classes.Morphisms_Prop.well_founded_morphism	40
Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	7.7.3.5	synth with cache (only 1: intros; only 1: transitivity y; only 1: auto; only 1: auto).	1.85541987419	4509
Coq.Classes.CEquivalence.Respecting.respecting_equiv_obligation_3	40
Coq.Classes.CEquivalence.pointwise_reflexive	40	0	synth with cache (only 1: simpl_crelation).	0.00874185562134	1
Coq.Classes.CEquivalence.pointwise_symmetric	40	0	synth with cache (only 1: firstorder).	0.00503301620483	1
Coq.Classes.CEquivalence.pointwise_transitive	40	0	synth with cache (only 1: firstorder).	0.00752902030945	1
Coq.Classes.CEquivalence.pointwise_equivalence	40	0	synth with cache (only 1: firstorder).	0.284869909286	1
Coq.Classes.CRelationClasses.Defs.complement_inverse	40	7	synth with cache (only 1: reflexivity).	0.00634980201721	8
Coq.Classes.CRelationClasses.Defs.StrictOrder_Asymmetric	40
Coq.Classes.CRelationClasses.Defs.subrelation_symmetric	40	1	synth with cache (only 1: firstorder).	0.00677704811096	2
Coq.Classes.CRelationClasses.Defs.flip.flip_Reflexive	40	5.0	synth with cache (only 1: hnf; only 1: firstorder).	0.00911617279053	7
Coq.Classes.CRelationClasses.Defs.flip.flip_Antisymmetric	40	6.0.1	synth with cache (only 1: hnf; only 1: intros x y H'; only 1: firstorder).	0.0155789852142	16
Coq.Classes.CRelationClasses.Defs.flip.flip_PreOrder	40	5	synth with cache (only 1: firstorder).	0.0151770114899	6
Coq.Classes.CRelationClasses.Defs.flip.flip_StrictOrder	40	5	synth with cache (only 1: firstorder).	0.0169239044189	6
Coq.Classes.CRelationClasses.Defs.flip.flip_PER	40	5	synth with cache (only 1: firstorder).	0.0241241455078	6
Coq.Classes.CRelationClasses.Defs.flip.flip_Equivalence	40	0	synth with cache (only 1: firstorder).	0.0249910354614	1
Coq.Classes.CRelationClasses.Defs.complement.complement_Irreflexive	40	6	synth with cache (only 1: firstorder).	0.0117950439453	13
Coq.Classes.CRelationClasses.Defs.complement.complement_Symmetric	40	1	synth with cache (only 1: firstorder).	0.00647807121277	2
Coq.Classes.CRelationClasses.iffT_Reflexive	40	4.4.28	synth with cache (only 1: repeat split; only 1: trivial; only 1: trivial).	0.317108154297	1482
Coq.Classes.CRelationClasses.iffT_Symmetric	40	0	synth with cache (only 1: firstorder).	0.00595092773438	1
Coq.Classes.CRelationClasses.iffT_Transitive	40	0	synth with cache (only 1: firstorder).	0.00779986381531	1
Coq.Classes.CRelationClasses.Binary.relation_equivalence_equivalence	40
Coq.Classes.CRelationClasses.Binary.relation_implication_preorder	40	0	synth with cache (only 1: firstorder).	0.00975298881531	1
Coq.Classes.CRelationClasses.Binary.partial_order_antisym	40	0	synth with cache (only 1: firstorder).	0.0120689868927	1
Coq.Classes.CRelationClasses.Binary.PartialOrder_inverse	40	0	synth with cache (only 1: firstorder).	0.0323209762573	1
Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	5.5.2.0	synth with cache (only 1: simpl_relation; only 1: transitivity y; only 1: auto; only 1: auto).	0.529378890991	612
Coq.Classes.Equivalence.Respecting.respecting_equiv_obligation_3	40
Coq.Classes.Equivalence.pointwise_reflexive	40	0	synth with cache (only 1: simpl_relation).	0.00787591934204	1
Coq.Classes.Equivalence.pointwise_symmetric	40	0	synth with cache (only 1: firstorder).	0.00627017021179	1
Coq.Classes.Equivalence.pointwise_transitive	40	0	synth with cache (only 1: firstorder).	0.0069727897644	1
Coq.Classes.Equivalence.pointwise_equivalence	40	0	synth with cache (only 1: firstorder).	0.263809919357	1
Coq.Classes.EquivDec.unit_eqdec_obligation_1	40	21.49.1.60	synth with cache (only 1: simpl_relation; only 1: destruct x; only 1: destruct y; only 1: Morphisms.solve_proper).	20.5446147919	43442
Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40
Coq.Classes.EquivDec.list_eqdec_obligation_5	40
Coq.Classes.RelationClasses.Defs.complement_inverse	40	8	synth with cache (only 1: reflexivity).	0.00624489784241	9
Coq.Classes.RelationClasses.Defs.StrictOrder_Asymmetric	40
Coq.Classes.RelationClasses.Defs.subrelation_symmetric	40	1	synth with cache (only 1: firstorder).	0.00668811798096	2
Coq.Classes.RelationClasses.Defs.flip.flip_Reflexive	40	6.0.0	synth with cache (only 1: hnf; only 1: intros; only 1: firstorder).	0.0132620334625	15
Coq.Classes.RelationClasses.Defs.flip.flip_Antisymmetric	40	4.1	synth with cache (only 1: hnf; only 1: firstorder).	0.0279610157013	21
Coq.Classes.RelationClasses.Defs.flip.flip_PreOrder	40	6	synth with cache (only 1: firstorder).	0.0238871574402	7
Coq.Classes.RelationClasses.Defs.flip.flip_StrictOrder	40	5	synth with cache (only 1: firstorder).	0.0195178985596	6
Coq.Classes.RelationClasses.Defs.flip.flip_PER	40	5	synth with cache (only 1: firstorder).	0.0361611843109	6
Coq.Classes.RelationClasses.Defs.flip.flip_Equivalence	40	4	synth with cache (only 1: firstorder).	0.0307657718658	5
Coq.Classes.RelationClasses.Defs.complement.complement_Irreflexive	40	6.2	synth with cache (only 1: hnf; only 1: firstorder).	0.0179829597473	14
Coq.Classes.RelationClasses.Defs.complement.complement_Symmetric	40	1	synth with cache (only 1: firstorder).	0.00661206245422	2
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	0.0.1	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0200700759888	4
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	1.0.5	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0222518444061	12
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.1.0.0.5	synth with cache (only 1: induction l; only 1: firstorder; only 1: intros; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).	0.469670057297	35
Coq.Classes.RelationClasses.Binary.relation_equivalence_equivalence	40
Coq.Classes.RelationClasses.Binary.relation_implication_preorder	40	1	synth with cache (only 1: firstorder).	0.0106749534607	2
Coq.Classes.RelationClasses.Binary.partial_order_antisym	40	0	synth with cache (only 1: firstorder).	0.0140450000763	1
Coq.Classes.RelationClasses.Binary.PartialOrder_inverse	40	2	synth with cache (only 1: firstorder).	0.0370090007782	3
Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0142321586609	1
Coq.Classes.Morphisms.Proper.eq_proper_proxy	40	1.5	synth with cache (only 1: red; only 1: trivial).	0.0158269405365	8
Coq.Classes.Morphisms.Proper.reflexive_proper_proxy	40	1	synth with cache (only 1: firstorder).	0.0126678943634	2
Coq.Classes.Morphisms.Proper.proper_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.0105221271515	1
Coq.Classes.Morphisms.Relations.pointwise_pointwise	40	0.15.0.5.0.2	synth with cache (only 1: unfold relation_equivalence in *; only 1: compute; only 1: intros; only 1: firstorder; only 1: elim eq_sym with (1 := H0); only 1: firstorder).	4.07034993172	4528
Coq.Classes.Morphisms.Relations.subrelation_id_proper	40	3.0.4	synth with cache (only 1: reduce; only 1: compute; only 1: firstorder).	0.0181322097778	10
Coq.Classes.Morphisms.Relations.subrelation_respectful	40	0	synth with cache (only 1: firstorder).	0.0174930095673	1
Coq.Classes.Morphisms.Relations.subrelation_refl	40	5.0.0	synth with cache (only 1: unfold subrelation in *; only 1: intros; only 1: firstorder).	0.0220329761505	8
Coq.Classes.Morphisms.Relations.subrelation_proper	40	1	synth with cache (only 1: firstorder).	0.0134348869324	2
Coq.Classes.Morphisms.Relations.proper_subrelation_proper	40	0.4.2.6	synth with cache (only 1: unfold subrelation; only 1: reduce; only 1: subst; only 1: firstorder).	1.43419694901	241
Coq.Classes.Morphisms.Relations.pointwise_subrelation	40	1.4	synth with cache (only 1: reduce; only 1: firstorder).	0.0213718414307	7
Coq.Classes.Morphisms.Relations.forall_subrelation	40	0.4	synth with cache (only 1: unfold subrelation; only 1: firstorder).	0.0315020084381	13
Coq.Classes.Morphisms.iff_impl_subrelation	40	0.0	synth with cache (only 1: reduce; only 1: firstorder).	0.0145740509033	2
Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0	synth with cache (only 1: firstorder).	0.0135102272034	1
Coq.Classes.Morphisms.GenericInstances.respectful_per_obligation_2	40
Coq.Classes.Morphisms.GenericInstances.complement_proper_obligation_1	40
Coq.Classes.Morphisms.GenericInstances.flip_proper_obligation_1	40	3	synth with cache (only 1: firstorder).	0.0302829742432	4
Coq.Classes.Morphisms.GenericInstances.trans_contra_co_morphism_obligation_1	40	7	synth with cache (only 1: firstorder).	0.387260913849	36
Coq.Classes.Morphisms.GenericInstances.trans_contra_inv_impl_morphism_obligation_1	40	5	synth with cache (only 1: firstorder).	2.86011695862	369
Coq.Classes.Morphisms.GenericInstances.trans_co_impl_morphism_obligation_1	40	6	synth with cache (only 1: firstorder).	3.5210609436	720
Coq.Classes.Morphisms.GenericInstances.trans_sym_co_inv_impl_morphism_obligation_1	40	10	synth with cache (only 1: firstorder).	0.640234947205	312
Coq.Classes.Morphisms.GenericInstances.trans_sym_contra_impl_morphism_obligation_1	40	10	synth with cache (only 1: firstorder).	3.54668688774	1538
Coq.Classes.Morphisms.GenericInstances.per_partial_app_morphism_obligation_1	40	10	synth with cache (only 1: firstorder).	1.17453503609	392
Coq.Classes.Morphisms.GenericInstances.trans_co_eq_inv_impl_morphism_obligation_1	40	3.3.2	synth with cache (only 1: transitivity y; only 1: intuition; only 1: intuition).	1.66014695168	477
Coq.Classes.Morphisms.GenericInstances.PER_morphism_obligation_1	40	13	synth with cache (only 1: firstorder).	19.5092051029	11218
Coq.Classes.Morphisms.GenericInstances.symmetric_equiv_flip	40	4.1.0.0	synth with cache (only 1: hnf; only 1: intros; only 1: compute; only 1: firstorder).	0.0454108715057	11
Coq.Classes.Morphisms.GenericInstances.compose_proper_obligation_1	40	7	synth with cache (only 1: firstorder).	0.0253717899323	8
Coq.Classes.Morphisms.GenericInstances.reflexive_eq_dom_reflexive	40	7	synth with cache (only 1: simpl_relation).	0.0304090976715	12
Coq.Classes.Morphisms.GenericInstances.respectful_morphism	40	0.2.1.1.0.0.2.3.4.0.7	synth with cache (only 1: split; only 1: simpl_relation; only 1: apply H0; only 1: apply H1; only 1: apply H; only 1: simpl_relation; only 1: simpl_relation; only 1: apply H0; only 1: apply H1; only 1: apply H; only 1: simpl_relation).	23.7407000065	3138
Coq.Classes.Morphisms.GenericInstances.Reflexive_partial_app_morphism	40	6	synth with cache (only 1: firstorder).	0.0231280326843	7
Coq.Classes.Morphisms.GenericInstances.flip_respectful	40	7	synth with cache (only 1: firstorder).	0.221672058105	34
Coq.Classes.Morphisms.GenericInstances.flip1	40	4.3	synth with cache (only 1: hnf; only 1: apply H).	0.0626349449158	27
Coq.Classes.Morphisms.GenericInstances.flip2	40	0	synth with cache (only 1: firstorder).	0.0173568725586	1
Coq.Classes.Morphisms.GenericInstances.eq_subrelation	40	0.2.0.3	synth with cache (only 1: unfold subrelation; only 1: firstorder; only 1: subst; only 1: firstorder).	0.0398290157318	9
Coq.Classes.Morphisms.GenericInstances.reflexive_proper	40	0	synth with cache (only 1: firstorder).	0.0172419548035	1
Coq.Classes.Morphisms.GenericInstances.proper_eq	40	1	synth with cache (only 1: firstorder).	0.0190241336823	2
Coq.Classes.Morphisms.proper_proper	40	3.1.0.0.0	synth with cache (only 1: reduce; only 1: subst; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: compute; only 1: firstorder).	0.194542884827	19
Coq.Classes.Morphisms.Normalize.proper_normalizes_proper	40	11	synth with cache (only 1: firstorder).	0.216950178146	94
Coq.Classes.Morphisms.Normalize.flip_atom	40	0	synth with cache (only 1: firstorder).	0.0171761512756	1
Coq.Classes.Morphisms.flip_arrow	40
Coq.Classes.Morphisms.proper_sym_flip	40	0	synth with cache (only 1: simpl_relation).	0.0324039459229	1
Coq.Classes.Morphisms.proper_sym_flip_2	40	1.4	synth with cache (only 1: unfold respectful; only 1: simpl_relation).	0.533648014069	94
Coq.Classes.Morphisms.proper_sym_impl_iff	40	10.7	synth with cache (only 1: simpl_relation; only 1: firstorder).	11.0028400421	2500
Coq.Classes.Morphisms.proper_sym_impl_iff_2	40
Coq.Classes.Morphisms.PartialOrder_proper	40
Coq.Classes.Morphisms.PartialOrder_StrictOrder	40
Coq.Classes.Morphisms.StrictOrder_PreOrder	40
Coq.Classes.Morphisms.StrictOrder_PartialOrder	40
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Reflexive	40	0	synth with cache (only 1: simpl_relation).	0.0113289356232	1
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Symmetric	40	0	synth with cache (only 1: firstorder).	0.00893092155457	1
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Transitive	40	0	synth with cache (only 1: firstorder).	0.0264801979065	1
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Irreflexive	40	0	synth with cache (only 1: firstorder).	0.00737404823303	1
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Reflexive	40	0.13	synth with cache (only 1: compute; only 1: firstorder).	0.123970031738	78
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Symmetric	40	0	synth with cache (only 1: firstorder).	0.0180401802063	1
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Transitive	40	0	synth with cache (only 1: firstorder).	0.286836147308	1
Coq.Classes.RelationPairs.RelProd_Instances.FstRel_ProdRel	40	0	synth with cache (only 1: firstorder).	0.00985097885132	1
Coq.Classes.RelationPairs.RelProd_Instances.SndRel_ProdRel	40	0	synth with cache (only 1: firstorder).	0.00955200195312	1
Coq.Classes.RelationPairs.RelProd_Instances.FstRel_sub	40	0	synth with cache (only 1: firstorder).	0.00880312919617	1
Coq.Classes.RelationPairs.RelProd_Instances.SndRel_sub	40	0	synth with cache (only 1: firstorder).	0.00823903083801	1
Coq.Classes.RelationPairs.RelProd_Instances.pair_compat	40	0	synth with cache (only 1: firstorder).	0.00961017608643	1
Coq.Classes.RelationPairs.RelProd_Instances.fst_compat	40	0	synth with cache (only 1: firstorder).	0.00858092308044	1
Coq.Classes.RelationPairs.RelProd_Instances.snd_compat	40	0	synth with cache (only 1: firstorder).	0.00791597366333	1
Coq.Classes.RelationPairs.RelProd_Instances.RelCompFun_compat	40	0.0.7	synth with cache (only 1: unfold respectful; only 1: compute in *; only 1: auto).	0.130024909973	19
Coq.Classes.DecidableClass.Decidable_sound	40	7.77.0	synth with cache (only 1: intro H; only 1: intros (x, (Hx, Huni)); only 1: auto).	13.1585631371	132135
Coq.Classes.DecidableClass.Decidable_complete	40	1.79.3	synth with cache (only 1: intro H; only 1: intros (x, (Hx, Huni)); only 1: assumption).	19.2297971249	140209
Coq.Classes.DecidableClass.Decidable_sound_alt	40
Coq.Classes.DecidableClass.Decidable_complete_alt	40
Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	40	3.7.2.6.0.2.6.27	synth with cache (only 1: split; only 1: symmetry; only 1: apply Pos.eqb_eq; only 1: destr_bool; only 1: symmetry; only 1: apply Pos.eqb_eq; only 1: subst; only 1: destr_bool).	15.2461240292	32734
Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40
Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40	8	synth with cache (only 1: apply Nat.leb_le).	0.0311191082001	29
Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40
Coq.Classes.SetoidDec.unit_eqdec_obligation_1	40	64.1	synth with cache (only 1: destruct x; only 1: easy || now destruct y).	4.55595707893	5117
Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	40
Coq.Classes.SetoidClass.setoid_refl	40	6	synth with cache (only 1: now f_equal).	0.0210199356079	15
Coq.Classes.SetoidClass.setoid_sym	40	0	synth with cache (only 1: typeclasses eauto).	0.0121669769287	1
Coq.Classes.SetoidClass.setoid_trans	40	0	synth with cache (only 1: typeclasses eauto).	0.0132639408112	1
Coq.Classes.SetoidClass.nequiv_equiv_trans	40	5.5.14	synth with cache (only 1: destruct H; only 1: compute; only 1: firstorder).	6.99155783653	4307
Coq.Classes.SetoidClass.equiv_nequiv_trans	40	5.5.14.4	synth with cache (only 1: intro; only 1: destruct H; only 1: compute; only 1: firstorder).	16.0292210579	13163
Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40	1.1.0.1	synth with cache (only 1: intros R R' EQ a a' Ha WF; only 1: split; only 1: firstorder; only 1: firstorder).	0.300410032272	23
Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	0	synth with cache (only 1: firstorder).	0.521006822586	1
Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	4.0.1	synth with cache (only 1: intro; only 1: intros; only 1: firstorder).	0.0189089775085	8
Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	1.0	synth with cache (only 1: do 2 red; only 1: auto).	0.0152080059052	3
Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	3.1.0	synth with cache (only 1: simpl_relation; only 1: red; only 1: firstorder).	0.111102104187	7
Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	0.1.0	synth with cache (only 1: intro; only 1: reduce; only 1: firstorder).	0.0271019935608	4
Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	0	synth with cache (only 1: firstorder).	0.0171329975128	1
Coq.PArith.Pnat.Pos2Nat.inj_succ	40
Coq.PArith.Pnat.Pos2Nat.inj_add	40
Coq.PArith.Pnat.Pos2Nat.inj_mul	40
Coq.PArith.Pnat.Pos2Nat.inj_1	40	7	synth with cache (only 1: trivial).	0.00773501396179	8
Coq.PArith.Pnat.Pos2Nat.inj_xO	40
Coq.PArith.Pnat.Pos2Nat.inj_xI	40
Coq.PArith.Pnat.Pos2Nat.is_succ	40
Coq.PArith.Pnat.Pos2Nat.is_pos	40
Coq.PArith.Pnat.Pos2Nat.id	40
Coq.PArith.Pnat.Pos2Nat.inj	40	2.7.10.1.14	synth with cache (only 1: elim (lt_irrefl p); only 1: pose proof (sqrtrem_spec p) as H; only 1: revert q; only 1: fix sqrtrem_spec 1; only 1: auto).	20.5840568542	30443
Coq.PArith.Pnat.Pos2Nat.inj_iff	40	0.1.0.1.7	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H).	0.233131885529	203
Coq.PArith.Pnat.Pos2Nat.inj_compare	40
Coq.PArith.Pnat.Pos2Nat.inj_lt	40
Coq.PArith.Pnat.Pos2Nat.inj_le	40
Coq.PArith.Pnat.Pos2Nat.inj_gt	40
Coq.PArith.Pnat.Pos2Nat.inj_ge	40
Coq.PArith.Pnat.Pos2Nat.inj_sub	40
Coq.PArith.Pnat.Pos2Nat.inj_sub_max	40
Coq.PArith.Pnat.Pos2Nat.inj_pred	40	10.0.3.3.4	synth with cache (only 1: induction p using peano_ind; only 1: easy || apply leS; only 1: rewrite inj_succ; only 1: unfold to_nat; only 1: now rewrite Nat.pred_succ).	11.5164380074	11846
Coq.PArith.Pnat.Pos2Nat.inj_pred_max	40
Coq.PArith.Pnat.Pos2Nat.inj_min	40
Coq.PArith.Pnat.Pos2Nat.inj_max	40
Coq.PArith.Pnat.Pos2Nat.inj_iter	40
Coq.PArith.Pnat.Nat2Pos.id	40
Coq.PArith.Pnat.Nat2Pos.id_max	40	0.0.0.0.0.7.0.0	synth with cache (only 1: induction n as [| n H]; only 1: trivial; only 1: simpl; only 1: destruct n; only 1: trivial; only 1: rewrite Pos2Nat.inj_succ; only 1: f_equal; only 1: trivial).	0.2178170681	247
Coq.PArith.Pnat.Nat2Pos.inj	40
Coq.PArith.Pnat.Nat2Pos.inj_iff	40
Coq.PArith.Pnat.Nat2Pos.inj_succ	40	0.1.0	synth with cache (only 1: destruct n; only 1: now destruct 1; only 1: trivial).	0.0151560306549	4
Coq.PArith.Pnat.Nat2Pos.inj_pred	40
Coq.PArith.Pnat.Nat2Pos.inj_add	40
Coq.PArith.Pnat.Nat2Pos.inj_mul	40
Coq.PArith.Pnat.Nat2Pos.inj_compare	40
Coq.PArith.Pnat.Nat2Pos.inj_sub	40
Coq.PArith.Pnat.Nat2Pos.inj_min	40
Coq.PArith.Pnat.Nat2Pos.inj_max	40
Coq.PArith.Pnat.Pos2SuccNat.id_succ	40
Coq.PArith.Pnat.Pos2SuccNat.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.id_succ	40	4.0.17.0.150	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite Pos2Nat.inj_succ; only 1: now Morphisms.f_equiv).	22.2281839848	171293
Coq.PArith.Pnat.SuccNat2Pos.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.inj	40
Coq.PArith.Pnat.SuccNat2Pos.inj_iff	40	2.6.0.1.0.1.0.8	synth with cache (only 1: split; only 1: intro H; only 1: apply (f_equal Pos.to_nat) in H; only 1: rewrite !id_succ in H; only 1: now injection H; only 1: intro H; only 1: f_equal; only 1: tauto).	1.99221301079	2457
Coq.PArith.Pnat.SuccNat2Pos.inv	40
Coq.PArith.Pnat.SuccNat2Pos.inj_succ	40	0.1	synth with cache (only 1: simpl; only 1: f_equal).	0.0101308822632	3
Coq.PArith.Pnat.SuccNat2Pos.inj_compare	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_mult	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_succ_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_l_plus_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_plus_carry_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_r_plus_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.ZL6	40	0.17.6.6	synth with cache (only 1: intros n; only 1: rewrite !Pmult_nat_mult; only 1: Nat.nzsimpl'; only 1: trivial).	8.39786291122	10437
Coq.PArith.Pnat.ObsoletePmultNat.le_Pmult_nat	40
Coq.PArith.BinPos.Pos.eq_dec	40	3.8	synth with cache (only 1: intros A eq_dec; only 1: decide equality).	0.222286939621	101
Coq.PArith.BinPos.Pos.xI_succ_xO	40	3	synth with cache (only 1: trivial).	0.0110948085785	4
Coq.PArith.BinPos.Pos.succ_discr	40	25.6.2.20.28	synth with cache (only 1: destruct p; only 1: intro n; only 1: discriminate; only 1: now f_equiv; only 1: discriminate).	4.68321299553	17270
Coq.PArith.BinPos.Pos.pred_double_spec	40	0	synth with cache (only 1: now destruct p).	0.0119829177856	1
Coq.PArith.BinPos.Pos.succ_pred_double	40
Coq.PArith.BinPos.Pos.pred_double_succ	40
Coq.PArith.BinPos.Pos.double_succ	40	1	synth with cache (only 1: reflexivity).	0.0122139453888	2
Coq.PArith.BinPos.Pos.pred_double_xO_discr	40	0.0.0.0.0.0.2	synth with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	0.0527820587158	9
Coq.PArith.BinPos.Pos.succ_not_1	40	0	synth with cache (only 1: now destruct p).	0.0241539478302	1
Coq.PArith.BinPos.Pos.pred_succ	40	1.0.1.0.1.0.0.0.1.0.2	synth with cache (only 1: induction p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now destruct p; only 1: reflexivity).	2.36502289772	1182
Coq.PArith.BinPos.Pos.succ_pred_or	40
Coq.PArith.BinPos.Pos.succ_pred	40
Coq.PArith.BinPos.Pos.succ_inj	40
Coq.PArith.BinPos.Pos.pred_N_succ	40	2.0.2.8.1.3	synth with cache (only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: apply pred_double_succ; only 1: reflexivity; only 1: auto).	2.38236904144	2193
Coq.PArith.BinPos.Pos.add_1_r	40	0	synth with cache (only 1: now destruct p).	0.011332988739	1
Coq.PArith.BinPos.Pos.add_1_l	40	0	synth with cache (only 1: now destruct p).	0.0113830566406	1
Coq.PArith.BinPos.Pos.add_carry_spec	40
Coq.PArith.BinPos.Pos.add_comm	40
Coq.PArith.BinPos.Pos.add_succ_r	40
Coq.PArith.BinPos.Pos.add_succ_l	40
Coq.PArith.BinPos.Pos.add_no_neutral	40
Coq.PArith.BinPos.Pos.add_carry_add	40
Coq.PArith.BinPos.Pos.add_reg_r	40
Coq.PArith.BinPos.Pos.add_reg_l	40
Coq.PArith.BinPos.Pos.add_cancel_r	40
Coq.PArith.BinPos.Pos.add_cancel_l	40
Coq.PArith.BinPos.Pos.add_carry_reg_r	40
Coq.PArith.BinPos.Pos.add_carry_reg_l	40
Coq.PArith.BinPos.Pos.add_assoc	40
Coq.PArith.BinPos.Pos.add_xO	40	0.2	synth with cache (only 1: simpl; only 1: f_equal).	0.0121371746063	4
Coq.PArith.BinPos.Pos.add_xI_pred_double	40
Coq.PArith.BinPos.Pos.add_xO_pred_double	40
Coq.PArith.BinPos.Pos.add_diag	40
Coq.PArith.BinPos.Pos.peano_rect_succ	40
Coq.PArith.BinPos.Pos.peano_rect_base	40	0.0	synth with cache (only 1: revert P a f; only 1: trivial).	0.0133781433105	2
Coq.PArith.BinPos.Pos.peano_case	40
Coq.PArith.BinPos.Pos.eq_dep_eq_positive	40
Coq.PArith.BinPos.Pos.PeanoViewUnique	40
Coq.PArith.BinPos.Pos.peano_equiv	40
Coq.PArith.BinPos.Pos.mul_1_l	40	0.0.0.0	synth with cache (only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial).	0.0196390151978	4
Coq.PArith.BinPos.Pos.mul_1_r	40
Coq.PArith.BinPos.Pos.mul_xO_r	40	0.0.1.0.3.1.8	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: f_equal; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now f_equal).	1.05081915855	382
Coq.PArith.BinPos.Pos.mul_xI_r	40
Coq.PArith.BinPos.Pos.mul_comm	40
Coq.PArith.BinPos.Pos.mul_add_distr_l	40
Coq.PArith.BinPos.Pos.mul_add_distr_r	40
Coq.PArith.BinPos.Pos.mul_assoc	40
Coq.PArith.BinPos.Pos.mul_succ_l	40
Coq.PArith.BinPos.Pos.mul_succ_r	40
Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_reg_r	40
Coq.PArith.BinPos.Pos.mul_reg_l	40
Coq.PArith.BinPos.Pos.mul_cancel_r	40
Coq.PArith.BinPos.Pos.mul_cancel_l	40	1.2.3.0	synth with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).	0.0643320083618	36
Coq.PArith.BinPos.Pos.mul_eq_1_l	40
Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0	synth with cache (only 1: now destruct p, q).	0.0324959754944	1
Coq.PArith.BinPos.Pos.square_xO	40	4.0.2	synth with cache (only 1: simpl; only 1: f_equal; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r).	0.0270881652832	11
Coq.PArith.BinPos.Pos.square_xI	40
Coq.PArith.BinPos.Pos.iter_swap_gen	40
Coq.PArith.BinPos.Pos.iter_swap	40
Coq.PArith.BinPos.Pos.iter_succ	40
Coq.PArith.BinPos.Pos.iter_add	40
Coq.PArith.BinPos.Pos.iter_invariant	40
Coq.PArith.BinPos.Pos.pow_1_r	40	1.1.4.1.5.1.9.14.8	synth with cache (only 1: apply succ_inj; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: reflexivity || apply f_equal || exfalso; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r; only 1: simpl; only 1: now f_equal).	38.4552249908	58198
Coq.PArith.BinPos.Pos.pow_succ_r	40
Coq.PArith.BinPos.Pos.square_spec	40
Coq.PArith.BinPos.Pos.sub_mask_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40
Coq.PArith.BinPos.Pos.sub_mask_spec	40
Coq.PArith.BinPos.Pos.sub_mask_nul_iff	40
Coq.PArith.BinPos.Pos.sub_mask_diag	40	3.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp).	0.0260078907013	10
Coq.PArith.BinPos.Pos.sub_mask_add	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40
Coq.PArith.BinPos.Pos.sub_mask_pos_iff	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff	40
Coq.PArith.BinPos.Pos.eqb_eq	40	2.6.1	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: Bool.destr_bool).	0.213603019714	202
Coq.PArith.BinPos.Pos.ltb_lt	40
Coq.PArith.BinPos.Pos.leb_le	40	10.15.0	synth with cache (only 1: revert q; only 1: fix odd_spec 1; only 1: easy).	9.40624403954	7270
Coq.PArith.BinPos.Pos.compare_cont_spec	40
Coq.PArith.BinPos.Pos.compare_cont_Eq	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	40
Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	40	0.0.0.0.3.1	synth with cache (only 1: unfold ltb, lt; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.645813941956	79
Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	40	0.0.0.0.0.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold gt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.0508959293365	6
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	40	0.0.0.0.0.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold le; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.0472798347473	6
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	40	0.0.0.0.0.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold ge; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.0476818084717	6
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	40	0.0.0.0.0.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.050929069519	6
Coq.PArith.BinPos.Pos.compare_xO_xO	40	1.1.1.0	synth with cache (only 1: destruct compare; only 1: easy'; only 1: trivial; only 1: easy').	0.0198140144348	7
Coq.PArith.BinPos.Pos.compare_xI_xI	40	0	synth with cache (only 1: reflexivity).	0.00868678092957	1
Coq.PArith.BinPos.Pos.compare_xI_xO	40
Coq.PArith.BinPos.Pos.compare_xO_xI	40
Coq.PArith.BinPos.Pos.compare_sub_mask	40
Coq.PArith.BinPos.Pos.lt_iff_add	40
Coq.PArith.BinPos.Pos.gt_iff_add	40
Coq.PArith.BinPos.Pos.compare_cont_refl	40	2.1.3.1.3.1.4.1.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: induction p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto).	2.70662212372	3103
Coq.PArith.BinPos.Pos.compare_cont_antisym	40
Coq.PArith.BinPos.Pos.compare_eq_iff	40
Coq.PArith.BinPos.Pos.compare_antisym	40
Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.1.0.1.0	synth with cache (only 1: unfold lt; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	0.0266308784485	7
Coq.PArith.BinPos.Pos.compare_le_iff	40	0.0.0.0.1	synth with cache (only 1: unfold le; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	0.0263681411743	6
Coq.PArith.BinPos.Pos.gt_lt_iff	40
Coq.PArith.BinPos.Pos.gt_lt	40	0.0	synth with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0188529491425	2
Coq.PArith.BinPos.Pos.lt_gt	40	0.0	synth with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.018786907196	2
Coq.PArith.BinPos.Pos.ge_le_iff	40	7.6.0	synth with cache (only 1: unfold ge, lt, compare; only 1: unfold le; only 1: now rewrite compare_antisym, CompOpp_iff).	6.01810908318	2537
Coq.PArith.BinPos.Pos.ge_le	40	0.0	synth with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0186820030212	2
Coq.PArith.BinPos.Pos.le_ge	40	0	synth with cache (only 1: apply ge_le_iff).	0.0101611614227	1
Coq.PArith.BinPos.Pos.compare_succ_r	40
Coq.PArith.BinPos.Pos.compare_succ_l	40
Coq.PArith.BinPos.Pos.lt_succ_r	40
Coq.PArith.BinPos.Pos.lt_succ_diag_r	40
Coq.PArith.BinPos.Pos.compare_succ_succ	40
Coq.PArith.BinPos.Pos.le_1_l	40	1.1.0.0.0.0.0.0	synth with cache (only 1: apply ge_le_iff; only 1: apply ge_le_iff; only 1: apply ge_le_iff; only 1: apply ge_le_iff; only 1: apply ge_le_iff; only 1: apply ge_le_iff; only 1: unfold le, ge; only 1: apply compare_succ_l || apply compare_succ_r || now destruct p || now destruct q).	0.0904068946838	17
Coq.PArith.BinPos.Pos.nlt_1_r	40	2.11.0	synth with cache (only 1: unfold ge, lt, compare; only 1: rewrite compare_cont_spec; only 1: now destruct compare || now destruct p).	0.838887929916	475
Coq.PArith.BinPos.Pos.lt_1_succ	40	0.2.8	synth with cache (only 1: cut (succ p = succ p); only 1: now destruct p; only 1: now f_equal).	0.136709928513	92
Coq.PArith.BinPos.Pos.le_nlt	40	1.0	synth with cache (only 1: unfold lt, le; only 1: now rewrite compare_antisym, CompOpp_iff).	0.954144001007	163
Coq.PArith.BinPos.Pos.lt_nle	40	2.4	synth with cache (only 1: unfold ltb, lt; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).	1.21650600433	222
Coq.PArith.BinPos.Pos.lt_le_incl	40	0.0.0.4.2	synth with cache (only 1: unfold lt, le; only 1: destruct compare; only 1: discriminate; only 1: discriminate; only 1: discriminate).	1.35315704346	268
Coq.PArith.BinPos.Pos.lt_lt_succ	40
Coq.PArith.BinPos.Pos.succ_lt_mono	40
Coq.PArith.BinPos.Pos.succ_le_mono	40	0.0	synth with cache (only 1: unfold lt, le; only 1: now rewrite compare_succ_succ).	0.0144870281219	2
Coq.PArith.BinPos.Pos.lt_trans	40
Coq.PArith.BinPos.Pos.lt_ind	40
Coq.PArith.BinPos.Pos.lt_strorder	40
Coq.PArith.BinPos.Pos.lt_compat	40	1	synth with cache (only 1: solve_proper).	0.322088956833	42
Coq.PArith.BinPos.Pos.lt_total	40
Coq.PArith.BinPos.Pos.le_refl	40
Coq.PArith.BinPos.Pos.le_lt_trans	40
Coq.PArith.BinPos.Pos.lt_le_trans	40
Coq.PArith.BinPos.Pos.le_trans	40
Coq.PArith.BinPos.Pos.le_succ_l	40
Coq.PArith.BinPos.Pos.le_antisym	40
Coq.PArith.BinPos.Pos.le_preorder	40
Coq.PArith.BinPos.Pos.le_partorder	40
Coq.PArith.BinPos.Pos.add_compare_mono_l	40
Coq.PArith.BinPos.Pos.add_compare_mono_r	40
Coq.PArith.BinPos.Pos.lt_add_diag_r	40
Coq.PArith.BinPos.Pos.add_lt_mono_l	40
Coq.PArith.BinPos.Pos.add_lt_mono_r	40	1.0.1.0	synth with cache (only 1: unfold lt; only 1: rewrite 2!(add_comm _ p); only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	0.0280728340149	6
Coq.PArith.BinPos.Pos.add_lt_mono	40
Coq.PArith.BinPos.Pos.add_le_mono_l	40	1.0.5	synth with cache (only 1: unfold lt, le; only 1: rewrite add_compare_mono_l; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0924060344696	26
Coq.PArith.BinPos.Pos.add_le_mono_r	40	1.1.0	synth with cache (only 1: unfold le; only 1: rewrite add_compare_mono_r; only 1: apply iff_refl).	0.0192239284515	5
Coq.PArith.BinPos.Pos.add_le_mono	40
Coq.PArith.BinPos.Pos.mul_compare_mono_l	40
Coq.PArith.BinPos.Pos.mul_compare_mono_r	40
Coq.PArith.BinPos.Pos.mul_lt_mono_l	40
Coq.PArith.BinPos.Pos.mul_lt_mono_r	40	2.0.5.0	synth with cache (only 1: unfold lt; only 1: rewrite 2!(mul_comm _ p); only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.175699949265	106
Coq.PArith.BinPos.Pos.mul_lt_mono	40
Coq.PArith.BinPos.Pos.mul_le_mono_l	40	2.1.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.0209369659424	6
Coq.PArith.BinPos.Pos.mul_le_mono_r	40	2.1.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).	0.0214140415192	6
Coq.PArith.BinPos.Pos.mul_le_mono	40
Coq.PArith.BinPos.Pos.lt_add_r	40	1.3	synth with cache (only 1: rewrite lt_iff_add; only 1: now exists q).	0.0164518356323	6
Coq.PArith.BinPos.Pos.lt_not_add_l	40
Coq.PArith.BinPos.Pos.pow_gt_1	40
Coq.PArith.BinPos.Pos.sub_1_r	40	1.0.1.19	synth with cache (only 1: induction p; only 1: trivial; only 1: reflexivity; only 1: reflexivity).	0.311392068863	310
Coq.PArith.BinPos.Pos.pred_sub	40	0	synth with cache (only 1: now destruct p).	0.011885881424	1
Coq.PArith.BinPos.Pos.sub_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_pos'	40	0.0.0.3.4.1.0.1.1.7.4.9	synth with cache (only 1: unfold lt; only 1: rewrite compare_sub_mask; only 1: case sub_mask_spec; only 1: discriminate; only 1: discriminate; only 1: intros r Hr _; only 1: exists r; only 1: split; only 1: now apply sub_mask_pos_iff; only 1: subst; only 1: revert q r; only 1: trivial).	36.8789620399	33129
Coq.PArith.BinPos.Pos.sub_mask_pos	40	4.0.0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: intros (r, Hr); only 1: exists r; only 1: now apply sub_mask_pos_iff).	0.0332908630371	13
Coq.PArith.BinPos.Pos.sub_add	40
Coq.PArith.BinPos.Pos.add_sub	40
Coq.PArith.BinPos.Pos.mul_sub_distr_l	40
Coq.PArith.BinPos.Pos.mul_sub_distr_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_r	40
Coq.PArith.BinPos.Pos.sub_decr	40
Coq.PArith.BinPos.Pos.add_sub_assoc	40
Coq.PArith.BinPos.Pos.sub_add_distr	40
Coq.PArith.BinPos.Pos.sub_sub_distr	40
Coq.PArith.BinPos.Pos.sub_xO_xO	40
Coq.PArith.BinPos.Pos.sub_xI_xI	40	0.3.1.0	synth with cache (only 1: unfold sub; only 1: simpl; only 1: intros H; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0248079299927	8
Coq.PArith.BinPos.Pos.sub_xI_xO	40	1.3.0.0	synth with cache (only 1: unfold sub; only 1: simpl; only 1: intros H; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0247709751129	8
Coq.PArith.BinPos.Pos.sub_xO_xI	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	40	0.2.0.4.0.0.0.0.7	synth with cache (only 1: rewrite lt_iff_add; only 1: split; only 1: case sub_mask_spec; only 1: discriminate; only 1: discriminate; only 1: intros r Hr _; only 1: now exists r; only 1: intros (r, <-); only 1: apply sub_mask_add_diag_r).	24.1216118336	16467
Coq.PArith.BinPos.Pos.sub_mask_neg	40	1.0	synth with cache (only 1: rewrite lt_iff_add; only 1: apply sub_mask_neg_iff).	0.0298662185669	11
Coq.PArith.BinPos.Pos.sub_le	40
Coq.PArith.BinPos.Pos.sub_lt	40	0.0.0.0.0.7.20	synth with cache (only 1: unfold lt; only 1: unfold le, sub; only 1: rewrite compare_sub_mask; only 1: destruct sub_mask; only 1: easy'; only 1: easy'; only 1: easy').	4.96689295769	6089
Coq.PArith.BinPos.Pos.sub_diag	40
Coq.PArith.BinPos.Pos.size_nat_monotone	40
Coq.PArith.BinPos.Pos.size_gt	40
Coq.PArith.BinPos.Pos.size_le	40
Coq.PArith.BinPos.Pos.max_l	40
Coq.PArith.BinPos.Pos.max_r	40	3.1.0.0.0.0	synth with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: now subst; only 1: auto; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	0.0684509277344	19
Coq.PArith.BinPos.Pos.min_l	40
Coq.PArith.BinPos.Pos.min_r	40	1.3.0.0.8.1	synth with cache (only 1: intros x y H; only 1: unfold le, min; only 1: case compare_spec; only 1: now subst; only 1: now rewrite <- compare_lt_iff, compare_nge_iff; only 1: auto).	6.67473983765	4284
Coq.PArith.BinPos.Pos.max_1_l	40
Coq.PArith.BinPos.Pos.max_1_r	40	1.1.0.2.0.2.0.0	synth with cache (only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.761221885681	513
Coq.PArith.BinPos.Pos.min_1_l	40	1.19	synth with cache (only 1: apply min_r || apply min_l; only 1: apply le_1_l).	0.299623966217	209
Coq.PArith.BinPos.Pos.min_1_r	40	1.3	synth with cache (only 1: apply min_r; only 1: apply le_1_l).	0.0800588130951	52
Coq.PArith.BinPos.Pos.succ_max_distr	40
Coq.PArith.BinPos.Pos.succ_min_distr	40
Coq.PArith.BinPos.Pos.add_max_distr_l	40
Coq.PArith.BinPos.Pos.add_max_distr_r	40
Coq.PArith.BinPos.Pos.add_min_distr_l	40
Coq.PArith.BinPos.Pos.add_min_distr_r	40	0.0.0.2	synth with cache (only 1: rewrite 3!(add_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	0.0245900154114	6
Coq.PArith.BinPos.Pos.mul_max_distr_l	40
Coq.PArith.BinPos.Pos.mul_max_distr_r	40
Coq.PArith.BinPos.Pos.mul_min_distr_l	40
Coq.PArith.BinPos.Pos.mul_min_distr_r	40	0.0.0.1	synth with cache (only 1: rewrite 3!(mul_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.0254590511322	5
Coq.PArith.BinPos.Pos.iter_op_succ	40
Coq.PArith.BinPos.Pos.of_nat_succ	40	0.6.8.1.115.32	synth with cache (only 1: simpl; only 1: induction n; only 1: now f_equal; only 1: simpl; only 1: f_equal; only 1: trivial).	17.0579750538	82214
Coq.PArith.BinPos.Pos.pred_of_succ_nat	40
Coq.PArith.BinPos.Pos.succ_of_nat	40	5.0.5.2.13	synth with cache (only 1: symmetry; only 1: destruct n; only 1: simpl; only 1: now destruct H; only 1: apply of_nat_succ).	5.77706003189	6241
Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40
Coq.PArith.BinPos.Pos.sqrtrem_spec	40
Coq.PArith.BinPos.Pos.sqrt_spec	40
Coq.PArith.BinPos.Pos.divide_add_cancel_l	40
Coq.PArith.BinPos.Pos.divide_xO_xI	40
Coq.PArith.BinPos.Pos.divide_xO_xO	40
Coq.PArith.BinPos.Pos.divide_mul_l	40
Coq.PArith.BinPos.Pos.divide_mul_r	40	3.9.11.5	synth with cache (only 1: revert q r; only 1: pose proof (sqrtrem_spec p) as H; only 1: fix sqrtrem_spec 1; only 1: auto).	9.44900417328	9173
Coq.PArith.BinPos.Pos.ggcdn_gcdn	40
Coq.PArith.BinPos.Pos.ggcd_gcd	40
Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	40
Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40
Coq.PArith.BinPos.Pos.gcd_divide_l	40
Coq.PArith.BinPos.Pos.gcd_divide_r	40
Coq.PArith.BinPos.Pos.gcdn_greatest	40
Coq.PArith.BinPos.Pos.gcd_greatest	40
Coq.PArith.BinPos.Pos.ggcd_greatest	40
Coq.PArith.BinPos.Peqb_true_eq	40
Coq.PArith.BinPos.Pcompare_eq_Gt	40	6.0	synth with cache (only 1: unfold Pos.gt; only 1: reflexivity).	0.223354101181	12
Coq.PArith.BinPos.Pminus_mask_Gt	40
Coq.PArith.BinPos.Pplus_minus	40	3.1.1.0.0.10	synth with cache (only 1: intros p q H; only 1: unfold Pos.sub; only 1: apply Pos.gt_lt in H; only 1: destruct (Pos.sub_mask_pos p q H) as (r, U); only 1: rewrite U; only 1: now apply Pos.sub_mask_pos_iff).	1.1010658741	1568
Coq.PArith.BinPos.Dcompare	40	2.2.2.12.2	synth with cache (only 1: intro H; only 1: reflexivity || destruct H; only 1: now intuition; only 1: now intuition; only 1: now intuition).	1.16340398788	544
Coq.Arith.Le.le_n_0_eq	40	0.14	synth with cache (only 1: inversion 1; only 1: now subst).	0.257040977478	220
Coq.Arith.Le.le_elim_rel	40	1.11.2.13	synth with cache (only 1: intros b LT; only 1: intros a Ha; only 1: fix le_div2 1; only 1: trivial).	7.29562401772	15042
Coq.Arith.Even.even_equiv	40	0.9.0.9.18.2	synth with cache (only 1: intros x; only 1: split; only 1: fix even_spec 1; only 1: now Morphisms.f_equiv; only 1: fix even_spec 1; only 1: now Morphisms.f_equiv).	7.27604913712	12613
Coq.Arith.Even.odd_equiv	40
Coq.Arith.Even.even_or_odd	40
Coq.Arith.Even.even_odd_dec	40	1.1.1.0.0.0.0	synth with cache (only 1: induction n; only 1: auto with arith; only 1: elim IHn; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.120760917664	45
Coq.Arith.Even.not_even_and_odd	40	2.5.5.7.15.0	synth with cache (only 1: induction n; only 1: intro H1; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto with arith).	3.62088894844	6639
Coq.Arith.Even.even_plus_split	40
Coq.Arith.Even.odd_plus_split	40	0	synth with cache (only 1: parity_binop).	0.113484144211	1
Coq.Arith.Even.even_even_plus	40	0	synth with cache (only 1: parity_binop).	0.0412750244141	1
Coq.Arith.Even.odd_plus_l	40	0	synth with cache (only 1: parity_binop).	0.040796995163	1
Coq.Arith.Even.odd_plus_r	40	0	synth with cache (only 1: parity_binop).	0.0821249485016	1
Coq.Arith.Even.odd_even_plus	40	0	synth with cache (only 1: parity_binop).	0.0410079956055	1
Coq.Arith.Even.even_plus_aux	40	0	synth with cache (only 1: parity_binop).	0.13220500946	1
Coq.Arith.Even.even_plus_even_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0548892021179	1
Coq.Arith.Even.even_plus_even_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0403740406036	1
Coq.Arith.Even.even_plus_odd_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0408880710602	1
Coq.Arith.Even.even_plus_odd_inv_l	40	0	synth with cache (only 1: parity_binop).	0.151257991791	1
Coq.Arith.Even.odd_plus_even_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0424001216888	1
Coq.Arith.Even.odd_plus_even_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0404570102692	1
Coq.Arith.Even.odd_plus_odd_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0550611019135	1
Coq.Arith.Even.odd_plus_odd_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0410919189453	1
Coq.Arith.Even.even_mult_aux	40	0	synth with cache (only 1: parity_binop).	0.13331413269	1
Coq.Arith.Even.even_mult_l	40	0	synth with cache (only 1: parity_binop).	0.0265159606934	1
Coq.Arith.Even.even_mult_r	40	0	synth with cache (only 1: parity_binop).	0.0278248786926	1
Coq.Arith.Even.even_mult_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0610020160675	1
Coq.Arith.Even.even_mult_inv_l	40	0	synth with cache (only 1: parity_binop).	0.041580915451	1
Coq.Arith.Even.odd_mult	40	0	synth with cache (only 1: parity_binop).	0.0415589809418	1
Coq.Arith.Even.odd_mult_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0292711257935	1
Coq.Arith.Even.odd_mult_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0269169807434	1
Coq.Arith.Minus.minus_n_O	40	2	synth with cache (only 1: now destruct n).	0.024386882782	3
Coq.Arith.Minus.minus_Sn_m	40
Coq.Arith.Minus.pred_of_minus	40	0	synth with cache (only 1: now Nat.nzsimpl').	0.0573830604553	1
Coq.Arith.Minus.minus_diag_reverse	40	16.9.30	synth with cache (only 1: induction n; only 1: split; only 1: auto).	2.59155106544	3219
Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	6.0.24.9	synth with cache (only 1: Nat.induct p; only 1: trivial; only 1: intros p IH; only 1: now rewrite IH).	7.09380793571	5341
Coq.Arith.Minus.plus_minus	40
Coq.Arith.Minus.minus_plus	40	34	synth with cache (only 1: now apply Nat.add_sub_eq_l).	0.788406133652	951
Coq.Arith.Minus.le_plus_minus_r	40
Coq.Arith.Minus.le_plus_minus	40	11.1.8.0	synth with cache (only 1: rewrite Nat.add_comm; only 1: symmetry; only 1: apply Nat.sub_add; only 1: trivial).	9.08174300194	7594
Coq.Arith.Minus.lt_O_minus_lt	40
Coq.Arith.Minus.not_le_minus_0	40
Coq.Arith.Between.Between.bet_eq	40	8.12.2	synth with cache (only 1: intros x y H; only 1: rewrite <- H; only 1: intuition).	2.84548783302	3645
Coq.Arith.Between.Between.between_le	40	0.0.15	synth with cache (only 1: induction 1; only 1: trivial; only 1: auto with arith).	1.50333285332	739
Coq.Arith.Between.Between.between_Sk_l	40	0.0.10.0.2.0.4	synth with cache (only 1: intro n; only 1: induction 1; only 1: intro H; only 1: false_hyp H PeanoNat.Nat.lt_irrefl; only 1: inversion 1; only 1: auto with arith; only 1: auto with arith).	2.3059899807	1674
Coq.Arith.Between.Between.between_restr	40	0.0.0.0	synth with cache (only 1: induction 1 as [| * [| ]]; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.043576002121	4
Coq.Arith.Between.Between.exists_le_S	40	0.0.4	synth with cache (only 1: induction 1; only 1: auto with arith; only 1: auto with arith).	0.132924795151	55
Coq.Arith.Between.Between.exists_S_le	40	0.1.6.10	synth with cache (only 1: intro m; only 1: intros; only 1: apply Peano.le_S_n; only 1: auto with arith).	2.0874080658	1997
Coq.Arith.Between.Between.in_int_intro	40	0.0.10.2	synth with cache (only 1: intro n; only 1: constructor; only 1: PeanoNat.Nat.order; only 1: PeanoNat.Nat.order).	0.65989613533	458
Coq.Arith.Between.Between.in_int_lt	40	12.9.8.5	synth with cache (only 1: intro n; only 1: intros k H1 H2; only 1: elim H2; only 1: PeanoNat.Nat.Private_Tac.order || (right; PeanoNat.Nat.Private_Tac.order) || (left; PeanoNat.Nat.Private_Tac.order)).	4.93094801903	5544
Coq.Arith.Between.Between.in_int_p_Sq	40
Coq.Arith.Between.Between.in_int_S	40	0.0.1.0.0.0.0.0	synth with cache (only 1: intros p q r []; only 1: destruct (le_lt_or_eq r q); only 1: PeanoNat.Nat.order; only 1: destruct (le_lt_or_eq r q); only 1: PeanoNat.Nat.order; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.141332864761	21
Coq.Arith.Between.Between.in_int_Sp_q	40	0.0	synth with cache (only 1: intros p q r []; only 1: auto with arith).	0.0313220024109	2
Coq.Arith.Between.Between.between_in_int	40	0.0.38.8	synth with cache (only 1: intros Compat Hl Hr; only 1: fix le_div2 1; only 1: intros * []; only 1: auto with arith).	11.6609089375	15091
Coq.Arith.Between.Between.in_int_between	40	2.2.1.0	synth with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: auto with arith).	0.0674138069153	11
Coq.Arith.Between.Between.exists_in_int	40	0.1.38	synth with cache (only 1: fix le_div2 1; only 1: intros; only 1: auto with arith).	6.09166789055	7493
Coq.Arith.Between.Between.in_int_exists	40	1.42	synth with cache (only 1: fix even_spec 1; only 1: auto with arith).	8.07782316208	12191
Coq.Arith.Between.Between.between_or_exists	40
Coq.Arith.Between.Between.between_not_exists	40
Coq.Arith.Between.Between.nth_le	40
Coq.Arith.Between.Between.event_O	40
Coq.Arith.Peano_dec.O_or_S	40
Coq.Arith.Peano_dec.dec_eq_nat	40
Coq.Arith.Peano_dec.le_unique	40
Coq.Arith.Mult.mult_assoc_reverse	40
Coq.Arith.Mult.mult_is_O	40
Coq.Arith.Mult.mult_is_one	40
Coq.Arith.Mult.mult_O_le	40
Coq.Arith.Mult.mult_le_compat_l	40
Coq.Arith.Mult.mult_le_compat_r	40
Coq.Arith.Mult.mult_le_compat	40
Coq.Arith.Mult.mult_S_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_r	40
Coq.Arith.Mult.mult_S_le_reg_l	40
Coq.Arith.Mult.odd_even_lem	40
Coq.Arith.Mult.mult_acc_aux	40
Coq.Arith.Mult.mult_tail_mult	40
Coq.Arith.Div2.ind_0_1_SS	40	0.0.0.2.4.3.4.3	synth with cache (only 1: intros A A_wd A0 AS; only 1: assert (D : forall n, A n /\ A (S n)); only 1: Nat.induct ltac:(n); only 1: auto; only 1: intros n [IH1 IH2]; only 1: auto; only 1: intro n; only 1: exact (proj1 (D n))).	3.25701904297	3678
Coq.Arith.Div2.lt_div2	40	2.3.6.0.0.0	synth with cache (only 1: destruct n; only 1: inversion 1; only 1: intros _; only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	1.34403991699	1551
Coq.Arith.Div2.even_div2	40	0.9.1.2.1	synth with cache (only 1: simpl; only 1: destruct n; only 1: constructor; only 1: fix le_div2 1; only 1: trivial).	1.17110586166	1139
Coq.Arith.Div2.odd_div2	40
Coq.Arith.Div2.div2_even	40	6.18	synth with cache (only 1: fix le_div2 1; only 1: trivial).	8.18363213539	7889
Coq.Arith.Div2.div2_odd	40	8.13.20.0	synth with cache (only 1: rewrite odd_equiv; only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	21.6009089947	39624
Coq.Arith.Div2.even_odd_div2	40
Coq.Arith.Div2.double_S	40
Coq.Arith.Div2.double_plus	40
Coq.Arith.Div2.even_odd_double	40
Coq.Arith.Div2.even_2n	40	0.0.43.12	synth with cache (only 1: intro n; only 1: fix even_equiv 1; only 1: destruct (even_odd_double n) as ((Ev, Ev'), (Od, Od')); only 1: auto with arith).	3.24426293373	12472
Coq.Arith.Div2.odd_S2n	40	0.0.0	synth with cache (only 1: intros n H; only 1: exists (Nat.div2 n); only 1: auto with arith).	0.0234110355377	3
Coq.Arith.Div2.div2_double	40	2.3	synth with cache (only 1: simpl Nat.mul; only 1: apply Nat.div2_double).	0.169955015182	49
Coq.Arith.Div2.div2_double_plus_one	40	1.6	synth with cache (only 1: rewrite Nat.div2_succ_double; only 1: tauto).	0.165633201599	74
Coq.Arith.Plus.plus_assoc_reverse	40
Coq.Arith.Plus.plus_reg_l	40
Coq.Arith.Plus.plus_le_reg_l	40
Coq.Arith.Plus.plus_lt_reg_l	40
Coq.Arith.Plus.plus_le_compat_l	40	13	synth with cache (only 1: apply Nat.add_le_mono_l).	0.52369093895	94
Coq.Arith.Plus.plus_le_compat_r	40
Coq.Arith.Plus.plus_lt_compat_l	40	7	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.0658578872681	12
Coq.Arith.Plus.plus_lt_compat_r	40
Coq.Arith.Plus.plus_le_compat	40
Coq.Arith.Plus.plus_le_lt_compat	40
Coq.Arith.Plus.plus_lt_le_compat	40	18	synth with cache (only 1: apply Nat.add_le_mono).	0.0763850212097	145
Coq.Arith.Plus.plus_lt_compat	40	7.12.25	synth with cache (only 1: intros H; only 1: apply Nat.add_le_lt_mono; only 1: intuition Nat.order).	1.05277895927	2392
Coq.Arith.Plus.le_plus_l	40
Coq.Arith.Plus.le_plus_r	40	17.0.60	synth with cache (only 1: induction n; only 1: now Nat.nzsimpl; only 1: now right).	2.89334321022	3908
Coq.Arith.Plus.le_plus_trans	40
Coq.Arith.Plus.lt_plus_trans	40
Coq.Arith.Plus.plus_is_O	40	33.0.0.0.0.3	synth with cache (only 1: Nat.induct n; only 1: Nat.nzsimpl; only 1: tauto; only 1: intros n IH; only 1: Nat.nzsimpl; only 1: now Morphisms.f_equiv).	37.2023801804	36252
Coq.Arith.Plus.plus_is_one	40
Coq.Arith.Plus.plus_tail_plus	40
Coq.Arith.Plus.succ_plus_discr	40	15.4.9.8	synth with cache (only 1: induction n; only 1: now Nat.nzsimpl; only 1: Nat.nzsimpl; only 1: auto).	12.1316649914	10256
Coq.Arith.Lt.lt_le_S	40	8	synth with cache (only 1: Nat.order).	0.0160021781921	9
Coq.Arith.Lt.lt_n_Sm_le	40	0	synth with cache (only 1: apply le_S_n).	0.0142178535461	1
Coq.Arith.Lt.le_lt_n_Sm	40	2	synth with cache (only 1: apply Nat.lt_succ_r).	0.021656036377	11
Coq.Arith.Lt.le_not_lt	40	2	synth with cache (only 1: Nat.order).	0.0156569480896	3
Coq.Arith.Lt.lt_not_le	40	0	synth with cache (only 1: intuition Nat.order).	0.0155260562897	1
Coq.Arith.Lt.neq_0_lt	40	3.0	synth with cache (only 1: intro H1; only 1: Nat.auto').	0.0201380252838	5
Coq.Arith.Lt.lt_0_neq	40	6.0	synth with cache (only 1: intro H1; only 1: Nat.order).	0.0229561328888	8
Coq.Arith.Lt.lt_n_S	40	21	synth with cache (only 1: apply Nat.lt_succ_r).	0.0818440914154	209
Coq.Arith.Lt.lt_S_n	40	1	synth with cache (only 1: apply Nat.succ_lt_mono).	0.0140380859375	2
Coq.Arith.Lt.S_pred	40	11.0.45.1.0.19	synth with cache (only 1: Nat.cases n; only 1: intro H; only 1: exfalso; only 1: now Nat.nzsimpl; only 1: intros n _; only 1: reflexivity).	23.5650980473	40838
Coq.Arith.Lt.S_pred_pos	40	11.7.0.1.0.30	synth with cache (only 1: Nat.cases n; only 1: intro H; only 1: exfalso; only 1: false_hyp H Nat.lt_irrefl; only 1: intros n _; only 1: reflexivity).	15.7422449589	16312
Coq.Arith.Lt.lt_pred	40	8.2.3.2.1.43	synth with cache (only 1: destruct m; only 1: intro H; only 1: exfalso; only 1: apply (Nat.lt_irrefl (S n)); only 1: easy; only 1: apply Nat.succ_lt_mono).	1.89965510368	6250
Coq.Arith.Lt.lt_pred_n_n	40
Coq.Arith.Lt.le_lt_or_eq	40
Coq.Arith.Lt.nat_total_order	40
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_ltof	40
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_gtof	40
Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof1	40
Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof1	40
Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof2	40	3	synth with cache (only 1: exact induction_ltof1).	0.308761119843	116
Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof2	40	0	synth with cache (only 1: exact induction_ltof1).	0.011157989502	1
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_lt_compat	40
Coq.Arith.Wf_nat.lt_wf	40
Coq.Arith.Wf_nat.lt_wf_rec1	40
Coq.Arith.Wf_nat.lt_wf_rec	40	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.0125291347504	1
Coq.Arith.Wf_nat.lt_wf_ind	40	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).	0.0121622085571	1
Coq.Arith.Wf_nat.gt_wf_rec	40	3	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).	0.0137360095978	4
Coq.Arith.Wf_nat.lt_wf_double_rec	40
Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.1.1.1.1.2	synth with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rec; only 1: intros n H q; only 1: apply lt_wf_rec; only 1: auto with arith).	0.598345041275	247
Coq.Arith.Wf_nat.LT_WF_REL.acc_lt_rel	40
Coq.Arith.Wf_nat.LT_WF_REL.well_founded_inv_lt_rel_compat	40
Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40
Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40
Coq.Arith.Factorial.lt_O_fact	40
Coq.Arith.Factorial.fact_neq_0	40
Coq.Arith.Factorial.fact_le	40
Coq.Arith.Compare_dec.zerop	40
Coq.Arith.Compare_dec.lt_eq_lt_dec	40
Coq.Arith.Compare_dec.gt_eq_gt_dec	40
Coq.Arith.Compare_dec.le_lt_dec	40
Coq.Arith.Compare_dec.le_le_S_dec	40	2.1.1.2.4.1.5	synth with cache (only 1: induction n in m |- *; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: elim (IHn m); only 1: auto with arith; only 1: auto with arith).	37.7582678795	34945
Coq.Arith.Compare_dec.le_ge_dec	40	2.1.1.6.2.8.0	synth with cache (only 1: induction n in m |- *; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: elim (IHn m); only 1: auto with arith; only 1: auto with arith).	2.80868792534	2347
Coq.Arith.Compare_dec.le_gt_dec	40	16	synth with cache (only 1: exact (le_lt_dec n m)).	0.133939027786	117
Coq.Arith.Compare_dec.le_lt_eq_dec	40
Coq.Arith.Compare_dec.le_dec	40	1.1.3	synth with cache (only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).	0.209769010544	70
Coq.Arith.Compare_dec.lt_dec	40	1.1.2.0.3.1.0.1.2.3	synth with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: left; only 1: apply Peano.le_n_S, Peano.le_0_n; only 1: destruct m; only 1: auto with arith; only 1: elim (IHn m); only 1: auto with arith; only 1: auto with arith).	12.5420610905	12692
Coq.Arith.Compare_dec.gt_dec	40
Coq.Arith.Compare_dec.ge_dec	40	2.0.7	synth with cache (only 1: destruct m; only 1: auto with arith; only 1: apply le_dec).	0.912839889526	382
Coq.Arith.Compare_dec.dec_le	40
Coq.Arith.Compare_dec.dec_lt	40
Coq.Arith.Compare_dec.dec_gt	40	13	synth with cache (only 1: apply Nat.lt_decidable).	0.070366859436	61
Coq.Arith.Compare_dec.dec_ge	40	3	synth with cache (only 1: apply Nat.le_decidable).	0.0455279350281	22
Coq.Arith.Compare_dec.not_eq	40	2	synth with cache (only 1: apply Nat.lt_gt_cases).	0.0259628295898	3
Coq.Arith.Compare_dec.not_le	40	1	synth with cache (only 1: apply Nat.lt_nge).	0.0149390697479	2
Coq.Arith.Compare_dec.not_gt	40	0	synth with cache (only 1: apply Nat.le_ngt).	0.0136649608612	1
Coq.Arith.Compare_dec.not_ge	40	5	synth with cache (only 1: intuition Nat.order).	0.0263612270355	6
Coq.Arith.Compare_dec.not_lt	40	10	synth with cache (only 1: apply Nat.le_ngt).	0.225405931473	52
Coq.Arith.Compare_dec.nat_compare_lt	40
Coq.Arith.Compare_dec.nat_compare_gt	40
Coq.Arith.Compare_dec.nat_compare_le	40
Coq.Arith.Compare_dec.nat_compare_ge	40
Coq.Arith.Compare_dec.nat_compare_eq	40	1.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: auto).	1.88813400269	894
Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	0	synth with cache (only 1: apply Nat.compare_lt_iff).	0.0146338939667	1
Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	0	synth with cache (only 1: apply Nat.compare_gt_iff).	0.0154359340668	1
Coq.Arith.Compare_dec.nat_compare_equiv	40
Coq.Arith.Compare_dec.leb_iff_conv	40
Coq.Arith.Compare_dec.leb_correct	40
Coq.Arith.Compare_dec.leb_complete	40	0	synth with cache (only 1: apply Nat.leb_le).	0.0168399810791	1
Coq.Arith.Compare_dec.leb_correct_conv	40	0.0	synth with cache (only 1: rewrite Nat.leb_nle; only 1: intuition Nat.order).	0.0270071029663	2
Coq.Arith.Compare_dec.leb_complete_conv	40	0	synth with cache (only 1: apply leb_iff_conv).	0.014858007431	1
Coq.Arith.Compare_dec.leb_compare	40
Coq.Arith.EqNat.eq_nat_refl	40	3.9.14	synth with cache (only 1: induction n; only 1: now f_equal; only 1: trivial).	0.190824985504	487
Coq.Arith.EqNat.eq_nat_is_eq	40	0.1.2.1.1.4.0.4.5.0.1.1.3	synth with cache (only 1: revert m; only 1: induction n; only 1: intro n; only 1: induction n; only 1: easy; only 1: now Nat.nzsimpl; only 1: simpl; only 1: destruct m; only 1: easy; only 1: rewrite ?IHn; only 1: split; only 1: now intros ->; only 1: now injection 1).	31.9143490791	23109
Coq.Arith.EqNat.eq_eq_nat	40	1.0.0.0.0.1	synth with cache (only 1: intros <-; only 1: induction n; only 1: simpl; only 1: tauto; only 1: simpl; only 1: apply eq_nat_refl).	0.101745128632	86
Coq.Arith.EqNat.eq_nat_eq	40	6.0	synth with cache (only 1: revert m; only 1: apply eq_nat_is_eq).	0.278116941452	90
Coq.Arith.EqNat.eq_nat_elim	40
Coq.Arith.EqNat.eq_nat_decide	40
Coq.Arith.EqNat.beq_nat_refl	40	3.1.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: tauto; only 1: easy).	0.024139881134	18
Coq.Arith.EqNat.beq_nat_true	40
Coq.Arith.EqNat.beq_nat_false	40
Coq.Arith.EqNat.beq_nat_eq	40
Coq.Arith.Euclid.eucl_dev	40
Coq.Arith.Euclid.quotient	40
Coq.Arith.Euclid.modulo	40
Coq.Arith.PeanoNat.Nat.bi_induction	40	31.0.1	synth with cache (only 1: induction n; only 1: simpl_relation; only 1: firstorder).	7.72161698341	7312
Coq.Arith.PeanoNat.Nat.recursion_wd	40
Coq.Arith.PeanoNat.Nat.recursion_0	40	1	synth with cache (only 1: trivial).	0.00551795959473	2
Coq.Arith.PeanoNat.Nat.recursion_succ	40	0.0.3.19.1	synth with cache (only 1: simpl; only 1: compute; only 1: induction n; only 1: auto; only 1: auto).	10.4427468777	21159
Coq.Arith.PeanoNat.Nat.pred_succ	40	0.1.0.0	synth with cache (only 1: simpl; only 1: induction n; only 1: trivial; only 1: trivial).	0.01056599617	5
Coq.Arith.PeanoNat.Nat.pred_0	40	0	synth with cache (only 1: reflexivity).	0.0048360824585	1
Coq.Arith.PeanoNat.Nat.one_succ	40	0	synth with cache (only 1: auto).	0.00502800941467	1
Coq.Arith.PeanoNat.Nat.two_succ	40	0	synth with cache (only 1: reflexivity).	0.00618696212769	1
Coq.Arith.PeanoNat.Nat.add_0_l	40	0	synth with cache (only 1: auto).	0.00545716285706	1
Coq.Arith.PeanoNat.Nat.add_succ_l	40	0.0.2.0.0.0	synth with cache (only 1: simpl; only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto).	0.0123970508575	8
Coq.Arith.PeanoNat.Nat.sub_0_r	40	0.1.5	synth with cache (only 1: induction n; only 1: trivial; only 1: trivial).	0.010204076767	9
Coq.Arith.PeanoNat.Nat.sub_succ_r	40	0.0.4.2.2.4.13	synth with cache (only 1: revert m; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: destruct m; only 1: now destruct n; only 1: now destruct n).	12.6860489845	18705
Coq.Arith.PeanoNat.Nat.mul_0_l	40	0	synth with cache (only 1: auto).	0.00585508346558	1
Coq.Arith.PeanoNat.Nat.mul_succ_l	40
Coq.Arith.PeanoNat.Nat.lt_succ_r	40	0.0.6.7.8.4.1	synth with cache (only 1: constructor; only 1: exact (le_pred (S n) (S m)); only 1: revert m; only 1: induction 1; only 1: constructor; only 1: constructor; only 1: trivial).	16.8210690022	36893
Coq.Arith.PeanoNat.Nat.eqb_eq	40
Coq.Arith.PeanoNat.Nat.leb_le	40
Coq.Arith.PeanoNat.Nat.ltb_lt	40
Coq.Arith.PeanoNat.Nat.eq_dec	40	0	synth with cache (only 1: decide equality).	0.00997614860535	1
Coq.Arith.PeanoNat.Nat.compare_eq_iff	40
Coq.Arith.PeanoNat.Nat.compare_lt_iff	40
Coq.Arith.PeanoNat.Nat.compare_le_iff	40
Coq.Arith.PeanoNat.Nat.compare_antisym	40	2.1.0.2.0.1.0.2.1.0.1.1	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: destruct m; only 1: easy; only 1: simpl; only 1: revert m; only 1: easy).	3.76546883583	5500
Coq.Arith.PeanoNat.Nat.compare_succ	40	0.1	synth with cache (only 1: simpl; only 1: trivial).	0.0082471370697	3
Coq.Arith.PeanoNat.Nat.max_l	40	0.1.2.0.0.0.0.0.1.1.0	synth with cache (only 1: induction n; only 1: simpl; only 1: inversion 1; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	4.82073307037	4425
Coq.Arith.PeanoNat.Nat.max_r	40	0.1.2.0.1.0.0.0.1.0	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	4.90791797638	4347
Coq.Arith.PeanoNat.Nat.min_l	40	0.1.2.0.1.0.0.0.1.0	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	5.2462439537	4717
Coq.Arith.PeanoNat.Nat.min_r	40	0.1.2.0.0.0.0.0.1.1.0	synth with cache (only 1: induction n; only 1: simpl; only 1: inversion 1; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	4.84850597382	4190
Coq.Arith.PeanoNat.Nat.pow_neg_r	40	28	synth with cache (only 1: now nzsimpl).	0.341017007828	604
Coq.Arith.PeanoNat.Nat.pow_0_r	40	19	synth with cache (only 1: reflexivity).	0.0879058837891	253
Coq.Arith.PeanoNat.Nat.pow_succ_r	40	0.0.0	synth with cache (only 1: inversion 1; only 1: reflexivity; only 1: reflexivity).	0.0140750408173	3
Coq.Arith.PeanoNat.Nat.square_spec	40	15	synth with cache (only 1: reflexivity).	0.184854984283	102
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	40	2.2.7.24	synth with cache (only 1: inversion 1; only 1: destruct H; only 1: rewrite <- plus_n_Sm in H; only 1: now inversion H).	1.41848087311	3914
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40
Coq.Arith.PeanoNat.Nat.even_spec	40
Coq.Arith.PeanoNat.Nat.odd_spec	40	8.1	synth with cache (only 1: fix even_spec 1; only 1: destr_bool).	0.189074993134	122
Coq.Arith.PeanoNat.Nat.divmod_spec	40
Coq.Arith.PeanoNat.Nat.div_mod	40
Coq.Arith.PeanoNat.Nat.mod_bound_pos	40
Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	40
Coq.Arith.PeanoNat.Nat.sqrt_specif	40
Coq.Arith.PeanoNat.Nat.sqrt_neg	40	8	synth with cache (only 1: inversion 1).	0.0141479969025	9
Coq.Arith.PeanoNat.Nat.log2_iter_spec	40
Coq.Arith.PeanoNat.Nat.log2_spec	40
Coq.Arith.PeanoNat.Nat.log2_nonpos	40	1.2	synth with cache (only 1: inversion 1; only 1: trivial).	0.0228800773621	18
Coq.Arith.PeanoNat.Nat.gcd_divide	40
Coq.Arith.PeanoNat.Nat.gcd_divide_l	40	2.0.2.0.0.3	synth with cache (only 1: intros [| a] b; only 1: simpl; only 1: now exists 0; only 1: destruct (gcd_divide (b mod S a) (S a)) as (H, H'); only 1: set (a' := S a) in *; only 1: auto).	0.48276591301	387
Coq.Arith.PeanoNat.Nat.gcd_divide_r	40	0.2	synth with cache (only 1: intros; only 1: apply gcd_divide).	0.03253698349	19
Coq.Arith.PeanoNat.Nat.gcd_greatest	40	6.2.5	synth with cache (only 1: fix gcd_divide 1; only 1: intros; only 1: auto).	0.904429912567	704
Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	38	synth with cache (only 1: apply le_0_l).	0.643195867538	1175
Coq.Arith.PeanoNat.Nat.div2_double	40	0.0.1.2.22.9.8	synth with cache (only 1: simpl; only 1: nzsimpl; only 1: induction n; only 1: now rewrite add_0_l; only 1: simpl; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	8.0462038517	7073
Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.0.1.1.2.3	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite add_succ_r; only 1: simpl; only 1: now f_equal).	0.412698030472	219
Coq.Arith.PeanoNat.Nat.le_div2	40
Coq.Arith.PeanoNat.Nat.lt_div2	40
Coq.Arith.PeanoNat.Nat.div2_decr	40	0.6	synth with cache (only 1: fix le_div2 1; only 1: trivial).	0.0220561027527	17
Coq.Arith.PeanoNat.Nat.double_twice	40	0.8.0	synth with cache (only 1: intro n; only 1: simpl; only 1: now rewrite !add_0_r).	0.0399091243744	35
Coq.Arith.PeanoNat.Nat.testbit_0_l	40	1.23	synth with cache (only 1: fix odd_spec 1; only 1: easy).	0.508791923523	999
Coq.Arith.PeanoNat.Nat.testbit_odd_0	40	2.9.2.5.19.0.14.1	synth with cache (only 1: nzsimpl'; only 1: simpl; only 1: unfold odd; only 1: apply eq_true_iff_eq; only 1: split; only 1: trivial; only 1: fix odd_spec 1; only 1: trivial).	14.5847818851	25518
Coq.Arith.PeanoNat.Nat.testbit_even_0	40	2.5.7.3.15.1.3.0	synth with cache (only 1: unfold testbit; only 1: nzsimpl'; only 1: unfold odd; only 1: apply eq_true_iff_eq; only 1: split; only 1: fix odd_spec 1; only 1: trivial; only 1: discriminate).	4.22951889038	7220
Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	40
Coq.Arith.PeanoNat.Nat.testbit_even_succ'	40
Coq.Arith.PeanoNat.Nat.shiftr_specif	40	3.11.2	synth with cache (only 1: unfold testbit, odd; only 1: fix even_spec 1; only 1: trivial).	10.2405910492	9014
Coq.Arith.PeanoNat.Nat.shiftl_specif_high	40	1.5.1.2.8	synth with cache (only 1: intros n m H; only 1: unfold testbit; only 1: unfold odd; only 1: fix even_spec 1; only 1: trivial).	5.25560092926	5385
Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40	6.7.9	synth with cache (only 1: unfold testbit, odd; only 1: fix even_spec 1; only 1: trivial).	6.66709899902	7909
Coq.Arith.PeanoNat.Nat.div2_bitwise	40	2.7.14.21	synth with cache (only 1: intros z n H; only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	23.4687979221	35253
Coq.Arith.PeanoNat.Nat.odd_bitwise	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	40
Coq.Arith.PeanoNat.Nat.land_spec	40
Coq.Arith.PeanoNat.Nat.ldiff_spec	40	3.0.1	synth with cache (only 1: apply testbit_bitwise_1; only 1: destr_bool; only 1: trivial).	0.0126740932465	7
Coq.Arith.PeanoNat.Nat.lor_spec	40
Coq.Arith.PeanoNat.Nat.lxor_spec	40
Coq.Arith.PeanoNat.Nat.div2_spec	40	2	synth with cache (only 1: eauto).	0.00883293151855	3
Coq.Arith.PeanoNat.Nat.testbit_neg_r	40	3.1.0.1	synth with cache (only 1: unfold testbit; only 1: fold testbit; only 1: unfold testbit; only 1: inversion H).	0.0232429504395	16
Coq.Arith.PeanoNat.Nat.tail_add_spec	40
Coq.Arith.PeanoNat.Nat.tail_addmul_spec	40
Coq.Arith.PeanoNat.Nat.tail_mul_spec	40
Coq.Arith.PeanoNat.TestOrder.test	40	1.3	synth with cache (only 1: intros n m Hn; only 1: Nat.Private_Tac.order).	0.0506319999695	39
Coq.Arith.Compare.discrete_nat	40
Coq.Arith.Gt.gt_n_S	40	5	synth with cache (only 1: apply Nat.succ_lt_mono).	0.0232059955597	15
Coq.Arith.Gt.gt_S_n	40	0	synth with cache (only 1: apply Nat.succ_lt_mono).	0.0126881599426	1
Coq.Arith.Gt.gt_S	40
Coq.Arith.Gt.gt_pred	40	0.15.4	synth with cache (only 1: Nat.cases m; only 1: now f_equal; only 1: apply Nat.succ_lt_mono).	4.32659292221	4410
Coq.Arith.Gt.le_not_gt	40	47.4	synth with cache (only 1: revert m; only 1: apply Nat.le_ngt).	2.98648405075	4059
Coq.Arith.Gt.gt_not_le	40	21.17	synth with cache (only 1: revert m; only 1: auto with arith).	3.2724339962	8043
Coq.Arith.Gt.le_S_gt	40	7	synth with cache (only 1: trivial).	0.0518040657043	21
Coq.Arith.Gt.gt_S_le	40	5	synth with cache (only 1: apply Peano.le_S_n).	0.0209989547729	6
Coq.Arith.Gt.gt_le_S	40	0	synth with cache (only 1: apply Nat.le_succ_l).	0.0145580768585	1
Coq.Arith.Gt.le_gt_S	40	0	synth with cache (only 1: apply Nat.succ_le_mono).	0.0148270130157	1
Coq.Arith.Gt.le_gt_trans	40
Coq.Arith.Gt.gt_le_trans	40
Coq.Arith.Gt.gt_trans	40
Coq.Arith.Gt.gt_trans_S	40	4.9.5	synth with cache (only 1: intros; only 1: apply Nat.succ_le_mono; only 1: now apply Nat.le_lt_trans with m).	3.55203294754	2050
Coq.Arith.Gt.gt_0_eq	40
Coq.Arith.Gt.plus_gt_reg_l	40
Coq.Arith.Gt.plus_gt_compat_l	40	0	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.0143620967865	1
Coq.Logic.SetoidChoice.setoid_choice	40
Coq.Logic.SetoidChoice.representative_choice	40
Coq.Logic.PropFacts.injection_is_involution_in_Prop	40
Coq.Logic.JMeq.JMeq_sym	40	4.0.20	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.192521810532	724
Coq.Logic.JMeq.JMeq_trans	40	1.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0121319293976	4
Coq.Logic.JMeq.JMeq_ind	40
Coq.Logic.JMeq.JMeq_rec	40	0.0.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0107390880585	3
Coq.Logic.JMeq.JMeq_rect	40	0.0.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0114800930023	3
Coq.Logic.JMeq.JMeq_ind_r	40
Coq.Logic.JMeq.JMeq_rec_r	40	0.1.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0119640827179	4
Coq.Logic.JMeq.JMeq_rect_r	40	0.1.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0109620094299	4
Coq.Logic.JMeq.JMeq_congr	40	0.1.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.013946056366	4
Coq.Logic.JMeq.JMeq_eq_dep_id	40	1.0.1	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0142779350281	5
Coq.Logic.JMeq.eq_dep_id_JMeq	40	1.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.010293006897	3
Coq.Logic.JMeq.eq_dep_JMeq	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.00959610939026	2
Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40
Coq.Logic.JMeq.JMeq_eq_dep	40	0.4.9.0	synth with cache (only 1: destruct 1; only 1: intros; only 1: dependent rewrite H; only 1: trivial).	0.329713106155	309
Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	2.19.3	synth with cache (only 1: intro H; only 1: intros [x y]; only 1: trivial).	0.308694839478	1108
Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40	4.5.0.7.4.12.28	synth with cache (only 1: red; only 1: split; only 1: trivial; only 1: intro x; only 1: destruct x as (a1, a2, Heq); only 1: subst; only 1: reflexivity).	5.50909304619	33936
Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.0.0.0	synth with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).	0.016942024231	4
Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40
Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40
Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40
Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40
Coq.Logic.Classical_Prop.NNPP	40
Coq.Logic.Classical_Prop.Peirce	40	5.3	synth with cache (only 1: intros; only 1: tauto).	0.0289120674133	10
Coq.Logic.Classical_Prop.not_imply_elim	40	7.6.5	synth with cache (only 1: intro H; only 1: intros; only 1: tauto).	0.703886032104	1054
Coq.Logic.Classical_Prop.not_imply_elim2	40	1	synth with cache (only 1: tauto).	0.0209820270538	2
Coq.Logic.Classical_Prop.imply_to_or	40	2.2.0.1	synth with cache (only 1: intros A; only 1: pose (P := fun n : nat => n = 0 /\ A \/ n = 1); only 1: intuition; only 1: tauto).	0.267832040787	33
Coq.Logic.Classical_Prop.imply_to_and	40	0.6	synth with cache (only 1: intros A P H; only 1: tauto).	0.190170049667	8
Coq.Logic.Classical_Prop.or_to_imply	40	0	synth with cache (only 1: tauto).	0.0170359611511	1
Coq.Logic.Classical_Prop.not_and_or	40	13.5	synth with cache (only 1: intros; only 1: tauto).	0.560643911362	443
Coq.Logic.Classical_Prop.or_not_and	40	0	synth with cache (only 1: tauto).	0.0185260772705	1
Coq.Logic.Classical_Prop.not_or_and	40	0	synth with cache (only 1: tauto).	0.0203659534454	1
Coq.Logic.Classical_Prop.and_not_or	40	0	synth with cache (only 1: tauto).	0.0201361179352	1
Coq.Logic.Classical_Prop.imply_and_or	40	0	synth with cache (only 1: tauto).	0.0168001651764	1
Coq.Logic.Classical_Prop.imply_and_or2	40	0	synth with cache (only 1: tauto).	0.0203380584717	1
Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.Hurkens.Generic.Paradox.Omega	40
Coq.Logic.Hurkens.Generic.Paradox.lemma1	40
Coq.Logic.Hurkens.Generic.Paradox.lemma2	40
Coq.Logic.Hurkens.Generic.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.strength	40
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.modal	40	2.12.17	synth with cache (only 1: intro H; only 1: destruct H; only 1: eauto).	0.268888950348	728
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.Forall	40	2.24	synth with cache (only 1: red; only 1: eauto).	0.110841989517	364
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToNegativeProp.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.MParadox.mparadox	40	2.2.2.1.2.2.2.1.2.2.4	synth with cache (only 1: intros B; only 1: unshelve refine ((fun h => _) (NoRetractToModalProposition.paradox _ _ _ _ _ _ _ _)); only 1: easy; only 1: exact bool; only 1: easy; only 1: easy; only 1: easy; only 1: exact h; only 1: easy; only 1: easy; only 1: easy).	30.1621398926	4869
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractFromTypeToProp.Paradox.paradox	40
Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.up_down	40	0.8.7	synth with cache (only 1: intros P; only 1: subst; only 1: trivial).	0.205997943878	190
Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.paradox	40
Coq.Logic.Hurkens.PropNeqType.paradox	40
Coq.Logic.ClassicalChoice.singleton_choice	40
Coq.Logic.ClassicalChoice.choice	40
Coq.Logic.Eqdep_dec.EqdepDec.trans_sym_eq	40	0.34.8	synth with cache (only 1: intros; only 1: subst; only 1: reflexivity).	0.474637031555	2277
Coq.Logic.Eqdep_dec.EqdepDec.nu_constant	40
Coq.Logic.Eqdep_dec.EqdepDec.nu_left_inv_on	40
Coq.Logic.Eqdep_dec.EqdepDec.eq_proofs_unicity_on	40
Coq.Logic.Eqdep_dec.EqdepDec.K_dec_on	40
Coq.Logic.Eqdep_dec.EqdepDec.inj_right_pair_on	40
Coq.Logic.Eqdep_dec.K_dec_type	40
Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40
Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	40
Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40
Coq.Logic.Eqdep_dec.UIP_refl_unit	40
Coq.Logic.Eqdep_dec.UIP_refl_bool	40
Coq.Logic.Eqdep_dec.UIP_refl_nat	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.linear_search_smallest	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.epsilon_smallest	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_implies_acc	40	5.4.11.7	synth with cache (only 1: split; only 1: intros y [H1 H2]; only 1: elim H2; only 1: assumption).	0.812916040421	1417
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc_ex	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.acc_implies_P_eventually	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.constructive_indefinite_ground_description_nat_Acc	40
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.P'_decidable	40	35.6.3	synth with cache (only 1: pattern 0; only 1: intros H; only 1: firstorder).	7.40867400169	22587
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_indefinite_ground_description	40
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_definite_ground_description	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40
Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40	1.0.8.20.26	synth with cache (only 1: intros OAC_rel A B P R H; only 1: destruct (OAC_rel A B R) as (f, Hf); only 1: auto; only 1: exists f; only 1: auto).	29.6983289719	55093
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40
Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40	7.22.28.10.21.8	synth with cache (only 1: intro x; only 1: intro H; only 1: intuition auto using omniscient_fun_choice_imp_small_drinker, omniscient_fun_choice_imp_fun_choice, fun_choice_and_small_drinker_imp_omniscient_fun_choice; only 1: red; only 1: red in H; only 1: auto).	37.2634308338	187037
Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40	0.1.1.3.0.3	synth with cache (only 1: intros D_epsilon A P H; only 1: destruct H; only 1: destruct D_epsilon with (P := P) as (x, H1); only 1: auto; only 1: exists x; only 1: apply H1).	0.219449043274	167
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40
Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40	23.0	synth with cache (only 1: intuition auto using omniscient_fun_choice_imp_small_drinker, omniscient_fun_choice_imp_fun_choice, fun_choice_and_small_drinker_imp_omniscient_fun_choice; only 1: apply H).	1.44559502602	2721
Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40
Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40
Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	0.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0.0.1.1.2.0.1.41	synth with cache (only 1: split; only 1: intros AC_fun A B R H; only 1: pose (B' := {x : A & B x}); only 1: pose (R' := fun (x : A) (y : B') => projT1 y = x /\ R (projT1 y) (projT2 y)); only 1: destruct (AC_fun A B' R') as (f, Hf); only 1: intros x; only 1: destruct (H x) as (y, (Hy, Huni)); only 1: exists (existT (fun x => B x) x y); only 1: repeat split; only 1: trivial; only 1: intros (x', y') (Heqx', Hy'); only 1: simpl in *; only 1: destruct Heqx'; only 1: rewrite (Huni y'); only 1: trivial; only 1: trivial; only 1: exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))); only 1: intro x; only 1: destruct (Hf x) as (Heq, HR) using and_indd; only 1: destruct (f x); only 1: simpl in *; only 1: destruct Heq using eq_indd; only 1: trivial; only 1: intros DepFunReify A B R H; only 1: destruct (DepFunReify A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	17.0500409603	18708
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40
Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40
Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40
Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	40
Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40	0.6	synth with cache (only 1: intros x; only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	3.96640396118	21
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40
Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	40
Coq.Logic.PropExtensionality.proof_irrelevance	40
Coq.Logic.StrictProp.Spr1_inj	40	1.19.35.10	synth with cache (only 1: destruct b; only 1: simpl in *; only 1: subst; only 1: reflexivity).	0.565615177155	4255
Coq.Logic.ClassicalFacts.prop_degen_ext	40
Coq.Logic.ClassicalFacts.prop_degen_em	40
Coq.Logic.ClassicalFacts.prop_ext_em_degen	40
Coq.Logic.ClassicalFacts.provable_prop_ext	40	21.10.8	synth with cache (only 1: intros Ext EM A; only 1: apply Ext; only 1: easy).	0.472613096237	3465
Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	49	synth with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	1.16157007217	5337
Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40
Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.aux	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.ext_prop_dep_proof_irrel_gen	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_Prop_Ext_CC.ext_prop_dep_proof_irrel_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_CIC.ext_prop_dep_proof_irrel_cic	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p1	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p2	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.proof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p1	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p2	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wproof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_CCI.proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.Weak_proof_irrelevance_CCI.wem_proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40
Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40
Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40
Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40
Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40
Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40
Coq.Logic.ClassicalFacts.Unrestricted_minimization_entails_excluded_middle.unrestricted_minimization_entails_excluded_middle	40
Coq.Logic.ClassicalFacts.Excluded_middle_entails_unrestricted_minimization.excluded_middle_entails_unrestricted_minimization	40
Coq.Logic.ClassicalFacts.Example_of_undecidable_predicate_with_the_minimization_property.undecidable_predicate_with_the_minimization_property	40
Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40
Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40
Coq.Logic.Classical_Pred_Type.Generic.not_all_not_ex	40
Coq.Logic.Classical_Pred_Type.Generic.not_all_ex_not	40
Coq.Logic.Classical_Pred_Type.Generic.not_ex_all_not	40	0.2.3.4.0	synth with cache (only 1: intros P notall; only 1: intros n H; only 1: apply notall; only 1: exists n; only 1: exact H).	0.244517803192	249
Coq.Logic.Classical_Pred_Type.Generic.not_ex_not_all	40	1.2.3.3.7.11.1	synth with cache (only 1: intros P notall; only 1: intro n; only 1: apply NNPP; only 1: intro abs; only 1: apply notall; only 1: exists n; only 1: apply abs).	9.23192501068	19572
Coq.Logic.Classical_Pred_Type.Generic.ex_not_not_all	40	19.14	synth with cache (only 1: intros n H; only 1: firstorder).	12.6147360802	26052
Coq.Logic.Classical_Pred_Type.Generic.all_not_not_ex	40	21.0.12	synth with cache (only 1: intros n H; only 1: unfold not; only 1: firstorder).	18.1909258366	36471
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	40	0.0.1.8.0	synth with cache (only 1: intros; only 1: rewrite M.proof_irrelevance with (p1 := q) (p2 := (eq_rect x P p y H)); only 1: apply eq_dep_eq; only 1: elim H using eq_indd; only 1: reflexivity).	0.339818000793	244
Coq.Logic.FinFun.Finite_alt	40
Coq.Logic.FinFun.Injective_map_NoDup	40
Coq.Logic.FinFun.Injective_list_carac	40
Coq.Logic.FinFun.Injective_carac	40
Coq.Logic.FinFun.Surjective_list_carac	40
Coq.Logic.FinFun.Surjective_carac	40
Coq.Logic.FinFun.Endo_Injective_Surjective	40
Coq.Logic.FinFun.Finite_Empty_or_not	40	0.5.22.3	synth with cache (only 1: firstorder; only 1: destruct x as [| a l]; only 1: firstorder; only 1: firstorder).	2.81199908257	2526
Coq.Logic.FinFun.Surjective_inverse	40
Coq.Logic.FinFun.Injective_Surjective_Bijective	40
Coq.Logic.FinFun.Fin_Finite	40	8.19.10	synth with cache (only 1: revert n; only 1: fix le_div2 1; only 1: eassumption).	1.00269007683	1569
Coq.Logic.FinFun.Fin2Restrict.extend_ok	40
Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40
Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40
Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40
Coq.Logic.FinFun.Fin2Restrict.restrict_n2f	40
Coq.Logic.FinFun.Fin2Restrict.extend_surjective	40
Coq.Logic.FinFun.Fin2Restrict.extend_injective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_surjective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40
Coq.Logic.FinFun.bInjective_bSurjective	40
Coq.Logic.FinFun.bSurjective_bBijective	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.prop_ext	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.proof_irrel	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.guarded_rel_choice	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.AC_bool_subset_to_bool	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.pred_ext_and_rel_choice_imp_EM	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a1'	40	32.116	synth with cache (only 1: red; only 1: eauto with arith).	26.4683439732	17691
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a2'	40	0.0	synth with cache (only 1: exists a1; only 1: auto).	0.0213308334351	2
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.projT1_injective	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.decide	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec'	40
Coq.Logic.Diaconescu.ExtensionalEpsilon_imp_EM.extensional_epsilon_imp_EM	40
Coq.Logic.FunctionalExtensionality.equal_f	40	1.1.5	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0142788887024	19
Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.1.1.4	synth with cache (only 1: intro x; only 1: intros; only 1: rewrite H; only 1: auto).	0.0113499164581	10
Coq.Logic.FunctionalExtensionality.functional_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	2.1.0	synth with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.00921487808228	6
Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	2.1.0	synth with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.0096640586853	6
Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40
Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40
Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40	3.5.0	synth with cache (only 1: apply forall_eq_rect with (H := H); only 1: rewrite functional_extensionality_dep_good_refl; only 1: reflexivity).	0.0505790710449	65
Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	9	synth with cache (only 1: reflexivity).	0.00557518005371	10
Coq.Logic.FunctionalExtensionality.eta_expansion	40	10	synth with cache (only 1: reflexivity).	0.00667095184326	21
Coq.Logic.HLevels.forall_hprop	40
Coq.Logic.HLevels.and_hprop	40
Coq.Logic.HLevels.impl_hprop	40	0.0.2.2.0	synth with cache (only 1: intros; only 1: intros p q; only 1: apply functional_extensionality_dep; only 1: intro x; only 1: apply H).	0.0186989307404	9
Coq.Logic.HLevels.false_hprop	40	0.2	synth with cache (only 1: intros p q; only 1: destruct p, q).	0.00817799568176	4
Coq.Logic.HLevels.true_hprop	40	10.8.2	synth with cache (only 1: intros p q; only 1: destruct p, q; only 1: trivial).	0.181241035461	559
Coq.Logic.HLevels.not_hprop	40	0.5.1.0	synth with cache (only 1: intros p q; only 1: intro x; only 1: apply functional_extensionality; only 1: contradiction).	0.0134320259094	10
Coq.Logic.HLevels.hset_hprop	40
Coq.Logic.HLevels.eq_trans_cancel	40	6.2.2.9.45	synth with cache (only 1: intros A B f g <- H; only 1: intro a; only 1: rewrite eq_trans_refl_l; only 1: rewrite eq_trans_refl_l; only 1: eauto using @functional_extensionality_dep).	28.9943461418	163262
Coq.Logic.HLevels.hset_hOneType	40
Coq.Logic.HLevels.hprop_hprop	40
Coq.Logic.HLevels.hprop_hset	40
Coq.Logic.ClassicalUniqueChoice.unique_choice	40
Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40
Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40
Coq.Logic.WKL.is_path_from_characterization	40
Coq.Logic.WKL.is_path_from_restrict	40
Coq.Logic.WKL.inductively_barred_at_monotone	40
Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40
Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	40
Coq.Logic.WKL.find_left_path	40
Coq.Logic.WKL.Y_unique	40
Coq.Logic.WKL.Y_approx	40
Coq.Logic.WKL.PreWeakKonigsLemma	40
Coq.Logic.WKL.inductively_barred_at_decidable	40
Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	40
Coq.Logic.WKL.WeakKonigsLemma	40
Coq.Logic.Epsilon.constructive_indefinite_description	40
Coq.Logic.Epsilon.small_drinkers'_paradox	40
Coq.Logic.Epsilon.iota_statement	40
Coq.Logic.Epsilon.constructive_definite_description	40	1.0.0.0.1.1	synth with cache (only 1: intros; only 1: destruct epsilon_statement with (P := P); only 1: destruct H; only 1: red in H; only 1: auto; only 1: firstorder).	0.0263438224792	11
Coq.Logic.ClassicalDescription.excluded_middle_informative	40
Coq.Logic.ClassicalDescription.classical_definite_description	40
Coq.Logic.ClassicalDescription.dependent_unique_choice	40
Coq.Logic.ClassicalDescription.unique_choice	40	0.0.6.4.16.5	synth with cache (only 1: intros A B R H; only 1: assert (Hexuni : forall x, exists ! y, R x y); only 1: trivial; only 1: exists (fun x => proj1_sig (constructive_definite_description (R x) (Hexuni x))); only 1: intro x; only 1: apply (proj2_sig (constructive_definite_description (R x) (Hexuni x)))).	1.38513994217	3175
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_sym	40	1.8.10	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.0934059619904	351
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_trans	40	0.0	synth with cache (only 1: destruct 1; only 1: auto).	0.00642800331116	2
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep1_dep	40	0.14.0	synth with cache (only 1: destruct 1; only 1: subst; only 1: auto).	0.0821738243103	277
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_dep1	40
Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	1.58	synth with cache (only 1: inversion 1; only 1: reflexivity).	2.31317305565	13407
Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	4.3.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.0119738578796	10
Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40	0.9.0.0.8.4	synth with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	0.362755060196	1240
Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.1.8	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0429100990295	37
Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	2.5.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0188381671906	10
Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40	0.14.0.0.13.2	synth with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	1.02626180649	3204
Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40
Coq.Logic.EqdepFacts.eq_sigT_fst	40	5.0.2.0	synth with cache (only 1: intros; only 1: change x2 with (projT1 (existT P x2 H2)); only 1: destruct H; only 1: split).	0.0547950267792	76
Coq.Logic.EqdepFacts.eq_sigT_snd	40
Coq.Logic.EqdepFacts.eq_sig_fst	40	3.12.0	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: split).	0.55189204216	1135
Coq.Logic.EqdepFacts.eq_sig_snd	40
Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep1_eq_on	40	10.3.2.23	synth with cache (only 1: intro x; only 1: destruct 1; only 1: rewrite H; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.616560220718	1613
Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep_eq_on	40
Coq.Logic.EqdepFacts.Equivalences.eq_dep_eq_on__UIP_on	40
Coq.Logic.EqdepFacts.Equivalences.UIP_on__UIP_refl_on	40	7.2.0	synth with cache (only 1: red; only 1: intros; only 1: auto).	0.0720229148865	200
Coq.Logic.EqdepFacts.Equivalences.UIP_refl_on__Streicher_K_on	40	3.10.3.1.4	synth with cache (only 1: intro; only 1: intro UIP; only 1: intro eq_dep_eq; only 1: rewrite H; only 1: apply UIP).	1.62309598923	9409
Coq.Logic.EqdepFacts.Equivalences.Streicher_K_on__eq_rect_eq_on	40	4.0.0	synth with cache (only 1: intro; only 1: intro; only 1: auto).	0.010715007782	7
Coq.Logic.EqdepFacts.UIP_shift_on	40
Coq.Logic.EqdepFacts.Corollaries.eq_dep_eq_on__inj_pair2_on	40	0.0	synth with cache (only 1: red; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0119380950928	2
Coq.Logic.EqdepFacts.f_eq_dep	40	1.1	synth with cache (only 1: destruct 1; only 1: trivial).	0.0305070877075	16
Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.1	synth with cache (only 1: destruct 1; only 1: trivial).	0.0230288505554	15
Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.1	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.0184440612793	12
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	10	synth with cache (only 1: auto).	0.044998884201	123
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	8	synth with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.50886797905	12
Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	13	synth with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.579668045044	253
Coq.Logic.IndefiniteDescription.constructive_definite_description	40
Coq.Logic.IndefiniteDescription.functional_choice	40
Coq.Logic.Berardi.Berardis_paradox.AC_IF	40
Coq.Logic.Berardi.Berardis_paradox.Retracts.AC	40
Coq.Logic.Berardi.Berardis_paradox.L1	40
Coq.Logic.Berardi.Berardis_paradox.retract_pow_U_U	40
Coq.Logic.Berardi.Berardis_paradox.not_has_fixpoint	40
Coq.Logic.Berardi.Berardis_paradox.classical_proof_irrelevance	40
Coq.Logic.ClassicalEpsilon.constructive_definite_description	40
Coq.Logic.ClassicalEpsilon.excluded_middle_informative	40
Coq.Logic.ClassicalEpsilon.classical_indefinite_description	40	0.33.1.9.4	synth with cache (only 1: intros; only 1: apply constructive_indefinite_description; only 1: destruct H; only 1: apply NNPP; only 1: firstorder).	2.25576305389	5127
Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40
Coq.Logic.ClassicalEpsilon.choice	40
Coq.Logic.Decidable.dec_not_not	40	1.4.2.0.7.4.2.0.0	synth with cache (only 1: intro A; only 1: unfold not; only 1: intro H1; only 1: elim H1; only 1: intros H H'; only 1: exact H; only 1: intros h1 h2; only 1: apply False_rec; only 1: apply (h2 h1)).	2.00923299789	12342
Coq.Logic.Decidable.dec_True	40	0.24	synth with cache (only 1: red; only 1: tauto).	0.0623300075531	411
Coq.Logic.Decidable.dec_False	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.00762987136841	2
Coq.Logic.Decidable.dec_or	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0148169994354	2
Coq.Logic.Decidable.dec_and	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0173070430756	2
Coq.Logic.Decidable.dec_not	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.00904512405396	2
Coq.Logic.Decidable.dec_imp	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0125200748444	2
Coq.Logic.Decidable.dec_iff	40	1.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0177597999573	3
Coq.Logic.Decidable.not_not	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.00727987289429	2
Coq.Logic.Decidable.not_or	40	0	synth with cache (only 1: tauto).	0.00832414627075	1
Coq.Logic.Decidable.not_and	40	0.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0136330127716	3
Coq.Logic.Decidable.not_imp	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0131649971008	2
Coq.Logic.Decidable.imp_simp	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.00970602035522	2
Coq.Logic.Decidable.not_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0298209190369	2
Coq.Logic.Decidable.not_true_iff	40	1.1.4	synth with cache (only 1: split; only 1: auto; only 1: auto).	0.0093560218811	9
Coq.Logic.Decidable.not_false_iff	40	0	synth with cache (only 1: tauto).	0.00595903396606	1
Coq.Logic.Decidable.not_not_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.00985217094421	2
Coq.Logic.Decidable.contrapositive	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0110919475555	2
Coq.Logic.Decidable.or_not_l_iff_1	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.013692855835	2
Coq.Logic.Decidable.or_not_l_iff_2	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0137069225311	2
Coq.Logic.Decidable.or_not_r_iff_1	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0564451217651	2
Coq.Logic.Decidable.or_not_r_iff_2	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0135641098022	2
Coq.Logic.Decidable.imp_not_l	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0152721405029	2
Coq.Logic.Decidable.not_or_iff	40	0	synth with cache (only 1: tauto).	0.0106918811798	1
Coq.Logic.Decidable.not_and_iff	40	1	synth with cache (only 1: tauto).	0.00854396820068	2
Coq.Logic.Decidable.not_imp_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0173919200897	2
Coq.Logic.Decidable.not_imp_rev_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0182180404663	2
Coq.Logic.Decidable.dec_functional_relation	40
Coq.Logic.WeakFan.Y_unique	40
Coq.Logic.WeakFan.Y_approx	40
Coq.Logic.WeakFan.WeakFanTheorem	40
Coq.MSets.MSetRBT.MakeRaw.singleton_spec	40
Coq.MSets.MSetRBT.MakeRaw.singleton_ok	40	9	synth with cache (only 1: eauto with *).	0.10240983963	20
Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	40
Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	40	0.1.0.0	synth with cache (only 1: destruct s; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.102045059204	13
Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	40	0.4.8.0.6	synth with cache (only 1: induction s as [| c l IHl x r IHr]; only 1: now auto; only 1: simpl; only 1: inv; only 1: intuition_in).	6.04022288322	1786
Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	40	0.0.0.3	synth with cache (only 1: destruct s; only 1: now auto; only 1: simpl; only 1: intuition_in).	0.0405740737915	7
Coq.MSets.MSetRBT.MakeRaw.rmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	0.1.0.0.0.0.0.0.0.0.0.0.0.0.24.0	synth with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).	0.978298902512	2119
Coq.MSets.MSetRBT.MakeRaw.lbal_match	40
Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0	synth with cache (only 1: exact (rrmatch _ _ _)).	0.00781202316284	1
Coq.MSets.MSetRBT.MakeRaw.rbal'_match	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_match	40	0	synth with cache (only 1: exact (rmatch _ _ _)).	0.00824689865112	1
Coq.MSets.MSetRBT.MakeRaw.lbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	40
Coq.MSets.MSetRBT.MakeRaw.ins_spec	40
Coq.MSets.MSetRBT.MakeRaw.ins_ok	40
Coq.MSets.MSetRBT.MakeRaw.add_spec'	40
Coq.MSets.MSetRBT.MakeRaw.add_spec	40	0.0	synth with cache (only 1: unfold add; only 1: now autorew).	0.0693900585175	2
Coq.MSets.MSetRBT.MakeRaw.add_ok	40	3	synth with cache (only 1: eauto with *).	0.0982141494751	23
Coq.MSets.MSetRBT.MakeRaw.lbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.append_rr_match	40
Coq.MSets.MSetRBT.MakeRaw.append_bb_match	40	0	synth with cache (only 1: exact (rmatch _ _ _)).	0.00756001472473	1
Coq.MSets.MSetRBT.MakeRaw.append_spec	40
Coq.MSets.MSetRBT.MakeRaw.append_ok	40
Coq.MSets.MSetRBT.MakeRaw.del_spec	40
Coq.MSets.MSetRBT.MakeRaw.del_ok	40
Coq.MSets.MSetRBT.MakeRaw.remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_ok	40	2	synth with cache (only 1: eauto with *).	0.0137779712677	3
Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec1	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec2	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_ok	40
Coq.MSets.MSetRBT.MakeRaw.treeify_zero_spec	40	2.4.0	synth with cache (only 1: intros a b; only 1: simpl; only 1: now split).	0.0142939090729	9
Coq.MSets.MSetRBT.MakeRaw.treeify_one_spec	40	1.0.1.0.5.61	synth with cache (only 1: intros n; only 1: induction n as [| n IH]; only 1: simpl; only 1: easy; only 1: simpl; only 1: auto).	2.84801292419	16744
Coq.MSets.MSetRBT.MakeRaw.treeify_cont_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_elements	40
Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40
Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_spec	40
Coq.MSets.MSetRBT.MakeRaw.filter_ok	40
Coq.MSets.MSetRBT.MakeRaw.partition_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec1	40	0.2.0	synth with cache (only 1: intros Hf; only 1: unfold partition, filter; only 1: now rewrite partition_aux_spec).	0.0198118686676	5
Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0.0.4	synth with cache (only 1: intros; only 1: intros Hf; only 1: now rewrite partition_spec).	0.070967912674	16
Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40
Coq.MSets.MSetRBT.MakeRaw.partition_ok2	40	0.0	synth with cache (only 1: rewrite partition_spec; only 1: now apply filter_ok).	0.00931310653687	2
Coq.MSets.MSetRBT.MakeRaw.INV_init	40
Coq.MSets.MSetRBT.MakeRaw.INV_sym	40
Coq.MSets.MSetRBT.MakeRaw.INV_drop	40
Coq.MSets.MSetRBT.MakeRaw.INV_eq	40
Coq.MSets.MSetRBT.MakeRaw.INV_lt	40
Coq.MSets.MSetRBT.MakeRaw.INV_rev	40
Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_spec	40
Coq.MSets.MSetRBT.MakeRaw.union_spec'	40
Coq.MSets.MSetRBT.MakeRaw.union_spec	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.mem_proper	40
Coq.MSets.MSetRBT.MakeRaw.inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_ok	40	0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: tauto; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.0272271633148	8
Coq.MSets.MSetRBT.MakeRaw.diff_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_diff_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_spec	40
Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40
Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40	3.2.46	synth with cache (only 1: inversion 1; only 1: auto; only 1: auto).	1.7913081646	4835
Coq.MSets.MSetRBT.BalanceProps.arb_nr_rb	40
Coq.MSets.MSetRBT.BalanceProps.rb_maxdepth	40
Coq.MSets.MSetRBT.BalanceProps.rb_mindepth	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_upperbound	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.0.0.0.0.0.0.1	synth with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).	0.0335891246796	9
Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40	6.76.0	synth with cache (only 1: unfold singleton; only 1: compute; only 1: ok).	4.43085098267	15990
Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40
Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	2.3.1.1.0	synth with cache (only 1: destruct t; only 1: invrb; only 1: invrb; only 1: simpl; only 1: auto).	0.664927005768	338
Coq.MSets.MSetRBT.BalanceProps.lbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal'_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40
Coq.MSets.MSetRBT.BalanceProps.ifred_or	40	2.2.0.2.7.1.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: right; only 1: trivial; only 1: descolor; only 1: ok; only 1: ok).	0.888748884201	1857
Coq.MSets.MSetRBT.BalanceProps.ins_rr_rb	40
Coq.MSets.MSetRBT.BalanceProps.ins_arb	40
Coq.MSets.MSetRBT.BalanceProps.add_rb	40
Coq.MSets.MSetRBT.BalanceProps.append_arb_rb	40
Coq.MSets.MSetRBT.BalanceProps.del_arb	40	2.1	synth with cache (only 1: invrb; only 1: intuition).	0.0161590576172	5
Coq.MSets.MSetRBT.BalanceProps.remove_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_zero_rb	40	3.0	synth with cache (only 1: intros EQ; only 1: auto).	0.0101091861725	5
Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	3.0.0.0.20.0.9	synth with cache (only 1: intro n; only 1: simpl; only 1: induction n as [| n IH]; only 1: simpl; only 1: inversion 1; only 1: simpl in *; only 1: auto).	3.48129701614	5004
Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_aux_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40
Coq.MSets.MSetRBT.BalanceProps.filter_rb	40	3.1.0.4.0.1.0.12	synth with cache (only 1: destruct s; only 1: unfold filter; only 1: simpl; only 1: unfold treeify; only 1: simpl; only 1: exists 0; only 1: auto; only 1: ok).	1.19751596451	2471
Coq.MSets.MSetRBT.BalanceProps.partition_rb1	40	0.0.4.0	synth with cache (only 1: rewrite partition_spec; only 1: simpl; only 1: unfold filter; only 1: auto_tc).	0.0229578018188	18
Coq.MSets.MSetRBT.BalanceProps.partition_rb2	40	1.0.0.0	synth with cache (only 1: unfold partition; only 1: destruct partition_aux; only 1: simpl; only 1: auto_tc).	0.0145888328552	5
Coq.MSets.MSetRBT.BalanceProps.fold_add_rb	40
Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	0.0.0.1.0.0.0.1	synth with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.184461116791	77
Coq.MSets.MSetRBT.BalanceProps.union_rb	40
Coq.MSets.MSetRBT.BalanceProps.inter_rb	40	6.5.2.0.0.0.7	synth with cache (only 1: intros (n, H); only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: auto_tc; only 1: intuition_in; only 1: intuition).	4.5176410675	5733
Coq.MSets.MSetRBT.BalanceProps.diff_rb	40	2.0.0.0.1.0.0	synth with cache (only 1: unfold diff; only 1: destruct compare_height; only 1: unfold linear_diff; only 1: auto_tc; only 1: auto_tc; only 1: intros; only 1: auto_tc).	0.0307259559631	11
Coq.MSets.MSetRBT.Make.remove_min_spec1	40
Coq.MSets.MSetRBT.Make.remove_min_spec2	40
Coq.MSets.MSetPositive.PositiveSet.In_compat	40	0.6.1.0.0	synth with cache (only 1: repeat red; only 1: intros; only 1: subst; only 1: rewrite H; only 1: intuition).	0.68877696991	264
Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40	10	synth with cache (only 1: firstorder).	0.0448389053345	21
Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	2	synth with cache (only 1: easy').	0.0162780284882	3
Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	1	synth with cache (only 1: intuition).	0.0157890319824	2
Coq.MSets.MSetPositive.PositiveSet.empty_spec	40	5.2	synth with cache (only 1: intros EQ; only 1: now BinInt.Z.nzsimpl).	0.0683040618896	9
Coq.MSets.MSetPositive.PositiveSet.mem_node	40	1.32	synth with cache (only 1: fix even_spec 1; only 1: intuition).	8.52815413475	7604
Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40	2.1.4	synth with cache (only 1: fix even_spec 1; only 1: intro H; only 1: trivial).	0.0489461421967	19
Coq.MSets.MSetPositive.PositiveSet.subset_Leaf_s	40	12.2	synth with cache (only 1: intros EQ; only 1: now f_equal).	0.421850919724	369
Coq.MSets.MSetPositive.PositiveSet.subset_spec	40	1.2	synth with cache (only 1: fix odd_spec 1; only 1: intuition).	0.058140039444	13
Coq.MSets.MSetPositive.PositiveSet.equal_subset	40
Coq.MSets.MSetPositive.PositiveSet.equal_spec	40	11.12	synth with cache (only 1: fix odd_spec 1; only 1: intuition).	2.05454277992	2262
Coq.MSets.MSetPositive.PositiveSet.eq_dec	40
Coq.MSets.MSetPositive.PositiveSet.lex_Opp	40
Coq.MSets.MSetPositive.PositiveSet.compare_bool_inv	40	0.0.0.0.52	synth with cache (only 1: intros [| ] [| ]; only 1: now rewrite <- ?Pos.compare_antisym; only 1: now rewrite <- ?Pos.compare_antisym; only 1: now rewrite <- ?Pos.compare_antisym; only 1: now rewrite <- ?Pos.compare_antisym).	14.9244000912	11694
Coq.MSets.MSetPositive.PositiveSet.compare_inv	40
Coq.MSets.MSetPositive.PositiveSet.lex_Eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy').	0.0516400337219	6
Coq.MSets.MSetPositive.PositiveSet.compare_equal	40
Coq.MSets.MSetPositive.PositiveSet.compare_gt	40
Coq.MSets.MSetPositive.PositiveSet.compare_eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_spec	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_cxe	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xce	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0269179344177	4
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lxl	40	3.0.0.28.34	synth with cache (only 1: intro n; only 1: induction n; only 1: constructor; only 1: constructor; only 1: constructor).	5.17839694023	6115
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_gxg	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0265550613403	4
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xll	40	0.1.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.027370929718	5
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xgg	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0274629592896	4
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lex	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.0.0.0.0.0.0.0.26	synth with cache (only 1: destr_bool; only 1: ct; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: ct).	5.02646279335	4539
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_Leaf	40	2.0.0.13.9	synth with cache (only 1: intro H; only 1: reflexivity || destruct H; only 1: unfold compare, equal; only 1: easy'; only 1: trivial).	5.97802209854	6245
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_empty_x	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_empty	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare	40
Coq.MSets.MSetPositive.PositiveSet.lt_strorder	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat	40
Coq.MSets.MSetPositive.PositiveSet.lt_compat	40
Coq.MSets.MSetPositive.PositiveSet.add_spec	40
Coq.MSets.MSetPositive.PositiveSet.remove_spec	40
Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40
Coq.MSets.MSetPositive.PositiveSet.union_spec	40
Coq.MSets.MSetPositive.PositiveSet.inter_spec	40
Coq.MSets.MSetPositive.PositiveSet.diff_spec	40
Coq.MSets.MSetPositive.PositiveSet.fold_spec	40
Coq.MSets.MSetPositive.PositiveSet.cardinal_spec	40
Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40
Coq.MSets.MSetPositive.PositiveSet.filter_spec	40
Coq.MSets.MSetPositive.PositiveSet.xforall_spec	40
Coq.MSets.MSetPositive.PositiveSet.for_all_spec	40
Coq.MSets.MSetPositive.PositiveSet.xexists_spec	40
Coq.MSets.MSetPositive.PositiveSet.exists_spec	40	4.30	synth with cache (only 1: fix even_spec 1; only 1: assumption).	26.065677166	24888
Coq.MSets.MSetPositive.PositiveSet.partition_filter	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec1	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec2	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).	0.0299289226532	3
Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec1	40
Coq.MSets.MSetPositive.PositiveSet.lt_rev_append	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2w	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec1	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec2	40
Coq.MSets.MSetPositive.PositiveSet.choose_empty	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3'	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec2	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.In_1	40	5.23.94	synth with cache (only 1: intros EQ; only 1: rewrite <- EQ; only 1: now rewrite ?BinPos.Pos.square_xO).	10.9773039818	45281
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_2	40	0.1.0	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto with relations).	0.0129678249359	4
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_3	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_2	40	0.1.0	synth with cache (only 1: intros; only 1: rewrite remove_spec; only 1: intuition).	0.016154050827	4
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_3	40	0.2	synth with cache (only 1: rewrite remove_spec; only 1: intuition).	0.0253689289093	13
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_2	40	6.0	synth with cache (only 1: rewrite singleton_spec; only 1: auto with relations).	0.0200870037079	13
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_2	40	1.0	synth with cache (only 1: rewrite union_spec; only 1: auto).	0.0137639045715	3
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_3	40	1.0	synth with cache (only 1: rewrite union_spec; only 1: auto).	0.311216831207	3
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_2	40	0.0	synth with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0154311656952	2
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_3	40	0.0	synth with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0178060531616	2
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_2	40	0.0	synth with cache (only 1: rewrite diff_spec; only 1: intuition).	0.0163149833679	2
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_3	40	0.0	synth with cache (only 1: rewrite diff_spec; only 1: intuition).	0.0197942256927	2
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_2	40	2.0.1.0	synth with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.0250089168549	7
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_3	40	2.0.1.0	synth with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.0304789543152	7
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_2	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.In_eq_iff	40	2.0.1	synth with cache (only 1: intros E; only 1: rewrite E; only 1: intuition).	0.0169820785522	6
Coq.MSets.MSetFacts.WFactsOn.IffSpec.mem_iff	40	6	synth with cache (only 1: intuition).	0.104556798935	7
Coq.MSets.MSetFacts.WFactsOn.IffSpec.not_mem_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.equal_iff	40	2.1.21	synth with cache (only 1: split; only 1: apply <- equal_spec; only 1: apply -> equal_spec).	0.450801849365	418
Coq.MSets.MSetFacts.WFactsOn.IffSpec.subset_iff	40	5	synth with cache (only 1: intuition).	0.0222141742706	6
Coq.MSets.MSetFacts.WFactsOn.IffSpec.empty_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.is_empty_iff	40	20	synth with cache (only 1: intuition).	0.258970022202	186
Coq.MSets.MSetFacts.WFactsOn.IffSpec.singleton_iff	40	1.0	synth with cache (only 1: rewrite singleton_spec; only 1: intuition).	0.0145740509033	3
Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_iff	40	5.0.5.0.23	synth with cache (only 1: split; only 1: rewrite add_spec; only 1: intuition; only 1: rewrite add_spec; only 1: intuition).	3.4415678978	2156
Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_neq_iff	40	2.4.2.0	synth with cache (only 1: rewrite add_spec; only 1: intuition; only 1: elim H; only 1: intuition).	0.340348958969	117
Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_iff	40	0.2	synth with cache (only 1: rewrite remove_spec; only 1: intuition).	0.0208220481873	4
Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_neq_iff	40	1.0	synth with cache (only 1: rewrite remove_spec; only 1: intuition).	0.0212421417236	3
Coq.MSets.MSetFacts.WFactsOn.IffSpec.for_all_iff	40	8	synth with cache (only 1: intuition).	0.168794155121	20
Coq.MSets.MSetFacts.WFactsOn.IffSpec.exists_iff	40	9	synth with cache (only 1: intuition).	0.163748025894	21
Coq.MSets.MSetFacts.WFactsOn.IffSpec.elements_iff	40	7	synth with cache (only 1: intuition).	0.0168330669403	8
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.mem_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.empty_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_neq_b	40	0.0.0.0.0.1.1.3	synth with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	37.3117380142	7278
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_neq_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.singleton_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.union_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.inter_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.diff_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.elements_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.filter_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.for_all_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.exists_b	40
Coq.MSets.MSetFacts.WFactsOn.In_m	40
Coq.MSets.MSetFacts.WFactsOn.Empty_m	40	0.18.4.0.27	synth with cache (only 1: apply proper_sym_impl_iff; only 1: unfold Equal; only 1: intuition; only 1: intros R L n; only 1: firstorder).	12.371078968	16841
Coq.MSets.MSetFacts.WFactsOn.is_empty_m	40
Coq.MSets.MSetFacts.WFactsOn.mem_m	40
Coq.MSets.MSetFacts.WFactsOn.singleton_m	40
Coq.MSets.MSetFacts.WFactsOn.add_m	40
Coq.MSets.MSetFacts.WFactsOn.remove_m	40
Coq.MSets.MSetFacts.WFactsOn.union_m	40
Coq.MSets.MSetFacts.WFactsOn.inter_m	40
Coq.MSets.MSetFacts.WFactsOn.diff_m	40
Coq.MSets.MSetFacts.WFactsOn.Subset_m	40	10.15.0	synth with cache (only 1: repeat red; only 1: intros; only 1: firstorder).	13.3947780132	5566
Coq.MSets.MSetFacts.WFactsOn.subset_m	40
Coq.MSets.MSetFacts.WFactsOn.equal_m	40
Coq.MSets.MSetFacts.WFactsOn.SubsetSetoid	40	1.1.0.17.83.78.0	synth with cache (only 1: unfold Equal, Subset; only 1: compute; only 1: assert (leS : forall n m, n <= m -> S n <= S m) by (induction 1; auto); only 1: split; only 1: intro n; only 1: auto; only 1: auto).	19.7805659771	49942
Coq.MSets.MSetFacts.WFactsOn.In_s_m	40
Coq.MSets.MSetFacts.WFactsOn.Empty_s_m	40	0.16	synth with cache (only 1: intros Eqf Lef x y; only 1: firstorder).	1.37050795555	744
Coq.MSets.MSetFacts.WFactsOn.add_s_m	40	0.0.1	synth with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !add_iff, Hx, Hs; only 1: intuition).	0.11315703392	19
Coq.MSets.MSetFacts.WFactsOn.remove_s_m	40	0.0.1	synth with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !remove_iff, Hx, Hs; only 1: intuition).	0.0843758583069	13
Coq.MSets.MSetFacts.WFactsOn.union_s_m	40	0.0.0	synth with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !union_spec, Hs1, Hs2; only 1: intuition).	0.0525298118591	3
Coq.MSets.MSetFacts.WFactsOn.inter_s_m	40	0.0.0	synth with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !inter_spec, Hs1, Hs2; only 1: intuition).	0.0387451648712	3
Coq.MSets.MSetFacts.WFactsOn.diff_s_m	40	0.0.1	synth with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !diff_spec, Hs1, Hs2; only 1: intuition).	0.110707044601	4
Coq.MSets.MSetFacts.WFactsOn.filter_equal	40
Coq.MSets.MSetFacts.WFactsOn.filter_subset	40	0.0.0	synth with cache (only 1: intros f Hf s s' Hs a; only 1: rewrite !filter_spec, Hs by auto; only 1: intuition).	0.0460968017578	3
Coq.MSets.MSetFacts.WFactsOn.filter_ext	40
Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.1.1.0.0.1.0	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: case (mem x s); only 1: intuition; only 1: intuition; only 1: intuition).	0.231276035309	37
Coq.MSets.MSetProperties.WPropertiesOn.Add_Equal	40
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_refl	40	0	synth with cache (only 1: intuition).	0.0104019641876	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_sym	40	3.1.1	synth with cache (only 1: red; only 1: intros; only 1: fsetdec).	0.138107061386	29
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_trans	40	4.4.2	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).	1.76168894768	293
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_refl	40	0	synth with cache (only 1: intuition).	0.0128650665283	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_trans	40	3	synth with cache (only 1: fsetdec).	0.0344979763031	4
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_antisym	40	4.1	synth with cache (only 1: red; only 1: intuition).	0.0227220058441	11
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0200011730194	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_empty	40	1	synth with cache (only 1: fsetdec).	0.0163331031799	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_remove_3	40	0	synth with cache (only 1: fsetdec).	0.0294318199158	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_diff	40	1	synth with cache (only 1: fsetdec).	0.030002117157	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_3	40	0	synth with cache (only 1: fsetdec).	0.071151971817	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_2	40	0	synth with cache (only 1: fsetdec).	0.0264899730682	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.in_subset	40	2.0	synth with cache (only 1: intros g_eq; only 1: fsetdec).	0.025857925415	4
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.double_inclusion	40	0.0.0.0	synth with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.403126001358	4
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_1	40	5.0	synth with cache (only 1: intros; only 1: fsetdec).	0.0388369560242	7
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_2	40	0	synth with cache (only 1: fsetdec).	0.0243990421295	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_equal	40	0	synth with cache (only 1: fsetdec).	0.0422368049622	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_add	40	0	synth with cache (only 1: fsetdec).	0.108613014221	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_equal	40	3.0	synth with cache (only 1: intros; only 1: fsetdec).	0.180279970169	5
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Equal_remove	40	1	synth with cache (only 1: fsetdec).	0.0720119476318	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_remove	40	0	synth with cache (only 1: fsetdec).	0.0929081439972	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_add	40	0	synth with cache (only 1: fsetdec).	0.0844080448151	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.singleton_equal_add	40	3.7	synth with cache (only 1: intros P; only 1: fsetdec).	0.128066062927	48
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_singleton_empty	40	0	synth with cache (only 1: fsetdec).	0.259708166122	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_sym	40	6	synth with cache (only 1: fsetdec).	0.361439943314	42
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0799009799957	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_1	40	0	synth with cache (only 1: fsetdec).	0.0633208751678	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_2	40	0	synth with cache (only 1: fsetdec).	0.133301019669	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_assoc	40	0	synth with cache (only 1: fsetdec).	0.0880379676819	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_union_singleton	40	0	synth with cache (only 1: fsetdec).	0.0507500171661	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_add	40	0	synth with cache (only 1: fsetdec).	0.132637023926	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_1	40	0	synth with cache (only 1: fsetdec).	0.48141503334	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_2	40	0	synth with cache (only 1: fsetdec).	0.316768169403	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_1	40	0	synth with cache (only 1: fsetdec).	0.0507361888885	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_2	40	0	synth with cache (only 1: fsetdec).	0.0180058479309	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_3	40	0	synth with cache (only 1: fsetdec).	0.0375959873199	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_4	40	0	synth with cache (only 1: fsetdec).	0.0335638523102	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_5	40	0	synth with cache (only 1: fsetdec).	0.0312330722809	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_1	40	0	synth with cache (only 1: fsetdec).	0.0480179786682	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_2	40	0	synth with cache (only 1: fsetdec).	0.0390548706055	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.not_in_union	40	2.0	synth with cache (only 1: intuition; only 1: fsetdec).	0.241716146469	4
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_sym	40	5	synth with cache (only 1: fsetdec).	0.758050918579	229
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0438351631165	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: fsetdec).	0.133640050888	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: fsetdec).	0.0526258945465	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_assoc	40	0	synth with cache (only 1: fsetdec).	0.11439704895	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_1	40	0	synth with cache (only 1: fsetdec).	0.169109106064	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_2	40	0	synth with cache (only 1: fsetdec).	0.112998962402	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_1	40	1	synth with cache (only 1: fsetdec).	0.128293991089	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_2	40	0	synth with cache (only 1: fsetdec).	0.376952171326	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_1	40	5	synth with cache (only 1: fsetdec).	5.91970801353	932
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_2	40	0	synth with cache (only 1: fsetdec).	0.0257728099823	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_1	40	0	synth with cache (only 1: fsetdec).	0.0182960033417	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_2	40	0	synth with cache (only 1: fsetdec).	0.0183491706848	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_3	40	0	synth with cache (only 1: fsetdec).	0.064395904541	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_1	40	7	synth with cache (only 1: fsetdec).	0.0629990100861	14
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_2	40	0	synth with cache (only 1: fsetdec).	0.0402481555939	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset	40	0	synth with cache (only 1: fsetdec).	0.0220229625702	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.225392103195	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_diff_singleton	40	0	synth with cache (only 1: fsetdec).	0.0580611228943	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_empty	40	0	synth with cache (only 1: fsetdec).	0.119677066803	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_all	40	0	synth with cache (only 1: fsetdec).	0.083477973938	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_add	40	2.0.0.1	synth with cache (only 1: red; only 1: intros; only 1: rewrite add_spec; only 1: intuition).	0.0347490310669	7
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_remove	40	13.14	synth with cache (only 1: red; only 1: fsetdec).	27.2103688717	4779
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Add	40
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add	40	0.2	synth with cache (only 1: expAdd; only 1: fsetdec).	0.303672075272	4
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Equal	40	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.244970798492	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add_2	40	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.181187152863	2
Coq.MSets.MSetProperties.WPropertiesOn.elements_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.elements_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_spec_right	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_nodep	40	1.0.3.1.0.1.6	synth with cache (only 1: intuition; only 1: apply fold_rec; only 1: set (l := rev (elements s)); only 1: assert (Hdup : NoDup l) by (unfold l; eauto using elements_spec2w, NoDupA_rev with *); only 1: auto with *; only 1: set (l := rev (elements s)); only 1: auto with *).	11.0557000637	6516
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_weak	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rel	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_identity	40	1.0.4.1.10.0	synth with cache (only 1: intros; only 1: intros g_eq; only 1: apply fold_rec_bis; only 1: fsetdec; only 1: intuition; only 1: fsetdec).	7.67897200584	3122
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_0	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_2	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1b	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_commutes	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_init	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_equal	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_add	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.add_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_1	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_2	40	0.8.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set relations).	0.324225187302	134
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_diff_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_plus	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_0	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2b	40	0.0.10.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_spec in H; only 1: generalize (elements_2 (s:=s)); only 1: destruct (elements s); only 1: intuition; only 1: exists e; only 1: auto with relations).	1.12820291519	993
Coq.MSets.MSetProperties.WPropertiesOn.Equal_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40
Coq.MSets.MSetProperties.WPropertiesOn.empty_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.singleton_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_1	40	1.0	synth with cache (only 1: intros; only 1: eauto with set relations).	0.0166871547699	3
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_2	40	0.2.1.1	synth with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: congruence; only 1: auto with set).	0.207962036133	55
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_1	40	0.0.0.0.0.0.0.0.1.2.0.5.0.3.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: symmetry; only 1: change S with ((fun _ => S) x); only 1: apply fold_2; only 1: split; only 1: congruence; only 1: congruence; only 1: congruence; only 1: congruence; only 1: auto; only 1: auto with set relations; only 1: expAdd; only 1: fsetdec).	36.7387881279	24835
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_2	40	2.0	synth with cache (only 1: intros; only 1: eauto with set relations).	0.0813369750977	32
Coq.MSets.MSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.MSets.MSetProperties.OrdProperties.gtb_1	40
Coq.MSets.MSetProperties.OrdProperties.leb_1	40
Coq.MSets.MSetProperties.OrdProperties.gtb_compat	40	50.9	synth with cache (only 1: unfold gtb; only 1: solve_proper).	6.54023098946	5014
Coq.MSets.MSetProperties.OrdProperties.leb_compat	40	1.12.0.43	synth with cache (only 1: simpl_relation; only 1: unfold leb, gtb; only 1: rewrite <- H; only 1: auto).	31.3650519848	20129
Coq.MSets.MSetProperties.OrdProperties.elements_split	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_max	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_min	40
Coq.MSets.MSetProperties.OrdProperties.fold_3	40
Coq.MSets.MSetProperties.OrdProperties.fold_4	40
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.fold_equal	40
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.add_fold	40	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.016144990921	3
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.015734910965	3
Coq.MSets.MSetProperties.OrdProperties.choose_equal	40
Coq.MSets.MSetAVL.MakeRaw.singleton_spec	40
Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	0	synth with cache (only 1: ok).	0.0101490020752	1
Coq.MSets.MSetAVL.MakeRaw.create_spec	40
Coq.MSets.MSetAVL.MakeRaw.create_ok	40	4.4.4.0.0.0.20.17	synth with cache (only 1: red; only 1: right; only 1: inversion_clear H; only 1: now auto; only 1: intuition; only 1: auto; only 1: auto; only 1: auto).	8.544080019	5433
Coq.MSets.MSetAVL.MakeRaw.bal_spec	40
Coq.MSets.MSetAVL.MakeRaw.bal_ok	40
Coq.MSets.MSetAVL.MakeRaw.add_spec'	40
Coq.MSets.MSetAVL.MakeRaw.add_spec	40	0.0.0.0.0.0.3.1.0.1	synth with cache (only 1: induct ltac:(s) ltac:(x); only 1: intuition_in; only 1: intuition_in; only 1: eauto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: intuition_in; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: intuition_in).	16.3797578812	1171
Coq.MSets.MSetAVL.MakeRaw.add_ok	40
Coq.MSets.MSetAVL.MakeRaw.join_spec	40
Coq.MSets.MSetAVL.MakeRaw.join_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_gt_tree	40
Coq.MSets.MSetAVL.MakeRaw.merge_spec	40
Coq.MSets.MSetAVL.MakeRaw.merge_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_ok	40
Coq.MSets.MSetAVL.MakeRaw.concat_spec	40
Coq.MSets.MSetAVL.MakeRaw.concat_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_spec1	40
Coq.MSets.MSetAVL.MakeRaw.split_spec2	40
Coq.MSets.MSetAVL.MakeRaw.split_spec3	40
Coq.MSets.MSetAVL.MakeRaw.split_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_ok1	40
Coq.MSets.MSetAVL.MakeRaw.split_ok2	40	0.1.2	synth with cache (only 1: destruct (@split_ok s x); only 1: eauto with *; only 1: auto).	0.0119450092316	6
Coq.MSets.MSetAVL.MakeRaw.inter_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.inter_spec	40
Coq.MSets.MSetAVL.MakeRaw.inter_ok	40	1.1.1.0	synth with cache (only 1: destruct (@inter_spec_ok s1 s2); only 1: auto with *; only 1: auto with *; only 1: auto).	0.0545010566711	17
Coq.MSets.MSetAVL.MakeRaw.diff_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec	40
Coq.MSets.MSetAVL.MakeRaw.diff_ok	40	1.1.1.4.1.1.2	synth with cache (only 1: destruct (@inter_spec_ok s1 s2); only 1: auto with *; only 1: auto with *; only 1: destruct (@diff_spec_ok s1 s2); only 1: auto; only 1: auto; only 1: auto).	3.08226394653	1112
Coq.MSets.MSetAVL.MakeRaw.union_spec	40
Coq.MSets.MSetAVL.MakeRaw.union_ok	40
Coq.MSets.MSetAVL.MakeRaw.filter_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_weak_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_ok	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec1'	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2'	40	0.0.0.0.0.0	synth with cache (only 1: induction s as [| h l Hl x r Hr]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Hl, <- Hr; only 1: now destruct (partition f l), (partition f r), (f x)).	0.0281569957733	6
Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_eq	40	0.0.0.0.0.1.0.0.1	synth with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	1.30804109573	197
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.empty_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_equal_empty	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_1	40	1.2.3	synth with cache (only 1: intros; only 1: apply <- mem_spec; only 1: intuition).	0.106200933456	50
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_2	40	0	synth with cache (only 1: auto with set).	0.0158469676971	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_1	40	9	synth with cache (only 1: intuition).	0.494096040726	202
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_2	40	1.1.0.1.1.0.1.2.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	18.756444931	4733
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_1	40	0.5	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set relations).	0.217217922211	68
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_2	40	0.0.0.4.2.2.1	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	6.25979995728	1628
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_equal_add	40	6	synth with cache (only 1: intuition).	0.0437381267548	12
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_3	40	0.0.0.0	synth with cache (only 1: rewrite <- mem_spec; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.0278480052948	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_4	40	0.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite <- mem_spec; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.0311229228973	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_refl	40	2.0.1	synth with cache (only 1: apply equal_1; only 1: unfold Equal; only 1: intuition).	0.0147151947021	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_sym	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_trans	40	0.2.0.1	synth with cache (only 1: do 2 rewrite <- equal_iff; only 1: intros; only 1: apply <- equal_spec; only 1: Dec.fsetdec).	0.143752098083	7
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_equal	40	2.0.1	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0202949047089	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_cardinal	40	4.0.1	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0206871032715	8
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_refl	40	1.6	synth with cache (only 1: apply <- subset_spec; only 1: Dec.fsetdec).	0.0236480236053	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_antisym	40	10	synth with cache (only 1: auto with set).	0.151766061783	38
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_trans	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_equal	40	0	synth with cache (only 1: auto with set).	0.108711004257	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_3	40	4.2	synth with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: intuition).	1.15238189697	59
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_equal	40	0	synth with cache (only 1: auto with set relations).	0.00964498519897	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_3	40	4.0	synth with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: intuition).	0.222705841064	27
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_equal	40	0.2	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set relations).	0.0297820568085	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_remove	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_add	40	3.19	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	19.8420219421	3155
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_cardinal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_1	40	0.3	synth with cache (only 1: apply <- mem_spec; only 1: intuition).	1.06359195709	240
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_2	40	0.14	synth with cache (only 1: rewrite <- not_mem_iff; only 1: intuition).	23.3839981556	8989
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_sym	40	0	synth with cache (only 1: intuition).	0.0211689472198	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0183539390564	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_1	40	0	synth with cache (only 1: auto with set).	0.0104749202728	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_2	40	0	synth with cache (only 1: auto with set).	0.0102598667145	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_assoc	40	0	synth with cache (only 1: auto with set).	0.00894403457642	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_union_singleton	40	2	synth with cache (only 1: auto with set).	0.0216569900513	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_add	40	0	synth with cache (only 1: auto with set).	0.00972819328308	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_1	40	0	synth with cache (only 1: auto with set).	0.00881505012512	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_2	40	0	synth with cache (only 1: auto with set).	0.0096230506897	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_3	40	0	synth with cache (only 1: auto with set).	0.0191299915314	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_sym	40	0	synth with cache (only 1: intuition).	0.020886182785	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0123801231384	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: auto with set).	0.0111138820648	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: auto with set).	0.0114390850067	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_assoc	40	0	synth with cache (only 1: auto with set).	0.00936317443848	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_1	40	0	synth with cache (only 1: auto with set).	0.010586977005	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_2	40	0	synth with cache (only 1: auto with set).	0.0107970237732	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_1	40	0	synth with cache (only 1: auto with set).	0.00976800918579	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_1	40	0	synth with cache (only 1: auto with set).	0.00999999046326	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_2	40	0	synth with cache (only 1: auto with set).	0.00919103622437	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_3	40	0	synth with cache (only 1: auto with set).	0.143165111542	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset	40	0.1	synth with cache (only 1: apply subset_1; only 1: Dec.fsetdec).	0.0323951244354	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0115339756012	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_inter_singleton	40	1	synth with cache (only 1: auto with set).	0.024906873703	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_empty	40	1	synth with cache (only 1: auto with set).	0.0242640972137	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_all	40	0	synth with cache (only 1: auto with set).	0.00874590873718	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.set_rec	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exclusive_set	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_empty	40	0.0	synth with cache (only 1: apply fold_1b; only 1: auto with set).	0.0195438861847	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_equal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_add	40	0.9.2.2.2.0.5	synth with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: eauto with *; only 1: auto with set).	17.2531120777	11762
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.add_fold	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_1	40	0.2.2.2.2.1.0	synth with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set relations; only 1: auto with set relations).	5.29341602325	2074
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	2.1	synth with cache (only 1: intros; only 1: auto with set).	0.0157470703125	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	4.6.3.0.1.4	synth with cache (only 1: intro a; only 1: intros; only 1: apply cardinal_2 with x; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto with set).	15.6402549744	9956
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_cardinal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_cardinal	40	1	synth with cache (only 1: auto with set).	0.0211071968079	11
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.Comp'	40	39	synth with cache (only 1: solve_proper).	6.4093849659	6094
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.exists_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_1	40	11.0	synth with cache (only 1: intros; only 1: intuition).	0.825917005539	308
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_2	40	0	synth with cache (only 1: auto with set).	0.0135560035706	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.union_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_1	40	14.2.0.3.1.0	synth with cache (only 1: intros; only 1: apply for_all_1; only 1: tauto; only 1: red; only 1: intros; only 1: intuition).	23.7607169151	7439
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_exists	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.Comp'	40	0.0.0.3	synth with cache (only 1: intro H; only 1: intros; only 1: f_equal; only 1: auto).	0.0236148834229	7
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_plus	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.fold_compat	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_compat	40
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_push	40	3.0	synth with cache (only 1: unfold decidable; only 1: auto).	1.17000198364	5
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_pull	40	0.0.0	synth with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.483289003372	3
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.eq_refl_iff	40	0	synth with cache (only 1: intuition).	0.0396478176117	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_In	40	0.0.0.4.8.19	synth with cache (only 1: unfold decidable; only 1: intros; only 1: rewrite <- mem_spec; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	9.91224503517	2409
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_eq	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_1	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_2	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_1	40	0	synth with cache (only 1: fsetdec).	0.214833021164	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_2	40	0	synth with cache (only 1: fsetdec).	0.516030073166	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_In_singleton	40	2.0.5	synth with cache (only 1: intros; only 1: rewrite singleton_spec; only 1: intuition).	0.0585858821869	10
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	0	synth with cache (only 1: fsetdec).	0.119392871857	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_Subset_add_remove	40	2.2	synth with cache (only 1: intros; only 1: fsetdec).	0.137516021729	6
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_disjunction	40	0	synth with cache (only 1: fsetdec).	0.151875972748	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_disj	40	3	synth with cache (only 1: fsetdec).	1.80562186241	22
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0	synth with cache (only 1: fsetdec).	0.554004907608	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	3	synth with cache (only 1: fsetdec).	0.146733999252	4
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	0	synth with cache (only 1: fsetdec).	0.434745073318	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.eq_chain_test	40	0	synth with cache (only 1: fsetdec).	0.528236865997	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_too_complex	40	12.3.6.7.15	synth with cache (only 1: intros x y H s s' H0; only 1: intros E; only 1: rewrite E; only 1: eauto with set; only 1: intuition).	28.3913249969	8243
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_1	40	7.0	synth with cache (only 1: intros s s' E; only 1: fsetdec).	0.206378936768	15
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	0	synth with cache (only 1: fsetdec).	0.13742017746	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_baydemir	40	0	synth with cache (only 1: fsetdec).	0.106714010239	1
Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40	3.4.3	synth with cache (only 1: intro H; only 1: fix even_spec 1; only 1: trivial).	0.145395040512	74
Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40
Coq.MSets.MSetGenTree.Props.isok_iff	40	7.11	synth with cache (only 1: fix odd_spec 1; only 1: easy).	7.67496705055	1631
Coq.MSets.MSetGenTree.Props.isok_Ok	40	3.33	synth with cache (only 1: fix odd_spec 1; only 1: tauto).	24.6223189831	21112
Coq.MSets.MSetGenTree.Props.In_1	40
Coq.MSets.MSetGenTree.Props.In_compat	40
Coq.MSets.MSetGenTree.Props.In_node_iff	40	0	synth with cache (only 1: intuition_in).	0.0460710525513	1
Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	0	synth with cache (only 1: intuition_in).	0.0161020755768	1
Coq.MSets.MSetGenTree.Props.lt_leaf	40	0.0	synth with cache (only 1: intros a b; only 1: intuition_in).	0.0136058330536	2
Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.1	synth with cache (only 1: red; only 1: intuition_in).	0.0129380226135	3
Coq.MSets.MSetGenTree.Props.lt_tree_node	40	0.0.1.1.6	synth with cache (only 1: intros x y z; only 1: intuition_in; only 1: unfold lt_tree; only 1: intuition_in; only 1: order).	1.37786698341	750
Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.1.7.0	synth with cache (only 1: intuition_in; only 1: unfold gt_tree; only 1: intuition_in; only 1: order).	0.366108894348	104
Coq.MSets.MSetGenTree.Props.lt_tree_not_in	40	0.4.1	synth with cache (only 1: intuition_in; only 1: eapply OrderTac.lt_irrefl; only 1: eauto).	0.23139500618	30
Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	7.0	synth with cache (only 1: unfold lt_tree; only 1: eauto).	0.172351121902	25
Coq.MSets.MSetGenTree.Props.gt_tree_not_in	40	0.0.0	synth with cache (only 1: intros; only 1: intro; only 1: order).	0.0108199119568	3
Coq.MSets.MSetGenTree.Props.gt_tree_trans	40	7.0	synth with cache (only 1: unfold gt_tree; only 1: eauto).	0.166131019592	22
Coq.MSets.MSetGenTree.Props.lt_tree_compat	40	0.0.1.1.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intuition_in; only 1: subst; only 1: order).	0.035628080368	9
Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	0.0.0.1.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: subst; only 1: order).	0.0312378406525	8
Coq.MSets.MSetGenTree.Props.empty_spec	40	6.0.1	synth with cache (only 1: intros EQ; only 1: intuition_in; only 1: easy).	0.041571855545	19
Coq.MSets.MSetGenTree.Props.empty_ok	40	0.86	synth with cache (only 1: compute; only 1: intuition_in).	0.367829084396	3871
Coq.MSets.MSetGenTree.Props.is_empty_spec	40	1.6	synth with cache (only 1: fix even_spec 1; only 1: intuition_in).	0.193168878555	70
Coq.MSets.MSetGenTree.Props.mem_spec	40
Coq.MSets.MSetGenTree.Props.min_elt_spec1	40
Coq.MSets.MSetGenTree.Props.min_elt_spec2	40
Coq.MSets.MSetGenTree.Props.min_elt_spec3	40
Coq.MSets.MSetGenTree.Props.max_elt_spec1	40
Coq.MSets.MSetGenTree.Props.max_elt_spec2	40
Coq.MSets.MSetGenTree.Props.max_elt_spec3	40	0.0.1.0.0.0.0.1	synth with cache (only 1: functional induction (max_elt s); only 1: red; only 1: red; only 1: inversion 2; only 1: inversion 1; only 1: intro H0; only 1: destruct (IHo H0 _x3); only 1: auto).	0.29265499115	114
Coq.MSets.MSetGenTree.Props.choose_spec1	40	0.0.18.2.1.17	synth with cache (only 1: inversion 1; only 1: functional induction (min_elt s); only 1: discriminate; only 1: inversion H1; only 1: auto; only 1: auto).	9.97330713272	14488
Coq.MSets.MSetGenTree.Props.choose_spec2	40
Coq.MSets.MSetGenTree.Props.choose_spec3	40
Coq.MSets.MSetGenTree.Props.elements_spec1'	40
Coq.MSets.MSetGenTree.Props.elements_spec1	40
Coq.MSets.MSetGenTree.Props.elements_spec2'	40
Coq.MSets.MSetGenTree.Props.elements_spec2	40
Coq.MSets.MSetGenTree.Props.elements_spec2w	40
Coq.MSets.MSetGenTree.Props.elements_aux_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_app	40
Coq.MSets.MSetGenTree.Props.elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_app	40
Coq.MSets.MSetGenTree.Props.rev_elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_rev	40
Coq.MSets.MSetGenTree.Props.sorted_app_inv	40
Coq.MSets.MSetGenTree.Props.elements_sort_ok	40
Coq.MSets.MSetGenTree.Props.for_all_spec	40
Coq.MSets.MSetGenTree.Props.exists_spec	40
Coq.MSets.MSetGenTree.Props.fold_spec'	40
Coq.MSets.MSetGenTree.Props.fold_spec	40
Coq.MSets.MSetGenTree.Props.subsetl_spec	40
Coq.MSets.MSetGenTree.Props.subsetr_spec	40
Coq.MSets.MSetGenTree.Props.subset_spec	40	2.8.7.10	synth with cache (only 1: intros Hf; only 1: intro H; only 1: fix even_spec 1; only 1: intuition).	11.5643749237	7988
Coq.MSets.MSetGenTree.Props.eq_equiv	40
Coq.MSets.MSetGenTree.Props.eq_Leq	40
Coq.MSets.MSetGenTree.Props.lt_strorder	40
Coq.MSets.MSetGenTree.Props.lt_compat	40
Coq.MSets.MSetGenTree.Props.flatten_e_elements	40	1.7.0	synth with cache (only 1: intros; only 1: rewrite elements_node; only 1: now rewrite !app_assoc_reverse).	0.443029880524	117
Coq.MSets.MSetGenTree.Props.cons_1	40
Coq.MSets.MSetGenTree.Props.compare_end_Cmp	40	3.4.2.19.7.56.33	synth with cache (only 1: intros H; only 1: repeat red; only 1: destruct H; only 1: constructor; only 1: firstorder  (subst; auto); only 1: simpl; only 1: auto).	36.6111359596	111751
Coq.MSets.MSetGenTree.Props.compare_more_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_cont_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_spec	40
Coq.MSets.MSetGenTree.Props.equal_spec	40
Coq.MSets.MSetGenTree.Props.mindepth_maxdepth	40
Coq.MSets.MSetGenTree.Props.maxdepth_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_cardinal	40
Coq.MSets.MSetGenTree.Props.maxdepth_log_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_log_cardinal	40
Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40	0.3.0.7.1	synth with cache (only 1: intros Base Step; only 1: intros H1 H2 H3; only 1: destruct H2; only 1: fix even_spec 1; only 1: tauto).	1.27723097801	811
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	40
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.mem_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.equal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.subset_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.is_empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.add_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.remove_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.singleton_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.union_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.inter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.diff_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.fold_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.cardinal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.filter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.for_all_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.exists_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec2	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec2w	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.compare_spec	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.elements_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.choose_spec3	40
Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	40	46	synth with cache (only 1: firstorder).	2.32245779037	5233
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	40	7.6.2.8	synth with cache (only 1: intros x y EQ WF; only 1: intro H; only 1: rewrite EQ; only 1: auto).	20.2233359814	7332
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	40	1.2.0.20.1	synth with cache (only 1: intros x x' Ex s s' Es; only 1: compute; only 1: setoid_rewrite Ex; only 1: setoid_rewrite Es; only 1: intuition).	18.1609649658	1889
Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	40	19.18	synth with cache (only 1: intros x y H; only 1: firstorder).	1.41364502907	2516
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40
Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	40
Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.In_In	40	7.2	synth with cache (only 1: intros a; only 1: eauto with *).	0.126082897186	34
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (cardinal_inv_1 (s:=diff s' s)); only 1: intros _; only 1: generalize (cardinal_inv_1 (s:=diff s' s)); only 1: intros _; only 1: generalize (cardinal_inv_1 (s:=diff s' s)); only 1: intros _; only 1: intuition).	0.0485298633575	12
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	16	synth with cache (only 1: firstorder).	0.800153017044	232
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	10.2.68	synth with cache (only 1: compute; only 1: intuition; only 1: Dec.fsetdec).	6.83707809448	3587
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	1.9.1.0.0	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intuition; only 1: Dec.fsetdec; only 1: intuition).	1.55052495003	1404
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	3.2.1	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: Dec.fsetdec).	0.0552039146423	18
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Ens_to_MSet	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.In_compat	40	2.0.2.0.19	synth with cache (only 1: constructor; only 1: subst; only 1: now rewrite H; only 1: subst; only 1: now rewrite H).	0.461992025375	483
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.mem_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_iff	40	8.13	synth with cache (only 1: fix even_spec 1; only 1: auto).	0.713503837585	1275
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_Ok	40	0.8.0.0.1.0.1.0.0.0.0.20	synth with cache (only 1: induction l; only 1: intuition; only 1: simpl; only 1: rewrite andb_true_iff; only 1: rewrite negb_true_iff; only 1: intros H; only 1: destruct H; only 1: constructors; only 1: rewrite <- mem_spec; only 1: congruence; only 1: auto; only 1: auto).	13.7647120953	12242
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_ok	40	6	synth with cache (only 1: intuition).	0.0182719230652	12
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_spec	40	0.1.0.0.20	synth with cache (only 1: unfold singleton; only 1: intros; only 1: intuition; only 1: inv; only 1: intuition).	23.1228761673	1134
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_ok	40	10	synth with cache (only 1: intuition).	0.0192639827728	21
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_spec	40	0.1.7.0	synth with cache (only 1: unfold empty; only 1: intro; only 1: intuition; only 1: inv).	0.0817251205444	64
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.is_empty_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec1	40	9	synth with cache (only 1: intuition).	0.126598119736	81
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec2w	40	5.1.0.0	synth with cache (only 1: unfold elements; only 1: induction s; only 1: intuition; only 1: auto).	0.0769670009613	42
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.fold_spec	40	0.0	synth with cache (only 1: unfold elements; only 1: intuition).	0.0122940540314	2
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.subset_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.equal_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec2	40	1.0.0.3.4.0.0.0.4	synth with cache (only 1: unfold Empty; only 1: destruct s; only 1: simpl; only 1: intros; only 1: intro; only 1: inv; only 1: simpl; only 1: intros; only 1: inversion H).	7.93348503113	5599
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.cardinal_spec	40	0.0.0	synth with cache (only 1: unfold elements; only 1: intros; only 1: intuition).	0.018383026123	3
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec'	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.for_all_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.exists_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec2	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1'	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2'	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inf_iff	40
Coq.MSets.MSetList.MakeRaw.ForNotations.isok_iff	40
Coq.MSets.MSetList.MakeRaw.ForNotations.isok_Ok	40	0	synth with cache (only 1: tauto).	0.0151479244232	1
Coq.MSets.MSetList.MakeRaw.ForNotations.mem_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.add_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.add_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.add_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_ok	40	0.0.0.0.2.0.1.0.2.0.2	synth with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s x; only 1: simple induction s; only 1: intuition; only 1: simpl; only 1: intros; only 1: inv; only 1: elim_compare x a; only 1: auto; only 1: auto; only 1: auto).	9.36064815521	3306
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_ok	40	2	synth with cache (only 1: intuition).	0.0206849575043	3
Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_spec	40	0.1.0.6.0	synth with cache (only 1: intros; only 1: unfold singleton; only 1: intuition; only 1: inv; only 1: auto).	0.397706031799	96
Coq.MSets.MSetList.MakeRaw.ForNotations.union_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.union_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.union_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_ok	40	0.0.0	synth with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).	0.0933558940887	3
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.equal_spec	40	5.2	synth with cache (only 1: fix even_spec 1; only 1: intuition).	0.0246028900146	12
Coq.MSets.MSetList.MakeRaw.ForNotations.subset_spec	40	3.10	synth with cache (only 1: fix even_spec 1; only 1: auto).	2.483492136	1161
Coq.MSets.MSetList.MakeRaw.ForNotations.empty_ok	40	6	synth with cache (only 1: intuition).	0.017874956131	7
Coq.MSets.MSetList.MakeRaw.ForNotations.empty_spec	40	9.0.7.18	synth with cache (only 1: intro n; only 1: rewrite InA_alt; only 1: intros (a', (Haa', Ha')); only 1: intuition).	3.23186016083	3058
Coq.MSets.MSetList.MakeRaw.ForNotations.is_empty_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec1	40	1	synth with cache (only 1: intuition).	0.0736010074615	2
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2	40	3.8.1.0	synth with cache (only 1: intro l; only 1: intuition; only 1: inv; only 1: auto).	1.09572601318	680
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2w	40	0.9.0	synth with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).	0.238843917847	118
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec3	40	4.0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: inversion 1; only 1: inversion 1; only 1: simpl; only 1: inversion 1).	0.0515611171722	15
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec1	40	1.0.1.1.5.0.1	synth with cache (only 1: induction s as [| x s IH]; only 1: inversion 1; only 1: destruct s; only 1: inversion 1; only 1: auto; only 1: inversion 1; only 1: intuition).	5.66052508354	2276
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec3	40
Coq.MSets.MSetList.MakeRaw.ForNotations.choose_spec3	40
Coq.MSets.MSetList.MakeRaw.ForNotations.fold_spec	40	0	synth with cache (only 1: auto).	0.0143098831177	1
Coq.MSets.MSetList.MakeRaw.ForNotations.cardinal_spec	40	4.0.0	synth with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: split).	0.0296740531921	7
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.for_all_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.exists_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec2	40
Coq.MSets.MSetList.MakeRaw.In_compat	40	1.4	synth with cache (only 1: intros x x' Hxx' y y' Hyy'; only 1: now rewrite Hxx', Hyy').	0.0523929595947	7
Coq.MSets.MSetList.MakeRaw.lt_strorder	40
Coq.MSets.MSetList.MakeRaw.lt_compat	40
Coq.MSets.MSetList.MakeRaw.compare_spec_aux	40
Coq.MSets.MSetList.MakeRaw.compare_spec	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40
Coq.Floats.FloatAxioms.Prim2SF_inj	40
Coq.Floats.FloatAxioms.SF2Prim_inj	40
Coq.Floats.FloatLemmas.shift_value	40	1	synth with cache (only 1: now Z.nzsimpl).	0.0235369205475	2
Coq.Floats.FloatLemmas.frexp_spec	40
Coq.Floats.FloatLemmas.ldexp_spec	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_is_preorder	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_idempotent	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_clos_rst	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_r_clos_rt	40	1.1.0.0	synth with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.0155000686646	6
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_t	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_is_equiv	40	2.0.0.1.6.1.2.32	synth with cache (only 1: split; only 1: auto with sets; only 1: red; only 1: intros; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	3.09771299362	4496
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_idempotent	40	0.0.1.0.0.0.0.0	synth with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets).	0.0326640605927	9
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_t1n_trans	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_tn1_trans	40	4.1.4.3.1.1.0	synth with cache (only 1: induction 1; only 1: left; only 1: auto with sets; only 1: right with y; only 1: auto; only 1: left; only 1: auto).	2.44648194313	4906
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_step	40	2.1.5.0	synth with cache (only 1: intros; only 1: right with y; only 1: auto with sets; only 1: left).	0.0508389472961	72
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_step	40	5.1.0.2	synth with cache (only 1: intro y0; only 1: right with y0; only 1: auto; only 1: left).	0.108201980591	192
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_rt	40	3.3.5.1.1	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	0.428668022156	811
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_rt	40	6.2.6.6.2.3	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: auto; only 1: constructor 1; only 1: auto).	4.82930397987	13535
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_left	40
Coq.Relations.Operators_Properties.Properties.Equivalences.rt1n_ind_right	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_right	40	0.0.1.0.0.2.0.1.4.1.1.1.1.9.5.0	synth with cache (only 1: intros; only 1: induction H1; only 1: apply H0 with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply IHclos_refl_trans1; only 1: auto with sets; only 1: intros; only 1: apply H0 with y0; only 1: auto with sets; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	15.2096731663	32324
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_rst	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_trans	40	4.4.9.6.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: right with y; only 1: auto; only 1: auto).	3.70393300056	7686
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_sym	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_rst	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_trans	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_sym	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1_iff	40
Coq.Relations.Operators_Properties.Properties.clos_trans_transp_permute	40
Coq.Relations.Relations.inverse_image_of_equivalence	40
Coq.Relations.Relations.inverse_image_of_eq	40	1.2.1.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: red; only 1: trivial; only 1: red; only 1: destruct 1; only 1: trivial; only 1: destruct 1; only 1: trivial).	0.401795148849	670
Coq.Sets.Uniset.defs.leb_refl	40	0	synth with cache (only 1: destr_bool).	0.00746202468872	1
Coq.Sets.Uniset.defs.incl_left	40	2.5.10.3	synth with cache (only 1: intros; only 1: intro z; only 1: destruct (H z); only 1: auto).	0.159199953079	544
Coq.Sets.Uniset.defs.incl_right	40	1.0.0.0	synth with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.0138890743256	5
Coq.Sets.Uniset.defs.seq_refl	40	3	synth with cache (only 1: auto).	0.006343126297	4
Coq.Sets.Uniset.defs.seq_trans	40	1.0.1.9.12.5	synth with cache (only 1: unfold seq; only 1: intro H; only 1: intro z; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	5.29803991318	16876
Coq.Sets.Uniset.defs.seq_sym	40	0.0.1.1.0.0	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: destruct y; only 1: simpl; only 1: intros; only 1: auto).	0.0171549320221	8
Coq.Sets.Uniset.defs.union_empty_left	40	1.0.0	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).	0.0090320110321	4
Coq.Sets.Uniset.defs.union_empty_right	40	4.0.0.10.0.0.0.0.2	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: intros; only 1: destruct b; only 1: auto; only 1: simpl; only 1: auto).	5.68750095367	13388
Coq.Sets.Uniset.defs.union_comm	40	29.0.0.0	synth with cache (only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: intuition).	35.1563408375	87038
Coq.Sets.Uniset.defs.union_ass	40	0.0.0.1.0.0.0	synth with cache (only 1: unfold seq; only 1: unfold charac; only 1: unfold union; only 1: simpl; only 1: destruct x; only 1: destruct y; only 1: auto with bool).	0.0383508205414	19
Coq.Sets.Uniset.defs.seq_left	40	0.1.1.0.1.1.0.1.0	synth with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: rewrite H; only 1: auto).	3.48420977592	2962
Coq.Sets.Uniset.defs.seq_right	40	1.0.2.0.0.1.0	synth with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto).	0.699467897415	446
Coq.Sets.Uniset.defs.union_rotate	40
Coq.Sets.Uniset.defs.seq_congr	40
Coq.Sets.Uniset.defs.union_perm_left	40
Coq.Sets.Uniset.defs.uniset_twist1	40
Coq.Sets.Uniset.defs.uniset_twist2	40
Coq.Sets.Uniset.defs.treesort_twist1	40
Coq.Sets.Uniset.defs.treesort_twist2	40
Coq.Sets.Multiset.multiset_defs.meq_refl	40	1.0.0	synth with cache (only 1: intuition; only 1: compute; only 1: intuition).	0.0211160182953	4
Coq.Sets.Multiset.multiset_defs.meq_trans	40	6.4.8.1	synth with cache (only 1: unfold meq; only 1: intros; only 1: firstorder; only 1: congruence).	15.860763073	2908
Coq.Sets.Multiset.multiset_defs.meq_sym	40	0.1.1.0.0	synth with cache (only 1: destruct x; only 1: unfold meq; only 1: destruct y; only 1: intros; only 1: auto).	0.0294299125671	7
Coq.Sets.Multiset.multiset_defs.munion_empty_left	40	0.1.0.0	synth with cache (only 1: destruct x; only 1: unfold meq; only 1: intros; only 1: auto).	0.0244469642639	5
Coq.Sets.Multiset.multiset_defs.munion_empty_right	40	0.2.2.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: destruct x; only 1: intros; only 1: auto).	0.0445730686188	13
Coq.Sets.Multiset.multiset_defs.munion_comm	40	11.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto with *).	2.79290485382	1876
Coq.Sets.Multiset.multiset_defs.munion_ass	40	0.0.0.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: destruct x; only 1: destruct y; only 1: auto with arith).	0.0336430072784	6
Coq.Sets.Multiset.multiset_defs.meq_left	40	1.1.0.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct z; only 1: destruct y; only 1: auto with arith).	0.0325779914856	8
Coq.Sets.Multiset.multiset_defs.meq_right	40	3.1.0.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct z; only 1: destruct y; only 1: auto with arith).	0.0443840026855	13
Coq.Sets.Multiset.multiset_defs.munion_rotate	40
Coq.Sets.Multiset.multiset_defs.meq_congr	40	3.1.0.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct z; only 1: destruct y; only 1: auto with arith).	0.0463511943817	13
Coq.Sets.Multiset.multiset_defs.munion_perm_left	40
Coq.Sets.Multiset.multiset_defs.multiset_twist1	40
Coq.Sets.Multiset.multiset_defs.multiset_twist2	40
Coq.Sets.Multiset.multiset_defs.treesort_twist1	40
Coq.Sets.Multiset.multiset_defs.treesort_twist2	40
Coq.Sets.Multiset.multiset_defs.meq_singleton	40
Coq.Sets.Integers.Integers_sect.le_reflexive	40	8.4	synth with cache (only 1: red; only 1: trivial).	0.0487599372864	106
Coq.Sets.Integers.Integers_sect.le_antisym	40	6.3.13	synth with cache (only 1: intros x y H; only 1: set (m := PeanoNat.Nat.min x y) in *; only 1: PeanoNat.Nat.Private_Tac.order).	0.873078107834	882
Coq.Sets.Integers.Integers_sect.le_trans	40	7.2.0	synth with cache (only 1: intro IT; only 1: intros x y H; only 1: PeanoNat.Nat.Private_Tac.order).	0.123023986816	161
Coq.Sets.Integers.Integers_sect.le_Order	40	2.3.0.7.2.1.8.0.170	synth with cache (only 1: constructor; only 1: red; only 1: trivial; only 1: intro IT; only 1: intros x y H; only 1: PeanoNat.Nat.Private_Tac.order; only 1: red; only 1: intros n m Hn; only 1: PeanoNat.Nat.Private_Tac.order).	23.104902029	40248
Coq.Sets.Integers.Integers_sect.triv_nat	40	1.30.4	synth with cache (only 1: red; only 1: intro H; only 1: split).	0.406198978424	1658
Coq.Sets.Integers.Integers_sect.nat_po	40
Coq.Sets.Integers.Integers_sect.le_total_order	40
Coq.Sets.Integers.Integers_sect.Finite_subset_has_lub	40
Coq.Sets.Integers.Integers_sect.Integers_has_no_ub	40
Coq.Sets.Integers.Integers_sect.Integers_infinite	40
Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	1.1.5.13.23	synth with cache (only 1: intro x; only 1: intros x' x'' Hx' Hx''; only 1: red; only 1: red; only 1: auto).	1.26351499557	7010
Coq.Sets.Relations_1_facts.Equiv_from_preorder	40
Coq.Sets.Relations_1_facts.Equiv_from_order	40	6.1.0	synth with cache (only 1: intros U R H'; only 1: elim H'; only 1: auto  10 with sets).	0.0814409255981	54
Coq.Sets.Relations_1_facts.contains_is_preorder	40	9	synth with cache (only 1: auto  10 with sets).	0.0100169181824	10
Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40
Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	0.2.2.10.0	synth with cache (only 1: unfold same_relation at 1; only 1: intros x y z h; only 1: intros H'3 H'4; only 1: elim h; only 1: auto  10 with sets).	1.90145683289	4385
Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.0.0	synth with cache (only 1: unfold Symmetric, Complement; only 1: unfold same_relation at 1; only 1: intuition).	0.0145928859711	3
Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	0.1	synth with cache (only 1: unfold same_relation at 1; only 1: intuition).	0.0222661495209	20
Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40
Coq.Sets.Relations_2_facts.Rstar_reflexive	40	0	synth with cache (only 1: intuition).	0.00689601898193	1
Coq.Sets.Relations_2_facts.Rplus_contains_R	40	0	synth with cache (only 1: intuition).	0.00641512870789	1
Coq.Sets.Relations_2_facts.Rstar_contains_R	40
Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40	0.0.0.0.3.0.16.2.2	synth with cache (only 1: red; only 1: compute; only 1: induction 1; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets).	7.34214305878	26953
Coq.Sets.Relations_2_facts.Rstar_transitive	40
Coq.Sets.Relations_2_facts.Rstar_cases	40
Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40
Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40
Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40
Coq.Sets.Relations_2_facts.star_monotone	40	0.0.5.5.1.0.4.2	synth with cache (only 1: unfold contains; only 1: intros U R S H' x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).	32.7441720963	35144
Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40
Coq.Sets.Relations_2_facts.Lemma1	40
Coq.Sets.Permut.Axiomatisation.cong_congr	40
Coq.Sets.Permut.Axiomatisation.comm_right	40	3.2.2	synth with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).	0.0201380252838	34
Coq.Sets.Permut.Axiomatisation.comm_left	40	3.2.2	synth with cache (only 1: intros; only 1: apply cong_left; only 1: apply op_comm).	0.0178799629211	24
Coq.Sets.Permut.Axiomatisation.perm_right	40
Coq.Sets.Permut.Axiomatisation.perm_left	40
Coq.Sets.Permut.Axiomatisation.op_rotate	40
Coq.Sets.Permut.Axiomatisation.twist	40
Coq.Sets.Image.Image.Im_def	40
Coq.Sets.Image.Image.Im_add	40
Coq.Sets.Image.Image.image_empty	40	1.3.2.9.6.0.3	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H'0; only 1: elim H'0; only 1: destruct 1; only 1: auto using Im_def with sets).	2.53376197815	4043
Coq.Sets.Image.Image.finite_image	40
Coq.Sets.Image.Image.Im_inv	40	0.5.1.3	synth with cache (only 1: intros x0 H'0; only 1: destruct 1; only 1: exists x; only 1: auto using Im_def with sets).	0.33164191246	240
Coq.Sets.Image.Image.not_injective_elim	40
Coq.Sets.Image.Image.cardinal_Im_intro	40
Coq.Sets.Image.Image.In_Image_elim	40
Coq.Sets.Image.Image.injective_preserves_cardinal	40
Coq.Sets.Image.Image.cardinal_decreases	40
Coq.Sets.Image.Image.Pigeonhole	40
Coq.Sets.Image.Image.Pigeonhole_principle	40
Coq.Sets.Infinite_sets.Infinite_sets.make_new_approximant	40	1.9.2.2.5.2.0.8	synth with cache (only 1: intros X x H'; only 1: intro H'3; only 1: elim H'3; only 1: intros H'0 H'1; only 1: apply Strict_super_set_contains_new_element; only 1: auto with sets; only 1: destruct 1 as [A' [H5 H6]]; only 1: auto with sets).	20.3243660927	40692
Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow	40
Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow'	40
Coq.Sets.Infinite_sets.Infinite_sets.approximant_can_be_any_size	40
Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous	40
Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous'	40
Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_bis	40
Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_ter	40
Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_minimal	40	15.5.3.2.21	synth with cache (only 1: intro H'1; only 1: red in H'1; only 1: red; only 1: intros; only 1: elim H).	4.39463186264	21189
Coq.Sets.Powerset.The_power_set_partial_order.Power_set_Inhabited	40	3.0.13.68.55	synth with cache (only 1: intro x; only 1: exists x; only 1: split; only 1: red; only 1: tauto).	3.34392690659	55375
Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_an_order	40	23	synth with cache (only 1: auto  10 with sets).	0.313359022141	498
Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_transitive	40	4.0.0.0.0	synth with cache (only 1: red; only 1: intro X; only 1: red; only 1: intros x H'; only 1: auto  6 with sets).	0.0125811100006	12
Coq.Sets.Powerset.The_power_set_partial_order.Power_set_PO	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_Rel_is_Strict_Included	40	0.6	synth with cache (only 1: red; only 1: intuition).	0.00771117210388	8
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion_left	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive	40
Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_is_Bottom	40
Coq.Sets.Powerset.The_power_set_partial_order.Union_minimal	40
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_maximal	40	0	synth with cache (only 1: auto with sets).	0.00556707382202	1
Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_l	40	0.0.1	synth with cache (only 1: red; only 1: intros x H'1; only 1: auto with sets).	0.00953602790833	4
Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_r	40	0	synth with cache (only 1: auto with sets).	0.00587105751038	1
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_l	40	0.2.2.3.6	synth with cache (only 1: intros H'1 H'2; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.713935136795	873
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_r	40	0.1.1.0.0	synth with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.0141839981079	7
Coq.Sets.Powerset.The_power_set_partial_order.Union_is_Lub	40
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_is_Glb	40
Coq.Sets.Classical_sets.Ensembles_classical.not_included_empty_Inhabited	40
Coq.Sets.Classical_sets.Ensembles_classical.not_empty_Inhabited	40
Coq.Sets.Classical_sets.Ensembles_classical.Inhabited_Setminus	40
Coq.Sets.Classical_sets.Ensembles_classical.Strict_super_set_contains_new_element	40
Coq.Sets.Classical_sets.Ensembles_classical.Subtract_intro	40	1.0.3.3.1	synth with cache (only 1: intros x H'0; only 1: red; only 1: red; only 1: unfold Setminus at 1; only 1: auto with sets).	1.02008414268	279
Coq.Sets.Classical_sets.Ensembles_classical.Subtract_inv	40	1.2.2	synth with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets).	0.0788700580597	38
Coq.Sets.Classical_sets.Ensembles_classical.Included_Strict_Included	40	18.6.3	synth with cache (only 1: intros x H'0; only 1: apply NNPP; only 1: intuition).	24.3161981106	4971
Coq.Sets.Classical_sets.Ensembles_classical.Strict_Included_inv	40	0.16.2.8	synth with cache (only 1: intro H'; only 1: intros H'0 H'1; only 1: firstorder; only 1: auto  7 using Inhabited_Setminus with sets).	6.13065004349	5187
Coq.Sets.Classical_sets.Ensembles_classical.not_SIncl_empty	40	0.0.1.2.0.0.0	synth with cache (only 1: intro X; only 1: red; only 1: intro H'; only 1: elim H'; only 1: intros H'0 H'1; only 1: elim H'1; only 1: auto with sets).	0.0623281002045	10
Coq.Sets.Classical_sets.Ensembles_classical.Complement_Complement	40
Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40	1.0.10.0.3.0.2.14	synth with cache (only 1: generalize Rstar_transitive; only 1: intro T1; only 1: intros U R; only 1: red; only 1: red in T1; only 1: intros x1 y0 H'1; only 1: exists y0; only 1: auto with sets).	7.78206992149	21532
Coq.Sets.Relations_3_facts.coherent_symmetric	40
Coq.Sets.Relations_3_facts.Strong_confluence	40
Coq.Sets.Relations_3_facts.Strong_confluence_direct	40
Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40
Coq.Sets.Relations_3_facts.Newman	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.sincl_add_x	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_in	40	0.0.1.0.0.0	synth with cache (only 1: intros X x H'; only 1: unfold Subtract; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	0.0178420543671	7
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr	40	0.0.0.0.2.2	synth with cache (only 1: intros a b; only 1: intros x H'1; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	0.793607950211	270
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_l	40	3.3.0.5.4.1.0.4	synth with cache (only 1: red; only 1: intros A x y H'; only 1: elim H'; only 1: intro H'0; only 1: elim H'0; only 1: auto with sets; only 1: induction H'; only 1: tauto).	13.0229048729	18092
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_r	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_2	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_1	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_xy	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_st_add_soustr	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Sub_Add_new	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Simplify_add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Included_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.setcover_inv	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Add_covers	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_is_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Singleton_atomic	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.less_than_singleton	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel_left	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero	40	39.5	synth with cache (only 1: intros; only 1: auto  6 with sets).	1.77427506447	3811
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero_right	40	0	synth with cache (only 1: auto  6 with sets).	0.0146310329437	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero'	40	0.8	synth with cache (only 1: unfold Add at 1; only 1: auto  6 with sets).	0.0387439727783	28
Coq.Sets.Powerset_facts.Sets_as_an_algebra.less_than_empty	40	0	synth with cache (only 1: auto with sets).	0.0115189552307	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_commutative	40	0	synth with cache (only 1: auto  6 with sets).	0.0137810707092	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_associative	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_idempotent	40	0	synth with cache (only 1: auto  6 with sets).	0.0126669406891	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_absorbs	40	0	synth with cache (only 1: auto  7 with sets).	0.0149250030518	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Couple_as_union	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_union	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple	40	0.0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	1.06209802628	949
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple_Singleton	40	0.1.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: auto with sets; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets).	22.0281319618	15788
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_commutative	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity_l	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity'	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_add	40	9.1.1	synth with cache (only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).	1.29261088371	950
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union	40	0.0.0.1.1.0.1.1.0.0.0.2.2	synth with cache (only 1: unfold Add at 1; only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: red; only 1: auto with sets).	2.8381550312	2940
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union'	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.singlx	40	0.1.1.2.7.1	synth with cache (only 1: unfold Add at 1; only 1: intros x y H'; only 1: elim H'; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	0.999230861664	1135
Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add	40	5.0.1	synth with cache (only 1: intros X x H'; only 1: unfold Add; only 1: auto with sets).	0.156769990921	52
Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add_x	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative	40	8.0	synth with cache (only 1: unfold Add; only 1: auto  9 with sets).	0.173273086548	48
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative'	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_distributes	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.setcover_intro	40	0	synth with cache (only 1: auto with sets).	0.0128600597382	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Disjoint_Intersection	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_l	40	1.1.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intuition; only 1: intuition).	0.0230000019073	7
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_r	40	0.0	synth with cache (only 1: intros; only 1: auto with sets).	0.0196440219879	2
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_l	40	2.2.0.4.0.0.0.1	synth with cache (only 1: intros x H'0; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: unfold Setminus at 1; only 1: unfold In in *; only 1: tauto; only 1: auto with sets).	1.65705609322	2095
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_r	40	0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).	0.0394628047943	9
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_l	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_r	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Disjoint_noop	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Included_empty	40	0.0.1.0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: inversion_clear H1; only 1: intuition; only 1: contradict H; only 1: intuition; only 1: intros x H1; only 1: inversion_clear H1).	0.453106164932	220
Coq.Sets.Constructive_sets.Ensembles_facts.Extension	40	2.0.4.2.0.4.11.7	synth with cache (only 1: red; only 1: split; only 1: intros Hfst Hsnd; only 1: destruct H; only 1: trivial; only 1: intros Hfst Hsnd; only 1: destruct H; only 1: trivial).	2.15788388252	9597
Coq.Sets.Constructive_sets.Ensembles_facts.Noone_in_empty	40	4.3.7.4	synth with cache (only 1: red; only 1: intro H; only 1: intro H1; only 1: elim H1).	0.420927047729	941
Coq.Sets.Constructive_sets.Ensembles_facts.Included_Empty	40	1.0.0	synth with cache (only 1: red; only 1: red; only 1: destruct 1).	0.0100040435791	4
Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro1	40	0.12.5	synth with cache (only 1: intros B C H'; only 1: left; only 1: auto with sets).	0.90283703804	2167
Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro2	40	0.0	synth with cache (only 1: unfold Add at 1; only 1: auto with sets).	0.00818490982056	2
Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_add	40	0.0.37.4.4	synth with cache (only 1: intro; only 1: intro; only 1: exists x; only 1: unfold Add at 1; only 1: auto with sets).	5.66297698021	36605
Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_not_empty	40
Coq.Sets.Constructive_sets.Ensembles_facts.Add_not_Empty	40	0.19.7.8.3	synth with cache (only 1: intro H'1; only 1: intros x H; only 1: elim (Noone_in_empty x); only 1: destruct H; only 1: auto using Add_intro2 with sets).	15.5768258572	79845
Coq.Sets.Constructive_sets.Ensembles_facts.not_Empty_Add	40	1.7.10.5.2.0	synth with cache (only 1: intros A x; only 1: red; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).	3.53766608238	12100
Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_inv	40	2.4	synth with cache (only 1: destruct 1; only 1: auto with sets).	0.0287230014801	31
Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_intro	40	1.0.0	synth with cache (only 1: intros x y H'; only 1: elim H'; only 1: trivial with sets).	0.0140330791473	4
Coq.Sets.Constructive_sets.Ensembles_facts.Union_inv	40	0.0.12	synth with cache (only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).	0.328488111496	380
Coq.Sets.Constructive_sets.Ensembles_facts.Add_inv	40	0.15.0.1.1.0	synth with cache (only 1: unfold Add at 1; only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets; only 1: destruct 1; only 1: auto with sets).	20.7002360821	19583
Coq.Sets.Constructive_sets.Ensembles_facts.Intersection_inv	40	0.1.0	synth with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets).	0.0120761394501	4
Coq.Sets.Constructive_sets.Ensembles_facts.Couple_inv	40	2.1.6.0.0.0	synth with cache (only 1: intros A x y H'; only 1: induction H'; only 1: left; only 1: auto with sets; only 1: right; only 1: trivial with sets).	0.641521930695	1010
Coq.Sets.Constructive_sets.Ensembles_facts.Setminus_intro	40	0.0	synth with cache (only 1: intros x H'0; only 1: auto with sets).	0.00982689857483	2
Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_intro	40	3.0.0.0	synth with cache (only 1: intro; only 1: intros x H'0; only 1: red; only 1: auto with sets).	0.0133111476898	7
Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_strict	40	0.10.13.1	synth with cache (only 1: red; only 1: intros X H'; only 1: induction H'; only 1: auto with sets).	0.716829061508	3992
Coq.Sets.Finite_sets_facts.Finite_sets_facts.finite_cardinal	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_finite	40	7.0.2.4	synth with cache (only 1: intros X p C; only 1: elim C; only 1: trivial with sets; only 1: auto with sets).	0.285121917725	310
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Add_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Singleton_is_finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Union_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Finite_downward_closed	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Intersection_preserves_finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinalO_empty	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.inh_card_gt_O	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_soustr_1	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_is_functional	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_Empty	40	1.0.3.36	synth with cache (only 1: inversion 1; only 1: auto with sets; only 1: elim (not_Empty_Add U A x); only 1: auto with sets).	6.81118202209	8165
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_unicity	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_Add_gen	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_st_card_lt	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_card_le	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.G_aux	40	1.1.0.4.24.1.0.0.10.19	synth with cache (only 1: intros x0 H'1; only 1: apply H'1; only 1: auto with sets; only 1: intro X; only 1: intro H'; only 1: elim H'; only 1: intro H'0; only 1: intro H'3; only 1: elim H'3; only 1: auto with sets).	16.1800172329	66555
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Generalized_induction_on_finite_sets	40
Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_invert	40
Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_elim	40	5.5.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.112992048264	145