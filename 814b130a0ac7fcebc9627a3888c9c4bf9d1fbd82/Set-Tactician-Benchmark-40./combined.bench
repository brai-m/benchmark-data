coq-tactician-stdlib.8.12.dev	Coq.Floats.FloatLemmas.shift_value	40	0.104942	2	1	1	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy_prod.sum_N_predN	40	0.812443	104	61	0.4.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: elim (Nat.lt_irrefl _ H); only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy_prod.sum_plus	40	0.138370	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Fourier_util.Rlt_mult_inv_pos	40	1.995260	355	180	0.0.0.1.4	synth with cache (only 1: intros a b Ha Hb; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: apply Rinv_0_lt_compat; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.IZR_nz	40	0.010689	2	1	1	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_neg	40	3.320687	1718	201	1.17.2	synth with cache (only 1: intros H; only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_mult	40	0.038826	7	3	0.4.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.ROrderedType.Req_dec	40	0.253653	49	32	0.0.2.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_plus	40	6.566198	2904	404	3.0.14.9	synth with cache (only 1: intro; only 1: unfold Rsqr; only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.Rmax_l	40	0.038339	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_minus	40	0.030396	2	2	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.Rmax_r	40	0.035990	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.Rmin_l	40	0.037476	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.Rmin_r	40	0.035442	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.eps2_Rgt_R0	40	13.050434	5754	1054	0.2.2.19.0	synth with cache (only 1: intros n1 H'; only 1: unfold Rgt; only 1: apply Rmult_lt_0_compat; only 1: auto with real; only 1: apply Rinv_0_lt_compat, Rlt_0_2).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Rsrt	40	0.010184	1	1	0	synth with cache (only 1: exact RTheory).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.eps2	40	0.708152	155	42	0.0.0.0.8	synth with cache (only 1: intro; only 1: rewrite <- double; only 1: rewrite <- Rmult_assoc; only 1: apply Rinv_r_simpl_m; only 1: now apply not_0_IZR).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_neg_minus	40	1.415082	492	53	13.3	synth with cache (only 1: intros H1 H2; only 1: ring_Rsqr).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_1	40	0.013627	2	2	0.0	synth with cache (only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.tan_PI	40	2.921407	427	177	0.4.5.0	synth with cache (only 1: unfold tan; only 1: rewrite sin_PI; only 1: unfold Rminus, Rdiv; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.IZN_var	40	0.826280	381	76	0.1.0.8	synth with cache (only 1: intros x IH; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.eps4	40	9.581901	3315	399	23.6	synth with cache (only 1: intros n; only 1: field).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.Rlt_eps2_eps	40	0.039063	2	2	0.0	synth with cache (only 1: intros; only 1: lra).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.Rlt_eps4_eps	40	0.189539	73	16	0.0.5.3	synth with cache (only 1: intros; only 1: unfold IZR, IPR; only 1: simpl; only 1: lra).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.P_Rmin	40	0.663510	177	48	2.3.0.1	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto with real; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_locally_ext	40	40.044059	13961	3848
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech1	40	40.078533	25688	3406
coq-tactician-stdlib.8.12.dev	Coq.Reals.Alembert.Alembert_C1	40	40.105840	41809	4033
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsigma.Sigma.sigma_split	40	40.048624	16384	2095
coq-tactician-stdlib.8.12.dev	Coq.Reals.Binomial.pascal_step1	40	40.046770	13094	1866
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.CV_ALT_step0	40	40.053663	12910	1610
coq-tactician-stdlib.8.12.dev	Coq.Floats.FloatLemmas.frexp_spec	40	40.173324	74819	1598
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.interior_P1	40	40.137795	55254	4945
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.interior_P2	40	0.023008	8	3	3.2.0	synth with cache (only 1: unfold interior; only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy_prod.cauchy_finite	40	40.050554	17283	1458
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.exp_cof_no_R0	40	9.243926	1872	348	2.6.0.6.0	synth with cache (only 1: intro; only 1: apply Rlt_dichotomy_converse; only 1: right; only 1: apply Rinv_0_lt_compat; only 1: apply INR_fact_lt_0).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqSeries.sum_maj1	40	40.051858	16091	4009
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cos_rel.cos_plus_form	40	40.039918	11722	2049
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_case	40	40.090496	30356	3511
coq-tactician-stdlib.8.12.dev	Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	40	40.044171	10741	3952
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.eqR_Qeq	40	40.058055	19892	2689
coq-tactician-stdlib.8.12.dev	Coq.Reals.ArithProp.minus_neq_O	40	40.096959	36445	3542
coq-tactician-stdlib.8.12.dev	Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	0.153878	13	7	3.1.0	synth with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.INR_fact_neq_0	40	40.141450	18165	2237
coq-tactician-stdlib.8.12.dev	Coq.micromega.Fourier_util.Rle_mult_inv_pos	40	0.153587	5	4	0.1.0.0	synth with cache (only 1: intros x y H H0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.fact_simpl	40	0.013631	2	2	0.0	synth with cache (only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.in_holed_interval_dec	40	40.080505	29746	3914
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_comp	40	40.038490	10538	2790
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.MVT	40	40.069906	24452	2625
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cos_plus.Majxy_cv_R0	40	40.041173	11852	3682
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_case_strong	40	3.843495	2425	565	3.0.0.0.0.4.6.1	synth with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2); only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: unfold Rle; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.Boule_convex	40	40.058852	17164	3127
coq-tactician-stdlib.8.12.dev	Coq.Reals.ROrderedType.Reqb_eq	40	40.031689	7976	1655
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis3.derivable_pt_lim_div	40	40.050580	15498	2814
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.EUn_noempty	40	40.100261	36942	4185
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.R.plus_max_distr_l	40	40.052166	7508	1804
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.MaxRlist_P1	40	40.265144	20449	4710
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.growing_cv	40	40.102403	37758	5021
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Rsor	40	40.089586	31784	3633
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_fun.Alembert_exp	40	40.043236	10659	3553
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rderiv.cont_deriv	40	40.077198	29263	4240
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_gt_0_0	40	40.029750	6771	1472
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_pos_lt	40	0.071207	25	10	4.2	synth with cache (only 1: intros a Ha; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rcomplete.R_complete	40	40.087181	31857	5222
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.Un_in_EUn	40	2.477304	4962	308	0.31.8	synth with cache (only 1: intros; only 1: exists n; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.distance_refl	40	40.033156	8251	2754
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_reg.continuity_sin	40	40.044521	13379	3353
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Rinv_1	40	3.962657	1652	265	1.2.15.0	synth with cache (only 1: intro; only 1: elim archimed with x; only 1: intros H1 _; only 1: field).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Exp_prop.E1_cvg	40	40.033507	9570	2943
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.CVN_R_cos	40	40.112217	43880	2927
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_3PI2	40	40.034766	9307	2158
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.Nzorn	40	40.139087	59707	3466
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.prop_eps	40	40.046256	12486	2957
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis_reg.AppVar	40	40.046352	12727	3137
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.sin2_bound	40	40.037791	9827	2478
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_inv	40	40.064870	23168	2623
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.pr_nu_var	40	0.137356	20	8	0.0.0.1	synth with cache (only 1: unfold derivable_pt; only 1: intros f x1 x2 H1 H2 Heq; only 1: subst; only 1: apply pr_nu).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.exp_le_3	40	40.052449	15653	3376
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.formule	40	40.026235	5713	1199
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rprod.prod_SO_split	40	40.070384	8614	1727
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.phi_sequence_prop	40	40.034826	9608	2669
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_alt.pre_sin_bound	40	40.092917	11942	1889
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_pos	40	40.061880	19381	3047
coq-tactician-stdlib.8.12.dev	Coq.Reals.Sqrt_reg.sqrt_var_maj	40	40.082582	29447	2339
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_plus	40	40.056483	18188	4737
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech2	40	40.032058	8847	1875
coq-tactician-stdlib.8.12.dev	Coq.Reals.Binomial.pascal_step2	40	40.032661	9080	2307
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.CV_ALT_step1	40	40.057455	18673	2252
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsigma.Sigma.sigma_diff	40	40.032055	8433	2933
coq-tactician-stdlib.8.12.dev	Coq.Reals.Alembert.Alembert_C2	40	40.029481	8121	2987
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsigma.Sigma.sigma_diff_neg	40	0.160370	11	11	0.1.0.0.0.0.0	synth with cache (only 1: intros low high k H1 H2; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: rewrite (sigma_split H1 H2); only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.adherence_P1	40	40.115522	45603	4999
coq-tactician-stdlib.8.12.dev	Coq.Floats.FloatLemmas.ldexp_spec	40	40.319013	23282	1863
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.included_trans	40	0.208853	99	27	0.8.0	synth with cache (only 1: intros; only 1: intros H'3; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.exist_exp	40	40.042140	8218	2653
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.f_incr_implies_g_incr_interv	40	40.047549	13766	1745
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqSeries.Rseries_CV_comp	40	40.054815	18469	3748
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derivable_pt_id_interv	40	0.057484	2	2	0.0	synth with cache (only 1: intros; only 1: apply derivable_pt_id).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_R.Rsth	40	0.355296	9	7	1.0.0.0.2	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.Qeq_eqR	40	40.050655	17762	1843
coq-tactician-stdlib.8.12.dev	Coq.Reals.ArithProp.le_minusni_n	40	40.075904	28477	3122
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.simpl_fact	40	40.073761	25030	3174
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_O	40	0.015461	2	2	0.0	synth with cache (only 1: intros p0; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_1	40	0.028023	6	4	0.1.0.1	synth with cache (only 1: intros; only 1: simpl; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_add	40	0.064444	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: rewrite H'; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cos_rel.pow_sqr	40	40.047156	14401	1967
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.middle_in_interval	40	40.082857	27457	4758
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Boule_half_to_interval	40	40.028685	6446	2571
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_div	40	30.502232	5330	984	0.0.22.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: field; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Rsth	40	0.139164	9	7	1.0.0.0.2	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_eq_0	40	0.215114	79	27	1.1.2.0.0	synth with cache (only 1: unfold Rsqr; only 1: intros; only 1: apply Rsqr_0_uniq; only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_lb_growing	40	40.040280	12312	2860
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_refl	40	0.293450	205	37	4.7	synth with cache (only 1: right; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_refl	40	0.015311	3	3	0.0.0	synth with cache (only 1: intro; only 1: right; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cos_plus.reste1_maj	40	40.051207	16671	2738
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_Rgt_l	40	40.066123	18699	4807
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_minus_plus	40	1.100266	449	89	0.8.4	synth with cache (only 1: intro; only 1: intros z; only 1: ring_Rsqr).
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.MVT_cor1	40	40.069054	26076	2574
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_plus_minus	40	0.026336	2	2	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.FTCN_step1	40	40.067035	24688	2100
coq-tactician-stdlib.8.12.dev	Coq.Reals.Machin.atan_sub_correct	40	40.027170	6725	1097
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.FTC_Newton	40	0.718152	163	32	10.0	synth with cache (only 1: intros; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.pow_i	40	7.354664	3169	336	2.0.0.1.2.13.6	synth with cache (only 1: intro; only 1: intros [| n]; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: rewrite Rmult_0_l; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_Rgt_r	40	5.280088	5033	770	0.2.0.0.0.18	synth with cache (only 1: intuition; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: intro; only 1: assumption; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.boule_of_interval	40	40.058977	19118	2736
coq-tactician-stdlib.8.12.dev	Coq.Reals.ROrderedType.Rcompare_spec	40	40.102873	33367	3484
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.R.plus_max_distr_r	40	40.038998	9791	1551
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.decreasing_growing	40	40.053258	18597	1560
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.MinRlist_P1	40	40.047840	12788	4094
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rderiv.Dconst	40	40.057482	20653	3836
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.Un_bound_imp	40	40.082352	28427	4525
coq-tactician-stdlib.8.12.dev	Coq.Reals.DiscrR.Rlt_R0_R2	40	0.079289	8	7	0.0.0.0.1.0.0	synth with cache (only 1: apply Rlt_trans with (0 + 1); only 1: apply Rlt_n_Sn; only 1: rewrite Rplus_comm; only 1: apply Rplus_lt_compat_l; only 1: replace R1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.distance_symm	40	40.059142	19152	2686
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_reg.CVN_R_sin	40	40.046809	6885	2055
coq-tactician-stdlib.8.12.dev	Coq.Reals.DiscrR.IZR_eq	40	0.106460	12	4	0.1	synth with cache (only 1: intros n m H; only 1: now Morphisms.f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Qeq_true	40	40.059819	20987	1963
coq-tactician-stdlib.8.12.dev	Coq.Reals.Exp_prop.exp_form	40	40.043888	13787	1984
coq-tactician-stdlib.8.12.dev	Coq.Reals.Exp_prop.div2_double	40	0.038895	2	2	0.0	synth with cache (only 1: intros a; only 1: apply Nat.div2_double).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Exp_prop.div2_S_double	40	0.048524	3	2	1.0	synth with cache (only 1: intro; only 1: apply Nat.div2_succ_double).
coq-tactician-stdlib.8.12.dev	Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40	6.671927	8934	829	0.0.22.0.0.0.12.10.53	synth with cache (only 1: constructor; only 1: intros H; only 1: intros Eq0; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto; only 1: intro abs; only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  2).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis3.derivable_pt_div	40	40.056459	15958	3513
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.continuity_cos	40	40.032824	9660	2722
coq-tactician-stdlib.8.12.dev	Coq.Reals.ROrderedType.R_as_OT.lt_compat	40	2.021719	617	160	0.10.2	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx, Hy; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.Reals.ROrderedType.R_as_OT.le_lteq	40	0.197821	19	9	3.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.tan_2PI	40	40.052952	17079	2428
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.R.plus_min_distr_l	40	10.324774	2670	455	0.0.0.0.19	synth with cache (only 1: intros a m H; only 1: apply min_mono; only 1: eauto with *; only 1: intros x y; only 1: apply Rplus_le_compat_l).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.R.plus_min_distr_r	40	0.039016	8	5	0.0.0.3.0	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm n p), (Rplus_comm m p), (Rplus_comm _ p); only 1: apply min_monotone; only 1: intros x y; only 1: apply Rplus_le_compat_l).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.R.opp_max_distr	40	0.034325	4	4	0.0.0.0	synth with cache (only 1: intros x y; only 1: apply Rmax_case_strong; only 1: now intros w; rewrite Rmin_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmin_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.R.opp_min_distr	40	0.035934	4	4	0.0.0.0	synth with cache (only 1: intros x y; only 1: apply Rmin_case_strong; only 1: now intros w; rewrite Rmax_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmax_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P1	40	40.035404	8909	2961
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.mul_factor_wd	40	40.061797	9598	2338
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.cos2_bound	40	40.049653	8524	2276
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.pr_nu_var2	40	40.049044	17069	2445
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.exp_increasing	40	40.042938	12323	2739
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.maj_term1	40	40.037414	10921	2924
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rprod.prod_SO_pos	40	40.054652	16363	3520
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P1	40	40.169451	14643	1981
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_alt.pre_cos_bound	40	40.048040	11613	3207
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlogic.Arithmetical_dec.sig_forall_dec	40	40.093425	29699	5375
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_positivity	40	40.039149	11122	3010
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.tech_up	40	40.079769	26334	2812
coq-tactician-stdlib.8.12.dev	Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40	40.049077	15842	2921
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_opp	40	40.050026	16589	3962
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech3	40	40.048664	14152	2012
coq-tactician-stdlib.8.12.dev	Coq.Reals.Binomial.pascal_step3	40	40.032442	8762	2142
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.CV_ALT_step2	40	40.046391	14249	2438
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsigma.Sigma.sigma_first	40	40.051481	15563	3095
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.interior_P3	40	40.078731	26396	4764
coq-tactician-stdlib.8.12.dev	Coq.Reals.Alembert.AlembertC3_step1	40	40.070398	24528	3281
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqSeries.Cesaro	40	40.040413	12012	3308
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.pr_nu_var2_interv	40	40.028972	8807	2042
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_R.Rri	40	40.054929	15962	1878
coq-tactician-stdlib.8.12.dev	Coq.Reals.ArithProp.lt_minus_O_lt	40	40.062405	21308	2881
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.Rle_Qle	40	40.063980	22812	3064
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.Rpow_mult_distr	40	40.063520	19697	3616
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cos_rel.A1_cvg	40	40.042191	12826	3579
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.point_in_holed_interval_works	40	40.072846	20140	3138
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Boule_lt	40	40.053615	19300	2450
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Rri	40	40.047855	15797	1875
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.R_one_zero	40	0.035696	1	1	0	synth with cache (only 1: exact R1_neq_R0).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_up_decreasing	40	40.045677	12777	2772
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_irrefl	40	40.163107	69604	3532
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_irrefl	40	0.020081	4	4	0.0.0.0	synth with cache (only 1: intros r H; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_incr_0	40	40.057903	15151	5550
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.MVT_cor2	40	40.037646	10528	3247
coq-tactician-stdlib.8.12.dev	Coq.Reals.Machin.tech	40	40.023417	5755	1761
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cos_plus.reste2_maj	40	40.047078	13727	3062
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.NewtonInt_P1	40	40.052140	16498	1798
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.exist_exp0	40	40.064769	22161	3682
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_Rgt	40	40.085345	27431	6066
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.boule_in_interval	40	40.065394	23409	3174
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.decreasing_cv	40	40.145480	56613	5353
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.AbsList_P1	40	40.067575	21680	3350
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rderiv.Dx	40	40.061381	20929	4072
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.growing_prop	40	40.062093	20220	2545
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.law_cosines	40	40.037145	11102	1639
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	40	40.044990	12810	2857
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Qeq_false	40	40.031442	7999	1210
coq-tactician-stdlib.8.12.dev	Coq.Reals.Exp_prop.div2_not_R0	40	40.062768	20717	2093
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.RisLinearOrder	40	40.107274	21862	240
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis3.derivable_div	40	40.076282	24526	3897
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_gt_cos_7_8	40	40.092821	15954	2935
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_R.Rcri	40	18.352818	4416	394	5.14.6.35	synth with cache (only 1: intro H5; only 1: intros; only 1: rewrite Rmult_comm; only 1: let rec norm := gen_rewrite in norm).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_cos_PI4	40	40.067473	22940	2231
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_R.R_one_zero	40	0.050054	1	1	0	synth with cache (only 1: exact R1_neq_R0).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.R.minus_max_distr_l	40	40.036512	9467	1632
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P2	40	40.060413	18735	2700
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.mul_factor_gt	40	40.062132	17011	4180
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.cos_sin	40	40.030443	6933	1944
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_inv	40	40.051952	18007	2970
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_not_eq	40	21.570361	15912	2229	0.0.0.14.11.3	synth with cache (only 1: intros r H; only 1: red; only 1: firstorder  (subst; auto); only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.exp_lt_inv	40	40.035469	8564	3289
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_not_eq	40	2.820338	1261	346	11.0.0.0.0	synth with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply (Rlt_irrefl r1); only 1: rewrite H0; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.maj_term2	40	40.037929	11384	2285
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rprod.prod_SO_Rle	40	40.055671	18871	2757
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P2	40	40.028342	8108	2125
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlogic.not_not_archimedean	40	40.097986	30345	2359
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_sqrt	40	40.050756	16385	1887
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.up_tech	40	40.054221	19644	1859
coq-tactician-stdlib.8.12.dev	Coq.Reals.Sqrt_reg.sqrt_continuity_pt	40	40.065835	21807	3573
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.RealField.RTheory	40	40.076915	27142	2897
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_minus	40	40.066729	23946	3834
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech4	40	40.050354	12597	3848
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech5	40	0.033185	2	2	0.0	synth with cache (only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Binomial.pascal	40	40.039831	11717	2559
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.CV_ALT_step3	40	40.044891	11721	3307
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsigma.Sigma.sigma_last	40	40.025435	5302	3637
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.complementary_P1	40	40.088173	33032	3727
coq-tactician-stdlib.8.12.dev	Coq.Reals.Alembert.AlembertC3_step2	40	40.065634	22391	3784
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsigma.Sigma.sigma_eq_arg	40	1.821718	1049	145	8.0.0.0.5	synth with cache (only 1: intros H1; only 1: unfold sigma; only 1: rewrite <- minus_n_n; only 1: simpl; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqSeries.Cesaro_1	40	40.048301	15589	3465
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv	40	40.045868	15992	1775
coq-tactician-stdlib.8.12.dev	Coq.Reals.ArithProp.even_odd_cor	40	40.073393	27560	2458
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.Qle_Rle	40	40.062997	21956	2517
coq-tactician-stdlib.8.12.dev	Coq.Reals.ArithProp.le_double	40	0.014930	2	2	0.0	synth with cache (only 1: intros n m; only 1: apply Nat.mul_le_mono_pos_l, Nat.lt_0_succ).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_nonzero	40	40.039465	7164	1225
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cos_rel.C1_cvg	40	40.037954	10444	3989
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.first_in_holed_interval	40	40.090597	34347	3151
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Un_cv_ext	40	40.032454	11278	2095
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Rcri	40	40.099266	7397	847
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_lb_maj_y	40	40.038473	10940	3186
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_incr_0_var	40	40.053607	13334	4780
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.MVT_cor3	40	40.025093	5538	3022
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_0	40	40.083598	18639	2156
coq-tactician-stdlib.8.12.dev	Coq.Reals.Machin.Machin_2_3	40	40.028929	7522	1939
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.NewtonInt_P2	40	40.042116	12101	1354
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.exp_0	40	40.139691	24534	2428
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cos_plus.reste1_cv_R0	40	40.027496	6581	3311
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rdefinitions.total_order_T	40	40.075404	26361	3217
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_l	40	40.055918	15110	4441
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_r	40	0.449821	108	53	4.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro H1; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_left	40	0.075982	16	8	1.0.0.0.1	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_right	40	0.029712	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.Ball_in_inter	40	40.048766	14917	3081
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.MinRlist_P2	40	40.073355	23393	4490
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.ub_to_lub	40	40.135119	54176	4770
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_incr_1	40	7.384659	2219	932	3.1.2.3	synth with cache (only 1: intros x y; only 1: unfold Rsqr; only 1: intros a b; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rderiv.Dadd	40	40.047668	15140	3653
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.Un_cv_crit_lub	40	40.102483	28555	3325
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.triangle	40	40.041184	10295	3858
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.translation_0	40	0.119984	29	10	1.3.0.1	synth with cache (only 1: intros; only 1: split; only 1: auto with real; only 1: eauto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	40	40.017158	3024	1934
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Qle_true	40	40.079844	25479	1946
coq-tactician-stdlib.8.12.dev	Coq.Reals.Exp_prop.Reste_E_maj	40	40.028081	6646	2558
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.RdisjunctEpsilon	40	40.100768	35560	2676
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis3.derive_pt_div	40	40.045155	10995	2643
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_PI3_cos_PI6	40	40.036987	10315	2401
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_R.Rdi	40	40.057839	14189	1600
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.PI_2_aux	40	40.083956	31916	2551
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.R.minus_max_distr_r	40	40.042810	12251	1932
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P3	40	40.046105	13781	2527
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.mul_factor_gt_f	40	40.133790	12813	3797
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.cos_sin_opp	40	40.030850	7524	1816
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40	40.141670	55034	2965
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derive_pt_inv	40	40.027518	8154	2150
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.exp_ineq1	40	40.024581	5877	2239
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_dichotomy_converse	40	40.075717	25041	5014
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rprod.fact_prodSO	40	40.060714	20461	1182
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rprod.le_n_2n	40	0.056669	10	4	0.4.0	synth with cache (only 1: simpl; only 1: intros; only 1: trivial using Nat.le_add_r).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.maj_term3	40	40.034559	9157	2340
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P3	40	40.019886	4868	1730
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.AbsList_P2	40	18.149445	8265	1443	1.0.2.0.2.1.0.1.2.0.1.2.6.0	synth with cache (only 1: intros; only 1: induction l; only 1: simpl; only 1: set (k0 := match Rcase_abs y with | left _ => (1 - up (x / - y))%Z | right _ => (up (x / y) - 1)%Z end); only 1: exists (x - IZR k0 * y); only 1: elim H; only 1: elim H; only 1: simpl; only 1: intros; only 1: exists a; only 1: auto; only 1: simpl; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlogic.sig_not_dec	40	40.052391	17183	2022
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_0	40	40.082521	30356	3412
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.fp_R0	40	40.135644	59285	1170
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.R.minus_min_distr_l	40	11.619318	3292	730	1.0.5.1.8	synth with cache (only 1: intros n m H; only 1: apply min_max_antimonotone; only 1: unfold Rminus, Rdiv; only 1: do 3 red; only 1: auto using Rnot_lt_le with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	40	40.054583	17467	2697
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.RealField.Rfield	40	40.389348	19177	3777
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_mult	40	40.066197	22746	3963
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech6	40	40.047655	12935	3446
coq-tactician-stdlib.8.12.dev	Coq.Reals.Binomial.binomial	40	40.052800	15578	2309
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.CV_ALT_step4	40	40.063700	21389	3546
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.adherence_P2	40	40.112477	42839	4274
coq-tactician-stdlib.8.12.dev	Coq.Reals.Alembert.Alembert_C3	40	40.021239	5422	2476
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40	40.028996	9516	1924
coq-tactician-stdlib.8.12.dev	Coq.Reals.ArithProp.euclidian_division	40	40.098489	35870	4333
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.Rlt_Qlt	40	40.099218	38611	2990
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_RN_plus	40	40.040541	11175	2380
coq-tactician-stdlib.8.12.dev	Coq.Reals.ArithProp.tech8	40	0.026623	7	2	5.0	synth with cache (only 1: intros; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cos_rel.B1_cvg	40	40.041647	12265	3616
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.first_in_holed_interval_works	40	40.150437	63221	3071
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Alt_first_term_bound	40	40.031399	10880	2049
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Rdi	40	40.033845	8755	1553
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_lb_maj	40	40.040901	12142	3621
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.Rolle	40	40.040737	13388	2968
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Q2R_0	40	29.351811	23793	2652	0.0.0.0.1.0.3.0.30.8	synth with cache (only 1: generalize (Rlt_irrefl 0); only 1: unfold IZR; only 1: rewrite R0_def; only 1: unfold Qinv, Q2R, Qeq; only 1: intros; only 1: simpl in *; only 1: rewrite Rmult_0_l; only 1: unfold IZR; only 1: rewrite R0_def; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_1	40	40.066435	14539	1385
coq-tactician-stdlib.8.12.dev	Coq.Reals.Machin.Machin_4_5_239	40	40.068000	11018	1465
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.NewtonInt_P3	40	40.023258	5942	2286
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.cosh_0	40	40.052332	15865	3284
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cos_plus.reste2_cv_R0	40	40.026053	6054	3242
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rdefinitions.Req_appart_dec	40	40.107649	41352	2708
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.split_couple_eq	40	6.603419	3216	675	19.0	synth with cache (only 1: intros; only 1: now injection H as [=->]).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rle_min_compat_r	40	40.076111	9048	1983
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rle_min_compat_l	40	0.039246	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 (apply Rmin_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.Boule_center	40	40.058428	18549	3101
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_incrst_0	40	40.057374	14473	5501
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.lb_to_glb	40	40.121192	44562	3754
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rderiv.Dmult	40	40.046659	14281	3617
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.isometric_translation	40	40.058755	19053	2524
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.Un_cv_crit	40	40.122402	48143	4706
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.NewtonInt_P4	40	9.179368	3295	396	0.9.7.2.5	synth with cache (only 1: intros r1 r2; only 1: intros x; only 1: intros (?, ?); only 1: simpl; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	40	40.032399	8132	2693
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.Req_constr_refl	40	40.137741	53017	3083
coq-tactician-stdlib.8.12.dev	Coq.Reals.Exp_prop.maj_Reste_cv_R0	40	40.024703	5381	2598
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_PI6_cos_PI3	40	40.035185	9509	2132
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.PI6_RGT_0	40	0.085625	6	5	0.1.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_pi2	40	40.040350	9676	2616
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.PI6_RLT_PI2	40	0.049907	3	2	0.1	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P4	40	40.096188	36447	2468
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.tech_limit	40	40.061957	19196	2133
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.cos_sin_Rabs	40	40.028551	5719	2497
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.lowerCutBelow	40	40.231207	56591	2510
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.Rabs_derive_1	40	40.025870	6867	2266
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.ln_exists1	40	40.056907	18946	2884
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Req_dec	40	40.110558	36201	5143
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rprod.RfactN_fact2N_factk	40	40.030234	9757	1585
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_exists	40	40.046653	16071	2469
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveRcomplete.seq_cv_proper	40	40.045215	11473	1526
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.MaxRlist_P2	40	40.057682	17626	3841
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.maj_term4	40	40.035814	7601	2732
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rprod.INR_fact_lt_0	40	0.738701	120	52	0.0.1.0.0.1.2	synth with cache (only 1: intros n; only 1: apply lt_0_INR; only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.pos_Rl_P1	40	1.188844	251	99	2.1.4.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_1	40	40.060293	18542	3866
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.R.minus_min_distr_r	40	40.041888	10297	1666
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.for_base_fp	40	40.068500	20751	4395
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.RealField.Rlt_n_Sn	40	40.125213	46269	2114
coq-tactician-stdlib.8.12.dev	Coq.Reals.Sqrt_reg.derivable_pt_sqrt	40	40.056328	18077	3048
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_const	40	40.075147	28042	3933
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech7	40	40.030554	5469	1303
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.CV_ALT	40	40.055331	17747	3669
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.adherence_P3	40	40.058540	16898	5130
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.maj_ss	40	27.425193	21405	2897	30.1.5	synth with cache (only 1: intros x n; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Alembert.Alembert_C4	40	40.026488	6901	2913
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_Z.Zcri	40	0.017069	2	2	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_Z.Z_one_zero	40	0.036394	10	2	4	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_non_negative	40	40.094451	33805	3309
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.avl_node	40	0.020697	2	2	0.0	synth with cache (only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.Qlt_Rlt	40	40.091699	34152	2966
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.IVT_interv_prelim0	40	40.038590	11737	2247
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_lt	40	40.064132	18020	5005
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_up_min_x	40	40.041195	11871	3090
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Alt_CVU	40	40.023568	5679	2411
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Qri	40	40.059199	19417	1576
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Q_one_zero	40	0.047943	3	1	2	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Q2R_1	40	40.083433	29183	2600
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.nonneg_derivative_1	40	40.045453	14675	3347
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_plus	40	40.382033	17145	1929
coq-tactician-stdlib.8.12.dev	Coq.Reals.Machin.Machin_2_3_7	40	40.049664	9133	1653
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.sinh_0	40	40.132153	34832	2417
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cos_plus.reste_cv_R0	40	40.026792	6341	3303
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rdefinitions.Rrepr_appart_0	40	40.068196	5831	377
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmin_lt_r	40	40.066665	17045	2141
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.first_two_in_interval_works	40	40.081747	30608	3188
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_comm	40	40.061482	17269	1368
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.CVN_CVU	40	40.052782	18487	2704
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_incrst_1	40	40.066367	18780	5351
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.Req_constr_leibniz	40	35.240999	12349	2129	7.0.7.0.8.0	synth with cache (only 1: intros; only 1: destruct (total_order_T x y); only 1: destruct s; only 1: now elim H; only 1: exact e; only 1: now elim H).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rderiv.Dmult_const	40	40.039265	11542	3776
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.rotation_0	40	40.055243	17212	2433
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.finite_greater	40	40.081739	29140	3400
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.NewtonInt_P5	40	40.061042	15453	2314
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	40	40.024842	5486	2460
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmin_morph_Proper	40	10.517287	2468	885	0.0.0.4.0.0.0.4.1.0	synth with cache (only 1: intros; only 1: split; only 1: apply CRmult_morph; only 1: rewrite H, H0; only 1: reflexivity; only 1: reflexivity; only 1: apply CRmult_morph; only 1: rewrite H, H0; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Exp_prop.Reste_E_cv	40	40.020688	5033	2357
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.pi2_int	40	40.039729	10587	2809
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_PI6	40	40.043469	9864	2565
coq-tactician-stdlib.8.12.dev	Coq.nsatz.NsatzTactic.nsatz1.psos_r1b	40	40.034198	6969	1089
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmin_morphT	40	0.621628	33	18	1.4.0	synth with cache (only 1: intros R x y exy z t ezt; only 1: rewrite exy, ezt; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CauchyAbsStable	40	40.098109	32479	2999
coq-tactician-stdlib.8.12.dev	Coq.nsatz.NsatzTactic.nsatz1.psos_r1	40	0.372554	8	6	1.0.0.0.1.0	synth with cache (only 1: intros x y H; only 1: assert (0 == - (0 : R)); only 1: cring; only 1: rewrite ring_sub_def; only 1: rewrite <- H; only 1: cring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P5	40	40.079688	28722	3232
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.tech_limit_contr	40	40.038601	10059	2303
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.sin_cos	40	40.030288	7094	2259
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.Rabs_derive_2	40	40.024164	6145	2232
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.lowerCutAbove	40	40.051188	12614	3612
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.ln_exists	40	40.021222	4416	2727
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rtotal_order	40	40.082332	27286	3597
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rdichotomy	40	0.096412	36	13	0.0.1	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_le	40	0.053538	21	9	0.0.1.1.0	synth with cache (only 1: red; only 1: left; only 1: rewrite Rlt_def; only 1: rewrite Rlt_def in H; only 1: exact H).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P4	40	40.031054	8705	2405
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_ge	40	1.146601	413	132	0.0.0.10	synth with cache (only 1: unfold Rgt; only 1: red; only 1: intros; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveRcomplete.seq_cv_morph	40	40.259794	11220	1260
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructivePower.CRpow_ge_one	40	40.068742	11595	3462
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.D_x_no_cond	40	40.051063	14334	1746
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RinvN_pos	40	0.016431	4	1	3	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rprod.C_maj	40	40.026547	7400	1369
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.pos_Rl_P2	40	40.081259	27812	4002
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_eq_0	40	40.050118	14731	1584
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.base_fp	40	40.058991	16781	5008
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_ge	40	4.164007	1690	393	8.4.4	synth with cache (only 1: intros x y H; only 1: red; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_le	40	0.030137	5	5	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: red; only 1: tauto; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_gt	40	0.010543	2	2	0.0	synth with cache (only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_lt	40	0.006475	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.RealField.Rlt_0_2	40	40.098978	37087	2600
coq-tactician-stdlib.8.12.dev	Coq.Reals.Sqrt_reg.derive_pt_sqrt	40	40.033991	9839	2507
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_scal	40	40.049557	15533	3975
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech11	40	40.044651	13842	2278
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech12	40	0.033147	2	2	0.0	synth with cache (only 1: intros; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rdefinitions.up	40	30.332544	72564	1539	192	synth with cache (only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.open_set_P1	40	40.073049	24212	4411
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.alternated_series	40	40.056987	18427	3640
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_Q.Qri	40	40.030694	8789	640
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.min_ss	40	40.139536	37280	4119
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_Z.Zdi	40	40.025561	7384	887
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_0	40	40.069737	21413	2859
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.empty_avl	40	0.008559	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_avl	40	0.112722	19	7	0.3.0	synth with cache (only 1: intros; only 1: unfold create; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_height	40	0.010555	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Alembert.Alembert_C5	40	40.023700	5391	2498
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.Q2R_plus	40	40.054207	15741	3204
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.Rlt_pow_R1	40	40.070199	21052	4975
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.IVT_interv_prelim1	40	40.043065	14096	2365
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_up_min	40	40.060857	21473	3507
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.pow2_ge_0	40	40.029763	7516	2260
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Qcri	40	40.024342	5278	442
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Q2R_inv_ext	40	40.067514	22858	1890
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.nonpos_derivative_0	40	40.041632	12038	3335
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_opp	40	40.069592	21728	1394
coq-tactician-stdlib.8.12.dev	Coq.Reals.Machin.PI_2_3_7_ineq	40	40.043250	13837	2423
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.simpl_cos_n	40	40.051857	15060	2276
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cos_plus.cos_plus	40	40.039910	10415	2634
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.tearing_sequences	40	40.122411	48167	4269
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40	40.063143	18229	3883
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_pos	40	0.854093	256	116	0.0.0.0.1.1.1	synth with cache (only 1: intros x y; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intros; only 1: assumption; only 1: intros; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_glb	40	0.043497	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intros H'; only 1: eauto using Rle_trans, Rle_refl; only 1: intro H1; only 1: eauto using Rle_trans, Rle_refl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_glb_lt	40	0.040388	8	7	1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro; only 1: auto; only 1: intros Eq0; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40	40.051573	12464	4927
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.CVU_continuity	40	40.084796	9655	2947
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.IQR_zero_quot	40	40.110909	43535	1408
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rderiv.Dopp	40	40.054930	18044	3734
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.rotation_PI2	40	40.044079	11010	3579
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.cauchy_bound	40	40.098837	35417	5303
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_Q.Qcri	40	16.209478	2273	348	1.0.1.5.2.11	synth with cache (only 1: intro EQ; only 1: intros; only 1: apply Ncring_initial.Zsth; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_Q.Q_one_zero	40	0.027653	1	1	0	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.antiderivative_P1	40	40.034439	10297	1959
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_reg.derivable_pt_sin	40	40.048494	13996	3322
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_minus	40	40.044160	13207	2242
coq-tactician-stdlib.8.12.dev	Coq.Reals.Exp_prop.exp_plus	40	40.047749	15141	1990
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sqrt2_neq_0	40	40.075840	23902	1703
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmin_l	40	40.041189	7933	3116
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_neg_nth	40	40.043163	10687	2200
coq-tactician-stdlib.8.12.dev	Coq.nsatz.NsatzTactic.nsatz1.nsatzR_diff	40	40.035924	2526	678
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P6	40	40.058673	13176	2108
coq-tactician-stdlib.8.12.dev	Coq.nsatz.NsatzTactic.nsatz1.P0Z_correct	40	0.389127	30	9	7.0	synth with cache (only 1: intro; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.lim_x	40	40.105825	38015	3658
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.sin_cos_opp	40	40.031292	7151	2131
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.Rderivable_pt_abs	40	40.072308	26510	2563
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40	40.116450	45453	2235
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.exp_ln	40	40.038963	11575	2161
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Integral_domain.integral_domain.integral_domain_minus_one_zero	40	40.036031	12717	381
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructivePower.CRpow_ge_zero	40	40.048348	6559	2413
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveRcomplete.Rfloor	40	40.083893	21561	889
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RinvN_cv	40	40.022509	5092	2113
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.Rabs_4	40	40.055865	17563	2893
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.Rlist_P1	40	40.084552	30873	3820
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_lem_0	40	40.032904	9082	2504
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.base_Int_part	40	40.046579	14273	2416
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.pow2_abs	40	28.819599	7497	1387	0.4.0.1.17.1	synth with cache (only 1: intros; only 1: unfold Rabs; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: simpl; only 1: ring; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rnot_le_lt	40	40.060990	18828	2126
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.RealField.Rgen_phiPOS	40	40.078280	27807	3013
coq-tactician-stdlib.8.12.dev	Coq.Reals.Sqrt_reg.continuity_pt_sqrt	40	40.044533	13096	3144
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_inv	40	40.048313	15543	3853
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.div_eq_inv	40	0.038037	2	2	0.0	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.scal_sum	40	40.079498	26556	2443
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_In	40	0.182167	85	30	1.1.0.2.3	synth with cache (only 1: induction 1; only 1: constructor; only 1: eauto; only 1: auto; only 1: auto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.closed_set_P1	40	40.063844	18985	5038
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.alternated_series_ineq	40	40.045626	14289	2700
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.Wn_decreasing	40	40.102757	23676	2684
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40	19.212494	2035	870	0.0.0.0.0.0.0.0.0.2.0.1.0.0	synth with cache (only 1: apply Rmult_integral_contrapositive_currified; only 1: exact R1_neq_R0; only 1: assert (Hyp : 0 < 2); only 1: prove_sup0; only 1: apply Rinv_neq_0_compat; only 1: generalize (Rlt_le 0 2 Hyp); only 1: intro H1; only 1: red; only 1: intro H2; only 1: generalize (sqrt_eq_0 2 H1 H2); only 1: intro H; only 1: absurd (2 = 0); only 1: discrR; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_avl	40	40.066123	20802	2404
coq-tactician-stdlib.8.12.dev	Coq.Reals.Alembert.Alembert_C6	40	40.025753	6386	3075
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.Q2R_mult	40	40.041386	11517	2447
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.Rlt_pow	40	40.050677	14808	3537
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.tech_pow_Rmult	40	0.008321	1	1	0	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.IVT_interv	40	40.020269	5143	1867
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.tech_pow_Rplus	40	2.086142	546	160	0.1.3.3.0	synth with cache (only 1: intro; only 1: intro; only 1: intros H1; only 1: repeat rewrite S_INR; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_lb_cv	40	40.047539	15436	3335
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.QSORaddon	40	40.038848	9140	3759
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Qdi	40	40.048449	8309	798
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.Q2R_opp	40	4.115102	2175	275	2.0.2.14.1.6	synth with cache (only 1: intro n; only 1: unfold Qmult, Qeq, Q2R; only 1: ring_simplify; only 1: rewrite <- opp_IZR; only 1: simpl; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Z_one_zero	40	0.095645	4	2	0.2	synth with cache (only 1: intro EQ; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.PI_tg_pos	40	6.722110	2647	519	8.2.1.3.0	synth with cache (only 1: intros; only 1: left; only 1: apply Rinv_0_lt_compat; only 1: apply lt_0_INR; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Zcri	40	0.060631	2	2	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rnot_ge_gt	40	12.129613	9257	1281	1.0.8.0.9.4.0.1	synth with cache (only 1: intros; only 1: red; only 1: generalize (Rtotal_order r1 r2); only 1: induction 1; only 1: trivial; only 1: destruct H; only 1: red; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rnot_le_gt	40	0.035337	4	4	0.0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rnot_ge_lt	40	0.018048	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_minus	40	40.048480	7434	884
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.increasing_decreasing_opp	40	40.054143	17534	3160
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.archimed_cor1	40	40.112162	40701	4108
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rnot_lt_le	40	2.695522	707	245	3.1.2.0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: intros n m; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rnot_gt_le	40	0.038654	10	5	0.3.0.0	synth with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	40	1.466659	612	108	2.4.10	synth with cache (only 1: intros a b; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rnot_gt_ge	40	0.482219	174	60	2.4.0.1	synth with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rnot_lt_ge	40	0.112183	13	9	0.2.1.0	synth with cache (only 1: intros r1 r2 H; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.tearing_sequences_projsig	40	40.040454	14266	1171
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_case	40	40.076233	23823	5956
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_case_strong	40	0.034045	6	5	0.0.0.1.0	synth with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_neg_pos_le_1	40	40.050965	13600	3872
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40	40.040083	11717	2874
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rderiv.Dminus	40	40.031783	8003	3598
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.Rring	40	40.121934	38355	1731
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.Rlt_4	40	22.853495	8124	1420	0.3.0.2.2.4.0.0.2.6.4	synth with cache (only 1: intros f1 a x X; only 1: elim (Rplus_ne 1); only 1: cut (0 < 1); only 1: rewrite Rplus_0_r; only 1: intros r n H'; only 1: elim (Rplus_ne 1); only 1: intro; only 1: intro; only 1: intros; only 1: Lra.lra; only 1: apply Rlt_0_1).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.quadruple	40	0.086420	6	2	4.0	synth with cache (only 1: intro; only 1: field).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.isometric_rotation_0	40	40.045362	13255	1976
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.GP_infinite	40	40.068826	22593	3995
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_Q.Qdi	40	40.167330	5277	842
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.NewtonInt_P6	40	40.044242	16064	1912
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.neighbourhood_P1	40	18.714121	16217	2098	3.1.0.1.2.0.0.0.2.1.12	synth with cache (only 1: intros f x X; only 1: intro; only 1: unfold neighbourhood; only 1: intros; only 1: elim H0; only 1: intros; only 1: unfold included; only 1: exists x0; only 1: intros; only 1: unfold included in H0; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_reg.derivable_pt_cos	40	40.042927	11903	2500
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_reg.derivable_sin	40	0.045936	7	4	0.0.3.0	synth with cache (only 1: intro; only 1: unfold derivable_pt; only 1: exists (cos x); only 1: apply derivable_pt_lim_sin).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.quadruple_var	40	3.120003	1651	149	11.3.11	synth with cache (only 1: intro H; only 1: unfold Rdiv; only 1: field).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.open_set_P2	40	0.892095	546	106	3.8.4	synth with cache (only 1: intros; only 1: intros P; only 1: firstorder  auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin2_cos2	40	40.052434	16158	2791
coq-tactician-stdlib.8.12.dev	Coq.Reals.Exp_prop.exp_pos_pos	40	40.073893	11342	2477
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmin_r	40	40.029903	5165	2403
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_nonneg	40	40.195393	25806	3154
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P7	40	40.035688	7834	2307
coq-tactician-stdlib.8.12.dev	Coq.nsatz.NsatzTactic.nsatz1.Rext	40	40.025534	2258	826
coq-tactician-stdlib.8.12.dev	Coq.nsatz.NsatzTactic.nsatz1.Rset	40	0.093588	7	4	1.1.1.0	synth with cache (only 1: constructor; only 1: apply ring_setoid; only 1: apply ring_setoid; only 1: apply ring_setoid).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.limit_plus	40	40.149280	11742	2565
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.sin_cos_Rabs	40	40.026142	4917	2266
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.Rcontinuity_abs	40	40.033272	9764	2577
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.CRsum_eq	40	40.159289	35800	2616
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.DRealQlim	40	40.145381	58560	1606
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.exp_inv	40	40.033425	9489	2403
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructivePower.CRpow_gt_zero	40	40.053721	7447	939
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Integral_domain.integral_domain.pow_not_zero	40	40.480011	5916	449
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.Riemann_integrable_ext	40	40.030024	8835	1935
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P0	40	40.061168	18359	3766
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveRcomplete.FQ_dense	40	40.018401	2012	856
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Cring.cring.cring_eq_ext	40	40.047963	13729	344
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_lem_1	40	40.034679	10162	2415
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_def	40	0.088017	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.Int_part_INR	40	40.067444	22735	2422
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.derivable_pt_tan	40	40.160442	12146	2219
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	40	40.108996	40360	3262
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_div	40	40.050947	13705	2994
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.decomp_sum	40	40.046281	15362	1929
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_MapsTo	40	40.163355	63008	4202
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.Vn_growing	40	40.117961	30000	2683
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sqrt3_2_neq_0	40	40.030734	7280	2401
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_1	40	40.034685	8474	2040
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.f_interv_is_interv	40	40.024323	7157	2257
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.poly	40	40.063976	19128	4004
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_up_cv	40	40.051369	15123	2873
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.fp_nat	40	10.629504	12219	1314	11.5.21	synth with cache (only 1: intro Dec; only 1: unfold IZR, IPR; only 1: intuition eauto  4 with real).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.is_neg_true	40	40.105937	41277	2108
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.Q2R_minus	40	40.041810	10960	2643
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.PI_tg_decreasing	40	40.067852	24993	2603
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Zdi	40	40.037563	5829	620
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.nonpos_derivative_1	40	40.030992	8135	3043
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_mult	40	40.160236	20019	1453
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_tac.Zeqb_ok	40	10.843911	4707	397	0.0.15.2.26	synth with cache (only 1: intro n; only 1: intros; only 1: red; only 1: apply Zeq_bool_eq; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Floats.FloatAxioms.Prim2SF_inj	40	40.282775	34351	3410
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.Alembert_cos	40	40.031699	8122	3024
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.cosn_no_R0	40	1.045811	176	68	0.0.0.0.6.0	synth with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40	40.085992	20638	3444
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_not_le	40	40.080893	20010	2912
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	40	0.097710	30	7	7	synth with cache (only 1: auto using eqb_correct, eqb_complete).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_not_le	40	0.077036	9	3	1.0	synth with cache (only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.tearing_sequences_inc_dec	40	40.059380	17652	3559
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_Rle	40	40.054353	12255	2576
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.neg_pos_Rsqr_le	40	40.051937	14571	4022
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.SFL_continuity_pt	40	40.033633	10421	2506
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rderiv.Dx_pow_n	40	40.063686	21805	4031
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.RringExt	40	40.084040	37397	267
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.isometric_rotation	40	40.038586	10377	2481
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.split_lt_succ	40	4.428089	1592	256	2.3.14	synth with cache (only 1: inversion 1; only 1: auto; only 1: now left).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.CV_shift	40	40.079410	28244	4356
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_reg.derivable_cos	40	40.036956	9210	2638
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.antiderivative_P2	40	40.024384	6674	1918
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.continuous_neq_0	40	40.073503	24710	2932
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.open_set_P3	40	40.112988	36872	4067
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.open_set_P4	40	0.056461	21	7	0.5.0	synth with cache (only 1: unfold open_set, complementary, point_adherent; only 1: intros; only 1: contradiction).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.plus_sum	40	22.363537	5177	1722	4.0.0.0.0.1.6	synth with cache (only 1: intros n; only 1: intro; only 1: induction N as [| N HrecN]; only 1: reflexivity; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos2	40	40.050986	15639	2016
coq-tactician-stdlib.8.12.dev	Coq.Reals.Exp_prop.exp_pos	40	40.021406	4756	2642
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin2	40	0.072976	3	3	0.0.0	synth with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRnegPartAbsMin	40	40.031459	5495	1540
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_right	40	40.063536	17359	2021
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P8	40	40.035163	10011	1985
coq-tactician-stdlib.8.12.dev	Coq.nsatz.NsatzTactic.nsatz1.Rtheory	40	40.042241	2455	1165
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.limit_Ropp	40	40.159318	16660	3155
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.tan_sin	40	40.033872	8114	2174
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.continuity_finite_sum	40	40.035236	9814	2449
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.sum_eq_R0	40	40.077446	25558	2697
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.DRealAbstr	40	40.179853	75169	1732
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.exp_Ropp	40	40.055069	17398	2104
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_increasing_inv	40	40.061575	18828	1420
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructivePower.CRpow_mult	40	40.043859	12304	1894
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P5	40	40.048848	15894	1769
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Integral_domain.integral_domain.Rintegral_domain_pow	40	40.023054	4373	664
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P1	40	40.058486	18252	3536
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Cring.cring.cring_almost_ring_theory	40	40.024781	6777	110
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_square	40	40.060731	19907	2586
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.067153	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.derive_pt_tan	40	40.036958	11962	1742
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.RealField.Rdef_pow_add	40	40.040884	12191	1911
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveRcomplete.Qabs_Rabs	40	40.045522	9977	2240
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_comp	40	40.054554	18058	3351
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_alt	40	40.088571	29951	4339
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.Vn_Un_Wn_order	40	40.052411	17693	1987
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_pow2	40	5.529305	1677	330	1.3.1.9	synth with cache (only 1: intros x; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: apply sqrt_square).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40	40.056681	17944	3548
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_2	40	40.041129	10619	1816
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.continuity_pt_recip_prelim	40	40.026144	8280	2103
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.Power_monotonic	40	40.055574	16188	3482
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_lb_dicho_up	40	40.044581	13066	2750
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.R0_fp_O	40	40.027850	6069	1488
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.is_neg_false	40	40.066155	21420	3149
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.Q2R_inv	40	40.098323	40860	2739
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.PI_tg_cv	40	40.069428	23177	4365
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.positive_derivative	40	40.040504	12224	3577
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_inv	40	40.222024	43277	2405
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_tac.comm	40	40.018201	4822	323
coq-tactician-stdlib.8.12.dev	Coq.Floats.FloatAxioms.SF2Prim_inj	40	40.085830	30625	3602
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40	3.855279	702	120	0.2.0.10	synth with cache (only 1: intros Eq2; only 1: red; only 1: apply pow_nonzero; only 1: discrR).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.exist_cos	40	40.047781	14588	2435
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_not_ge	40	40.090160	30894	4469
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Ring63.TestRing.test	40	40.058965	14547	3888
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_not_ge	40	0.079530	5	5	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_not_lt	40	0.029539	4	4	0.0.0.0	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: unfold not; only 1: intuition eauto  3).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_not_lt	40	0.138171	39	16	0.0.0.0.1	synth with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_not_gt	40	0.179388	54	22	0.2.0.0.0.1	synth with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intros; only 1: red; only 1: apply Rle_not_lt; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_not_gt	40	0.121531	27	13	0.0.2	synth with cache (only 1: intros; only 1: apply Rle_not_lt; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Req_le	40	0.017364	3	3	0.0.0	synth with cache (only 1: intros; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Req_ge	40	0.030387	14	5	0.0.3	synth with cache (only 1: intros; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Req_le_sym	40	0.020096	4	3	0.1.0	synth with cache (only 1: unfold Rle; only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Req_ge_sym	40	0.013707	3	2	1.0	synth with cache (only 1: unfold Rge; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_asym	40	0.023806	4	3	0.1.0	synth with cache (only 1: do 2 intro; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_comm	40	40.077821	28348	2387
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.neg_pos_Rsqr_lt	40	40.093913	30289	5010
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.SFL_continuity	40	40.049181	15981	2788
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rderiv.Dcomp	40	40.050403	15955	3852
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.Rleft_inverse	40	40.089219	27327	3677
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.isometric_rot_trans	40	40.046895	12472	1952
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40	40.039515	8122	1341
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.increase_seq_transit	40	40.089522	34992	3640
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.CV_shift'	40	40.082329	29258	4063
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40	1.351621	651	111	2.4.11	synth with cache (only 1: intros a b; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.pow2_sqrt	40	16.636918	4810	1021	0.0.0.0.2.0.2.10	synth with cache (only 1: simpl; only 1: unfold sqrt; only 1: intro; only 1: rewrite Rmult_1_r; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.Un_growing_shift	40	1.231600	568	126	3.7.0.1	synth with cache (only 1: intro; only 1: intros a Ha; only 1: intros eps; only 1: now Nat.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_reg.derive_pt_sin	40	40.039877	9506	2722
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_reg.derive_pt_cos	40	0.415421	43	23	1.4.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cos).
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	40	11.024457	6270	939	1.0.6.10.16	synth with cache (only 1: red; only 1: intros x y H'; only 1: intros Eq0; only 1: unfold opp_fct, limit1_in, limit_in, dist; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.open_set_P5	40	40.096358	33680	5139
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.antiderivative_P3	40	40.097450	14971	2183
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.sum_eq	40	40.069839	23739	2818
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_PI2	40	40.061962	19783	2597
coq-tactician-stdlib.8.12.dev	Coq.Reals.Exp_prop.derivable_pt_lim_exp_0	40	40.042621	11350	2426
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmin_sym	40	40.047394	10793	2863
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_le_abs	40	40.058557	17494	2680
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P9	40	40.064727	14701	1938
coq-tactician-stdlib.8.12.dev	Coq.nsatz.NsatzTactic.nsatz1.PolZadd_correct	40	40.049314	2459	770
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.limit_minus	40	40.038181	8751	3582
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.tan_sin_opp	40	40.031801	7443	2246
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40	40.028586	8281	2081
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.sum_const	40	40.070387	24097	2151
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.ln_increasing	40	40.037702	10197	2806
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.UpperAboveLower	40	40.082164	24053	2500
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructivePower.CRpow_one	40	40.045089	14238	998
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.maxN	40	40.042607	12334	2937
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P2	40	40.085631	29475	3630
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_unique	40	42.342319	23000	2043
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Cring.cring.cring_morph	40	40.032014	3897	781
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.derive_increasing_interv	40	40.036811	12414	1903
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.RealField.R_power_theory	40	40.066094	21729	1740
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_cv_self	40	40.070191	10238	1571
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_plus	40	40.065542	22750	3649
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_1	40	40.113906	41703	3130
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.min_maj	40	40.105837	39050	4293
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.Rlt_sqrt3_0	40	40.040219	11988	2855
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	0.086467	5	5	0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Cring.cring.cring_power_theory	40	7.671041	876	40	0.0.39	synth with cache (only 1: split; only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.pow_2_n_growing	40	32.459037	11471	970	0.2.8.12.22.49	synth with cache (only 1: intro n; only 1: replace (S n) with (1 + n)%nat; only 1: unfold pow_2_n; only 1: red; only 1: auto with real; only 1: now Nat.nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl_1	40	40.103241	19574	2083
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.RPow_abs	40	40.061569	18262	3835
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.Rminus_Int_part1	40	40.045816	9398	1638
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Q2R_m_Proper	40	40.034986	8065	3576
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.Q2R_div	40	40.032627	9751	1536
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	40	40.059049	15974	3271
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.continuity_pt_recip_interv	40	40.023502	4902	2500
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLUB.CRlt_lpo_dec	40	40.174449	21086	2932
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.exist_PI	40	40.037106	10298	2471
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_le	40	40.148759	10871	2100
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.simpl_sin_n	40	40.057724	17272	3008
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_antisym	40	40.094182	23586	3080
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_antisym	40	0.028196	4	3	1.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_le_eq	40	0.079629	21	8	2.1	synth with cache (only 1: intros a b; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_ge_eq	40	0.022184	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_l	40	40.063619	16545	6628
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_eq_compat	40	0.206750	56	16	0.1.5	synth with cache (only 1: intros n m H1 H2; only 1: intros; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_eq_compat	40	0.025904	5	5	0.0.0.0.0	synth with cache (only 1: intros x x' y y'; only 1: intros; only 1: replace x with x'; only 1: replace y with y'; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_r	40	0.045949	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro H1; only 1: auto with real; only 1: intro H1; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_left	40	0.038117	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_right	40	0.030312	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_bounds_le	40	40.058631	16149	2575
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.CVN_R_CVS	40	40.043455	14565	2801
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rderiv.D_pow_n	40	40.038500	12114	2556
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.Rinv_pos	40	40.092501	31942	2117
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.isometric_trans_rot	40	40.081407	9017	2251
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.decrease_seq_transit	40	40.080968	29538	3982
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	40	40.086364	11709	1934
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_Rsqr_abs	40	40.053710	14021	3257
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.Rsqr_sqrt	40	0.042931	3	3	0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x H)).
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.negative_derivative	40	40.027392	6286	2867
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.disc_P1	40	40.094431	32758	5155
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.Zsth	40	0.086567	12	4	6	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.antiderivative_P4	40	40.017239	3939	2077
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.uniqueness_sum	40	40.077964	25004	2682
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.minus_sum	40	0.126991	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_pos_tech	40	40.053183	17022	2705
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmin_mult	40	40.043439	11336	1511
coq-tactician-stdlib.8.12.dev	Coq.Reals.Exp_prop.derivable_pt_lim_exp	40	40.034121	9746	2512
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P10	40	40.085861	19236	2887
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_pos	40	40.106559	14743	2402
coq-tactician-stdlib.8.12.dev	Coq.nsatz.NsatzTactic.nsatz1.PolZmul_correct	40	40.021747	4288	495
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.limit_free	40	40.083366	27451	4079
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.tan_cos	40	40.037393	10158	2106
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_eq0	40	40.055075	20226	942
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.multiTriangleIneg	40	40.095000	37775	2544
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40	40.037735	11437	2339
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.ln_exp	40	40.061905	19433	2701
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.DRealRepr	40	40.270848	77136	1684
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.Heine_cor1	40	40.029940	8258	2469
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructivePower.CRpow_proper	40	40.336363	23945	4176
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P3	40	40.040547	10822	4105
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.Endomorph_id	40	40.036846	8678	2249
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.QCauchySeq_bounded_prop	40	40.061458	12027	1729
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.plus_Rsqr_gt_0	40	40.023152	6172	2420
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveRcomplete.Rcauchy_limit	40	40.046760	10014	1190
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_opp	40	40.057488	19017	3666
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_1	40	40.131038	44520	2908
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.maj_min	40	40.062439	19708	4637
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.cos_PI4	40	40.059637	19074	1942
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Cring.cring.cring_div_theory	40	40.042135	13002	401
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.pow_2_n_infty	40	40.151510	66945	2934
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_extens	40	40.672474	41271	2479
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl	40	40.056591	14683	3406
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.Pow_x_infinity	40	40.090449	33096	4937
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_node_iff	40	5.985640	771	124	2.1.1.0.7.4	synth with cache (only 1: split; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Q2R_pow_pos	40	40.053609	16293	2424
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	40	40.068769	12423	965
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_leaf	40	1.615776	1367	138	18.7.0	synth with cache (only 1: intros; only 1: intros Heq; only 1: inversion_clear 1).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_leaf	40	0.023985	6	3	0.0.3	synth with cache (only 1: red; only 1: intros; only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.Rminus_Int_part2	40	40.039606	8645	4496
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derivable_pt_lim_recip_interv	40	40.021292	6101	1823
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.Alt_PI_ineq	40	40.052706	14887	1572
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_dec	40	40.073679	22600	2748
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_more_than_1_digit	40	0.060201	10	3	1	synth with cache (only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_ne_zero	40	4.255318	1035	231	1.1.0.6.1.1	synth with cache (only 1: simple induction n; only 1: simpl; only 1: now destruct 1; only 1: simpl; only 1: intros a b Hb; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Decidable_sound	40	0.025929	3	3	0.0.0	synth with cache (only 1: intros P H Hp; only 1: apply -> Decidable_spec; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Decidable_complete	40	0.024193	3	3	0.0.0	synth with cache (only 1: intros P H Hp; only 1: apply <- Decidable_spec; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Decidable_sound_alt	40	0.053591	5	5	0.0.0.0.0	synth with cache (only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Decidable_complete_alt	40	0.030350	3	3	0.0.0	synth with cache (only 1: intros P [wit spec] Hd Hc; only 1: simpl in *; only 1: intuition congruence).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_not_eq0	40	23.126934	14159	1156	0.24.22	synth with cache (only 1: intro; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x | _ => intro | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end; only 1: discriminate || simpl).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_node	40	3.138478	724	112	0.0.5.12	synth with cache (only 1: red; only 1: intuition; only 1: intuition_in; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakl_shiftr	40	0.240452	65	12	3.5	synth with cache (only 1: destruct x; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakr_shiftl	40	0.047750	27	5	7.0	synth with cache (only 1: intros; only 1: now destruct x).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_appart	40	41.391178	9314	1211
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.factorDenom	40	15.267866	5858	1449	0.0.4.7.1.11	synth with cache (only 1: intros x y z; only 1: rewrite Qmult_comm; only 1: unfold Qeq, Qmult; only 1: rewrite Pos.mul_comm; only 1: simpl in *; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Computational.Decidable_PosEq_obligation_1	40	0.638370	124	70	2.0.4	synth with cache (only 1: split; only 1: apply Pos.eqb_eq; only 1: apply Pos.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.Alembert_sin	40	40.030352	7399	3058
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_trans	40	40.173842	15474	2649
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rle_max_compat_r	40	40.049034	13623	3455
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rle_max_compat_l	40	0.037438	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 (apply Rmax_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_bounds_lt	40	40.087895	32609	4373
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Translation.poly_of_formula_eval_compat	40	40.109329	39952	2502
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_node	40	3.922735	550	97	0.0.6.2.6	synth with cache (only 1: intros; only 1: unfold gt_tree; only 1: intros; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Computational.Decidable_PosLt_obligation_1	40	3.512961	1649	377	18.0	synth with cache (only 1: unfold Pos.ltb, Pos.lt; only 1: now case Pos.compare).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_left	40	0.024760	2	2	0.0	synth with cache (only 1: compute; only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_right	40	0.017597	1	1	0	synth with cache (only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_left	40	0.013194	1	1	0	synth with cache (only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_right	40	0.013770	1	1	0	synth with cache (only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.CVU_cv	40	40.052483	13949	3245
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.tearing_sequences_ordered_forall	40	40.093708	35514	2717
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.Rmult_pos	40	40.108471	39293	1894
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40	40.080329	28519	1525
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalQ.of_to	40	41.322680	38309	2081
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.sin_no_R0	40	5.470812	1196	319	0.0.0.0.11.0	synth with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	40	40.133384	1271	278
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_mult_alt	40	40.043429	12424	2110
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.RmaxRmult	40	5.843914	2337	478	1.1.1.1.1.1.7.2.0	synth with cache (only 1: intros x y z; only 1: intro; only 1: do 2 (apply Rmax_case_strong; intro); only 1: case H0; only 1: auto with real; only 1: auto with real; only 1: auto with real; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.continuity_P1	40	40.067863	24789	2979
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.null_derivative_0	40	40.037548	10494	2974
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.Zr	40	40.054638	8375	352
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.NewtonInt_P7	40	40.039505	9367	2593
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.sum_decomposition	40	40.055335	15172	1808
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_PI2	40	40.045870	13343	2204
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmin_plus	40	40.033801	7743	1278
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_opp	40	40.046855	9136	2445
coq-tactician-stdlib.8.12.dev	Coq.nsatz.NsatzTactic.nsatz1.R_power_theory	40	40.093635	2565	896
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.limit_mul	40	40.037442	8707	3175
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.tan_cos_opp	40	40.032989	8027	2321
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.sum_assoc	40	40.042530	11209	1778
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P11	40	40.030849	7860	2017
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_finite_sum	40	40.044404	13849	2595
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.ln_1	40	40.467022	23291	1968
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.Rle_antisym	40	40.058819	14383	1253
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.Heine_cor2	40	40.038167	12266	2454
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P4	40	40.067848	22895	3315
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructivePower.CRpow_inv	40	40.071487	23977	2068
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P1	40	0.037975	3	3	0.0.0	synth with cache (only 1: simpl; only 1: intros r1 r2 H H0; only 1: reflexivity || apply Rle_antisym).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_proper	40	40.865124	20303	2173
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.PI2_lower_bound	40	40.036297	11777	1982
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Computational.Decidable_PosLe_obligation_1	40	24.147395	7140	1254	8.13.0.6	synth with cache (only 1: revert q; only 1: unfold Pos.leb, Pos.le; only 1: intro m; only 1: now case Pos.compare).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_minus	40	40.044892	13194	3947
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveRcomplete.Rcauchy_complete	40	42.044654	19502	1641
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.cauchy_maj	40	40.051976	15438	4397
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Cring.Zcri	40	40.037555	10920	566
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_PI4	40	40.049526	14884	2737
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalQ.of_to	40	40.191592	55383	3317
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.cv_dicho	40	40.046915	15163	2882
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_opp	40	40.504994	34594	2134
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl_1	40	40.037773	9483	1961
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Q2R_pow_N	40	40.098174	36703	2600
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Qmult_integral	40	0.053338	4	4	0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qmult; only 1: simpl; only 1: now rewrite <- Z.mul_eq_0, !Z.mul_1_r).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.Rminus_fp1	40	40.042867	9229	2362
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	40	40.057920	13738	4616
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.Alt_PI_RGT_0	40	40.109203	41117	3689
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.wB_pos	40	40.112471	41638	2287
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_epsilon	40	40.314615	40107	2199
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.Rinv_pow	40	40.055315	16595	2988
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_zero	40	40.051907	6844	1554
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rappart_repr	40	40.102560	25647	2825
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_cauchy	40	40.253707	16001	2015
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_finite_sum	40	23.438534	8597	1878	0.0.0.0.0.0.0.21.0	synth with cache (only 1: intros; only 1: intro; only 1: unfold derivable_pt; only 1: pose proof (derivable_pt_lim_finite_sum An x N) as H; only 1: induction N as [| N HrecN]; only 1: exists 0; only 1: apply H; only 1: exists (sum_f_R0 (fun k : nat => INR (S k) * An (S k) * x ^ k) (Init.Nat.pred (S N))); only 1: apply H).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult	40	0.193305	134	14	12.0	synth with cache (only 1: destruct x as [xn limx]; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim0	40	40.056344	5253	1775
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_trans	40	40.084178	26838	3395
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_abs	40	40.070258	21990	4374
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Translation.poly_of_formula_valid_compat	40	40.188330	77506	1426
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1	40	1.351431	183	64	5.0.0.2	synth with cache (only 1: intros f a b pr H; only 1: intros; only 1: elim H1; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1_decr	40	0.135748	5	5	0.0.0.0.0	synth with cache (only 1: intros f g lb ub x lb_lt_ub x_encad g_wf f_deriv; only 1: apply f_deriv; only 1: apply g_wf; only 1: lra; only 1: lra).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_not_in	40	40.110839	28159	2485
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.CVU_ext_lim	40	40.040605	13641	2695
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_trans	40	1.808686	1182	187	7.3.6.1.0	synth with cache (only 1: intros m x y; only 1: intros H'; only 1: red; only 1: generalize y; only 1: eauto with *).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_not_in	40	0.027948	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_trans	40	0.024293	1	1	0	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_bst	40	0.011464	3	1	2	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.torn_number	40	40.141941	63453	409
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_1	40	0.436411	134	41	4.4.0	synth with cache (only 1: intros H1; only 1: intro; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.Rplus_reg_l	40	40.113303	35876	4152
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.exist_sin	40	40.065426	22417	3357
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalQ.dnorme_spec	40	40.146903	62149	1875
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40	41.010391	24664	1252
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	40	40.058546	14243	2545
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_mult	40	40.031997	7366	3165
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40	40.122437	44766	5303
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.increasing_decreasing	40	40.104821	19639	3163
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.continuity_P2	40	40.096764	30536	4278
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_gen	40	40.068439	22234	982
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.NewtonInt_P8	40	40.028551	7245	2606
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40	40.115016	47728	732
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_lub	40	3.214456	841	237	0.0.0.0.0.2.8	synth with cache (only 1: intros l' d d' Hlen Hnth; only 1: apply Rmax_case_strong; only 1: intros; only 1: clear H; only 1: auto; only 1: intros; only 1: eauto using Rle_trans, Rle_refl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_lub_lt	40	0.039590	8	7	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro; only 1: assumption; only 1: intro; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.sum_Rle	40	40.058897	18706	2397
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.PI_RGT_0	40	40.027624	5691	2960
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmin_left	40	40.027370	5239	2250
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_left	40	40.041114	3240	1163
coq-tactician-stdlib.8.12.dev	Coq.nsatz.NsatzTactic.nsatz1.norm_correct	40	40.020512	4530	592
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_trans	40	12.813497	10637	1324	10.1.1.4.9.0	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intros EQ; only 1: intros n m H1 H2; only 1: intros le_mn0; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.single_limit	40	40.055798	16244	2348
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.sin_tan	40	40.033583	8139	2102
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.sum_Rle	40	40.415691	36445	2463
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P12	40	40.060230	16798	1896
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.ln_lt_inv	40	40.036803	9975	3033
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.lowerUpper	40	40.060990	19125	2584
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P5	40	40.052125	15275	3656
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P2	40	40.048386	15747	2650
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructivePower.CRpow_plus_distr	40	40.026065	6096	1531
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_compose	40	40.166949	68899	497
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_le	40	0.047390	10	6	1.0.0.1	synth with cache (only 1: intros; only 1: intro abs; only 1: apply CRmorph_increasing_inv in abs; only 1: contradiction).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.PI2_3_2	40	40.049288	16743	1794
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Computational.Decidable_eq_poly_obligation_1	40	40.069215	19950	3869
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_mult	40	40.048041	13762	3901
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_le_inv	40	3.952736	2101	405	10.1.0.3.2.0	synth with cache (only 1: intros; only 1: intro abs; only 1: destruct H; only 1: apply CRmorph_increasing; only 1: destruct (CRltLinear R1); only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_zero	40	0.159643	15	5	1.1.0	synth with cache (only 1: split; only 1: apply CRmorph_rat; only 1: apply CRmorph_rat).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_one	40	0.031841	2	2	0.0	synth with cache (only 1: intros; only 1: apply CRmorph_rat).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.cauchy_opp	40	40.089957	32379	4385
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveRcomplete.CRealLtIsLinear	40	40.042264	8022	2730
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.tan_PI4	40	40.049993	14885	2535
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalQ.hnorme_spec	40	40.098509	36938	1856
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.continuity_seq	40	40.041395	12221	3613
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_plus	40	40.199672	40631	2845
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl	40	40.037477	8853	2851
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Qpower_positive_eq_zero	40	40.064199	15621	2539
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.Rminus_fp2	40	40.038206	8259	2083
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	40	40.068429	17059	5720
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_1	40	40.071247	24574	1808
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_2	40	0.034448	4	4	0.0.0.0	synth with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z	40	0.044847	8	5	0.0.0.3.0	synth with cache (only 1: unfold to_Z; only 1: generalize digits_ne_1; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_lt_1_zero	40	40.076441	25037	4365
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_not_epsilon	40	40.177931	56252	3345
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_or_twice_plus_one	40	40.043349	9196	780
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S	40	0.015508	2	2	0.0	synth with cache (only 1: intros n m; only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rplus_comm	40	40.128718	48756	2806
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_cosh	40	40.028611	8384	2338
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S_tail	40	1.050130	368	115	4.1.0.0.1.0.0	synth with cache (only 1: intros; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_comm	40	40.085025	22860	1807
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_le_abs_0	40	40.051923	12452	5461
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Translation.poly_of_formula_sound	40	40.053388	9113	1022
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derivable_pt_recip_interv	40	40.041155	11855	1787
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.CVU_derivable	40	40.043308	13704	2612
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.torn_number_above_first_sequence	40	40.122800	51390	2013
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_1	40	40.041301	11406	931
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.cos_sym	40	40.059618	20068	1963
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_2	40	0.889289	432	100	4.1.1.3.1	synth with cache (only 1: destruct m; only 1: easy; only 1: simpl; only 1: intro H; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.Rzero_lt_one	40	40.198420	84460	492
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40	40.070656	17694	2141
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_lt_R0	40	40.039030	10837	2906
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.Rlt_mult_inv_pos	40	0.574606	69	40	0.0.0.1.2	synth with cache (only 1: intros a b Ha Hb; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: apply Rinv_0_lt_compat; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalQ.dnormf_spec	40	40.780371	54706	661
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.Rle_mult_inv_pos	40	0.296604	15	13	0.0.1.0	synth with cache (only 1: intros x y H H0; only 1: apply Rmult_le_pos; only 1: assumption; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.continuity_P3	40	40.039947	11839	3409
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.null_derivative_1	40	40.034132	9371	3886
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Ring31.TestRing.test	40	41.706588	6874	1229
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_Psucc	40	40.030572	6921	709
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.NewtonInt_P9	40	40.042591	13333	1856
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_1	40	40.153640	55242	1376
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_Rlt	40	40.070845	19543	6482
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.Rsum_abs	40	40.045714	12768	2913
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.PI_4	40	40.055167	17068	2699
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Computational.Decidable_null_obligation_3	40	24.709219	20944	1321	6.0.0.0.24.26.5	synth with cache (only 1: split; only 1: destruct p; only 1: destruct b; only 1: easy; only 1: easy; only 1: first [ intuition congruence | auto ]; only 1: now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_appart_0	40	40.050422	7610	2629
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmin_right	40	40.028172	5025	2561
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_lt_trans	40	40.070979	14666	2943
coq-tactician-stdlib.8.12.dev	Coq.nsatz.NsatzTactic.nsatz1.PolZeq_correct	40	40.024717	5518	848
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_le_trans	40	0.196325	51	25	0.0.1	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.cos_tan	40	40.019117	3589	1767
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.limit_comp	40	40.042472	10487	3598
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.Abs_sum_maj	40	40.132465	38479	2742
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.sin_pi_minus	40	0.136690	5	5	0.0.0.0.0	synth with cache (only 1: intro x; only 1: rewrite sin_minus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.sin_pi_plus	40	0.180961	5	5	0.0.0.0.0	synth with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P13	40	40.019167	4204	1663
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.ln_inv	40	40.035777	9719	2522
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.DRealOpen	40	40.119280	45368	3915
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_const	40	32.882011	9762	2769	0.0.0.0.0.0.0.0.0.0.0.0.0.6.0.0	synth with cache (only 1: unfold continuity; only 1: unfold constant, continuity_pt; only 1: red; only 1: unfold limit1_in; only 1: unfold limit_in; only 1: intros; only 1: exists 1; only 1: split; only 1: apply Rlt_0_1; only 1: intros; only 1: generalize (H x x0); only 1: intro; only 1: rewrite H2; only 1: simpl; only 1: rewrite R_dist_eq; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.PI_neq0	40	9.082239	2230	257	0.0.0.2.9.10	synth with cache (only 1: apply Rlt_dichotomy_converse; only 1: unfold Rgt; only 1: right; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P6	40	40.062351	19133	4688
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P3	40	40.059300	19179	2151
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructivePower.CR_double	40	40.024648	5859	1043
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_morph	40	40.047705	7428	1791
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.cos_pi_minus	40	8.134114	2065	455	0.5.0.0.0.9.0	synth with cache (only 1: intro x; only 1: unfold Rminus; only 1: rewrite cos_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: rewrite <- cos_sym; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.cos_pi_plus	40	0.133240	5	5	0.0.0.0.0	synth with cache (only 1: intro x; only 1: rewrite cos_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.PI2_1	40	40.031350	8651	2183
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.append_assoc_0	40	40.069866	23149	2708
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.cauchy_min	40	40.085810	28101	5511
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveRcomplete.CRealAbsLUB	40	40.035996	4937	908
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.cos_3PI4	40	40.047736	12931	2276
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_lb_car	40	40.057175	20164	2914
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_unique	40	40.080137	24411	2490
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalQ.hnorme_invol	40	40.503218	32911	1786
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_opp	40
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl_1	40	40.071892	13046	2110
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Qpower_positive_zero	40	40.032717	10440	1547
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.plus_Int_part1	40	40.045712	13662	2371
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	40	40.074418	9607	1252
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_of_pos	40	40.054262	17309	1604
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_R1	40	40.071033	24252	3133
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLUB.DDlow_below_up	40	40.076694	20134	2279
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rplus_assoc	40	40.098377	34888	3881
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_sinh	40	40.027815	5474	2665
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_n_0	40	40.064248	18038	3354
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_size	40	0.029873	8	3	0.5.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_proper_0_l	40	40.373301	12264	2289
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_le_abs_1	40	40.054954	14287	4900
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound	40	40.084303	26580	2780
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Completeness.list_nth_base	40	0.062322	5	2	2.1	synth with cache (only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derivable_pt_recip_interv_decr	40	40.030686	3588	1414
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.torn_number_below_second_sequence	40	40.054706	11354	4360
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.sin_antisym	40	40.057613	18456	2447
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_1	40	40.034586	7270	587
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40	40.051734	15515	2264
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.plus_IQR	40	40.081068	22112	2603
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_div_alt	40	40.037541	9947	2779
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.Rsepare	40	40.042225	10659	3185
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.derive_increasing_interv_ax	40	40.053165	18284	3226
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalQ.dnorme_invol	40	40.127291	51869	2125
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.binary_value	40	2.695381	2717	248	18.17	synth with cache (only 1: intro H; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_neg	40	40.059045	13755	6940
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_0	40	40.125100	51344	1562
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_add	40	40.025415	3076	758
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.sum_cte	40	40.053531	14792	2914
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Computational.Decidable_valid_obligation_1	40	40.053497	15468	2301
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_morph_Proper	40	40.045207	4557	1901
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmin_lt	40	40.031419	5950	2330
coq-tactician-stdlib.8.12.dev	Coq.nsatz.NsatzTactic.nsatz1.mult_l_correct	40	40.024169	5687	896
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_gt_trans	40	40.081907	24380	3181
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.two_compl_value	40	4.269474	3579	392	3.14.4.6	synth with cache (only 1: intro H; only 1: inversion 1; only 1: generalize dependent n; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.limit_inv	40	40.059398	11748	3334
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.cond_pos_sum	40	40.062491	12231	1235
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P14	40	40.029517	7897	1760
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.ln_mult	40	40.040946	11010	2185
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.sum_growing	40	7.808810	3170	749	10.0.3.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: apply H; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (sum_f_R0 An N + Bn (S N)); only 1: apply Rplus_le_compat_l; only 1: apply H; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.DRealReprQ	40	40.359791	20282	1367
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_scal	40	40.077984	27232	3927
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Validity.valid_le_compat	40	8.693678	7666	1048	5.0.2.4.7.0.0.10.0	synth with cache (only 1: intros x y z; only 1: destruct 1; only 1: intro E; only 1: trivial; only 1: constructor; only 1: Pos.Private_Tac.order; only 1: now f_equal; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_PI	40	40.047804	14740	2674
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P4	40	40.049520	14607	2325
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.Rabs_triang_gen	40	1.623519	276	138	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P7	40	40.053591	15570	3798
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructivePower.GeoCvZero	40	40.064147	19165	2319
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Completeness.list_nth_succ	40	19.873444	13353	2144	0.0.7.17	synth with cache (only 1: intros m Hm; only 1: intros; only 1: unfold list_nth; only 1: now rewrite Pos.peano_rect_succ).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_morph_prop_Proper	40	40.049307	10076	3701
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.tan_pi_minus	40	40.047655	13477	1808
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Validity.linear_le_compat	40	5.924293	4017	592	0.2.0.4.5.6.0.2.2	synth with cache (only 1: intros x y H; only 1: simple destruct 1; only 1: trivial; only 1: right; only 1: intuition; only 1: Pos.Private_Tac.order || (right; Pos.Private_Tac.order) || (left; Pos.Private_Tac.order); only 1: eauto; only 1: trivial; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.tan_increasing	40	40.035212	11949	1770
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.append_assoc_1	40	40.100226	32677	4059
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.maj_cv	40	40.078431	26117	4306
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveRcomplete.CRealComplete	40	40.095572	19934	1846
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_3PI4	40	40.055564	16300	2090
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_up_car	40	40.043126	9204	2285
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalQ.to_of	40	40.074222	23759	2018
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_inv	40	12.589446	3123	1186	1.4.0.10	synth with cache (only 1: intros a b n Hn; only 1: apply continuity_pt_inv; only 1: auto with real; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	40	40.062059	16743	2339
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_eq	40	40.391644	25747	2967
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl	40	40.051743	14440	2394
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Q2RpowerRZ	40	40.046658	12385	2549
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.plus_Int_part2	40	40.041390	10230	4698
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	40	40.082152	28100	1935
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_zdigits	40	40.085266	28842	1910
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_0	40	0.051296	7	6	0.1.0.0.0.0	synth with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: unfold wB, base; only 1: split; only 1: auto with zarith; only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_Rsqr	40	40.037454	9998	3359
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_le	40	0.342460	51	25	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLUB.DDcut_limit_fix	40	40.316087	31565	1829
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_exp	40	40.029184	6957	2711
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rplus_opp_r	40	40.108832	42490	2053
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_above_size	40	40.047266	14052	1899
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S	40	0.007451	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_lt_abs_0	40	40.076604	22194	5276
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_0_r	40	40.074546	26467	2022
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim0	40	40.017778	5689	1330
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_0_l	40	2.464048	1160	122	21	synth with cache (only 1: easy').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalZ.of_to	40	40.123155	23338	3161
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.limit_index_above_all_indices	40	40.055046	15581	1291
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WO	40	40.040415	12058	1203
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.sin_0	40	40.076668	27057	2524
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_2	40	40.093674	32389	3692
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40	40.026873	8035	1101
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.mult_IQR	40	40.069535	14787	1762
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.restriction_family	40	40.069348	23279	4659
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_div	40	40.034995	7984	2918
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	1.453104	344	95	3.0.0.0.2.0.4	synth with cache (only 1: destruct n; only 1: intros; only 1: easy; only 1: Z.swap_greater; only 1: now apply Z.pow_pos_nonneg; only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.derive_increasing_interv	40	40.020711	4854	2540
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S_tail	40	8.659745	3540	814	0.2.0.0.1.1.5.3.2	synth with cache (only 1: intros n m; only 1: revert m; only 1: intros H; only 1: elim n; only 1: split; only 1: simpl; only 1: intros m IH; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40	0.049562	2	2	0.0	synth with cache (only 1: intros LT; only 1: Z.order_nz).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.wB_diff_0	40	0.099498	14	7	6	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalQ.dnormf_invol	40	40.087361	28280	2949
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.wB_pos	40	0.516567	182	13	19	synth with cache (only 1: now try split).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	0.023266	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rcase_abs	40	40.058025	13135	4255
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_1	40	0.024042	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40	40.064225	24394	1203
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_ge_trans	40	40.044793	12697	1663
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.ENCODING_VALUE.Zmod2_twice	40	40.043756	14110	1164
coq-tactician-stdlib.8.12.dev	Coq.nsatz.NsatzTactic.nsatz1.compute_list_correct	40	40.052217	14282	1049
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_le	40	40.116527	15844	2684
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_dec	40	1.638203	465	113	0.0.1.0.1.8	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_dec	40	0.396755	31	11	0.0.2	synth with cache (only 1: do 2 intro; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_dec	40	0.160162	5	3	1.0.1	synth with cache (only 1: do 2 intro; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.pos_sum_more	40	40.085705	29147	2986
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_dec	40	0.179529	4	3	1.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_le_dec	40	0.426563	47	18	0.4.1.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_ge_dec	40	0.051829	5	3	1.1.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_lt_dec	40	0.069821	3	3	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.succ_mod_wB	40	6.679751	1752	217	6.2.1.16	synth with cache (only 1: intros a; only 1: symmetry; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_gt_dec	40	0.409130	61	33	1.4.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_or_le	40	0.047053	3	3	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_or_ge	40	0.080448	25	15	0.1.0.0.1.0	synth with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: left; only 1: eauto with rorders; only 1: right; only 1: eauto with rorders).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_or_lt	40	0.219225	30	13	0.0.1	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.ln_Rinv	40	40.028542	7081	2027
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_or_gt	40	0.103413	34	19	0.1.0.1.0.0	synth with cache (only 1: intros; only 1: edestruct Rlt_or_le; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmin_contract	40	40.048222	11697	2180
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_mult	40	40.037922	3302	540
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P15	40	40.033018	9481	2339
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_PI	40	40.042090	6632	2092
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P5	40	40.034189	9760	2369
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P8	40	40.055602	15891	3149
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.cond_pos_sum	40	40.063684	18057	3880
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.DRealReprQup	40	40.105013	21160	2418
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Completeness.list_nth_nil	40	40.072039	19147	4748
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructivePower.GeoFiniteSum	40	40.050242	14130	1148
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_right	40	40.046519	11959	2302
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.tan_pi_plus	40	40.057591	13891	1142
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Validity.linear_valid_incl	40	40.113314	41193	3321
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.tan_inj	40	40.021830	5528	2029
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.append_neutral_r	40	40.149852	58657	3049
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.append_neutral_l	40	0.073732	7	7	0.0.0.0.0.0.0	synth with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gempty	40	0.042399	15	3	7	synth with cache (only 1: now intros []).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_lt_or_eq_dec	40	11.227813	4087	965	2.0.3.2.0.3.6	synth with cache (only 1: intros x y; only 1: unfold Rle; only 1: destruct (total_order_T x y); only 1: intro; only 1: auto; only 1: right; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Evaluation.eval_null_zero	40	3.002008	3258	333	1.6.8.10	synth with cache (only 1: intros a0 a; only 1: intros m; only 1: destruct m; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.min_cv	40	40.110104	45480	2630
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.cos_PI6	40	40.057623	17701	1552
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Evaluation.eval_extensional_eq_compat	40	2.832834	2297	290	5.0.4.0.3.5	synth with cache (only 1: intros; only 1: induction p; only 1: simpl in *; only 1: trivial; only 1: simpl; only 1: first [ intuition congruence | auto ]).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.cv_pow_half	40	40.031906	8517	2575
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_div	40	40.047680	13957	3830
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	40	40.035971	9207	1801
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	23.105231	53495	478	280	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl_1	40	40.322808	22722	2224
coq-tactician-stdlib.8.12.dev	Coq.Classes.DecidableClass.Decidable_sound	40	7.701165	18869	1618	0.44.3	synth with cache (only 1: intro H; only 1: intros (x, (Hx, Huni)); only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cauchy_eq	40	40.898864	33123	2084
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Qpower0	40	40.033284	8389	1333
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.family_P1	40	26.776839	23803	2938	7.10.9.12	synth with cache (only 1: intros x y H; only 1: intro abs; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalQ.to_hexadecimal_inj	40	40.144837	57953	2833
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40	40.074293	24678	2509
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.plus_frac_part1	40	40.037434	7882	3248
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	0.022488	1	1	0	synth with cache (only 1: RelationClasses.simpl_relation).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_1	40	40.064390	17167	3926
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_Bm1	40	0.097924	22	10	0.2.0.0	synth with cache (only 1: unfold to_Z, one; only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: lia).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_compare	40	0.058239	27	6	6	synth with cache (only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_1_even	40	40.033946	9956	2167
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLUB.DDcut_limit	40	40.136081	52078	2798
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_cosh	40	40.040543	10394	2611
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rplus_0_l	40	40.069796	23685	1436
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_lt_abs_1	40	40.062066	15856	5972
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	40	4.904213	831	249	0.0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n p a H; only 1: rewrite Zmod_eq by auto with zarith; only 1: unfold Z.sub at 1; only 1: rewrite Z_div_plus_full_l by auto with zarith; only 1: replace (2 ^ n) with (2 ^ (n - p) * 2 ^ p) by (rewrite <- Zpower_exp; [ f_equal |  |  ]; lia); only 1: rewrite <- Zdiv_Zdiv, Z_div_mult by auto with zarith; only 1: rewrite (Z.mul_comm (2 ^ (n - p))), Z.mul_assoc; only 1: rewrite Zopp_mult_distr_l; only 1: rewrite Z_div_mult by auto with zarith; only 1: symmetry; only 1: apply Zmod_eq; only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CRealLt_0_aboveSig	40	40.058969	9698	1409
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_0	40	40.018503	3577	1465
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalZ.to_of	40	40.071401	22632	3385
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.first_indices_increasing	40	40.066070	24643	1902
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_OW	40	40.075918	21471	904
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.exist_cos0	40	40.038025	10593	3173
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_1	40	40.061828	18534	3016
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.IQR_lt	40	40.101636	33164	2042
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_lt_0_alt	40	40.049136	15104	3498
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40	3.849537	187	100	1.0.0.0.0.1.0	synth with cache (only 1: intros f g lb ub x lb_lt_ub x_encad f_incr g_wf f_eq_g; only 1: apply g_wf; only 1: pose proof (f_incr_implies_g_incr_interv f g lb ub lb_lt_ub f_incr f_eq_g g_wf) as Temp; only 1: pose proof (leftinv_is_rightinv_interv f g lb ub f_incr f_eq_g g_wf) as Left_inv; only 1: unfold comp, id in Left_inv; only 1: intuition; only 1: lra).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_n_0	40	40.092138	8939	1805
coq-tactician-stdlib.8.12.dev	Coq.Classes.DecidableClass.Decidable_complete	40	14.762727	32067	2335	0.34.6.13	synth with cache (only 1: intro x; only 1: intros; only 1: apply H; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.derive_increasing_interv_var	40	40.020740	4942	2615
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_R0	40	40.091896	34564	2154
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1_decr	40	2.511438	209	72	2.2.3.0	synth with cache (only 1: intros f g lb ub x lb_lt_ub x_encad f_incr g_wf f_eq_g; only 1: apply g_wf; only 1: lra; only 1: lra).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyBool.Z_of_bool_bound	40	40.072293	24346	1742
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalQ.to_of	40	41.068148	16448	1965
coq-tactician-stdlib.8.12.dev	Coq.nsatz.NsatzTactic.nsatz1.check_correct	40	40.026866	7043	567
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_binary	40	40.101413	35326	3457
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_minus_sym	40	40.044854	4800	1715
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.sum_opp	40	40.065979	20835	2571
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40	40.080248	9789	1120
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.ln_continue	40	40.035791	10979	2695
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P16	40	40.024273	5963	2108
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmin_glb	40	40.029734	5680	2325
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_genZ	40	40.038053	10898	901
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_bound	40	40.022869	4184	2525
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P6	40	40.028176	7171	2125
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P9	40	40.056283	12862	2525
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.cauchy_abs	40	40.081390	27949	3675
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Completeness.make_last_nth_1	40	40.075715	24656	3285
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.DRealQuot1	40	41.427752	34179	2957
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructivePower.GeoHalfBelowTwo	40	40.059967	18685	1667
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalZ.to_int_inj	40	18.930681	17821	949	3.63.0	synth with cache (only 1: intro E; only 1: Z.bitwise; only 1: now rewrite <- (Signed.of_to n), <- (Signed.of_to n'), E).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.open_set_P6	40	29.284021	29597	3836	21.18.1	synth with cache (only 1: intros; only 1: intros HP; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_opp	40	40.129691	8015	1709
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_size	40	16.031536	2670	182	0.0.0.40	synth with cache (only 1: intros n; only 1: induction n; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.exists_atan_in_frame	40	40.026066	7943	1813
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyComparison.Z_of_comparison_bound	40	40.082105	29140	2091
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.inser_trans_R	40	40.060735	17866	2768
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gss	40	40.113839	42319	3486
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.cond_eq	40	40.056775	17458	3204
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.not_Rlt	40	0.010671	1	1	0	synth with cache (only 1: eauto using Rnot_gt_ge with rorders).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_0_r	40	0.407362	8	5	0.3.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_0; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_ne	40	0.406185	21	8	0.0.0.1.2	synth with cache (only 1: split; only 1: ring; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_0; only 1: apply CReal_plus_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_opp_l	40	0.255195	7	5	0.2.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_opp, Rrepr_0; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_opp_r).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.tan_PI6	40	40.042822	9966	2551
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Evaluation.eval_suffix_compat	40	40.073889	21508	2513
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.IVT	40	40.052421	18477	3294
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_comp	40	40.045463	11899	3584
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_plus_rat	40	40.059773	15131	5553
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_inj	40	40.086994	32988	2349
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_proper	40	40.071645	22804	2241
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl	40	40.043580	10417	2636
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Q_of_RcstR	40	40.070766	21034	4078
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalQ.to_hexadecimal_surj	40	40.051540	13328	3377
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.plus_frac_part2	40	40.036253	8969	3539
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_eq0	40	40.058070	16292	3099
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLUB.glb_dec_Q	40	40.141834	54635	2145
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_sinh	40	40.043197	12691	2696
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rmult_comm	40	40.073066	10536	978
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_exp	40	0.137765	5	5	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (exp x); only 1: apply derivable_pt_lim_exp).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P10	40	19.044515	9724	1956	4.5.1.0.2.1.0.0.6.1	synth with cache (only 1: intros; only 1: induction l as [| r l Hrecl]; only 1: apply S_pred with 0%nat; only 1: simpl; only 1: Nat.order'; only 1: simpl; only 1: case (Rle_dec r a); only 1: simpl; only 1: auto; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_inj	40	40.050195	14126	4007
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	40	40.089978	31533	3167
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_1_odd	40
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat_correct	40	40.210625	8040	1263
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.R_uncountable	40	40.078617	29392	3266
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WW	40	40.038112	11489	1381
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.cos_0	40	40.052167	15979	2863
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_2	40	40.094194	30080	3603
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.lt_IQR	40	40.109722	40117	2753
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_lt_0	40	40.036568	9878	3401
coq-tactician-stdlib.8.12.dev	Coq.Classes.DecidableClass.Decidable_sound_alt	40	40.188769	63887	7526
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.IAF	40	40.043015	14072	3341
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_R1	40	40.066036	16819	2301
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv	40	40.013536	2502	1102
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyBool.Z_eqb_isZero	40	40.077109	26817	2735
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_two_compl	40	40.181060	68370	3292
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_Sn	40	0.081026	18	5	0.1	synth with cache (only 1: intros n m Hn; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gleaf	40	25.756649	39165	1741	0.0.0.0.0.0.4.107	synth with cache (only 1: intros n; only 1: case n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_lt	40	40.087137	14279	1829
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.sum_scale	40	40.053922	17060	1861
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40	40.136086	27889	2348
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalQ.to_decimal_inj	40	40.106022	39346	2082
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rpower_plus	40	40.044901	12198	3025
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P17	40	40.036035	10462	2275
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmin_assoc	40	40.037484	8457	1720
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_Zeqb_ok	40	40.032405	8352	1730
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_bound	40	40.034408	9493	2488
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P7	40	40.039216	11417	2814
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.cv_cauchy_1	40	40.041869	12187	3260
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Completeness.make_last_nth_2	40	40.090162	26090	2419
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	40	40.117422	15816	2279
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalZ.to_int_surj	40	40.081376	26541	4242
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.compact_P1	40	40.106346	33583	4104
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructivePower.GeoHalfTwo	40	40.038352	3020	827
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_minus_sym	40	40.041057	6337	1619
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_above_size	40	40.088047	8248	919
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyComparison.Zcompare_spec	40	40.053322	16066	3200
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.tan_1_gt_1	40	40.036835	10978	2780
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.approx_maj	40	40.124172	46153	4231
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_opp_r_uniq	40	40.039198	12245	1911
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_eq_compat_l	40	0.038928	9	4	1.4.0	synth with cache (only 1: Bool.destr_bool; only 1: rewrite H; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_eq_compat_r	40	0.093266	48	14	1.4.1	synth with cache (only 1: Bool.destr_bool; only 1: rewrite H; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_PI3	40	40.053463	16009	3210
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstr_firstl	40	7.047563	656	85	5.12	synth with cache (only 1: intro n; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstl_firstr	40	0.026464	3	3	0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_add_compat	40	40.108348	34888	2313
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_predsize_0_firstl	40	1.240815	228	45	0.0.8.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: intros; only 1: injection H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.uniqueness_step1	40	40.035186	9184	2140
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40	40.095488	31846	2267
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.IVT_cor	40	40.056643	19913	3198
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_plus	40	40.065087	23494	2343
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl_1	40	40.056079	15188	2650
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_morph	40	40.279164	19309	2488
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Reval_formula_compat	40	40.385193	36197	2936
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalQ.of_hexadecimal_hnorme	40	40.052390	15694	3916
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_c	40	40.050695	13502	2802
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Heap.defs.leA_Tree_Leaf	40	0.023605	5	1	4	synth with cache (only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Heap.defs.leA_Tree_Node	40	0.028454	2	2	0.0	synth with cache (only 1: simpl; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rmult_assoc	40	40.049292	10991	1521
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_cosh	40	40.034876	10281	2493
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P11	40	40.059445	18384	2495
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_sinh	40	0.137734	5	5	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (cosh x); only 1: apply derivable_pt_lim_sinh).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_eq_abs_0	40	40.051807	15094	3885
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Heap.defs.invert_heap	40	1.419998	734	90	0.5.4.10	synth with cache (only 1: intros l l1 l2; only 1: intros; only 1: inversion_clear H; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_glb	40	40.118704	43006	4179
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_1_abs	40	40.064048	19138	4068
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derive_pt_exp	40	3.790662	1960	342	0.1.15	synth with cache (only 1: intro H5; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_exp).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derive_pt_cosh	40	0.153383	21	10	1.0.5	synth with cache (only 1: intro eps; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cosh).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_bound_indep	40	40.112854	19980	2476
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derive_pt_sinh	40	0.477305	35	29	2.0.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_pos_correct	40	40.058637	20392	994
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_iff	40	40.075411	13042	2948
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.IQR_plus_quot	40	40.076438	24216	3363
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_lt_1_alt	40	40.044773	12688	3313
coq-tactician-stdlib.8.12.dev	Coq.Classes.DecidableClass.Decidable_complete_alt	40	40.199881	69660	6332
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.IAF_var	40	40.046815	15674	3406
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_no_R0	40	40.028274	5655	1955
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_lt_1	40	1.804674	276	135	0.0.0.1.0.0.0.1	synth with cache (only 1: intros; only 1: apply Rsqr_incrst_0; only 1: rewrite 2!Rsqr_sqrt; only 1: assumption; only 1: assumption; only 1: assumption; only 1: apply sqrt_pos; only 1: apply sqrt_pos).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_decr	40	40.020690	5763	1863
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalZ.of_to	40	40.142417	56715	2638
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyBool.Z_leb_sub	40	40.068371	21651	3601
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn	40	40.073143	13910	1536
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gso	40	40.072947	23967	2982
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_triang	40	40.067927	15624	2004
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.sum_plus	40	40.054309	16016	2436
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalQ.to_decimal_surj	40	40.053527	18597	1975
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_succ	40	40.102387	38210	2197
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rpower_mult	40	40.056787	18755	2421
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P18	40	40.052961	17827	1963
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P8	40	40.038476	11406	2632
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRlt_min	40	40.265902	23375	6789
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ1_add_pos_neg	40	40.022391	1867	434
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.neg_cos	40	40.045682	13154	2414
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.cv_cauchy_2	40	40.122169	44813	4275
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Completeness.list_replace_nth_1	40	40.067057	20197	2349
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmax_morph_Proper	40	1.428151	267	75	0.0.0.0.6.0	synth with cache (only 1: intros; only 1: apply CRmult_morph; only 1: unfold CRminus; only 1: rewrite H, H0; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmax_morphT	40	0.325972	26	12	0.5.0	synth with cache (only 1: intros R x y exy z t ezt; only 1: rewrite exy, ezt; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.DRealQuot2	40	40.017712	2971	1273
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalZ.of_int_norm	40	40.047826	13491	3403
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.compact_P2	40	40.054497	10275	4004
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_left	40	40.053360	13054	4734
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.match_compOpp	40	3.353045	1172	254	2.0.7.2.0.0.4	synth with cache (only 1: destruct x; only 1: intros x y H7; only 1: reflexivity; only 1: intro x; only 1: reflexivity; only 1: intros x y H7; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.ub_lt_2_pos	40	12.512457	2384	812	2.0.0.2.2.4	synth with cache (only 1: intro H1; only 1: intro; only 1: intro H10; only 1: intros; only 1: unfold Rdiv; only 1: lra).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLtEpsilon	40	40.896637	18314	1270
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_eq	40	1.116549	94	66	5	synth with cache (only 1: Dec.fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.frame_tan	40	40.051663	18876	2232
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLtForget	40	3.989249	2038	259	10.12	synth with cache (only 1: intros [xn xd] [yn yd] Hxy; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.approx_min	40	40.038181	9830	3292
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_eq_reg_l	40	40.234711	27301	2528
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_eq_asb_1	40	30.427466	13720	3499	15.4.0.1.0	synth with cache (only 1: intros; only 1: rewrite (Rsqr_abs y); only 1: unfold Rabs; only 1: rewrite (Rsqr_abs x); only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.cos_PI3	40	40.062112	19240	1694
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_compat	40	40.108017	37317	2833
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_propagates	40	40.050051	16066	2213
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.uniqueness_step2	40	40.038744	11395	3486
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_spec	40	40.087351	27538	3365
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.Rsqrt_exists	40	40.077681	28751	3043
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.Un_cv_nat_real	40	40.252208	39278	2522
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_pos	40	40.129289	24280	2926
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.ub_opp	40	6.045692	1941	270	18.4	synth with cache (only 1: intro; only 1: lra).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.pos_opp_lt	40	0.065388	5	2	3.0	synth with cache (only 1: intros; only 1: lra).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Reval_nformula_dec	40	40.066088	19402	1832
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl	40	40.048010	13996	2494
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.rleaf	40	19.746594	22551	1037	48.25	synth with cache (only 1: intro p; only 1: now try destruct p).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalQ.of_inj	40	40.058508	19004	2548
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp	40	40.049067	11380	4341
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rinv_l	40	40.055449	19753	1734
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P12	40	40.048764	13985	3700
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.multiplicity_In	40	40.056261	17490	2886
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Heap.defs.is_heap_rect	40	40.118091	40995	2199
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_positive_1	40	40.026266	7880	993
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_closed	40	40.095481	32696	4416
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_mult	40	40.055487	17101	3145
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Heap.defs.is_heap_rec	40	2.607865	495	167	0.2.0.0.0.0.1.0.1.0.0	synth with cache (only 1: simple induction T; only 1: auto with datatypes; only 1: intros a G PG D PD PN; only 1: elim (invert_heap a G D); only 1: intros H1 H2; only 1: elim H2; only 1: intros H3 H4; only 1: elim H4; only 1: intros; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.sinh_lt	40	40.041790	12625	2864
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40	40.067503	11252	1415
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_Z_correct	40	40.055892	20429	1324
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in	40	40.044342	12431	1467
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.IQR_mult_quot	40	40.200555	9069	1082
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.null_derivative_loc	40	40.043881	14197	3074
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_left	40	40.050808	10920	5080
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_le_0	40	40.035444	7789	3419
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalZ.to_of	40	40.070506	19524	4257
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRlt_asym	40	41.052796	14019	1213
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalZ.to_int_inj	40	0.062649	10	3	0.2	synth with cache (only 1: intros E; only 1: now rewrite <- (Unsigned.of_to n), <- (Unsigned.of_to n'), E).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyBool.Z_ltb_leb	40	40.043859	12315	2195
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_pos	40	40.099640	35673	3216
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.two_compl_value_Sn	40	0.106914	12	4	1.2.0	synth with cache (only 1: simpl; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_triang_inv	40	40.057458	11767	2566
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Heap.defs.low_trans	40	12.181716	5159	1171	13.0.3.0.0.0.1	synth with cache (only 1: simple induction T; only 1: intros; only 1: simpl; only 1: auto with datatypes; only 1: simpl; only 1: intros; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.decomp_sum	40	40.049462	16486	1920
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40	40.106989	42559	1341
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalQ.of_decimal_dnorme	40	40.188255	17869	1592
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.two_succ	40	0.007410	1	1	0	synth with cache (only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B0	40	0.172431	437	23	29	synth with cache (only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rpower_O	40	40.033452	9524	2155
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P19	40	40.050525	16871	2052
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P9	40	40.037260	11591	2421
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_cos	40	40.051636	16069	2183
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.sum_eq_R0	40	40.061551	19339	2546
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Completeness.list_replace_nth_2	40	40.057925	17623	2025
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmax_lub	40	40.068963	18379	5022
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalZ.of_inj	40	40.068847	22209	3101
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_triang	40	40.048874	10928	4201
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_add	40	40.022192	4839	1362
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.mkposreal_lb_ub	40	40.045275	15037	2312
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.compact_EMP	40	40.194745	82319	4500
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_1	40	40.122043	18469	1632
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.UL_sequence	40	40.056460	17869	3659
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_lpo_dec	40	40.384742	34126	3291
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_eq_reg_r	40	40.071528	19287	5985
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.triangle_rectangle	40	40.066913	21046	3729
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.tan_PI3	40	40.045240	13373	2128
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_firstl	40	40.073472	23211	2565
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_mul_mon_compat	40	40.098679	33932	2609
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.uniqueness_step3	40	40.041677	12833	2899
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_false_spec	40	40.075180	24362	2968
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	0.204782	22	9	0.0.2	synth with cache (only 1: intros x y; only 1: rewrite <- not_true_iff_false, eqb_spec; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.Rsqrt_positivity	40	40.062974	17789	3745
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_false_correct	40	0.049396	3	3	0.0.0	synth with cache (only 1: intros x y; only 1: rewrite eqb_false_spec; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.concat_avl	40	40.043530	12234	1883
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.NatOfZ	40	40.135437	58653	2008
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.RWeakChecker_sound	40	40.115126	31886	3508
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.tech_opp_tan	40	40.040860	13091	2699
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.Un_cv_real_nat	40	40.153461	57567	3095
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.grs	40	40.086330	28900	3287
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalQ.of_iff	40	40.150345	15603	2840
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_carry	40	40.054801	14460	4197
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_right	40	28.380687	12511	2515	0.0.19.0.1.0.1.0	synth with cache (only 1: intros; only 1: unfold Rabs; only 1: case (Rcase_abs r); only 1: intro; only 1: absurd (r >= 0); only 1: auto with real; only 1: assumption; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P13	40	40.057992	19373	2710
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rmult_1_l	40	40.059447	21419	1136
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.multiplicity_In_O	40	40.073375	23463	2972
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.multiplicity_In_S	40	0.073625	6	6	0.0.0.0.0.0	synth with cache (only 1: intros l a; only 1: intro H; only 1: eapply In_InA, multiplicity_InA in H; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_1	40	40.073927	4231	643
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_positive_0	40	0.090661	9	7	1.0.0.0.1.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_incr	40	40.058284	16851	4628
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLUB.sig_lub	40	40.928384	22184	2366
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P14	40	4.299194	1564	473	8.3.0.0.0.0.1	synth with cache (only 1: induction l; only 1: intro; only 1: simpl; only 1: trivial using Nat.le_add_r; only 1: simpl; only 1: symmetry; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	40	40.053989	15479	2475
coq-tactician-stdlib.8.12.dev	Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40	0.737271	408	73	15	synth with cache (only 1: apply Nat.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40	0.086629	17	5	4	synth with cache (only 1: apply Nat.leb_le).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_0_l	40	40.096027	37932	1217
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.in_find	40	40.037356	10421	1951
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40	40.027223	6060	2518
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.Rabove_pos	40	40.242304	97893	3423
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.antiderivative_Ucte	40	40.043656	14687	3176
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_le_1_alt	40	40.044508	7058	2321
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalZ.to_int_surj	40	40.142428	59395	576
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	40	40.076102	24200	3295
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRlt_proper	40	40.955208	10579	1195
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn	40	40.037967	11546	1492
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn_z	40	0.023064	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.reverse_sum	40	40.088254	29670	2705
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Heap.defs.Equivalence_instance_0	40	40.093858	29375	2222
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_triang_inv2	40	40.575947	13556	1703
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Heap.defs.Proper_instance_0	40	0.714738	144	43	1.2.1.0.0.1	synth with cache (only 1: red; only 1: red; only 1: red; only 1: red; only 1: simpl; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalZ.of_int_norm	40	5.505184	1927	485	5.0.11.0.0.1	synth with cache (only 1: destruct d; only 1: simpl; only 1: now induction d; only 1: generalize (DecimalPos.Unsigned.to_of d); only 1: simpl; only 1: now induction d).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalQ.of_decimal_dnormf	40	40.039868	10503	1949
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.BS	40	40.132857	26743	2383
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rpower_1	40	40.041561	12653	2131
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P20	40	40.041012	12023	2284
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_0_r	40	40.060282	20811	2432
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P6	40	40.053329	14510	2512
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_plus	40	40.043747	12972	2444
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Completeness.boolean_witness_nonzero	40	40.047508	12332	1769
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalZ.of_inj	40	3.605739	1800	341	4.13.0.0	synth with cache (only 1: intros; only 1: rewrite <- !Unsigned.to_of; only 1: rewrite H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.sum_incr	40	40.069689	22597	3502
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmax_l	40	40.027458	4542	1892
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_div2_value	40	8.590973	2650	622	1.1.0.0.0.0.0.0.2.0.0.0.2.0	synth with cache (only 1: destruct z; only 1: intros Hn; only 1: simpl; only 1: Z.order; only 1: simpl; only 1: intros; only 1: destruct p; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: reflexivity; only 1: now destruct 1 || trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalZ.of_iff	40	40.081153	26460	3253
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_le	40	40.051780	15038	1449
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.compact_eqDom	40	40.072107	17531	4064
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derivable_pt_lim_CVU	40	40.025843	7793	2183
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_opp	40	40.035452	9648	676
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_2	40	40.160563	3909	1377
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.CV_plus	40	40.094118	34105	4175
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_not_lt	40	40.183790	13317	1819
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_0_r_uniq	40	40.051838	15722	2162
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.triangle_rectangle_lt	40	40.089718	32313	4855
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_2PI3	40	40.044733	12686	2047
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_sneakl	40	40.223892	98069	3285
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_mul_compat	40	40.075235	23008	3182
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.uniqueness_limite	40	40.047294	13749	2731
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40	40.059996	19541	1841
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40	40.059112	20258	2593
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.split_avl	40	40.046281	12388	2700
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_0_r	40	14.729319	14437	1056	45	synth with cache (only 1: now destruct a).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_int	40	40.028397	5505	2628
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.RTautoChecker_sound	40	40.199391	33269	3190
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.pre_atan	40	40.026633	8178	1883
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_0_l	40	0.024799	2	1	1	synth with cache (only 1: now destruct a).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_0_l	40	0.052512	2	1	1	synth with cache (only 1: now destruct a).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gro	40	40.065295	6432	1585
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_minus	40	40.490487	12875	1243
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map.map_height	40	0.032071	7	4	0.3.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zmod_equal	40	40.077177	19978	2558
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_left1	40	40.052137	16138	2564
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.R1_neq_R0	40	40.167788	74514	1894
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.multiplicity_NoDup	40	40.061632	18371	3289
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.list_contents_app	40	40.052927	16062	2808
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_refl	40	0.066269	9	4	2.0.2	synth with cache (only 1: red; only 1: red; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.Rplus_le_pos	40	25.669732	9885	1578	0.18.0.8.5	synth with cache (only 1: intros R x y H; only 1: rewrite <- CRplus_0_r, CRplus_assoc; only 1: apply CRplus_le_compat_l; only 1: rewrite CRplus_0_l; only 1: exact H).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_sym	40	0.045350	7	3	0.2.2	synth with cache (only 1: unfold permutation; only 1: intros; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_0	40	40.034495	10447	1665
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_R1_Rle	40	40.056940	16545	3985
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLUB.CR_sig_lub	40	40.082790	26412	4853
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P15	40	40.061360	20144	3359
coq-tactician-stdlib.8.12.dev	Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40	40.066475	16665	3391
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40	40.073656	26240	1380
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_iff	40	40.038707	9594	1799
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	40	40.042864	3698	650
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.Rarchimedean	40	40.150020	26791	2353
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.MVT_abs	40	40.021312	4464	2992
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_le_1	40	40.035485	7960	3141
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.cO	40	0.223399	350	20	26	synth with cache (only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.cI	40	0.010836	1	1	0	synth with cache (only 1: exact ring0).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40	40.089699	28287	3628
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRle_refl	40	40.154238	15685	1560
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_gt	40	40.051958	8669	864
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Heap.defs.merge	40	40.167739	39142	2764
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.Zbounded_induction	40	40.092994	32775	3403
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rpower_pow	40	40.029388	7793	2257
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P21	40	40.045839	13922	2663
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_minus	40	40.050586	15348	2525
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P7	40	40.074945	29034	2375
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound_alt	40	40.069656	22284	2340
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.sum_cv_maj	40	40.062967	19384	3532
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalZ.of_iff	40	40.316732	19112	3022
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmax_r	40	40.026774	4698	2305
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Pdiv2	40	40.076558	21212	1456
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalZ.of_hex_uint_iter_D0	40	40.045827	15336	953
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_triang_inv	40	40.052329	12664	4186
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.compact_P3	40	40.075408	22532	2759
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_mul	40	40.015755	3245	1759
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_1	40	40.117441	24814	977
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.cv_cvabs	40	40.052896	16432	3722
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_eq_0_l	40	40.046343	13652	2252
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_diff	40	40.100783	11318	2184
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcdn_pos	40	40.101655	29795	2807
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.triangle_rectangle_le	40	40.077319	23336	6332
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.cos_2PI3	40	40.038812	9833	2020
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_inv	40	1.288369	359	137	0.0.3.4	synth with cache (only 1: intros r b; only 1: unfold Rsqr; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_twice	40	40.040688	11925	1195
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_add_valid_compat	40	40.062941	20619	2578
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_eq	40	40.058815	19359	2970
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_eqn	40	1.002410	293	91	0.10.0	synth with cache (only 1: intros; only 1: simpl; only 1: now rewrite H).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eq_le_iff	40	0.648407	94	34	0.0.1.3.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros; only 1: now subst; only 1: destruct 1; only 1: Z.order').
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.lt_le_iff	40	0.016954	2	2	0.0	synth with cache (only 1: intros a; only 1: apply Z.lt_le_pred).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.cast_refl	40	40.168933	65107	3083
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_eq_0	40	0.454040	58	32	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_eq_1	40	0.090246	13	6	0.0.0.0.2	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derive_pt in H; only 1: rewrite H in H1; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.atan_bound	40	40.036330	11134	2271
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_inv	40	40.131885	4502	1268
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_rem_same	40	40.061429	20738	2827
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map.map_avl	40	40.043007	11008	2530
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_nonneg	40	40.066118	22733	2695
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_height	40	0.044966	5	5	0.0.0.0.0	synth with cache (only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_correct	40	40.082070	27378	3731
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.le_0_iff	40	2.310049	1286	248	0.1.7.8	synth with cache (only 1: intros a b; only 1: split; only 1: apply Z.le_0_sub; only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ_c	40	40.047134	10089	3825
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_pos	40	40.075927	24839	3657
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.to_lu_succ	40	0.009086	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.In_In	40	0.026939	3	2	0.1	synth with cache (only 1: intros n m; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0.210037	18	5	4.1	synth with cache (only 1: compute; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rmult_plus_distr_l	40	40.103537	37032	2853
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.NoDup_permut	40	40.068241	20707	3987
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.permut_In_In	40	0.161281	20	5	3.0.2	synth with cache (only 1: intros l1 l2 e; only 1: do 2 rewrite multiplicity_In; only 1: now intros ->).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.selectOneInSum	40	40.102554	37370	3066
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_trans	40	40.059827	16197	3477
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_not_0_positive	40	40.116317	16637	2236
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.Rle_pow	40	40.043850	11379	3252
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P16	40	40.065714	21171	2188
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.le_neg	40	8.528084	5696	738	3.7.0.11.4.1.0	synth with cache (only 1: intro n; only 1: split; only 1: intros H; only 1: rewrite ?Z.opp_pos_neg; only 1: Z.order; only 1: intros; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.not_find_iff	40	40.054515	10969	1821
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_assoc	40	40.072598	24769	1659
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_1_l	40	0.784082	94	25	0.0.4.0.0	synth with cache (only 1: intro n; only 1: zify; only 1: Z.nzsimpl; only 1: apply Zmod_small; only 1: apply ZnZ.spec_to_Z).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_proper_l	40	40.309451	9006	1608
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.RabsLUB	40	40.076486	20369	2387
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_neg_0	40	40.051226	14954	2810
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Peq_ok	40	40.061673	20306	1628
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	40	40.058352	15423	3560
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalN.Unsigned.of_to	40	40.077133	23768	4684
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRle_lt_trans	40	40.435407	19444	2097
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower_pos_1_l	40	40.089488	33730	1362
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.Rabs_def1	40	40.045715	8384	1766
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Heap.defs.insert	40	40.221620	86813	2274
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B_holds	40	40.156419	54846	3287
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rpower_lt	40	40.057362	17162	2375
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P22	40	40.055593	16575	2694
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	20.862333	3397	1322	16	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_comm	40	13.245506	7262	822	4.12.0.4.13	synth with cache (only 1: intros A l; only 1: red; only 1: zify; only 1: f_equal; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.tan_plus	40	40.035571	9955	2103
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.continuity_implies_RiemannInt	40	40.025284	6099	2200
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalZ.of_uint_iter_D0	40	40.060247	21489	1211
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRposPartAbsMax	40	40.056072	7902	1652
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zdiv2_two_power_nat	40	40.076038	24656	2785
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalZ.of_hex_int_iter_D0	40	40.038147	10433	2414
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_triang_inv2	40	40.041950	9542	2945
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn_z	40	0.084154	11	7	1.0.0.0.0	synth with cache (only 1: intros; only 1: destruct z as [| p| p]; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_2	40	40.091749	15846	2547
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_ext	40	40.027640	7072	1809
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.compact_P4	40	40.097136	34576	4811
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.of_lu_eqn	40	40.119837	9851	748
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.CV_Cauchy	40	40.075522	25536	4669
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_eq_R0	40	40.050574	13040	1898
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40	15.774959	9878	924	0.0.0.3.1.1.0.0.2.22.1	synth with cache (only 1: unfold Z.pow_pos; only 1: set (y := Z.pred (Z.pos p)); only 1: generalize 1; only 1: induction p; only 1: intros; only 1: reflexivity; only 1: simpl in *; only 1: intros; only 1: trivial; only 1: simpl; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40	40.097077	21794	2111
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zwf.wf_proof.Zwf_well_founded	40	40.127653	11713	1133
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_aboveSig	40	40.391871	10599	1313
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.canonical_Rsqr	40	40.040144	12822	1803
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.tan_2PI3	40	40.054300	17688	2000
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_valid_compat	40	40.104610	36310	4195
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_converges	40	40.095049	4453	1013
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40	40.119369	43043	2288
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_D_in	40	40.057737	19063	3224
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.tan_atan	40	40.034190	9912	2349
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_rem_mult	40	40.052719	14791	4252
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_avl	40	40.037774	9752	2119
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_scale	40	40.053692	16783	2279
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_rat	40	40.151655	5858	1709
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_correct	40	40.062656	18777	3450
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_c	40	40.052455	13283	3363
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rle_abs	40	40.067780	18616	5812
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.to_little_uint_succ	40	40.084049	28942	2688
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rlt_asym	40	40.125538	17491	1456
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.permut_cons_In	40	40.095712	33232	3651
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow1	40	37.958586	12738	3348	3.0.3.2.1.12.2.3	synth with cache (only 1: intros [| n]; only 1: auto with real; only 1: pattern 1 at 1; only 1: induction n as [| n Hrecn]; only 1: auto with real; only 1: simpl; only 1: rewrite Rmult_1_l; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.splitSum	40	40.051947	15918	1693
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_cons_eq	40	40.053458	14396	3164
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_cons	40	0.058503	4	4	0.0.0.0	synth with cache (only 1: unfold permutation; only 1: simpl; only 1: intros; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmax_sym	40	18.117514	3306	1431	0.1.2.0.1.10.0	synth with cache (only 1: intros; only 1: apply CRmult_morph; only 1: rewrite CRabs_minus_sym; only 1: unfold CRminus; only 1: rewrite (CRplus_comm x y); only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_pos_positive	40	40.058406	18122	2377
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P17	40	40.059130	19786	3044
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P18	40	0.060478	11	6	0.0.1.0.0	synth with cache (only 1: induction l as [| r r0 H]; only 1: auto; only 1: simpl; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eq_cnf	40	40.072704	16488	2409
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_find	40	40.063342	20632	3215
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_proper_r	40	40.034175	6623	2389
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qred_abs	40	40.106682	32064	2258
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.Rcomplete	40	40.054052	13434	2507
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_inj	40	40.031799	7879	3049
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_r	40	20.749569	3725	613	0.15.0.0.0.0.0.1	synth with cache (only 1: intros; only 1: rewrite RinvImpl.Rinv_def; only 1: destruct (Req_appart_dec r R0); only 1: contradiction; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rquot2, Rrepr_1; only 1: rewrite CReal_mult_comm; only 1: apply CReal_inv_l).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_l_sym	40	0.040370	4	3	0.0.1	synth with cache (only 1: intros; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_r_sym	40	0.040790	4	3	0.0.1	synth with cache (only 1: intros; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_0_r	40	0.031497	3	2	0.1	synth with cache (only 1: intros; only 1: field).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_0_l	40	0.024219	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi0	40	40.032751	6875	657
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalN.Unsigned.to_of	40	40.053076	14031	3538
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyBool.Z_eqb_ZSpec_ok	40	40.065481	22011	1962
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRlt_le_trans	40	40.251641	21266	2144
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_mult	40	40.084399	5945	1049
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Heap.defs.list_to_heap	40	40.280351	116598	2480
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rpower_sqrt	40	40.024824	6742	2057
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.bi_induction	40	40.342488	135110	2893
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_0_l	40	0.711543	264	45	1.0.9	synth with cache (only 1: intros a; only 1: zify; only 1: apply NZ_to_Z_mod).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	40.120097	47632	2114
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_assoc	40	40.071256	23947	2106
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P8	40	40.050210	16248	2102
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_2a	40	40.052482	16183	1980
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P23	40	40.041845	12817	2744
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	1.315677	361	133	5.0.1.0.0.0	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: Dec.fsetdec; only 1: intro; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalZ.of_int_iter_D0	40	40.053236	10086	3399
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalZ.double_norm	40	40.067095	15821	3791
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zeven_bit_value	40	40.072380	22496	3542
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CR_of_Q_abs	40	40.031497	6185	1326
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRle_abs	40	0.038149	3	3	0.0.0	synth with cache (only 1: intros; only 1: pose proof (CRabs_def R x (CRabs R x)) as [_ H1]; only 1: apply H1, CRle_refl).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.empty_mem	40	40.080396	29439	418
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_morph	40	40.028975	4245	886
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.compact_P5	40	40.072512	24057	5453
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.of_lu_revapp	40	40.033452	11754	794
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.maj_by_pos	40	40.037934	10164	3174
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower_pos_pos	40	40.065650	20473	2858
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	40	40.079263	27887	2814
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zodd_bit_value	40	5.775492	1953	434	0.0.0.3.0.0.0.0.0.1.0.0.1.2	synth with cache (only 1: destruct z; only 1: intros Hb; only 1: simpl; only 1: easy; only 1: destruct p; only 1: unfold bit_value; only 1: tauto || (intro H; elim H); only 1: unfold bit_value; only 1: tauto || (intro H; elim H); only 1: auto; only 1: destruct p; only 1: tauto || (intro H; elim H); only 1: tauto || (intro H; elim H); only 1: tauto || (intro H; elim H)).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zwf.wf_proof_up.Zwf_up_well_founded	40	40.158529	8201	4325
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_above	40	40.085675	30243	2141
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_eq	40	40.064918	20005	4895
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.cos_5PI4	40	40.029306	7798	2332
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.Nadd_simpl	40	4.233310	1392	124	1.0.0.41	synth with cache (only 1: destruct n; only 1: N.nzsimpl; only 1: now N.nzsimpl'; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_mul_mon_null_compat	40	40.181130	72321	3742
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_eqn	40	40.011368	3376	323
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40	40.256057	103628	3232
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	40	40.044893	14634	3060
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map_option.map_option_avl	40	40.049384	14165	2341
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_opp_l	40	40.042546	13152	2569
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.atan_opp	40	40.038214	11665	1715
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	40	40.069198	10802	2005
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.of_uint_acc_eqn	40	2.556122	624	197	16	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xfind_left	40	40.069905	22170	2733
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_const	40	40.101410	39163	2422
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry_c	40	40.045635	11906	3092
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_le	40	40.052354	16636	2565
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.to_lu_equiv	40	40.083715	27113	4188
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rlt_trans	40	40.090585	31542	2528
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.permut_nil	40	40.072997	23158	2757
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_Rabs	40	40.055379	15537	4955
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_app	40	40.049511	13065	3012
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_maj	40	40.875007	46259	1934
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmax_plus	40	40.029620	3795	1788
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_pos	40	40.055387	17415	1923
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P19	40	40.102774	38722	3940
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zsor	40	40.066122	17400	2525
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_mapsto_equiv	40	40.037811	8351	4587
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_assoc	40	40.033122	8714	2043
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_eq	40	2.163711	838	217	12.0	synth with cache (only 1: intros; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_canon	40	40.131798	52297	1781
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_less_alt	40	40.053081	14004	3789
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_ne	40	40.050955	13640	3404
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_1_r	40	0.124285	15	14	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_eq_compat_l	40	0.011778	2	2	0.0	synth with cache (only 1: intros r r1 r2; only 1: apply f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.Rrepr_morphism	40	40.117875	48468	457
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_eq_compat_r	40	1.218193	399	108	1.5.4	synth with cache (only 1: intros r1 r2 H H0; only 1: subst; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi1	40	40.065526	21953	877
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalN.Unsigned.to_uint_inj	40	40.110732	41521	2864
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyBool.leZeroSpec_ok	40	40.081839	27745	2030
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.101290	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	32.289047	13655	1016	14.0.0.18.0.17	synth with cache (only 1: intros a; only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: Dec.fsetdec; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRle_trans	40	40.254069	19756	2094
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	0.029147	3	2	1.0	synth with cache (only 1: red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0.044169	1	1	0	synth with cache (only 1: Dec.fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Heap.defs.heap_to_list	40	40.221551	80180	2057
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rpower_Ropp	40	40.040368	11380	2014
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_def2	40	40.062826	15978	1536
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_succ_l	40	40.139873	50889	4122
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_add_distr_r	40	40.040145	12441	1339
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_2a	40	40.048507	14481	2072
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P24	40	40.028668	6732	2789
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	5.680554	1715	337	18	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P9	40	40.052178	18202	2326
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_less	40	12.521624	2812	601	0.1.0.0.0.1.0.1.2.3.5	synth with cache (only 1: intro; only 1: intro; only 1: intros Hx; only 1: pose proof (Rle_lt_trans _ _ _ Rle_0_1 Hx) as Hx1; only 1: apply Rsqr_incrst_0; only 1: rewrite Rsqr_sqrt; only 1: rewrite <- (Rmult_1_l x)  at 1; only 1: now apply Rmult_lt_compat_r; only 1: trivial; only 1: apply sqrt_pos; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_pos	40	40.030370	6491	2065
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalZ.of_hex_int_double	40	40.099602	23962	2841
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_equal_empty	40	40.140221	52559	2611
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.compact_carac	40	40.048672	12228	5575
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_1	40	0.728720	120	25	10	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_2	40	0.041723	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.CV_mult	40	40.034140	8780	3867
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.fibonacci_pos	40	40.086554	30531	2950
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower_le_monotone	40	40.057691	18548	2375
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zge_minus_two_power_nat_S	40	40.040028	12465	2167
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_1	40	3.293346	3203	169	50	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_above_same	40	40.188572	20459	1664
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_2	40	0.938561	75	52	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_5PI4	40	40.034529	9421	2342
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_mul_mon_valid_compat	40	40.084354	25888	4389
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_aux_equiv	40	40.056649	17921	3538
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40	40.088754	29074	2634
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map2_opt.map2_opt_avl	40	40.070470	24240	2020
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_ext	40	40.053250	15219	2645
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_opp_r	40	40.045778	16842	1356
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.derivable_pt_atan	40	40.024122	5909	2031
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.of_uint_acc_rev	40	40.047148	12391	1701
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ii	40	40.058172	17472	3366
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.Rcv_cauchy_mod	40	40.057734	19609	2431
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	40	40.064786	21215	2065
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ	40	40.053566	14027	3623
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_pos_eq	40	40.056461	14551	2853
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.to_uint_alt	40	40.107626	38283	3929
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_opp_l	40	3.643415	697	361	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_Rabsolu	40	2.638890	922	292	0.0.0.1.0.0.3.5.1	synth with cache (only 1: intros; only 1: rewrite Rabs_right; only 1: auto with real; only 1: unfold Rabs; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rplus_lt_compat_l	40	40.105967	30340	2102
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.permutation_Permutation	40	40.076754	24109	4126
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_maj_Rabs	40	40.055749	14209	5479
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_opp_r	40	1.893360	341	182	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_1	40	9.645025	1801	913	0.13.0	synth with cache (only 1: rewrite <- not_mem_iff; only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: auto with set relations).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.Rsqr_pow2	40	1.131871	366	106	10.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_inside_eq	40	40.060163	15128	2603
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_abs_lt	40	40.142659	53943	3486
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmax_left	40	40.026708	3711	1983
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_2	40	0.966839	71	54	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qmult_power_positive	40	40.184308	7310	1304
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_equal_add	40	0.129068	14	5	4.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P20	40	40.083887	30151	3542
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P21	40	0.025769	4	3	0.1.0	synth with cache (only 1: intros a b [=]; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.ZSORaddon	40	40.047125	10879	2386
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_0_r	40	25.334961	7679	1115	0.20.4.1.0.0	synth with cache (only 1: intros; only 1: zify; only 1: rewrite Zmod_small; only 1: now Z.nzsimpl; only 1: Z.nzsimpl; only 1: apply ZnZ.spec_to_Z).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_equiv	40	40.068604	21789	4133
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_bst	40	0.486550	303	46	1.8.3	synth with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: compute; only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_in	40	0.207830	10	5	0.1.0	synth with cache (only 1: unfold create; only 1: intros m a b Ha Hb; only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_1	40	40.112489	2690	1504
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_1_l	40	40.022635	2493	428
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P22	40	4.611420	1723	329	0.1.5.3.10	synth with cache (only 1: intros l H; only 1: elim l; only 1: easy || now destruct 1; only 1: intros; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_case	40	40.150197	59049	2420
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.permut_length_1	40	9.025923	6386	876	0.22.4.2	synth with cache (only 1: unfold PermutSetoid.permutation, meq; only 1: intros H x; only 1: apply permut_length_1; only 1: eauto with typeclass_instances).
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.Rabst_morphism	40	40.113649	45637	329
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_eq_reg_l	40	40.053360	16189	2462
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkPX_ok	40	40.019666	5107	618
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qabs_case	40	40.146917	55914	2878
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalN.Unsigned.to_uint_surj	40	40.068107	21534	3748
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalN.Unsigned.of_uint_norm	40	0.033444	1	1	0	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalN.Unsigned.of_inj	40	0.035485	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- !HexadecimalPos.Unsigned.to_of; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalN.Unsigned.of_iff	40	0.134978	11	8	0.0.1.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- !to_of; only 1: now f_equal; only 1: intros E; only 1: rewrite <- HexadecimalPos.Unsigned.of_uint_norm, E; only 1: apply HexadecimalPos.Unsigned.of_uint_norm).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Add_Equal	40	40.026308	4452	3095
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.union_Union	40	40.045855	11393	1032
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_refl	40	0.182600	92	10	0.13	synth with cache (only 1: red; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_sym	40	0.014558	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRlt_trans	40	40.620258	15157	1678
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_trans	40	2.008926	1246	155	11.8.3	synth with cache (only 1: constructor; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_refl	40	0.023626	38	4	10	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_trans	40	0.061781	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_antisym	40	0.036570	15	5	3.0.2	synth with cache (only 1: repeat red; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_equal	40	0.089373	10	3	2.0	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_empty	40	0.100565	64	8	12	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_remove_3	40	0.045330	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_diff	40	0.075249	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_3	40	0.081484	3	2	0.1	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_2	40	0.035357	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.in_subset	40	0.029647	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.double_inclusion	40	0.722798	116	44	0.1.2.0.6	synth with cache (only 1: intuition; only 1: generalize (F.equal_iff s1 s2); only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Heap.defs.treesort	40	40.069778	24842	1250
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_1	40	0.050930	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_2	40	0.032989	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_equal	40	0.143199	12	5	2.0	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.powerRZ_Rpower	40	40.029466	7540	2128
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_morph_Proper	40	40.029685	3436	1124
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_r	40	40.070070	25570	1587
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_2a_cos	40	40.039729	10311	2293
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	40.085978	26437	1513
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P10	40	40.096850	22741	2663
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	1.030233	284	97	0.0.0.0.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: rewrite elements_Empty in H; only 1: rewrite elements_iff in H0; only 1: rewrite InA_alt in H0; only 1: destruct H0; only 1: rewrite H in H0; only 1: destruct H0 as (_, H0); only 1: inversion H0).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_more	40	40.056676	14400	2586
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P25	40	40.030521	6597	2997
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalZ.double_to_hex_int	40	40.089763	30893	3018
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_appart_0	40	40.033512	4587	1011
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.ZNpower	40	20.026040	4489	1755	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: unfold Z.pow_pos; only 1: rewrite <- (Z.mul_1_r (pow_pos _ _ _)); only 1: generalize 1; only 1: induction p; only 1: simpl; only 1: intros; only 1: rewrite ?IHp, ?Z.mul_assoc; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite ?IHp, ?Z.mul_assoc; only 1: trivial; only 1: simpl; only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_2a_sin	40	4.458148	767	228	0.0.4.0.0.1.0.0.0	synth with cache (only 1: intro x; only 1: rewrite double; only 1: unfold Rminus; only 1: rewrite cos_plus; only 1: generalize (sin2_cos2 x); only 1: intro H1; only 1: rewrite double; only 1: rewrite <- H1; only 1: ring_Rsqr).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.continuity_compact	40	40.092187	27500	4241
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.tech9	40	40.059827	19948	3069
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	7.386562	4845	473	7.5.18.0.6	synth with cache (only 1: intro n; only 1: unfold Same_set, Included, mkEns, In; only 1: repeat split; only 1: Dec.fsetdec; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.fibonacci_incr	40	40.092271	25709	2912
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower_lt_monotone	40	40.063369	23820	1129
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zlt_two_power_nat_S	40	40.077188	23948	2643
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_cos5PI4	40	40.047781	13393	1911
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40	0.300009	23	12	0.0.0.0.1.2	synth with cache (only 1: replace (3 * (PI / 2)) with (PI + PI / 2); only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra; only 1: pattern PI at 1; only 1: rewrite (double_var PI); only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.Rgt_2PI_0	40	0.073142	3	3	0.0.0	synth with cache (only 1: apply Rmult_lt_0_compat; only 1: prove_sup0; only 1: apply PI_RGT_0).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_mul_valid_compat	40	40.068534	19819	3372
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_asym	40	41.172667	18283	1576
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40	0.383085	118	19	2.9	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_equiv	40	40.500171	15950	889
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqbP	40	40.098610	14033	1518
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map2.map2_avl	40	40.175201	28006	1920
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40	40.047783	15906	2854
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.atan_increasing	40	40.026642	7293	2308
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_growing_transit	40	40.067993	23292	2714
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_io	40	40.056718	16730	2991
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.of_uint_alt	40	40.064416	17329	3882
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add	40	40.059804	15890	3435
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult	40	40.049962	13401	3837
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.of_lu_eqn	40	40.030293	6292	195
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_pos_lt	40	40.073353	24003	3682
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rmult_lt_compat_l	40	40.107358	39956	2586
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_opp_opp	40	40.047603	14929	2392
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.Z_compl.intP	40	40.068337	27759	529
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_inside	40	40.058385	17229	2527
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_abs	40	40.235815	8185	357
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmax_right	40	40.028319	4940	2551
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_mem	40	40.034086	2465	1810
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qmult_power	40	40.038070	10348	2060
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40	40.060404	13677	1898
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_bst	40	40.081011	24743	2504
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_opp_opp	40	5.866009	1857	643	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.1	synth with cache (only 1: destruct a, b; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: trivial; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: simpl; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_2	40	40.025877	5609	1904
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.Qsor	40	40.058548	17743	552
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P24	40	40.063642	16092	2874
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_isRingExt	40	40.101358	17087	2732
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_pos	40	40.056221	17668	1432
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.permut_length_2	40	40.068062	20816	2822
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.In_dec	40	0.118725	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_eq_reg_r	40	40.047677	5479	1188
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qabs_wd_Proper	40	40.079742	18945	1936
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalN.Signed.of_to	40	40.073732	26303	2871
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddCl_ok	40	40.031548	7204	909
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40	40.049053	14197	1609
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRlt_trans_flip	40	40.268324	15122	1753
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CReq_refl	40	0.065147	15	8	0.0.0.0.0.0.1	synth with cache (only 1: repeat split; only 1: intro H; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H); only 1: intro H; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H)).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qabs_pos	40	2.683323	916	182	4.0.0.3.1.4.0.1.1	synth with cache (only 1: intros [[| n| n] d] Ha; only 1: red; only 1: simpl; only 1: ring; only 1: simpl; only 1: unfold Qred, Qeq in *; only 1: simpl; only 1: reflexivity; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	10.372504	6277	536	1.1.0.30	synth with cache (only 1: intros EQ; only 1: zify; only 1: pose proof gt_wB_1; only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qabs_neg	40	0.227497	35	21	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x H; only 1: apply Qabs_case; only 1: intros H0; only 1: setoid_replace x with 0; only 1: reflexivity; only 1: apply Qle_antisym; only 1: assumption; only 1: assumption; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_add	40	40.033193	10251	651
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_mem	40	15.636327	1140	911	0.0.2.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (inter s s') x), (mem_iff s x), (mem_iff s' x), (inter_spec s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_equal	40	0.092633	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rle_Rpower	40	40.042372	12392	2675
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_morph_Proper	40	40.043404	2251	676
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Equal_remove	40	0.342852	14	5	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_remove	40	0.420026	10	3	0.4	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_add	40	0.550376	20	8	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.singleton_equal_add	40	0.094927	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40	40.061919	22446	1474
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P11	40	40.032307	9886	2008
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.inv_sqrt	40	40.074126	25801	2524
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P26	40	40.065782	22984	3136
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_mult	40	40.042253	12005	2088
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zeval_expr_compat	40	40.083643	28318	2131
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.tan_2a	40	40.041190	11890	2353
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_neg	40	0.131295	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intro; only 1: unfold sin; only 1: replace (- x)² with x²; only 1: case (exist_sin x²); only 1: intros; only 1: ring; only 1: apply Rsqr_neg).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_neg	40	0.081776	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold cos; only 1: replace (- x)² with x²; only 1: reflexivity; only 1: apply Rsqr_neg).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qabs_nonneg	40	9.948551	3444	394	0.0.0.0.14.13	synth with cache (only 1: intros (c, Hc); only 1: simpl; only 1: unfold Qle in *; only 1: simpl in *; only 1: Z.nzsimpl; only 1: Z.order_pos').
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.prolongement_C0	40	40.079338	29137	3371
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Zabs_Qabs	40	0.063940	13	5	1.2.1	synth with cache (only 1: intros p Hp; only 1: simpl; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.tech13	40	40.124483	50298	3502
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	40	40.065070	13348	2629
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40	40.051046	15268	2332
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower_gt_1	40	40.072405	23748	2441
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.COHERENT_VALUE.binary_to_Z_to_binary	40	40.066024	21048	2536
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CReq_sym	40	16.342220	4865	559	6.2.3.13	synth with cache (only 1: intros n H1 H2; only 1: red; only 1: inversion_clear 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_add_linear_compat	40	40.052360	13761	3670
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40	40.035205	9484	2556
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_irrefl	40	40.089116	25825	4821
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incrbis_aux_equiv	40	40.222984	52669	1749
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.ltbP	40	40.197955	79508	1036
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_derive	40	40.084380	30810	2901
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.atan_0	40	40.364641	20060	1470
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.growing_ineq	40	40.188471	30264	2996
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry	40	40.054788	13849	3251
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oo	40	40.031724	6667	3097
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.of_lu_rev	40	40.054228	14955	3485
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qred_identity	40	40.068006	22799	1759
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_appart	40	40.124741	24740	2796
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.of_lu_succ	40	40.076551	25326	3288
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_minus_sym	40	40.040875	12072	1716
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.MapsTo_1	40	40.122346	43901	3504
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_INR	40	40.052428	14484	2375
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_refl	40	8.229470	3077	402	2.9.9.1.0.6	synth with cache (only 1: intros; only 1: apply CRealLe_not_lt; only 1: intros; only 1: Z.nzsimpl'; only 1: ring_simplify; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.Zpower_NR0	40	40.088653	31675	3471
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_O	40	0.008443	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside_eq	40	40.049051	10951	2789
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_1	40	0.100884	43	11	1.5.0	synth with cache (only 1: intros; only 1: simpl; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_unique	40	40.199824	62032	4150
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oi	40	5.848059	1329	513	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct o; only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: destruct (in_inv H0); only 1: congruence; only 1: apply (IHm2 _ _ _ H1); only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: apply (IHm2 _ _ _ H0)).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmax_contract	40	40.041824	9050	2208
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qinv_power_positive	40	40.357098	11320	1505
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_refl	40	1.637118	246	34	0.0.0.0.12	synth with cache (only 1: constructor; only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs); only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs)).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qopp_lt_compat	40	40.082517	26509	2606
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qfloor_Z	40	2.134407	931	129	5.0.13	synth with cache (only 1: simpl; only 1: intros; only 1: apply Z.div_1_r).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_in	40	40.039819	12214	1222
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_sgn	40	40.137618	22084	1287
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_1	40	40.112284	42193	1670
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P25	40	40.078595	26705	3889
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.QSORaddon	40	40.037102	7047	719
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_neg	40	40.056265	10945	5544
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.permut_length	40	40.084918	27920	3522
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_isRing	40	40.510822	5623	2571
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Add_Equal	40	40.061769	17355	2577
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_refl	40	0.059769	27	8	5	synth with cache (only 1: let rec add_permut := let rec add_permut_rec := let rec add_push := Ring_theory.gen_add_push radd Rsth Reqe ARth in fun t => match t with | radd ?x ?y => add_permut_rec y || add_permut_rec x | _ => add_push t; apply (Ring_theory.Radd_ext Reqe); [  | reflexivity ] end in repeat reflexivity || match goal with | |- req ?t _ => add_permut_rec t end in add_permut).
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.Qeval_expr_simpl	40	1.191345	846	91	1.6.18	synth with cache (only 1: intro H; only 1: intros p; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_sym	40	0.064052	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.QNpower	40	0.039912	3	3	0.0.0	synth with cache (only 1: intros r [| n]; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_trans	40	0.088049	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_refl	40	0.035128	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_trans	40	0.056786	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_antisym	40	0.202920	4	3	0.0.1	synth with cache (only 1: destruct (equal s s''); only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_equal	40	0.046151	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_empty	40	0.035197	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_integral	40	40.051135	10387	1524
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_remove_3	40	0.067660	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_diff	40	0.070108	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_3	40	0.106060	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_2	40	0.058738	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.in_subset	40	0.053742	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.double_inclusion	40	0.253919	20	10	0.0.0.0.4	synth with cache (only 1: split; only 1: split; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_1	40	0.079042	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_2	40	0.080849	5	3	0.0.2	synth with cache (only 1: intro n; only 1: intros g_eq; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalN.Signed.to_of	40	40.111857	42133	2622
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_equal	40	0.207978	9	3	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.add_Add	40	40.032514	6879	1136
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_aux_ok	40	40.024258	2170	640
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_succ_l	40	40.098960	7131	1462
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qabs_opp	40	29.666706	12951	2473	13.1.0.8	synth with cache (only 1: red; only 1: simpl; only 1: intros (n, d); only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_sym	40	12.745494	5026	684	3.0.3.0.7.8	synth with cache (only 1: intro n; only 1: repeat split; only 1: destruct H; only 1: trivial; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	40	7.199389	830	523	0.0.2.0.1.0.0.0.0.0	synth with cache (only 1: intros x y H z t H0; only 1: apply (CRealEq_trans _ (x * t)); only 1: apply CReal_mult_proper_l; only 1: apply H0; only 1: apply (CRealEq_trans _ (t * y)); only 1: apply (CRealEq_trans _ (t * x)); only 1: apply CReal_mult_comm; only 1: apply CReal_mult_proper_l; only 1: apply H; only 1: apply CReal_mult_comm).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_mem	40	40.034207	3096	2710
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.ln_lt_2	40	40.081303	28139	2433
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_3	40	0.044311	4	3	0.0.1	synth with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_4	40	0.138256	23	8	0.2	synth with cache (only 1: rewrite <- not_mem_iff; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_refl	40	0.038587	9	2	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_double	40	40.155873	14307	2111
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_morph_T	40	2.377681	263	165	0.8	synth with cache (only 1: intros EQ; only 1: apply CReal_isRingExt).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_singleton_empty	40	40.031623	2560	478
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.CyclicRing	40	40.043215	7337	135
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_sym	40	0.074429	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_sym	40	1.424574	389	91	3.1.0.2.1.0.0.5	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_equal	40	0.063231	1	1	0	synth with cache (only 1: intuition fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_1	40	0.102728	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_2	40	0.198364	4	2	0.2	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_nonneg	40	12.648818	7316	613	0.1.0.0.6.7.10.46	synth with cache (only 1: eapply Qle_trans; only 1: auto with *; only 1: apply Qle_minus_iff; only 1: simpl; only 1: rewrite <- Qle_minus_iff; only 1: apply Qabs_case; only 1: auto; only 1: apply (Qopp_le_compat x 0)).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_cauchy	40	40.057879	18902	3047
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P27	40	40.036142	8478	3130
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P12	40	40.041414	13089	1970
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zeval_formula_compat'	40	40.116071	26573	3588
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.tan_0	40	41.039391	26890	1279
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.continuity_ab_maj	40	40.052158	16209	3513
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_lt	40	40.237096	28121	1522
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.growing_ineq	40	40.065194	21636	4068
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	40	40.069360	11843	1832
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40	40.092489	27621	3755
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zmult_power	40	40.052403	20793	1015
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.COHERENT_VALUE.two_compl_to_Z_to_two_compl	40	40.046501	14034	2309
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CReq_trans	40	40.692163	17264	2658
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.rad_deg	40	40.087856	30802	2633
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Reduce.reduce_aux_eval_compat	40	40.045752	12308	1978
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn1	40	40.024881	6746	561
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lebP	40	40.092223	35971	1744
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_continuous_pt	40	40.041402	11972	3485
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.atan_eq0	40	40.040481	13500	1748
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred_c	40	40.043535	9983	3437
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_open_below	40	40.109445	39759	2969
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.of_lu_double_gen	40	40.075628	22772	2191
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qred_identity2	40	40.060871	18325	2854
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_appart_zero	40	40.194021	22178	1663
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.of_to_lu	40	40.094473	34143	3011
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_mult	40	40.066633	21444	3553
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.eq_bool_alt	40	0.076803	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.mem_1	40	40.097214	13431	1405
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_IPR2	40	40.058266	16564	1899
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40	22.150294	1336	812	1.2.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: apply (CReal_plus_eq_reg_l x); only 1: apply (CRealEq_trans _ 0); only 1: apply CReal_plus_opp_r; only 1: apply CRealEq_sym; only 1: apply (CRealEq_trans _ (y + - y)); only 1: apply CReal_plus_proper_r; only 1: apply H; only 1: apply CReal_plus_opp_r).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_NOR	40	40.043606	12176	2107
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside	40	40.044589	10008	3414
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_abs_eq	40	40.099680	32926	3917
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ih	40	40.067439	21359	3642
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qinv_power	40	40.117644	18253	1416
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmax_lub_lt	40	40.097274	6925	1031
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qceiling_Z	40	40.106952	35984	3156
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_sgn2	40	40.051092	19165	1095
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_mapsto	40	40.021393	5464	795
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_2	40	40.030592	3083	1384
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P26	40	40.048689	13627	3786
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.permutation_map	40	40.086833	27473	3072
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.Qeval_expr_compat	40	40.184333	14665	1290
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_eq_0_compat	40	40.062651	19072	3178
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	0.018626	3	2	1.0	synth with cache (only 1: intros a b Hb; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_eq_0_compat_l	40	0.008763	1	1	0	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_neq_0_reg	40	0.857218	245	79	5.5	synth with cache (only 1: intros a m Hm; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_add	40	40.058373	20465	1030
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalN.Signed.to_int_inj	40	40.085450	31009	2273
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Add_Add	40	40.038447	11368	1889
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_equal	40	0.706627	45	16	0.0.5	synth with cache (only 1: destruct (equal s s''); only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Equal_remove	40	0.815819	41	20	0.1.0.0.0.0.2	synth with cache (only 1: split; only 1: do 2 rewrite F.remove_iff; only 1: intros; only 1: fsetdec; only 1: do 2 rewrite F.remove_iff; only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qabs_triangle	40	40.058179	12717	2089
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_dec	40	40.082726	27020	2406
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qabs_Qmult	40	0.482541	147	47	2.0.2.0.1.0	synth with cache (only 1: intros [xn xd] [yn yd]; only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: repeat rewrite <- Z.abs_mul; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_remove	40	0.770811	58	10	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_ok	40	40.025984	3294	354
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_add	40	0.821052	30	14	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.singleton_equal_add	40	0.216687	4	2	1.1	synth with cache (only 1: intro H; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.limit1_ext	40	40.027313	6998	2287
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_lub	40	40.049480	11915	1580
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_abs_cv	40	17.937320	11947	844	25.0.1.24	synth with cache (only 1: intros H; only 1: intros; only 1: destruct (series_cv_abs u cau); only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.tan_neg	40	33.482300	15551	1726	0.0.0.5.1.3.10.14	synth with cache (only 1: unfold tan; only 1: intros n; only 1: rewrite <- cos_sym; only 1: unfold Rdiv; only 1: rewrite sin_antisym; only 1: unfold sin; only 1: rewrite <- Ropp_mult_distr_l_reverse; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40	40.046501	14078	2378
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_trans	40	40.119441	10155	1595
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_equal	40	0.078235	6	3	0.1.2	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_assoc	40	40.027398	2243	787
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_cardinal	40	0.043411	2	2	0.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_refl	40	0.029419	3	2	1.0	synth with cache (only 1: apply subset_1; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_union_singleton	40	0.084204	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_antisym	40	0.099117	16	3	5	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_opp	40	40.197810	78950	2350
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_add	40	0.878229	66	15	0.0.0.9	synth with cache (only 1: split; only 1: intros; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P28	40	40.045741	13907	2860
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40	40.034928	9056	2349
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P13	40	40.021750	4554	2301
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zeval_nformula_dec	40	40.095736	31219	2540
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	12.414645	3196	571	10.3.1.0.0.1.0.0.0.0	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: intuition; only 1: constructor 1; only 1: auto; only 1: auto with sets; only 1: inversion 1; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_def1	40	40.060268	14436	1390
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.continuity_ab_min	40	40.035442	9189	3616
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_opp_morph_T	40	26.761678	1474	961	1.2.0.0.1.0.0.0.0	synth with cache (only 1: intros x y H; only 1: apply (CReal_plus_eq_reg_l x); only 1: apply (CRealEq_trans _ 0); only 1: apply CReal_plus_opp_r; only 1: apply CRealEq_sym; only 1: apply (CRealEq_trans _ (y + - y)); only 1: apply CReal_plus_proper_r; only 1: apply H; only 1: apply CReal_plus_opp_r).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.CV_opp	40	40.096074	34496	4898
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40	40.092003	35806	1535
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.add_Add	40	40.065260	19116	2127
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40	40.066556	19775	1194
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_binary_to_Z	40	40.034063	10634	1783
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	40	0.822143	1291	82	41	synth with cache (only 1: now destruct a).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CReq_relT	40	40.657811	19247	1864
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.toRad_inj	40	40.034094	9556	2914
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn2	40
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Reduce.reduce_eval_compat	40	40.044944	11257	2028
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40	40.103373	22832	2560
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_continuous	40	40.059553	19985	3891
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.atan_1	40	40.034214	10381	1438
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_c	40	40.053200	14738	3246
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_open_above	40	40.111203	41121	3132
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qred_iff	40	40.074122	24929	2555
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.of_lu_double	40	40.058294	15006	1642
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.is_zero_spec	40	2.746854	1073	280	0.7.0.5	synth with cache (only 1: split; only 1: auto using eqb_correct, eqb_complete; only 1: <Coq.Strings.String.t_eqb>; only 1: now apply Pos.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.of_lu_succ_double	40	0.013315	1	1	0	synth with cache (only 1: apply of_lu_double_gen).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_inv	40	40.084425	29052	3477
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.of_lu_revapp	40	40.027916	6590	900
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_Rinv	40	40.047955	13229	2850
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.mem_2	40	40.139229	51157	3986
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40	40.078440	25634	4244
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_IPR	40	40.069606	20848	1925
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_pos_sub	40	40.068144	21576	3303
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_middle	40	40.044779	11323	2239
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.empty_1	40	2.645629	1558	187	19.17	synth with cache (only 1: intros l; only 1: inversion 1).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oh	40	40.044785	11278	3460
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qdiv_power	40	40.077947	11628	1977
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qfloor_le	40	40.047710	15382	1438
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_lt_pos	40	40.057266	16535	3544
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmax_assoc	40	40.034817	8724	1301
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRlt_morph	40	15.028705	3872	1296	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros R x y H x0 y0 H0; only 1: destruct H, H0; only 1: destruct (CRltLinear R); only 1: split; only 1: intro; only 1: destruct (s x y x0); only 1: assumption; only 1: contradiction; only 1: destruct (s y y0 x0); only 1: assumption; only 1: assumption; only 1: contradiction; only 1: intro; only 1: destruct (s y x y0); only 1: assumption; only 1: contradiction; only 1: destruct (s x x0 y0); only 1: assumption; only 1: assumption; only 1: contradiction).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P29	40	40.035493	7694	3886
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.empty_mem	40	40.112657	12224	1846
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_find	40	40.032430	6771	1823
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.Qeval_formula_compat	40	40.075165	22722	2052
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_integral_contrapositive	40	40.057981	15764	2165
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	40	0.023980	2	2	0.0	synth with cache (only 1: intros r1 r2 H; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalN.Signed.to_int_pos_surj	40	40.074786	22149	4381
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_plus_distr_r	40	3.986244	570	309	7.1	synth with cache (only 1: intros m n p; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qabs_Qinv	40	40.070544	24227	1967
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Popp_ok	40	40.017751	1723	375
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_le_lt_trans	40	40.088932	24135	1855
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_equal_empty	40	9.782044	13128	581	6.0.13.18.0.80	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: destr_bool; only 1: auto with set; only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_singleton_empty	40	40.036298	6501	2297
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.limit1_imp	40	40.031761	7366	2484
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_1	40	0.399182	178	21	11.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_2	40	0.024465	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_1	40	0.025304	3	1	2	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rinv_Rdiv	40	0.094553	3	3	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40	38.509424	40799	1919	14.5.56.1	synth with cache (only 1: intros; only 1: inversion H; only 1: rewrite H1 in *; only 1: now apply Fin.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_sym	40	0.158507	7	5	1.0.1.0.0	synth with cache (only 1: split; only 1: do 2 rewrite F.union_iff; only 1: fsetdec; only 1: do 2 rewrite F.union_iff; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_equal	40	0.104111	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_glb	40	40.035342	7380	891
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_opp	40	40.043187	13773	2114
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_2	40	0.892552	69	50	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_1	40	0.633795	24	7	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_1	40	0.361169	94	16	8.1	synth with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.tan_minus	40	40.033969	8534	1929
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_2	40	0.743635	47	19	1.7	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_trans	40	40.042020	12525	1395
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_2	40	0.967509	68	52	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_equal_add	40	0.011511	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_equal	40	0.118293	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_triangle	40	40.066321	20585	2345
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_sym_app	40	20.009264	10339	1243	1.0.0.28	synth with cache (only 1: intros F l1 l2; only 1: repeat rewrite list_contents_app in *; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_1	40	40.039596	4414	736
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P29	40	40.091825	17599	2462
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.Rsqr_sol_eq_0_0	40	40.044076	13685	2006
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P14	40	40.032220	7479	3025
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.ZWeakChecker_sound	40	40.174300	32173	2838
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40	40.133887	49603	1571
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_assoc	40	6.058044	1340	100	0.1.1.30	synth with cache (only 1: intro y; only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.ValAdh_un_exists	40	40.076852	27723	3804
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_def2	40	40.064557	18393	2747
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_union_singleton	40	0.639771	142	18	2.9	synth with cache (only 1: intros H; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	40	40.024137	2896	1226
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.decreasing_ineq	40	40.036743	9242	4056
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Add_Add	40	40.064294	20888	2560
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	40	40.057373	19729	1182
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_two_compl_to_Z	40	40.055341	16696	2733
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcdn_opp	40	40.080542	29527	3071
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_push	40	0.156225	17	7	0.3.1.0	synth with cache (only 1: unfold decidable; only 1: intros ? ? ? Fl Fr; only 1: intros HF; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_pull	40	0.143895	9	5	1.3	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.eq_refl_iff	40	0.126412	113	30	4.3.0.0.1	synth with cache (only 1: split; only 1: intros; only 1: auto; only 1: intros E; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Qsrt	40	40.047948	8460	1461
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_2	40	10.476054	464	83	0.0.3.0.1.9	synth with cache (only 1: constructor; only 1: fsetdec; only 1: intros; only 1: rewrite union_spec; only 1: rewrite remove_spec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_1	40	0.027404	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_2	40	0.023880	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice	40	40.034134	7067	1926
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.deg_rad	40	40.043476	11820	2392
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_3	40	0.043424	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_4	40	0.053509	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_5	40	0.046356	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Reduce.reduce_aux_le_compat	40	40.038548	9893	1940
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_1	40	0.059251	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_2	40	0.080342	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.not_in_union	40	0.140299	4	2	0.2	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_sym	40	0.070407	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_equal	40	0.066693	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_1	40	0.082134	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_2	40	0.101895	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_add	40	5.999416	631	127	3.0.6.5	synth with cache (only 1: split; only 1: intros H; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_assoc	40	0.433694	18	4	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_id	40	40.072454	27024	3249
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry_c	40	40.043851	10342	3309
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.atan_tan	40	40.028472	8555	1922
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred	40	0.050373	8	4	1.3.0.0	synth with cache (only 1: intros; only 1: unfold succ, to_Z, Z.succ; only 1: symmetry; only 1: apply Zplus_mod_idemp_l).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_bound_down	40	40.534991	39352	3429
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qc_is_canon	40	40.124992	43345	3342
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.of_to	40	40.086026	26303	2603
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.succ_double_alt	40	0.040380	1	1	0	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.diveucl_spec	40	40.501585	40484	629
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_rat_cv	40	40.331001	35608	2520
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_Ropp	40	40.079535	26468	3771
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.of_uint_acc_spec	40	40.036882	7230	1526
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.MapsTo_fun	40	40.159162	59232	4995
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_IZR	40	40.047298	4271	827
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_add	40	40.050012	15808	2422
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_1	40	7.181541	991	51	0.0.5.35	synth with cache (only 1: intro n; only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_1	40	40.078126	26692	1935
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_hi	40	40.084929	15576	3466
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_2	40	0.744808	51	10	0.0.9	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_push	40	0.060569	9	5	3.0.0	synth with cache (only 1: unfold decidable; only 1: intros A R1 Sym1 B R2 Sym2 C R3 f Hf; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qinv_power_n	40	40.047290	13194	2196
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_pull	40	0.195187	9	5	1.3	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.eq_refl_iff	40	0.055249	26	8	2.3.1	synth with cache (only 1: split; only 1: split; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qle_ceiling	40	40.056192	10297	2397
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_lt_neg	40	40.042315	10942	2643
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_lt_pos_pos	40	0.334822	27	21	0.0.2.0	synth with cache (only 1: intros Ha Hb; only 1: apply Z.rem_bound_pos; only 1: Z.order; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_lt_pos_neg	40	0.114083	16	6	0.2.0	synth with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: lia).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.190324	24	10	0.1.0	synth with cache (only 1: intros; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmax_min_mult_neg	40	40.046151	12269	1310
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.198681	21	12	0.3.0	synth with cache (only 1: intros; only 1: generalize (Zrem_lt_neg a b); only 1: lia).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_in	40	40.046700	12113	2091
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRle_morph_Proper	40	40.412546	7330	1875
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.Qeval_nformula_dec	40	40.250194	37763	2906
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.In_1	40	0.813076	615	69	2.12.9	synth with cache (only 1: intro; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalN.Signed.of_int_norm	40	40.083167	25638	4287
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ho	40	12.314475	3592	979	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: intros; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct o; only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: generalize H0; only 1: apply IHm1; only 1: destruct (in_inv H0); only 1: congruence; only 1: generalize H1; only 1: apply IHm2; only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: generalize H0; only 1: apply IHm1; only 1: generalize H0; only 1: apply IHm2).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_1	40	12.158450	733	176	1.2.0.10.1	synth with cache (only 1: intuition; only 1: split; only 1: rewrite inter_spec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.find_xfind_h	40	0.874057	216	87	4.1.0.1.0.0	synth with cache (only 1: induction i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rsqr_0	40	40.206789	95621	991
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_2	40	0.787280	29	11	0.5	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_1	40	0.041778	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_2	40	0.037464	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qabs_Qminus	40	40.063392	16352	1156
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_1	40	0.025616	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_2	40	0.044862	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_3	40	0.043587	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_1	40	0.052573	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_2	40	0.059266	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset	40	0.035569	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset_equal	40	0.094048	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddXPX	40	40.021243	2435	919
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_diff_singleton	40	0.109124	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_lt_le_trans	40	40.103677	19679	2592
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_mem	40	36.749869	2705	2043	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (union s s') x), (mem_iff s x), (mem_iff s' x), (union_iff s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Dln	40	40.023731	5781	2559
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_scale	40	40.243784	10782	2030
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_l	40	40.028000	2589	900
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_3PI2	40	40.036138	9467	2214
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_3	40	40.099297	34703	3169
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_Qcmult	40	40.089464	10022	995
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_rev	40	40.056421	15514	3329
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P30	40	40.054681	17885	2038
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P15	40	40.038608	10839	1927
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_pol_sub	40	40.098764	34679	2837
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40	40.124692	44404	2173
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.ValAdh_un_prop	40	40.085375	30990	3059
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.radd_ext_Proper	40	20.040531	6283	327	33.15.1	synth with cache (only 1: intuition; only 1: generalize H; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.CV_minus	40	40.030965	7203	3771
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_minus_morph_T	40	40.025150	2870	1162
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	40.060503	19035	2781
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower2_lt_lin	40	40.070966	24393	1942
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	40	40.057261	17147	3489
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_In	40	40.116005	44359	3249
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_1_r	40	2.606486	209	90	4.1.2	synth with cache (only 1: intro r; only 1: rewrite CReal_mult_comm; only 1: apply CReal_mult_1_l).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Qsft	40	40.046332	9800	1855
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice_plus_one_firstl	40	40.040805	10662	3042
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40	40.034717	6139	1750
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Reduce.linear_reduce_aux	40	40.072148	24115	2594
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Qpower_theory	40	1.802367	1141	75	2.0.0.0.0.39	synth with cache (only 1: constructor; only 1: destruct n; only 1: red; only 1: simpl; only 1: trivial; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Examples.ex1	40	0.008221	1	1	0	synth with cache (only 1: exact Qmult_plus_distr_l).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Examples.ex2	40	0.011065	1	1	0	synth with cache (only 1: exact Qplus_comm).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Examples.ex3	40	0.098193	5	5	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Examples.ex4	40	0.009230	2	1	1	synth with cache (only 1: now split).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_1	40	40.042601	2262	404
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Examples.ex5	40	0.013496	1	1	0	synth with cache (only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Examples.ex6	40	0.015597	1	1	0	synth with cache (only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Examples.ex7	40	0.050695	4	4	0.0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Examples.ex8	40	0.021544	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Examples.ex9	40	0.024856	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_comp	40	40.055002	17025	2759
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_ext_Proper	40	6.432882	2853	176	38.2	synth with cache (only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub	40	40.063317	17330	3500
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.atan_inv	40	40.021645	5629	1811
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qc_decomp	40	40.117831	43386	3094
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_bound_up	40	40.435985	23864	2146
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.double_succ	40	40.069289	20970	2856
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.addc_spec	40	40.054008	18829	550
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_triang	40	40.050780	14365	3788
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.adherence_P4	40	12.060531	9176	1411	4.0.7.2.9.1	synth with cache (only 1: intros; only 1: intro H15; only 1: intros z0 H7; only 1: unfold intersection_domain; only 1: intro Hyp_F_NE; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CR_Q_limit	40	41.455723	21983	682
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_iff	40	40.106393	37095	3526
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.of_uint_alt	40	40.059063	14813	3189
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.archimed	40	40.759184	44875	1388
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ	40	40.048949	11958	3203
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_2	40	40.105783	23512	2626
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_2	40	7.820599	416	109	1.1.1.1.6	synth with cache (only 1: constructor; only 1: fsetdec; only 1: intuition; only 1: clear H; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_1	40	0.048292	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_plus_positive	40	40.063755	18387	3670
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_2	40	0.027415	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_ext_Proper	40	8.436380	7142	284	65	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_3	40	0.074051	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_ext_Proper	40	0.031941	4	1	3	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_4	40	0.083236	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_In	40	40.088157	32628	2890
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_5	40	0.085060	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_1	40	0.098223	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_2	40	0.103785	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40	12.758749	1672	370	4.8.4	synth with cache (only 1: intros P1; only 1: intros a; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.not_in_union	40	0.162303	15	3	3	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_ext_Proper	40	1.154752	549	40	27	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_sym	40	0.221636	4	3	0.0.1	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_equal	40	0.105341	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qle_floor_ceiling	40	40.054528	13810	1480
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_1	40	0.549996	18	6	0.4	synth with cache (only 1: intros H; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_2	40	0.784702	34	16	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Remainder_equiv	40	40.045533	14381	2537
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRlt_max	40	40.081170	17264	3203
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40	40.110822	40569	3273
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_assoc	40	0.666161	28	6	0.6	synth with cache (only 1: intros m; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_bst	40	40.183228	22536	2973
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_0_l	40	40.251484	22798	2776
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.QWeakChecker_sound	40	40.313566	24150	1829
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_1	40	40.165125	60548	1101
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalN.Signed.of_inj_pos	40	40.086669	30558	1883
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.MapsTo_iff	40	15.148389	9631	1294	1.1.1.1.0.0.25	synth with cache (only 1: intros x y z; only 1: intros; only 1: split; only 1: intros; only 1: apply (MapsTo_1 H H0); only 1: intros; only 1: apply (MapsTo_1 (E.eq_sym H) H0)).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_1	40	6.677666	685	94	3.4.0.4.15	synth with cache (only 1: intros EQ; only 1: split; only 1: fsetdec; only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rsqr_0_uniq	40	40.091119	29177	3441
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_complete	40	40.055736	15963	3456
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_eq_compat	40	0.113281	23	9	2.0	synth with cache (only 1: intros x y H; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_0	40	0.020913	9	2	2	synth with cache (only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mem_in_iff	40	1.041767	434	111	12.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qle_Qabs	40	40.086691	28607	3142
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok2	40	40.018511	3108	630
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_empty	40	40.024698	2167	577
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_le_trans	40	40.081255	21928	2793
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_all	40	0.411069	18	6	0.0.6	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_mem	40	40.026397	3831	2744
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_add	40	0.518994	166	36	0.1.7.1	synth with cache (only 1: generalize (F.mem_iff s x); only 1: red; only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_remove	40	0.427368	54	15	0.0.8	synth with cache (only 1: intros l2; only 1: expAdd; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.derivable_pt_lim_ln	40	40.023416	5641	2214
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_plus	40	40.138971	14445	1845
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_r	40	40.036487	3160	1311
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_2PI	40	40.036243	9170	2541
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_4	40	40.188367	83623	633
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_Qcminus	40	40.049832	8902	529
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_conv_inv	40	40.055442	15072	3040
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_3	40	0.038907	3	2	1.0	synth with cache (only 1: intro; only 1: auto with set relations).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_equal	40	0.032916	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P31	40	40.049374	15767	2924
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P16	40	40.042556	9756	2361
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_pol_add	40	40.072976	24176	2050
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_eq_0_compat	40	10.117993	3350	341	0.22.9	synth with cache (only 1: intros m Hm; only 1: subst; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_involutive	40	0.239913	17	5	1.1	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Ens_to_MSet	40	40.167913	65065	2797
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.cv_infty_cv_R0	40	40.069771	23394	3705
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower2_le_lin	40	40.084731	26866	1481
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40	40.238717	101979	2131
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	40	40.061571	16578	3491
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_eq	40	40.208167	86867	5843
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phibis_aux_equiv	40	40.065149	22988	789
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_lb_ge_0	40	40.021524	3953	2160
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Reduce.linear_reduce	40	40.068517	22162	2891
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Examples.ex10	40	40.053147	10710	1905
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Qopp_plus	40	0.120075	9	9	1.0.0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Qopp_opp	40	0.040694	4	4	0.0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_opp	40	40.047546	16262	2835
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry	40	40.050465	12816	3332
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.derive_pt_atan	40	40.033684	9875	2039
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qred_involutive	40	40.094839	29296	3492
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.to_lu_succ	40	40.070764	21868	3429
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmax_mult	40	29.734080	3281	1199	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros R p q r H; only 1: unfold CRmin, CRmax; only 1: setoid_replace (r * q - r * p) with (r * (q - p)); only 1: rewrite CRabs_mult; only 1: rewrite (CRabs_right r); only 1: rewrite <- CRmult_assoc; only 1: apply CRmult_morph; only 1: unfold CRminus; only 1: do 2 rewrite <- CRmult_plus_distr_l; only 1: reflexivity; only 1: reflexivity; only 1: exact H; only 1: unfold CRminus; only 1: rewrite CRmult_plus_distr_l, CRopp_mult_distr_r; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.nat_iter_S	40	0.059085	7	6	0.0.0.0.0.1	synth with cache (only 1: simpl; only 1: revert n; only 1: induction n; only 1: simpl; only 1: trivial; only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.nat_iter_0	40	0.020671	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.succ_spec	40	40.076368	15327	808
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_triang_inv	40	40.061567	19870	3617
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_le	40	40.127941	46950	3720
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.compact_P6	40	40.092682	31485	4310
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CR_Q_limit_cv	40	40.184420	20800	2830
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.of_to	40	40.107745	39037	2947
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.Zpower_pos_powerRZ	40	40.063375	19852	3069
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.add_1	40	40.085672	26841	2643
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_mem	40	24.833058	3038	1912	0.0.1.2.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (diff s s') x), (mem_iff s x), (mem_iff s' x), (diff_iff s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (diff s s')); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct (mem x (diff s s')); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: destruct (mem x (diff s s')); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_3	40	0.045799	6	3	0.0.3	synth with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: auto with fset).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_opp	40	40.075434	24019	2922
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_eq	40	40.098789	35090	3445
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.completeness	40	40.111678	44706	2253
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	40	40.047952	12639	1888
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ceqb_spec	40	40.060311	19545	267
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qlt_floor	40	40.045167	15356	1229
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.add_2	40	5.674707	3553	573	0.7.7.3.2	synth with cache (only 1: intros l x e r; only 1: intros y' e'' eqky'; only 1: red; only 1: simpl; only 1: eauto using add_2, add_3).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Backport_Sets.compare	40	40.066490	25311	1473
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_mod_unique_full	40	40.092557	35004	1810
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_1	40	40.056190	17511	2665
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_WSets.In_compat	40	0.394181	61	21	6	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_0_r	40	40.171384	24964	3359
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.QTautoChecker_sound	40	40.504677	31659	1981
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.In_1	40	1.055746	698	123	2.6.5	synth with cache (only 1: intros x y z H1 H2; only 1: inversion H1; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.eq_refl	40	0.389666	151	19	9.1	synth with cache (only 1: intros n; only 1: now BinInt.Z.nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.eq_sym	40	0.086068	18	4	0.6	synth with cache (only 1: intros n m; only 1: now BinInt.Z.swap_greater).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_2	40	40.251429	107831	2927
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_2	40	40.031237	2168	1554
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_complete	40	40.053768	13531	3299
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_mem_in_iff	40	40.119956	45231	2518
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qabs_triangle_reverse	40	40.054691	13655	3721
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_1	40	0.980855	44	15	2.0.0.1	synth with cache (only 1: split; only 1: fsetdec; only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_lt_trans	40	40.029758	6426	2518
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_2	40	0.752975	109	49	0.8	synth with cache (only 1: intros H3; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_1	40	0.075114	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_2	40	0.068801	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_1	40	0.049948	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_2	40	0.051519	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Add	40	40.029655	3690	538
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	1.511278	1743	190	23	synth with cache (only 1: now BinInt.Z.swap_greater).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_3	40	0.074432	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_1	40	0.095388	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.D_in_imp	40	40.024133	6429	2431
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_4	40	16.304294	10551	1151	2.23.7	synth with cache (only 1: intros Ha Eq; only 1: Ndec.eqb2eq; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_2	40	0.087266	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_minus	40	40.119860	11582	2392
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_refl	40	0.019376	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset	40	0.050970	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset_equal	40	0.266448	8	3	2.0.3	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_l	40	40.038348	4785	766
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_2PI	40	40.035548	8804	2544
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_diff_singleton	40	0.669466	71	11	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.neg_sin	40	0.525210	49	27	0.0.0.3.0	synth with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_sym	40	2.212661	1248	248	13.5	synth with cache (only 1: intros a; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_app_inv1	40	40.044391	10639	2875
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcle_Qcabs	40	40.076197	23579	3867
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_3	40	40.030120	6154	2468
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_equal	40	0.126964	11	4	0.3	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P32	40	40.065000	23070	2617
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_sym	40	3.173505	1159	273	7.0.1.0.1.0.1.0.0.2	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: apply equal_1; only 1: rewrite (equal_2 H); only 1: auto with set; only 1: intros; only 1: apply equal_1; only 1: rewrite (equal_2 H); only 1: Dec.fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.Rle_cv_lim	40	40.031897	9502	2289
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_pol_mul	40	40.067329	23793	1665
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_neq_0_compat	40	40.048613	14308	1658
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_plus_distr	40	0.181603	24	7	1.1	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40	0.039230	8	1	7	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.decreasing_prop	40	40.062431	20753	3029
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_mult_distr_l	40	2.804598	684	164	2.12	synth with cache (only 1: intros a n; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	40	0.022551	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_opp_opp	40	0.399957	43	15	1.2	synth with cache (only 1: intros n m; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower2_Psize	40	40.060047	19402	2512
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40	40.084835	26256	4690
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	40	40.071973	23687	3293
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_1	40	40.042251	13265	2268
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_empty	40	10.778303	547	304	1.0.7	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_all	40	0.340817	8	4	0.2.1.1	synth with cache (only 1: split; only 1: intuition; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn1	40	40.045603	12589	2009
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_add	40	0.486082	31	15	1.6	synth with cache (only 1: simpl_relation; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul_c	40	40.059745	16921	3272
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_opp_fwd	40	40.025774	6542	2803
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_mult_distr_r	40	5.892529	2758	567	6.12	synth with cache (only 1: intros a n; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.097886	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_remove	40	2.458101	509	104	0.0.3.2.11	synth with cache (only 1: constructor; only 1: fsetdec; only 1: generalize (F.mem_iff s x); only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_0_r	40	0.031636	9	3	1.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_0_l	40	0.021060	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_minus_distr	40	0.025953	3	2	0.1	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_minus_distr'	40	0.020897	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.derivable_pt_lim_atan	40	40.028871	7796	2271
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.D_in_ext	40	17.360499	3627	1085	0.6.0.0.3.0.2	synth with cache (only 1: unfold D_in; only 1: intros; only 1: generalize H, H0; only 1: clear H0; only 1: intros; only 1: elim H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_trans	40	0.097215	17	13	1.1.0.0.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Nat.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: transitivity y; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_not_eq	40	0.038690	6	2	4.0	synth with cache (only 1: intros n m H; only 1: Nat.order).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Q2Qc_eq_iff	40	40.055501	14413	2474
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.In_eq_iff	40	40.114532	39653	4657
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.to_lhex_tenfold	40	40.035685	9757	1774
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmin_max_mult_neg	40	40.025987	4723	1629
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.succc_spec	40	40.062109	15150	678
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.eq_trans	40	25.731880	19791	2597	0.3.7.0.25	synth with cache (only 1: intros a b; only 1: unfold eq, Equal; only 1: split; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_triang_inv2	40	40.052325	16213	3597
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.mem_1	40	0.060807	8	2	6.0	synth with cache (only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_abs_cont	40	40.069810	21231	2114
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.mem_2	40	0.026969	2	2	0.0	synth with cache (only 1: unfold In; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.mem_Leaf	40	0.034184	5	2	3.0	synth with cache (only 1: intros n; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.empty_1	40	0.011954	6	1	5	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.mem_iff	40	1.936321	1215	222	21	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.Bolzano_Weierstrass	40	40.109587	26201	3180
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.to_lu_sixteenfold	40	40.051556	14079	960
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CauchyMorph_rat	40	40.074046	23682	2011
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_lt	40	40.056917	14179	4935
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_le	40	0.066522	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros x z; only 1: case z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40	22.201521	16188	2042	1.0.0.28.2	synth with cache (only 1: intros ? ? ? [? ?] [? ?]; only 1: destruct z; only 1: red; only 1: unfold snd; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_minus_positive	40	40.048107	11886	2403
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_1	40	40.051110	16806	2008
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEequiv_eq	40	40.024818	5519	336
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.not_mem_iff	40	6.036725	4762	475	0.24.4.14.1	synth with cache (only 1: <Coq.Strings.String.t_eqb>; only 1: Ndec.eqb2eq; only 1: intuition; only 1: Ndec.eqb2eq; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qceiling_lt	40	40.039612	11011	1819
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Padd_ok	40	40.045802	2600	726
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	40	40.038233	3330	539
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.equal_iff	40	0.166765	34	12	5	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.add_3	40	40.089450	25766	2840
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_diag_eq	40	11.552765	3807	1181	1.10.0.3	synth with cache (only 1: intros; only 1: rewrite H; only 1: unfold Rminus; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_eq_0	40	0.187033	24	13	1	synth with cache (only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_unique_full	40	40.063892	19964	3236
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_2	40	40.039999	8745	1596
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_unique_full	40	0.517996	150	36	0.0.0.0.7	synth with cache (only 1: intros; only 1: destruct (Zquot_mod_unique_full a b q r); only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.mem_spec	40	40.191681	72077	3665
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_opp_l	40	40.167285	3458	619
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_opp_r	40	0.045561	3	3	0.0.0	synth with cache (only 1: intros; only 1: destruct (CRisRing R); only 1: apply Ropp_def).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_1	40	40.131804	54100	2012
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.is_lub_u	40	14.626935	4844	1013	3.5.3.7.0	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intro; only 1: intro A; only 1: intros n m Hn Hm (q, Hq) (r, Hr); only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Unsigned.of_to	40	40.092515	28855	4456
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.cardinal_1	40	40.081256	26337	2408
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_dec	40	40.118831	40902	5211
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qabs_Qle_condition	40	40.045828	13397	2017
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Unsigned.to_of	40	0.612444	277	73	0.1.10.1	synth with cache (only 1: unfold N.to_uint, Pos.to_uint; only 1: rewrite <- Unsigned.to_of; only 1: unfold N.to_uint, Pos.to_uint; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_trans	40	40.266484	20453	2416
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add	40	40.017120	2803	1660
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.find_mapsto_iff	40	2.465312	953	252	11.4	synth with cache (only 1: intros a b Hb; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_nonneg	40	40.222681	14235	2001
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_r	40	40.029468	3077	1260
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.req_refl	40	40.096701	17570	1419
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_PI_x	40	40.034614	7548	2375
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_triangle_reverse	40	40.040747	9480	2918
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_then	40	40.092595	33274	2727
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_remove	40	40.052501	5892	728
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_app_inv2	40	0.185422	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: lia).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P33	40	40.066888	23446	1927
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_trans	40	40.088264	15687	1736
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_equal	40	0.040204	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_cardinal	40	0.037669	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_refl	40	0.023618	3	2	1.0	synth with cache (only 1: apply subset_1; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_antisym	40	0.258087	176	16	14	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P17	40	40.036935	11098	2065
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_pol_norm	40	40.083258	27958	2171
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_relT	40	8.291488	3106	615	0.0.0.0.0.0.0.0.0.0.0.9.0.0.0.0.0.0.1.3.24	synth with cache (only 1: constructor; only 1: easy; only 1: split; only 1: destruct H; only 1: intro abs; only 1: contradiction; only 1: destruct H; only 1: intro abs; only 1: contradiction; only 1: red; only 1: intros; only 1: destruct H, H0; only 1: split; only 1: intro abs; only 1: destruct (CRealLt_dec _ _ y abs); only 1: contradiction; only 1: contradiction; only 1: intro abs; only 1: destruct (CRealLt_dec _ _ y abs); only 1: contradiction; only 1: contradiction).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_revapp	40	40.027699	7640	599
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.Nadd_simpl	40	0.011615	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.cv_speed_pow_fact	40	40.049010	14654	3946
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower_mod	40	40.070461	25756	2487
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Ens_to_FSet	40	40.181786	73918	3290
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_2	40	40.036051	11393	1519
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_1	40	0.308840	45	14	7.1	synth with cache (only 1: intros q1 q2 r1 r2 Hr1 Hr2 EQ; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn2	40	40.052730	13268	3296
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul	40	40.058794	15581	3938
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_opp_rev	40	40.067039	17955	2724
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Add	40	40.019564	5055	1016
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Ratan_seq_decreasing	40	40.032099	9375	2240
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Dpower	40	40.026362	7342	2315
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40	40.104526	39239	1174
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Z_as_OT.lt_trans	40	0.029524	2	2	0.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Z.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Z_as_OT.lt_not_eq	40	0.012211	1	1	0	synth with cache (only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qceq_alt	40	40.081760	24428	2748
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_alt	40	0.037288	3	3	0.0.0	synth with cache (only 1: split; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.of_lu_0	40	40.053142	13676	2332
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.addcarry_spec	40	40.049510	15628	1243
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmorph_min	40	40.058085	13075	3470
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_def1	40	40.065825	19338	5145
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_dist_cont	40	40.071164	11092	1709
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.mem_node	40	40.079506	21198	3875
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcgt_alt	40	1.450573	590	126	1.2.1.11	synth with cache (only 1: unfold Pos.ge; only 1: destr_bool; only 1: symmetry; only 1: apply Z.gt_lt_iff).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcle_alt	40	0.055492	17	4	0.2	synth with cache (only 1: intros n m; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.SlowMorph_increasing_Qr	40	40.095496	34507	2621
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ_absolu	40	40.048357	13123	2711
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.of_lu_0	40	40.038984	9555	2437
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_dec	40	40.089849	30312	4090
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_plus	40	40.036077	9310	1972
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_2	40	40.040080	12843	1530
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEeval_ext	40	40.020787	2116	592
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_l	40	0.131006	8	1	7	synth with cache (only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok	40	40.014704	1791	934
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qfloor_resp_le	40	40.168921	19679	3000
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.subset_iff	40	40.085538	23026	4321
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	40	40.094808	13802	2340
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.remove_1	40	40.064312	20835	2021
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_diag_uniq	40	40.122347	23899	2403
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qred_correct	40	40.058448	17628	2424
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_3	40	40.045839	10394	1847
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_quot_pos	40	40.074357	26260	2247
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.equal_spec	40	40.218007	67386	4041
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRopp_0	40	40.666993	1693	272
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_r	40	4.647353	326	55	16	synth with cache (only 1: let rec Esimpl := let rec rsimpl := gen_srewrite Rsth Reqe ARth in try rewrite_db Esimpl; rsimpl; simpl in Esimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_eqn	40	22.925425	10244	2411	0.0.1.1.2.0.0.0.5.0.0.0.1.0.0.6	synth with cache (only 1: intro H; only 1: simpl; only 1: induction d; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: simpl; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: simpl; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcge_alt	40	13.076265	4806	805	1.0.11.11	synth with cache (only 1: intro; only 1: induction p; only 1: symmetry; only 1: apply Z.ge_le_iff).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_2	40	40.461609	14800	1195
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.rplus_morph_Proper	40	0.008999	1	1	0	synth with cache (only 1: exact (SORplus_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.rtimes_morph_Proper	40	0.011012	2	1	1	synth with cache (only 1: exact (SORtimes_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.ropp_morph_Proper	40	0.014269	3	1	2	synth with cache (only 1: exact (SORopp_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.rle_morph_Proper	40	0.012846	3	1	2	synth with cache (only 1: exact (SORle_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.rlt_morph_Proper	40	0.014324	4	1	3	synth with cache (only 1: exact (SORlt_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.rminus_morph_Proper	40	0.241588	24	13	0.0.0.0.4	synth with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.domain_P1	40	40.079658	27922	3733
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_1	40	11.588452	3612	727	0.16.5	synth with cache (only 1: intro H; only 1: intros n IH a; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Unsigned.to_uint_inj	40	40.115136	43549	2597
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qabs_diff_Qle_condition	40	40.079105	9191	1071
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.mem_find	40	40.090095	31459	3618
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_find_in_iff	40	40.045192	12005	2341
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Equal	40	40.016238	2021	1116
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_eq	40	40.229945	16343	1810
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_lu_succ	40	0.133959	27	15	5.0.0	synth with cache (only 1: revert n; only 1: intros; only 1: now Nat.nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.req_sym	40	40.034248	8469	941
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_left	40	40.044295	4663	1602
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_period	40	40.045632	13580	2138
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_Qcle_condition	40	40.317974	20284	2166
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_add	40	40.019595	4199	761
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P34	40	40.043433	8662	1508
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_remove_hd_eq	40	40.089186	7671	1981
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_trans	40	40.108128	27514	2214
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_equal	40	0.043385	6	3	3.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set fset).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P18	40	40.033843	8734	2132
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zunsat_sound	40	40.072037	18380	1850
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_morph	40	40.888111	10006	1459
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	40	40.057006	18506	2137
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_2	40	40.069894	15682	2084
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_In_singleton	40	0.018256	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_firstl	40	40.041569	9943	3342
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_square_c	40	40.045598	10192	3795
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_mirr_fwd	40	40.030670	8286	2955
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	4.448731	3081	422	0.26	synth with cache (only 1: intros m'; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add	40	40.034176	3695	723
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Ratan_seq_converging	40	40.028490	9289	1749
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.derivable_pt_lim_power	40	40.022272	5541	1987
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Z_as_OT.compare	40	40.067444	20999	2183
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.addcarryc_spec	40	40.039861	11795	1548
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_def2	40	40.089242	30103	5226
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.to_of_lu_tenfold	40	40.050585	4624	1114
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_shift	40	40.098382	33831	3227
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.is_empty_spec	40	40.102891	35475	3559
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_Subset_add_remove	40	4.928130	2758	410	2.0.22	synth with cache (only 1: intros x y H; only 1: rewrite add_spec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_R1	40	40.072472	21014	3963
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.SlowMorph_increasing_Ql	40	40.044892	12379	2824
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.to_of_lu_sixteenfold	40	40.021946	3055	773
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40	40.094362	34801	3248
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_plus'	40	40.032872	8961	1846
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psub_ok	40	40.019260	1960	903
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qceiling_resp_le	40	40.078716	23065	2151
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.empty_iff	40	40.258473	110005	3370
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.is_empty_iff	40	0.087256	9	3	1	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.singleton_iff	40	0.100312	96	13	11	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.remove_2	40	40.067568	20172	2923
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_diag_uniq_sym	40	40.042050	11507	2430
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_minus	40	0.020673	3	2	0.1	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_eq_contra	40	0.121516	10	4	3.1.0	synth with cache (only 1: intros; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qred_complete	40	40.087603	29045	3713
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_not_eq	40	0.193170	34	15	2.0.1	synth with cache (only 1: intros; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_not_eq_right	40	0.030555	5	5	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: apply Rminus_diag_eq; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	40	40.126431	13115	996
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_minus_distr_l	40	0.031696	9	3	1.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.rev_revapp	40	40.130857	56075	644
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_minus_distr_r	40	0.024958	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_find	40	40.033454	7581	2531
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_quot_lt	40	40.062926	22036	1975
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.subset_spec	40	40.113245	42995	3208
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_simpl	40	40.018603	3971	470
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_lt_compat_r	40	40.371679	8421	1165
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_rev	40	40.058244	14767	2159
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_disjunction	40	10.949828	11416	1088	9.12.15	synth with cache (only 1: intro n; only 1: intros Ha Eq x IN; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qc_eq_dec	40	40.074389	24542	2237
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Q_apart_0_1	40	0.065216	3	1	2	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_1	40	40.110859	48926	1042
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.cleb_sound	40	40.160562	9893	475
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.Heine	40	40.095867	35952	4173
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_2	40	40.050780	15758	2328
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	0.029923	4	2	0.2	synth with cache (only 1: intro n; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40	40.152074	56457	3909
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	0.014110	1	1	0	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Unsigned.of_inj	40	0.041032	14	4	4.1.0	synth with cache (only 1: intros; only 1: apply Unsigned.of_inj; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Unsigned.of_iff	40	0.058950	11	8	0.0.1.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- !to_of; only 1: now f_equal; only 1: intros E; only 1: rewrite <- DecimalPos.Unsigned.of_uint_norm, E; only 1: apply DecimalPos.Unsigned.of_uint_norm).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_alt	40	40.114258	38763	3904
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add_2	40	40.030500	3448	909
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.in_find_iff	40	40.079544	24148	3686
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_remainder_maj	40	40.097059	14534	2646
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40	40.055047	13972	3714
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.req_trans	40	40.052006	3985	556
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.rplus_morph_Proper	40	0.025898	1	1	0	synth with cache (only 1: exact (SORplus_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_right	40	40.124428	4768	1805
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.rtimes_morph_Proper	40	0.012879	1	1	0	synth with cache (only 1: exact (SORtimes_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.ropp_morph_Proper	40	0.010435	1	1	0	synth with cache (only 1: exact (SORopp_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.rle_morph_Proper	40	0.012794	1	1	0	synth with cache (only 1: exact (SORle_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_period	40	40.030903	7041	2036
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.rlt_morph_Proper	40	0.026307	1	1	0	synth with cache (only 1: exact (SORlt_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.rminus_morph_Proper	40	0.109020	5	5	0.0.0.0.0	synth with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P35	40	40.038004	11259	2531
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	40	40.048058	12421	2460
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_cardinal	40	40.096512	34586	2039
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_1	40	0.024484	1	1	0	synth with cache (only 1: auto with set relations).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_remove_hd	40	40.037113	6400	2244
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_3	40	40.203542	85337	1692
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Peqb_complete	40	0.008541	1	1	0	synth with cache (only 1: apply Pos.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Peqb_Pcompare	40	0.140647	12	3	0.4	synth with cache (only 1: rewrite ?Pos.compare_eq_iff; only 1: now apply Pos.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Pcompare_Peqb	40	0.019268	1	1	0	synth with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P19	40	40.048167	11420	2239
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.xnnormalise_correct	40	40.569335	35501	3149
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_pol_Pc	40	0.041032	3	3	0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealGt_morph	40	40.522639	8189	1388
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpow_mod_correct	40	40.063037	20663	1384
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_plus_one_firstl	40	40.038465	8596	3294
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div	40	40.061567	18484	3385
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_mirr_rev	40	40.026712	6858	2760
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_opp_r	40	40.082776	30325	2595
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0.009416	1	1	0	synth with cache (only 1: apply Z.divide_opp_r).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Equal	40	40.036999	2693	622
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rpower_mult_distr	40	40.042106	11600	2429
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.ps_atan_exists_01	40	40.023817	6578	1653
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Positive_as_OT.lt_not_eq	40	40.101881	33607	4043
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.RmaxAbs	40	40.074454	12022	3443
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.subc_spec	40	40.085309	27254	1858
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_shift'	40	40.062548	18730	4390
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.Nadd_alt	40	40.031528	8241	1925
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.is_empty_1	40	40.094891	32722	2266
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.pow_powerRZ	40	40.051259	13492	3599
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.SlowMorph_increasing	40	40.037981	10561	2119
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.to_of_lu	40	40.052569	12770	2353
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_mult_positive	40	40.119628	14347	2394
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pmul_ok	40	40.012866	1685	844
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qfloor_comp_Proper	40	40.071114	22720	2733
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_iff	40	40.097552	37540	1940
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.remove_3	40	40.055552	15815	2083
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qceiling_comp_Proper	40	1.790584	491	180	1.2.1.0.0.1.0	synth with cache (only 1: intros x y H; only 1: apply Z.le_antisymm; only 1: unfold Qceiling; only 1: rewrite <- Z.opp_le_mono; only 1: auto with *; only 1: symmetry in H; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_1	40	40.073302	27170	1813
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qred_eq_iff	40	40.074878	22162	5164
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.rev_rev	40	40.134577	56823	827
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CRealArchimedean	40	40.212420	57909	2048
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_in	40	40.035551	8156	819
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_quot_monotone	40	40.068374	23020	3150
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.is_empty_spec	40	40.151425	57057	4370
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_ext	40	40.022090	3777	371
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_lt_reg_r	40	40.072461	25991	1450
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_disj	40	39.496644	7108	811	4.7.13.11	synth with cache (only 1: intro H; only 1: intros; only 1: red; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0.466435	32	11	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	0.060835	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40	40.084314	31411	1986
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcplus_assoc	40	40.195236	30246	3392
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_add_In	40	36.624606	33959	2354	36.8.10	synth with cache (only 1: intros x y z; only 1: intuition auto; BinNat.N.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_2	40	40.135737	48657	3227
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.cneqb_sound	40	40.087731	25390	1978
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Signed.of_to	40	40.109298	39554	2853
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_Node	40	40.087786	30252	3224
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_Subset_add_remove	40	5.150664	4497	389	8.28	synth with cache (only 1: intros n m H1 H2; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.equal_iff	40	40.056409	15619	2036
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.elements_Empty	40	40.084544	28788	4169
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	0.579758	50	13	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	0.685606	44	9	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_abs_remainder	40	40.290343	14832	2069
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Nplength_infty	40	0.232090	69	21	1.0.1.2	synth with cache (only 1: destruct a; only 1: simpl; only 1: now try N.order'; only 1: now try N.order').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40	40.088926	25630	3043
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_left	40	40.028073	4228	1486
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_shift	40	40.037970	9228	2706
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.ring_ops_wd	40	40.176012	23921	1271
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_null	40	40.060656	14838	5291
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_2	40	40.022646	3469	2592
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P36	40	40.033893	9321	2358
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_else	40	40.093371	32749	2492
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_4	40	40.088260	26990	3813
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_3	40	0.035621	7	2	4.1	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_equal	40	0.011697	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Neqb_Ncompare	40	40.184742	75991	2893
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Ncompare_Neqb	40	0.020643	1	1	0	synth with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Neqb_complete	40	0.018964	2	1	1	synth with cache (only 1: now rewrite N.eqb_eq, <- N.compare_eq_iff).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.FTC_P1	40	40.058920	15806	2098
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.xnormalise_correct	40	40.219897	15684	2170
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_appart_morph	40	40.775137	7993	1264
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower_divide	40	40.031794	8003	437
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_pos	40	40.075160	26251	2881
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div_gt	40	40.044237	10305	3780
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_plus	40	40.052018	16354	3438
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_opp_l	40	40.066871	23318	2274
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	40	0.019107	1	1	0	synth with cache (only 1: apply Z.divide_opp_l).
coq-tactician-stdlib.8.12.dev	Coq.Logic.SetoidChoice.setoid_choice	40	40.055489	7405	1140
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_conj	40	16.192480	1834	352	1.18.0	synth with cache (only 1: intros x y H a; only 1: intros n Hn; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rlt_Rpower_l	40	40.035366	10698	2227
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add_2	40	40.027199	2016	541
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Ratan_seq_opp	40	40.039279	12447	1896
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Positive_as_OT.compare	40	40.152112	53480	3371
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_Zabs	40	40.066226	20503	4119
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.pred_spec	40	40.049328	15581	574
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.to_of_lu	40	40.053386	13813	2920
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.is_empty_2	40	40.146593	55664	3047
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.subset_Leaf_s	40	0.133983	78	17	0.8	synth with cache (only 1: intro a; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_ind	40	40.152908	57638	4029
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_abs	40	40.051412	12961	4750
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_mult	40	40.060954	14723	2606
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psquare_ok	40	40.011719	1756	910
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_neq_iff	40	40.108909	35600	5959
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.find_1	40	40.118679	38423	2551
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkX_ok	40	1.732725	256	51	10.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: Esimpl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_neq_0_compat	40	40.052148	16102	1632
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Zdiv_Qdiv	40	40.062116	19767	2683
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_involutive	40	0.042013	4	3	0.0.1	synth with cache (only 1: intros; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_refl	40	25.486813	22487	1518	24.0.1.0.20.2	synth with cache (only 1: intros; only 1: intuition; only 1: destruct eqA_dec as [_| NEQ]; only 1: auto; only 1: contradict NEQ; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qred_comp_Proper	40	40.061506	12519	2298
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.revapp_rev_nil	40	40.137305	58160	720
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_mapsto	40	40.047768	5074	757
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_mult_quot_le	40	40.057897	20370	2614
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.Rup_pos	40	40.135907	54652	1693
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.add_spec	40	40.116990	38741	6174
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_reg_l	40	40.042422	5811	472
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_le_compat_l	40	40.305573	18855	2146
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	40.074797	26692	2235
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_rev	40	40.070896	21177	3062
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcplus_0_l	40	40.060751	21071	806
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_1	40	40.273969	121415	1952
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.cltb_sound	40	40.054912	16931	2408
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Signed.to_of	40	40.093722	31530	3522
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_1	40	40.063322	21775	1716
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_mapsto_iff	40	40.120431	45932	3342
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.elements_empty	40	40.194279	87618	999
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Nplength_zeros	40	40.086825	30879	4088
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40	40.093583	31971	3324
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_triangle	40	40.073280	22406	4575
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_right	40	40.032436	3951	1498
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_shift	40	40.044299	6797	2144
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.Zring_morph	40	40.052920	14909	2967
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_sin	40	0.538633	74	30	0.0.0.5.0	synth with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.PI2_RGT_0	40	0.103372	6	6	0.0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra; only 1: apply Rinv_0_lt_compat, Rlt_0_2).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P37	40	40.051445	16666	2668
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_3	40	40.123085	37482	4683
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_sym	40	0.019682	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_equal	40	0.049079	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_1	40	0.027635	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_2	40	0.026982	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_assoc	40	0.026096	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_union_singleton	40	0.019910	1	1	0	synth with cache (only 1: auto with set relations).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_add	40	0.012567	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_1	40	0.021443	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.to_of	40	40.035674	7572	1964
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_2	40	0.017555	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_3	40	40.031213	5919	2352
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_3	40	0.197591	2	2	0.0	synth with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_sym	40	0.030235	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_equal	40	0.036851	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_1	40	0.030915	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_2	40	0.032986	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_assoc	40	0.024605	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nxor_eq_true	40	40.216967	97660	3384
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_1	40	0.047437	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_2	40	0.025409	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_1	40	0.027795	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P20	40	40.050199	17981	1906
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.cnf_of_list_correct	40	40.739180	15261	2366
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_in_iff	40	9.012284	11982	742	0.42.2	synth with cache (only 1: intros; only 1: firstorder; only 1: apply (empty_1 H)).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.is_empty_iff	40	0.043872	4	2	0.2	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLtProp_morph_Proper	40	40.172500	12395	2227
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	40	40.079858	28581	2274
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_bounded	40	40.049513	15598	1588
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo	40	40.040839	8953	3857
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40	40.043124	12379	3206
coq-tactician-stdlib.8.12.dev	Coq.Logic.SetoidChoice.representative_choice	40	40.046243	14011	1952
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40	40.071405	22750	2245
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	40	0.008904	1	1	0	synth with cache (only 1: apply Z.divide_abs_l).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	40.036344	11774	1440
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rle_Rpower_l	40	40.045703	14558	2214
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.sum_Ratan_seq_opp	40	40.037146	11551	1922
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.N_as_OT.compare	40	40.136473	54627	1339
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.elements_Empty	40	40.105858	34048	3451
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_refl	40	0.026517	2	1	1	synth with cache (only 1: now Z.swap_greater).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.abs_IZR	40	40.072772	16257	4686
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.predc_spec	40	40.089481	8349	762
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.subset_spec	40	40.064594	20113	3078
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_inv	40	40.075961	26584	1539
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qminmax.Q.plus_max_distr_l	40	40.045249	6089	1309
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_sym	40	4.234457	2595	390	11.2.6	synth with cache (only 1: intros n m; only 1: intros (p, H); only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_cv	40	40.143689	35401	2839
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Zpower_Qpower	40	40.048389	15134	2581
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.find_2	40	40.121716	42423	3567
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_iff	40	40.151711	57641	3096
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qsqr_nonneg	40	2.084290	562	158	2.0.0.0.1.5.3	synth with cache (only 1: simpl; only 1: intro n; only 1: induction n; only 1: unfold Qle in *; only 1: simpl in *; only 1: rewrite Z.mul_1_r in *; only 1: apply Z.square_nonneg).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_pos_ok	40	40.010675	1978	818
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_mult_distr	40	40.035315	7034	1437
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_inv_permute	40	0.038232	3	3	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qplus'_correct	40	40.060363	16807	4227
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA	40	40.075474	24335	2122
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.app_nil_r	40	40.100186	40661	376
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_bst	40	40.113511	40853	3112
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_mult_quot_ge	40	40.039014	11581	2379
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_neq_iff	40	2.208195	1290	285	0.0.12.4	synth with cache (only 1: intro H; only 1: intuition; only 1: apply remove_3 with x; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.remove_spec	40	40.103518	37908	4180
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CRealLtDisjunctEpsilon	40	40.422886	27611	2186
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.field_is_integral_domain	40	40.020818	5722	346
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_le_compat_r	40	40.083421	22062	2635
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.eq_chain_test	40	40.054402	13073	2624
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Nplength_one	40	32.302024	28039	4166	0.4.0.0.0.0.0.0.7.0.2.4.0.0.0.2.1.0	synth with cache (only 1: destruct a; only 1: simpl; only 1: intros m H; only 1: now destruct m; only 1: simpl; only 1: intros; only 1: injection H as [=<-]; only 1: destruct p; only 1: split; only 1: induction p; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_double_gen	40	40.119233	44534	1584
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcplus_0_r	40	40.064784	21800	1167
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_2	40	40.329743	28585	1901
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.union_iff	40	4.689917	2504	456	4.13.2.7.0	synth with cache (only 1: split; only 1: intros; only 1: intuition; only 1: intro; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.OpMult_sound	40	40.087447	13958	1368
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Signed.to_int_inj	40	40.110907	42243	2465
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_2	40	40.165691	65112	3537
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_too_complex	40	5.538208	2876	471	0.6.7.4	synth with cache (only 1: intros s s' H; only 1: intros a b; only 1: rewrite singleton_spec; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_r_simpl_r	40	9.847242	3607	331	1.5.11.15	synth with cache (only 1: intro; only 1: intuition eauto  4 with real; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40	40.087450	30494	4252
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.MapsTo_1	40	1.577946	845	135	1.15.4	synth with cache (only 1: intros; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_r_simpl_l	40	1.653028	239	56	0.0.0.2.4.0.0	synth with cache (only 1: intros; only 1: transitivity (1 * r2); only 1: apply Rmult_eq_reg_l with r1; only 1: field; only 1: auto with real; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_1	40	0.044360	9	3	6	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_2	40	0.029289	2	2	0.0	synth with cache (only 1: unfold MapsTo; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_1	40	2.139839	1577	138	0.30	synth with cache (only 1: intro n; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	0.072867	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_shift	40	40.057980	10833	1420
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_baydemir	40	0.053296	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_lu_eqn	40	40.058908	5034	263
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.to_of	40	40.060495	15006	4829
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_lt_r	40	40.032085	5030	1698
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_pos	40	40.076400	19162	1633
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.SIN_bound	40	40.063903	17848	3061
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P38	40	40.041213	13149	2429
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.to_uint_inj	40	40.148421	57394	3336
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_equal	40	40.041430	6790	3411
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nxor_eq_false	40	40.103745	38454	3466
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_2	40	40.023784	3359	1878
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P21	40	40.048388	12741	2390
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_1	40	0.021829	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalDescription.excluded_middle_informative	40	40.072971	20848	4755
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_2	40	0.025016	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_3	40	0.090438	4	3	1.0.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset	40	0.012695	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset_equal	40	0.026436	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_inter_singleton	40	0.024758	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_empty	40	0.011695	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_all	40	0.017615	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.normalise_correct	40	40.367709	20748	2787
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_mapsto_iff	40	40.049526	14440	2137
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_morph_Proper	40	40.232836	6054	1205
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.rel_prime_Zpower	40	40.063561	20084	2901
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_nonneg	40	40.086301	25240	1815
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo_gt	40	40.050572	12698	3795
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40	40.029706	7538	3219
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zmult_one	40	40.031196	8919	1234
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_set_ops_1	40	40.094562	33900	2606
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.arcsinh_sinh	40	40.059224	8749	1475
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.ps_atan_exists_1	40	40.021574	6113	1939
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40	40.179904	75264	2512
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Ropp_Rmax	40	40.055686	16950	3454
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.oppc_spec	40	40.088557	11109	876
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40	0.051510	2	1	1	synth with cache (only 1: apply sub_spec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.subset_1	40	40.106647	40027	2551
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_r_simpl_m	40	21.272450	4195	1830	0.0.0.4.6.0.0	synth with cache (only 1: intros; only 1: transitivity (r2 * 1); only 1: apply Rmult_eq_reg_l with r1; only 1: field; only 1: auto with real; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_neg	40	40.060768	17619	2526
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qminmax.Q.plus_max_distr_r	40	40.031451	6860	1368
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_trans	40	40.117935	38069	4165
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_cauchy_reverse	40	40.609200	43474	3397
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealGe_morph_Proper	40	15.592650	1454	446	0.0.2.1.1.0.1.1.0.0	synth with cache (only 1: intros x y H x0 y0 H0; only 1: split; only 1: intros H1 H2; only 1: rewrite <- H0 in H2; only 1: rewrite <- H in H2; only 1: contradiction; only 1: intros H1 H2; only 1: rewrite H0 in H2; only 1: rewrite H in H2; only 1: contradiction).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.fold_1	40	40.143917	52947	2888
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Ropp_Rmin	40	8.952880	1368	453	1.1.0.1.0.1.0.3.0.0.0	synth with cache (only 1: intros x y; only 1: apply Rmax_case_strong; only 1: intro H1; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto with real; only 1: intros H; only 1: apply Rmin_case_strong; only 1: intro H1; only 1: auto with real; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_decomp	40	40.074986	8884	1630
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qmult'_correct	40	40.103533	9933	1948
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qminus'_correct	40	0.009409	3	2	1.0	synth with cache (only 1: intros; only 1: apply Qred_correct).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_l	40	40.090751	26598	2513
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_N_ok	40	40.018030	4926	840
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.app_int_nil_r	40	40.118211	49553	963
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_gt_tree	40	40.040795	7712	1117
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_quot_exact_full	40	40.051274	18580	2181
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_proper_l	40	2.854094	1964	423	0.13.0	synth with cache (only 1: intros; only 1: rewrite <- H; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.singleton_spec	40	40.065618	13672	7501
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CRealPosShift_correct	40	40.097581	19252	1478
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_neq_0	40	40.018217	5531	490
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_le_compat	40	40.171542	22598	2627
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Nplength_first_one	40	40.103956	39721	4702
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_proper_r	40	2.948635	1673	325	0.15.0	synth with cache (only 1: intros; only 1: rewrite <- H; only 1: apply H0).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40	40.103511	38899	1907
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcplus_comm	40	40.106460	14972	1374
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_succ_double	40	0.019040	1	1	0	synth with cache (only 1: apply of_lu_double_gen).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_1	40	40.148506	58916	3172
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.inter_iff	40	40.152704	49270	3226
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.elements_spec1	40	4.351077	5153	785	6.1.3.17.1.1	synth with cache (only 1: split; only 1: intros H'; only 1: red; only 1: intuition; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.OpAdd_sound	40	40.031654	5455	1463
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_2	40	0.047309	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Signed.to_int_pos_surj	40	40.174505	75626	555
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalString.uint_of_char_spec	40	40.035300	8694	491
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40	40.069087	21975	3904
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.empty_1	40	40.088496	33422	2186
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_proper_l	40	6.817148	5729	948	1.21.0	synth with cache (only 1: intros; only 1: rewrite <- H; only 1: apply H0).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_r_r	40	9.126506	1285	91	27.0.0	synth with cache (only 1: intros; only 1: rewrite rdiv_def; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_shift'	40	40.046799	13336	1405
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_lu_succ	40	40.086799	26649	6167
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.to_uint_nonzero	40	40.078837	24992	3097
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_succ	40	40.086908	21515	1973
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.COS_bound	40	40.044816	12718	2827
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.posPartAbsMax	40	40.033136	5251	982
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P39	40	40.055115	18647	2166
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.to_uint_surj	40	40.062961	18713	2491
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_remove	40	40.031702	9060	1292
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nodd_not_double	40	40.120163	45785	3981
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalDescription.classical_definite_description	40	40.280322	118857	5378
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.set_rec	40	40.024527	5129	581
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_proper_r	40	7.817860	5635	1171	0.22.0	synth with cache (only 1: intros; only 1: rewrite <- H; only 1: apply H0).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P22	40	40.028709	6870	2753
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_in_iff	40	40.070840	22010	3088
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.xnegate_correct	40	40.389841	7466	1196
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_mapsto_iff	40	0.426247	90	38	0.2.0.0.0.2.0	synth with cache (only 1: split; only 1: intros; only 1: apply add_3 with x e; only 1: auto; only 1: auto; only 1: apply add_2; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.NArith.NArith.TestOrder.test	40	0.019844	1	1	0	synth with cache (only 1: N.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.prime_power_prime	40	40.075647	24970	3251
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_bounded	40	40.054606	18563	2280
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zgcd_bound	40	40.098040	33021	3360
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_const	40	40.070140	25375	3759
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_bounds	40	40.062108	18375	2363
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.uint_dec	40	40.133051	56234	1964
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.eq_chain_test	40	40.047353	14040	1464
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.sinh_arcsinh	40	40.033979	9202	2445
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.in_int	40	40.024700	6553	2075
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.of_list_1	40	40.093767	29421	4522
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	0.920701	525	73	1.4.12	synth with cache (only 1: intros a b H; only 1: unfold Subset; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_1	40	0.313216	34	9	0.3	synth with cache (only 1: intros def_n0; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.oppcarry_spec	40	40.079060	9974	317
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_2	40	0.978442	237	50	7.2	synth with cache (only 1: intros s s' H s'' s''' H0 a; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.subset_2	40	40.105606	33286	4609
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_mult_simpl	40	40.032724	7317	2085
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_mult_distr	40	40.053979	15018	2133
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qminmax.Q.plus_min_distr_l	40	40.036042	7003	1285
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_baydemir	40	0.849582	250	65	4.7	synth with cache (only 1: intros a b q Ha Hb H; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_gt_compat_l	40	0.874137	181	63	3.0.0.3	synth with cache (only 1: intros x y z; only 1: intro; only 1: apply Rplus_lt_compat_l; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.lt_trans	40	40.112749	36356	3238
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qminmax.Q.plus_min_distr_r	40	1.462313	214	69	0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: rewrite (Qplus_comm n p), (Qplus_comm m p), (Qplus_comm _ p); only 1: apply min_monotone; only 1: intros x x' Hx; only 1: rewrite Hx; only 1: auto with qarith; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.elements_1	40	40.056439	14142	1123
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_assoc	40	40.053376	17205	2407
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qplus'_comp_Proper	40	40.145729	16279	3516
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_r	40	40.060213	16971	1456
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40	40.025463	7851	459
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.revapp_revapp_1	40	40.090560	31685	3590
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_find	40	40.056596	5870	1105
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_le	40	40.072881	26392	2751
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_pos_cauchy	40	40.061250	19058	2683
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRle_minus	40	40.694138	23508	1600
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_min_idemp	40	40.111359	46893	2617
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcopp_involutive	40	40.102335	33415	3736
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_to	40	40.089356	28512	3010
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcplus_opp_r	40	0.163205	7	5	0.0.2.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl in *; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.for_all_spec	40	40.083335	29908	3096
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.diff_iff	40	40.192811	60871	4929
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_3	40	40.114974	42521	3363
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.pexpr_times_nformula_correct	40	40.121716	22818	1039
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_assoc	40	2.253063	700	156	5.1.0.3.0.1	synth with cache (only 1: intros; only 1: qc; only 1: unfold Qeq, Qmult, Qplus; only 1: simpl in *; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Signed.of_int_norm	40	40.127390	47901	3857
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_0_l	40	0.844159	478	61	6.1.7	synth with cache (only 1: induction n; only 1: qc; only 1: now Z.nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_in_iff	40	27.911682	15491	2425	0.0.0.4.2.0.0.0.9.7.0	synth with cache (only 1: split; only 1: intros (e0, H0); only 1: exists e0; only 1: apply add_3 with x e; only 1: auto; only 1: auto; only 1: intros (e0, H0); only 1: exists e0; only 1: apply add_2; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_0_r	40	0.755815	213	45	1.0.6.0.0	synth with cache (only 1: intros; only 1: qc; only 1: unfold Qeq; only 1: simpl; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40	40.054979	18668	1703
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_le_reg_l	40	6.580872	3672	601	12.1.0.3.1.0	synth with cache (only 1: intros; only 1: intro abs; only 1: apply H; only 1: destruct (CRisRing R); only 1: apply CRplus_lt_compat_l; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_1	40	40.070422	22426	3670
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv1	40	40.019232	5226	325
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40	40.081800	27236	3752
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.CRmorph_sum	40	40.056301	15015	3933
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.CRmorph_INR	40	0.011833	2	2	0.0	synth with cache (only 1: intros; only 1: apply CRmorph_rat).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.to_uint_nonnil	40	40.091294	24024	2633
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalString.NilEmpty.usu	40	40.187722	82047	481
coq-tactician-stdlib.8.12.dev	Coq.Logic.Epsilon.constructive_indefinite_description	40	40.249138	108709	5439
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.clt_pos_morph	40	40.068944	8186	983
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_sin_0	40	40.061671	21095	2688
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.of_uint_norm	40	40.059929	16004	3937
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P40	40	40.035167	10147	2286
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_add	40	40.033916	9425	1352
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.negPartAbsMin	40	40.034630	3245	675
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nnot_div2_not_double	40	40.198463	84299	3556
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalDescription.dependent_unique_choice	40	40.164600	67266	2601
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.exclusive_set	40	40.019596	4169	1637
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.ConstCauchy	40	40.052896	17020	1955
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P23	40	40.025232	5904	2455
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.negate_correct	40	40.563037	21749	2335
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zdivide_power_2	40	40.050166	14851	2636
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_lowerbound	40	40.049711	15075	2929
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd	40	40.055061	14786	3669
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_scal	40	40.046430	16001	2929
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zmod_divide	40	40.038558	12255	1616
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.rev_revapp	40	40.150723	67769	624
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.derivable_pt_lim_arcsinh	40	40.033489	8264	2550
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.ps_atan0_0	40	40.034400	10403	2128
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.of_list_2	40	40.089209	28053	4939
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_mod	40	1.624952	519	132	0.0.3.0.4.0.0	synth with cache (only 1: intros a b; only 1: intros (c, Hc); only 1: zero_or_not b; only 1: rewrite Hc; only 1: subst; only 1: apply Z.mod_mul; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40	40.046499	11639	2641
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.equal_subset	40	40.155848	58681	2727
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.GP_finite	40	40.046976	12945	2104
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_lt_compat_r	40	40.039665	5213	1090
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.lt_not_eq	40	40.055372	15495	2252
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_gt_compat_r	40	2.356423	894	318	2.8.2	synth with cache (only 1: intros; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_compat_l	40	0.065952	20	8	1.0.3	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.elements_2	40	40.088206	30081	3730
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rminmax	40	40.057797	16753	4744
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalChoice.singleton_choice	40	40.041990	15014	1859
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qmult'_comp_Proper	40	40.050661	15202	2374
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_eqA	40	40.050201	15339	1816
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_in	40	40.069397	21711	2896
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_le_upper_bound	40	40.088516	32653	3984
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nb_digits_pos	40	40.109027	41896	2289
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_neg_lt_pos	40	40.070658	12717	519
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_min_comm	40	40.127415	49341	4690
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.succ_double_alt	40	40.106422	43388	558
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.exists_spec	40	40.096554	32662	3975
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.filter_iff	40	40.059976	21275	2214
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.nformula_times_nformula_correct	40	40.065503	22376	1758
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_1	40	40.214336	91643	2304
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.for_all_iff	40	0.209678	38	10	4.4	synth with cache (only 1: intro a'; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.exists_iff	40	1.257525	439	58	4.12	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Signed.of_inj_pos	40	40.063872	17566	3164
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.elements_iff	40	0.393041	297	55	10.4.0	synth with cache (only 1: split; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_mapsto_iff	40	40.075624	24514	2973
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_1_l	40	40.061624	19737	1408
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.double_succ	40	4.448756	1420	563	3.0.0.3.0.0.0.0.0.0.1.0.0.0.1.0.4	synth with cache (only 1: induction d; only 1: trivial; only 1: simpl Little.double; only 1: now induction d; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: simpl Little.double; only 1: now rewrite ?IHd; only 1: now rewrite ?IHd; only 1: now induction d; only 1: reflexivity || ring; only 1: now induction d; only 1: now rewrite ?IHd; only 1: simpl Little.double; only 1: simpl; only 1: trivial; only 1: simpl Little.double; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_spec_right	40	40.221904	101819	694
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40	40.010887	1215	417
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_le_reg_r	40	40.808982	24080	2362
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.prop_ext	40	40.098908	31419	3372
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_2	40	40.089308	31446	3210
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2	40	40.019517	2883	333
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_lu_revapp	40	40.068182	6217	1109
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.CRmorph_series_cv	40	40.049954	11022	1283
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.norm_subst_ok	40	0.463183	9	7	1.0.0	synth with cache (only 1: intros; only 1: unfold norm_subst; only 1: apply norm_aux_spec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.to_uint_inj	40	40.104473	36415	3463
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalString.NilEmpty.sus	40	40.100758	34589	5377
coq-tactician-stdlib.8.12.dev	Coq.Logic.Epsilon.small_drinkers'_paradox	40	40.259267	111823	5462
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.clt_morph	40	40.082368	17311	2151
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_sin_0_var	40	40.088943	14785	2093
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.of_inj	40	40.051501	14833	2566
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Neven_not_double_plus_one	40	38.725488	42295	3638	0.0.19.17.0.1.4	synth with cache (only 1: intros Ha; only 1: intros n; only 1: eqb2eq; only 1: intros H; only 1: contradict Ha; only 1: subst; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_cardinal	40	40.038492	7113	3622
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.uint_of_char_spec	40	40.036126	9677	617
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_1	40	0.021249	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P41	40	40.066549	15700	2634
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalDescription.unique_choice	40	40.117910	44496	3066
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_empty	40	40.044465	11451	2909
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q	40	40.138370	48076	4784
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P24	40	40.037269	10172	2940
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_sym	40	40.035401	4000	1511
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zdivide_ceiling	40	40.043573	12202	1975
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_lowerbound	40	40.038357	11368	1546
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_zero	40	0.026184	6	3	3.0.0	synth with cache (only 1: intros; only 1: compute; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_sym	40	2.689851	361	169	2.1.5.0	synth with cache (only 1: intros; only 1: unfold CReal_max; only 1: rewrite CReal_abs_minus_sym; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd_gt	40	40.043819	9507	3574
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40	40.032969	10039	2813
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.rev_rev	40	40.150923	69373	538
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_2	40	21.873551	35264	1667	0.1.14.0.4.58.2	synth with cache (only 1: intros; only 1: generalize dependent x; only 1: intros a Ha; only 1: rewrite remove_spec; only 1: split; only 1: auto; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.ps_atan_exists_1_opp	40	40.038065	12374	1911
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_ge_compat_l	40	34.046253	7523	1274	5.7.5.0.9	synth with cache (only 1: red; only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.arcsinh_lt	40	40.033530	8752	2787
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.of_list_3	40	40.060009	19977	2457
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_dec	40	40.088939	30508	2294
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40	40.059925	18818	1370
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_compat_r	40	1.552753	329	155	0.0.0.0.2.0.0.0.0.0	synth with cache (only 1: unfold Rle; only 1: intros; only 1: elim H; only 1: intro; only 1: left; only 1: auto with zarith real; only 1: intro; only 1: right; only 1: rewrite <- H0; only 1: auto with zarith real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_ge_compat_r	40	0.090270	52	15	7.1	synth with cache (only 1: do 3 intro; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.equal_spec	40	40.062086	17436	3824
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.sum_f_R0_triangle	40	40.066570	20630	3335
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40	40.153139	59182	3162
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Z_lt_neq	40	5.187777	2023	509	18.0	synth with cache (only 1: intro H; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.R_dist_pos	40	4.490334	1951	474	3.0.1.0.12	synth with cache (only 1: intros a b; only 1: apply Rle_ge; only 1: elim (Rplus_ne b); only 1: intros v w; only 1: apply Rabs_pos).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3	40	40.145631	58344	2283
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_assoc	40	40.071864	24061	3291
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qminus'_comp_Proper	40	40.173291	12004	1741
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalChoice.choice	40	40.195607	76776	4696
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA	40	40.042075	11787	1147
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_mapsto	40	40.061380	18046	2913
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_lt_upper_bound	40	40.057831	19717	2938
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalEpsilon.constructive_definite_description	40	40.282175	123402	4327
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nb_digits_revapp	40	40.069691	27681	672
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	40	40.773977	17139	1419
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_min_assoc	40	40.127254	49033	4582
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_min_O_l	40	0.616633	511	108	0.0.4.1.7	synth with cache (only 1: intros n; only 1: case n; only 1: trivial; only 1: unfold ni_min; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_min_O_r	40	0.036043	12	7	1.0.2.0.0	synth with cache (only 1: simple induction d; only 1: trivial; only 1: simple induction n; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_min_inf_l	40	0.011153	2	2	0.0	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_min_inf_r	40	0.366089	335	58	8.6	synth with cache (only 1: intros n; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.nformula_plus_nformula_correct	40	40.061662	13144	2443
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_Sets.lt_strorder	40	40.126995	52241	1818
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.mem_b	40	40.138514	52539	3514
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_in_iff	40	40.060189	17203	3269
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_mapsto_iff	40	0.093732	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: apply remove_3 with x; only 1: auto; only 1: intros; only 1: apply remove_2; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_1_r	40	40.051801	15913	1530
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_lu_succ	40	40.059515	16478	3301
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	0.059429	7	6	0.0.0.0.0.1	synth with cache (only 1: simpl; only 1: revert n; only 1: induction n; only 1: simpl; only 1: trivial; only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.nat_iter_0	40	0.021326	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec	40	40.093839	33504	3469
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_comm	40	1.314689	753	142	1.0.0.3.6.2	synth with cache (only 1: intros n m; only 1: qc; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_lt_le_compat	40	40.221516	14265	1462
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.proof_irrel	40	40.184726	76781	3437
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_1	40	40.064858	18192	4870
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2b	40	40.010055	2618	287
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.ring_correct	40	40.041157	2899	388
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_in_iff	40	3.261435	1698	394	0.0.0.1.1.0.4.0.0.1	synth with cache (only 1: split; only 1: intros (e', H0); only 1: exists e'; only 1: apply remove_3 with x; only 1: auto; only 1: intros (e', H0); only 1: exists e'; only 1: apply remove_2; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.to_uint_pos_surj	40	40.081145	26324	3670
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40	40.060747	11202	2190
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalString.NilEmpty.isi	40	40.135730	57423	958
coq-tactician-stdlib.8.12.dev	Coq.Logic.Epsilon.iota_statement	40	40.176929	71507	5296
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.Zcleb_morph	40	40.058942	11430	1532
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_lb_gt_0	40	40.032354	9153	2272
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.of_iff	40	40.037046	8434	3948
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	40	40.104573	39175	3464
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_2	40	40.071056	10443	2491
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P42	40	40.061352	22609	2488
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_equal	40	40.032045	7323	2803
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilEmpty.usu	40	40.127517	54035	576
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_0_1	40	40.133429	58052	651
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P25	40	40.025694	6309	2388
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.narrow_interval_lower_bound	40	40.083541	28476	2120
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_size	40	40.070093	24509	2747
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.guarded_rel_choice	40	11.927763	3123	842	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros A B P R H; only 1: destruct (rel_choice _ _ (fun (x : {x : _ & P x}) (y : B) => R (projT1 x) y)) as (R', (HR'R, H0)); only 1: intros (x, HPx); only 1: destruct (H x HPx) as (y, HRxy); only 1: exists y; only 1: exact HRxy; only 1: set (R'' := fun (x : A) (y : B) => exists H : P x, R' (existT P x H) y); only 1: exists R''; only 1: split; only 1: intros x y (HPx, HR'xy); only 1: change x with (projT1 (existT P x HPx)); only 1: apply HR'R; only 1: exact HR'xy; only 1: intros x HPx; only 1: destruct (H0 (existT P x HPx)) as (y, (HR'xy, Huniq)); only 1: exists y; only 1: split; only 1: exists HPx; only 1: exact HR'xy; only 1: intros y' (H'Px, HR'xy'); only 1: apply Huniq; only 1: rewrite proof_irrel with (a1 := HPx) (a2 := H'Px); only 1: exact HR'xy').
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_O	40	23.387592	9204	1492	1.1.0.0.10.1.5.0.1.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: split; only 1: simpl; only 1: intros a'; only 1: destruct (eqA_dec a a'); only 1: simpl; only 1: destruct 1; only 1: auto with *; only 1: intros H; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_S	40	0.096032	5	5	0.0.0.0.0	synth with cache (only 1: intros l a; only 1: rewrite multiplicity_InA; only 1: destruct (multiplicity (list_contents l) a); only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_mult	40	40.053972	9472	1414
coq-tactician-stdlib.8.12.dev	Coq.Logic.IndefiniteDescription.constructive_definite_description	40	40.298095	125523	4439
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div21	40	40.068653	21995	2584
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_mul_div	40	0.254469	53	22	3.2	synth with cache (only 1: unfold add, to_Z; only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nbit0_neq	40	11.797225	7062	841	11.11.3.0	synth with cache (only 1: intros; only 1: eqb2eq; only 1: intuition; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Ndiv2_eq	40	0.079897	22	7	2.0.4	synth with cache (only 1: intuition; only 1: eqb2eq; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Ndiv2_neq	40	0.031937	3	3	0.0.0	synth with cache (only 1: intros; only 1: eqb2eq; only 1: now intros <-).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	40	40.039113	10735	3422
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.revapp_rev_nil	40	40.166404	77510	428
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_3	40	40.239247	94416	1748
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.arcsinh_le	40	40.036202	6826	2224
coq-tactician-stdlib.8.12.dev	Coq.QArith.QOrderedType.Q_as_OT.lt_strorder	40	40.071449	25917	724
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.ps_atan_opp	40	40.022687	5598	1980
coq-tactician-stdlib.8.12.dev	Coq.QArith.QOrderedType.Q_as_OT.lt_compat	40	0.035625	3	3	0.0.0	synth with cache (only 1: intros p q H r s H'; only 1: rewrite 2!Qlt_alt, H, H'; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_spec_right	40	40.144235	61008	977
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_gcd	40	40.058493	4693	547
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_lt_compat	40	40.060582	8338	1531
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.equal_1	40	40.096060	34338	2913
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40	40.112202	36528	3397
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	40	40.057814	18703	2237
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.R_dist_sym	40	40.080289	24950	4716
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.isZ0_0	40	6.802014	2798	545	0.0.0.0.0.0.17.2	synth with cache (only 1: intros; only 1: destruct x; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3w	40	40.187019	74254	2137
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40	40.111317	39906	3271
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qred_opp	40	40.068993	13971	1718
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Ptestbit_Pbit	40	40.077146	23305	3528
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_bst	40	40.094872	32427	3413
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_le_lower_bound	40	40.084347	29954	4174
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalEpsilon.excluded_middle_informative	40	40.070930	22973	5164
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nb_digits_rev	40	40.093178	36920	2346
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_linear_shift	40	40.083111	23332	3575
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_le_refl	40	40.160904	69288	2494
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.eval_Psatz_Sound	40	40.142757	26541	1739
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_Sets.lt_compat	40	40.046016	11853	1396
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.empty_b	40	40.145396	55617	597
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_le_antisym	40	3.850893	2929	458	7.1.4.2.0.7.0	synth with cache (only 1: intros x y; only 1: destruct x; only 1: intuition auto; BinInt.Z.Private_OrderTac.Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *; only 1: intro eq_rect_eq; only 1: inversion 1; only 1: rewrite ni_min_comm; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40	40.076448	16968	2575
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_bis	40	40.065317	18185	1818
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	40.057716	15310	2131
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_le_lt_compat	40	40.061834	19282	2175
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_2	40	40.091177	30198	3606
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv5	40	40.010793	3160	305
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.of_uint_norm	40	40.054732	13592	4170
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_mapsto_iff	40	40.128942	45667	4361
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalString.NilEmpty.sis	40	40.086434	27914	4687
coq-tactician-stdlib.8.12.dev	Coq.Logic.Epsilon.constructive_definite_description	40	40.279096	123961	4398
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40	40.031701	6113	707
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.Zcneqb_morph	40	40.050546	14383	3607
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.SIN	40	40.042732	13196	2661
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Signed.of_to	40	40.087197	34388	2132
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_3	40	40.083756	25838	4094
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_sym	40	0.016328	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_equal	40	0.031234	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_plus_distr_l	40	5.310382	1210	288	0.3.0.2.0.4.1	synth with cache (only 1: destruct x; only 1: intros n' (HPn', Hn'); only 1: qc; only 1: unfold Qeq; only 1: simpl in *; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_1	40	0.022370	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_2	40	0.021681	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_assoc	40	0.012341	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_union_singleton	40	0.080526	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_add	40	0.023297	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P43	40	40.030826	8498	2448
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_1	40	0.021479	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.omega.PreOmega.Z.mod_0_r_ext	40	40.088271	29325	2949
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_2	40	0.011070	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_3	40	0.140719	2	2	0.0	synth with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_sym	40	0.012032	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_equal	40	0.024531	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_1	40	0.020011	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_2	40	0.022152	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_assoc	40	0.010508	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_1	40	0.045864	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_2	40	0.011042	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_1	40	0.037627	6	3	3.0.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_add	40	40.034978	7531	3131
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilEmpty.sus	40	40.149493	57428	1907
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_injectQPos	40	40.057200	19261	1396
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P26	40	40.025156	6006	2017
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_le	40	40.054027	13986	5311
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.AC_bool_subset_to_bool	40	40.207369	93320	425
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_NoDupA	40	40.052762	11532	2463
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_plus	40	40.041232	5823	3035
coq-tactician-stdlib.8.12.dev	Coq.Logic.IndefiniteDescription.functional_choice	40	40.209709	80851	4625
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pos_mod	40	40.070354	21046	3634
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Ndiv2_bit_eq	40	40.083663	31519	2442
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	40	40.050330	16661	3129
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.app_nil_r	40	40.145854	65782	1054
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_1	40	40.179511	66008	2233
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_2	40	0.038813	2	2	0.0	synth with cache (only 1: rewrite singleton_spec; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.arcsinh_0	40	40.064653	13409	2190
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40	40.026977	8317	2038
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec	40	40.107438	40421	2864
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_compat	40	40.041772	11644	2951
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_gt_compat	40	0.021586	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rlt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.gcd_spec	40	40.131604	49679	1206
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_mod_POS	40	40.065744	21121	3083
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.equal_2	40	40.098413	33271	4411
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_trans	40	40.133381	48897	3277
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40	40.065383	13024	2556
coq-tactician-stdlib.8.12.dev	Coq.Strings.OctalString.Raw.to_N_of_pos	40	0.021812	3	1	2	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Strings.BinaryString.Raw.to_N_of_pos	40	0.021220	6	1	5	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.R_dist_refl	40	40.055775	15488	4579
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.R_dist_eq	40	0.055588	11	6	0.0.1.0.0	synth with cache (only 1: intros H; only 1: unfold R_dist; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: apply Rabs_R0).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.isZ0_n0	40	40.059759	15701	3043
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.cardinal_1	40	40.088954	26070	2876
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40	40.094974	34834	3188
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qred_compare	40	40.179596	14161	1410
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Ntestbit_Nbit	40	40.099398	34696	4117
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qred_le	40	0.436884	113	40	3.3.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- (Qred_correct q), <- (Qred_correct q'); only 1: auto with *; only 1: now rewrite !Qred_correct).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qred_lt	40	0.788367	277	79	2.2.5.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- (Qred_correct q), <- (Qred_correct q'); only 1: trivial; only 1: intros; only 1: now rewrite !Qred_correct).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_in	40	40.027012	6297	1276
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_sgn	40	40.040871	10619	3263
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalEpsilon.classical_indefinite_description	40	40.258605	110309	4713
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nb_digits_nzhead	40	40.195233	87270	630
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_linear_shift_eq	40	40.295395	16958	3059
coq-tactician-stdlib.8.12.dev	Coq.Strings.HexString.Raw.to_N_of_pos	40	0.012408	6	1	5	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.inject_Z_injective	40	40.089998	31046	3836
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_Sets.compare_spec	40	40.140784	57760	3203
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.ge_bool_cases	40	40.135082	51898	1818
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Zpower_nat_0_r	40	0.007259	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_le_trans	40	40.112910	39286	3974
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_b	40	40.149946	30488	1434
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Zpower_nat_succ_r	40	0.546307	18	4	4	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_0	40	40.059655	14467	4035
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_nodep	40	40.090241	32724	4365
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_neq_b	40	1.364755	153	91	0.0.0.0.0.0.0.0.2	synth with cache (only 1: intuition; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_eq_reg_l	40	40.109942	21199	2729
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_3	40	40.072276	24728	3027
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv3b	40	40.003561	427	281
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.of_inj	40	40.071963	20743	3138
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_in_iff	40	40.136631	50795	3975
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalString.NilZero.uint_of_string_nonnil	40	40.228866	99021	2736
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_to	40	40.091349	29311	3116
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.COS	40	40.040586	11134	2588
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Signed.to_of	40	40.100023	35924	2704
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_integral	40	40.053889	17037	1718
coq-tactician-stdlib.8.12.dev	Coq.omega.PreOmega.Z.div_0_r_ext	40	40.064857	22576	2971
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P44	40	40.055410	14982	2731
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_2	40	40.018841	2537	1059
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_1	40	0.011182	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_2	40	0.011126	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.add_fold	40	40.038118	8548	3156
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_3	40	0.066063	4	3	1.0.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset	40	0.016917	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset_equal	40	0.025392	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_inter_singleton	40	0.022430	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilEmpty.isi	40	40.117748	45793	1965
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_empty	40	0.011126	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_all	40	0.017025	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLtQ	40	40.061372	17951	3404
coq-tactician-stdlib.8.12.dev	Coq.omega.PreOmega.Z.rem_0_r_ext	40	3.281989	3274	247	2.0.3.2.1.24.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: subst; only 1: destruct x; only 1: now Z.nzsimpl; only 1: trivial; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.omega.PreOmega.Z.quot_0_r_ext	40	0.077337	8	6	0.0.1.1.0.0	synth with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: now Z.nzsimpl; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P27	40	40.114171	10444	2058
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_1	40	3.998096	728	271	1.2.0.0.0.0.2.1	synth with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto with set; only 1: auto with set relations).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_firstr	40	40.053801	16404	2732
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.pred_ext_and_rel_choice_imp_EM	40	40.051286	11342	1449
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_InA_InA	40	40.078087	25919	3033
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_plus	40	40.026953	3716	1741
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_is_even	40	40.062060	16729	4150
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Ndiv2_bit_neq	40	40.070511	23524	2858
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.app_int_nil_r	40	40.094618	38107	1869
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_id	40	40.086644	30078	4005
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_1	40	40.084345	23557	2844
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_bis	40	40.077949	24401	2291
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.pow_lt_1_compat	40	40.027475	7732	1684
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_ge_compat	40	40.075063	26617	2997
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.head00_spec	40	40.071756	23530	1866
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.tail00_spec	40	0.012890	1	1	0	synth with cache (only 1: now intros h; rewrite (to_Z_inj _ 0 h)).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_mod	40	40.048740	14884	2881
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.eq_dec	40	40.087110	29254	4328
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_trans	40	40.134904	45989	3771
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_le	40	40.065206	19216	2864
coq-tactician-stdlib.8.12.dev	Coq.Strings.BinaryString.to_N_of_N	40	40.041406	13470	1954
coq-tactician-stdlib.8.12.dev	Coq.Strings.OctalString.to_N_of_N	40	40.080140	21578	2598
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_nodep	40	5.609481	5623	430	2.1.1.3.32	synth with cache (only 1: intros a n Hn; only 1: intros; only 1: apply fold_rec; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.R_dist_tri	40	40.074645	23053	3975
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zdiv_pol_correct	40	40.046153	14621	1564
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.Equivb_Equivb	40	40.084222	16543	2152
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40	40.079254	31066	2705
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Pbit_Ptestbit	40	40.094946	32333	3250
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_rem_plus	40	40.060992	21417	2270
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_bst	40	40.049986	12304	2746
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40	40.114173	39658	4145
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nb_digits_iter_D0	40	40.042001	10747	4176
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_l_pos	40	40.052718	16493	1522
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1._PI2_RLT_0	40	30.055595	8421	2223	1.2.12.1.0	synth with cache (only 1: unfold PI; only 1: rewrite <- (Rmult_0_r (/ 2)); only 1: destruct pi2_int; only 1: rewrite <- (Rmult_0_r (/ 2)); only 1: lra).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_alt	40	40.088779	29081	2971
coq-tactician-stdlib.8.12.dev	Coq.Strings.HexString.to_N_of_N	40	40.079554	30373	1315
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_alt	40	0.048434	9	5	2.1.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.extract_hyps_app	40	40.091152	30826	1838
coq-tactician-stdlib.8.12.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.linear_search_smallest	40	24.051201	17569	1314	57	synth with cache (only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_le_min_1	40	40.116192	47351	3228
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_le_min_2	40	0.059154	21	10	0.2.1.0.0	synth with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Zpower_nat_is_exp	40	40.047671	13490	1417
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Zpower_pos_nat	40	0.274323	114	19	6.7	synth with cache (only 1: unfold Pos.to_nat; only 1: apply Pos2Nat.inj_iter).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40	40.064164	15714	2303
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_weak	40	40.067412	17212	2449
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_b	40	40.025156	4475	3015
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_1	40	40.037810	9825	1522
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_eq_reg_r	40	40.037895	7993	2719
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv6	40	40.010213	2959	258
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.of_iff	40	40.027949	5333	2489
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_mapsto_iff	40	40.124892	45355	4275
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalString.NilZero.sus	40	40.123307	46361	2513
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_lu_tenfold	40	40.051251	14437	1803
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Signed.to_int_inj	40	40.122100	47122	3111
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_integral_l	40	40.057551	16473	1968
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P45	40	40.026049	5562	3114
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilEmpty.sis	40	40.083822	25404	4491
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40	40.077248	7476	622
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLtQopp	40	40.052720	14331	4515
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.PI4_RLT_PI2	40	15.570439	10175	1084	0.3.0.8.2.1.3.0.8.2.0.3.1	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_compat_l; only 1: apply PI_RGT_0; only 1: rewrite <- Rmult_1_r; only 1: apply Rmult_lt_reg_l with 2; only 1: prove_sup0; only 1: rewrite <- Rmult_assoc; only 1: rewrite <- Rinv_r_sym; only 1: rewrite Rmult_1_l; only 1: generalize cos_pi2; only 1: intro x; only 1: lra; only 1: now apply not_0_IZR).
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.string_dec	40	40.086621	30456	2083
coq-tactician-stdlib.8.12.dev	Coq.omega.PreOmega.Z.rem_bound_pos_pos	40	40.053372	17592	2066
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice	40	40.075628	26161	3665
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_2	40	40.037784	8943	3351
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_length	40	0.030114	5	3	0.0.2	synth with cache (only 1: simpl; only 1: intro; only 1: repeat match goal with | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.l2i_i2l	40	0.019063	6	2	4.0	synth with cache (only 1: intro n; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_inv_r	40	6.659292	2373	443	6.1.3.6.0	synth with cache (only 1: unfold Q2Qc; only 1: intuition; only 1: qc; only 1: apply Qmult_inv_r; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a1'	40	40.156557	63666	5315
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_cons_InA	40	40.067026	20756	2708
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a2'	40	0.023494	2	2	0.0	synth with cache (only 1: exists a1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P28	40	40.022805	4902	2395
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_lt	40	40.095862	9219	993
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_inv_l	40	1.853274	484	119	0.0.4.0.3.0	synth with cache (only 1: intros; only 1: intuition idtac; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt	40	40.041066	7593	3001
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nneq_elim	40	40.067399	22621	3256
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.revapp_revapp_1	40	40.119898	52314	1575
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_comp	40	40.069334	24039	3578
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_xeq	40	0.080032	15	5	3.1.1	synth with cache (only 1: intros; only 1: subst; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_2	40	40.235799	106217	1472
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_3	40	0.038011	3	2	1.0	synth with cache (only 1: rewrite union_spec; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_seq_Rabs	40	40.030579	8620	2186
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_lt_le_compat	40	40.054484	16087	3070
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Remainder_equiv	40	40.083300	28393	2692
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqm_mod	40	40.671048	19179	1767
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lex_Opp	40	40.098044	30644	3739
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40	0.249484	92	31	2.1.1.1.0.0	synth with cache (only 1: intros n m; only 1: destruct n, m; only 1: auto; only 1: now rewrite <- ?Pos.compare_antisym; only 1: now rewrite <- ?Pos.compare_antisym; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	40.199982	77270	2678
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	40	40.044372	10122	1254
coq-tactician-stdlib.8.12.dev	Coq.Strings.BinaryString.Z_of_of_Z	40	40.112459	47448	1699
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_weak	40	40.073164	20875	2748
coq-tactician-stdlib.8.12.dev	Coq.Strings.OctalString.to_Z_of_Z	40	40.154454	63300	763
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.R_dist_plus	40	40.074462	22408	4343
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_seq_pos	40	6.166435	681	313	0.1.0.7	synth with cache (only 1: intros a b; only 1: intro; only 1: apply pow_lt; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zgcd_pol_ge	40	40.192499	23967	2504
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.equal_1	40	40.188100	19432	1850
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40	40.110610	45414	3422
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nbit_Ntestbit	40	40.083117	27114	4118
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nshiftr_nat_S	40	0.016573	2	2	0.0	synth with cache (only 1: intros len start; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nshiftl_nat_S	40	0.018384	4	2	2.0	synth with cache (only 1: intros a n; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_quot_plus	40	40.069907	23827	2546
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_1	40	40.030150	5076	1161
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nb_digits_nth	40	40.111270	45190	920
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalEpsilon.choice	40	40.198599	79698	4564
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_l	40	40.065416	21292	2689
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qgt_alt	40	40.101904	34875	3996
coq-tactician-stdlib.8.12.dev	Coq.Strings.HexString.to_Z_of_Z	40	40.115121	48647	800
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_alt	40	0.032781	19	5	6	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.nhyps_of_psatz_correct	40	40.058201	16713	2876
coq-tactician-stdlib.8.12.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.epsilon_smallest	40	40.076345	23690	3968
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_min_case	40	40.113124	42892	3140
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Zpower_nat_Z	40	40.040382	13677	1574
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakr	40	26.558968	2394	180	0.1.0.33	synth with cache (only 1: induction x; only 1: simpl in *; only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Zpower_nat_Zpower	40	0.352389	79	36	1.0.1.0.0.1	synth with cache (only 1: intro Hn; only 1: induction n; only 1: trivial; only 1: apply Pos2Nat.inj_iter; only 1: simpl; only 1: now destruct Hn).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rel	40	40.083961	29988	2549
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40	40.035672	8261	1913
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_neq_b	40	40.023594	4049	2570
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_2	40	40.061592	18443	3389
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_assoc	40	40.374600	26717	2443
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4	40	40.003785	594	236
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_comm	40	0.030017	3	2	1.0	synth with cache (only 1: intros; only 1: apply (Radd_comm (CRisRing R))).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.nztail_to_hex_uint	40	40.099491	36250	1525
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_in_iff	40	40.128108	42430	4119
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalString.NilZero.usu	40	40.098423	33736	3513
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalString.NilZero.usu_nil	40	0.009535	4	2	1.1	synth with cache (only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_lu_0	40	40.062199	17500	3109
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Signed.to_int_pos_surj	40	40.091943	28841	3434
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P46	40	40.040614	12353	2915
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.exclusive_set	40	40.041199	9762	2334
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilZero.uint_of_string_nonnil	40	40.076279	24520	3730
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyInst.eq_pos_inj	40	0.042449	4	4	0.0.0.0	synth with cache (only 1: intros n1 n2; only 1: split; only 1: congruence; only 1: now injection 1).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_compare	40	40.041742	11921	1370
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	40.045480	10416	3963
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.eqb_spec	40	40.155050	61727	2733
coq-tactician-stdlib.8.12.dev	Coq.omega.PreOmega.Z.rem_bound_neg_pos	40	40.048164	15054	1734
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyInst.of_nat_to_nat_eq	40	0.369948	116	42	0.0.1.0.3.1	synth with cache (only 1: intros n; only 1: destruct n; only 1: trivial; only 1: now rewrite <- Z_N_nat, <- nat_N_Z, N2Nat.id, Z2N.id; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_union	40	40.030237	5782	3172
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	0.025715	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_implies_acc	40	14.943935	2685	388	7.0.5.14.6	synth with cache (only 1: intros; only 1: split; only 1: split; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_nil	40	40.058597	15963	3187
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.projT1_injective	40	40.221568	92482	2936
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	1.473964	311	117	0.0.0.4.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcinv_mult_distr	40	40.057762	16809	2589
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt2	40	40.051759	13406	2585
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_1	40	1.131473	287	82	0.0.0.4.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.two_p_power2	40	0.060175	6	5	0.1.0.0.0	synth with cache (only 1: intros; only 1: destruct x; only 1: auto using Z.lt_gt with zarith; only 1: apply two_power_pos_equiv; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Ndouble_or_double_plus_un	40	40.080515	34025	459
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nb_digits_pos	40	40.058481	18448	1109
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_opp	40	40.051780	16814	3769
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P29	40	40.039190	12176	2260
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_assoc	40	40.083384	7744	1089
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_1	40	40.106033	36099	2382
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_2	40	0.036549	2	2	0.0	synth with cache (only 1: rewrite inter_spec; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_3	40	0.045733	2	2	0.0	synth with cache (only 1: rewrite inter_spec; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_lt_compat	40	40.093630	25487	8178
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_mod_full	40	40.042935	13345	1878
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqm_sub	40	40.053126	10469	6566
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakl	40	22.723484	2389	252	0.0.22.3	synth with cache (only 1: intros l l'; only 1: destruct l; only 1: compute; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.compare_inv	40	40.116100	35465	4960
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_not_eq	40	40.119240	38870	4832
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zmod_div_mod	40	40.117186	44214	2698
coq-tactician-stdlib.8.12.dev	Coq.Strings.BinaryString.to_nat_of_nat	40	40.076576	27752	2634
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rel	40	40.114455	44203	2685
coq-tactician-stdlib.8.12.dev	Coq.Strings.OctalString.to_nat_of_nat	40	40.088283	33082	3393
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.R_dist_mult_l	40	40.053657	16344	1877
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_sum_eq	40	40.029570	8607	1795
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_empty	40	17.376830	4123	1781	5.7.0.3	synth with cache (only 1: destruct (fold_0 s i f) as (l, (Hl, (Hl1, Hl2))); only 1: destruct (fold_0 s' i f) as (l', (Hl', (Hl'1, Hl'2))); only 1: apply fold_1b; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	40	40.094366	30336	3269
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.equal_2	40	40.068603	22379	2562
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40	40.049875	18711	1973
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nshiftr_nat_equiv	40	40.065002	19139	3054
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_quot_plus_l	40	40.050426	14440	1876
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_2	40	40.031243	7404	2345
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nth_revapp_r	40	40.060026	19408	1857
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_r	40	40.044073	9665	1437
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lex_Eq	40	12.856279	5815	1141	0.14.0.0.0.0.0.1.1	synth with cache (only 1: intros n m; only 1: split; only 1: destruct n; only 1: now split; only 1: discriminate; only 1: now split; only 1: intros (EQ, EQ'); only 1: subst; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qge_alt	40	40.054817	15914	2416
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.compare_bool_Eq	40	0.069373	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: now split; only 1: easy'; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.12.dev	Coq.Strings.HexString.to_nat_of_nat	40	40.069407	25051	2508
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.check_inconsistent_sound	40	40.070359	22391	3000
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_equal	40	9.786749	1875	1022	0.0.0.0.0.2.5	synth with cache (only 1: symmetry; only 1: symmetry; only 1: apply fold_equal; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_le_total	40	40.104639	35339	5006
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Zpower_pos_is_exp	40	40.097915	34478	1459
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction	40	40.100864	40890	2522
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_of_lu	40	40.109548	40331	1650
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.singleton_b	40	40.023481	3631	2520
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_3	40	40.123354	45885	2775
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_morph_Proper	40	40.052062	12532	4502
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4b	40	40.003355	443	252
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.double_unorm	40	40.049507	11732	3514
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_in_iff	40	40.092046	30536	3632
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalString.NilZero.usu_gen	40	40.118096	49036	1213
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40	40.057599	7885	1344
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Signed.of_int_norm	40	40.062628	16823	3771
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilZero.sus	40	40.065322	18576	4257
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_add	40	12.619107	3796	1301	0.1.9.0.0.0.0.2	synth with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_gt_ge_compat	40	29.662326	11866	2550	1.0.0.0.13.15.2	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: generalize (total_order_T r1 r2); only 1: intros; only 1: apply Rle_lt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_gt_0	40	40.042333	12287	2611
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_morph_Proper	40	40.079635	27415	3446
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.eqb_refl	40	40.160223	62272	3649
coq-tactician-stdlib.8.12.dev	Coq.omega.PreOmega.Z.rem_bound_pos_neg	40	40.099814	10383	1730
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_ge_gt_compat	40	0.903962	466	103	0.0.0.0.0.0.8.3	synth with cache (only 1: intros; only 1: destruct H; only 1: apply Rlt_le_trans with (r2 + r3); only 1: auto with real; only 1: auto with real; only 1: apply Rlt_le_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyInst.z_max_spec	40	40.064096	21139	2239
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyInst.z_min_spec	40	0.624941	94	18	7.1	synth with cache (only 1: intros n m; only 1: Z.solve_min).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyInst.pow_pos_strict	40	0.049340	5	2	3.0	synth with cache (only 1: intros a b Ha Hb; only 1: Z.order_pos).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_morph_T	40	2.083801	629	142	10.10	synth with cache (only 1: intros a b; only 1: now intros ->).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc	40	40.226985	13907	2849
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_length_1	40	40.061295	18849	3259
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.decide	40	40.081043	22817	1933
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcdiv_mult_l	40	40.057970	16976	1971
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40	40.052497	15305	2231
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head00	40	40.071042	19952	3421
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nleb_alt	40	40.054188	17967	1340
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nb_digits_revapp	40	40.086236	27002	4765
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P30	40	40.039168	11662	2308
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_opp_rev	40	40.121959	40596	3258
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_max_mult_neg	40	40.029139	5699	1616
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_1	40	40.082009	25860	2217
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_2	40	0.039785	2	2	0.0	synth with cache (only 1: rewrite diff_spec; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_3	40	0.049583	3	2	0.1	synth with cache (only 1: rewrite diff_spec; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_remainder	40	40.093780	35254	3186
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_l2i	40	40.127919	47019	3774
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqmE	40	40.052865	15030	2475
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.compare	40	40.131069	41072	6093
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zmod_divide_minus	40	40.025245	6187	2058
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.eq_dec	40	0.040570	1	1	0	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.12.dev	Coq.Strings.BinaryString.to_pos_of_pos	40	40.121502	43609	2887
coq-tactician-stdlib.8.12.dev	Coq.Strings.OctalString.to_pos_of_pos	40	40.086092	22745	1508
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction	40	40.159450	67160	2990
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.is_path_from_characterization	40	40.074462	24224	3759
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_seq_increasing	40	40.027282	8065	2032
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zdivide_pol_one	40	40.120847	44630	1806
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.map_1	40	40.064471	19701	2646
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40	40.061323	20868	2589
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nshiftr_equiv_nat	40	40.048146	12002	3697
coq-tactician-stdlib.8.12.dev	Coq.micromega.Ztac.eq_incl	40	0.044515	4	3	0.0.1	synth with cache (only 1: intros x y; only 1: intro EQ; only 1: now rewrite EQ).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_mult_cancel_r	40	40.052446	16417	2857
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_3	40	40.038391	9463	2237
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nth_revapp_l	40	40.047646	12098	2188
coq-tactician-stdlib.8.12.dev	Coq.micromega.Ztac.elim_concl_eq	40	3.581653	2758	365	9.0.1.1.13	synth with cache (only 1: intros n m; only 1: intuition; only 1: destruct (Z.eq_decidable n m); only 1: trivial; only 1: Z.Private_Tac.order).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Ztac.elim_concl_le	40	0.024284	6	2	4.0	synth with cache (only 1: intros x y H; only 1: now apply Z.ge_le).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Ztac.elim_concl_lt	40	0.052273	17	5	2.0	synth with cache (only 1: intros; only 1: now apply Z.nle_gt).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Ztac.Zlt_le_add_1	40	0.456739	63	16	6.1	synth with cache (only 1: intros n m; only 1: apply Z.le_succ_l).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Ztac.add_le	40	0.018680	5	2	3.0	synth with cache (only 1: intros n m H1 H2; only 1: now apply Z.add_nonneg_nonneg).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Ztac.mul_le	40	0.043405	8	4	0.0.4.0	synth with cache (only 1: intros n m H1 H2; only 1: apply Z.mul_nonneg_nonneg; only 1: Z.order; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_1	40	40.249313	21149	1624
coq-tactician-stdlib.8.12.dev	Coq.Strings.HexString.to_pos_of_pos	40	40.082071	29659	2031
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qcompare_antisym	40	40.177020	62796	7122
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.compare_equal	40	40.146606	19824	2944
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.checker_nf_sound	40	40.196582	34287	2811
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_le_min_induc	40	40.079519	24056	3432
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Zpower_exp	40	40.027151	6855	1976
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction_bis	40	40.061011	23871	1576
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_equiv	40	0.008516	5	1	4	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_equiv	40	0.021401	8	2	6.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.union_b	40	40.055180	11234	7022
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_of	40	40.067087	19390	2906
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_1	40	40.082026	21148	1736
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRopp_morph_Proper	40	40.143857	9617	1521
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_morph_Proper	40	0.029233	1	1	0	synth with cache (only 1: apply (CRisRingExt R)).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7	40	40.003526	557	183
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.double_nzhead	40	40.069915	17231	4080
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_inv	40	40.168258	66662	3537
coq-tactician-stdlib.8.12.dev	Coq.Classes.SetoidDec.unit_eqdec_obligation_1	40	40.151784	58812	4565
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalString.NilZero.isi	40	40.161941	65312	3375
coq-tactician-stdlib.8.12.dev	Coq.Bool.Zerob.zerob_true_intro	40	0.363465	118	33	0.0.4.3	synth with cache (only 1: intros le_mn2; only 1: destruct le_mn2; only 1: easy; only 1: now try Nat.order').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalString.NilZero.isi_posnil	40	0.006298	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalString.NilZero.isi_negnil	40	0.006750	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Zerob.zerob_true_elim	40	0.036794	3	3	0.0.0	synth with cache (only 1: destruct n; only 1: trivial with bool; only 1: inversion 1).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Zerob.zerob_false_intro	40	0.035951	10	4	0.2.0	synth with cache (only 1: destruct n; only 1: Nat.order'; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40	40.160301	65884	665
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcomplements.floor_gt0	40	0.026199	3	2	0.1	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Signed.of_inj_pos	40	40.035560	10627	1127
coq-tactician-stdlib.8.12.dev	Coq.Bool.Zerob.zerob_false_elim	40	2.784553	2523	269	21.0.0.0	synth with cache (only 1: intros; only 1: intro H1; only 1: rewrite H1 in H; only 1: now Nat.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.le_ni_le	40	8.407710	5218	776	0.4.9.14.1	synth with cache (only 1: intros n m H; only 1: symmetry; only 1: unfold ni_min; only 1: rewrite Nat.min_l by trivial; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.add_fold	40	40.061068	12706	4279
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilZero.usu	40	40.130884	49772	2303
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilZero.usu_nil	40	0.016961	4	2	1.1	synth with cache (only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.eqb_sym	40	40.115579	45375	2667
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_gt_0	40	40.046404	14420	2549
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_lt_0_compat	40	40.075459	24855	3459
coq-tactician-stdlib.8.12.dev	Coq.omega.PreOmega.Z.rem_bound_neg_neg	40	40.090267	5914	1191
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.shift_equiv	40	11.501902	4557	1052	5.1.3.5.0.5	synth with cache (only 1: case n; only 1: intros; only 1: reflexivity; only 1: intros Hn Hn'; only 1: now apply Pos.iter_swap_gen; only 1: now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_cauchy	40	40.173789	12240	1547
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp	40	0.006102	3	1	2	synth with cache (only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_add_opp	40	0.018354	4	2	2.0	synth with cache (only 1: intros; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc_ex	40	40.381410	14949	3191
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_length_2	40	40.058653	16640	3178
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec	40	40.092021	34464	2523
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_1	40	5.548578	1410	542	2.2.0.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_div_r	40	40.077242	24610	2342
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_cardinal	40	40.066158	20680	2577
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head0	40	40.057911	14890	3627
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_cardinal	40	0.110669	16	4	5	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nleb_Nle	40	40.076806	26139	4242
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcle_refl	40	1.303845	1157	141	8.8.2.1	synth with cache (only 1: intro n; only 1: induction n; only 1: red; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.Comp'	40	0.369904	34	8	9	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nleb_refl	40	1.068212	520	94	1.2.0.1.0.4.11	synth with cache (only 1: apply eq_iff_eq_true; only 1: split; only 1: auto; only 1: intuition; only 1: unfold Nleb; only 1: apply Nat.leb_le; only 1: left).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nb_digits_rev	40	40.098075	38214	2769
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P31	40	40.034927	9845	2177
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_mirr	40	40.034707	10116	3218
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_assoc	40	40.034134	6807	1488
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_1	40	40.235520	96930	2526
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_2	40	0.068739	4	4	0.0.0.0	synth with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_mod_eq	40	40.095316	39844	2233
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_nshiftl	40	40.023723	2219	621
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40	40.063162	15655	2488
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.int_eqm	40	0.038895	6	2	1.3	synth with cache (only 1: intro H0; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_3	40	2.359673	2611	213	0.0.0.25.0	synth with cache (only 1: intros P; only 1: intro; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcle_antisym	40	7.272613	2857	411	5.6.2.0.7	synth with cache (only 1: intros n m; only 1: destruct n, m; only 1: intros H; only 1: symmetry; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_mod_minus	40	40.077737	17468	2723
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Ascii_as_OT.cmp_eq	40	40.135900	38275	1318
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rplus_morph_Proper	40	4.220919	3401	255	15.15.14	synth with cache (only 1: intros x y; only 1: intros H'; only 1: simpl_relation).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction_bis	40	40.146135	60081	2922
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.is_path_from_restrict	40	40.096842	33172	4189
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_seq_decreasing	40	40.034415	10638	2021
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zgcd_minus	40	40.048005	15352	1506
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.map_2	40	40.113882	38185	4141
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40	40.054357	19249	2405
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring.BoolTheory	40	0.708790	198	66	0.0.0.0.0.0.0.0.0.9	synth with cache (only 1: split; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: reflexivity; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_morph_T	40	26.573067	11224	2167	3.7.0.4.1.1.6.1	synth with cache (only 1: intros; only 1: destruct (CRltLinear R), p; only 1: intros H1 H2 H3; only 1: intro abs; only 1: destruct (CRltLinear R); only 1: intro; only 1: apply (CRisRingExt R); only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring.bool_eq_ok	40	0.019393	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nshiftl_nat_equiv	40	40.081840	25285	3240
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_mult_cancel_l	40	40.041252	11783	2524
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_in	40	40.050122	8061	1261
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_morph_T	40	3.673308	1426	276	0.16.2	synth with cache (only 1: intros; only 1: intros x; only 1: apply (CRisRingExt R)).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRopp_morph_T	40	0.398534	78	26	2.0.4	synth with cache (only 1: intros a Ha; only 1: intros m Hm; only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nzhead_revapp_0	40	40.075341	26023	3059
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	40	40.505049	6181	1222
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qcompare_spec	40	40.106231	44469	410
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_refl	40	0.034893	4	2	0.2	synth with cache (only 1: red; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_sym	40	0.016333	4	2	2.0	synth with cache (only 1: symmetry; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.compare_gt	40	40.097716	31938	4609
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_sub	40	40.130461	29489	1969
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_identity	40	40.046975	8733	3361
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40	40.110041	39913	2662
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.inter_b	40	40.020870	3082	2674
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_2	40	40.078506	25600	3470
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7b	40	40.006780	956	180
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_1bis	40	40.114150	38313	3392
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.of_hex_uint_double	40	40.036744	9078	2086
coq-tactician-stdlib.8.12.dev	Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	40	40.090245	36192	845
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalString.NilZero.sis	40	40.054540	13787	4562
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.singleton_spec	40	40.076672	23106	2966
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.singleton_ok	40	0.015839	5	2	2.1	synth with cache (only 1: red; only 1: auto_tc).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcomplements.floor_ok	40	40.063024	20184	2757
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_of	40	40.175911	75017	643
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_add	40	8.167424	4413	270	27.5.9	synth with cache (only 1: intros x y H; only 1: rewrite (Padd_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: now try discriminate).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rtimes_morph_Proper	40	20.674185	16254	882	72	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_le_le	40	40.086154	30729	3604
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.ropp_morph_Proper	40	2.478268	2410	203	41	synth with cache (only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilZero.usu_gen	40	40.093716	37002	766
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.eqb_eq	40	40.068214	19258	6435
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.eqb_neq	40	0.019512	1	1	0	synth with cache (only 1: now rewrite <- not_true_iff_false, BinInt.Z.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.eqb_compat	40	0.027129	3	3	0.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!BinInt.Z.eqb_eq, Exx', Eyy').
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_lt_0_compat	40	40.049595	13200	4195
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_ge_0	40	40.039513	11132	2484
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_mul	40	5.759452	3544	286	19.3.5.7	synth with cache (only 1: intros x y H; only 1: unfold eval_pol; only 1: rewrite (Pmul_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: now try discriminate).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_nat_equiv	40	40.044100	14907	1853
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_mirr_rev	40	34.410349	11987	3460	1.2.2.0.0.0.0.0.4.0.1.0	synth with cache (only 1: intros f x H; only 1: destruct H as [l H]; only 1: exists (- l); only 1: apply derivable_pt_lim_ext with (f := fun x => mirr_fct f (- x)); only 1: intros; only 1: unfold mirr_fct; only 1: rewrite Ropp_involutive; only 1: reflexivity; only 1: apply derivable_pt_lim_mirr_fwd; only 1: change (mirr_fct f) with (f o (- id))%F; only 1: rewrite Ropp_involutive; only 1: exact H).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_sym	40	27.636196	18261	1844	2.5.2.1.7.1.18	synth with cache (only 1: intros P Hrec; only 1: intros m [H3 H4]; only 1: split; only 1: trivial; only 1: trivial; only 1: intro; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_mirr_prem	40	0.359604	64	28	0.0.0.0.1.0.0.0	synth with cache (only 1: intros f x H; only 1: unfold derivable_pt in H; only 1: destruct H as [l H]; only 1: exists (- l); only 1: apply derivable_pt_lim_mirr_rev; only 1: rewrite Ropp_involutive; only 1: rewrite Ropp_involutive; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.belowMultiple	40	40.109882	39994	3144
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40	40.077037	25228	785
coq-tactician-stdlib.8.12.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.acc_implies_P_eventually	40	40.096067	31928	3843
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec'	40	40.041262	9010	3972
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_length	40	40.065682	19478	2975
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_2	40	40.057403	11683	3809
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_pos	40	40.094915	30252	3728
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_mem	40	40.074564	22716	1678
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nleb_antisym	40	40.092984	31667	5337
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nb_digits_nzhead	40	40.179714	80194	627
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P32	40	40.039624	10762	2889
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_lub_lt	40	40.057724	3825	509
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_eq_full	40	40.060858	22475	2346
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_i2l	40	40.032574	5098	1033
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_1	40	40.111838	45595	1468
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqmI	40	40.609887	22636	2887
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.ArithRing.natSRth	40	40.059547	5634	1235
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcle_trans	40	40.090832	28646	2574
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Ascii_as_OT.cmp_lt_nat	40	40.145208	49388	1556
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_identity	40	40.057017	17948	2604
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.inductively_barred_at_monotone	40	40.116989	42111	4707
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_seq_CV_0	40	40.027981	8422	2145
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zdivide_pol_sub	40	40.082294	28238	2430
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.mapi_1	40	40.079563	25407	2606
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40	40.057427	22738	2816
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nshiftl_equiv_nat	40	40.061676	19318	3108
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zmult_rem_distr_l	40	40.047349	15474	2106
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_bst	40	40.026653	6267	1148
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRminus_morph_Proper	40	40.044974	10846	3711
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nzhead_revapp	40	40.073245	24621	3175
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pair_wd	40	20.982056	3734	747	1.1.9.10	synth with cache (only 1: intros Eqf Lef x y; only 1: compute; only 1: intros n m; only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.constructive_indefinite_ground_description_nat_Acc	40	21.981585	6363	2221	0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.1.1.0.2.1	synth with cache (only 1: intros H; only 1: pattern 0; only 1: apply Fix_F with (R := R); only 1: intros x IH; only 1: destruct (P_decidable x) as [Px| not_Px]; only 1: exists x; only 1: assumption; only 1: set (y := S x); only 1: assert (Ryx : R y x); only 1: unfold R; only 1: split; only 1: auto; only 1: auto; only 1: destruct (IH y Ryx) as [n Hn]; only 1: exists n; only 1: assumption; only 1: elim H; only 1: intros x Px; only 1: apply P_eventually_implies_acc with (n := x); only 1: replace (x + 0) with x; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_trans	40	40.042920	11109	1015
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.compare_eq	40	40.078398	24652	3152
coq-tactician-stdlib.8.12.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.P'_decidable	40	0.942038	477	69	16	synth with cache (only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.Rinv_eq_compat	40	41.231129	13155	1406
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_0	40	40.089767	32828	2645
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_nonnil	40	40.071716	23995	3146
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.diff_b	40	40.028980	5656	3097
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_1	40	40.105050	37530	3745
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_nz	40	40.005106	1436	161
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_mapsto_iff	40	40.095055	28483	4260
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Signed.of_to	40	40.101990	35316	3619
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	40	40.231271	19668	2940
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	40	0.341060	50	23	0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcomplements.Z_lt_abs_rec	40	40.151703	60881	2990
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40	40.138436	51051	4381
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.Zth	40	40.020738	5714	1599
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.radd_ext3_Proper	40	0.010349	1	1	0	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.rmul_ext3_Proper	40	0.011417	2	1	1	synth with cache (only 1: exact (Rmul_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Nplength_lb	40	40.157915	67916	4314
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ropp_ext3_Proper	40	0.010479	1	1	0	synth with cache (only 1: exact (Ropp_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rle_morph_Proper	40	40.089685	33270	1632
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilZero.isi	40	40.063388	17912	3260
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_lt_le_0_compat	40	40.046083	10759	4304
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.get_correct	40	40.114384	41687	4956
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilZero.isi_posnil	40	0.039880	3	2	1.0	synth with cache (only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilZero.isi_negnil	40	0.009771	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_ge_0	40	40.031075	7686	2405
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_opp	40	40.108386	38450	1711
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_equiv	40	40.044948	15007	1787
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_0	40	40.032762	10349	1268
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_plus	40	40.078833	19766	3208
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_assoc	40	40.077750	24008	4219
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.NoDupA_equivlistA_permut	40	40.043124	9941	3402
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.ExtensionalEpsilon_imp_EM.extensional_epsilon_imp_EM	40	40.108758	43367	2826
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_union	40	40.041522	7685	3966
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_1	40	0.021842	1	1	0	synth with cache (only 1: auto with set fset).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_bounded	40	40.077672	23319	3559
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_2	40	0.913279	266	81	0.0.0.4.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_filter	40	40.075423	24157	874
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_1	40	0.527153	181	47	0.0.0.4.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nleb_trans	40	40.092335	36754	2585
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_comm	40	40.100227	39094	1483
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P33	40	40.038844	11130	1880
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.del_head_nb_digits	40	40.152445	69461	629
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.singleton_spec	40	40.055533	14173	1977
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	0.170691	143	22	16	synth with cache (only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_eq	40	40.057980	19083	2618
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40	4.035032	2043	316	8.0.1.11	synth with cache (only 1: intros H x; only 1: rewrite <- not_mem_iff; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_contract	40	40.030271	3970	1023
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice_plus_one	40	40.054483	15924	2767
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_2	40	40.086455	31696	2071
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.add_assoc	40	40.183961	68486	2618
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilZero.sis	40	12.823897	5419	1242	0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: destruct s; only 1: intros [=<-]; only 1: simpl; only 1: case Ascii.eqb_spec; only 1: intros ->; only 1: destruct (NilEmpty.uint_of_string s) eqn:Hs; only 1: simpl; only 1: intros [=<-]; only 1: simpl; only 1: f_equal; only 1: now apply NilEmpty.sus; only 1: simpl; only 1: intros [=<-]; only 1: destruct d; only 1: intros; only 1: apply NilEmpty.sus; only 1: simpl; only 1: destruct uint_of_char; only 1: simpl in *; only 1: congruence; only 1: simpl in *; only 1: congruence; only 1: now destruct uint_of_char).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.ArithRing.nat_morph_N	40	40.113605	9851	1893
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_not_eq	40	40.117779	38854	3814
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Ascii_as_OT.cmp_antisym	40	40.054152	20234	378
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_0	40	40.085035	29544	3397
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40	40.102623	37587	3308
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_lim	40	40.025285	6350	1881
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.mapi_2	40	40.121519	39458	3742
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zdivide_pol_sub_0	40	40.109924	37563	2551
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40	40.068057	26825	2571
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nshiftr_nat_spec	40	40.042529	12789	2486
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zmult_rem_distr_r	40	40.049470	12407	2512
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_find	40	40.036939	4776	1115
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRminus_morph_T	40	40.772463	13463	2339
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40	40.052171	12000	1376
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Q_Setoid	40	40.064494	21001	824
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.compare	40	40.115917	40511	3862
coq-tactician-stdlib.8.12.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_indefinite_ground_description	40	40.182717	70650	5575
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	40	40.046800	9482	1351
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.radd_ext_Proper	40	0.930767	666	68	3.3.15	synth with cache (only 1: intros Az LS; only 1: elim ARth; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rmul_ext_Proper	40	0.017705	2	1	1	synth with cache (only 1: exact (Rmul_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1	40	40.067770	19239	2504
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ropp_ext_Proper	40	0.225720	102	13	14	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_inj	40	40.104589	35226	4129
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.elements_b	40	40.030294	5298	3417
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nzhead_rev	40	40.060751	12664	1931
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_2	40	40.038885	9551	3821
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.radd_ext_Proper	40	3.945398	2355	150	33	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv8	40	40.005158	462	140
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_find_b	40	40.106006	34678	3396
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_1	40	31.045642	17821	1228	3.1.24.29.22	synth with cache (only 1: intros p; only 1: constructor; only 1: intuition; only 1: auto with zarith; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_le_weak	40	19.605231	15025	1431	4.32	synth with cache (only 1: intros m IH H; only 1: now apply Z.lt_le_incl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Signed.to_of	40	40.086396	31087	2847
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_refl	40	0.032139	4	4	0.0.0.0	synth with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.081609	5	5	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcomplements.Z_lt_abs_induction	40	40.066274	15978	4681
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	40	40.290565	12515	538
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	40	0.047995	5	5	0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: ok; only 1: simpl; only 1: ok).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcle_lt_trans	40	0.653384	180	49	1.1.1.4.0	synth with cache (only 1: intros x y z; only 1: intuition auto; N.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: apply Qle_lt_trans with y; only 1: auto with qarith; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_surj	40	40.060018	17629	2393
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Nplength_ub	40	40.101805	38102	2702
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.get_signZ_th	40	40.104012	40485	2041
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.rsub_ext3_Proper	40	0.008580	1	1	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rlt_morph_Proper	40	40.053467	16321	1113
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.rmul_ext_Proper	40	5.879141	3595	206	41	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_le_0_compat	40	40.054990	13431	5692
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.sum_inequa_Rle_lt	40	0.106763	54	18	4.4	synth with cache (only 1: intros Ha'; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.append_correct1	40	40.123732	11157	1604
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_le_0	40	40.036261	8438	2010
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_norm	40	40.099796	33034	2023
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_equiv	40	40.049844	15798	1935
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_nat_S	40	0.168029	5	3	2.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_minus	40	40.084055	25228	3922
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_comm	40	40.305432	8361	1634
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut_map.permut_map	40	40.076853	23537	2828
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_plus	40	3.137414	818	259	4.7.1.4.1	synth with cache (only 1: Nat.induct n; only 1: auto; only 1: intro n; only 1: simpl; only 1: now intros ->).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail00	40	40.034327	8213	1364
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.exists_filter	40	40.060375	19075	2294
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1	40	31.088428	16982	1566	2.7.1.0.0.5.18.6	synth with cache (only 1: intros m s1; only 1: intros n v le le'; only 1: symmetry; only 1: apply fold_rec; only 1: intros; only 1: intuition; only 1: intro; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nleb_ltb_trans	40	40.135961	29895	1605
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nb_digits_del_head	40	40.067532	22938	2849
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.FTC_Riemann	40	40.044795	13618	2006
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_succ	40	40.088301	25191	1389
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nb_digits_iter_D0	40	0.645479	318	77	0.1.1.10	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: now Morphisms.f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.create_spec	40	40.057230	17726	2289
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.create_ok	40	0.260739	117	34	2.2.1.1.3	synth with cache (only 1: constructor; only 1: intuition; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_1	40	2.422755	660	186	16	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_2	40	0.041317	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.ropp_ext_Proper	40	11.375094	5677	553	12.10.2.7.8	synth with cache (only 1: intros; only 1: elim ARth; only 1: intros x1 x2 Ex y1 y2 Ey; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.rsub_ext_Proper	40	0.088722	8	2	3.3	synth with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_eucl_exist	40	40.074169	25625	2401
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.union_cardinal	40	40.091073	30960	2536
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_shiftr	40	40.086205	29627	3831
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_contract	40	40.028426	2235	761
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	1.049219	998	111	13.17	synth with cache (only 1: intros x y H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.Comp'	40	0.064624	9	3	2	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_1	40	40.157442	61808	3143
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.add_comm	40	40.059293	15098	3541
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Ascii_as_OT.lt_trans	40	40.644104	31027	3358
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	40	40.103076	36505	3579
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.ascii_dec	40	40.065005	16640	1791
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.map2_1	40	40.076094	17836	1983
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_CVU_prelim	40	40.020547	5181	1647
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zgcd_pol_div	40	40.102545	3969	444
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40	40.197502	84212	5290
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40	40.076802	24711	3984
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_rem	40	40.044183	11431	3208
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_1	40	40.041556	6121	1280
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_wd	40	40.041972	10608	1433
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRopp_involutive	40	41.062035	15114	1383
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_dec	40	40.088346	28989	2555
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_cxe	40	40.182551	74592	2483
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xce	40	0.041739	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_definite_ground_description	40	40.050576	13257	4740
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	40	40.056606	5305	763
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_2	40	40.062579	19512	2153
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rsub_ext_Proper	40	40.072154	19560	1279
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40	40.137478	49701	3648
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.In_compat	40	0.112960	20	6	3	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.rev_nztail_rev	40	40.077527	27158	1586
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.filter_b	40	40.084305	18846	5238
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nzhead_D0	40	0.009163	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_sort	40	40.097940	33501	4313
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40	0.520632	921	39	42	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	0.038890	4	4	0.0.0.0	synth with cache (only 1: destr_bool; only 1: split; only 1: congruence; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0.009124	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1b	40	3.029321	2093	371	0.4.0.2.9	synth with cache (only 1: intros a b c H H'; only 1: apply fold_rec; only 1: split; only 1: intros E; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.empty_spec	40	0.219661	269	26	20	synth with cache (only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.cross_product_eq	40	40.002358	272	169
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_b	40	40.084517	30182	2397
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Signed.to_int_inj	40	40.082719	24029	5328
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_opp	40	40.077481	21691	2049
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nzhead_iter_D0	40	2.473362	2698	126	3.1.53	synth with cache (only 1: induction n; only 1: reflexivity; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcomplements.Zcase_sign	40	40.107956	41964	2341
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_le_trans	40	40.082892	23144	3661
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rmatch	40	40.277437	121859	1287
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_norm	40	40.066429	17301	2822
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcomplements.sqr_pos	40	0.848215	163	14	18	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Npdist_eq_1	40	40.112548	43119	2927
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.same_gen	40	40.067499	24497	1197
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rminus_morph_Proper	40	40.095789	34956	1949
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_lt_reg_l	40	40.072696	22589	3534
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.append_correct2	40	40.058174	20085	3378
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_trans	40	5.546102	2823	799	0.0.1.2.2.1.0.4	synth with cache (only 1: intros x y z; only 1: intuition auto; Z.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: eapply Qlt_le_trans; only 1: eauto; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.normalise_sound	40	40.090763	31101	3373
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_le_0	40	40.033229	8278	2545
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rneq_symm	40	2.710008	3862	293	50	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcnot_lt_le	40	1.325711	221	71	3.4.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros H0; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcnot_le_lt	40	0.063453	15	7	1.2.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros H0; only 1: auto with qarith).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_not_le	40	0.070484	11	6	0.1.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros n m; only 1: apply Z.lt_nge).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcle_not_lt	40	0.062087	9	5	5.0.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: auto with qarith).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_mult	40	40.054361	15510	4299
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_l	40	3.408732	7202	277	73	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_r	40	0.018692	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_0_l	40	40.227927	15309	2260
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_r	40	0.020835	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_comm	40	0.206842	69	13	0.2.8	synth with cache (only 1: intro; only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_l	40	0.021404	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_comm	40	0.026383	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_correct	40	40.057223	20722	1163
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail0	40	40.050387	13353	3196
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut_permut.Permutation_impl_permutation	40	40.054427	14461	3245
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nltb_leb_trans	40	40.077953	25906	3877
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_2	40	40.038002	8280	2229
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_const_bound	40	40.041983	13242	2237
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_add	40	40.060751	19860	1664
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.pow_N_pow_N	40	0.011223	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nb_digits_nth	40	40.090848	34448	2407
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.bal_spec	40	40.056895	16988	2405
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_1	40	40.036149	9461	1732
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Peq_ok	40	40.096567	20093	972
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_mod_unique	40	40.083090	30626	1823
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incrbis	40	40.054476	19204	1861
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_mem	40	40.075119	19226	2416
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_2	40	40.154575	54470	2470
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.add_le_r	40	40.141897	55728	494
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pequiv_eq	40	25.618743	17349	1164	2.9.1.7.9.2.7.20.7.2.11	synth with cache (only 1: compute; only 1: split; only 1: compute; only 1: now f_equal; only 1: compute; only 1: intro; only 1: now subst; only 1: compute; only 1: intros; only 1: rewrite H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Ascii_as_OT.lt_not_eq	40	40.111914	6217	1534
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.find_left_path	40	40.120949	45549	4396
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.eqb_spec	40	40.136317	51171	4300
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.map2_2	40	40.118487	21213	3223
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_is_datan	40	40.028806	8266	1912
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40	40.147559	61325	4265
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	40	40.066633	11790	1503
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nshiftl_nat_spec_low	40	40.083299	27202	4127
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_norm	40	28.366354	14074	1954	2.0.0.5.5.0.6.0.1.0.2.0.2.0.6.0.2.0.2	synth with cache (only 1: induction d; only 1: split; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l; only 1: simpl; only 1: auto; only 1: auto; only 1: simpl; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Pshiftl_nat_0	40	0.015732	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Pshiftl_nat_S	40	0.021971	3	3	0.0.0	synth with cache (only 1: intros q r; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zmult_rem	40	40.046597	14867	2901
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_2	40	40.030152	6234	2346
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40	40.123015	21952	2929
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_bool_iff	40	40.102820	38806	3053
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRopp_gt_lt_contravar	40	40.331709	12129	634
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lxl	40	40.172064	72521	1468
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40	40.047625	8722	1006
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_ext	40	14.454757	3831	562	18.3	synth with cache (only 1: unfold Pequiv; only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.for_all_b	40	40.020704	3443	2408
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3	40	40.154211	56640	4670
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_commutes	40	40.121632	43718	3175
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.mem_node	40	40.066557	19352	3207
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_ext	40	40.005471	804	149
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.find_o	40	40.033242	6120	3236
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40	4.948959	474	234	2.5.1	synth with cache (only 1: intros x y z; only 1: intro; only 1: apply CReal_mult_proper_l, H).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	0.040952	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Signed.to_int_pos_surj	40	40.051618	14135	3132
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.revapp_nil_inv	40	40.058827	17303	3222
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_0_abs	40	40.077328	28035	1378
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_inj	40	40.067845	21014	2086
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rrmatch	40	40.275771	54034	3537
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.byte_dec_lb	40	40.311727	47225	3005
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_correct	40	40.077064	25048	3332
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil	40	0.007029	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	1.235245	261	109	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Npdist_eq_2	40	40.119832	47712	4260
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_Psucc	40	40.054875	2256	949
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.substring_correct1	40	40.051008	13833	3360
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_lt_reg_r	40	40.061462	5277	1567
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_lt_0	40	40.031169	6847	2804
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.negate_correct	40	40.031522	6409	2443
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcle_lt_or_eq	40	40.067671	20360	2190
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pinj_ext	40	13.024660	2400	458	16.3	synth with cache (only 1: unfold Pequiv; only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_const	40	40.093503	36275	3739
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_0_r	40	40.111459	19740	2865
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rminus_eq_0	40	40.171816	68561	5151
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_nat_correct	40	40.039346	12684	1408
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lor	40	40.054383	14252	3270
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut_permut.permut_eqA	40	40.060409	16878	2805
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_o	40	13.234278	7469	1473	4.5.1.3.5.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intros; only 1: rewrite <- find_mapsto_iff; only 1: split; only 1: intros; only 1: rewrite empty_mapsto_iff in H; only 1: now auto with arith; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nltb_trans	40	40.075813	24894	4084
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.Riemann_integrable_scal	40	40.056860	16678	2334
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1b	40	40.125463	45552	3475
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_mul_0_l	40	40.079242	27097	1022
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.del_head_nth	40	40.093111	23432	3291
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.bal_ok	40	40.099178	37660	1159
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_2	40	40.038415	8526	1567
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_unique	40	40.077056	25941	3559
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Peq_spec	40	40.060998	18081	1303
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incr	40	40.032557	9766	1967
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_filter	40	40.063211	17259	1816
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_1	40	40.197212	82117	1737
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.add_cancel_l	40	40.146511	53873	1611
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.add_cancel_r	40	0.088911	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros h; only 1: apply int_eqm in h; only 1: rewrite !add_spec in h; only 1: apply eqm_mod, eqm_sub in h; only 1: replace (_ + _ - _) with (φ (y) - φ (z)) in h by lia; only 1: rewrite <- eqm_subE in h; only 1: apply eqmI, h).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Signed.of_int_norm	40	20.067196	15610	2131	0.7.0.24.0	synth with cache (only 1: destruct d; only 1: simpl; only 1: now induction d; only 1: simpl; only 1: now destruct nzhead).
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.Y_unique	40	40.085492	26958	3583
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Ascii_as_OT.compare_helper_eq	40	40.065454	20348	2833
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.eqb_refl	40	40.060124	19184	2141
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40	40.044925	17182	2021
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40	40.097399	31814	3479
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Ratan_CVU'	40	40.022227	6422	1569
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_inj	40	40.055720	14058	3141
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Pshiftl_nat_N	40	40.136257	24158	2770
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Ascii_as_OT.compare_helper_gt	40	4.640060	3561	456	9.21	synth with cache (only 1: red; only 1: now apply N.gt_lt).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zplus_rem	40	40.067326	24821	2181
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_3	40	40.041096	10875	2390
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_wd	40	40.053627	16195	2111
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_bool_eq	40	40.070946	17617	7213
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_eq_bool	40	0.008744	1	1	0	synth with cache (only 1: apply Qeq_bool_iff).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.cons_cardinal_e	40	40.032740	9223	1451
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRopp_lt_cancel	40	40.037837	7671	3666
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_gxg	40	40.184662	78375	1834
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xll	40	0.037557	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xgg	40	0.036664	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Pphi0	40	20.070482	12581	512	87	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.exists_b	40	40.037963	6236	3983
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3w	40	40.092566	29603	3486
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_init	40	40.087114	17625	1286
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40	40.092812	28970	4116
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_N_ext	40	40.009005	963	145
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.subset_Leaf_s	40	0.287201	138	20	10	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Pphi1	40	2.328377	1617	78	39	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40	40.120572	22393	2826
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.E_ST	40	1.309548	1687	166	4.2.18.2.8.2	synth with cache (only 1: split; only 1: auto with arith; only 1: auto with relations; only 1: red; only 1: intros x y z; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_unique	40	40.063320	19198	2111
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.rev_nil_inv	40	40.062766	16140	3310
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_iff	40	40.046882	10751	3531
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.byte_dec_bl	40	40.132461	32502	989
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_cons	40	40.102529	35467	3030
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Npdist_comm	40	40.082308	29030	3645
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.lbal_match	40	40.371016	94356	1404
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0.011998	1	1	0	synth with cache (only 1: exact (rrmatch _ _ _)).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_add	40	40.029480	3756	559
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.substring_correct2	40	40.050565	10293	6421
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_reg_l	40	40.028209	5320	1461
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_lt_0_var	40	40.036607	9313	2953
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.cnf_of_list_correct	40	40.074365	25372	2582
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qc_dec	40	40.125553	45126	2753
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PX_ext	40	40.038499	7317	1094
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_scal	40	40.066462	16720	3149
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_cancel_l	40	40.076783	26876	2466
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_lt_compat_l	40	40.081749	26269	2200
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_nat	40	40.064155	20939	1926
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_land	40	40.048235	12261	2771
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut_permut.permutation_Permutation	40	40.085056	28721	2890
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nltb_leb_weak	40	40.072921	24558	2540
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_a	40	40.172577	70063	2417
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40	40.017818	3646	1655
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_o	40	0.208859	37	9	3.2	synth with cache (only 1: intros n m s1 s2; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_commutes	40	40.051279	14897	3098
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nth_revapp_r	40	40.057406	20256	1954
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_mul_0_r	40	40.060536	15838	1177
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec'	40	40.038480	10457	1758
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_1	40	40.046837	9782	1316
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_unique	40	40.095175	34049	3860
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_0_l	40	0.078127	21	5	4	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_0_r	40	0.023709	4	4	0.0.0.0	synth with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_0_l	40	0.434447	112	28	0.8.0	synth with cache (only 1: intros; only 1: Z.bitwise; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_0_r	40	0.020879	4	4	0.0.0.0	synth with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_twice_plus_one	40	40.026959	6639	2015
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec	40	1.860747	187	83	0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: induct ltac:(s) ltac:(x); only 1: intuition_in; only 1: intuition_in; only 1: eauto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: intuition_in; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_1_r	40	0.756597	461	97	0.11.0	synth with cache (only 1: intros; only 1: Z.nzsimpl; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_1_r	40	0.082921	14	5	6.0	synth with cache (only 1: intros; only 1: now Z.nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.exists_filter	40	40.098545	34839	3261
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_1	40	0.075256	17	6	5.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_2	40	40.085044	26766	1404
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_2	40	0.033353	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.In_eq_iff	40	0.405015	222	37	0.8.3	synth with cache (only 1: intro H; only 1: rewrite H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr0	40	40.184900	72322	538
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.mem_iff	40	0.218001	150	24	13	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Signed.of_inj_pos	40	40.040138	8991	3128
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	0.550755	55	11	1.5.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: Z.nzsimpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.Y_approx	40	40.083523	28459	3099
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.eqb_sym	40	40.148436	35291	2622
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40	40.076681	29104	3354
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.pos_le_add	40	40.150415	55224	4124
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Ratan_CVU	40	40.031710	9557	1721
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_iff	40	40.056063	13466	4185
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Pshiftl_nat_plus	40	40.082935	23711	5099
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zplus_rem_idemp_l	40	40.053130	15327	3826
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.String_as_OT.nat_of_ascii_inverse	40	40.117469	44133	2538
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zabs.Zabs_ind	40	1.090721	772	111	0.3.7.0.2	synth with cache (only 1: intros; only 1: Z.destruct_max n; only 1: Z.swap_greater; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_2	40	12.356519	1951	461	0.0.0.0.0.0.0.3.0.0.4	synth with cache (only 1: red; only 1: unfold Add, MP.Add; only 1: intros; only 1: do 2 (rewrite filter_spec; auto); only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_bst	40	40.271809	16957	2562
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40	40.047629	14308	1950
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_bool_neq	40	40.121650	43726	1999
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_tcc	40	40.028975	6139	872
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zabs.Zabs_intro	40	3.903488	3750	385	6.20	synth with cache (only 1: intros x y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRopp_ge_le_contravar	40	40.269958	9289	2473
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lex	40	40.048124	16111	1495
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.461335	106	49	0.0.0.0.0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: ct; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: ct).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Alt_PI_tg	40	11.427949	1508	557	0.2.0.0.1.0.5	synth with cache (only 1: intros Eq1; only 1: unfold Ratan_seq, PI_tg; only 1: simpl; only 1: rewrite pow1; only 1: unfold Rdiv; only 1: rewrite Rmult_1_l; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_equal	40	40.073753	22966	2335
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_Leaf	40	4.470094	6388	461	2.0.1.39.2	synth with cache (only 1: intros q; only 1: destruct q; only 1: simpl; only 1: trivial; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_0	40	40.005560	1614	141
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.subset_spec	40	40.056361	18233	1997
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.env_morph	40	40.072233	25735	1300
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.xgmapi	40	40.052720	14892	3376
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.Equal_ST	40	40.050871	18187	621
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40	40.062313	20629	2614
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.rev_lnorm_rev	40	40.067919	18152	2654
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	40	40.124269	10690	1364
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Signed.of_to	40	40.077707	30403	1738
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_o	40	28.064884	19414	2674	0.0.0.0.18.0.8.3.1	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intros s2; only 1: rewrite <- 2!find_mapsto_iff; only 1: constructor; only 1: apply add_3; only 1: auto; only 1: apply add_2; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil_inv	40	40.103935	35477	4341
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Nplength_ultra_1	40	40.086681	33183	3142
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbal'_match	40	40.305664	69422	1860
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_mult	40	40.044767	2456	652
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_invQ	40	3.533342	1907	270	13.10	synth with cache (only 1: intros a Ha; only 1: f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.prefix_correct	40	40.091345	33092	3796
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_o	40	4.487991	1407	356	0.0.0.0.0.8.1.0	synth with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: intuition; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- 2!find_mapsto_iff; only 1: apply add_neq_mapsto_iff; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_reg_r	40	40.039282	6332	2147
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_lt_0	40	40.030923	6912	2623
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.eq0_cnf	40	40.088557	27947	1683
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_le_dec	40	40.088453	27428	4058
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.jump_add'	40	40.049772	12025	663
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40	40.071093	25633	3497
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_em	40	40.080688	31345	1735
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40	40.046467	12275	1950
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.eqb_false	40
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_nat	40	40.099260	34126	2606
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lxor	40	40.046345	11156	3306
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nleb_double_mono	40	40.094298	32869	3549
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zabs.Zabs_dec	40	20.929177	17398	1483	3.0.9.33.3	synth with cache (only 1: intro n; only 1: destruct n; only 1: auto with relations; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_init	40	40.084056	23988	2021
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nth_revapp_l	40	40.048761	15577	2859
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_mul_l	40	40.057900	15861	1014
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_firstr	40	40.043614	15507	1135
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.add_ok	40	40.070872	7950	692
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_same_full	40	40.053670	17662	2637
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_1	40	40.042112	12572	1954
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.not_mem_iff	40	40.113949	41597	2519
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.equal_iff	40	0.051481	9	2	6	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.subset_iff	40	0.086238	20	4	8	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_1	40	40.131633	45596	3089
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.PreWeakKonigsLemma	40	40.126593	51388	2352
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.eqb_eq	40	40.052815	12423	2639
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.eqb_neq	40	0.021255	1	1	0	synth with cache (only 1: now rewrite <- not_true_iff_false, Pos.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.eqb_compat	40	0.033723	3	3	0.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!N.eqb_eq, Exx', Eyy').
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40	40.241092	103180	6051
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.max_var_le	40	40.090550	27784	4206
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.nztail_to_uint	40	40.058939	18453	2641
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Pxor_semantics	40	40.067982	17879	4095
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Z_of_nat_complete	40	40.087394	32271	1412
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40	0.026071	5	4	0.1.0.0	synth with cache (only 1: intros H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zplus_rem_idemp_r	40	40.045381	12109	3059
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.String_as_OT.lts_tail_unique	40	40.106508	36800	2969
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.union_filter	40	40.055883	8319	1694
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_lt_tree	40	40.043688	7425	2229
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_comm	40	40.043112	12648	1125
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_bool_iff	40	40.094508	32640	3223
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.cons_Cmp	40	40.077856	23854	2399
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRopp_plus_distr	40	40.794940	6686	1709
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zle_cases	40	40.102634	36600	3130
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_1_l	40	1.643336	237	83	2.2.1.7	synth with cache (only 1: split; only 1: apply CReq_sym; only 1: apply CRisRing; only 1: apply CRisRing).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Ratan_is_ps_atan	40	40.016636	4078	1627
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_empty	40	40.046502	10530	5491
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_empty_x	40	40.104532	32800	5336
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_1	40	40.005557	648	187
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Pjump_add	40	40.040530	12382	1675
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.equal_subset	40	40.108195	43025	1901
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.gmapi	40	40.067208	20596	3495
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.In_m	40	40.052498	17616	1931
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	40	40.041384	13500	1602
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nzhead_nonzero	40	40.085253	29092	3352
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Signed.to_of	40	40.091614	31607	3376
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Nplength_ultra	40	40.060922	21231	3857
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40	40.236301	38820	1046
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_match	40	0.013538	1	1	0	synth with cache (only 1: exact (rmatch _ _ _)).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.rsub_ext4_Proper	40	40.042809	13156	1018
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CRealQ_dense	40	41.003743	31367	1304
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.index_correct1	40	40.092736	32473	5916
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_b	40	40.031210	6424	2588
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_gt_reg_l	40	40.059124	7170	1516
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.tan_gt_0	40	40.044724	12665	2986
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.xnormalise_correct	40	40.042667	13091	1867
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.unorm_0	40	6.671673	1325	371	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4.1	synth with cache (only 1: induction d; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcopp_le_compat	40	40.071602	20681	3067
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_ok	40	40.049293	15444	858
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_id	40	40.046603	13398	2980
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_dne	40	40.044172	12054	1773
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.nat.of_to_nat	40	40.118280	36337	960
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_lt_reg_l	40	40.156679	21871	2333
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_correct	40	40.051002	14896	2284
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_correct	40	0.087385	8	1	7	synth with cache (only 1: apply two_power_pos_equiv).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono	40	40.118123	20640	3804
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zabs.Zabs_spec	40	40.071362	24337	1532
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_equal	40	40.083472	26005	2831
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_mul_r	40	40.054921	15049	912
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.app_del_tail_head	40	40.073360	26602	3266
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zmax.Zmax_spec	40	40.152798	33834	2150
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zmax.Zmax_left	40	0.317126	39	17	0.6.0	synth with cache (only 1: unfold Z.le, Z.max; only 1: intros; only 1: now case Z.compare_spec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.unorm_nonnil	40	8.967219	3050	930	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.0	synth with cache (only 1: unfold unorm; only 1: generalize (nzhead_nonzero d); only 1: destruct nzhead; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.unorm_D0	40	0.007665	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_inv	40	40.090568	34613	1933
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.unorm_iter_D0	40	0.026166	1	1	0	synth with cache (only 1: now induction n).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.join_spec	40	40.056174	17718	2370
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_mult	40	40.050690	17074	2559
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zmax.Zpos_max_1	40	1.967772	630	59	1.4.12.9	synth with cache (only 1: induction p; only 1: easy; only 1: now Z.nzsimpl; only 1: now Z.nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_2	40	40.047010	12376	2759
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.empty_iff	40	40.114850	46495	2022
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_add	40	40.050482	12355	3798
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.is_empty_iff	40	0.034603	2	1	1	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.singleton_iff	40	0.025866	2	1	1	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.inductively_barred_at_decidable	40	40.131699	47988	4057
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.ascii_N_embedding	40	40.153094	61532	3266
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40	40.103445	40747	3401
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.max_var_correct	40	40.091823	29528	3495
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nxor_semantics	40	40.104151	34569	2735
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Signed.of_to	40	40.091272	29206	2788
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Z_of_nat_prop	40	40.133373	53655	2521
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zmult_rem_idemp_l	40	40.052704	16614	3429
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.String_as_OT.lt_trans	40	40.116960	39478	3795
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_gt_tree	40	40.049305	10741	2166
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_union	40	40.028955	5463	926
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40	40.074147	29540	1534
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_1	40	1.470382	479	118	9.0.0.0.0.1	synth with cache (only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_wd	40	40.050230	10204	1573
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_bool_imp_le	40	40.094875	32762	4032
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qnot_eq_sym	40	0.016566	5	2	1.2	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.Dcompare_inf	40	0.059602	15	6	0.0.0.2	synth with cache (only 1: destruct r; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_Cmp	40	40.075004	25408	1528
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zlt_cases	40	40.198884	47498	2900
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_1_r	40	40.040608	5650	1345
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_continuity	40	40.026141	7355	1940
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_add	40	40.056867	14235	4725
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_empty	40	40.074951	22200	4638
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_cst	40	40.004563	893	217
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Pjump_xO_tail	40	40.046094	13741	2306
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.mapi_1	40	40.104101	38108	4164
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.equal_spec	40	40.066667	19907	3638
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40	40.126752	38003	3118
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_2	40	9.768847	2661	865	0.0.1.0.0.1.0.0.0.0.3.6.0	synth with cache (only 1: intros; only 1: revert H; only 1: rewrite for_all_filter; only 1: rewrite <- is_empty_iff; only 1: unfold Empty; only 1: intro H; only 1: generalize (H x); only 1: rewrite filter_spec; only 1: destruct (f x); only 1: auto; only 1: generalize (H x); only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid_rec	40	40.256018	21681	1932
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Signed.to_int_inj	40	40.130874	48035	2608
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Npdist_ultra	40	40.033420	7722	2713
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.lbal_spec	40	40.269227	28694	2798
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40	2.751402	1183	283	10.8	synth with cache (only 1: simpl_relation; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.same_genZ	40	40.066536	21507	1188
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_b	40	40.052556	11623	4075
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_ge_reg_l	40	40.038109	8981	1986
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.index_correct2	40	40.053868	14579	5329
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.tan_lt_0	40	40.031058	7865	2735
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.xnegate_correct	40	40.032460	8653	2301
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.inject_Q_mult	40	40.125983	12411	2160
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcle_minus_iff	40	40.684625	14279	1927
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_spec	40	40.036149	9988	2574
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_comp	40	40.063981	24783	1621
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_eq	40	40.065359	13220	1866
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.nat.to_of_nat	40	40.024699	8128	774
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_lt_reg_r	40	40.051205	13159	3227
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_is_exp	40	40.061163	20706	1723
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nleb_double_mono_conv	40	40.127471	30126	2924
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zabs.Zsgn_spec	40	40.094229	18841	1272
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi0	40	3.487778	1748	76	44	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_empty	40	40.055937	13779	5168
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_add	40	40.038918	8548	873
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.app_int_del_tail_head	40	40.049390	13314	4030
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi1	40	3.395089	1715	70	41	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nb_digits_unorm	40	40.099738	36314	2275
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double_plus_one	40	40.137346	56023	1218
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_pos	40	40.084892	29391	3398
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.join_ok	40	40.046623	14174	1859
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_1	40	40.028227	6856	1468
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_iff	40	40.108162	38526	2336
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl0	40	40.140647	49629	2563
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	40	40.092749	10635	1372
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_neq_iff	40	1.247092	268	74	0.4.3.0	synth with cache (only 1: rewrite add_spec; only 1: intuition; only 1: destruct H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.N_ascii_embedding	40	40.075972	25803	2272
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40	40.126061	52332	3237
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_iff	40	2.125803	713	82	0.1.0.19	synth with cache (only 1: constructor; only 1: rewrite remove_spec; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux	40	40.088414	22256	3687
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Por_semantics	40	40.060420	15859	4343
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Z_of_nat_set	40	40.142333	55327	2409
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Signed.to_of	40	40.076211	21776	5031
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zmult_rem_idemp_r	40	40.043876	12306	3066
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40	40.052175	12692	2266
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_find	40	40.073612	21248	1796
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersEx.PairOrderedType.lt_compat	40	40.052417	8224	1647
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_2	40	11.243830	1263	327	0.0.0.0.0.0.0.2.0.1.2	synth with cache (only 1: red; only 1: unfold Add, MP.Add; only 1: intros; only 1: do 2 (rewrite filter_iff; auto); only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_bool_comm	40	40.111099	38228	3376
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.Zcompare_rect	40	40.077675	25811	2845
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.Induction.bi_induction	40	40.052208	13911	2546
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.Zcompare_rec	40	0.052727	5	5	0.0.0.0.0	synth with cache (only 1: intros H1 H2 H3; only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40	40.054285	15839	1515
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zge_cases	40	40.278355	55531	2741
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_assoc	40	40.380510	8506	1395
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_comm	40	0.052633	7	3	0.4.0	synth with cache (only 1: intros; only 1: destruct (CRisRing R); only 1: apply Rmul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_reg_l	40	25.781210	21301	2252	5.0.9.8.2.13	synth with cache (only 1: intros x y z; only 1: red; only 1: intros; only 1: apply H; only 1: apply CReal_plus_lt_compat_l; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.derivable_pt_lim_ps_atan	40	40.031136	9372	1852
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.add_fold	40	40.055534	13361	4691
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_fun	40	40.085886	30740	2821
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_l	40	40.003705	745	147
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Pjump_pred_double	40	40.034910	9532	1499
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.mapi_2	40	40.111746	41398	4085
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.eq_dec	40	40.060900	19018	1512
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_reg_r	40	2.410637	357	118	1.0.0.0.0.3.0	synth with cache (only 1: intros; only 1: rewrite (CReal_plus_comm y), (CReal_plus_comm z) in H; only 1: intro abs; only 1: apply H; only 1: clear H; only 1: apply CReal_plus_lt_compat_l; only 1: exact abs).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_3	40	40.048923	13761	2857
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Signed.to_int_pos_surj	40	40.072578	21062	3388
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid	40	40.271579	122726	1906
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.064719	6	6	0.0.0.0.0.0	synth with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: assert (c | d) by auto; only 1: assert (d | c) by auto; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.mem_m	40	40.064578	22539	1966
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.lbal_ok	40	40.080241	12283	1070
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_Zeqb_ok	40	40.071526	23965	1877
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_reg_pos_r	40	40.069010	20480	4292
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_b	40	40.025092	6465	1109
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.index_correct3	40	40.084653	15435	3449
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_ge_0_3PI2	40	40.027184	5428	2839
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.Rup_nat	40	40.641358	49351	1046
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.cnf_normalise_correct	40	40.910221	13675	2059
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_minus_iff	40	40.206335	15945	1916
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_ge0	40	32.051678	22280	2022	0.0.1.2.32.2	synth with cache (only 1: intros a b; only 1: Z.swap_greater; only 1: intros; only 1: apply Z.div_pos; only 1: Z.order; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_opp	40	40.145839	58529	3993
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_trans	40	40.032256	5961	1056
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_is_exp	40	40.077569	27807	2571
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nor_semantics	40	26.540542	21871	2009	4.0.84	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite <- !Ntestbit_Nbit; only 1: now rewrite <- N.lor_spec).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40	40.146174	36341	3468
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zabs.Zabs_nat_le	40	40.091523	28712	2559
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_add	40	40.063840	17942	4288
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zmisc.iter_nat_of_Z	40	40.296827	12877	2432
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nzhead_revapp_0	40	40.117452	44620	3662
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_opp	40	40.105203	35896	1346
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ok	40	40.032413	8106	1690
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double	40	40.026596	6224	1218
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nzhead_invol	40	40.097154	30062	5452
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40	40.026546	6696	1028
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.nat.to_of_nat_iff	40	40.092613	1882	324
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_gt_ZERO	40	8.337780	6187	806	1.2.3.3.3.1.15	synth with cache (only 1: destruct x; only 1: Z.swap_greater; only 1: intros; only 1: easy; only 1: intros; only 1: split; only 1: now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40	40.062175	19396	2360
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.WeakKonigsLemma	40	40.124686	51494	2623
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40	40.124286	50118	4292
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_neq_iff	40	40.080147	19210	1378
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux'	40	40.114252	16069	2885
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.for_all_iff	40	0.075842	5	4	0.0.1.0	synth with cache (only 1: intros; only 1: split; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.exists_iff	40	0.091408	8	4	0.1.3.0	synth with cache (only 1: intros; only 1: split; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.elements_iff	40	0.713598	689	89	0.0.0.0.0.0.20	synth with cache (only 1: split; only 1: intros; only 1: apply <- elements_spec1; only 1: auto; only 1: intros; only 1: apply -> elements_spec1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lex_Opp	40	26.232829	16607	1724	2.2.1.12.6.6.4	synth with cache (only 1: intros a b n Hn; only 1: intros Ha Hb; only 1: rewrite Ha; only 1: induction n; only 1: trivial; only 1: trivial; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.natlike_ind	40	40.134618	51254	4217
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Signed.to_int_inj	40	40.079886	20563	5647
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.N_ascii_bounded	40	40.028318	9621	1139
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_bool_inv	40	0.271362	82	29	9	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_Zquot	40	40.042841	13605	1925
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.String_as_OT.cmp_eq	40	40.129155	50096	1892
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_sub_ext	40	13.497219	5570	454	39	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_add_0_r	40	0.114109	5	4	0.0.1.0	synth with cache (only 1: intros x; only 1: rewrite (ring_add_comm x); only 1: rewrite ring_add_0_l; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_in	40	40.033837	7313	785
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersEx.PairOrderedType.compare_spec	40	40.064957	23394	2364
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.union_filter	40	40.045816	10422	2156
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_bool_refl	40	40.171925	69545	3234
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_succ	40	40.069669	24431	1381
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_dec	40	40.243584	47001	1940
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40	8.156798	7874	1033	0.0.0.5.6.1.0.0.13.2.2.0	synth with cache (only 1: split; only 1: intros GAC_rel A B R; only 1: firstorder; only 1: apply (GAC_rel A B (fun x => exists y, R x y) R); only 1: firstorder; only 1: auto; only 1: intros OAC_rel A B P R H; only 1: firstorder; only 1: destruct (OAC_rel A B R) as (f, Hf); only 1: eauto; only 1: exists f; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare	40	40.069204	20698	1508
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_add_assoc1	40	3.518018	654	108	1.5.9.1	synth with cache (only 1: intros; only 1: rewrite <- ring_add_assoc; only 1: rewrite (ring_add_comm x); only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_seq	40	0.046656	19	6	4.1	synth with cache (only 1: intros n m; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	0.187004	65	21	7.1	synth with cache (only 1: intros; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_add_assoc2	40	0.478003	72	22	0.1.0.5.0	synth with cache (only 1: intros; only 1: rewrite (ring_add_comm y); only 1: rewrite <- (ring_add_assoc x); only 1: rewrite (ring_add_comm x); only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_bool_sym	40	2.479749	1996	260	0.0.0.27	synth with cache (only 1: induction 1; only 1: apply eq_true_iff_eq; only 1: rewrite !Qeq_bool_iff; only 1: now symmetry).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zgt_cases	40	40.309076	39153	3727
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_plus_distr_l	40	40.026839	6112	1162
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_plus_distr_r	40	0.314823	21	16	2.0.0	synth with cache (only 1: intros; only 1: destruct (CRisRing R); only 1: apply Rdistr_l).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.derivable_pt_ps_atan	40	40.032501	9748	2212
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_1	40	40.060844	15721	4388
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_2	40	0.028925	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set relations).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_trans	40	40.110199	36156	3012
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_add_r	40	40.005439	1626	129
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.mkPinj_ok	40	40.041490	12237	1634
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.map_1	40	40.094913	32595	3842
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_compat_l	40	40.254160	24788	2379
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_4	40	40.090477	29442	3606
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Signed.of_int_norm	40	40.075768	21770	3646
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_bezout	40	40.083313	26473	2304
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.singleton_m	40	40.082842	30036	3232
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40	40.143281	15226	2153
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ1_pos_sub	40	40.027315	5973	2249
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_lt_reg_pos_r	40	40.053564	12366	6000
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_o	40	40.038457	8454	3221
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_o	40	0.104993	10	6	0.1.0.1.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	14.785881	1730	477	0.4.8.1	synth with cache (only 1: destruct n; only 1: compute; only 1: nzsimpl; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.index_correct4	40	40.065205	22356	3061
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_o	40	0.347373	32	18	1.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition; only 1: auto with map).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.form1	40	40.040828	11665	2021
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_0_compat	40	40.453523	7413	1368
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_lt	40	40.072570	24568	3141
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.form2	40	2.052637	182	85	2.0.0.0.0.0.0.0	synth with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: rewrite <- (cos_neg q); only 1: replace (- q) with ((p - q) / 2 - (p + q) / 2) by field; only 1: rewrite cos_plus; only 1: rewrite cos_minus; only 1: ring_Rsqr).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcplus_le_compat	40	40.068864	20046	3128
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_mirr	40	40.103378	39737	3086
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_trans	40	40.043628	10706	2170
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.cnf_negate_correct	40	42.031885	13221	1448
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.string_of_list_ascii_of_string	40	5.179722	4297	884	0.19.0.0.0.0.0	synth with cache (only 1: elim s; only 1: simpl; only 1: easy; only 1: intros; only 1: simpl; only 1: rewrite ?H; only 1: now constructor).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Pand_semantics	40	40.067957	17044	4653
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	21.977361	51979	2494	0.1.1.0.38.21	synth with cache (only 1: intros l; only 1: induction l; only 1: simpl; only 1: auto; only 1: auto; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nltb_double_mono	40	40.060457	19988	2637
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nand_semantics	40	0.580679	163	78	0.0.0.1.0.0.0.0.0.1	synth with cache (only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite andb_false_r; only 1: simpl; only 1: rewrite <- Ntestbit_Nbit, <- !Ptestbit_Pbit; only 1: apply N.pos_land_spec).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zabs.Zabs_nat_lt	40	40.084387	26168	2280
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.add_fold	40	40.074091	23251	3296
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nzhead_revapp	40	40.108890	37508	3907
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ext	40	40.017882	4208	664
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_incr	40	40.086899	30400	3498
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.one_succ	40	10.601389	21228	255	0.2.0.0.2.195	synth with cache (only 1: generalize (PeanoNat.Nat.lt_succ_diag_r 0); only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro H; only 1: simpl; only 1: nzsimpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nztail_invol	40	40.074347	22518	2806
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.unorm_invol	40	0.032835	1	1	0	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40	40.044557	14488	1397
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.nat.to_of_nat_option_map	40	40.033557	8751	197
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_S	40	40.043112	11100	1412
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40	40.145494	53047	994
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	3.839610	6189	109	0.0.108	synth with cache (only 1: hnf; only 1: simpl; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_1	40	8.762079	3100	1096	0.0.0.0.0.0.2.6	synth with cache (only 1: intros i; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_2	40	0.038509	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	1.399830	3888	81	87	synth with cache (only 1: now BinInt.Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_succ	40	0.425666	62	11	6.1.0	synth with cache (only 1: intros l2; only 1: compute; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_correct_aux	40	40.057908	14288	3137
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.mem_b	40	40.071976	24675	2846
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Signed.to_int_pos_surj	40	40.101647	28278	5013
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.natlike_rec	40	40.136972	51362	4344
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_inv	40	40.091902	28776	4183
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zmin.Zmin_spec	40	40.099521	36489	1941
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.ascii_nat_embedding	40	40.142197	56573	2590
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_mult_le	40	40.057600	18169	3080
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.String_as_OT.cmp_antisym	40	40.102238	24392	3668
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40	40.078357	24570	3411
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_bst	40	40.041391	6939	2670
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zmin.Zmin_irreducible	40	4.092868	2718	120	68	synth with cache (only 1: Z.solve_min).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_union	40	40.034816	9335	1631
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_le_dec	40	40.363562	41033	1849
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40	40.217027	95010	5526
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40	0.114378	60	24	1.0.0.1.1.0.0	synth with cache (only 1: intros D_iota A P H; only 1: destruct D_iota with (P := P) as (x, H1); only 1: destruct H; only 1: auto; only 1: exists x; only 1: apply H1; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_1	40	40.075331	24568	2220
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_zero	40	40.058265	15705	398
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40	0.838787	948	150	1.0.14	synth with cache (only 1: compute; only 1: intros A B P R H; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40	0.297436	222	47	0.4.0.6.0	synth with cache (only 1: intros D_epsilon A P H; only 1: destruct D_epsilon with (P := P) as (x, H1); only 1: auto; only 1: exists x; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_gt_dec	40	1.181522	576	41	0.0.0.0.29	synth with cache (only 1: unfold Z.lt, Z.gt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_bool_trans	40	40.102292	30797	6096
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zle_bool_imp_le	40	40.311779	39066	2243
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zle_imp_le_bool	40	0.068420	8	4	0.0.4.0	synth with cache (only 1: unfold Z.le, Z.min; only 1: intuition; only 1: apply Z.leb_le; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_0_l	40	12.030115	3132	298	0.2.11.0.0.10	synth with cache (only 1: intros a; only 1: unfold Z.eq, Z.add; only 1: simpl in *; only 1: induction a; only 1: simpl; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRzero_double	40	40.031545	6278	2299
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.ps_atan_continuity_pt_1	40	40.030306	8334	2078
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union_inter	40	40.057156	13894	4169
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.empty_1	40	0.045404	108	9	15	synth with cache (only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.empty_sorted	40	0.009906	3	1	2	synth with cache (only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_not_eq	40	40.122569	42964	4356
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_r	40	40.007219	2084	113
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.pow_pos_add	40	40.049398	16675	686
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.map_2	40	40.084480	26579	3982
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_lt_compat	40	40.450098	23634	2500
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_exists	40	40.069101	14185	2930
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Signed.of_inj_pos	40	40.056011	15940	2780
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_mult	40	40.055398	5752	1155
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.Comp'	40	0.993783	120	28	0.0.0.0.4.4	synth with cache (only 1: red; only 1: red; only 1: intros; only 1: setoid_replace y with x; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.add_m	40	40.031687	6149	3380
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmake_Qdiv	40	10.210261	7969	830	0.34.0.11	synth with cache (only 1: Z.bitwise; only 1: simpl; only 1: Z.nzsimpl'; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_ok	40	40.208812	6947	755
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_add	40	40.068118	22111	2298
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40	40.067491	21406	3153
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_b	40	40.034963	6136	3167
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_ge	40	40.117346	21869	2149
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_le	40	0.026671	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_le_compat_r	40	40.043516	10744	2218
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.form3	40	40.032944	8499	1720
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_le_trans	40	40.045144	12539	1949
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_plus	40	40.064583	21933	3359
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.eval_nformula_dec	40	40.022256	5619	1442
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l	40	40.061028	3648	1038
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.list_ascii_of_string_of_list_ascii	40	40.251248	116322	3338
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_trans	40	40.125698	46924	5158
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_compat	40	0.112961	30	8	4	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nltb_double_plus_one_mono	40	40.065341	21270	2973
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Pdiff_semantics	40	40.091002	29625	3656
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Ndiff_semantics	40	0.261666	55	29	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite andb_true_r; only 1: simpl; only 1: apply N.pos_ldiff_spec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nzhead_rev	40	40.046331	12890	2099
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.pow_pos_add	40	40.046119	14821	792
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_succ_l	40	20.770027	5496	581	1.0.0.24	synth with cache (only 1: intros a n; only 1: unfold Z.succ, Z.pred, Z.eq; only 1: simpl; only 1: now rewrite add_succ_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi_aux	40	40.028382	3881	867
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.norm_invol	40	40.119032	50788	538
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_gt_tree	40	40.088539	30816	2517
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_pred	40	40.079672	25625	1809
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_M_r	40	40.074832	25516	1580
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_0_r	40	4.931417	275	71	0.3.4	synth with cache (only 1: compute; only 1: intros (Hr, Hr'); only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.form4	40	12.345114	1199	650	0.0.0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: pattern q at 3; only 1: replace q with ((p + q) / 2 - (p - q) / 2); only 1: rewrite sin_plus; only 1: rewrite sin_minus; only 1: ring; only 1: pattern q at 3; only 1: rewrite double_var; only 1: unfold Rdiv; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union_inter	40	40.069251	18935	4884
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.max_var_nformalae_correct	40	40.059990	14863	3921
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.nat.to_nat_bounded	40	40.043350	15285	190
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Efficient_Rec.R_wf	40	40.057592	15092	1708
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.empty_b	40	40.149623	62225	2320
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Signed.of_int_norm	40	40.113609	37486	5455
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zne_left	40	40.437556	27407	2532
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lex_Eq	40	40.050362	14606	2309
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zegal_left	40	0.020243	2	1	1	synth with cache (only 1: now rewrite <- Z.sub_move_0_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zle_left	40	0.009055	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	0.076833	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zle_left_rev	40	0.020093	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zlt_left_rev	40	0.009315	2	1	1	synth with cache (only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zlt_left_lt	40	0.009065	1	1	0	synth with cache (only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_divides	40	40.036065	10539	1912
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.nat_ascii_embedding	40	40.034129	10569	1008
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.String_as_OT.cmp_lt	40	40.119107	42524	1960
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40	40.050583	11156	3460
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_find	40	40.061678	17822	2397
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zmin.Zmin_le_prime_inf	40	40.089517	32380	1722
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_1	40	40.057489	15910	3677
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zmin.Zpos_min_1	40	0.541391	184	23	12.0	synth with cache (only 1: unfold Z.min, Pos.min; only 1: now induction p).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40	40.058607	17318	2143
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40	40.274767	117996	6507
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_ge_dec	40	40.314386	45898	2855
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zle_bool_antisym	40	40.283341	26998	2235
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_0_r	40	40.369155	1055	170
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_ge_dec	40	3.502096	850	93	0.0.0.0.3.23	synth with cache (only 1: unfold Z.lt, Z.le; only 1: unfold Z.ge; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.In_compat	40	0.043024	1	1	0	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_diff_inter	40	40.041997	8680	4268
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_eq_DatanSeq_interv	40	40.039758	13200	1883
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.is_empty_1	40	40.222204	12759	973
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.add_spec	40	40.079725	25649	3305
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_nz	40	40.003248	605	160
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.ceqb_spec	40	40.094468	26356	223
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_l	40	40.100765	35018	3540
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_compat	40	40.235501	17451	2111
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_1	40	40.067342	20421	3428
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.rel_prime_bezout	40	40.077450	26138	2047
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.remove_m	40	40.034450	5753	3611
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_comp	40	40.050120	17026	1823
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	40	40.162505	17122	2153
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_mul	40	40.033626	7322	3389
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_gt_reg_neg_r	40	40.052691	14667	4303
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_r	40	5.567886	1618	530	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction i; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_ext	40	0.052577	7	3	0.4.0	synth with cache (only 1: intros x y H; only 1: rewrite H; only 1: rrefl).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_b	40	40.049152	10655	3048
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inf_iff	40	40.126810	14962	2992
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.string_of_list_byte_of_string	40	37.411228	24389	2945	0.0.5.0.15.13.0.0.0.1	synth with cache (only 1: elim s; only 1: reflexivity; only 1: intros; only 1: cbn; only 1: rewrite <- H  at 2; only 1: Morphisms.f_equiv; only 1: cbv[ascii_of_byte byte_of_ascii]; only 1: destruct a; only 1: rewrite to_bits_of_bits; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mult_div_ge	40	40.088226	31999	2966
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40	40.062499	9776	2240
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_gt_cases	40	40.041106	10165	2186
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_neq	40	0.034397	4	4	0.0.0.0	synth with cache (only 1: intros n m; only 1: intro H; only 1: rewrite Rlt_le_neq in H; only 1: now destruct H).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_minus	40	40.077712	23551	3486
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.xdenorm_correct	40	40.084825	28305	2189
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_compat_r	40	40.038029	2637	606
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40	40.092744	34909	2448
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nltb_double_mono_conv	40	40.082339	27235	3920
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_reg_l	40	1.370328	184	50	0.0.0.5.1.0	synth with cache (only 1: intros; only 1: intro abs; only 1: apply H0; only 1: apply (CReal_mult_lt_compat_l x); only 1: exact H; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Pbit_faithful_0	40	40.140844	51045	4112
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.is_empty_2	40	15.435041	13246	1095	5.7.7.8.1.24	synth with cache (only 1: intros m a b Ha; only 1: red; only 1: destruct m; only 1: intuition; only 1: inversion_clear H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.rev_nztail_rev	40	40.129661	56560	657
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nzhead_D0	40	0.010398	3	1	2	synth with cache (only 1: now destruct u).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nzhead_iter_D0	40	0.009917	1	1	0	synth with cache (only 1: now induction n; simpl; [  | rewrite IHn ]).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ceqb_spec	40	40.063262	20514	196
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi	40	40.026459	4606	773
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nzhead_app_nzhead	40	40.066477	23653	1191
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.merge_spec	40	40.103620	36892	3649
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct1	40	40.053897	19405	796
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_0_spec	40	40.052940	18174	1276
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_succ_r	40	40.051534	3423	674
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_increasing_0	40	40.043914	13032	2823
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_diff_inter	40	40.049791	11090	4877
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_0_l	40	0.984490	42	15	0.2.0.2.0	synth with cache (only 1: unfold Z.mul, Z.eq; only 1: intro H; only 1: simpl; only 1: rewrite <- !mul_add_distr_l; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.in_bdepth	40	40.054303	14796	2865
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.nat.of_nat_None_iff	40	40.020233	4849	357
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec2	40	40.161067	63341	3881
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_b	40	40.065361	23804	1008
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Signed.of_inj_pos	40	40.060341	16037	4086
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_equal	40	40.077122	23278	3237
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot2_odd_remainder	40	40.050682	16995	1321
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zlt_left	40	40.274429	11981	1291
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.nat_ascii_bounded	40	40.105752	4104	222
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.String_as_OT.compare_helper_lt	40	40.230403	104679	634
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.isok_iff	40	40.086532	10516	2163
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_mapsto	40	40.063214	3577	589
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_2	40	40.070595	20048	3641
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_refl	40	40.096702	34621	2588
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zle_bool_trans	40	40.359953	53890	2952
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40	40.219002	13859	1546
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.mem_spec	40	40.074893	24101	3515
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_0_l	40	40.074295	2203	399
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_le_dec	40	40.285237	34277	1721
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union	40	40.038093	7085	4068
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.atan_eq_ps_atan	40	40.023948	6405	1700
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40	2.672721	2166	321	10.3.7	synth with cache (only 1: intros; only 1: intro x; only 1: apply H).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_div	40	40.003471	459	143
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.mkPX_ok	40	40.065322	20727	585
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.add_1	40	40.092059	29759	3047
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.Zred_factor0	40	0.078620	1	1	0	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.Zred_factor1	40	0.060437	10	9	1.0.0.0.0.0	synth with cache (only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: apply Z.add_diag).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.add_2	40	0.871158	325	77	3.0.2.4	synth with cache (only 1: intro H; only 1: intros; only 1: apply <- add_spec; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_opp_r	40	40.686418	11123	1653
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.bezout_rel_prime	40	40.050281	16788	1287
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_2	40	40.099830	25203	3237
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.union_m	40	40.030563	9695	1250
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qopp_comp	40	40.065164	19480	3646
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_le_gt_dec	40	6.890448	1978	311	0.0.0.0.3.16	synth with cache (only 1: unfold Z.le, Z.ge; only 1: unfold Z.gt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	40	40.025150	4416	384
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_gt_le_dec	40	0.069054	14	7	0.0.2.0.0	synth with cache (only 1: elim Z_le_dec; only 1: auto with arith; only 1: constructor; only 1: Z.swap_greater; only 1: now apply Z.nle_gt).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_ge_lt_dec	40	0.060199	15	6	2.2.1	synth with cache (only 1: elim Z_lt_ge_dec; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec3	40	19.018635	11022	2067	0.0.2.0.2.2.2.4.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros P Ho Hrec; only 1: induction z as [z IH] using (well_founded_induction_type R_wf); only 1: destruct z; only 1: intros Hz; only 1: apply Ho; only 1: intros Hz; only 1: set (y := Z.pred (Z.pos p)); only 1: assert (LE : 0 <= y) by (unfold y; now apply Z.lt_le_pred); only 1: assert (EQ : Z.pos p = Z.succ y) by (unfold y; now rewrite Z.succ_pred); only 1: apply Hrec, IH; only 1: split; only 1: split; only 1: trivial; only 1: apply Z.lt_pred_l; only 1: trivial; only 1: intros Hz; only 1: now destruct Hz).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_gt_lt_contravar	40	40.054983	15149	2880
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_lt_gt_contravar	40	0.149286	35	15	4.2	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_lt_contravar	40	0.064357	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp, Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_morph	40	40.032965	10273	1137
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.map2.gmap2	40	40.073836	24553	3341
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_gt_contravar	40	0.128913	31	16	1	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_b	40	40.075768	22202	3306
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_le_ge_contravar	40	1.631509	245	108	0.4.0.3.0	synth with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_ge_le_contravar	40	0.078017	33	11	0.2	synth with cache (only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_le_contravar	40	0.180054	26	16	2	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_ge_contravar	40	0.054947	4	4	0.0.0.0	synth with cache (only 1: unfold Rge; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.isok_iff	40	40.171264	12536	2283
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.isok_Ok	40	0.068433	162	12	18	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.list_byte_of_string_of_list_byte	40	40.222813	100977	3456
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mult_div_ge_neg	40	40.079912	28111	3007
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_ngt	40	40.048357	12715	2473
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_lt_compat_r	40	40.049798	11503	2516
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_mult	40	40.075817	25702	3431
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.denorm_correct	40	40.070524	21854	2488
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.compare_spec	40	40.042259	14392	1429
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40	40.063037	18965	4556
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_reg_r	40	40.055065	4839	824
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Pbit_faithful	40	40.123648	41534	4652
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_const	40	4.515376	4245	444	0.0.0.0.36	synth with cache (only 1: red; only 1: intros; only 1: unfold derivable_pt; only 1: exists 0; only 1: apply derivable_pt_lim_const).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.mem_1	40	40.230148	5432	1017
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.revapp_nil_inv	40	40.086195	28867	3552
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ok	40	40.028092	8540	511
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_bounded	40	40.080574	28005	3422
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.merge_ok	40	40.039321	10997	1937
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.unorm_app_unorm	40	40.030482	9924	607
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct2	40	40.050818	16010	689
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_split	40	40.045288	11696	2379
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_increasing_1	40	40.025397	5715	2469
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union	40	40.046813	9545	4860
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40	40.035442	8581	1135
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Binary.ZBinary.TestOrder.test	40	0.009958	1	1	0	synth with cache (only 1: BinInt.Z.order).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_Psatz_sound	40	40.267590	11575	1329
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zge_left	40	38.614207	15079	2006	0.35.7.2	synth with cache (only 1: intros; only 1: apply Z.le_0_sub; only 1: Z.swap_greater; only 1: now rewrite <- ?Z.succ_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zgt_left	40	0.388761	41	15	0.0.0.0.1	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: rewrite Z.add_shuffle0; only 1: change (-1) with (- Z.succ 0); only 1: now apply Z.le_0_sub, Z.le_succ_l, Z.lt_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.nat_N_Z	40	0.269965	62	20	2.0.0.3.1	synth with cache (only 1: induction n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zgt_left_gt	40	0.044186	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_neq_b	40	40.027880	5401	2425
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zgt_left_rev	40	0.047037	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_gt	40	40.072856	25078	2191
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_odd	40	40.028664	8424	1088
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.ascii_of_byte_of_ascii	40	40.053031	5445	321
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.String_as_OT.compare_helper_gt	40	40.225866	99796	621
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.isok_Ok	40	40.223843	65125	2478
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.String_as_OT.compare_helper_eq	40	0.024936	4	1	3	synth with cache (only 1: now apply Ascii_as_OT.cmp_eq).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.of_to_N	40	40.043164	9132	4838
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_mapsto	40	40.084787	25349	3164
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_opp_l	40	28.539721	4447	1572	0.0.0.0.0.0.0.0.0.0.0.4.0	synth with cache (only 1: intros [xn limx]; only 1: rewrite CReal_plus_comm; only 1: apply CRealEq_diff; only 1: intros; only 1: unfold CReal_plus, CReal_opp, inject_Q, proj1_sig; only 1: rewrite Qred_correct; only 1: setoid_replace (xn (2 * n)%positive + - xn (2 * n)%positive - 0)%Q with 0; only 1: unfold Qle; only 1: simpl; only 1: unfold Z.le; only 1: intro absurd; only 1: inversion absurd; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_3	40	40.066470	18370	2294
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_sym	40	40.074060	24977	1972
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zle_bool_total	40	40.277220	21714	3526
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeuclid.ZEuclid.mod_wd	40	0.086825	3	3	0.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: Z.bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeuclid.ZEuclid.div_wd	40	0.065669	1	1	0	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_iff	40	40.131838	24651	3280
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRopp_mult_distr_r	40	40.020988	3457	2051
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_plus	40	40.068664	25359	2299
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Alt_PI_eq	40	40.027480	7885	2279
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40	40.222013	66139	4051
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_Ok	40	1.951199	646	216	0.0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: induction l; only 1: intuition; only 1: simpl; only 1: rewrite andb_true_iff; only 1: rewrite negb_true_iff; only 1: intros H; only 1: destruct H; only 1: constructors; only 1: rewrite <- mem_spec; only 1: congruence; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PaddC_ok	40	40.084508	20300	618
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEadd_ext	40	40.020889	358	117
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.Zred_factor2	40	40.148974	2978	557
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.add_3	40	40.097677	32832	3575
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.Zred_factor3	40	0.715875	40	8	3	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsub_ext	40	1.343714	3	3	0.0.0	synth with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Gauss	40	40.068125	23932	2378
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_3	40	40.071109	22067	3097
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEmul_ext	40	1.320893	3	3	0.0.0	synth with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_m	40	40.055136	15914	2279
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qminus_comp	40	40.054412	16350	2468
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.ins_spec	40	40.061108	18725	2705
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_le_lt_eq_dec	40	40.072135	21474	2863
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.empty_1	40	1.122668	851	119	9.20	synth with cache (only 1: compute; only 1: inversion_clear 1).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_rec	40	40.154185	62693	3069
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.empty_NoDup	40	0.117614	114	16	0.2.11	synth with cache (only 1: unfold PX.eqk, PX.eqke; only 1: compute; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.Nth	40	40.015047	3854	1209
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.map2_1	40	40.082185	28801	3507
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.Neqb_ok	40	0.442863	103	39	0.2.0.0.0.0.0.1	synth with cache (only 1: intros [| ] [| ]; only 1: simpl; only 1: now try N.order'; only 1: now try N.order'; only 1: now try N.order'; only 1: simpl; only 1: rewrite Pos.eqb_eq; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NMORPHISM.radd_ext4_Proper	40	0.018291	1	1	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_o	40	40.090418	28200	3309
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.eq_dec	40	0.126261	28	8	0.0.7	synth with cache (only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40	40.055820	16672	2689
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	40	0.026976	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	40	0.026297	3	3	0.0.0	synth with cache (only 1: intros l x y H H'; only 1: rewrite <- H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	40	0.024492	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	40	0.025238	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_0_le_ge_contravar	40	0.151401	30	14	0.0.0.4	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.023331	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.mem_spec	40	40.084986	15421	2952
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_ind	40	3.417649	1368	434	2.0.1.0.0.3.1.0.0	synth with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_exact_full_1	40	40.103190	38579	3928
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_nge	40	40.057120	16527	2496
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcpower_1	40	40.058368	18542	1989
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.eval_pexprSC	40	40.099496	35438	1813
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	40	0.300513	65	15	2.5.1	synth with cache (only 1: simpl_relation; only 1: compute in H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_eqk	40	0.253848	59	12	6.1	synth with cache (only 1: induction 1; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	40	0.068917	3	1	2	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_refl	40	0.006221	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	40	0.025606	5	2	3.0	synth with cache (only 1: destruct p; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_refl	40	0.126257	9	4	1.0.1	synth with cache (only 1: intros; only 1: unfold eqk, eqke; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	40	3.578727	1547	371	6.0.4.0.0.0.0.0.0	synth with cache (only 1: simple induction l; only 1: simpl; only 1: intro; only 1: inversion 1; only 1: simpl; only 1: intuition; only 1: constructor; only 1: subst; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_sym	40	0.012800	2	2	0.0	synth with cache (only 1: unfold eqk, eqke; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	40	0.012082	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_sym	40	0.026620	8	4	3.0.1.0	synth with cache (only 1: unfold eqk, eqke; only 1: intros n m; only 1: intros [? ?]; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_trans	40	0.097789	53	11	5.2	synth with cache (only 1: intros i j Hi Hj E; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	40	0.152773	81	16	4.0.4	synth with cache (only 1: intros (U, V); only 1: compute in *; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	40	0.008333	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	40	0.008585	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	40	0.011208	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nltb_Ncompare	40	40.067994	20306	5270
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PsubC_ok	40	12.080145	1073	587	0.2.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_rec	40	3.978987	1493	439	0.0.1.0.0.0.0.0.0.0.0.1.0.1	synth with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: intros Hx; only 1: destruct x; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: assert (0 < 0) by now apply Z.le_lt_trans with y; only 1: discriminate; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: now destruct Hx).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_induction	40	0.024520	3	3	0.0.0	synth with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.le_reflexive	40	0.142071	323	19	25	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	1.029857	423	99	1.4.0.7	synth with cache (only 1: induction 1; only 1: compute in H; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.SetoidClass.setoid_refl	40	0.006351	2	1	1	synth with cache (only 1: apply _).
coq-tactician-stdlib.8.12.dev	Coq.Classes.SetoidClass.setoid_sym	40	0.006548	1	1	0	synth with cache (only 1: typeclasses eauto).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nbit_faithful	40	40.090193	31049	4136
coq-tactician-stdlib.8.12.dev	Coq.Classes.SetoidClass.setoid_trans	40	0.006785	1	1	0	synth with cache (only 1: typeclasses eauto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.le_antisym	40	0.821041	326	23	2.22	synth with cache (only 1: intros m IH; only 1: PeanoNat.Nat.order).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Reflexive	40	0.014545	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Symmetric	40	0.010438	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.le_trans	40	0.054676	14	8	0.2.1.0	synth with cache (only 1: red; only 1: intros n m p; only 1: intros; only 1: PeanoNat.Nat.Private_Tac.order).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Transitive	40	0.051243	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Irreflexive	40	0.009953	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Reflexive	40	0.154412	144	17	0.0.15	synth with cache (only 1: split; only 1: CRelationClasses.simpl_crelation; only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Symmetric	40	0.032209	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.le_Order	40	0.685635	160	81	2.0.0.0.0.0.0.0.0.3	synth with cache (only 1: split; only 1: red; only 1: auto with arith; only 1: red; only 1: intros; only 1: apply PeanoNat.Nat.le_trans with y; only 1: auto; only 1: auto; only 1: red; only 1: PeanoNat.Nat.order).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.mem_2	40	40.120953	15498	4508
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_scal	40	40.082705	29373	3702
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.triv_nat	40	0.131004	93	16	9.0	synth with cache (only 1: intro n; only 1: now PeanoNat.Nat.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_Rsqr	40	0.065702	5	5	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (2 * x); only 1: apply derivable_pt_lim_Rsqr).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Transitive	40	0.590324	35	9	2.0.5	synth with cache (only 1: compute; only 1: intros x y z (Hxy, Hxy') (Hyz, Hyz'); only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelProd_Instances.FstRel_ProdRel	40	0.017961	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_lt_cancel	40	7.554265	2813	592	0.5.0.8.1.1	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: intro Hnotz; only 1: eapply Rlt_not_le; only 1: eauto; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_gt_cancel	40	0.104774	46	15	1.5	synth with cache (only 1: unfold Rgt; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelProd_Instances.SndRel_ProdRel	40	0.331497	316	30	24	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelProd_Instances.FstRel_sub	40	0.011730	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelProd_Instances.SndRel_sub	40	0.016000	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.rev_nil_inv	40	40.059891	16070	4028
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelProd_Instances.pair_compat	40	0.436273	63	8	0.11	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelProd_Instances.fst_compat	40	0.012043	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ext	40	40.024425	5745	1042
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelProd_Instances.snd_compat	40	0.011809	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_spec	40	40.038889	13715	1372
coq-tactician-stdlib.8.12.dev	Coq.micromega.Refl.make_impl_true	40	0.231682	63	20	2.3.0.1	synth with cache (only 1: induction l; only 1: constructor; only 1: intros HF; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Sorted.defs.HdRel_inv	40	0.154456	23	7	3.3	synth with cache (only 1: inversion 1; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Sorted.defs.Sorted_inv	40	0.248483	56	22	5.0.0	synth with cache (only 1: inversion 1; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.remove_spec	40	40.047758	15079	2325
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.norm_app_int_norm	40	40.037775	9229	2557
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40	5.826846	1092	232	3.1.3.6	synth with cache (only 1: intro n; only 1: unfold relation_equivalence in *; only 1: intros x x' Exx' y y' Eyy'; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Refl.make_impl_map	40	1.329728	532	121	1.1.6.2.1	synth with cache (only 1: induction l; only 1: intros; only 1: reflexivity || discriminate; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	0.085456	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	0.017686	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	0.015434	3	2	1.0	synth with cache (only 1: do 2 red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	0.116454	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	0.033869	5	3	0.2.0	synth with cache (only 1: intro; only 1: compute; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	0.128818	15	8	0.0.0.0.0.2	synth with cache (only 1: split; only 1: reduce; only 1: firstorder; only 1: reduce; only 1: unfold pointwise_relation in *; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct	40	40.176935	65856	2679
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelCompFun_compat	40	4.342892	2319	179	0.0.25.4.0	synth with cache (only 1: repeat red; only 1: intros x x' Hxx' y y' Hyy'; only 1: apply H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	10.010488	7308	1300	1.0.2.4.0.0.1.12	synth with cache (only 1: intros [| ] ?; only 1: auto; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: right; only 1: transitivity y; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Ztrichotomy_inf	40	40.235967	40647	2224
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40	40.058789	17159	2688
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.nil_cons	40	0.086797	41	15	8	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Refl.make_conj_cons	40	3.206438	1338	423	1.1.2.1.1.3	synth with cache (only 1: induction l; only 1: intuition; only 1: simpl; only 1: easy; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_decreasing_0	40	40.031034	8451	2356
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Ztrichotomy	40	1.673928	496	183	2.0.0.0.1.1.0.0.0	synth with cache (only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: left; only 1: auto; only 1: left; only 1: auto; only 1: now intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_plus	40	40.063221	12480	1665
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_eq_cases	40	40.034937	9688	1631
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	40	2.295521	1463	285	1.1.1.2.1.11	synth with cache (only 1: induction l as [| x xs Hl]; only 1: intuition; only 1: intro; only 1: intro; only 1: intro; only 1: now rewrite H).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_altdef	40	12.599237	5419	1675	0.0.0.5.1.0.2.0.8	synth with cache (only 1: intros HE; only 1: split; only 1: induction 1; only 1: auto; only 1: auto; only 1: induction 1; only 1: constructor; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40	40.067851	19520	3072
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N_nat_Z	40	40.087623	23253	2311
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_b	40	40.026401	4988	2779
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.positive_nat_Z	40	0.047001	5	5	0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.positive_N_Z	40	0.033250	4	3	0.1.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: simpl; only 1: f_equal).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.positive_N_nat	40	0.013805	3	2	0.1	synth with cache (only 1: unfold N.div2, N.to_nat; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zle_mult_approx	40	40.380651	14486	1723
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_eq	40	40.070236	22956	3197
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.positive_nat_N	40	0.066370	8	7	0.1.0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_cons	40	1.478889	200	96	0.1.1.6	synth with cache (only 1: firstorder using StronglySorted_rect; only 1: inversion H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_nil	40	0.060588	11	4	0.2.0	synth with cache (only 1: intros; only 1: intuition; only 1: inversion_clear H).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_even	40	40.048321	14607	2667
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z_N_nat	40	0.279753	249	50	15	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.byte_of_ascii_of_byte	40	40.027652	3961	901
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.In_1	40	40.170965	29674	4219
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListDec.Dec_in_Prop.In_decidable	40	11.484708	4993	827	6.3.4.15	synth with cache (only 1: induction l as [| a l IH]; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.eq_dec	40	0.026952	2	1	1	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.xI_succ_xO	40	0.034803	39	7	9	synth with cache (only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_in	40	40.079693	25329	3328
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_irrefl	40	5.048969	6382	627	7.8.6.3.7	synth with cache (only 1: intros LE EQ; only 1: revert EQ; only 1: intro H; only 1: apply BinInt.Z.lt_nge in H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.to_of_N	40	40.067024	25911	1732
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z_nat_N	40	2.424022	957	76	0.0.5.3.29	synth with cache (only 1: destruct n; only 1: now Z.nzsimpl; only 1: Nat2N.nat2N; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	40	17.044712	25143	1371	0.4.1.2.1.0.2.0.48.3	synth with cache (only 1: intros; only 1: elim H; only 1: intros; only 1: exists y; only 1: firstorder; only 1: compute in H; only 1: intuition; only 1: compute in H; only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs_N_nat	40	0.549969	50	5	11	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_proper_r	40	40.048727	7616	2048
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_4	40	40.052917	13804	3721
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_trans	40	40.079169	25730	2523
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NMORPHISM.rmul_ext4_Proper	40	27.142528	12981	559	56.22	synth with cache (only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zle_bool_plus_mono	40	40.080033	31300	2151
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_proper_l	40	5.243876	1000	635	0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: split; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_exact_full_2	40	26.900897	12199	1795	0.0.0.6.19	synth with cache (only 1: intros a0 a; only 1: intros E; only 1: rewrite Z.div_exact; only 1: auto; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zone_pos	40	0.021328	27	3	9	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeuclid.ZEuclid.div_mod	40	40.112757	47078	3577
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRopp_mult_distr_l	40	40.021212	3487	1857
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40	40.075254	25418	2772
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40	40.223077	62571	5593
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_spec	40	40.124362	16249	3641
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.PI_ineq	40	40.034980	10771	2327
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs_nat_N	40	9.767702	9342	193	0.0.0.0.0.119	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply positive_nat_N; only 1: apply positive_nat_N).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.id	40	0.010575	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.remove_spec	40	40.075126	24150	3966
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj	40	0.174776	31	21	1.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: now try N.order'; only 1: intros Hn; only 1: easy || now destruct Hb; only 1: intros Hn; only 1: easy || now destruct Hb; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40	35.178719	33741	4289	1.5.2.21.5	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: compute in *; only 1: setoid_rewrite Hx; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.Zred_factor4	40	40.031142	4779	756
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcpower_0	40	31.431995	21011	1727	0.3.6.0.1.9.13.3	synth with cache (only 1: unfold Q2Qc; only 1: intro m; only 1: destruct m; only 1: intros H; only 1: Nat.order; only 1: simpl; only 1: intro H; only 1: auto with qarith).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.MoreInt.eqb_eq	40	40.351054	60137	3305
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.Zred_factor5	40	0.376349	12	4	0	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.Zred_factor6	40	0.015476	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_iff	40	1.127569	116	79	1.0.3.2	synth with cache (only 1: split; only 1: apply SuccNat2Pos.inj; only 1: intros EQ; only 1: now Morphisms.f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.new_var	40	0.046640	22	6	0.4.2	synth with cache (only 1: intros; only 1: exists x; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	40	0.910827	1625	50	56	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA1	40	0.019945	2	2	0.0	synth with cache (only 1: intros; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.is_nonneg	40	0.070489	24	10	0.2.0.2.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: Z.order; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA2	40	0.060725	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_0	40	0.008139	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_pos	40	0.009059	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.rel_prime_mult	40	40.062470	20704	2273
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_4	40	40.088926	31068	2999
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEopp_ext	40	40.003064	464	115
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_m	40	40.054339	15384	2355
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_comp	40	40.051367	16623	2697
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_compare	40	0.925548	142	55	1.0.0.2.0.3.0	synth with cache (only 1: destruct n, m; only 1: easy || now destruct y; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.ins_ok	40	40.029048	6262	662
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.empty	40	40.421502	164229	566
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.Zlt_cotrans	40	40.378013	33797	2784
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.is_empty_1	40	40.104202	18338	1490
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	40	40.269955	11095	2099
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.map2_2	40	40.052031	14363	2390
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	40	0.651308	294	57	2.0.0.4.3	synth with cache (only 1: intro x; only 1: intros n H; only 1: unfold if_zero; only 1: rewrite recursion_0; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.eval_f_morph	40	40.308465	38573	4334
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_b	40	40.052621	12324	2823
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_le	40	3.808502	1388	359	2.4.0.0.0.0.4.1	synth with cache (only 1: unfold N.leb, N.le; only 1: destruct n, m; only 1: reflexivity; only 1: simpl; only 1: easy'; only 1: simpl; only 1: now split; only 1: easy').
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.map_simpl	40	0.060515	19	6	1.0.4	synth with cache (only 1: induction l as [| a tail]; only 1: reflexivity; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.Subset_m	40	4.614510	1398	329	7.8	synth with cache (only 1: intros x y Hx; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pos_sub_spec	40	40.180430	20442	4350
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zone_min_pos	40	12.414278	3174	510	1.11.0.5.8	synth with cache (only 1: intros; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: apply Z.leb_le; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_inf	40	40.158035	27079	3191
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_alt.Piter_mul_acc	40	40.219104	11389	830
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_lt	40	1.623075	335	158	1.11	synth with cache (only 1: unfold Z.lt, Z.le; only 1: now rewrite inj_compare).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zcompare_Gt_trans	40	40.286049	26448	3521
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_ge	40	0.022706	3	2	0.1	synth with cache (only 1: unfold Z.le, Z.ge; only 1: now rewrite inj_compare).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_l	40	40.038492	4924	908
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_gt	40	0.024452	5	2	0.3	synth with cache (only 1: unfold Z.lt, Z.gt; only 1: now rewrite inj_compare).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_def.Zpower_theory	40	40.154071	12357	954
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_equiv	40	40.230334	40332	1345
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.eval_formulaSC	40	40.062449	19043	2029
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zle_is_le_bool	40	1.867279	717	156	2.10.3	synth with cache (only 1: symmetry; only 1: revert m; only 1: apply Z.leb_le).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Env.S.jump_add	40	40.103296	39139	1814
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation.CPermutation_Permutation	40	40.173768	31450	3963
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge	40	40.183147	43586	5623
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_trans	40	40.175983	21931	2517
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zcompare_opp	40	2.445034	670	264	1.0.0.0.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos.compare_antisym; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite <- ?Pos.compare_antisym).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Ncompare_Gt_Nltb	40	40.066507	19869	5133
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_equiv	40	0.361231	262	49	1.6.0.4.3	synth with cache (only 1: split; only 1: auto; only 1: auto; only 1: intros l1 l2; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_equiv	40	0.038983	4	4	0.0.0.0	synth with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_aux_ok	40	40.018756	3778	1662
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zge_is_le_bool	40	1.732684	637	140	0.3.0.10.0	synth with cache (only 1: unfold Z.leb, Z.le; only 1: split; only 1: now case Z.compare_spec; only 1: Z.swap_greater; only 1: apply Z.leb_le).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_rec	40	40.072942	23068	2912
coq-tactician-stdlib.8.12.dev	Coq.Classes.EquivDec.unit_eqdec_obligation_1	40	40.250166	53976	2227
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nbit_faithful_iff	40	40.087974	28860	4622
coq-tactician-stdlib.8.12.dev	Coq.Classes.SetoidClass.nequiv_equiv_trans	40	40.155913	25384	3747
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation.Permutation_nil	40	40.063886	20165	3984
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqke_eqk	40	1.376768	683	166	0.1.1.3.2.3	synth with cache (only 1: induction 1; only 1: compute in H; only 1: destruct H; only 1: left; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Infinite_sets.Infinite_sets.make_new_approximant	40	40.205431	26435	5203
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.Im_def	40	40.151913	36240	5847
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.finite_cardinal	40	40.160660	41437	5221
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_id	40	40.060966	17861	2487
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.find_2	40	40.258794	7196	998
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.nat_po	40	40.196608	44996	3006
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_le_cancel	40	40.041418	9305	2937
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Finite_alt	40	40.195313	43459	3879
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_finite	40	0.990112	600	124	6.2.3.0	synth with cache (only 1: intros X x H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.left_prefix	40	40.224135	39464	5434
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.rev_lnorm_rev	40	40.061338	16880	3912
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Rtauto.pos_eq_refl	40	40.174557	30975	3881
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Gt_Psucc	40	40.053149	13984	3430
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddC_ok	40	40.045415	14589	691
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_positive_p2ibis	40	40.040127	7887	1425
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_swap	40	40.237914	53010	408
coq-tactician-stdlib.8.12.dev	Coq.Classes.SetoidClass.equiv_nequiv_trans	40	4.138107	3096	496	6.9.8	synth with cache (only 1: destruct H; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.funind.Recdef.le_lt_SS	40	3.698286	2361	327	32	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.id	40	40.218256	52545	2287
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Sorted.defs.Sorted_rect	40	40.215340	34212	3975
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.remove_ok	40	40.072938	25737	1293
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.BinList.MakeBinList.jump_tl	40	40.141103	30090	3657
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.is_empty_2	40	13.398449	6267	902	0.9.0.5.7.0	synth with cache (only 1: unfold Empty, PX.MapsTo; only 1: unfold PX.eqke; only 1: intros; only 1: induction 1; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.eq_dec	40	40.110594	25813	3779
coq-tactician-stdlib.8.12.dev	Coq.Logic.WeakFan.Y_unique	40	40.209563	40043	4870
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Psucc_Gt	40	3.039096	1329	312	0.0.0.1.2.1.0.1.2.1	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: Pos.simpl_compare; only 1: now rewrite IHp; only 1: rewrite <- Pos.compare_succ_succ; only 1: simpl; only 1: Pos.simpl_compare; only 1: now rewrite IHp; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.map_app	40	0.060413	7	7	0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.length_map	40	0.036822	5	5	0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_ok	40	40.109599	41415	2093
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nzhead_nonzero	40	4.583729	2022	500	1.1.0.1.0.1.2.0.0.1.0.1.0.0.0.1.0.0.0	synth with cache (only 1: revert d'; only 1: induction d; only 1: intro H; only 1: discriminate; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: intros d' H; only 1: destr_eq H; only 1: intros d' H; only 1: destr_eq H; only 1: intros d' H; only 1: destr_eq H; only 1: intros d' H; only 1: now rewrite ?IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: intros d' H; only 1: destr_eq H; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqk	40	7.664856	4889	764	2.3.2.18	synth with cache (only 1: intros a0 y H H0; only 1: do 2 rewrite InA_alt; only 1: firstorder; only 1: eauto with bool).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	31.077767	27993	2328	0.0.12.12.20.2.0.8	synth with cache (only 1: intros H; only 1: induction 1; only 1: compute in H; only 1: compute; only 1: left; only 1: rewrite <- H; only 1: firstorder  auto with crelations; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_b2i	40	40.032240	6430	1943
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorEq.BEQ.eqb_nat_eq	40	40.103153	25875	3468
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.sincl_add_x	40	40.159048	18523	4979
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.destruct_list	40	40.237040	70016	2876
coq-tactician-stdlib.8.12.dev	Coq.micromega.Refl.make_conj_impl	40	40.176835	21077	5151
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.eta	40	40.255034	62974	1850
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_in	40	0.169236	6	6	0.0.0.0.0.0	synth with cache (only 1: intros X x H'; only 1: unfold Subtract; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_decreasing_1	40	40.024558	5594	2204
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.dec_Zne	40	40.201235	31581	1389
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40	40.119191	44645	2751
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	40	40.170573	21724	4764
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalUniqueChoice.unique_choice	40	40.228401	48454	6389
coq-tactician-stdlib.8.12.dev	Coq.Sets.Classical_sets.Ensembles_classical.not_included_empty_Inhabited	40	40.311508	80061	6840
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Pred_Type.Generic.not_all_not_ex	40	40.197854	77430	7501
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_succ	40	40.219371	39032	2789
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_alt	40	37.886428	19495	4390	2.0.0.8.5.0.1.5.0.1	synth with cache (only 1: induction l; only 1: firstorder; only 1: simpl; only 1: exists x; only 1: invlist InA; only 1: split; only 1: inversion_clear 1; only 1: firstorder; only 1: firstorder; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	40	0.860958	541	94	1.0.0.12	synth with cache (only 1: induction l as [| z l]; only 1: firstorder; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	40	0.046168	7	4	1.0.0.2	synth with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.prop_degen_ext	40	40.285950	114182	8077
coq-tactician-stdlib.8.12.dev	Coq.Logic.PropExtensionality.proof_irrelevance	40	40.254251	86002	4081
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.NNPP	40	40.244254	73789	6140
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorDef.BASES.trunc	40	40.223294	67046	5262
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.cutting_plane_sound	40	40.326939	21371	2912
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.Peirce	40	0.381867	692	68	24.0	synth with cache (only 1: intros; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.funind.Recdef.Splus_lt	40	8.967352	10002	1015	100	synth with cache (only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_neq_b	40	40.028816	5544	2855
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_spec	40	40.087530	27379	3196
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zeven_rem	40	40.073017	26640	2250
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zmult_le_approx	40	40.350120	29958	2261
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.ascii_of_byte_via_N	40	40.069884	3605	816
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_In_dec	40	40.134563	17082	2540
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr	40	5.379649	1542	564	0.0.1.0.1.5	synth with cache (only 1: intros X Y H'; only 1: intro IT; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.In_compat	40	40.164971	21714	3706
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.In_node_iff	40	0.096715	10	4	0.3.1	synth with cache (only 1: intros x y z; only 1: destr_bool; only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	0.046046	17	5	0.3	synth with cache (only 1: intros; only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.of_nat_ext	40	40.148255	54639	1823
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListDec.Dec_in_Prop.incl_decidable	40	40.264752	27658	4011
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.lt_leaf	40	0.167828	150	29	11.0	synth with cache (only 1: intros l a Hin; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_sort	40	40.066483	20383	3146
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.015634	2	2	0.0	synth with cache (only 1: red; only 1: inversion 1).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare.discrete_nat	40	40.138786	24275	3162
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.lt_tree_node	40	0.049736	3	3	0.0.0	synth with cache (only 1: unfold lt_tree; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_discr	40	40.341117	109374	2781
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_succ_r	40	40.065900	17618	1758
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.MOT_to_OT.eq_dec	40	40.214544	53577	5173
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	40	40.226028	62088	5163
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.047599	4	3	0.0.1	synth with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.Update_OT.lt_strorder	40	40.256189	80291	3494
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PsubC_ok	40	12.065047	908	487	0.2.0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: rewrite IHP2; only 1: rsimpl).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.pred_double_spec	40	0.008522	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.lt_tree_not_in	40	0.602576	149	38	0.7.1	synth with cache (only 1: intuition_in; only 1: eapply Nat.Private_OrderTac.Tac.lt_irrefl; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.Equivalence_instance_0	40	40.176249	20277	2364
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons	40	0.040509	7	4	0.1.2.0	synth with cache (only 1: repeat intro; only 1: apply permA_skip; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.zerop	40	0.082522	32	9	4.0.0.1	synth with cache (only 1: destruct n; only 1: now left; only 1: right; only 1: apply Peano.le_n_S, Peano.le_0_n).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_head	40	0.184983	19	17	0.0.0.1.2	synth with cache (only 1: induction l; only 1: intuition; only 1: intros; only 1: repeat rewrite <- app_comm_cons; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40	40.214588	55534	1250
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	1.014854	249	58	10	synth with cache (only 1: eauto using Nat.Private_OrderTac.Tac.eq_trans, Nat.Private_OrderTac.Tac.eq_sym).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.gt_tree_not_in	40	0.015017	3	3	0.0.0	synth with cache (only 1: intros; only 1: intro; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.gt_tree_trans	40	0.009468	1	1	0	synth with cache (only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.to_of_N_iff	40	40.053179	6588	757
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_exists	40	40.083425	26505	3402
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_trans	40	40.080604	27811	2154
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.le_total_order	40	17.828193	12584	1861	1.0.0.9.2.7.6.8	synth with cache (only 1: constructor; only 1: intro H'0; only 1: intros n m; only 1: simpl; only 1: destruct (le_gt_dec n m); only 1: intros H; only 1: intuition PeanoNat.Nat.order; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NMORPHISM.same_genN	40	40.063615	20923	1003
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.not_imply_elim	40	7.581721	13105	1532	2.22.24	synth with cache (only 1: intros a Ha; only 1: unfold not; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.not_imply_elim2	40	0.030953	17	7	7	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.lt_tree_compat	40	3.779318	899	307	0.0.2.1.0.1.0.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros x y; only 1: intro H; only 1: intros; only 1: rewrite <- H; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.imply_to_or	40	1.019896	623	192	0.9.2	synth with cache (only 1: intros; only 1: apply NNPP; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.imply_to_and	40	0.532167	232	110	3.1.2.2	synth with cache (only 1: intros; only 1: apply NNPP; only 1: intro; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	0.735643	146	56	0.0.0.2.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros x x' Hx s s' Hs H y Hy; only 1: subst; only 1: setoid_rewrite  <- Hx; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.or_to_imply	40	0.035394	15	7	1	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40	0.400306	76	35	3.3.0	synth with cache (only 1: split; only 1: parity_binop; only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.empty_spec	40	0.230764	349	49	5.16	synth with cache (only 1: intro y; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.empty_ok	40	0.005511	8	1	7	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_le	40	40.080380	28199	3561
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_morph_Proper	40	40.118529	12435	2007
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeuclid.ZEuclid.mod_always_pos	40	40.092582	35224	3104
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.not_and_or	40	1.098316	473	182	8.4	synth with cache (only 1: Bool.destr_bool; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.or_not_and	40	0.041307	19	7	6.0	synth with cache (only 1: intros; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.Comp'	40	5.100415	5273	382	1.5.13.20.8	synth with cache (only 1: red; only 1: intros n; only 1: intros a b; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.not_or_and	40	0.010620	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.and_not_or	40	0.009886	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.imply_and_or	40	0.012740	6	2	3.1	synth with cache (only 1: intros; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.imply_and_or2	40	0.014276	3	2	0.1	synth with cache (only 1: intros x y z; only 1: intuition auto; PeanoNat.Nat.Private_OrderTac.Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_lt_compat_r	40	40.189022	17744	1788
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nbit0_correct	40	24.418966	25836	3044	5.1.2.0.12.0.19.0	synth with cache (only 1: intros; only 1: destruct n; only 1: trivial; only 1: induction p as [p IH| p IH| ]; only 1: trivial; only 1: simpl; only 1: split; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_0	40	40.071735	22141	3599
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Ndouble_bit0	40	0.731415	388	124	14.0	synth with cache (only 1: intros; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40	6.718373	2126	242	0.0.0.7.16.7	synth with cache (only 1: intros x x' Hxx'; only 1: intro H; only 1: induction n; only 1: eauto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Ndouble_plus_one_bit0	40	0.026443	5	3	0.2.0	synth with cache (only 1: destruct n; only 1: split; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40	40.170756	60013	4900
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40	0.138015	92	25	1.0.4.1	synth with cache (only 1: intros AC_depfun A B R H; only 1: destruct (AC_depfun A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeuclid.ZEuclid.mod_bound_pos	40	2.963015	925	383	0.1.3.3.0.0.0	synth with cache (only 1: intros Ha Hb; only 1: destruct b as [| b| b]; only 1: now discriminate Hb || clear Hb; only 1: unfold modulo; only 1: apply Z.mod_pos_bound; only 1: easy; only 1: now discriminate Hb || clear Hb).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.sin_atan	40	40.023148	6520	1605
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_ok	40	40.104203	10400	2346
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.remove_1	40	40.093434	33612	3595
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcpower_pos	40	40.152591	16497	2642
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.remove_2	40	0.062168	7	3	4.0.0	synth with cache (only 1: intros a n m H; only 1: rewrite remove_spec; only 1: intuition congruence).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.remove_3	40	0.113821	15	5	2.0.1.1	synth with cache (only 1: intros n m p; only 1: rewrite remove_spec; only 1: apply H || intro; only 1: now PeanoNat.Nat.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.MoreInt.eqb_neq	40	40.302096	60930	2563
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40	5.953284	2277	639	0.0.0.2.2.0.4.2	synth with cache (only 1: induction n; only 1: split; only 1: intro H; only 1: rewrite <- PeanoNat.Nat.odd_spec in H; only 1: discriminate; only 1: inversion_clear 1; only 1: elim IHn; only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	40	40.112103	42421	4605
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA3	40	40.059934	19996	1758
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.rel_prime_cross_prod	40	40.058416	17663	2943
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_plus	40	40.078925	28689	2334
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_ext	40	40.010813	376	98
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qinv_comp	40	40.077686	25293	4078
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_ind	40	31.658657	8438	3611	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros P z Hrec x Hx; only 1: rewrite <- (Z.sub_simpl_r x z); only 1: apply Z.le_0_sub in Hx; only 1: pattern (x - z); only 1: apply Zlt_0_rec; only 1: clear x Hx; only 1: intros x IH Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: rewrite <- (Z.sub_simpl_r y z); only 1: apply IH; only 1: split; only 1: now rewrite Z.le_0_sub; only 1: now apply Z.lt_sub_lt_add_r; only 1: now rewrite <- (Z.add_le_mono_r 0 x z); only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.add_spec'	40	40.051056	14680	1656
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.add_spec	40	0.040212	2	2	0.0	synth with cache (only 1: unfold add; only 1: now autorew).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.add_ok	40	0.107482	18	6	4	synth with cache (only 1: eauto with *).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.is_empty	40	40.181929	45122	3502
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	40	40.345636	22125	2016
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_n_S	40	0.136055	14	8	0.2.3	synth with cache (only 1: revert m; only 1: intros H; only 1: apply Nat.succ_lt_mono).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_abs_N	40	36.898825	71188	1485	5.1.6.3.138.25	synth with cache (only 1: Z.bitwise; only 1: destruct z; only 1: now Z.nzsimpl; only 1: simpl; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_S_n	40	0.009622	1	1	0	synth with cache (only 1: apply Nat.succ_lt_mono).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.Fold.xfoldi_1	40	40.084413	28150	2649
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	40	40.122119	33753	3344
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_add	40	0.012744	3	1	2	synth with cache (only 1: now destruct n, m).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_mul	40	0.019903	1	1	0	synth with cache (only 1: now destruct n, m).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_b	40	40.059965	14005	1809
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_X_inv	40	40.156051	28995	2480
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.meq_refl	40	0.014809	3	2	0.1	synth with cache (only 1: intuition; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.subset_m	40	40.056538	18564	2574
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_same	40	0.011954	4	1	3	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_cnf_ff	40	0.008164	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_cnf_ff	40	0.007758	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pos_sub_discr	40	40.276385	33029	3907
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_ok	40	40.166129	10630	709
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_alt.Piter_op_square	40	40.125453	13310	1781
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_r	40	40.035087	8749	1282
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_equiv	40	40.362238	66453	1457
coq-tactician-stdlib.8.12.dev	Coq.micromega.Env.S.jump_simpl	40	40.105333	38831	3379
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Ndiv2_double	40	12.657236	6306	1370	0.1.0.0.7.8.0.1	synth with cache (only 1: intros a; only 1: intros H; only 1: N.bitwise; only 1: destruct a; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge	40	40.105408	34519	4726
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation.CPermutation_nil	40	40.270467	16836	3554
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Ncompare_Lt_Nltb	40	40.067808	20264	4756
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zcompare_Gt_spec	40	40.319005	17786	1271
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_ok	40	40.025902	6498	1932
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zlt_is_lt_bool	40	40.295148	31609	3476
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	1.616729	745	119	0.13.2.0	synth with cache (only 1: intros; only 1: destruct n; only 1: now try N.order'; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40	40.072296	19344	6344
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation.Permutation_nil_cons	40	40.117581	20233	3588
coq-tactician-stdlib.8.12.dev	Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow	40	40.113089	40528	5595
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation.Permutation_refl	40	0.302394	145	31	5.2.3	synth with cache (only 1: induction l; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.Im_add	40	40.071320	18789	4832
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.find_1	40	40.135278	18468	4067
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_comp	40	40.048634	14685	2576
coq-tactician-stdlib.8.12.dev	Coq.Arith.Euclid.eucl_dev	40	40.227336	67592	3877
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_ge_cancel	40	40.051815	13125	4153
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.right_prefix	40	40.079000	26207	3599
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Add_preserves_Finite	40	40.199851	38508	6444
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Injective_map_NoDup	40	40.224414	17184	3844
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Rtauto.form_eq_refl	40	40.140447	53649	4080
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_positive	40	40.047283	16864	1404
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_succ	40	40.065437	23567	1585
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj	40	40.219919	30926	2867
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Sorted.defs.Sorted_LocallySorted_iff	40	40.219368	24207	5626
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Sorted.defs.StronglySorted_inv	40	0.048470	8	5	0.2.0.1.0	synth with cache (only 1: intros a l H; only 1: inversion H; only 1: subst; only 1: inversion H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.concat_spec	40	40.057822	17863	2578
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Ndiv2_correct	40	5.290463	1732	491	0.0.0.0.0.0.1.0.0.7	synth with cache (only 1: intros [| ] ?; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.BinList.MakeBinList.jump_succ	40	40.182281	35994	4386
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.mem_1	40	40.268109	10418	989
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_iff	40	0.926755	349	102	5.2.1.0.0.0.2	synth with cache (only 1: split; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: now f_equal; only 1: intros EQ; only 1: rewrite EQ; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.discr	40	40.218724	39344	6734
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.peano_rect_base	40	0.058067	9	9	1.0.0.0.0.0.0	synth with cache (only 1: revert P a f; only 1: intros; only 1: revert P a f; only 1: intros; only 1: revert P a f; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Singleton_is_finite	40	3.570797	8005	482	0.4.0.1.1.39.1	synth with cache (only 1: intro; only 1: apply NNPP; only 1: red; only 1: intro H'0; only 1: elim H'0; only 1: rewrite <- (Empty_set_zero' U x); only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Logic.WeakFan.Y_approx	40	40.096464	32392	5465
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Lget_map	40	40.148996	27842	3992
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_shiftr	40	40.081537	18025	1584
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.unorm_0	40	40.054913	13073	5208
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_alt	40	40.165212	35440	4961
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	40	40.167816	29747	4067
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_ltof	40	40.251201	49922	6190
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_1	40	40.077910	22424	4045
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorEq.BEQ.eqb_eq	40	40.174157	15238	3141
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.hd_error_tl_repr	40	40.104901	19110	3329
coq-tactician-stdlib.8.12.dev	Coq.micromega.Refl.make_conj_in	40	40.159599	31365	4482
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Popp_ok	40	9.741261	1079	494	0.0.1.0.0.0.1.0.0.0.1.0.0.1	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: rewrite IHP; only 1: rsimpl; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: rewrite IHP1, IHP2; only 1: rsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.eq_nth_iff	40	40.111345	22426	7217
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.dec_Zgt	40	40.126388	49347	3475
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_inj	40	40.028107	7261	2227
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_0	40	40.061913	19636	3503
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40	40.177884	56929	7602
coq-tactician-stdlib.8.12.dev	Coq.Sets.Classical_sets.Ensembles_classical.not_empty_Inhabited	40	40.145577	22890	3719
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_add	40	40.103700	15978	3288
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Pred_Type.Generic.not_all_ex_not	40	40.197015	52786	6330
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.image_empty	40	10.575569	4898	1015	1.1.2.3.8.1.0.6	synth with cache (only 1: intro; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: destruct 1; only 1: auto using Im_def with sets).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA_altdef	40	40.228215	28889	5566
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.minus_n_O	40	0.012350	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40	40.078410	23671	4745
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_l	40	37.499474	17976	5434	1.0.0.0.5.2.0.0.1.2.0	synth with cache (only 1: unfold Add at 1; only 1: intros A NI; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros H'1 H'2; only 1: elim H'0; only 1: intro; only 1: clear H'0; only 1: elim H'1; only 1: auto with sets; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.prop_degen_em	40	40.279435	111431	12802
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.incl_nil	40	0.910131	443	75	0.4.2.0.11	synth with cache (only 1: destruct l as [| x xs]; only 1: inversion 1; only 1: constructor; only 1: exfalso; only 1: invlist InA).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_gtof	40	4.342595	1601	671	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: assert (H : forall n (a : A), f a < n -> Acc ltof a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.funind.Recdef.SSplus_lt	40	40.086380	22930	8006
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.genCuttingPlaneNone	40	40.080989	26880	3161
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.singleton_b	40	40.041934	5191	1896
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_cxe	40	40.079612	31723	1152
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xce	40	0.036026	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zodd_rem	40	40.059547	20486	2616
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Pred_Type.Generic.not_ex_all_not	40	2.616878	2457	444	18.1.0	synth with cache (only 1: unfold not; only 1: intros ? ? f; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.ascii_of_byte_via_nat	40	40.032890	8312	3193
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_mem_ind	40	40.123090	47247	4283
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.hd_error_some_nil	40	6.325403	4659	657	13.3.2.4	synth with cache (only 1: intro n; only 1: intros H; only 1: inversion 1; only 1: RelationClasses.simpl_relation).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.of_nat_to_nat_inv	40	40.145291	24047	1957
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListDec.Dec_in_Prop.NoDup_decidable	40	40.227709	26079	4543
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	40	40.142335	26643	6156
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40	40.166467	38589	3344
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.Update_OT.lt_compat	40	40.172929	18416	2659
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_aux_ok	40	40.017565	3512	1566
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_l	40	40.027440	9077	831
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_pred_double	40	40.305792	115897	3666
coq-tactician-stdlib.8.12.dev	Coq.Arith.Factorial.lt_O_fact	40	40.148624	27746	7011
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_sort	40	40.134089	49973	3329
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.lt_eq_lt_dec	40	40.169889	31434	3461
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app	40	40.045209	11955	2902
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.meq_trans	40	23.178428	7298	1332	1.10.5.3	synth with cache (only 1: compute; only 1: intros; only 1: rewrite H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.meq_sym	40	0.029409	6	5	0.0.0.1.0	synth with cache (only 1: unfold meq; only 1: destruct y; only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.munion_empty_left	40	0.019463	3	3	0.0.0	synth with cache (only 1: destruct x; only 1: unfold meq; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.munion_empty_right	40	0.025583	4	4	0.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.to_of_N_option_map	40	40.070675	15863	338
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40	40.080630	28410	2602
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_tail	40	1.420671	274	104	0.0.0.0.0.0.0.0.3	synth with cache (only 1: induction 1; only 1: easy; only 1: now apply permA_skip; only 1: etransitivity; only 1: rewrite <- !app_comm_cons; only 1: now apply permA_swap; only 1: rewrite !app_comm_cons; only 1: now apply PermutationA_app_head; only 1: do 2 (etransitivity; try eassumption)).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.gt_eq_gt_dec	40	2.102842	241	135	0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: destruct H; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.Finite_subset_has_lub	40	40.123179	44571	5904
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_add	40	40.039220	8899	1077
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_assoc_reverse	40	40.084740	7101	1802
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_mem_ind2	40	5.894877	1779	494	3.0.1.0.0.0.0.0.0.2.0.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: intros; only 1: auto with datatypes; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.eqlistA_altdef	40	8.152486	3369	830	2.0.0.1.3.0.4.0.1.2	synth with cache (only 1: intros x l; only 1: constructor; only 1: induction 1; only 1: auto; only 1: constructor; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_append	40	3.312500	3854	159	0.0.1.0.8.65	synth with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: rewrite <- IHl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.equivlist_equiv	40	1.145110	845	93	33	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.is_empty_spec	40	40.080126	24726	4494
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40	40.054720	18576	2312
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_morph_T	40	40.259027	7290	1155
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_1	40	40.109717	31109	1639
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	40	40.252526	63888	4106
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_lt_compat_l	40	40.078280	9435	2734
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_1	40	40.121630	48702	3013
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	40	40.409511	145373	3359
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40	40.164201	23147	1623
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_spec	40	40.106532	5209	1841
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.cos_atan	40	40.024490	6451	1843
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pos_sub_diag	40	33.090601	27943	3663	0.0.0.0.1.2.3.0.1.2.2.6.0.0.0.1.2.3.0.1.2.2.6.0.9	synth with cache (only 1: destruct p; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: now subst; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: now subst; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qc_eq_bool_correct	40	40.099533	34903	2804
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.singleton_1	40	40.161412	61302	4824
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.MoreInt.ltb_lt	40	40.145030	39326	1190
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.049160	7	3	2.0.2	synth with cache (only 1: intros n m H; only 1: apply <- add_spec; only 1: now left).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.mem_spec	40	40.173721	42075	4098
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA4	40	40.091211	35213	1368
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40	40.062857	19651	3108
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_filter	40	40.026542	4991	3059
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_l	40	40.003256	496	112
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qdiv_comp	40	40.047081	14533	2465
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.lbalS_spec	40	40.103643	16763	1684
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.ind_0_1_SS	40	40.116736	18389	3143
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.mem	40	40.128638	20275	2548
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	40	40.346448	20935	2557
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_S	40	40.113198	28153	3239
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_pred	40	0.009050	2	1	1	synth with cache (only 1: apply Nat.lt_succ_lt_pred).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40	40.114370	15108	3600
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.le_not_gt	40	0.008154	1	1	0	synth with cache (only 1: apply Nat.le_ngt).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.fold_1	40	40.090542	32241	3316
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_not_le	40	0.010807	2	1	1	synth with cache (only 1: apply Nat.lt_nge).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_sub_max	40	40.353554	23098	4785
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.bi_induction	40	0.304830	120	24	8.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.le_S_gt	40	0.301985	37	15	2.0.0.4	synth with cache (only 1: Nat.cases n; only 1: intro H; only 1: Nat.order'; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_S_le	40	0.006327	1	1	0	synth with cache (only 1: apply Peano.le_S_n).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_le_S	40	0.014620	2	1	1	synth with cache (only 1: apply Nat.le_succ_l).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	7.726696	3557	733	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros AC_fun A B R H; only 1: pose (B' := {x : A & B x}); only 1: pose (R' := fun (x : A) (y : B') => projT1 y = x /\ R (projT1 y) (projT2 y)); only 1: destruct (AC_fun A B' R') as (f, Hf); only 1: intros x; only 1: destruct (H x) as (y, (Hy, Huni)); only 1: exists (existT (fun x => B x) x y); only 1: repeat split; only 1: trivial; only 1: intros (x', y') (Heqx', Hy'); only 1: simpl in *; only 1: destruct Heqx'; only 1: rewrite (Huni y'); only 1: trivial; only 1: trivial; only 1: exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))); only 1: intro x; only 1: destruct (Hf x) as (Heq, HR) using and_indd; only 1: destruct (f x); only 1: simpl in *; only 1: destruct Heq using eq_indd; only 1: trivial; only 1: intros DepFunReify A B R H; only 1: destruct (DepFunReify A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40	0.519145	299	48	0.0.13	synth with cache (only 1: unfold def_add; only 1: intro n; only 1: now rewrite recursion_0).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.le_gt_S	40	0.007701	1	1	0	synth with cache (only 1: apply Nat.succ_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_r	40	3.917962	35	9	5.0.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_o	40	40.065914	19277	3572
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.equal_m	40	40.036056	5814	3084
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_inv	40	40.200503	63160	2143
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.Subset_refl	40	0.301648	92	26	1.4.2	synth with cache (only 1: intros n; only 1: intro H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.lt_le_S	40	0.052293	7	5	0.0.1.0.1	synth with cache (only 1: Nat.cases n; only 1: intro H; only 1: Nat.order_pos; only 1: intros n IH; only 1: Nat.order).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.lt_n_Sm_le	40	0.009186	1	1	0	synth with cache (only 1: apply le_S_n).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.le_lt_n_Sm	40	0.024520	5	3	0.2.0	synth with cache (only 1: induction 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_spec	40	40.123251	9026	1925
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.le_not_lt	40	0.205834	28	12	0.6	synth with cache (only 1: intros; only 1: Nat.order).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_0_r	40	1.805410	13	4	5.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_l	40	40.034828	6830	1321
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_alt.Zpower_equiv	40	40.154483	42241	3281
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.lt_not_le	40	0.177106	23	10	0.6	synth with cache (only 1: intro H2; only 1: Nat.order).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Le.le_n_0_eq	40	0.034768	16	4	0.1	synth with cache (only 1: inversion 1; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.neq_0_lt	40	0.018039	2	2	0.0	synth with cache (only 1: intro H; only 1: Nat.auto').
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	0.007802	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.lt_0_neq	40	0.032817	4	4	0.0.0.0	synth with cache (only 1: intro H; only 1: intro H1; only 1: rewrite H1 in H; only 1: false_hyp H Nat.lt_irrefl).
coq-tactician-stdlib.8.12.dev	Coq.Arith.EqNat.eq_nat_refl	40	0.329005	557	44	2.12.13	synth with cache (only 1: induction n; only 1: now try Nat.order'; only 1: now rewrite <- ?Nat.succ_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.lt_n_S	40	0.006914	1	1	0	synth with cache (only 1: apply le_n_S).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.lt_S_n	40	0.019290	10	2	2	synth with cache (only 1: apply Nat.succ_lt_mono).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_r	40	0.656848	131	51	0.0.0.3.1.0	synth with cache (only 1: intros n m p; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm n p); only 1: do 2 rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	1.279212	958	159	1.2.0.2.10	synth with cache (only 1: intros H1 H2 H3; only 1: intros; only 1: red; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.S_pred	40	0.598219	189	64	0.0.2.4	synth with cache (only 1: Nat.cases n; only 1: inversion 1; only 1: intros a Ha; only 1: Morphisms.f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_r	40	1.063747	8	3	5.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_bool_iff	40	40.324508	52916	5644
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.In_s_m	40	1.005654	76	31	0.3.1.1	synth with cache (only 1: intros x y H s s' H0; only 1: generalize (H0 x); only 1: rewrite H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA5	40	8.699671	2602	434	12.13	synth with cache (only 1: intros n m; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.S_pred_pos	40	0.790785	318	90	1.0.0.0.0.6	synth with cache (only 1: Nat.cases n; only 1: intro H; only 1: exfalso; only 1: now apply Nat.lt_irrefl with 0; only 1: intros n H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.rel_prime_sym	40	8.222235	4007	554	0.2.2.0.15.0	synth with cache (only 1: simple induction 1; only 1: Z.nzsimpl'; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Env.S.jump_tl	40	40.050281	17938	804
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40	40.138600	50420	4966
coq-tactician-stdlib.8.12.dev	Coq.micromega.Env.S.jump_succ	40	0.087408	29	7	4.2	synth with cache (only 1: rewrite <- ?jump_add; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation.CPermutation_nil_cons	40	40.151529	32131	4000
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nmin_le_1	40	40.079405	27538	3807
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_assoc_reverse	40	10.979958	1761	461	1.0.4.0.0.0.8	synth with cache (only 1: nzinduct p; only 1: now Nat.nzsimpl; only 1: intro; only 1: Nat.nzsimpl; only 1: split; only 1: now intros ->; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcrt	40	10.603560	1449	550	0.0.0.2.3.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.9	synth with cache (only 1: split; only 1: intros; only 1: qc; only 1: apply Qplus_0_l; only 1: intros; only 1: qc; only 1: apply Qplus_comm; only 1: intros; only 1: qc; only 1: apply Qplus_assoc; only 1: intros; only 1: qc; only 1: apply Qmult_1_l; only 1: intros; only 1: qc; only 1: apply Qmult_comm; only 1: intros; only 1: qc; only 1: apply Qmult_assoc; only 1: intros; only 1: qc; only 1: apply Qmult_plus_distr_l; only 1: intros; only 1: auto; only 1: intros; only 1: qc; only 1: apply Qplus_opp_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zcompare_plus_compat	40	40.318489	12307	2604
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zgt_is_gt_bool	40	40.066128	20350	4388
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_bool_iff	40	2.732036	685	289	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4	synth with cache (only 1: destruct n; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_r	40	27.970522	7463	3423	0.0.0.0.0.1.0.0.2.2.0	synth with cache (only 1: intros X x H'; only 1: split; only 1: auto with sets; only 1: red; only 1: intro H'1; only 1: lapply (Singleton_inv U x x0); only 1: intro H'4; only 1: apply H'; only 1: rewrite H'4; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation.Permutation_refl'	40	40.091957	32301	4318
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_alt	40	0.018238	4	2	2.0	synth with cache (only 1: intros; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow'	40	40.124851	14904	5182
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	40	0.085998	8	7	0.1.0.0.0.0.0	synth with cache (only 1: cases ltac:(n); only 1: intros; only 1: exfalso; only 1: now apply H; only 1: intros; only 1: rewrite pred_succ; only 1: now rewrite <- negb_odd, odd_succ, negb_even).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	40	0.700275	42	21	0.0.0.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: nzsimpl; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r; only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	40	0.140396	6	5	0.0.1.0.0	synth with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: order; only 1: now apply pow_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_opp	40	40.052752	17694	3030
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	40	0.030753	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.add_1	40	40.219125	2951	861
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.029037	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.031812	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	40	0.030625	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_lt_compat_r	40	40.038527	3894	1283
coq-tactician-stdlib.8.12.dev	Coq.Arith.Euclid.quotient	40	40.121928	37332	3116
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_gt_compat_r	40	0.010562	1	1	0	synth with cache (only 1: auto using Rplus_lt_compat with rorders).
coq-tactician-stdlib.8.12.dev	Coq.Classes.EquivDec.list_eqdec_obligation_5	40	40.203452	25359	262
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	4.560038	3436	398	18.10	synth with cache (only 1: intro H; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_prefix	40	40.102061	35421	4827
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Injective_list_carac	40	40.040241	9655	3380
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_gt_compat_l	40	1.255117	923	146	18	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_even_bool	40	3.306632	3263	289	0.0.0.0.0.0.0.0.0.0.17.1.0.8.23	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: induction p; only 1: trivial; only 1: split; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Rtauto.with_env.compose0	40	40.112779	39778	5124
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_firstl	40	40.004151	462	145
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_add	40	40.258217	19437	835
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	3.299980	632	349	2.0.3.1.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.Power.pow_N_pow_N	40	0.018526	4	1	3	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Sorted.defs.StronglySorted_rect	40	40.212602	22865	1771
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.concat_ok	40	40.033920	8294	1530
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Sorted.defs.StronglySorted_rec	40	0.028761	3	3	0.0.0	synth with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nxor_bit0	40	40.112707	31361	2924
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.BinList.MakeBinList.jump_add	40	40.076942	21799	3117
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.DEFINITIONS.MORPHISM.get_sign_None_th	40	0.814865	1590	64	2.52	synth with cache (only 1: split; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_double	40	40.162205	8691	1853
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_is_O	40	25.313885	27522	2733	9.0.0.12.22.1.2	synth with cache (only 1: destruct n; only 1: intro H; only 1: now left; only 1: destruct m; only 1: intro; only 1: now right; only 1: now left).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.mem_2	40	40.091403	31798	4433
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	40	4.770680	753	377	0.7.0.0.0	synth with cache (only 1: intros; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite <- even_spec, even_succ, odd_spec).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.peano_rect_succ	40	40.248540	44762	6199
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Union_preserves_Finite	40	40.142656	50863	6590
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.peano_rec_base	40	0.007986	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.peano_rec_succ	40	0.050182	5	5	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Lget_app	40	40.172477	39812	3851
coq-tactician-stdlib.8.12.dev	Coq.Logic.WeakFan.WeakFanTheorem	40	40.304049	106784	4420
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	40	5.411039	1531	195	1.2.18.0	synth with cache (only 1: intros; only 1: nzsimpl; only 1: reflexivity; only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	40	0.566398	81	44	0.0.2.1.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.unorm_nonnil	40	40.073674	27873	1817
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.unorm_D0	40	0.005775	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.unorm_iter_D0	40	0.007551	1	1	0	synth with cache (only 1: now induction n).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.MapsTo_eq	40	40.125532	18071	2427
coq-tactician-stdlib.8.12.dev	Coq.Arith.Peano_dec.O_or_S	40	15.447920	27858	1550	0.0.0.36.42	synth with cache (only 1: induction n; only 1: right; only 1: reflexivity; only 1: left; only 1: now exists n).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.DEFINITIONS.IDmorph	40	2.515486	4848	215	64	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	40	40.175744	29725	4166
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Sorted.defs.StronglySorted_Sorted	40	3.783077	1545	537	2.0.2.0.0.1.7	synth with cache (only 1: intros l; only 1: induction 1 as [| a l [| ]]; only 1: auto using Sorted, LocallySorted, HdRel; only 1: auto using Sorted, LocallySorted, HdRel; only 1: inversion H1; only 1: subst; only 1: auto using Sorted, LocallySorted, HdRel).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_split	40	40.051425	12500	1887
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorEq.BEQ.eq_dec	40	40.196970	30188	2115
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eqsth	40	0.692892	721	68	36	synth with cache (only 1: auto with typeclass_instances).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Refl.make_conj_app	40	40.134400	26904	4920
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PaddX_ok	40	40.025022	6342	1393
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_mem_correct1	40	28.385473	16935	2828	0.1.0.0.0.0.11.4.0.1.2.0	synth with cache (only 1: simple induction x; only 1: intros H; only 1: discriminate; only 1: simpl; only 1: induction l as [| z l]; only 1: intros H; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: auto with datatypes; only 1: elim (Aeq_dec a a0); only 1: intuition; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorEq.CAST.cast	40	0.223147	113	29	8	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.nth_order_hd	40	40.195772	35543	2711
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.dec_Zge	40	40.099518	36722	2966
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_increasing_0	40	40.032497	8925	2676
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_s_ext	40	1.314227	1868	148	0.1.3.5.0.1.40	synth with cache (only 1: constructor; only 1: repeat red; only 1: intros; only 1: simpl_relation; only 1: intros n n' Hn m m' Hm; only 1: rewrite Hm, Hn; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_1	40	40.113967	43671	2733
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40	40.173596	18580	6162
coq-tactician-stdlib.8.12.dev	Coq.Sets.Classical_sets.Ensembles_classical.Inhabited_Setminus	40	40.158812	38342	5036
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_mul	40	40.150046	16776	4807
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_1	40	0.146416	11	3	5.0	synth with cache (only 1: unfold to_nat; only 1: now Nat.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	40	0.982307	293	72	2.0.0.8.0	synth with cache (only 1: intro; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_ext	40	0.944549	208	23	0.0.0.16	synth with cache (only 1: constructor 1; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_odd_bool	40	8.221072	9058	850	0.0.0.0.0.0.0.0.1.0.0.0.0.1.0.9.27	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.minus_Sn_m	40	40.103684	22624	4381
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.finite_image	40	40.285093	74274	6438
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40	40.159849	21827	4470
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.pred_of_minus	40	0.036431	1	1	0	synth with cache (only 1: now Nat.nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	40	0.066316	14	5	2.1.1	synth with cache (only 1: intros x1 x2 H1 x3 x4 H2; only 1: rewrite H1; only 1: now rewrite H2).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.prop_ext_em_degen	40	40.258464	102879	8372
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof1	40	40.194179	56168	4818
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.provable_prop_ext	40	0.570859	666	124	9.0.0.4.1	synth with cache (only 1: intros Ext EM A; only 1: apply Ext; only 1: split; only 1: exact (fun _ => I); only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.funind.Recdef.max	40	40.118466	26541	5493
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.union_b	40	40.129564	55709	415
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Rtauto.with_env.compose1	40	10.120237	4913	1047	8.0.4.3.1.0.1	synth with cache (only 1: induction F; only 1: auto; only 1: intro e; only 1: intro x; only 1: intros; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40	40.038391	10995	1820
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lxl	40	40.151612	64989	1326
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	40	40.075204	26785	3280
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_gxg	40	0.024350	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	0.465418	301	82	9.1.0	synth with cache (only 1: intros; only 1: compute; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xll	40	0.037863	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.bet_eq	40	30.394010	35545	3360	33.2.6.4	synth with cache (only 1: intros a; only 1: intros; only 1: subst; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	40	0.024401	8	2	6.0	synth with cache (only 1: intros; only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40	0.033288	15	4	0.0.5	synth with cache (only 1: intros x y z H1 H2; only 1: rewrite <- H2; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xgg	40	0.028097	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Pred_Type.Generic.not_ex_not_all	40	40.115526	42013	6669
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	0.008927	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Pred_Type.Generic.ex_not_not_all	40	0.418871	179	68	2.0.0.4	synth with cache (only 1: destruct 1; only 1: intro all; only 1: apply H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.byte_of_ascii_via_N	40	40.057105	5610	348
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	40	3.154336	336	101	4.1.1.3	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: firstorder  auto with crelations; only 1: firstorder  auto with crelations; only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.radd_ext1_Proper	40	3.571207	729	64	23	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.length_zero_iff_nil	40	40.258516	79669	2866
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	40	0.123413	4	2	0.2	synth with cache (only 1: repeat red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.hd_error_nil	40	0.006405	2	1	1	synth with cache (only 1: firstorder  discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.to_nat_of_nat	40	40.194090	49056	1745
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.remove_inf	40	20.034732	8491	1745	1.1.5.0.0.1.5.2.0.0.1.0	synth with cache (only 1: induction s; only 1: inversion 1; only 1: inv; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: inv; only 1: elim_compare x a; only 1: eauto; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.hd_error_cons	40	0.016218	4	2	2.0	synth with cache (only 1: unfold hd_error, tl; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.between_le	40	1.691295	447	113	3.0.5.2	synth with cache (only 1: intros n m; only 1: induction 1; only 1: PeanoNat.Nat.Private_Tac.order; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListDec.Dec_in_Type.incl_dec	40	40.275241	29606	2727
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	40	40.166615	41527	3726
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_r	40	40.040449	10838	1675
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.Update_OT.compare_spec	40	40.229864	67164	4364
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40	40.324726	114806	4634
coq-tactician-stdlib.8.12.dev	Coq.Arith.Factorial.fact_neq_0	40	40.183916	45799	6746
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40	13.938292	4137	860	0.0.0.1.2.16.1	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: nzsimpl; only 1: apply le_0_l; only 1: intro; only 1: nzsimpl; only 1: apply succ_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_ok	40	40.021392	5218	1608
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_nodup	40	40.115395	40810	2683
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.pred_double_succ	40	40.485723	207757	1884
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.double_succ	40	0.009616	2	2	0.0	synth with cache (only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.rmul_ext1_Proper	40	1.293300	398	38	15.3	synth with cache (only 1: intros n m p q H1 H2; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_ext	40	0.027383	15	3	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof1	40	3.781551	1671	490	0.0.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros P F; only 1: assert (H : forall n (a : A), f a < n -> P a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply F; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SReqe_Reqe	40	0.101682	15	7	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_mul_l	40	0.054285	26	7	2.5	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_add	40	0.007427	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof2	40	0.277360	49	30	1	synth with cache (only 1: exact induction_ltof1).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRsub_def	40	0.011184	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof2	40	0.005350	1	1	0	synth with cache (only 1: exact induction_ltof1).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.munion_comm	40	40.208798	12215	2867
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	4.357791	12851	1004	0.10.14.0.20.1	synth with cache (only 1: intros Ext A Ha; only 1: apply Ext; only 1: split; only 1: trivial; only 1: intros H ?; only 1: exact H).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.Im_inv	40	6.010355	3186	732	12.0.3.0.2	synth with cache (only 1: intros H'5 H'8; only 1: intros x0 H'; only 1: elim H'; only 1: elim H'; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolOrder.le_refl	40	0.019570	5	4	1.0.0.0	synth with cache (only 1: intros; only 1: destruct b; only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolOrder.le_trans	40	0.129710	51	9	9	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolOrder.le_true	40	0.007652	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.munion_ass	40	1.043709	294	139	1.1.0.2.0.0	synth with cache (only 1: unfold meq; only 1: destruct x; only 1: destruct y; only 1: unfold munion; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolOrder.false_le	40	0.007543	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolOrder.le_compat	40	0.090128	28	12	3.3	synth with cache (only 1: reduce; only 1: simpl_relation).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolOrder.lt_irrefl	40	0.015341	2	2	0.0	synth with cache (only 1: destr_bool; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolOrder.lt_trans	40	0.022240	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolOrder.lt_compat	40	0.013190	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolOrder.lt_trichotomy	40	0.101064	7	5	0.0.0.1.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: auto; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolOrder.lt_total	40	0.045415	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolOrder.lt_le_incl	40	0.015543	2	2	0.0	synth with cache (only 1: destr_bool; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.le_lt_dec	40	40.147824	40530	2867
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolOrder.le_lteq_dec	40	0.042542	4	4	0.0.0.0	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.meq_left	40	0.917121	254	126	0.1.1.2.0.0	synth with cache (only 1: unfold meq; only 1: destruct y; only 1: simpl; only 1: destruct x; only 1: destruct z; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.to_N_bounded	40	40.107501	46694	1029
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.remove_ok	40	3.872835	611	260	0.0.0.0.1.1.0.0.0.0.0	synth with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s x; only 1: simple induction s; only 1: intuition; only 1: simpl; only 1: intros; only 1: inv; only 1: elim_compare x a; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.meq_right	40	0.166541	9	9	1.0.0.0.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.Integers_has_no_ub	40	40.183945	22212	6274
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolOrder.le_lteq	40	0.255937	42	19	1.1.1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA6	40	22.205036	7391	373	4.41.4.5	synth with cache (only 1: intro; only 1: intros EQ; only 1: Tactics.program_simpl; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_mult	40	40.028492	6364	2172
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_cons_not_nil	40	4.680288	3912	481	2.0.4.3.15	synth with cache (only 1: intros n IH; only 1: induction n; only 1: intro; only 1: discriminate; only 1: inversion 1).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_nil_l	40	0.020568	2	2	0.0	synth with cache (only 1: simpl; only 1: now destruct l).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRIDmorph	40	3.270813	2877	374	17.3.0.3.0.2.2.28	synth with cache (only 1: constructor 1; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: solve_proper; only 1: reflexivity; only 1: reflexivity; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.prop_congr	40	0.014191	1	1	0	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Setoids.Setoid.Seq_refl	40	0.008028	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Setoids.Setoid.Seq_sym	40	0.016575	2	2	0.0	synth with cache (only 1: unfold Setoid_Theory in s; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.is_true_true	40	0.155760	125	10	16	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.not_false_is_true	40	0.009725	1	1	0	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Setoids.Setoid.Seq_trans	40	0.053271	11	9	2.0.0.0.0.0	synth with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: now transitivity y).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.is_true_locked_true	40	0.012729	2	2	0.0	synth with cache (only 1: unlock; only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.Setoids.Setoid.gen_st	40	0.010641	5	1	4	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negbT	40	0.121197	4	3	0.1.0	synth with cache (only 1: intuition; only 1: subst; only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negbTE	40	0.008428	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negbF	40	0.009901	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negbFE	40	0.008494	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negbK	40	0.130551	573	32	3.29	synth with cache (only 1: intro H; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negbNE	40	0.005423	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_nformula_bound_var	40	8.076362	2301	234	3.0.22	synth with cache (only 1: intros Az RS; only 1: rewrite xnnormalise_correct; only 1: easy || now destruct y).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negb_inj	40	0.276760	645	42	0.32	synth with cache (only 1: intro H; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negbLR	40	0.021522	7	1	6	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negbRL	40	0.044226	24	4	8	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_comm	40	40.093088	30979	2221
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_le_upper_bound	40	40.109122	39986	5081
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.mem_spec	40	40.153431	12450	3161
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.eqlistA_equiv	40	40.293065	46107	1651
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.contra	40	0.556391	349	49	6.11	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Structures.Equalities.UpdateEq.eq_equiv	40	1.379751	2138	209	0.7.18.0.0.23	synth with cache (only 1: constructor; only 1: simpl_relation; only 1: auto with relations; only 1: intros x' x'' Hx' Hx''; only 1: intros; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.contraL	40	0.011032	1	1	0	synth with cache (only 1: by case : b  => //; case : c ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.contraR	40	0.011825	1	1	0	synth with cache (only 1: by case : b  => //; case : c ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.contraLR	40	0.011123	1	1	0	synth with cache (only 1: by case : b  => //; case : c ).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRmorph_Rmorph	40	1.660343	3101	120	59	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40	40.151130	10954	2057
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.contraT	40	0.522060	223	33	5.12	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.wlog_neg	40	0.009088	1	1	0	synth with cache (only 1: by case : b  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	1.314886	1160	235	2.1.5.8	synth with cache (only 1: intros; only 1: transitivity y; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_2	40	40.097159	26530	3397
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.contraFT	40	0.691630	146	15	2.14	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.pred_double_xO_discr	40	7.398954	12869	628	0.0.0.0.1.74	synth with cache (only 1: red; only 1: induction p; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_not_1	40	0.030046	1	1	0	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40	40.034439	8022	2645
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRinv_r	40	40.074210	8295	880
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.contraFN	40	0.899821	209	19	3.16	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.radd_ext2_Proper	40	2.060903	683	56	19.5	synth with cache (only 1: intros n m p q H1 H2; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.pred_succ	40	0.984636	325	120	1.1.1.0.0.2.0.0.0.1.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.contraTF	40	0.653885	146	15	2.14	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	40	40.088525	29071	6364
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_ok	40	40.040801	9599	2277
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_ok	40	0.064261	6	3	0.3.0	synth with cache (only 1: intros H; only 1: apply <- isok_iff; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.asin_atan	40	40.033795	6618	1562
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.rmul_ext2_Proper	40	1.186937	740	64	20.5	synth with cache (only 1: intros n m p q H1 H2; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.contraNF	40	0.797480	165	16	2.15	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_0	40	3.247226	881	69	29	synth with cache (only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Proper.eq_proper_proxy	40	0.009848	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Proper.reflexive_proper_proxy	40	0.012776	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Proper.proper_proper_proxy	40	0.009149	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.minus_diag_reverse	40	15.566845	15801	1798	0.0.2.7.36.3	synth with cache (only 1: symmetry; only 1: Nat.induct ltac:(n); only 1: apply Nat.sub_0_r; only 1: simpl; only 1: intros n IH; only 1: now rewrite IH).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pos_sub_lt	40	40.058442	15301	4343
coq-tactician-stdlib.8.12.dev	Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	0.676135	600	118	2.2.5.6	synth with cache (only 1: intros; only 1: transitivity y; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ropp_ext2_Proper	40	1.793845	877	137	13.5	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_spec	40	2.119245	720	213	0.0.2.0.7	synth with cache (only 1: unfold singleton; only 1: intros; only 1: intuition; only 1: inv; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_ok	40	0.017989	3	2	1.0	synth with cache (only 1: apply <- isok_iff; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.MoreInt.ltb_nlt	40	40.222842	57472	2773
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.union_spec	40	40.083780	25980	4951
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_spec	40	0.092830	43	11	0.0.6.0	synth with cache (only 1: unfold empty; only 1: intro; only 1: intro; only 1: inv).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.equal_spec	40	40.129563	47947	4141
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Relations.pointwise_pointwise	40	1.768967	1126	253	2.0.6.0.2.1.1.3	synth with cache (only 1: hnf; only 1: split; only 1: red; only 1: intro z; only 1: firstorder; only 1: destruct H; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Relations.subrelation_id_proper	40	0.010103	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Relations.subrelation_respectful	40	0.015739	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Relations.subrelation_refl	40	0.021858	4	3	1.0.0	synth with cache (only 1: hnf; only 1: intros; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Relations.subrelation_proper	40	0.015365	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	2.130602	342	56	11.0.0.0	synth with cache (only 1: nzinduct p; only 1: now Nat.nzsimpl; only 1: intro p; only 1: Morphisms.f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qcompare_comp	40	40.077725	27534	2589
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.fold_compat	40	40.065785	19958	3023
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolOrder.le_preorder	40	10.172969	25674	776	0.48.4.66.2	synth with cache (only 1: constructor; only 1: simpl_relation; only 1: destr_bool; only 1: hnf; only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolOrder.lt_strorder	40	0.257379	110	39	0.0.2.1.1.2	synth with cache (only 1: split; only 1: compute; only 1: destr_bool; only 1: intros b; only 1: destr_bool; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Relations.proper_subrelation_proper	40	1.096174	301	79	3.4.4	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Relations.pointwise_subrelation	40	0.021442	2	2	0.0	synth with cache (only 1: unfold subrelation in *; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Relations.forall_subrelation	40	0.156603	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.contraFF	40	4.717635	3970	300	0.1.30.14	synth with cache (only 1: Bool.destr_bool; only 1: reflexivity || destruct H; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.iff_impl_subrelation	40	0.015303	5	3	2.0.0	synth with cache (only 1: hnf; only 1: intros A B [H1 H2]; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0.013279	4	3	1.0.0	synth with cache (only 1: hnf; only 1: intros A B [H1 H2]; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Proper.eq_proper_proxy	40	0.006541	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Proper.reflexive_proper_proxy	40	0.008610	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Proper.proper_proper_proxy	40	0.005985	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.lt_div2	40	40.109877	25350	6857
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.add	40	40.091639	29252	4628
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_equiv	40	40.109725	38924	6209
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.lbalS_ok	40	40.024996	2529	415
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.not_Zeq_inf	40	40.089471	32276	2669
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_mem_correct2	40	23.472892	11229	2460	0.0.0.1.5.0.1.1.1.5.2.0.0.2	synth with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: intros; only 1: auto; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: unfold not; only 1: intro Hneg; only 1: intros [Hc1| Hc2]; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.equal_1	40	40.038725	8434	865
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.recursion_wd	40	40.101266	23217	3235
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	40	40.040012	9245	2713
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.recursion_0	40	0.008237	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.le_gt_trans	40	40.100107	22508	3195
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_sub	40	40.393452	30793	3223
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40	40.232097	78467	5025
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	40	40.147448	21467	1916
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map2_1bis	40	40.101146	35277	3542
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Relations.pointwise_pointwise	40	2.343377	2159	352	1.3.1.4.5.7	synth with cache (only 1: split; only 1: red; only 1: destruct 2; only 1: firstorder; only 1: intros h1 h2; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Relations.subrelation_id_proper	40	0.005911	3	1	2	synth with cache (only 1: apply H).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Relations.subrelation_respectful	40	0.011488	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Relations.subrelation_refl	40	0.133769	4	3	1.0.0	synth with cache (only 1: hnf; only 1: intros x y H'; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40	40.072560	14614	3261
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Relations.subrelation_proper	40	0.126789	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Relations.proper_subrelation_proper_arrow	40	0.017522	1	1	0	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Relations.pointwise_subrelation	40	0.006287	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_inv	40	40.187162	54986	2856
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Relations.forall_subrelation	40	0.043357	15	5	3.2	synth with cache (only 1: intro; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.iff_impl_subrelation	40	0.015930	5	3	2.0.0	synth with cache (only 1: hnf; only 1: intros A B [H1 H2]; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0.005372	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	0.009793	2	2	0.0	synth with cache (only 1: reduce; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0.007861	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	40	40.037696	7363	2216
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40	40.084566	3655	1220
coq-tactician-stdlib.8.12.dev	Coq.Arith.Le.le_elim_rel	40	40.138865	31949	4084
coq-tactician-stdlib.8.12.dev	Coq.Arith.EqNat.eq_nat_is_eq	40	40.174688	31609	5119
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40	40.320542	23022	1531
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono	40	40.059973	10344	1687
coq-tactician-stdlib.8.12.dev	Coq.Arith.EqNat.eq_eq_nat	40	0.027869	6	6	0.0.0.0.0.0	synth with cache (only 1: intros <-; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.EqNat.eq_nat_eq	40	0.251487	24	13	2	synth with cache (only 1: apply eq_nat_is_eq).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.Z_dec	40	4.116485	1248	398	3.0.0.0.0.1.0.0.0.1	synth with cache (only 1: intros; only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: auto; only 1: left; only 1: left; only 1: auto; only 1: now intuition).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_l	40	40.002474	341	93
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_cnf_tt	40	2.313905	3391	249	1.0.1.0.32	synth with cache (only 1: intros [| n]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.rel_prime_div	40	40.052511	14399	3922
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.lt_pred	40	40.126922	30392	3506
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40	40.037613	9342	2017
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40	40.151687	54822	5379
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	40	40.038896	9699	2273
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero	40	1.051698	891	84	19.2	synth with cache (only 1: intro X; only 1: auto  6 with sets).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Env.S.jump_pred_double	40	40.134690	46573	5449
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation.CPermutation_nil_app_cons	40	40.093802	31689	4035
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_reg_l	40	40.105500	21597	3016
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero_right	40	0.013134	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nmin_le_2	40	40.153702	62153	3314
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40	40.049583	11964	3300
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.lt_pred_n_n	40	0.474559	169	56	1.1.0.4	synth with cache (only 1: Nat.cases n; only 1: inversion 1; only 1: intros m IH; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero'	40	0.190921	30	6	0.7	synth with cache (only 1: unfold Add at 1; only 1: auto  6 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	40	40.087652	19655	4008
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.less_than_empty	40	0.011151	1	1	0	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_commutative	40	0.013169	1	1	0	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40	40.079483	7439	738
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	40	40.100664	21066	3421
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcft	40	40.340632	4489	1235
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zplus_compare_compat	40	40.339487	25594	2810
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zlt_is_le_bool	40	40.060663	19108	3550
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.039853	3	3	0.0.0	synth with cache (only 1: rewrite Z.leb_le; only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	40	40.085092	11873	3753
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_2	40	40.200598	17239	5306
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	40	40.119211	6919	555
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.test_field	40	1.074126	258	104	0.0.1.4.0.0	synth with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_r; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec0_wd	40	40.115532	5453	566
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation.Permutation_sym	40	40.160779	26832	4149
coq-tactician-stdlib.8.12.dev	Coq.Sets.Infinite_sets.Infinite_sets.approximant_can_be_any_size	40	40.079958	26416	5779
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	40	40.067948	13312	6776
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40	38.519920	14045	1900	1.7.3.11.1.2.5.1	synth with cache (only 1: intro n; only 1: split; only 1: intro H; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: intuition order; only 1: now left; only 1: now right; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	40	40.162881	37292	1342
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_odd_dec	40	29.970969	41594	2368	2.2.2.4.2.2.2.2.4.0.2.0.51.9	synth with cache (only 1: pattern n; only 1: destruct n; only 1: simpl; only 1: tauto; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: auto; only 1: auto; only 1: tauto; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: auto; only 1: auto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_opp_rev	40	40.050520	13665	3103
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	40	40.071478	22086	3380
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.add_2	40	40.085415	3202	1013
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40	40.090634	7627	1683
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40	40.051945	10134	3557
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.rel_prime_1	40	3.887810	2179	190	1.2.1.19.2	synth with cache (only 1: intros H; only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Euclid.modulo	40	40.089101	13839	3462
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	40	40.052132	15088	1624
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.unitE	40	0.497036	822	74	3.9.21	synth with cache (only 1: intro H; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation.Permutation_trans	40	1.439222	541	200	1.0.0.8	synth with cache (only 1: intros; only 1: apply perm_trans with (l' := l'); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	40	40.051569	11674	3505
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	40	0.089321	23	10	2.1.1	synth with cache (only 1: intro n; only 1: apply sqrt_square; only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.ExtensionalEquality.frefl	40	0.007628	2	1	1	synth with cache (only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_succ	40	8.570124	4735	593	0.0.5.1.1.5.1.0.0.26	synth with cache (only 1: N.induct n; only 1: simpl; only 1: easy; only 1: intros; only 1: destruct n; only 1: rewrite H; only 1: Morphisms.f_equiv; only 1: simpl; only 1: f_equal; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.add_s_m_Proper	40	40.053957	11243	1433
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	40	40.100134	29832	4037
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.ExtensionalEquality.fsym	40	0.186798	63	8	0.11	synth with cache (only 1: intros; only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_tail	40	40.174262	37327	4261
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.le_lt_or_eq	40	4.228395	1608	401	0.1.0.13.4	synth with cache (only 1: revert m; only 1: apply Nat.le_ind; only 1: now right; only 1: intros a b Hb; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Injective_carac	40	40.061649	18105	5022
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_le_compat_l	40	40.064797	12905	3983
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_1	40	2.968338	811	407	0.0.0.0.0.1.1.0.0.0	synth with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40	40.053878	5534	1318
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_associative	40	5.250974	2746	345	22.7	synth with cache (only 1: intros a b; only 1: auto  10 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_idempotent	40	0.014509	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40	40.028419	5829	2039
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_absorbs	40	0.033681	5	2	0.3	synth with cache (only 1: intros y H'1; only 1: auto  7 with sets).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec1	40	40.032524	8248	1685
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_plus_one_firstl	40	41.455573	6654	1460
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nxor_div2	40	40.062961	22589	2427
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.BinList.MakeBinList.jump_pred_double	40	40.171326	28191	3830
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40	40.041938	10520	2202
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	40	40.034005	8730	1264
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	40	7.564866	6922	1153	1.1.0.0.0.11.3.0.9.2.1.0	synth with cache (only 1: induction stack as [| [| ]]; only 1: simpl; only 1: intros HF; only 1: constructor; only 1: intros; only 1: simpl in *; only 1: inversion H; only 1: apply Sorted_merge; only 1: destruct H; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_succ_double	40	40.101079	18470	2191
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_is_one	40	40.122299	25973	3462
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	3.240022	1900	283	11.4.2	synth with cache (only 1: intro H; only 1: rewrite nlt_ge; only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	40	40.216937	85763	4782
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_succ	40	0.045165	8	6	1.0.1.0.0.0	synth with cache (only 1: destruct a; only 1: simpl N.to_nat; only 1: reflexivity; only 1: simpl; only 1: unfold Pos.to_nat; only 1: now rewrite !Pmult_nat_mult, Pos2Nat.inj_succ).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_2	40	40.220331	12086	2090
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	40	40.141988	48492	3675
coq-tactician-stdlib.8.12.dev	Coq.Arith.Factorial.fact_le	40	30.087913	16877	3105	8.7.5.0.3.2.0.0.0.8	synth with cache (only 1: induction 1; only 1: auto; only 1: destruct m; only 1: simpl; only 1: auto; only 1: destruct m; only 1: simpl; only 1: Nat.order'; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	40	40.074783	22381	3520
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	40	40.040503	9021	2927
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40	40.104556	30783	4121
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	40	40.028754	6862	1928
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Lget_app_Some	40	40.154256	20822	4164
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.bi_induction	40	40.206430	54802	6967
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Finite_downward_closed	40	40.279563	55403	6626
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	40	40.036595	8715	2258
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.Tget_Tempty	40	0.012434	5	1	4	synth with cache (only 1: now intros []).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40	40.030918	5938	2985
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_pred_max	40	4.293072	4483	324	3.0.0.0.17.29	synth with cache (only 1: unfold Z.succ, Z.pred; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nb_digits_unorm	40	40.101896	37824	3096
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	40	0.985075	187	74	0.0.1.2.1.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros; only 1: apply succ_wd in H; only 1: now rewrite 2!succ_pred in H; only 1: intros; only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	40	1.665890	790	187	0.1.8.1	synth with cache (only 1: intro n; only 1: rewrite nle_gt; only 1: rewrite lt_succ_r; only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_eq	40	40.182130	42251	4980
coq-tactician-stdlib.8.12.dev	Coq.Arith.Peano_dec.dec_eq_nat	40	40.198995	16729	2043
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40	40.123735	20295	3856
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	40	0.143860	29	11	1.0.2.2	synth with cache (only 1: split; only 1: now destruct 1; only 1: unfold In, MapsTo; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	40	40.060175	17672	3173
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Sorted.defs.Sorted_extends	40	40.218425	11797	3243
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_M	40	40.086261	28796	1855
coq-tactician-stdlib.8.12.dev	Coq.micromega.Refl.make_conj_rapp	40	40.076995	22520	4489
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.nth_order_tl	40	40.176150	34611	3656
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.not_Zeq	40	40.087934	30542	2962
coq-tactician-stdlib.8.12.dev	Coq.micromega.Refl.not_make_conj_cons	40	0.305420	16	9	0.0.2	synth with cache (only 1: intros a b c H H'; only 1: rewrite make_conj_cons; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Padd_ok	40	40.025463	6064	2352
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_not_lt	40	0.296125	8	2	6.0	synth with cache (only 1: intros LT EQ; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	40	40.039848	8901	2570
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	40	40.025711	6050	1464
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_increasing_1	40	40.020849	4508	1853
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	40	0.243865	12	7	0.0.2.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_2	40	40.064358	19961	2859
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zlt_not_le	40	0.519097	36	15	6.1	synth with cache (only 1: intros LT EQ; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_not_gt	40	0.013182	8	2	4.2	synth with cache (only 1: intros LE EQ; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_pred	40	3.703971	2190	353	4.0.19	synth with cache (only 1: destruct n; only 1: easy || now destruct 1; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40	4.201995	1738	839	0.0.0.1.0.0.0.0.0.2	synth with cache (only 1: generalize Rstar_contains_Rplus; only 1: intro T; only 1: red in T; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: intros x0 H'0; only 1: intros x1 y0 H'1; only 1: exists y0; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zgt_not_le	40	0.432197	72	22	4.4	synth with cache (only 1: intros LE EQ; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Classical_sets.Ensembles_classical.Strict_super_set_contains_new_element	40	40.217169	44109	4192
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	40	4.720111	699	215	0.0.0.0.0.0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros a b c; only 1: destruct (lt_ge_cases c 0) as [Hc| Hc]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: now nzsimpl; only 1: apply le_ind with (4 := Hc); only 1: solve_proper; only 1: now nzsimpl; only 1: clear c Hc; only 1: intros c Hc IH; only 1: nzsimpl; only 1: rewrite IH; only 1: apply mul_shuffle1; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40	40.024305	5665	1458
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_xO	40	40.171625	18379	2380
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	40	40.083330	17637	2557
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Znot_ge_lt	40	0.661973	377	45	0.21	synth with cache (only 1: Z.swap_greater; only 1: intuition Z.order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	0.142750	7	6	1.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Znot_lt_ge	40	0.027576	6	2	4.0	synth with cache (only 1: Z.swap_greater; only 1: intuition Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Znot_gt_le	40	0.255624	13	3	2.3	synth with cache (only 1: unfold Z.lt, Z.gt; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Znot_le_gt	40	0.021343	4	2	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	40	10.274118	3667	1142	1.8.2.5	synth with cache (only 1: intros a Ha; only 1: apply sqrt_le_square; only 1: apply le_0_l; only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	40	40.147015	53663	5761
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Rtauto.with_env.compose2	40	40.240783	18845	3639
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_dec	40	12.046420	11203	984	0.0.2.0.2.2.3.0.0.0.4.5.7.1.0.11.15	synth with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: auto; only 1: auto; only 1: now right; only 1: destruct p; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: now destruct p; only 1: now destruct p; only 1: now right; only 1: simpl; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.inter_b	40	40.021344	3610	2390
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_Zdiv_pos	40	40.072326	24813	3220
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lex	40	40.058230	14299	1590
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40	40.103160	29945	8540
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	40	40.080747	18622	8739
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40	40.103881	29821	6565
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.054834	6	6	0.0.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.le_refl	40	40.369332	160224	3868
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Pred_Type.Generic.all_not_not_ex	40	40.216236	37485	5264
coq-tactician-stdlib.8.12.dev	Coq.Sets.Classical_sets.Ensembles_classical.Subtract_intro	40	3.406073	1116	303	6.2.2.3	synth with cache (only 1: intro X; only 1: red; only 1: intros x H; only 1: auto  7 using Inhabited_Setminus with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Classical_sets.Ensembles_classical.Subtract_inv	40	0.038185	8	4	3.0.1.0	synth with cache (only 1: unfold Subtract at 1; only 1: intros A x y H'; only 1: induction H'; only 1: auto using Noone_in_empty with sets).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_pred_or	40	30.039774	18527	4302	4.0.0.0.1.1.0.1.0.0.0.1.0.1.1.2.2.0.1.2.0.4	synth with cache (only 1: induction p; only 1: simpl; only 1: right; only 1: now f_equal; only 1: destruct p; only 1: simpl; only 1: right; only 1: now destruct p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: intuition; only 1: intuition; only 1: left; only 1: now f_equal; only 1: right; only 1: now f_equal; only 1: right; only 1: simpl; only 1: now f_equal; only 1: now right; only 1: now left).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.byte_of_ascii_via_nat	40	40.085726	3533	780
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqk	40	40.138180	27502	905
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.between_Sk_l	40	40.148528	31746	3477
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_dec	40	1.832786	380	235	0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqke	40	0.037555	3	3	0.0.0	synth with cache (only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: elim (StrictOrder_Irreflexive _ LT)).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.to_nat_inj	40	40.205922	55380	3828
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	1.488400	181	61	0.0.0.0.0.0.0.0.2	synth with cache (only 1: destr_bool; only 1: constructor; only 1: constructor; only 1: ct; only 1: constructor; only 1: constructor; only 1: ct; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_eq	40	0.031826	1	1	0	synth with cache (only 1: now intros <-).
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.JMeq_eq_refl	40	0.006158	3	1	2	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_l	40	40.033130	10913	1178
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40	40.148071	23417	5495
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListDec.Dec_in_Type.NoDup_dec	40	40.233890	25787	3351
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_Leaf	40	0.050899	7	4	0.0.0.3	synth with cache (only 1: induction s as [| l IHl o r IHr]; only 1: reflexivity; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	40	40.091629	9148	3091
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Popp_ok	40	40.023955	5721	2036
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40	40.210836	59894	3985
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	40	40.252762	72919	3661
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_cardinal	40	40.058701	20396	1370
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.UIP_refl_refl	40	0.726122	585	105	24	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.Backport_OT.lt_trans	40	0.379440	203	14	20	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.inj_pairT2_refl	40	0.007623	6	1	5	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	40	3.277583	1239	319	1.0.0.0.1.11.0.0	synth with cache (only 1: intro; only 1: intro; only 1: nzinduct n; only 1: nzsimpl; only 1: now f_equiv; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrsetoid.compat_Reflexive	40	0.011449	2	2	0.0	synth with cache (only 1: intros; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	40	0.146984	7	6	0.1.0.0.0.0	synth with cache (only 1: intros; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.solution_left	40	0.309689	124	32	1.1.4.3	synth with cache (only 1: intro eq_rect_eq; only 1: intros; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.solution_right	40	0.016440	5	3	2.0.0	synth with cache (only 1: intros; only 1: subst; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.deletion	40	0.010352	4	2	1.1	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_lt_compat	40	40.083680	25126	5644
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.simplification_heq	40	0.265514	151	32	0.2.4.2	synth with cache (only 1: intros H H'; only 1: subst; only 1: apply H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	40	0.451306	52	22	1.1.0.0.1.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.not_injective_elim	40	40.164635	61743	4333
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.simplification_existT2	40	0.283699	103	25	0.0.0.5.1	synth with cache (only 1: intros H J; only 1: apply H; only 1: apply eq_dep_eq; only 1: apply eq_sigT_eq_dep; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40	40.556538	245294	8927
coq-tactician-stdlib.8.12.dev	Coq.Structures.Orders.Compare2EqBool.eqb_eq	40	40.132814	38886	9521
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.not_Zne	40	6.375810	6389	381	16.0.34.3	synth with cache (only 1: intro H; only 1: destruct (Z.eq_decidable n m); only 1: trivial; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Structures.Orders.OT_to_Full.le_lteq	40	0.135401	38	12	6	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_pred	40	3.799136	1372	540	1.0.1.0.0.0.8.3	synth with cache (only 1: intro H; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: apply succ_pred_double; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.le_le_S_dec	40	40.137933	21543	2509
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.munion_rotate	40	40.088945	13754	4645
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.remove_spec	40	40.032646	7525	2327
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.of_N_None_iff	40	40.047041	4814	636
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zgt_asym	40	1.121099	286	67	2.0.9	synth with cache (only 1: intros; only 1: Z.swap_greater; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA7	40	40.050657	17333	1441
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.Integers_infinite	40	40.138456	23971	1303
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zgt_irrefl	40	0.124708	120	20	3.6.0	synth with cache (only 1: Z.swap_greater; only 1: intros H; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_ok	40	0.009379	6	1	5	synth with cache (only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_sub	40	40.040614	10872	2334
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.le_ge_dec	40	0.755549	137	76	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_nil_r	40	40.234644	73526	4180
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.le_gt_dec	40	0.122884	18	11	0.0.1	synth with cache (only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_nil_end	40	0.106910	7	6	0.0.0.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.complement_inverse	40	0.005915	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40	40.083716	28573	3167
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.meq_congr	40	1.718416	468	235	0.3.1.2	synth with cache (only 1: intros; only 1: unfold meq; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.agree_env_subset	40	40.071142	19745	1956
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	40	7.431366	3030	835	0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1.0.0.1.0	synth with cache (only 1: case compare_spec; only 1: intro EQ; only 1: split; only 1: easy; only 1: intro H; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity; only 1: intro H; only 1: split; only 1: easy; only 1: intro EQ; only 1: reflexivity || destruct H; only 1: intro H; only 1: split; only 1: easy; only 1: intro EQ; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40	40.108630	40233	5008
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_app	40	40.170842	21608	2657
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_middle	40	0.020940	1	1	0	synth with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).
coq-tactician-stdlib.8.12.dev	Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40	40.146565	50214	4001
coq-tactician-stdlib.8.12.dev	Coq.Sets.Classical_sets.Ensembles_classical.Included_Strict_Included	40	7.486520	3065	382	0.18.4	synth with cache (only 1: intros x y; only 1: compute; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec1	40	40.109872	38623	2437
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.eqlistA_equivlistA	40	40.243320	7296	2194
coq-tactician-stdlib.8.12.dev	Coq.Classes.Equivalence.Respecting.respecting_equiv_obligation_3	40	40.064761	13469	5136
coq-tactician-stdlib.8.12.dev	Coq.Classes.Equivalence.pointwise_reflexive	40	0.009250	1	1	0	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Equivalence.pointwise_symmetric	40	0.007753	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_3	40	40.077417	23230	2837
coq-tactician-stdlib.8.12.dev	Coq.Classes.Equivalence.pointwise_transitive	40	0.009723	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_Empty	40	40.051264	14302	3576
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_lt_reg_r	40	40.037744	8779	2345
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40	40.068704	18916	6166
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.asin_0	40	40.027482	7282	2105
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_plus_distr	40	40.080504	11577	1358
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	40	5.138243	1340	646	0.0.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: easy; only 1: intro LT; only 1: contradict ltac:(H); only 1: intro EQ; only 1: contradict ltac:(LT); only 1: rewrite EQ; only 1: apply irreflexivity; only 1: intro H; only 1: split; only 1: easy; only 1: intro LT; only 1: contradict ltac:(LT); only 1: rewrite H; only 1: apply irreflexivity; only 1: intro H; only 1: split; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CEquivalence.Respecting.respecting_equiv_obligation_3	40	40.055685	13950	3587
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Rmul_0_l	40	40.141584	29517	461
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pos_sub_gt	40	40.399341	16749	3937
coq-tactician-stdlib.8.12.dev	Coq.Classes.CEquivalence.pointwise_reflexive	40	0.019684	3	1	2	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.is_empty_spec	40	40.070927	18713	4756
coq-tactician-stdlib.8.12.dev	Coq.Classes.CEquivalence.pointwise_symmetric	40	0.008606	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec1	40	0.018268	4	2	0.2	synth with cache (only 1: repeat red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CEquivalence.pointwise_transitive	40	0.020050	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec2w	40	0.048899	10	5	3.1.0.0	synth with cache (only 1: intros; only 1: induction s; only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.fold_spec	40	0.008719	3	1	2	synth with cache (only 1: constructors).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.MoreInt.leb_le	40	40.131033	13041	3120
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.union_1	40	40.103458	37213	3564
coq-tactician-stdlib.8.12.dev	Coq.Classes.CEquivalence.pointwise_equivalence	40	0.273156	13	4	7	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.subset_spec	40	40.243742	67399	3304
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.between_restr	40	13.738608	8802	1012	3.2.21.3	synth with cache (only 1: intros x y; only 1: induction 1; only 1: auto; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_comp	40	40.046224	14622	2017
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Well_founded.Fix_F_eq	40	0.036158	2	2	0.0	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.plus_minus	40	40.147142	31738	4006
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	40	40.064010	18181	3156
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40	40.087401	11932	1912
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_compat	40	40.060975	20108	3087
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_not_Zodd	40	14.367050	7204	2832	0.0.0.1.0.2.0.0.3.4.0.1.0.2.0.0.0.1.1	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: tauto; only 1: destruct p; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: now destruct p; only 1: intros; only 1: intros Hb; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: intros; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_not_Zeven	40	0.071542	5	5	0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.minus_plus	40	1.101024	1199	110	32	synth with cache (only 1: now apply Nat.add_sub_eq_l).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.ifP	40	40.152183	13250	358
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.respectful_per_obligation_2	40	40.036956	7254	398
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.ifPn	40	0.526351	297	20	0.23	synth with cache (only 1: intuition; only 1: by case  def_b: b ; constructor).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.ifT	40	0.013276	3	1	2	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.ifF	40	0.006990	1	1	0	synth with cache (only 1: by move ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.ifN	40	0.012416	3	1	2	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.if_same	40	0.008454	1	1	0	synth with cache (only 1: by case  def_b: b ; constructor).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.if_neg	40	0.006326	3	1	2	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.fun_if	40	0.007615	1	1	0	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.if_arg	40	0.007272	1	1	0	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.even_div2	40	40.147099	33154	5039
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.ifE	40	0.115062	38	4	10	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.singleton	40	40.233211	64482	2400
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_equiv	40	40.112366	22513	3627
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Rtauto.with_env.compose3	40	18.754007	10117	1776	2.0.13.8.0.0.0.0.0	synth with cache (only 1: induction F; only 1: intros A B C H; only 1: simpl; only 1: intros; only 1: auto; only 1: intros A eq_dec; only 1: intros n H1 H2; only 1: apply IHF; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40	5.196421	1468	659	0.0.0.1.0.0.0.0.0.0.1.0.1.1.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: easy; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_mem_complete1	40	40.045329	11876	4188
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40	40.055959	13109	1849
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_Sn	40	2.540160	1146	211	4.6.4.0	synth with cache (only 1: boolify_even_odd; only 1: intuition; only 1: unfold Z.succ, Z.pred; only 1: now destruct n as [| [| | ]| [| | ]]).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	40	40.077318	5011	2390
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.recursion_succ	40	40.086207	28326	4238
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.pred_succ	40	0.022867	3	3	0.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.equal_2	40	40.071672	24011	3588
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.pred_0	40	0.007191	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_le_trans	40	40.112439	26169	3414
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.one_succ	40	0.006747	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40	40.154661	42484	4279
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.two_succ	40	0.004959	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	40	40.135096	7659	1843
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.add_0_l	40	0.007830	2	2	0.0	synth with cache (only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.add_succ_l	40	0.029987	5	5	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.sub_0_r	40	0.135887	32	14	0.0.0.0.5	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_o	40	40.068676	20218	3221
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_O_le	40	28.475871	8462	2457	13.0.1.0.0.0.1.0.0.1.5	synth with cache (only 1: revert m; only 1: induction n; only 1: intro m; only 1: Nat.nzsimpl; only 1: right; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	40	40.066939	10625	3815
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.le_plus_minus_r	40	3.844831	1545	448	0.0.0.0.1.0.6.0.0.2	synth with cache (only 1: revert m; only 1: induction n; only 1: intros; only 1: now Nat.nzsimpl; only 1: destruct m; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, Peano.le_S_n; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.respectful_per_obligation_2	40	40.044330	6708	702
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	40	40.092781	29746	4377
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.exists_le_S	40	6.026808	5892	654	1.1.5.16.2	synth with cache (only 1: intro n; only 1: intro H; only 1: induction 1; only 1: auto; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.flip_proper_obligation_1	40	0.242229	114	15	15	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.trans_contra_co_type_morphism_obligation_1	40	0.058734	8	1	7	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	40	40.096861	7959	1759
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.trans_contra_inv_impl_type_morphism_obligation_1	40	0.199626	49	26	6	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	40	0.108090	12	6	1.0	synth with cache (only 1: intros x x' EQ; only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono	40	40.057005	12578	1272
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40	40.308660	24508	1784
coq-tactician-stdlib.8.12.dev	Coq.Arith.EqNat.eq_nat_elim	40	40.205821	45792	6526
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_add_r	40	40.063195	519	105
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.Z_dec'	40	40.094767	33028	3340
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.trans_co_impl_type_morphism_obligation_1	40	1.075350	205	179	6	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.Z_zerop	40	0.083495	12	5	0.0.0.3	synth with cache (only 1: intro; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff	40	40.233822	58932	3544
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	40	40.052726	12827	4315
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	40	40.079517	23813	3702
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nmin_le_3	40	40.123922	47240	3122
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation.CPermutation_split	40	40.095247	32945	3754
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_le_reg_l	40	40.192016	48294	3087
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40	5.497045	1427	623	2.0.0.0.1.1.0.1.0.1.1.1.0.1	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Env.S.nth_spec	40	40.138944	23551	3251
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nmin_le_4	40	0.058131	14	4	3.0	synth with cache (only 1: rewrite !Nleb_Nle; only 1: N.solve_min).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nmin_le_5	40	0.048153	2	2	0.0	synth with cache (only 1: rewrite !Nleb_Nle; only 1: N.solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	40	40.073810	20932	4080
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.trans_sym_co_inv_impl_type_morphism_obligation_1	40	1.128135	144	132	3.1.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Env.S.nth_jump	40	0.056199	18	5	2.3	synth with cache (only 1: unfold jump; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	40	40.194129	15375	3068
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40	40.057086	15576	3243
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40	40.044531	10558	2608
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zcompare_succ_Gt	40	40.148028	25911	2346
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.trans_sym_contra_arrow_morphism_obligation_1	40	1.134609	149	140	6	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zeq_is_eq_bool	40	40.096354	34095	4151
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	40	40.066258	14199	3006
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.per_partial_app_type_morphism_obligation_1	40	0.123599	6	1	5	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Equivalence.pointwise_equivalence	40	16.811332	2123	251	0.0.27.0.0.2	synth with cache (only 1: split; only 1: firstorder; only 1: firstorder; only 1: intros x; only 1: intros; only 1: now transitivity y).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	40	40.079828	6920	1168
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_wd	40	40.053434	7531	1373
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	40	40.043347	8894	2599
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	40	40.080840	24529	2578
coq-tactician-stdlib.8.12.dev	Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous	40	40.195716	56021	5531
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_spec	40	20.796440	14342	1780	0.2.1.3.0.2.20.4.2	synth with cache (only 1: intros; only 1: split; only 1: inversion 1; only 1: subst; only 1: auto; only 1: inv; only 1: intro H; only 1: unfold singleton; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.trans_co_eq_inv_arrow_morphism_obligation_1	40	0.936002	321	165	9	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	40	40.144299	54043	1823
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	40	40.054467	16096	2471
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	40	40.038754	7338	3417
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_mirr	40	40.065369	22611	2948
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40	40.117009	5660	1863
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.add_3	40	40.183095	3672	1511
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.not_rel_prime_0	40	40.067675	23647	1663
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40	40.047503	10423	3893
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_morph_transp	40	40.185652	40401	3490
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.remove_s_m_Proper	40	40.069845	22887	2447
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_cons	40	0.063281	13	8	0.0.0.0.1.1	synth with cache (only 1: repeat red; only 1: intros x y l1 l2 Hin; only 1: subst; only 1: intros HE; only 1: constructor; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_aux	40	40.075692	21290	5208
coq-tactician-stdlib.8.12.dev	Coq.Program.Subset.subset_eq	40	40.155336	52167	7614
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.ExtensionalEquality.ftrans	40	40.381215	159456	5140
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.nat_total_order	40	40.223287	14268	1752
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_le_compat_r	40	40.035359	6893	2675
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.ExtensionalEquality.rrefl	40	0.008556	4	2	2.0	synth with cache (only 1: intros H ?; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Surjective_list_carac	40	40.268379	71579	4352
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_xy	40	40.109281	13696	3143
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	40	40.019155	3826	996
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Couple_as_union	40	40.087568	28799	1287
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Well_founded.Fix_F_inv	40	14.748971	8124	1251	0.6.7.7.2.0	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: intros; only 1: rewrite <- Wf.Fix_F_eq; only 1: induction (Rwf x); only 1: rewrite <- Wf.Fix_F_eq; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.JMeq_sym	40	0.752314	1247	111	0.12.15	synth with cache (only 1: intros A C h1 h2; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	40	40.033614	5972	3304
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.JMeq_trans	40	0.019984	8	3	1.0.4	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2i_p2ibis	40	40.271634	12526	3144
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec2	40	40.027193	5067	2593
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.BinList.MakeBinList.nth_jump	40	40.105612	30575	4120
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	40	40.026163	6023	1384
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nneg_bit0	40	40.126982	31456	2811
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_or_odd	40	12.804712	27132	1011	3.3.64.19	synth with cache (only 1: Nat.induct n; only 1: intuition; only 1: intro p; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	40	40.067168	19739	2928
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_ge_compat_l	40	2.245942	1654	288	11.6	synth with cache (only 1: intros x y; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_odd_dec	40	0.032836	5	5	0.0.0.0.0	synth with cache (only 1: induction n; only 1: auto with arith; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge_stack	40	40.125012	36113	7552
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_add	40	40.154728	16786	1387
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_1	40	40.101368	20201	4467
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	40	40.097618	32521	4313
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	40	40.354219	152090	3195
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.le_refl	40	0.487649	500	65	16	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.not_even_and_odd	40	0.812403	442	105	4.0.2.0.4.0	synth with cache (only 1: induction n; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40	40.038837	11821	1209
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	40	40.081412	24446	2392
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	40	0.051010	3	2	0.1	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	40	40.042615	11160	2343
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.Tget_Tadd	40	40.185844	34435	3517
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Intersection_preserves_finite	40	40.129278	45571	7426
coq-tactician-stdlib.8.12.dev	Coq.Program.Subset.match_eq_rewrite	40	3.931950	6973	698	2.11.1.3.4.17	synth with cache (only 1: intro; only 1: intro; only 1: intros H x0; only 1: intros [x y]; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	40	40.050069	12667	3326
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.recursion_wd	40	40.536200	30736	2854
coq-tactician-stdlib.8.12.dev	Coq.Arith.EqNat.eq_nat_decide	40	10.337132	4775	1202	5.0.0.0.0.1.0.0.3.0.1.1.1	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: auto; only 1: now right; only 1: destruct m; only 1: now right; only 1: destruct (IHn m); only 1: left; only 1: auto; only 1: now right).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.recursion_0	40	0.016777	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.get_empty	40	0.046449	10	7	0.2.0.0	synth with cache (only 1: destruct i; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.Rstar_reflexive	40	0.010005	6	2	2.2	synth with cache (only 1: intros U R H'; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.Rplus_contains_R	40	0.008396	1	1	0	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.del_head_nonnil	40	40.093138	35676	1904
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40	40.075545	22481	4162
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40	40.149784	60003	1591
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv	40	40.193462	11514	2170
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	40	0.021638	4	3	0.1.0	synth with cache (only 1: intro n; only 1: rewrite lt_succ_r; only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Peano_dec.le_unique	40	40.133070	48717	4936
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	40	40.108601	11278	2619
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.complement_inverse	40	0.006734	2	1	1	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40	40.063096	18409	3214
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Sorted.defs.Sorted_StronglySorted	40	40.216772	16703	3540
coq-tactician-stdlib.8.12.dev	Coq.Arith.EqNat.beq_nat_refl	40	1.636004	2338	119	2.1.4.49	synth with cache (only 1: Nat.induct ltac:(n); only 1: simpl; only 1: trivial; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.master_key	40	0.005090	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_half	40	40.160767	60178	1536
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.nth_order_last	40	40.163048	13320	1913
coq-tactician-stdlib.8.12.dev	Coq.micromega.Refl.not_make_conj_app	40	40.152138	16058	2571
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	40	40.036908	8245	2343
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40	40.066955	19355	2664
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_Empty	40	40.071372	21847	4186
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_decreasing_0	40	40.032763	8611	2588
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	40	36.125973	133961	6129	4.57.3.6.0	synth with cache (only 1: Bool.destr_bool; only 1: compute; only 1: intro Hxz; only 1: elim (CRelationClasses.StrictOrder_Irreflexive x); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_2	40	3.100527	1283	285	0.2.13.0	synth with cache (only 1: intros; only 1: inversion H; only 1: intuition; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_min	40	40.140071	33015	2790
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_3_facts.coherent_symmetric	40	40.077408	16940	7519
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.eq_sym	40	0.019206	19	3	6	synth with cache (only 1: now symmetry).
coq-tactician-stdlib.8.12.dev	Coq.Arith.EqNat.beq_nat_true	40	2.008561	639	204	1.0.0.0.0.0.1.0.5	synth with cache (only 1: Nat.double_induct n m; only 1: simpl; only 1: destruct m; only 1: easy; only 1: easy; only 1: intro n; only 1: easy; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_3	40	0.194361	37	13	0.0.0.1.1	synth with cache (only 1: inversion_clear 1; only 1: inversion_clear H0; only 1: intuition; only 1: compute in H0; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	40	40.043898	11959	2318
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_xI	40	40.230321	11032	1246
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40	40.082277	25625	4078
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40	40.034357	3902	1385
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PsubX_ok	40	40.021621	3075	1744
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	40	40.059260	15261	4219
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	1.679815	1469	238	20.0.0	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA8	40	33.573323	15303	1621	1.16.2.1.10.2.3	synth with cache (only 1: destruct x; only 1: trivial; only 1: induction p as [p IHp| p IHp| ]; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: now destruct 1 || now destruct 2).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_Zmod_pos	40	40.053931	17676	3723
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.diff_b	40	40.024602	3942	3013
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	40	40.107919	33021	7972
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	40	8.024444	3610	447	0.0.1.0.18.7	synth with cache (only 1: intros n H; only 1: apply le_ind with (4 := H); only 1: solve_proper; only 1: now nzsimpl'; only 1: intros; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.GenericMinMax.max_l	40	40.191021	72433	5798
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	40	0.472633	164	59	0.0.0.0.2.0.1.0	synth with cache (only 1: intros; only 1: apply imp_iff_compat_r; only 1: split; only 1: intros; only 1: apply pred_wd in H; only 1: now do 2 rewrite pred_succ in H; only 1: symmetry; only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.sub_succ_r	40	21.547054	15940	3338	2.0.7.4.0.0.5.10	synth with cache (only 1: revert m; only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: destruct m; only 1: now destruct n; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_minimal	40	3.822402	7787	887	2.27.3	synth with cache (only 1: red; only 1: compute; only 1: destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.mul_0_l	40	0.004912	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.L_sanity	40	40.164217	34995	2522
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_lt	40	40.190401	10782	2004
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_dec	40	40.070656	20874	5624
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_r	40	40.042005	9506	1458
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	40	40.035390	7103	2887
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_empty_x	40	40.105990	36775	4701
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListDec.uniquify_map	40	40.169861	32659	1465
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_cardinal	40	40.124103	48029	2366
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddX_ok	40	40.026750	6231	1049
coq-tactician-stdlib.8.12.dev	Coq.Arith.EqNat.beq_nat_false	40	5.335267	4542	596	0.0.3.2.5.0.1.16	synth with cache (only 1: Nat.double_induct n m; only 1: intros a Ha; only 1: intro H1; only 1: subst; only 1: discriminate; only 1: now try Nat.order'; only 1: intros a b Ha Hb; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	40	40.212516	28194	5683
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_ge_compat_r	40	11.383783	7940	1442	12.7	synth with cache (only 1: intros x y; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	0.575011	44	16	3.1	synth with cache (only 1: intros n m; only 1: apply lt_lt_add_r).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.Backport_OT.compare	40	40.252430	72956	5249
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_nge	40	1.227472	106	30	6.0.3	synth with cache (only 1: intros n m; only 1: unfold Z.lt, Z.le, Z.eq; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.lt_wf	40	40.227837	21315	3913
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.le_plus_minus	40	22.905314	9262	3299	0.0.0.0.1.0.6.0.0.4	synth with cache (only 1: revert m; only 1: induction n; only 1: intros; only 1: now Nat.nzsimpl; only 1: destruct m; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, Peano.le_S_n; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	40	40.147860	56243	4267
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.039445	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.acc_A_B_lexprod	40	40.101621	35709	4609
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.cardinal_Im_intro	40	40.163975	39364	5504
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.simplification_existT1	40	40.356702	152461	4721
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	40	0.326226	22	14	0.0.0.0.0.2	synth with cache (only 1: Bool.destr_bool; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.simplification_K	40	0.016644	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40	40.559784	250572	8452
coq-tactician-stdlib.8.12.dev	Coq.Structures.Orders.OTF_LtIsTotal.lt_total	40	40.095355	25032	9005
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_inj	40	40.144848	37792	4263
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.to_N_via_nat	40	40.086882	34439	2017
coq-tactician-stdlib.8.12.dev	Coq.Arith.EqNat.beq_nat_eq	40	3.426592	1965	377	1.0.3.0.0.0.1.0.7	synth with cache (only 1: induction n; only 1: simpl; only 1: destruct m; only 1: easy; only 1: easy; only 1: simpl; only 1: destruct m; only 1: easy; only 1: contradiction || auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_lt_or_eq	40	40.087965	30008	2338
coq-tactician-stdlib.8.12.dev	Coq.Bool.IfProp.Iftrue_inv	40	0.694121	852	107	1.0.1.14	synth with cache (only 1: intro H; only 1: destruct 1; only 1: intuition; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zgt_trans	40	0.111409	10	6	0.1.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now transitivity m).
coq-tactician-stdlib.8.12.dev	Coq.Bool.IfProp.Iffalse_inv	40	0.034190	7	6	0.0.0.1.0.0	synth with cache (only 1: destruct 1; only 1: intros; only 1: case diff_true_false; only 1: auto with bool; only 1: intros; only 1: auto with bool).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_morph	40	40.026014	6059	2121
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_gt_trans	40	0.247847	106	21	0.0.9	synth with cache (only 1: intros H; only 1: Z.swap_greater; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zgt_le_trans	40	0.031214	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.radd_ext5_Proper	40	0.084496	2	1	1	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.le_lt_eq_dec	40	40.107021	20682	3670
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Power_set_Inhabited	40	5.045522	25019	774	2.2.0.2.34.55	synth with cache (only 1: intro x; only 1: exists x; only 1: split; only 1: red; only 1: intros H'0 H'1; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.rmul_ext5_Proper	40	0.019738	3	1	2	synth with cache (only 1: exact (Rmul_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.ropp_ext5_Proper	40	0.010940	1	1	0	synth with cache (only 1: exact (Ropp_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_assoc	40	40.136391	38751	4818
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_an_order	40	0.223312	41	13	0.0.0.7	synth with cache (only 1: constructor; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_transitive	40	0.012255	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.rsub_ext7_Proper	40	0.015448	1	1	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40	40.065694	16376	5948
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_assoc_reverse	40	0.057544	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.StrictOrder_Asymmetric	40	40.391487	160973	8437
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_comm_cons	40	0.009628	1	1	0	synth with cache (only 1: auto using app_assoc).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.subrelation_symmetric	40	0.008823	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.munion_perm_left	40	40.099405	15143	4571
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Reflexive	40	0.019569	6	4	2.0.0.0	synth with cache (only 1: hnf; only 1: intros; only 1: hnf; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	4.657202	661	292	0.0.0.2.5	synth with cache (only 1: intros n IH H; only 1: rewrite add_comm; only 1: apply add_pos_nonneg; only 1: assumption; only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Antisymmetric	40	0.372702	194	57	2.2.0.2.0.1	synth with cache (only 1: hnf; only 1: intros; only 1: apply H; only 1: red in H0; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.agree_env_jump	40	40.064786	22148	2272
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.flip.flip_PreOrder	40	0.026738	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_le_compat_l	40	40.080130	29407	2803
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.flip.flip_StrictOrder	40	0.161195	10	2	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.flip.flip_PER	40	0.051781	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec2	40	40.049546	14051	1903
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_true	40	0.029002	8	3	1.4.0	synth with cache (only 1: destr_bool; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_equivlistA	40	40.276642	5841	1756
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Equivalence	40	0.051147	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	40	40.112914	42716	2676
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.complement.complement_Irreflexive	40	0.006670	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Classical_sets.Ensembles_classical.Strict_Included_inv	40	40.245541	37935	4520
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.complement.complement_Symmetric	40	0.007834	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Classical_sets.Ensembles_classical.not_SIncl_empty	40	0.052249	11	8	1.1.0.0.0.0	synth with cache (only 1: intro X; only 1: red; only 1: intro H'; only 1: elim H'; only 1: intro; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_eq_nil	40	1.607615	619	170	0.3.0.1.8	synth with cache (only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: now discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_compat	40	40.218291	9145	1766
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_4	40	40.200908	76326	2896
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_1	40	40.081479	23989	4604
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zge_trans	40	4.145329	1824	385	9.4.3	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_lt_reg_l	40	40.028586	5541	2594
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40	2.028941	9842	133
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_mem_complete2	40	32.515613	11584	3374	0.0.0.4.1.4.1.2.0.0.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: simpl; only 1: unfold not; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: intro; only 1: absurd (a0 = a); only 1: auto with datatypes; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_eqA	40	2.332368	378	110	0.0.0.3.1.2.0	synth with cache (only 1: intros x y z H; only 1: induction 1; only 1: constructor; only 1: transitivity y; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	40	40.232049	41390	6303
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.le_dec	40	5.285328	2496	554	2.0.0.1.0.0.0.2.1.2.0.0.1.7	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: intuition Nat.order; only 1: left; only 1: apply Peano.le_0_n; only 1: destruct m; only 1: now right; only 1: destruct (IHn m); only 1: left; only 1: apply Peano.le_n_S; only 1: auto; only 1: right; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.asin_1	40	40.028055	7991	1911
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.In_InA	40	0.527393	136	33	0.3.4.1	synth with cache (only 1: intros; only 1: rewrite InA_altdef, Exists_exists; only 1: exists x; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_involutive	40	40.044549	11372	3094
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.EqdepDec.trans_sym_eq	40	6.102473	20594	835	0.77.1	synth with cache (only 1: intros; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_ok	40	40.046589	12030	2586
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pos_sub_opp	40	40.223588	21776	4729
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_mul_l	40	40.111700	15019	448
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.union_2	40	40.117747	42310	4868
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.MoreInt.leb_nle	40	40.337984	46683	2455
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	40	0.225758	123	31	14	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.empty_spec	40	40.225045	66144	3738
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.union_3	40	0.516733	145	58	6.1.0	synth with cache (only 1: intros; only 1: apply <- union_spec; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_compat	40	40.079867	15059	2077
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	40	40.067455	21579	1839
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	40	40.060951	15141	2898
coq-tactician-stdlib.8.12.dev	Coq.Bool.IfProp.IfProp_true	40	10.073575	21949	1894	0.34.17	synth with cache (only 1: intro p; only 1: inversion 1; only 1: auto with bool).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.L_R	40	14.282235	14486	1081	12.6.31.0.79	synth with cache (only 1: destruct m as [| m]; only 1: now PeanoNat.Nat.nzsimpl; only 1: assert (succ_r : forall x y, x + S y = S (x + y)) by now induction x; only 1: PeanoNat.Nat.nzsimpl; only 1: left).
coq-tactician-stdlib.8.12.dev	Coq.Bool.IfProp.IfProp_false	40	0.053619	9	9	1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Bool.IfProp.IfProp_or	40	0.035259	12	7	0.1.0.0.0	synth with cache (only 1: destruct 1; only 1: left; only 1: auto with bool; only 1: right; only 1: auto with bool).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	40	1.850713	2376	179	0.0.0.2.1.35	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	40	0.901520	298	103	0.0.0.1.0.0.0.0.2.0	synth with cache (only 1: intros a b q r Ha (Hb, Hr) EQ; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: apply mod_bound_pos; only 1: order; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.complement_proper_obligation_1	40	40.036596	7611	1542
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.flip_proper_obligation_1	40	0.016998	8	1	7	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Relations.inverse_image_of_equivalence	40	40.178249	68199	10003
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.odd_div2	40	40.164906	32982	4368
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectCore.introNTF	40	40.189401	14177	508
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectCore.introTF	40	0.012475	1	1	0	synth with cache (only 1: by case c; case Hb).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.trans_contra_co_morphism_obligation_1	40	0.633694	330	74	16	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectCore.elimNTF	40	0.012632	1	1	0	synth with cache (only 1: by case c; case Hb).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectCore.elimTF	40	0.007512	1	1	0	synth with cache (only 1: by move <-; case Hb).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.remove	40	40.240888	95600	2893
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.trans_contra_inv_impl_morphism_obligation_1	40	0.383954	158	77	9	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	40	1.624036	999	77	0.2.0.1.24	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Rtauto.with_env.weaken	40	40.086021	27843	4970
coq-tactician-stdlib.8.12.dev	Coq.Relations.Relations.inverse_image_of_eq	40	0.964415	626	199	0.2.0.0.5.1.0.1	synth with cache (only 1: intros; only 1: split; only 1: split; only 1: destruct 1; only 1: destruct 1; only 1: trivial; only 1: red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.lt_dec	40	6.647575	3299	598	7.7.4.2.5	synth with cache (only 1: destruct m; only 1: auto with arith; only 1: destruct (le_gt_dec n m); only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.gt_dec	40	0.007258	1	1	0	synth with cache (only 1: apply le_dec).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.ge_dec	40	0.258424	52	20	0.3.0.2	synth with cache (only 1: elim (le_lt_dec n m); only 1: intros; only 1: apply le_dec; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40	40.076126	21316	3047
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_Sn	40	40.298673	26908	4139
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_trans	40	40.147062	24098	2761
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40	40.194821	60151	3168
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40	0.021771	7	4	0.0.3.0	synth with cache (only 1: intros IndefDescr A B R H; only 1: exists (fun x => proj1_sig (IndefDescr B (R x) (H x))); only 1: intro x; only 1: apply (proj2_sig (IndefDescr B (R x) (H x)))).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	40	40.248870	9567	1536
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40	40.036069	2132	400
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_b	40	40.037842	10385	482
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_le_compat_l	40	40.124553	33614	3701
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	40	40.030628	6331	1974
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.append_rr_match	40	0.012889	2	1	1	synth with cache (only 1: exact (rmatch _ _ _)).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.append_bb_match	40	0.012569	1	1	0	synth with cache (only 1: exact (rmatch _ _ _)).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsspec	40	40.067786	22267	2960
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	40	40.091764	28799	3939
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.exists_S_le	40	40.199287	22185	3000
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.in_int_intro	40	0.235908	84	26	0.3.5	synth with cache (only 1: intro z; only 1: intros n m H1 H2; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	40	33.760859	9714	1812	0.0.0.0.0.3.17	synth with cache (only 1: intro z; only 1: intros n m H; only 1: apply mul_le_mono_nonneg; only 1: apply le_0_l; only 1: intuition order; only 1: apply le_0_l; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	40	40.081146	22931	3044
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_le_mono	40	40.044120	10440	2111
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	40	0.357673	59	23	0.0.0.4.0	synth with cache (only 1: intros; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.in_int_lt	40	0.640152	516	88	7.3.0.3	synth with cache (only 1: intros L R n; only 1: intro H; only 1: firstorder; only 1: PeanoNat.Nat.Private_Tac.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40	40.299078	17327	3460
coq-tactician-stdlib.8.12.dev	Coq.Bool.IfProp.IfProp_sum	40	6.594021	5947	1267	0.0.5.3.0.0.5.3.2	synth with cache (only 1: intros A B []; only 1: intros; only 1: left; only 1: inversion H; only 1: assumption; only 1: intros; only 1: right; only 1: inversion H; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_l	40	40.004315	540	104
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_and_pol	40	40.159105	34052	2092
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40	40.047689	12290	2224
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	40	40.053168	12835	3686
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.incl_clos_trans	40	0.145025	190	30	0.16	synth with cache (only 1: left; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_lt_reg_l	40	40.157287	42027	2665
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_compat	40	40.096684	28991	4946
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nmin_lt_3	40	40.061768	17453	5186
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_le_compat_l	40	0.028627	9	2	1	synth with cache (only 1: apply Nat.add_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Lists.StreamMemo.MemoFunction.memo_get_correct	40	40.155565	57691	6341
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nmin_lt_4	40	0.049358	4	3	0.0.1	synth with cache (only 1: rewrite <- !not_true_iff_false, !Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40	40.055921	14319	3773
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation.CPermutation_refl	40	40.210188	57952	3697
coq-tactician-stdlib.8.12.dev	Coq.micromega.Env.S.nth_pred_double	40	40.088074	24120	4188
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	0.050868	15	8	4.0	synth with cache (only 1: apply compare_eq_iff; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	40	40.077864	21396	4117
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40	40.043542	11092	2271
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40	40.159729	27903	1993
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_le_compat_r	40	0.955342	241	57	0.0.11	synth with cache (only 1: induction 1; only 1: now rewrite <- ?Nat.add_le_mono_r; only 1: now right).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_lt_compat_l	40	0.010207	3	1	2	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	0.428816	171	59	0.0.0.2.0.0.0.0.0	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: destruct (compare_spec 0 n); only 1: order'; only 1: order'; only 1: order').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	40	0.037883	6	6	0.0.0.0.0.0	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40	40.299805	14298	2800
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zeq_bool_eq	40	40.073392	24567	3469
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	40	40.050013	11100	4563
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_max	40	29.020332	22574	3014	0.0.0.0.0.0.2.0.8.10.4.0.17.0.0.0.1.0.0.0.6	synth with cache (only 1: unfold N.max, N.le; only 1: destruct n as [| n], m as [| m]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: revert m; only 1: unfold Z.le, Z.max; only 1: simpl; only 1: intros H; only 1: case Pos.compare_spec; only 1: intros; only 1: simpl; only 1: now f_equal; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros E1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.Generic.Paradox.Omega	40	6.555344	26738	318
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40	40.050404	10999	4314
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_0	40	40.145037	14655	726
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	40	40.053851	11117	4125
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40	40.067143	20707	2179
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_inf	40	40.064878	15254	2422
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Union.WfUnion.strip_commut	40	40.263309	95244	6404
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.PER_type_morphism_obligation_1	40	40.049914	7159	6530
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	40	0.049577	3	3	0.0.0	synth with cache (only 1: intro; only 1: apply add_le_cases; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.symmetric_equiv_flip	40	0.017338	4	2	2.0	synth with cache (only 1: hnf; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	40	0.056882	8	3	2.3.0	synth with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	40	0.074652	13	5	0.0.3.0	synth with cache (only 1: intro n; only 1: apply lt_le_incl; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous'	40	40.137937	18193	4516
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	40	40.168085	35795	1217
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	40	40.057699	16268	3432
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	40	40.048640	10741	3148
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.compose_proper_obligation_1	40	0.257673	63	6	12	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.reflexive_eq_dom_reflexive	40	0.016650	1	1	0	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	40	40.023361	3753	2049
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_pred	40	8.200059	4926	699	2.18.3.0	synth with cache (only 1: boolify_even_odd; only 1: intros; only 1: unfold Z.succ, Z.pred; only 1: now destruct n as [| [| | ]| [| | ]]).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_mirr_rev	40	40.059474	21141	2599
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.add_Inf	40	40.137394	6659	1599
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.rel_prime_mod	40	40.064920	19741	3290
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	0.037502	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_in	40	40.076949	14249	3710
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.union_s_m_Proper	40	40.083246	30640	2345
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	40	2.048030	309	146	0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono; only 1: rewrite 2!min_r; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_Desc_concat	40	40.096684	30690	6109
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Surjective_carac	40	40.079119	28281	2930
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Composition.eq_comp	40	40.308119	126339	4077
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_st_add_soustr	40	40.113056	11424	4321
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40	40.044110	10328	2138
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_union	40	40.087143	27430	4060
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Well_founded.Fix_eq	40	40.131941	46422	2085
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Well_founded.fix_sub_eq	40	0.163679	6	6	0.0.0.0.0.0	synth with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_phi_inv_positive	40	40.059908	15375	3067
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.JMeq_ind	40	40.377449	159877	7890
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.BinList.MakeBinList.nth_pred_double	40	40.193717	31378	4082
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	40	40.024893	5755	1398
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.JMeq_rec	40	0.014992	3	3	0.0.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec3	40	40.032716	8515	1949
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation.CPermutation_refl'	40	6.525764	5158	632	3.8.1.1.16	synth with cache (only 1: intros l2; only 1: intros l HC; only 1: subst; only 1: rewrite <- app_nil_r  at 1; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.JMeq_rect	40	0.014990	3	3	0.0.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nneg_bit0_1	40	40.087318	31878	2216
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	40	40.053146	12391	2454
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nneg_bit0_2	40	0.061508	20	6	1.0.0.2	synth with cache (only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.Sorted_iter_merge	40	40.095857	30104	5931
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	40	40.075806	21566	2311
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_mul	40	40.212831	24594	2221
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.incl_left	40	40.152345	54303	7692
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_eq	40	40.129867	29749	4056
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	40	40.091852	12987	2514
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.incl_right	40	0.024416	4	4	0.0.0.0	synth with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	40	40.311072	129953	4498
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_plus_split	40	40.159722	43055	2263
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.seq_refl	40	0.007241	4	1	3	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation.CPermutation_sym	40	1.257763	555	163	0.9.4	synth with cache (only 1: intros l1 l2; only 1: induction 1; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinalO_empty	40	40.123298	15813	3500
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	40	40.084989	23384	3067
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40	40.027987	5259	2507
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.get_Full_Gt	40	40.034285	8288	2406
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.recursion_succ	40	40.229262	55020	3498
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.Rstar_contains_R	40	40.206953	76508	9228
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.del_tail_nonnil	40	40.072213	24535	2092
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.one_succ	40	0.008625	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.two_succ	40	0.014617	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pred_0	40	0.005835	3	1	2	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	40	40.081125	23756	4502
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_pred_spec	40	0.037888	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_plus_split	40	1.063294	73	16	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_pos_spec	40	0.020471	8	3	0.0.5	synth with cache (only 1: induction n; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple	40	3.651609	1521	663	1.1.1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	40	0.278060	51	18	0.2.0.1.1	synth with cache (only 1: cases ltac:(n); only 1: intuition; only 1: intro H; only 1: right; only 1: apply lt_0_succ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	1.964403	2115	302	0.0.0.0.0.0.0.0.0.0.7.33	synth with cache (only 1: simpl_relation; only 1: repeat split; only 1: unfold natural_isomorphism; only 1: now rewrite N1.recursion_0; only 1: unfold natural_isomorphism; only 1: intro n; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	40	40.083414	13292	1914
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.StrictOrder_Asymmetric	40	40.303596	127346	7031
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40	40.269386	10741	1743
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.subrelation_symmetric	40	0.008215	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Reflexive	40	0.011382	4	2	2.0	synth with cache (only 1: hnf; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Antisymmetric	40	0.029198	21	5	6	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PreOrder	40	0.025788	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_StrictOrder	40	0.153533	10	2	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PER	40	0.040690	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.lock	40	40.442144	193263	6862
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Equivalence	40	0.054664	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_ext	40	40.102616	37592	2202
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.nth_order_ext	40	40.219268	34519	4231
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.complement.complement_Irreflexive	40	0.007703	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.seq_trans	40	3.372018	2149	448	0.0.3.12.1	synth with cache (only 1: destruct x; only 1: intro; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.not_locked_false_eq_true	40	0.155447	12	3	0.3	synth with cache (only 1: unlock; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.complement.complement_Symmetric	40	0.006512	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.seq_sym	40	0.019723	4	3	0.0.1	synth with cache (only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_is_preorder	40	40.793527	371672	8008
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.iffT_Reflexive	40	0.061827	118	15	4.10	synth with cache (only 1: intro H; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.union_empty_left	40	0.019742	3	3	0.0.0	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.iffT_Symmetric	40	0.007193	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.iffT_Transitive	40	0.010323	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40	40.036152	7735	3165
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	40	40.037319	8663	1848
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.trans_co_impl_morphism_obligation_1	40	17.950597	5089	4447	4.3.2	synth with cache (only 1: transitivity x0; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	40	0.126518	6	6	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_decreasing_1	40	40.032913	8506	2811
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40	40.087729	31978	2460
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_3_facts.Strong_confluence	40	40.074433	17100	5773
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.le_antisym	40	40.140625	47812	8240
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.neq_sym	40	0.006428	1	1	0	synth with cache (only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40	40.086174	24250	4626
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Well_Ordering.WellOrdering.wf_WO	40	40.431099	11367	1964
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.is_succ	40	40.178000	50552	3507
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40	40.021232	3851	1269
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	40	10.948664	2405	1111	1.0.6.1.2	synth with cache (only 1: intros n m; only 1: symmetry; only 1: rewrite <- (succ_pred m)  at 2; only 1: symmetry; only 1: apply lt_succ_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40	40.067975	18019	2958
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	40	0.817458	223	69	0.0.5.1	synth with cache (only 1: intro; only 1: rewrite nle_gt; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	40	7.900665	2581	757	0.1.0.0.1.1.0.8	synth with cache (only 1: intro H; only 1: intro n; only 1: nzinduct n; only 1: apply neq_sym; only 1: apply neq_succ_0; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA9	40	40.048087	16943	1178
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	40	40.458058	204566	3513
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Psub_ok	40	40.018900	3625	2197
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.unlock	40	4.050181	24859	311
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_Zmod_zero	40	40.056974	18781	2563
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_pred_succ	40	6.226194	1766	805	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.6	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.elements_b	40	40.020493	3201	2414
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40	40.051140	8378	661
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	40	0.816324	505	129	0.0.0.7.1.0	synth with cache (only 1: intro n; only 1: apply lt_eq_cases; only 1: constructor; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now right).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.GenericMinMax.max_r	40	40.078204	20362	6905
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.CentralInduction.central_induction	40	40.077643	26504	1591
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_pos_pred	40	0.975004	181	89	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pred_succ	40	0.021495	3	3	0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Pos.pred_N_succ).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.mul_succ_l	40	40.087362	19089	7544
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pred_sub	40	0.421050	168	41	7.0.6	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	40	4.595625	2466	655	0.5.5.3.2	synth with cache (only 1: intros; only 1: apply neq_0_lt_0; only 1: apply pow_pos_nonneg; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_In	40	40.120741	9476	2132
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_lt_compat_r	40	17.051983	6898	1007	1.8.23	synth with cache (only 1: induction 1; only 1: auto; only 1: now right).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_app	40	40.096649	31480	2708
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_empty	40	40.088233	30367	3580
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_sym	40	40.213622	49955	5226
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_le_compat	40	40.047214	12997	2787
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.union_empty_right	40	6.475490	4749	1028	17.0.0.0	synth with cache (only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListDec.uniquify	40	40.075009	21704	5077
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	40	40.217648	50041	5682
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_0_discr	40	0.903740	490	87	2.12.0	synth with cache (only 1: destruct n; only 1: discriminate; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	40	40.241168	67453	2166
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.add_0_l	40	0.163720	9	8	2.0.0	synth with cache (only 1: destruct n; only 1: auto; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Padd_ok	40	40.022149	5606	1684
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_wd	40	40.038628	6518	1539
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.lt_wf_rect1	40	40.229962	82118	4094
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.lt_O_minus_lt	40	40.152018	44051	3260
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.lt_wf_rect	40	0.005779	1	1	0	synth with cache (only 1: exact (fun p P F => induction_ltof1 nat (fun m => m) P F p)).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.lt_wf_rec1	40	0.010018	1	1	0	synth with cache (only 1: exact (fun p P F => induction_ltof2 nat (fun m => m) P F p)).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.lt_wf_rec	40	0.006101	1	1	0	synth with cache (only 1: exact (fun p P F => induction_ltof2 nat (fun m => m) P F p)).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.lt_wf_ind	40	0.006152	1	1	0	synth with cache (only 1: exact (fun p P F => induction_ltof2 nat (fun m => m) P F p)).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.In_Image_elim	40	40.215238	38391	5806
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.wf_lexprod	40	40.077403	24398	6154
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.gt_wf_rect	40	0.012949	1	1	0	synth with cache (only 1: exact (fun p P F => induction_ltof2 nat (fun m => m) P F p)).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.gt_wf_rec	40	0.009337	1	1	0	synth with cache (only 1: exact lt_wf_rect).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	40	40.062416	16616	3421
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.aux	40	40.191175	72686	1863
coq-tactician-stdlib.8.12.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_le	40	40.148552	51420	5223
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40	11.453537	15020	2964	1.0.0.0.0.0.21.0.1	synth with cache (only 1: intros U R; only 1: red; only 1: induction 1; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	40	0.161513	6	6	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.pred_N_succ	40	40.173106	22780	3300
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	0.767308	929	133	0.1.1.4.12	synth with cache (only 1: intros A P H; only 1: red; only 1: red; only 1: intro; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_1_r	40	0.011736	1	1	0	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_1_l	40	0.010891	1	1	0	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	40	0.731204	69	32	0.0.0.0.3.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.trans_sym_co_inv_impl_morphism_obligation_1	40	9.368379	2566	2235	10	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40	6.936120	1545	625	1.10.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite <- le_succ_l; only 1: now rewrite succ_pred).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.to_nat_via_N	40	40.069865	22965	4412
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	40	7.445078	2399	597	0.0.0.0.0.2.4.0.0.1.3	synth with cache (only 1: cases ltac:(n); only 1: intros; only 1: exfalso; only 1: now apply H; only 1: intro H; only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Power_set_PO	40	40.141223	47064	7264
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_Rel_is_Strict_Included	40	0.012640	2	2	0.0	synth with cache (only 1: red; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword0_ok	40	40.103151	38250	1041
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Prop.well_founded_morphism	40	40.072202	17895	6035
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist1	40	40.105477	16272	4159
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.dec_not_not	40	4.126867	9062	1075	7.4.0.0.0.13.0	synth with cache (only 1: intro A; only 1: intro H1; only 1: unfold not; only 1: intro H; only 1: elim H1; only 1: trivial; only 1: contradiction).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.dec_True	40	0.018115	15	4	2.0	synth with cache (only 1: unfold decidable; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.dec_False	40	0.007981	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_sgn	40	40.044761	11200	915
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.agree_env_tail	40	40.088155	30178	3095
coq-tactician-stdlib.8.12.dev	Coq.Program.Combinators.compose_id_left	40	0.008222	2	1	1	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Program.Combinators.compose_id_right	40	0.009482	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Program.Combinators.compose_assoc	40	0.022479	10	4	0.6	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Program.Combinators.flip_flip	40	0.007940	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	40	28.224460	42067	1938	6.1.71	synth with cache (only 1: compute; only 1: intro; only 1: now rewrite recursion_0).
coq-tactician-stdlib.8.12.dev	Coq.Program.Combinators.prod_uncurry_curry	40	0.014456	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_not_false	40	40.169172	52960	3770
coq-tactician-stdlib.8.12.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40	40.070291	17973	1503
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec3	40	40.062882	20527	2536
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_PermutationA	40	40.238434	25083	2565
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40	33.344557	8578	1367	4.2.22	synth with cache (only 1: red; only 1: exists 0; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Classical_sets.Ensembles_classical.Complement_Complement	40	40.150750	23764	2889
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_eq_unit	40	40.199676	31941	4173
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.dec_or	40	1.411177	1506	344	1.0.17	synth with cache (only 1: intro H; only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.dec_and	40	0.037240	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.dec_not	40	0.018068	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.dec_imp	40	0.027708	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	40	25.490117	5718	2422	0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0); only 1: pos_or_neg b; only 1: rewrite abs_eq in Hr; only 1: intuition; only 1: order; only 1: intuition; only 1: rewrite <- opp_0, eq_opp_r; only 1: rewrite abs_neq' in Hr; only 1: intuition; only 1: order; only 1: intuition; only 1: order; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: now apply mod_always_pos; only 1: now rewrite <- div_mod; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_plus	40	40.099867	37605	2345
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.dec_iff	40	0.136766	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.not_not	40	0.012375	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40	40.113330	42196	3428
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.not_or	40	0.014265	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple_Singleton	40	16.129562	6296	2539	0.0.0.1.1.1.1.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: auto with sets; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.not_and	40	0.033269	3	2	0.1	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.not_imp	40	0.031662	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40	4.507390	770	256	0.0.0.0.4.0.3.0	synth with cache (only 1: intros n m p; only 1: intro; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.imp_simp	40	0.022990	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.not_iff	40	0.078587	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zsucc_le_compat	40	40.074541	24547	3407
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.not_true_iff	40	0.038319	38	9	8	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.not_false_iff	40	0.005546	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.not_not_iff	40	0.019401	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.contrapositive	40	0.039751	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.or_not_l_iff_1	40	0.031859	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	40.097631	21837	11165
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.or_not_l_iff_2	40	0.030715	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_le_compat_l_half	40	40.034120	7088	3377
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.or_not_r_iff_1	40	0.031183	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_add_intro1	40	40.114753	15436	4082
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.or_not_r_iff_2	40	0.033794	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.imp_not_l	40	0.034047	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.not_or_iff	40	0.039155	16	5	1	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.not_and_iff	40	0.015470	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.not_imp_iff	40	0.044744	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	40	40.147416	32838	4326
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.not_imp_rev_iff	40	0.081369	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_commutative	40	2.321657	1086	303	0.0.1.0.0.0.1.0.0.1.8	synth with cache (only 1: intros y H'1; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.asin_inv_sqrt2	40	40.033614	10364	1681
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_split	40	40.221598	18434	2427
coq-tactician-stdlib.8.12.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	40	4.012951	22127	203
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.EqdepDec.nu_constant	40	40.169398	66078	3878
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	40	40.308527	29091	2525
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2b	40	3.353411	1909	447	0.0.7.2.0.0.0.1	synth with cache (only 1: intros; only 1: rewrite cardinal_spec in H; only 1: generalize (elements_2 (s:=s)); only 1: destruct (elements s); only 1: intros; only 1: intuition; only 1: exists e; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_spec	40	40.034169	7694	2686
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_add	40	40.091482	25977	221
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.MoreInt.norm_ei_correct	40	40.359535	51445	1442
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.is_empty_spec	40	40.200900	49253	3530
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.inter_spec	40	40.102283	33719	5605
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeqb_comp	40	40.063749	21497	1946
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.R_sanity	40	40.093419	17485	3193
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40	40.098519	32045	1813
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.div2_even	40	40.138449	54065	4849
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectCore.equivPif	40	40.150349	22236	804
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.union	40	40.232558	60317	3265
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Rtauto.with_env.project_In	40	40.113018	39483	5071
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	40	40.316429	45023	4031
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.union_comm	40	16.794115	11137	2731	12.5.2.2	synth with cache (only 1: unfold seq; only 1: destruct y; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.dec_le	40	40.132487	34911	3597
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	40	40.056773	14921	2193
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.dec_lt	40	0.026525	18	3	5	synth with cache (only 1: apply Nat.le_decidable).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.dec_gt	40	0.009646	3	1	2	synth with cache (only 1: apply Nat.lt_decidable).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_trans_S	40	40.111710	17132	1963
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40	40.234660	41209	3012
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_le_compat_r	40	40.118822	33467	3992
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.union_ass	40	0.849437	233	132	1.0.0.1.0.0.1	synth with cache (only 1: unfold seq; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: simpl; only 1: auto with bool).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_mapsto_iff	40	40.055380	13844	3045
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.append_spec	40	40.080283	25744	2744
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	40	40.076745	7753	1780
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectCore.xorPif	40	3.048256	1231	81	0.0.38	synth with cache (only 1: intuition; only 1: by case Hb; auto; only 1: by case Hb; auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	40	40.053517	10970	4131
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40	40.070380	23559	3714
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_lt_mono	40	40.034699	6857	2690
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	40	40.052754	13321	2605
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_0_eq	40	2.415990	1347	168	5.0.28	synth with cache (only 1: Nat.cases ltac:(n); only 1: now apply Nat.lt_eq_cases, Nat.succ_le_mono; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	40	40.109081	15884	3964
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.in_int_p_Sq	40	40.119546	25802	3234
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.in_int_S	40	0.015182	2	2	0.0	synth with cache (only 1: intros p q r []; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.plus_gt_reg_l	40	0.008507	1	1	0	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.in_int_Sp_q	40	0.014044	2	2	0.0	synth with cache (only 1: intros * []; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.seq_left	40	1.988579	508	275	1.0.3.1.0.0	synth with cache (only 1: unfold seq; only 1: destruct y; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.plus_gt_compat_l	40	0.010741	1	1	0	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.seq_right	40	0.582163	118	82	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_ge_compat	40	20.816220	10049	2128	26	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_r	40	40.002551	443	97
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	0.007849	2	2	0.0	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrunder.Under_rel.Under_relE	40	0.007996	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrunder.Under_rel.over_rel	40	0.005575	1	1	0	synth with cache (only 1: now trivial).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrunder.Under_rel.over_rel_done	40	0.006257	1	1	0	synth with cache (only 1: now trivial).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_or_pol	40	40.105388	38025	2819
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrunder.Under_rel.under_rel_done	40	0.004914	1	1	0	synth with cache (only 1: now unfold Over_rel).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_A_sum	40	40.128405	41507	7048
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_clos_trans	40	40.183794	68232	6625
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	40	40.059002	14059	4392
coq-tactician-stdlib.8.12.dev	Coq.Lists.StreamMemo.MemoFunction.imemo_get_correct	40	40.098772	30701	7352
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	40	40.066653	15706	6796
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40	40.059880	15896	3871
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	40	40.062775	15998	2462
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	40	40.059086	16959	2613
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.bool_dec	40	40.251849	99610	8170
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.diff_true_false	40	0.007257	3	1	2	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.diff_false_true	40	0.007054	1	1	0	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Streams.unfold_Stream	40	0.692406	1255	92	0.18.16	synth with cache (only 1: intro p; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	40	40.244420	95912	7600
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40	40.047580	9858	5130
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zeq_bool_neq	40	40.120500	47347	4206
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zcompare_succ_compat	40	40.244764	14873	3528
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	40	40.066219	19239	3408
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_div	40	40.156671	21469	3139
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	40	2.101784	540	192	0.2.0.0.0.1.0.2.0.0.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.037252	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.Generic.Paradox.lemma1	40	40.124405	50158	2464
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_succ	40	40.126814	6403	778
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	40	40.082610	17499	5313
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eq_true_false_abs	40	1.692431	3412	452	1.1.14.0.10	synth with cache (only 1: intro; only 1: intro H; only 1: destruct b; only 1: discriminate; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Streams.tl_nth_tl	40	1.549199	838	244	2.0.0.10	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.not_true_is_false	40	0.118341	135	22	2.7.0	synth with cache (only 1: destr_bool; only 1: reflexivity || destruct H; only 1: exact eq_refl).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Union.WfUnion.Acc_union	40	40.137886	49304	6041
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.not_false_is_true	40	0.016550	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_inv_trans	40	2.977824	2585	482	0.0.4.17	synth with cache (only 1: induction 1; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_ok	40	40.253297	12091	902
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.wf_clos_trans	40	0.024959	8	4	2.0.1.1	synth with cache (only 1: red; only 1: intros y H2; only 1: apply Acc_intro; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40	40.041523	8289	2290
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	40	40.045288	9130	2992
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	40	40.174280	67343	2215
coq-tactician-stdlib.8.12.dev	Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_bis	40	40.209069	50487	5933
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.respectful_morphism	40	40.018750	3178	587
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.not_true_iff_false	40	0.621843	330	108	0.0.0.5.4	synth with cache (only 1: intro A; only 1: split; only 1: destr_bool; only 1: intuition; only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.not_false_iff_true	40	0.023737	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.Reflexive_partial_app_morphism	40	0.014061	7	2	0.5	synth with cache (only 1: reduce; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	40	40.029308	3411	1841
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.flip_respectful	40	0.034395	4	3	0.0.1	synth with cache (only 1: split; only 1: simpl_crelation; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_plus	40	40.045107	14451	2886
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.add_sorted	40	40.168768	20934	4925
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.flip1	40	0.010617	3	2	1.0	synth with cache (only 1: reduce; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.rel_prime_mod_rev	40	40.043073	12521	2811
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.flip2	40	0.005466	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_pred	40	40.257705	33039	4076
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.eq_subrelation	40	0.047111	14	5	3	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.reflexive_proper	40	0.007126	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_div2	40	0.028795	1	1	0	synth with cache (only 1: now destruct n as [| [| | ]| [| | ]]).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.proper_eq	40	0.005125	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.proper_proper	40	0.048036	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: reduce; only 1: split; only 1: intros; only 1: subst; only 1: firstorder; only 1: intros; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Normalize.proper_normalizes_proper	40	0.039275	12	2	4	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	40.084105	31097	2481
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Normalize.flip_atom	40	0.006252	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_end	40	40.140410	27414	3390
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_in'	40	40.207200	21411	4068
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	40	40.163626	6256	653
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.le_implb	40	1.145479	653	207	1.0.1.0.9	synth with cache (only 1: destruct b1; only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.compare_spec	40	0.032056	7	5	2.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eqb_subst	40	0.011718	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eqb_reflx	40	0.008615	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eqb_prop	40	0.138758	8	5	0.1.1.0.1	synth with cache (only 1: destruct a, b; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eqb_true_iff	40	0.024800	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eqb_false_iff	40	0.030240	6	5	0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_orb	40	0.033775	17	7	0.0.1.0.2	synth with cache (only 1: destruct b1; only 1: simpl; only 1: destr_bool; only 1: simpl; only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_andb	40	0.008450	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_involutive	40	0.007246	3	1	2	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_involutive_reverse	40	0.007204	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_sym	40	0.007488	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.no_fixpoint_negb	40	0.007991	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eqb_negb1	40	0.005273	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eqb_negb2	40	0.005698	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Endo_Injective_Surjective	40	40.299956	18649	3228
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.if_negb	40	0.005998	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_true_iff	40	0.013249	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_false_iff	40	0.014115	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_true_iff	40	0.035227	8	5	0.1.1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	40	40.054547	8386	2059
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_false_iff	40	0.037268	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_true_elim	40	0.026519	5	4	0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Sub_Add_new	40	40.213331	10682	5036
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.all_tag	40	40.617498	282232	2964
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_prop	40	0.041074	12	8	0.0.0.2	synth with cache (only 1: destr_bool; only 1: intuition; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.all_tag2	40	0.017106	1	1	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_true_intro	40	0.130949	40	21	1.2	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Sig.svalP	40	0.004512	3	1	2	synth with cache (only 1: apply proj2_sig).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_false_intro	40	0.027810	12	5	1.4.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_false_elim	40	0.129813	36	20	0.0.3.1	synth with cache (only 1: destruct b1; only 1: destr_bool; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_diag	40	0.007171	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_true_r	40	0.005603	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_true_l	40	0.055962	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_false_r	40	0.006522	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_false_l	40	0.005989	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_negb_r	40	0.006036	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_negb_l	40	0.005369	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_comm	40	0.008377	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_assoc	40	0.012642	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_true_iff	40	0.029845	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_false_iff	40	0.036196	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_true_eq	40	0.066634	19	13	0.3	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_spec	40	40.041582	8143	1174
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_false_intro1	40	0.032240	9	8	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_false_intro2	40	0.012828	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_false_r	40	0.005726	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_false_l	40	0.005739	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_diag	40	0.005591	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_true_r	40	0.005641	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_true_l	40	0.004864	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_false_elim	40	0.030220	13	5	0.0.0.2	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_negb_r	40	0.006101	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_negb_l	40	0.006005	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_comm	40	0.007471	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_assoc	40	0.012618	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_orb_distrib_r	40	0.010728	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Measure_well_founded.measure_wf	40	40.324303	123096	7197
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_orb_distrib_l	40	0.010886	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	40	40.036606	10131	1290
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_andb_distrib_r	40	0.051562	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Fix_rects.F_unfold	40	0.029468	3	2	0.1	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_andb_distrib_l	40	0.012045	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.absorption_andb	40	0.007200	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok	40	40.049685	7941	1674
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.absorption_orb	40	0.007807	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.implb_true_iff	40	0.030603	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nsame_bit0	40	40.091531	33673	2177
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.Permuted_iter_merge	40	40.065440	14931	6527
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.implb_false_iff	40	0.038876	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.JMeq_ind_r	40	40.379557	161080	7722
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.implb_orb	40	0.008135	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.implb_negb_orb	40	0.007183	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.implb_true_r	40	0.005554	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.implb_false_r	40	0.005425	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.implb_true_l	40	0.007597	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.JMeq_rec_r	40	0.017028	4	3	0.1.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.implb_false_l	40	0.007186	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.implb_same	40	0.006700	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.implb_contrapositive	40	0.008044	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.JMeq_rect_r	40	0.016656	4	3	0.1.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.implb_negb	40	0.007445	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.implb_curry	40	0.013899	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.implb_andb_distrib_r	40	0.013106	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.implb_orb_distrib_r	40	0.011428	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.JMeq_congr	40	0.051033	9	7	2.0.1.0.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: case JMeq_eq with (1 := H'); only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.implb_orb_distrib_l	40	0.012409	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_false_r	40	0.007515	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_invert	40	40.124973	43137	6303
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_false_l	40	0.007426	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_true_r	40	0.005849	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_true_l	40	0.005992	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_elim	40	0.028634	9	4	4.0.0	synth with cache (only 1: induction 1; only 1: auto; only 1: auto using Noone_in_empty with sets).
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.JMeq_eq_dep_id	40	0.020437	3	3	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_nilpotent	40	0.005454	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_comm	40	0.006921	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.eq_dep_id_JMeq	40	0.012280	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_assoc_reverse	40	0.011606	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_eq	40	0.010604	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.eq_dep_JMeq	40	0.014616	2	2	0.0	synth with cache (only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_move_l_r_1	40	0.025742	10	3	5.0	synth with cache (only 1: intros; only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_move_l_r_2	40	0.013015	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_move_r_l_1	40	0.014218	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_move_r_l_2	40	0.014268	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Sig.s2valP	40	2.048521	11448	144
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_xorb_l	40	0.006891	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	40	40.068419	20981	3564
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_sub	40	40.102052	39888	3733
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_xorb_r	40	0.023537	5	5	0.0.0.0.0	synth with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_negb_negb	40	0.007694	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Sig.s2valP'	40	0.007545	1	1	0	synth with cache (only 1: by case : u ).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eq_iff_eq_true	40	0.042615	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40	40.085368	26167	3069
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0	40	5.291192	500	100	0.0.0.0.1.0.0.0.7.0	synth with cache (only 1: intros; only 1: rewrite !strong_rec_alt; only 1: unfold strong_rec0; only 1: f_equiv; only 1: rewrite recursion_succ; only 1: f_equiv; only 1: rewrite recursion_0; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.055719	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.all_sig	40	0.010048	1	1	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.all_sig2	40	0.019401	1	1	0	synth with cache (only 1: by case /all_tag =>f /all_pair []; exists f).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eq_true_iff_eq	40	0.149445	65	27	2.2.2	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eq_true_negb_classical	40	0.012270	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eq_true_not_negb	40	0.010139	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.absurd_eq_bool	40	0.017117	5	3	1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_1	40	40.123449	10167	4748
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.absurd_eq_true	40	0.012372	3	2	1.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation.CPermutation_trans	40	40.185942	29233	5583
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.trans_eq_bool	40	0.011935	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.Is_true_eq_true	40	0.013995	4	2	1.1	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.Is_true_eq_left	40	0.008298	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.Is_true_eq_right	40	0.012334	3	3	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: auto with bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eqb_refl	40	0.006230	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.inh_card_gt_O	40	40.083677	26139	5635
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eqb_eq	40	0.028030	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	40	40.042997	11014	1605
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40	6.079189	1435	638	0.0.0.0.1.0.1.0.0.0.2.0.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: destruct Hr; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: right; only 1: apply mod_neg_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	40	40.029640	6174	2534
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_app	40	0.258905	102	30	3.5	synth with cache (only 1: intros; only 1: eauto using Add_app).
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.get_Full_Eq	40	40.101572	34264	5799
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_app_comm	40	0.046837	13	6	5.1	synth with cache (only 1: intros l1 l2; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_app_rot	40	0.020737	2	2	0.0	synth with cache (only 1: intros; only 1: now rewrite (app_assoc l2)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nzhead_invol	40	40.073501	21917	3309
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	4.581621	954	426	1.0.0.0.1.0.0.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Fix_rects.Fix_F_sub_rect	40	2.320792	1321	202	0.7.2.3.9	synth with cache (only 1: intro x; only 1: induction (Rwf x); only 1: intros; only 1: rewrite <- Init.Wf.Fix_F_eq; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_even_plus	40	40.181700	15051	2590
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40	40.063887	19436	2765
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Fix_rects.eq_Fix_F_sub	40	0.468197	275	44	13.0	synth with cache (only 1: apply Fix_F_inv; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	40	23.759107	5449	1135	0.0.0.0.9.1.7.0	synth with cache (only 1: intros n m p q; only 1: nzinduct p; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: nzsimpl; only 1: apply add_comm; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_prop_elim	40	1.380352	1128	340	0.0.8.0.8	synth with cache (only 1: intros n m; only 1: intros; only 1: induction n; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_prop_intro	40	0.066406	37	13	7.0	synth with cache (only 1: destr_bool; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_prop_intro	40	0.017330	4	4	0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_prop_elim	40	0.022072	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_div2	40	5.939548	996	300	0.0.3.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: destruct n as [| [| | ]| [| | ]]; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: now rewrite Pos.pred_double_succ; only 1: easy; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eq_bool_prop_intro	40	0.020269	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eq_bool_prop_elim	40	0.016674	4	3	0.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_prop_elim	40	0.011295	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: auto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_prop_intro	40	0.010837	3	2	1.0	synth with cache (only 1: destr_bool; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	40	0.196941	7	6	0.0.0.0.1.0	synth with cache (only 1: intros n m p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_prop_classical	40	0.009083	2	2	0.0	synth with cache (only 1: destr_bool; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_prop_involutive	40	0.012589	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	40	40.035496	8458	831
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_if	40	0.011506	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_if	40	0.005837	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_plus_l	40	0.336340	20	7	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_lazy_alt	40	0.007207	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_lazy_alt	40	0.004974	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	0.072771	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_compat	40	40.054999	10109	2051
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_plus_r	40	0.092893	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40	40.128728	47373	3156
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_even_plus	40	0.094238	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyClasses.mkapp2	40	0.071089	51	8	1.9	synth with cache (only 1: subst; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyClasses.mkapp	40	0.018761	8	2	6.0	synth with cache (only 1: subst; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyClasses.mkrel	40	0.014869	7	2	5.0	synth with cache (only 1: subst; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.shiftin_nth	40	40.221054	39846	1382
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40	40.046112	11779	2593
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_idempotent	40	40.274484	102713	10648
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	40	40.052868	12681	3867
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_plus_aux	40	0.941431	52	10	0.0.4	synth with cache (only 1: split; only 1: parity_binop; only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Binary.relation_equivalence_equivalence	40	40.124752	42660	5214
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	40	19.443661	11899	1360	0.0.0.0.0.1.28.15	synth with cache (only 1: transitivity 1; only 1: symmetry; only 1: apply div_unique with 0; only 1: order; only 1: now try split; only 1: nzsimpl; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Finite_Empty_or_not	40	6.560192	7293	723	7.3.0.6.18	synth with cache (only 1: intros (l, L); only 1: induction l; only 1: constructor; only 1: eassumption; only 1: now repeat constructor).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Binary.relation_implication_preorder	40	0.009554	4	1	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40	40.048249	12987	2487
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Binary.partial_order_antisym	40	0.067228	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Binary.PartialOrder_inverse	40	0.083597	4	2	2.0	synth with cache (only 1: reduce_goal; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_inj	40	40.026121	5606	2777
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Extension	40	8.603615	17764	2112	2.4.2.4.0.1.1.9.9	synth with cache (only 1: red; only 1: intro x; only 1: intro; only 1: destruct 1; only 1: split; only 1: red; only 1: trivial; only 1: red; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_plus_even_inv_r	40	0.091810	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2	40	40.130923	51468	3209
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_3_facts.Strong_confluence_direct	40	40.062630	14960	7439
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Noone_in_empty	40	0.117716	181	31	8.0.2	synth with cache (only 1: red; only 1: intros h1 h2; only 1: destruct h2).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_plus_even_inv_l	40	0.091041	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Included_Empty	40	0.005376	1	1	0	synth with cache (only 1: destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.trans	40	40.147441	53465	4066
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.reflect_iff	40	2.521119	1851	372	3.0.1.0.2.12	synth with cache (only 1: red; only 1: intros A B []; only 1: intuition; only 1: repeat split; only 1: intuition; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.iff_reflect	40	0.030470	13	4	2.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.reflect_dec	40	0.020704	7	4	0.3.0.0	synth with cache (only 1: destruct 1; only 1: intuition; only 1: unfold not; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eqb_spec	40	0.023766	6	5	1.0.0.0.0	synth with cache (only 1: repeat match goal with | p:(_ * _)%type |- _ => destruct p | b:bool |- _ => destruct b end; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Injections.can_pcan	40	4.947789	13844	749	3.31.35	synth with cache (only 1: intros Hfst Hsnd; only 1: rewrite -> Hfst; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_plus_odd_inv_r	40	0.381945	25	8	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.is_pos	40	40.214299	28479	2925
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_eq	40	2.518385	603	150	0.1.6.3	synth with cache (only 1: intros H; only 1: rewrite H; only 1: unfold In, MapsTo; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Well_Ordering.Characterisation_wf_relations.wof	40	40.371874	159749	7446
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	0.024546	1	1	0	synth with cache (only 1: now intros <-).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_plus_odd_inv_l	40	0.090770	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	40	40.025770	5626	1813
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro1	40	0.903241	640	191	1.4.1.2	synth with cache (only 1: intros B C H'; only 1: intro; only 1: left; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_plus_even_inv_l	40	0.100921	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_sym	40	0.504569	477	79	0.6.1.5.3	synth with cache (only 1: intro; only 1: intro x; only 1: intros; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro2	40	0.013811	2	2	0.0	synth with cache (only 1: unfold Add at 1; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	0.266106	27	15	0.3.0	synth with cache (only 1: rewrite !In_alt2, Exists_cons; only 1: destruct (split (A:=l)); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_trans	40	0.018856	3	3	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	40	0.096173	7	5	0.0.0.2.0	synth with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	5.347810	1995	459	0.5.1.0.2.1.0.0.2.0	synth with cache (only 1: intros; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_plus_even_inv_r	40	0.092124	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	40	0.045415	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	40	0.065962	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_unique with q; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40	40.050089	9192	2792
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_plus_odd_inv_l	40	0.093362	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_plus_odd_inv_r	40	0.094073	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	1.081374	2656	193	2.12.18.4	synth with cache (only 1: intro x; only 1: intro p; only 1: destruct p; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_add	40	0.907144	1288	207	0.9.4.2.0	synth with cache (only 1: unfold Add at 1; only 1: intro; only 1: intro; only 1: exists x; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA10	40	40.043932	18320	601
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.trans_sym_contra_impl_morphism_obligation_1	40	33.881069	7676	6795	14	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA11	40	0.097082	5	3	2.0.0	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40	8.019853	75319	761
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.locked_withE	40	40.382761	158504	6766
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40	40.102674	12963	2368
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.unlock_with	40	0.007053	2	1	1	synth with cache (only 1: by case : k ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	40	40.131269	43285	5487
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.GenericMinMax.min_l	40	40.098546	24214	9423
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.filter_b	40	40.048034	11369	3944
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.JMeq_eq_dep	40	0.413683	194	44	1.0.3.2.1	synth with cache (only 1: destruct 1; only 1: intros; only 1: rewrite H; only 1: apply eq_sigT_eq_dep; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.GenericMinMax.min_r	40	0.261867	66	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold min, gmin; only 1: case compare_spec; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt x y); only 1: auto; only 1: auto; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.forall_hprop	40	40.271872	109000	8579
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.lt_succ_r	40	40.089699	24353	8011
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Inclusion.WfInclusion.Acc_incl	40	40.246184	97514	6357
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Inclusion.WfInclusion.wf_incl	40	0.062347	48	10	0.9	synth with cache (only 1: split; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	40	40.056965	15906	3962
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_le_compat	40	40.141834	30304	3302
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_NotIn	40	40.143204	12035	2018
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_node	40	40.073938	22486	2130
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare	40	40.066649	20239	1285
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40	40.163588	30072	4822
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40	40.249033	15178	2430
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PmulI_ok	40	40.017283	3746	1348
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	4.771809	1584	274	4.15	synth with cache (only 1: rewrite InA_cons; only 1: now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyClasses.and_morph	40	7.466589	9513	1864	4.1.0.0.1.2.0.0.0.0.7	synth with cache (only 1: intro H; only 1: intros A B C [H1 H2] [H3 H4]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: auto; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40	40.208088	44223	5190
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.add_succ_l	40	40.259528	37356	5727
coq-tactician-stdlib.8.12.dev	Coq.Logic.StrictProp.Spr1_inj	40	4.554913	20277	690	1.47.17.34	synth with cache (only 1: destruct b; only 1: simpl in *; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyClasses.or_morph	40	0.179959	6	4	0.0.2.0	synth with cache (only 1: intros; only 1: split; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.sub_0_r	40	0.123656	46	20	0.4.1.1	synth with cache (only 1: destruct n; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.equal_f	40	0.213490	204	37	0.11.0	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyClasses.impl_morph	40	0.032685	2	2	0.0	synth with cache (only 1: intros; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.019423	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyClasses.iff_morph	40	0.066587	2	2	0.0	synth with cache (only 1: intros; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.not_le_minus_0	40	40.085881	32946	4353
coq-tactician-stdlib.8.12.dev	Coq.Bool.DecBool.ifdec_left	40	2.509157	2154	443	0.0.1.2.6.3	synth with cache (only 1: unfold not; only 1: destruct H; only 1: reflexivity; only 1: intros H ?; only 1: destruct H; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyClasses.not_morph	40	0.022388	2	2	0.0	synth with cache (only 1: intros; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyClasses.eq_iff	40	0.077276	61	22	0.0.1.5	synth with cache (only 1: intros A B []; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyClasses.rew_iff	40	0.014880	5	2	1.2	synth with cache (only 1: intro p; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.Acc_symprod	40	40.096150	31957	5466
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.injective_preserves_cardinal	40	40.170714	22184	3974
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.lt_wf_double_rect	40	40.108559	15980	2523
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.lt_wf_double_rec	40	0.053811	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rect; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rect; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.ext_prop_dep_proof_irrel_gen	40	40.054894	12872	6038
coq-tactician-stdlib.8.12.dev	Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40	5.704728	11641	1234	0.8.2.1.17.0.2.13	synth with cache (only 1: red; only 1: split; only 1: reflexivity; only 1: intro p; only 1: destruct p; only 1: simpl in *; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.026740	4	4	0.0.0.0	synth with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.Rstar_transitive	40	40.112305	32193	8745
coq-tactician-stdlib.8.12.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_total	40	40.088537	28621	2820
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.055393	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rect; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rect; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_opp	40	40.017477	3349	1821
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_1_facts.Equiv_from_preorder	40	40.218380	85376	9408
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_carry_spec	40	40.140569	25339	2635
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	40	12.299200	2341	850	0.0.0.3.0.0.0.4.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_1_facts.Equiv_from_order	40	0.114743	17	16	1.1.0.0.0	synth with cache (only 1: intros U R H'; only 1: elim H'; only 1: intros H'0 H'1; only 1: red in H'1; only 1: auto  10 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_1_facts.contains_is_preorder	40	0.036436	27	9	1.1.1.2	synth with cache (only 1: intro A; only 1: split; only 1: auto  10 with sets; only 1: auto  10 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40	15.116951	2606	776	1.8.5.0	synth with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	40	40.047355	11167	3325
coq-tactician-stdlib.8.12.dev	Coq.Bool.Sumbool.sumbool_of_bool	40	1.153224	2487	202	18.0.15.0	synth with cache (only 1: intro H; only 1: destruct H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.045570	5	4	0.1.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Sumbool.bool_eq_rec	40	0.073654	45	12	1.1.4	synth with cache (only 1: destruct b; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Sumbool.bool_eq_ind	40	0.018957	3	3	0.0.0	synth with cache (only 1: destruct b; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.of_N_via_nat	40	40.056309	5052	621
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion	40	40.080462	21827	5935
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	40	40.042036	10078	3000
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_3	40	3.855471	871	206	0.0.1.13	synth with cache (only 1: intros; only 1: invlist InA; only 1: firstorder  auto with crelations; only 1: firstorder  auto with crelations).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	40	0.570968	154	60	0.0.3.2	synth with cache (only 1: intros z n H; only 1: apply lt_le_incl; only 1: apply lt_pred_le; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_cons	40	40.028610	8845	795
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.per_partial_app_morphism_obligation_1	40	7.353275	2215	1601	14	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep1_dep	40	9.074355	23900	1411	0.59.0	synth with cache (only 1: destruct 1; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist2	40	40.105260	15678	4041
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_plus_full	40	40.050992	16325	2700
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.max_var_acc	40	40.075680	24679	3959
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_Nwcons	40	0.897247	59	44	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction w; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros; only 1: destruct n; only 1: norm; only 1: norm).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.trans_co_eq_inv_impl_morphism_obligation_1	40	0.943255	428	233	4.4.0	synth with cache (only 1: transitivity y; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	40	40.168952	4066	709
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_dep1	40	1.116770	1885	184	2.26.0	synth with cache (only 1: destruct 1; only 1: exists eq_refl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Program.Combinators.prod_curry_uncurry	40	40.341445	148222	5603
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec1	40	40.089189	29985	2700
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolEq.Bool_eq_dec.beq_false_not_eq	40	40.198131	67530	3967
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	40	40.067330	7931	788
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.Permutation_eqlistA_commute	40	40.200521	27501	2465
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.pred_Sn	40	0.023470	8	5	2.0.0.0.1	synth with cache (only 1: induction n; only 1: simpl; only 1: split; only 1: simpl; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.not_eq_S	40	0.069345	45	14	0.8	synth with cache (only 1: intro H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	40	3.402817	597	295	1.0.0.0.1.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.elt_eq_unit	40	40.217458	48610	4779
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.O_S	40	0.104854	82	21	10	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.n_Sn	40	0.034901	23	8	3.1.2	synth with cache (only 1: induction n; only 1: discriminate; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.plus_n_O	40	0.109835	71	21	0.1.0.7	synth with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.plus_O_n	40	0.029550	5	5	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	40	40.085209	25624	4766
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.plus_n_Sm	40	0.097228	36	14	1.0.1.4	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.plus_Sn_m	40	0.036010	6	6	0.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.mult_n_O	40	0.027741	6	5	1.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel	40	40.199039	76685	7178
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_filter	40	40.094717	32463	3027
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	40	15.851694	8225	2061	0.4.0.0.0.0.0.4.0.1.3	synth with cache (only 1: setoid_rewrite one_succ; only 1: intro n; only 1: split; only 1: rewrite lt_succ_r; only 1: intro H; only 1: le_elim H; only 1: false_hyp H nlt_0_r; only 1: assumption; only 1: intro H; only 1: rewrite H; only 1: apply lt_0_succ).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zsucc_lt_compat	40	40.086464	34306	1710
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40	40.062087	4289	543
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_le_compat_r_half	40	40.036534	8292	3454
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	4.150898	1624	418	0.0.0.8.3	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m)  at 2; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	0.024757	3	3	0.0.0	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_add_intro2	40	40.046420	12127	4520
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.068416	7	6	0.0.0.0.0.1	synth with cache (only 1: induction l; only 1: firstorder; only 1: intros; only 1: simpl in *; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40	5.856253	6168	1224	0.0.1.1.0.3.1.3.0.1.7.8	synth with cache (only 1: intros; only 1: constructor; only 1: auto  10 with sets; only 1: intros x y h; only 1: destruct 1; only 1: destruct 1; only 1: auto  10 with sets; only 1: intros x y h; only 1: red; only 1: elim h; only 1: intros H'3 H'4; only 1: auto  10 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_add_intro	40	0.229309	66	19	6	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.dec_functional_relation	40	40.121324	43620	5186
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40	40.202997	45925	6768
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	0.326613	149	47	5.2.1	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: intro p; only 1: auto  10 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.018183	2	2	0.0	synth with cache (only 1: unfold same_relation; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	0.045032	19	6	1.3.0	synth with cache (only 1: compute; only 1: destruct 1; only 1: auto  10 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity	40	40.070283	19328	4854
coq-tactician-stdlib.8.12.dev	Coq.Bool.DecBool.ifdec_right	40	8.498256	4267	2006	1.10.1.0.0	synth with cache (only 1: intros; only 1: case H; only 1: intro; only 1: contradiction; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_app	40	40.102022	8390	1320
coq-tactician-stdlib.8.12.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40	40.073743	20733	4352
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.asin_opp	40	40.023045	5569	1905
coq-tactician-stdlib.8.12.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	0.062392	19	12	3.0.0.0	synth with cache (only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.EqdepDec.nu_left_inv_on	40	40.147702	51568	3244
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Equal_cardinal	40	40.056208	15215	2619
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40	40.518209	19343	2003
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_ok	40	40.120017	9886	1402
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT_eta	40	1.381897	4498	201	0.59	synth with cache (only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig_eta	40	0.014489	2	2	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT2_eta	40	0.018346	3	2	0.1	synth with cache (only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig2_eta	40	0.019063	2	2	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_opp	40	40.137217	48125	679
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.exists_to_inhabited_sig	40	0.359680	570	66	0.0.2.10.4	synth with cache (only 1: intro; only 1: destruct H; only 1: split; only 1: exists x; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.add_spec	40	40.123825	44987	3744
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qleb_comp	40	40.064942	22468	2374
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Q_apart_0_1	40	0.014745	6	1	5	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.MoreInt.norm_ez_correct	40	40.187178	57103	2027
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.inter_1	40	40.090719	29682	4750
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.inter_2	40	0.041058	3	3	0.0.0	synth with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.depair_sanity	40	40.199209	20275	1378
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	8.728687	18230	1286	4.39.13	synth with cache (only 1: intros ? ? ? Fl Fr; only 1: inversion 1; only 1: apply eq_dep_intro).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.div2_odd	40	40.127388	48446	4633
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	0.337476	199	32	3.10	synth with cache (only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Rtauto.with_env.project	40	40.153922	22965	4615
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.inter	40	40.188021	39400	3928
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40	40.199698	43030	4602
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	40	40.090148	6549	826
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40	1.898925	2165	256	0.10.0.0.14.2	synth with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.dec_ge	40	40.235899	52705	3420
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.026271	3	3	0.0.0	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.not_eq	40	0.010773	1	1	0	synth with cache (only 1: apply Nat.lt_gt_cases).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	0.024447	10	3	0.1	synth with cache (only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40	40.170718	45794	4131
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.not_le	40	0.007201	1	1	0	synth with cache (only 1: apply Nat.lt_nge).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.not_gt	40	0.016432	3	1	2	synth with cache (only 1: apply Nat.le_ngt).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.not_ge	40	0.011466	2	1	1	synth with cache (only 1: apply Nat.nle_gt).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.not_lt	40	0.010884	2	1	1	synth with cache (only 1: apply Nat.nlt_ge).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_le_compat	40	40.221018	63795	4468
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equiv	40	40.047945	12340	2355
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectNegCore.introTFn	40	40.123121	15852	611
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	40	40.099616	10353	2971
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	40	40.056782	11794	4276
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.xmap2_lr	40	40.071700	23373	3657
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_pos	40	40.048627	13602	2288
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	40	40.106225	14851	2795
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.inhabited_sig_to_exists	40	6.600096	44275	929	0.0.0.68.47	synth with cache (only 1: intro H1; only 1: elim H1; only 1: intros [x y]; only 1: exists x; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT.eq_existT_uncurried	40	0.030340	4	4	0.0.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	40	40.096807	9834	2686
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.between_in_int	40	40.175016	55363	5221
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40	2.601027	2397	316	0.11.0.0.15.0	synth with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.in_int_between	40	0.148635	13	7	0.1.0.2	synth with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.union_rotate	40	40.069221	16184	5656
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_gt_0_lt_compat	40	40.267151	14975	1865
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_nz	40	40.005092	903	117
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.inter_3	40	7.796101	4823	1020	12.0.1.8	synth with cache (only 1: intros a b c; only 1: intros; only 1: rewrite inter_spec; only 1: now BinNat.N.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_l	40	40.156533	35555	3746
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_B_sum	40	40.096473	28380	5728
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40	40.059159	13424	3822
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	40	40.070378	24034	2523
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.append_ok	40	40.032301	2714	499
coq-tactician-stdlib.8.12.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dmemo_get_correct	40	40.242969	99655	6264
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40	40.069037	17662	5070
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40	40.041039	11526	1813
coq-tactician-stdlib.8.12.dev	Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	40	40.188509	63440	7583
coq-tactician-stdlib.8.12.dev	Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	40	0.036614	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite M.proof_irrelevance with (p1 := q) (p2 := (eq_rect x P p y H)); only 1: elim H using eq_indd; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40	40.048602	10961	4764
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zcompare_mult_compat	40	40.055778	15513	5190
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40	40.115194	19669	826
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zeq_bool_if	40	40.190298	85448	1375
coq-tactician-stdlib.8.12.dev	Coq.Init.Wf.Well_founded.Acc_inv	40	0.071599	35	14	2.4.0	synth with cache (only 1: intro; only 1: destruct 1; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_mod	40	40.142934	30648	3325
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	40	0.010966	3	2	1.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	40	0.011106	2	2	0.0	synth with cache (only 1: destruct 2; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	40	0.012034	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	40	0.030351	13	6	0.0.0.0.1	synth with cache (only 1: red; only 1: intros h1 h2; only 1: apply h1; only 1: destruct h2; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic_Type.identity_ind_r	40	0.025789	20	5	0.0.4	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	40	40.075138	17506	5240
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic_Type.identity_rec_r	40	0.016252	3	3	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Streams.Str_nth_tl_plus	40	40.095717	28994	6908
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic_Type.identity_rect_r	40	0.016389	3	3	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.Generic.Paradox.lemma2	40	40.038394	11965	1375
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Union.WfUnion.wf_union	40	40.112984	39143	5738
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40	40.031261	7206	1902
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	40	40.043173	9010	3143
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Conjunction.proj1	40	0.003224	0	1
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Conjunction.proj2	40	0.003831	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Equivalence.iff_refl	40	0.003115	2	1
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Equivalence.iff_trans	40	0.016827	34	12	2.2.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Equivalence.iff_sym	40	0.005056	5	4	0.0.0.1	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	40	40.032071	4879	893
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_spec	40	40.065411	5045	1263
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.and_iff_compat_l	40	0.151859	639	178	2.0.2.0.2.0.1.0.0.3	synth with cache (only 1: destruct 1; only 1: split; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_ter	40	40.063071	19117	5526
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.and_iff_compat_r	40	0.106753	257	102	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply Hl; only 1: assumption; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply Hr; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	40	40.044941	10104	3226
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff_r	40	3.855232	1701	406	1.1.0.0.0.0.6.0.3	synth with cache (only 1: unfold or_cnf_opt; only 1: intros; only 1: rewrite orb_comm; only 1: rewrite is_cnf_tt_cnf_ff; only 1: simpl; only 1: destruct (is_cnf_tt f) eqn:EQ; only 1: apply is_cnf_tt_inv in EQ; only 1: auto; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_minus	40	40.038749	11521	3518
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	40	40.068983	22140	2250
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.or_iff_compat_l	40	0.231487	1035	124
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.remove_1	40	40.135989	12353	3024
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.flip_arrow	40	40.026951	7398	1549
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.or_iff_compat_r	40	0.592388	1363	363	0.1.0.0.1.0.0.1.0.0.1.0.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: apply Hl; only 1: assumption; only 1: right; only 1: assumption; only 1: intros [?| ?]; only 1: left; only 1: apply Hr; only 1: assumption; only 1: right; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	40.062591	21113	1930
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.ltl_unit	40	40.153097	32478	4120
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.proper_sym_flip	40	0.029202	4	2	0.2	synth with cache (only 1: intros; only 1: simpl_crelation).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_tail	40	40.169478	22938	4836
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.imp_iff_compat_l	40	0.258101	947	107	9.9.2.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.acc_app	40	0.324507	154	39	3.5	synth with cache (only 1: inversion 1; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	40	40.064032	13459	2179
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Simplify_add	40	40.144287	18612	4220
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.imp_iff_compat_r	40	1.086438	2842	579	10.10.0.9	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.not_iff_compat	40	0.011903	6	4	1.1.0.0	synth with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.neg_false	40	0.310756	823	149	1.1.11.0.1.0	synth with cache (only 1: split; only 1: split; only 1: auto; only 1: destruct 1; only 1: intros [? ?]; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	40	0.990683	342	52	0.12.0	synth with cache (only 1: intros n m; only 1: apply opp_inj_wd; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice	40	40.657531	11432	1505
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_head	40	2.285684	1120	297	0.0.1.1.0.1.9	synth with cache (only 1: induction l; only 1: simpl; only 1: intros l l' Hperm; only 1: intuition; only 1: intros l2 m Hin; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok1	40	40.058518	20551	1207
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nbit0_less	40	40.098744	35290	3462
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok2	40	0.015065	4	3	0.0.1	synth with cache (only 1: destruct (@split_ok s x); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.LocallySorted_sort	40	40.320718	97288	4269
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.proper_sym_flip_2	40	3.313761	423	102	3.7.0	synth with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: unfold flip, respectful; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40	40.063570	17932	1844
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40	40.097700	32063	4645
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_more_steps	40	40.034447	8521	1522
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_pred	40	40.213114	23963	3809
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cadd_ext_Proper	40	17.277712	8804	555	49.11	synth with cache (only 1: intros n m p q H1 H2; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_2	40	40.116114	7570	3476
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	5.759039	1801	586	0.0.5.0.6	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: now try split).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_soustr_1	40	40.088155	26751	6113
coq-tactician-stdlib.8.12.dev	Coq.Logic.PropFacts.injection_is_involution_in_Prop	40	40.489688	213589	7736
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	40	40.061096	18090	3009
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.get_push_Full	40	40.065919	19456	4682
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nztail_invol	40	40.052097	14442	2730
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.unorm_invol	40	0.012007	1	1	0	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_cons_append	40	40.125932	5308	721
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	0.765878	223	82	4.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_0_lt_0; only 1: auto'; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Logic.Berardi.Berardis_paradox.AC_IF	40	40.253436	101024	6483
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	40	0.136944	38	16	1.0.1.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	40	0.055190	7	5	1.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Fix_rects.Fix_sub_rect	40	40.071404	24527	3206
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_length	40	1.327092	462	139	1.3.1.1.3	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	40	0.190153	28	20	1.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto'; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	40	0.028543	5	3	0.2.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	40	0.025405	5	3	0.2.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	40	40.102024	36613	2925
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zquot2_odd_eqn	40	40.298109	13790	848
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.even_odd_div2	40	17.293028	8269	2117	19.0.0.0.1.0.0.0.0.0.0.3.5	synth with cache (only 1: split; only 1: split; only 1: rewrite even_equiv; only 1: intros (p, ->); only 1: rewrite Nat.div2_succ_double; only 1: apply Nat.div2_double; only 1: destruct (even_or_odd n) as [Ev| Od]; only 1: trivial; only 1: apply odd_div2 in Od; only 1: rewrite <- Od; only 1: intro Od'; only 1: elim (n_Sn _ Od'); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_quot2	40	0.352263	14	8	2.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Hn; only 1: now destruct n as [| [| | ]| [| | ]]).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cmul_ext_Proper	40	2.874762	1650	139	24.10	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Sumbool.connectives.sumbool_and	40	29.114214	90915	6342	0.0.1.1.0.11.0.0.0.7.24.21	synth with cache (only 1: destruct H2; only 1: elim H1; only 1: left; only 1: split; only 1: assumption; only 1: assumption; only 1: right; only 1: left; only 1: assumption; only 1: right; only 1: right; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	40	1.175465	425	152	0.1.4.0.1.0	synth with cache (only 1: intro n; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_0_lt_0; only 1: apply lt_0_1; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Bool.Sumbool.connectives.sumbool_or	40	0.040994	7	7	0.0.0.0.0.0.0	synth with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.last_length	40	1.578536	1106	163	1.3.0.2.7.5	synth with cache (only 1: intros; only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Sumbool.connectives.sumbool_not	40	0.034834	7	7	0.0.0.0.0.0.0	synth with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	40	0.107032	25	14	1.1.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: apply lt_0_1; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	40	40.078349	13218	2744
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_clos_rst	40	40.126539	38558	8171
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	40	0.021873	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_r_clos_rt	40	0.024469	4	4	0.0.0.0	synth with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.shiftin_last	40	40.172106	48188	5229
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	40	0.021201	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	40	40.075173	18749	4293
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	40	40.055781	12833	5021
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	40	40.071911	19823	3265
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Surjective_inverse	40	40.188774	19048	1698
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nbit0_gt	40	5.074848	1999	631	0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (N.discr (N.lxor a a')) as [(p, H2)| H1]; only 1: unfold Nless; only 1: rewrite H2; only 1: destruct p; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H1 : N.odd (N.lxor a a') = false) by (rewrite H2; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H1; only 1: discriminate H1; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H2 : N.odd (N.lxor a a') = false) by (rewrite H1; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H2; only 1: discriminate H2).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.tan_diff	40	40.032449	8876	2105
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2b	40	40.110099	38751	4589
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40	40.094636	26524	6687
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lor_lsr	40	40.040533	11276	2141
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.eq_neq	40	40.082356	13047	2314
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	40	1.238888	284	116	0.0.0.2.1.2	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_0_lt_0; only 1: auto'; only 1: apply mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.neq_eq	40	0.012531	1	1	0	synth with cache (only 1: eauto using eq_trans, eq_sym).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.id	40	40.126149	21600	3773
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Injections.pcan_inj	40	40.299602	125715	6313
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	40	0.121858	24	14	0.0.0.2.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: auto'; only 1: nzsimpl; only 1: apply mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Injections.can_inj	40	0.011050	2	1	1	synth with cache (only 1: by move  =>fK x y /(congr1 g); rewrite !fK => [[]]).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.copp_ext_Proper	40	2.366132	643	93	14.10	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	40	0.256433	65	31	0.0.5.0	synth with cache (only 1: intros; only 1: apply mod_le; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	40	40.028450	5795	1701
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.phi_ext1_Proper	40	0.266792	93	10	14	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	40	0.307184	44	28	0.4.0.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: apply div_str_pos; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	40	40.081091	23050	5201
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_le	40	40.069273	19474	4537
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Injections.canLR	40	0.674440	807	95	1.3.17	synth with cache (only 1: intros; only 1: elim eq_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Injections.canRL	40	0.152476	95	21	7.3	synth with cache (only 1: destruct 2; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_mult_aux	40	40.134748	18351	2715
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_mult_l	40	0.065581	9	2	5	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_not_empty	40	40.295141	121315	9632
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_mult_r	40	0.057899	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Some_inj	40	0.633995	534	77	0.0.18	synth with cache (only 1: inversion 1; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.of_voidK	40	0.024364	17	4	0.7	synth with cache (only 1: intro H; only 1: destruct H).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_mult_inv_r	40	0.091358	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA12	40	40.066097	27073	994
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_mult_inv_l	40	0.385549	9	5	1.0.1	synth with cache (only 1: induction n; only 1: parity_binop; only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.esymK	40	0.678269	1177	98	0.10.16.0	synth with cache (only 1: red; only 1: intro p; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	40	40.055830	15214	1814
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_mult	40	0.093456	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	40	40.126129	42836	5227
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.nary_congruence	40	40.129803	42845	6009
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.etrans_id	40	0.117360	125	12	0.15	synth with cache (only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_mult_inv_l	40	0.055934	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.ssr_congr_arrow	40	0.121984	194	31	2.8	synth with cache (only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.ApplyIff.iffLR	40	0.007222	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_id	40	0.159670	144	14	1.15	synth with cache (only 1: red; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_mult_inv_r	40	0.055756	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.ApplyIff.iffRL	40	0.005149	1	1	0	synth with cache (only 1: by case : eqPQ ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.ApplyIff.iffLRn	40	0.021905	3	1	2	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.for_all_b	40	40.115439	43322	2113
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.ApplyIff.iffRLn	40	0.006874	1	1	0	synth with cache (only 1: by move  =>nP tQ; case : nP ; case : eqPQ tQ ).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	40	40.212132	77253	6297
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.and_hprop	40	40.258653	96575	8088
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.impl_hprop	40	0.026226	4	4	0.0.0.0	synth with cache (only 1: intros A P H p q; only 1: apply functional_extensionality_dep; only 1: intro x; only 1: apply H).
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.false_hprop	40	0.016262	2	2	0.0	synth with cache (only 1: intros p q; only 1: destruct p, q).
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.true_hprop	40	0.020652	8	3	4.1.0	synth with cache (only 1: intros p q; only 1: destruct p, q; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.not_hprop	40	0.033272	7	5	0.0.1.1.0	synth with cache (only 1: intros p q; only 1: intro x; only 1: apply functional_extensionality; only 1: intros; only 1: contradiction).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.eqb_eq	40	40.103710	20434	4909
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_inv_head	40	6.053054	3754	744	3.12.1.1.0.4	synth with cache (only 1: induction l; only 1: simpl; only 1: now symmetry; only 1: simpl; only 1: inversion 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	40	40.054271	14095	4481
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_le_lt_compat	40	40.104312	29681	2628
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_lt_le_compat	40	0.009228	2	1	1	synth with cache (only 1: apply Nat.add_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv_aux	40	40.083560	27515	3471
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_NoDupA	40	40.128154	16510	3332
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_strorder	40	40.127443	51094	3442
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_lemma	40	40.178942	61189	5506
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	40	40.230096	63744	7917
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	2.105502	778	275	0.0.0.0.0.0.0.0.0.0.1.0.1	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	40	40.103169	35711	4174
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	40	0.401754	178	36	0.1.9	synth with cache (only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.sub_succ_r	40	40.273372	29613	4742
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Pmul_ok	40	40.016157	3286	1768
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.mul_0_l	40	0.007665	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.functional_extensionality	40	40.522391	234240	4201
coq-tactician-stdlib.8.12.dev	Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40	40.273309	114675	6365
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.wf_symprod	40	40.121898	41753	6480
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.cardinal_decreases	40	40.106640	34162	6308
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.Rstar_cases	40	40.080515	21206	5632
coq-tactician-stdlib.8.12.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_trans	40	40.090827	29012	3681
coq-tactician-stdlib.8.12.dev	Coq.Sets.Permut.Axiomatisation.cong_congr	40	40.217435	86798	4538
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.LT_WF_REL.acc_lt_rel	40	40.276309	10860	1847
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_Prop_Ext_CC.ext_prop_dep_proof_irrel_cc	40	40.364042	163430	10397
coq-tactician-stdlib.8.12.dev	Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40	40.470731	206865	5795
coq-tactician-stdlib.8.12.dev	Coq.Sets.Permut.Axiomatisation.comm_right	40	0.045364	10	6	3.1.0	synth with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Permut.Axiomatisation.comm_left	40	0.024591	5	3	0.2.0	synth with cache (only 1: intros; only 1: apply cong_left; only 1: apply op_comm).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_can_sym	40	4.400013	8869	374	7.48.24	synth with cache (only 1: intros Hfst Hsnd; only 1: intro; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_ok	40	40.013175	2544	1511
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_comm	40	40.114392	16770	4383
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40	23.399837	22546	2872	0.1.5.27.1.5.3.4.2.0.0	synth with cache (only 1: split; only 1: intro; only 1: dependent rewrite H; only 1: exists eq_refl; only 1: reflexivity; only 1: intro; only 1: apply eq_existT_uncurried; only 1: destruct H; only 1: subst; only 1: exists eq_refl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_sigT_fst	40	0.039637	17	7	0.1.1.0	synth with cache (only 1: intros; only 1: change x2 with (projT1 (existT P x2 H2)); only 1: destruct H; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40	40.025658	6024	1421
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion_left	40	40.047139	6639	2691
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.PairDecidableType.eq_dec	40	40.185671	37408	4160
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.treesort_twist1	40	40.125451	11656	3480
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.of_nat_via_N	40	40.080485	5036	1003
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_quot2	40	12.633883	2165	741	1.1.5.3.0.3.0	synth with cache (only 1: intros a Ha; only 1: simpl; only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: simpl; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: simpl; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_1	40	5.399787	2169	419	0.0.1.5.14	synth with cache (only 1: intros Hc; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eapply Sort_Inf_In; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_opp_opp	40	40.085700	27731	5161
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.agree_env_eval_nformula	40	40.095644	31334	3376
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.PER_morphism_obligation_1	40	40.058249	9057	8234
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_ok	40	40.082275	28348	1203
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	40	40.030613	8443	1280
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.symmetric_equiv_flip	40	0.043385	13	6	4.0.0.0	synth with cache (only 1: hnf; only 1: intros; only 1: hnf; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec2	40	40.042489	10535	3020
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.compose_proper_obligation_1	40	0.024448	17	2	8	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.reflexive_eq_dom_reflexive	40	0.017889	5	3	0.0.2	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40	40.060135	15681	2980
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_quot2_neg	40	0.890221	38	24	5.0.0	synth with cache (only 1: intros Hn Hn'; only 1: apply Zodd_bool_iff in Hn'; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec3	40	0.222455	57	29	0.0.0.0.0.0.0.1	synth with cache (only 1: functional induction max_elt s; only 1: red; only 1: red; only 1: inversion 2; only 1: inversion 1; only 1: intro H0; only 1: destruct (IHo H0 _x3); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolEq.Bool_eq_dec.exists_beq_eq	40	40.283762	115218	3351
coq-tactician-stdlib.8.12.dev	Coq.Init.Byte.of_bits_to_bits	40	40.796457	384079	3850
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	40	40.050182	12952	1658
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_decompose	40	40.169837	18897	2362
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_inj_tail	40	40.117398	42109	3995
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_comp	40	4.329864	8318	389	3.29.52	synth with cache (only 1: intro; only 1: red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.in_eq	40	0.010993	2	2	0.0	synth with cache (only 1: intros a r; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40	40.097749	29971	4674
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.mult_n_Sm	40	40.177558	65767	7258
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.in_cons	40	0.138856	59	19	0.0.0.1.3	synth with cache (only 1: intros; only 1: generalize H; only 1: simpl; only 1: right; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel_left	40	40.053085	12984	6390
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40	40.053334	14989	2816
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zsucc_gt_compat	40	40.052507	18206	1869
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.fold_compat	40	40.120648	18521	3003
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zsucc_gt_reg	40	0.092293	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.not_in_cons	40	0.419629	84	29	2.2.1.2	synth with cache (only 1: simpl; only 1: split; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zsucc_le_reg	40	0.008133	1	1	0	synth with cache (only 1: apply Z.succ_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zsucc_lt_reg	40	0.006860	1	1	0	synth with cache (only 1: apply Z.succ_lt_mono).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.in_nil	40	0.020938	4	3	1.0.0	synth with cache (only 1: intro n; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	40	40.074905	19809	4510
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_eq_reg_r	40	40.042291	11612	2490
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Binary.relation_equivalence_equivalence	40	40.112853	41221	2357
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Binary.relation_implication_preorder	40	0.012453	4	1	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Binary.partial_order_antisym	40	0.031471	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_add_elim	40	40.126691	22095	3982
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Binary.PartialOrder_inverse	40	0.317437	14	4	1.0	synth with cache (only 1: reduce_goal; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	0.022072	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40	40.055091	14383	4947
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_unique	40	40.322853	102231	5403
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity_l	40	40.055691	14884	4280
coq-tactician-stdlib.8.12.dev	Coq.Init.Tactics.decide_left	40	40.241015	100367	7659
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_app_iff	40	40.163193	7124	1847
coq-tactician-stdlib.8.12.dev	Coq.Init.Tactics.decide_right	40	0.025213	6	4	1.1.0.0	synth with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).
coq-tactician-stdlib.8.12.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	40	40.136733	53015	1168
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.asin_bound	40	40.028418	7812	1956
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.EqdepDec.eq_proofs_unicity_on	40	40.157841	60681	2917
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40	40.102930	37531	3210
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_spec	40	40.066437	19452	4286
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_add_elim2	40	2.520696	483	255	0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: simple induction x; only 1: simpl; only 1: intros [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes; only 1: simpl; only 1: do 3 intro; only 1: elim (Aeq_dec b a0); only 1: tauto; only 1: intros H0 [| ]; only 1: auto with datatypes; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.abstract_context	40	14.169367	109879	1422	1.109.94	synth with cache (only 1: intro H; only 1: apply H; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_plus	40	40.039631	6091	1852
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_assoc	40	40.079451	26369	4405
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_one	40	0.010100	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.remove_spec	40	40.234148	59433	4471
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.choose_spec1	40	6.825934	6234	662	0.0.0.4.13.1.8.0.12	synth with cache (only 1: induction s as [| c l IHl y r IHr]; only 1: intros Ha Eq; only 1: easy; only 1: simpl; only 1: induction l as [| a l IH]; only 1: intro H; only 1: inversion 1; only 1: auto; only 1: now auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.choose_spec2	40	0.844724	443	108	0.0.0.0.0.2.1.10	synth with cache (only 1: intro; only 1: functional induction min_elt s; only 1: red; only 1: inversion 2; only 1: inversion 1; only 1: intro H0; only 1: destruct (IHo H0 _x3); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.Permutation_PermutationA	40	7.172655	2321	456	20.0.1.0.0	synth with cache (only 1: induction 1; only 1: intuition; only 1: intuition; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.eqb_nat_eq	40	40.120988	28547	3835
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_0_l	40	1.351004	1294	177	0.0.0.17	synth with cache (only 1: intros l; only 1: unfold Qeq; only 1: simpl in *; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.eqlistA_PermutationA	40	0.030905	4	3	1.0.0	synth with cache (only 1: induction 1; only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.MoreInt.norm_ep_correct	40	41.814409	29492	783
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_0_r	40	1.130926	422	82	1.8.0.0.0	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: Z.nzsimpl; only 1: now rewrite Pos.mul_1_r).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_2	40	10.755771	2656	644	0.0.0.0.7.0.3.2	synth with cache (only 1: rewrite InA_cons; only 1: intuition; only 1: invlist Sorted; only 1: constructor; only 1: eapply Sort_Inf_In; only 1: eauto; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.in_or_app	40	1.736583	797	221	9.0.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Rtauto.with_env.interp_proof	40	40.213054	51170	4701
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.diff	40	40.245998	95751	3727
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	40	40.287429	41244	4523
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	40	40.098016	17159	1826
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.nat_compare_lt	40	40.198258	13487	5614
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_S_lt_compat_l	40	40.137143	18908	2920
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.in_app_or	40	9.962296	6579	1244	3.0.8.12.4	synth with cache (only 1: intros l H; only 1: compute; only 1: induction l as [| a tail]; only 1: firstorder  discriminate; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Cmp.Equiv_Equivb	40	40.061446	18474	3079
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	40	40.063114	8339	3199
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectNegCore.elimTFn	40	40.265381	29303	1418
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	40	40.046163	12099	3290
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.map2_commut	40	40.107317	34104	3643
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_nonneg	40	40.047329	12789	2239
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	40	40.060257	17135	2721
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.lt_0_mul'	40	40.040353	9018	3026
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT.eq_sigT_uncurried	40	40.455366	207810	5170
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT.eq_existT_curried	40	0.026037	3	3	0.0.0	synth with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT.eq_existT_curried_map	40	0.032129	2	2	0.0	synth with cache (only 1: destruct p, q; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.exists_in_int	40	40.283102	47898	4620
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.seq_congr	40	40.058492	13463	5469
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_le_0_lt_compat	40	40.072009	19203	5255
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.if_true	40	40.003132	825	91
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.diff_spec	40	40.050290	14819	2924
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.wf_disjoint_sum	40	40.109184	31390	7198
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40	40.092838	27999	3777
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	40	40.058101	11426	1282
coq-tactician-stdlib.8.12.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dimemo_get_correct	40	40.098326	34081	5562
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40	40.311610	133927	3896
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	40	0.033021	6	3	1.0.2	synth with cache (only 1: red; only 1: compute; only 1: iorder).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	40	0.189897	97	30	4.6	synth with cache (only 1: repeat red; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_abs	40	40.043775	9656	3034
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.del_spec	40	40.030806	7566	1441
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	40	40.073356	5065	1018
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	40	40.067873	16432	3477
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	40	0.040486	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	40	15.720874	6048	1411	6.1.8.3	synth with cache (only 1: intros z n H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: apply lt_0_succ).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zmult_compare_compat_l	40	40.136043	28064	3479
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_comm	40	8.251684	3103	915	0.0.0.0.1.0.3.6.3	synth with cache (only 1: destruct x; only 1: intros; only 1: generalize 1%Z; only 1: red; only 1: intros; only 1: simpl; only 1: simpl_mult; only 1: ring_simplify; only 1: f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_quot	40	40.085571	29907	3965
coq-tactician-stdlib.8.12.dev	Coq.Init.Wf.Well_founded.well_founded_induction_type	40
coq-tactician-stdlib.8.12.dev	Coq.Init.Wf.Well_founded.well_founded_induction	40	0.023095	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Wf.Well_founded.well_founded_ind	40	0.024794	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Streams.Str_nth_plus	40	40.107957	33057	5812
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40	40.053833	12863	3670
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40	40.061322	17794	3059
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.Generic.Paradox.paradox	40	40.047971	15895	2422
coq-tactician-stdlib.8.12.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	40	0.684307	967	74	1.29	synth with cache (only 1: intros f [x]; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.andb_prop	40	40.429429	188724	12876
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	40	40.099452	6170	1457
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_r	40	40.084829	28354	3494
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.prime_divisors	40	40.044735	14433	1337
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_mult	40	40.038797	11825	3440
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	40	40.119500	9371	2504
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_div2	40	1.192001	834	102	0.0.0.0.0.12.0.12	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct p as [p| p| ]; only 1: reflexivity; only 1: unfold N.div2, N.to_nat; only 1: trivial; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.remove_2	40	40.169042	6057	2447
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_quot2	40	0.030871	3	3	0.0.0	synth with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	40	17.228153	4556	1729	0.4.0.3.0.4	synth with cache (only 1: symmetry; only 1: rewrite <- le_succ_l; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: rewrite lt_succ_r; only 1: now rewrite succ_pred).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inter_inf	40	40.048758	12734	2302
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40	40.042572	13289	2403
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.wf_lex_exp	40	40.167225	41583	5376
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.in_app_iff	40	10.748686	4777	1462	11.0.1.0.0.0.0.6.0.0.0	synth with cache (only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: split; only 1: auto; only 1: intro H; only 1: elim H; only 1: intro H0; only 1: elim H0; only 1: auto; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Included_Add	40	40.245648	28981	4584
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.and_cancel_l	40	40.413571	168304	13365
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_l	40	40.027717	6372	1613
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice_plus_one	40	40.017736	3225	1987
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.inter_spec_ok	40	40.041658	10664	1709
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app	40	40.150780	19464	4772
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.Sorted_sort	40	40.232964	67815	3630
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT.eq_existT_curried_trans	40	9.146183	10951	926	0.43.0	synth with cache (only 1: destruct p, q; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	4.631384	751	391	0.0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: now try order'; only 1: simpl; only 1: now try order').
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.proper_sym_impl_iff	40	40.055849	17329	2887
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.036357	5	5	0.0.0.0.0	synth with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	40	40.116816	41315	3247
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive	40	25.626377	3512	1338	0.3.0.0.0.2.7	synth with cache (only 1: elim Strict_Rel_is_Strict_Included; only 1: intros H'1 H'2 x y z H'3 H'4; only 1: apply H'1; only 1: apply Strict_Rel_Transitive_with_Rel with (y := y); only 1: auto with sets; only 1: apply H'1; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	40	40.066169	17570	3485
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_fixpoint	40	40.112819	10506	2780
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_div2	40	40.245164	36633	4127
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_3	40	40.107189	8102	3158
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.in_elt	40	2.845190	3899	365	4.1.6.1.18.11	synth with cache (only 1: intros l H; only 1: elim H; only 1: intro; only 1: simpl; only 1: auto using in_app_or, in_or_app; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	40	40.197089	83307	4227
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.andb_true_intro	40	5.357234	16668	1297	0.0.4.17.28	synth with cache (only 1: intro H; only 1: destruct 1; only 1: destruct H; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40	40.044760	12790	2068
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_is_functional	40	40.150542	16483	3482
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.Full_push_compat	40	40.133146	14736	4830
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.norm_invol	40	40.096925	34210	1008
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_morph_cons	40	40.090538	32001	3931
coq-tactician-stdlib.8.12.dev	Coq.Logic.Berardi.Berardis_paradox.Retracts.AC	40	40.119883	42122	6849
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	40	40.093452	30804	3542
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.eq_true_ind_r	40	1.292330	5830	340	1.14.32.0	synth with cache (only 1: intro; only 1: intro A; only 1: destruct 2; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.eq_true_rec_r	40	0.010655	3	3	0.0.0	synth with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.eq_true_rect_r	40	0.011726	3	3	0.0.0	synth with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.surjective_pairing	40	0.028393	20	6	0.7	synth with cache (only 1: intros A B [H1 H2]; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.double_S	40	40.132055	33688	3470
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40	40.020187	4501	1151
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	40	40.047165	13345	2482
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	40	40.087561	6768	1735
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.shiftrepeat_nth	40	40.117313	17093	3115
coq-tactician-stdlib.8.12.dev	Coq.Bool.Sumbool.bool_of_sumbool	40	40.467366	205392	7947
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_t	40	40.309987	118342	6962
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40	40.067730	16810	3820
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_const	40	7.925799	1773	666	0.0.0.0.0.0.0.0.0.0.0.4.0.0	synth with cache (only 1: intros; only 1: unfold fct_cte, derivable_pt_lim; only 1: apply derive_pt_eq_0; only 1: unfold fct_cte, derivable_pt_lim; only 1: intros; only 1: exists {| pos := 1; cond_pos := Rlt_0_1 |}; only 1: intros; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: unfold Rdiv; only 1: rewrite Rmult_0_l; only 1: rewrite Rplus_opp_r; only 1: rewrite Rabs_R0; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Injective_Surjective_Bijective	40	40.122728	21301	3222
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nless_not_refl	40	40.114481	40746	4106
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_succ_r	40	40.091507	11943	5194
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_3_facts.Newman	40	40.056474	14753	5445
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.tan_increasing_0	40	40.042636	12821	2551
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Equal_cardinal	40	40.057787	16127	3418
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectNegCore.equivPifn	40	40.176518	22938	765
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lor_le	40	40.053020	16030	2453
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT.eq_existT_curried_congr	40	5.615114	4917	422	0.9.21	synth with cache (only 1: destruct 1; only 1: destruct r, q, p; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40	40.107970	30206	9550
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj	40	40.197784	19787	5806
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_iff	40	0.146582	37	21	2.0.0.2	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	40	40.024398	5701	1574
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	40	40.068016	15121	6926
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_opp	40	40.081640	29770	482
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	40	40.067131	16900	4359
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_or	40	40.065263	14479	2530
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	40	3.811413	145	68	0.0.0.0.0.2.0	synth with cache (only 1: intros n m; only 1: nzsimpl; only 1: rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: now rewrite le_succ_l; only 1: order').
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_Empty	40	5.597688	2463	609	0.0.1.0.15	synth with cache (only 1: destruct m; only 1: auto with sets; only 1: inversion 1; only 1: elim (not_Empty_Add U A x); only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_not_Empty	40	40.197855	70112	8960
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA13	40	40.047524	17465	759
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.not_Empty_Add	40	0.538946	242	87	0.1.2.1.1.0	synth with cache (only 1: intros A x; only 1: red; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_inv	40	0.017412	5	3	1.0.1	synth with cache (only 1: intros B C H'; only 1: rewrite H'; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	40	40.032248	7278	1866
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_intro	40	0.016770	3	3	0.0.0	synth with cache (only 1: intros x y H'; only 1: elim H'; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	40	40.056438	21309	1793
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA14	40	0.280349	17	11	0.1.0.0.0	synth with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l, <- Pos2Z.opp_neg, Z.add_opp_diag_r; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_is_equiv	40	4.583946	3423	943	4.0.0.0.13.1.2.1.8	synth with cache (only 1: constructor; only 1: red; only 1: auto with sets; only 1: red; only 1: intros; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Union_inv	40	0.577471	277	70	1.1.2.5	synth with cache (only 1: intros A x; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.exists_b	40	40.035456	6214	4141
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	16.275481	12113	1918	34	synth with cache (only 1: iorder).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0.013768	1	1	0	synth with cache (only 1: iorder).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.in_inv	40	0.005787	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.leb_le	40	40.107685	22863	6619
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.hset_hprop	40	40.286050	116676	8044
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	40	40.090064	10938	2892
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_lt_compat	40	40.129128	16724	2018
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_inv_tail	40	40.213219	50890	5615
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv	40	40.065822	20600	2469
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	1.961757	359	69	8.0.0.1	synth with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	0.099165	16	9	1.2.0.0.0	synth with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: order; only 1: order').
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40	40.073130	21933	3776
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_image	40	40.186373	70941	6814
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	40	40.091929	19739	2491
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	40	40.080176	23666	5560
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.and_cancel_r	40	12.868273	16429	3904	0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros A B C Hl Hr; only 1: split; only 1: intros [HypL HypR]; only 1: split; only 1: intros; only 1: apply HypL; only 1: split; only 1: assumption; only 1: apply Hl; only 1: assumption; only 1: intros; only 1: apply HypR; only 1: split; only 1: assumption; only 1: apply Hr; only 1: assumption; only 1: intros [HypL HypR]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply HypL; only 1: assumption; only 1: apply Hl; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply HypR; only 1: assumption; only 1: apply Hr; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.and_comm	40	0.132494	72	48	0.0.0.0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_is_Bottom	40	11.337434	7570	1725	1.2.1.0.0.0.5.12.0	synth with cache (only 1: intro X; only 1: split; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: red; only 1: simpl; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_image	40	0.738937	455	105	0.0.0.13.0	synth with cache (only 1: intros; only 1: intro x; only 1: apply (Acc_lemma (f x)); only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40	40.251248	16577	2629
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	40	0.011872	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	40	0.016669	2	1	1	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.mul_succ_l	40	40.153737	29431	4433
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0.011560	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	0.010294	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	40	0.016643	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	40	0.010428	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40	40.098712	30224	5904
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	40	0.015294	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	40	0.011260	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	0.062021	41	9	6.0.0	synth with cache (only 1: intros Ext A P Q Eq; only 1: intros x; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0.039113	15	6	2.1.0	synth with cache (only 1: red; only 1: intros H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Product.Swap.swap_Acc	40	40.119133	40946	6412
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40	40.095389	24294	7995
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	40	0.008809	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.Pigeonhole	40	40.080364	22554	5496
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.forall_extensionality	40	40.751424	353634	4081
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	0.017622	3	3	0.0.0	synth with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	0.016930	3	3	0.0.0	synth with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40	40.197536	74969	6208
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Psquare_ok	40	40.019070	4136	1402
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.LT_WF_REL.well_founded_inv_lt_rel_compat	40	40.191411	32925	6759
coq-tactician-stdlib.8.12.dev	Coq.Sets.Permut.Axiomatisation.perm_right	40	40.163205	63628	5057
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_CIC.ext_prop_dep_proof_irrel_cic	40	40.280400	119908	9081
coq-tactician-stdlib.8.12.dev	Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40	40.264695	100416	6969
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0.656921	412	58	2.13.2	synth with cache (only 1: intro H; only 1: unfold not; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	40	0.009667	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	40	0.010233	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	40	0.009293	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulI_ok	40	40.013623	2525	1329
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_succ_l	40	40.154212	15052	5173
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_sigT_snd	40	40.047628	10570	4453
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	40	40.078550	26249	1304
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.le_plus_l	40	4.652502	2705	399	5.3.0.8.0.16	synth with cache (only 1: revert m; only 1: Nat.induct ltac:(m); only 1: now Nat.nzsimpl; only 1: intros m IH; only 1: Nat.nzsimpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_sig_fst	40	0.758416	459	141	1.1.6.0	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: destruct H; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.treesort_twist2	40	40.056903	13579	3845
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.PairUsualDecidableType.eq_dec	40	40.110673	36064	6955
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	40	0.993218	207	59	0.1.1.1.1.1	synth with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite sub_succ_l; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_opp_opp	40	40.061549	22197	2651
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zquot2_opp	40	39.522584	22073	2442	1.2.0.0.0.6.3.2.0.32	synth with cache (only 1: destruct n; only 1: now Z.nzsimpl; only 1: unfold Z.ggcd, Z.opp; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: trivial; only 1: trivial; only 1: now f_equal; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwadd_ok	40	40.047647	16100	1305
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.respectful_morphism	40	40.028504	5941	1779
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	40	40.211550	14037	2029
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.Reflexive_partial_app_morphism	40	0.007581	6	1	5	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.flip_respectful	40	0.013520	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.flip1	40	0.020101	5	4	0.0.1.0	synth with cache (only 1: reduce; only 1: red in H0; only 1: red in H0; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	40	40.033199	8263	2062
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.flip2	40	0.005795	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.agree_env_eval_nformulae	40	40.415738	20487	1964
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.eq_subrelation	40	0.027118	7	4	0.0.1.2	synth with cache (only 1: hnf; only 1: intros; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.reflexive_proper	40	0.004450	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.proper_eq	40	0.007812	1	1	0	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolEq.Bool_eq_dec.not_eq_false_beq	40	40.167110	55845	3600
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40	21.337663	2802	1017	0.0.0.0.0.0.3.1.1.2	synth with cache (only 1: intros n m H; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now apply add_cancel_l; only 1: assumption; only 1: now apply add_le_mono_l; only 1: rewrite 2!max_l; only 1: now apply add_cancel_l; only 1: assumption; only 1: now apply add_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Init.Byte.to_bits_of_bits	40	40.059260	21393	1859
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eq_true_iff_eq	40	0.098311	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	40	40.093745	16445	2760
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_compr	40	40.240381	95258	4863
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	40	40.344908	23624	3531
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	40	40.071776	15812	3523
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.proper_proper	40	0.949274	271	139	0.0.1.0.0.0.2	synth with cache (only 1: split; only 1: intros; only 1: subst; only 1: firstorder; only 1: subst; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive	40	40.048735	11290	6184
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.le_pred	40	40.117009	35144	9214
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Normalize.proper_normalizes_proper	40	0.030427	7	1	6	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Normalize.flip_atom	40	0.008952	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zgt_succ	40	40.052846	17844	2126
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_compat	40	40.076238	22612	3484
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	40	1.378081	486	126	0.2.0.0.0.2.7	synth with cache (only 1: destruct n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	40	40.035135	9383	2198
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRinv_1	40	40.479637	21893	1603
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	40	0.028998	7	3	2.2.0	synth with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_ancestor	40	40.101307	31272	5688
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.le_plus_r	40	5.780207	2702	483	7.1.2.0.1.2.1.1.19	synth with cache (only 1: revert m; only 1: induction n; only 1: intro; only 1: Nat.nzsimpl; only 1: left; only 1: destruct m; only 1: simpl; only 1: auto; only 1: now constructor).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity'	40	40.068005	15851	7158
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_rev	40	40.094975	7519	1294
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.asin_bound_lt	40	40.019067	4435	1816
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.empty_cardinal	40	40.021970	6195	1254
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.EqdepDec.K_dec_on	40	40.194710	82685	2594
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_singleton	40	0.052579	6	3	0.0.3	synth with cache (only 1: intuition; only 1: invlist InA; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_add	40	0.599289	119	43	1.0.1.4	synth with cache (only 1: intros A B; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_double_head	40	0.115356	2	2	0.0	synth with cache (only 1: do 2 rewrite InA_alt; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40	4.414071	707	290	1.0.0.0.1.0.0.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	40	2.405220	833	323	1.0.1.0.0.0.1.0.1.0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_permute_heads	40	0.779572	71	28	5.0	synth with cache (only 1: do 2 rewrite InA_alt; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_add_not_empty	40	40.157782	38623	4297
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_ok	40	40.037382	9578	2636
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.InjectionsTheory.can_comp	40	4.986172	10813	591	2.19.52	synth with cache (only 1: red; only 1: simpl; only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	40	4.491919	784	453	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	40	40.052715	10561	1713
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_lt	40	40.058170	19722	2507
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.singleton_spec	40	40.205477	50481	5843
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectNegCore.xorPifn	40	40.154064	28400	1259
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.choose_spec3	40	40.068957	21704	2184
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.eqb_eq	40	40.159128	20597	4653
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_decompose	40	40.189132	24372	2823
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_no_neutral	40	40.202588	45244	4150
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.MoreInt.norm_ep_correct2	40	40.068712	25003	2167
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_3	40	40.244446	19199	2426
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.equal	40	40.135630	16805	2869
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	40	40.221349	39854	4464
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Rtauto.with_env.Reflect	40	40.208457	87308	4093
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	40	40.076582	12709	3467
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.nat_compare_gt	40	40.059015	14906	5407
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_lt_compat_l	40	40.104382	31639	3576
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.in_split	40	40.190825	57884	3934
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.introT	40	40.149825	29511	851
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb	40	40.060913	19330	2634
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40	40.062483	7555	2427
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	40	40.077786	22412	4002
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_S_cons	40	0.025810	4	3	0.0.1	synth with cache (only 1: intros n l d; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	0.052082	7	2	5.0	synth with cache (only 1: intros; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40	7.865502	1028	405	0.0.0.3.0.0.0.2.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_pos	40	40.041007	9119	1884
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_sym	40	0.168475	4	2	2.0	synth with cache (only 1: intros; only 1: now intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	40	40.062857	18240	3507
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.eq_mul_1	40	40.055351	12531	3963
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.in_int_exists	40	40.106258	25686	2773
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.union_perm_left	40	40.067638	15657	5489
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_lt_0_compat	40	40.068823	17097	7104
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	40	0.091773	23	10	0.2.0.1.0	synth with cache (only 1: intros; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_semi_ok	40	40.002300	409	83
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	40	0.671983	376	83	0.1.0.9.0	synth with cache (only 1: intros; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.diff_1	40	40.116823	39098	4930
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	40	40.059917	15014	4208
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.diff_2	40	0.048295	3	3	0.0.0	synth with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	40	40.066030	16939	2277
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union	40	11.278468	5874	1162	1.1.0.1.0.0.0.4.2.1.2.3	synth with cache (only 1: unfold Add; only 1: intros x y H'; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_r	40	3.063216	792	319	1.0.0.1.1.0.0.0.2.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_nonneg	40	40.054073	13902	3006
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.diff_3	40	0.693670	137	44	1.0.3.0.0.0.1	synth with cache (only 1: induction x; only 1: rewrite diff_spec; only 1: tauto; only 1: rewrite diff_spec; only 1: intuition congruence; only 1: rewrite diff_spec; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	40	40.084282	23966	4115
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	40	40.050951	11950	4365
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	40	40.048223	11636	3205
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zmult_compare_compat_r	40	40.041272	10320	4231
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qopp_involutive	40	40.057535	9450	1817
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_rem	40	40.161448	36809	3560
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_cancel_r	40	2.915908	706	304	0.3.1.0.1.2.0	synth with cache (only 1: revert p q; only 1: split; only 1: now apply add_reg_r; only 1: revert p q; only 1: intros p q H; only 1: f_equal; only 1: auto using add_carry_add).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_testbit	40	0.211283	24	18	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Streams.EqSt_reflex	40	40.264136	60531	6304
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.id	40	0.124979	5	5	0.0.0.0.0	synth with cache (only 1: intro Hn; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	40	40.049249	12536	2893
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.del_ok	40	40.052206	3353	488
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	40	40.066155	18338	3378
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.remove_ok	40	0.172621	8	5	1.1.1.0.0	synth with cache (only 1: induct s x; only 1: auto; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok).
coq-tactician-stdlib.8.12.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	40	40.239555	95672	4666
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_form_correct	40	40.212073	47185	2962
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.remove_3	40	40.046492	4883	2229
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_pow	40	40.135144	29603	3405
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	40	40.063416	13464	2226
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.Paradox.paradox	40	40.744937	371292	2963
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	40	40.032831	5859	1904
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	40	0.145959	9	5	3.0.0	synth with cache (only 1: intros; only 1: rewrite lt_le_pred; only 1: apply le_succ_l).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40	40.050154	14559	3137
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inter_ok	40	40.047353	9616	2166
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	0.277644	16	8	0.0.4.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.prime_rel_prime	40	40.072761	23836	2864
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Streams.sym_EqSt	40
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.rel_prime_le_prime	40	0.451623	68	31	0.3.3	synth with cache (only 1: intro z; only 1: intros y (Hy, Hy'); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.setcover_inv	40	40.295444	16487	2967
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	40	1.288613	276	120	1.0.0.5.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite <- le_succ_l; only 1: symmetry; only 1: apply lt_succ_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40	40.031848	8540	1538
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_incr	40	40.041635	4848	3440
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	40	40.296148	29817	7667
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	40	0.397523	66	24	0.6.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.one_succ	40	0.017204	6	2	0.4	synth with cache (only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.Permuted_sort	40	40.071141	20792	3982
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app'	40	40.207670	19644	3115
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.two_succ	40	0.016768	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.add_0_l	40	0.008599	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	40	0.423601	127	34	3.4.0	synth with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply neq_sym, neq_succ_diag_l).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.inter_spec	40	40.091292	32410	3040
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	40	40.088471	9339	3334
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40	39.833027	8071	1452	0.0.0.0.1.3.1.0.15	synth with cache (only 1: intro H; only 1: intros A R1 Sym B R2 f Hf; only 1: intros x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: apply Hf; only 1: auto; only 1: auto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40	0.049171	5	5	0.0.0.0.0	synth with cache (only 1: intros A R Sym B R' Sym' f Hf x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	40	40.114365	37011	3217
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_fixpoint	40	40.053624	14246	3399
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	40	40.075958	14952	2653
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_compare	40	40.277852	53667	2714
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_iff	40	4.202307	1160	370	10.0.0.2.1	synth with cache (only 1: split; only 1: apply N2Z.inj; only 1: Z.order; only 1: Z.order; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.in_elt_inv	40	40.115419	40914	4370
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_3'	40	40.101531	14548	3440
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	40	40.208733	87394	5602
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_0	40	0.011135	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.Full_index_one_empty	40	40.087436	26941	5853
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	40	40.035691	8380	2187
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_pos	40	0.051728	8	7	0.1.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0_any	40	0.486135	72	30	0.0.1.3.0.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt; only 1: rewrite strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nzhead_del_tail_nzhead_eq	40	40.058839	17052	3456
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_neg	40	0.010795	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_opp_r	40	7.339870	2725	387	0.14.2.1.0	synth with cache (only 1: unfold Qeq; only 1: simpl; only 1: intros; only 1: Z.nzsimpl'; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_length_1	40	40.264442	71422	4226
coq-tactician-stdlib.8.12.dev	Coq.Logic.Berardi.Berardis_paradox.L1	40	40.241079	99037	8154
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.injective_projections	40	40.256741	103275	8163
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.eq_trans_cancel	40	32.872180	61899	5428	0.20.10.8.14	synth with cache (only 1: unfold eq_trans, eq_sym, eq_ind; only 1: intros A B f g <- H; only 1: destruct r, 1; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	40	1.546449	266	96	0.0.0.0.0.5.0.3	synth with cache (only 1: apply log2_unique; only 1: order_pos; only 1: nzsimpl; only 1: split; only 1: order; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: order_pos).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.double_plus	40	40.119431	24051	3996
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40	6.136944	2178	381	6.0.4.2.10	synth with cache (only 1: intros a H; only 1: intros; only 1: intros H1; only 1: do 2 (rewrite filter_iff; auto); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	40	0.771313	140	54	0.0.0.1.0.4	synth with cache (only 1: apply log2_unique' with 0; only 1: apply lt_le_incl, lt_0_1; only 1: split; only 1: order_pos; only 1: order_pos; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40	40.033526	7647	1625
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40	2.444813	2533	349	4.21.2	synth with cache (only 1: intros; only 1: apply H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	40	40.076846	18308	5241
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	40	3.751457	2242	316	0.0.0.0.0.0.0.20	synth with cache (only 1: destr_bool; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: apply Private_NZDiv.div_0_l; only 1: order').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	40	40.069405	19689	2881
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.shiftrepeat_last	40	40.132760	11563	3654
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_scal	40	40.042301	12257	2816
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	40	0.368099	98	58	0.0.0.0.2.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: order; only 1: nzsimpl; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	40	0.446693	168	41	0.0.0.0.8	synth with cache (only 1: intros; only 1: apply b2z_inj; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; split; simpl; order')).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_Rsqr	40	0.206392	10	7	1.3.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nless_def_1	40	40.074123	23193	3972
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_carry_add	40	40.144553	11304	3901
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40	0.530492	156	68	1.0.0.3.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with 0; only 1: order; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40	40.086572	29536	2605
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin_Finite	40	40.512705	16962	2985
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.tan_increasing_1	40	40.023235	4813	2681
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.introF	40	40.174811	11180	673
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	40	40.084212	21860	5588
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	40	40.234104	99810	5228
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.not_gt_le	40	0.208399	71	33	0.2.0.1.0.0	synth with cache (only 1: intros x y H; only 1: destruct (P.lt_total x y); only 1: rewrite P.le_lteq; only 1: intuition; only 1: rewrite P.le_lteq; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_compare	40	40.194219	15966	4782
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	40	0.035448	5	3	0.2.0	synth with cache (only 1: intros x y; only 1: rewrite P.le_lteq; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	40	40.026103	6145	1478
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40	40.061661	14203	5764
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.add_sqrt_le	40	40.064933	9698	3515
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	40	40.082677	21663	5363
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_sub	40	40.227071	19631	278
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARth_SRth	40	0.270840	378	21	27	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_unicity	40	40.066790	21218	4364
coq-tactician-stdlib.8.12.dev	Coq.Logic.Berardi.Berardis_paradox.retract_pow_U_U	40	5.276468	42462	409
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	40	40.146686	54802	3482
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_add	40	6.472844	1028	487	3.6.5	synth with cache (only 1: unfold Z.le, Z.min; only 1: intros; only 1: now destruct n, m).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	40	40.044328	11860	2152
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA15	40	40.034750	11816	1000
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA16	40	0.058558	8	2	3.3	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_mul	40	0.729611	133	58	1.0.0.0.0.0.0.0.1.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: now destruct 1 || now destruct 2).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_idempotent	40	40.114773	29314	10328
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA17	40	0.076591	2	2	0.0	synth with cache (only 1: intros H ->; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_inv	40	40.101137	25220	7053
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Intersection_inv	40	0.019786	3	3	0.0.0	synth with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_trans	40	19.605795	8977	1677	0.3.1.6.0.12	synth with cache (only 1: intros def_n0; only 1: intros x y z; only 1: compute; only 1: intros; only 1: rewrite <- H0; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Couple_inv	40	0.393719	96	61	0.2.0.1.0.0	synth with cache (only 1: intros A x y H'; only 1: induction H'; only 1: left; only 1: trivial with sets; only 1: right; only 1: trivial with sets).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.In_m	40	40.064617	19555	3043
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40	40.110190	36410	4267
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Setminus_intro	40	0.015911	3	2	1.0	synth with cache (only 1: intros B C x H'; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.eqb_eq	40	40.077691	23265	6569
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_intro	40	0.014162	3	2	1.0	synth with cache (only 1: intros B C H'; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_ST	40	0.128239	9	4	2.0	synth with cache (only 1: intros; only 1: dintuition).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.in_dec	40	40.213409	24934	2541
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.ltb_lt	40	40.098587	19483	5328
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.eq_dec	40	0.017695	1	1	0	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_1	40	40.060516	18417	2527
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40	40.131430	44131	5066
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	40	40.085000	11435	2836
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_strict	40	0.910147	1166	193	3.6.7	synth with cache (only 1: red; only 1: destruct 1; only 1: auto using Noone_in_empty with sets).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_in_or_default	40	40.255626	32281	3948
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_compat	40	40.107725	16914	2408
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_0	40
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	40	40.080900	23246	2190
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nless_def_2	40	6.539422	2173	805	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: destruct a; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial; only 1: destruct a'; only 1: unfold Nless; only 1: simpl; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Union_minimal	40	40.042924	9146	3114
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	40	40.250949	14196	4056
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_maximal	40	0.023798	9	5	2.0.0.0	synth with cache (only 1: intros a b X H' H'0; only 1: red; only 1: intros x H'1; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_l	40	0.007534	1	1	0	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.flatten_e_elements	40	1.540639	421	116	0.0.0.0.0.6	synth with cache (only 1: simpl; only 1: unfold elements; only 1: simpl; only 1: intros; only 1: rewrite !elements_app, !app_nil_r, !app_assoc_reverse; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_r	40	0.006967	1	1	0	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.and_assoc	40	40.254548	94858	9535
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_l	40	0.110244	54	26	0.0.0.0.0.3	synth with cache (only 1: intro A; only 1: intro X; only 1: red; only 1: intros x H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_rel	40	40.223719	56502	5281
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_r	40	0.021686	5	5	0.0.0.0.0	synth with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.ltb_lt	40	40.231371	13978	4835
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwopp_ok	40	35.442351	29875	602	2.2.0.42.81	synth with cache (only 1: intro m; only 1: induction m; only 1: simpl; only 1: norm; only 1: norm).
coq-tactician-stdlib.8.12.dev	Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40	40.196393	71449	7789
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40	40.101241	24684	7978
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Product.Swap.Acc_swapprod	40	40.041298	10413	3906
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.Pigeonhole_principle	40	40.076680	22341	5059
coq-tactician-stdlib.8.12.dev	Coq.Sets.Permut.Axiomatisation.perm_left	40	40.042400	9062	5372
coq-tactician-stdlib.8.12.dev	Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	40	40.068505	14123	7738
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	40	3.870643	752	507	0.0.6.0.0.0	synth with cache (only 1: intros; only 1: rewrite le_lteq; only 1: destruct (compare_spec x y); only 1: intuition; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40	40.529800	239646	6036
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40	40.506081	28439	5058
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	40	0.069498	8	5	1.1.1.0.0	synth with cache (only 1: intros; only 1: destruct (compare_spec x y); only 1: iorder; only 1: iorder; only 1: iorder).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40	40.187453	74430	3931
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p1	40	40.277454	120334	5313
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	40	0.021569	3	2	1.0	synth with cache (only 1: rewrite compare_gt_iff; only 1: iorder).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40	40.854179	407178	4126
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.028209	3	3	0.0.0	synth with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_reg_r	40	40.044005	10518	3815
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.Empty_m	40	4.817602	2607	494	15.6.4	synth with cache (only 1: repeat red; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Mphi_morph	40	40.059939	21809	1055
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pmul_ok	40	40.013486	2630	1426
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_sig_snd	40	40.048584	11377	4181
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.meq_singleton	40	40.261832	27452	2611
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40	1.529098	10557	138
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	40	40.035420	8972	1417
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40	40.062045	21230	2378
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zquot2_quot	40	40.199314	9395	1370
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	40	40.078605	24340	2893
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40	4.102274	2075	786	0.0.0.0.0.2.0.0.0.0.2.0	synth with cache (only 1: intuition; only 1: red; only 1: intros x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: apply T1 with y0; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	40	40.187255	32343	1923
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolEq.Bool_eq_dec.eq_dec	40	40.111850	39021	5218
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	40	40.037415	7992	1225
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.ZChecker_sound	40	40.295183	34131	2748
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	40	40.068582	19038	3713
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.flip_arrow	40	40.032808	4292	927
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.le_S_n	40	40.232945	86629	12738
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.le_0_n	40	0.014625	6	3	0.1.2	synth with cache (only 1: induction n; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Znot_le_succ	40	40.103050	35898	3745
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.le_n_S	40	0.048254	25	10	1.1.0.0.1	synth with cache (only 1: induction 1; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.proper_sym_flip	40	0.016967	1	1	0	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb_eqdec	40	40.056378	16728	2240
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep1_eq_on	40	3.709922	6143	408	23.1.6.28	synth with cache (only 1: intro x; only 1: destruct 1 as (eq_qp, H); only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.nat_case	40	0.819446	1010	140	1.0.8.10	synth with cache (only 1: intros n m; only 1: induction n; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA18	40	10.700304	4354	490	34	synth with cache (only 1: easy || now destruct y).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.proper_sym_flip_2	40	1.050255	252	64	3.1.6	synth with cache (only 1: compute; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.opp_0	40	0.010029	2	2	0.0	synth with cache (only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	40	6.017034	5590	869	0.0.0.0.0.0.3.0.0.3.0.3.0.0.6.0.0	synth with cache (only 1: intros; only 1: case (compare x y); only 1: destruct (compare x y); only 1: intros H'; only 1: exists H'; only 1: auto; only 1: intros H'; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_eq_reg_l	40	40.038814	7554	3756
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40	40.051860	14851	2200
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	40	40.071606	17040	1734
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40	9.944006	2518	849	2.2.10.1	synth with cache (only 1: intros a b c Ha H; only 1: apply pow_le_mono_r; only 1: auto'; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	40	40.103363	33217	3124
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	0.056158	8	7	0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: intuition order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.le_plus_trans	40	40.169249	39041	3791
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	40	0.528782	198	66	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.SuccPred.succ_pred_approx	40	40.324557	35652	3804
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.singleton_cardinal	40	40.104212	40618	1938
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.sin_asin	40	40.031746	9720	1772
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.EqdepDec.inj_right_pair_on	40	40.167757	67902	2455
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.nat_double_ind	40	1.998999	3110	455	1.1.17.1.1.1	synth with cache (only 1: induction n; only 1: intro p; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_app_idem	40	40.144167	7780	2169
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	40	40.380647	22256	4818
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.opp_succ	40	2.683101	1922	212	6.3.0.0.1.25	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: now rewrite Pos.add_comm; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_spec	40	40.043286	9573	3612
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_add_iff	40	40.115565	17970	3175
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pred_succ	40	0.023325	2	2	0.0	synth with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.InjectionsTheory.pcan_pcomp	40	40.272622	107047	4016
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40	40.031908	7195	2480
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	40	40.087219	25171	4091
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.opp_inject_Q	40	40.063309	7880	1145
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.union_spec	40	40.188274	47102	3955
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.elements_spec1'	40	40.074218	21531	3832
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.introN	40	40.252904	18401	1030
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_preserves_NoDupA	40	40.194533	17276	2955
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.eq_dec	40	40.239988	53930	4073
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.remove_spec	40	40.022020	4203	966
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_reg_l	40	40.104431	19481	5438
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.gt_le_dec	40	40.117886	47460	1507
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.proper_sym_impl_iff	40	6.556541	1726	400	0.2.2.9.1	synth with cache (only 1: intros; only 1: red in H0; only 1: red in H0; only 1: red in H0; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_l	40	34.214564	4573	1519	0.0.1.0.4.0.0.0.1.0.0.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!max_l; only 1: now f_equiv; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.subset	40	40.108998	7758	2328
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sub_0_r	40	4.769099	8713	506	0.0.0.0.0.46	synth with cache (only 1: destruct n; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	40	40.109424	17452	1608
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	40	40.289694	17829	6368
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.nat_compare_le	40	40.135990	12354	5584
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.mul_0_l	40	0.008460	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.push_not_empty	40	27.672389	24050	3318	7.4.13.0.1.3	synth with cache (only 1: unfold get, push, index; only 1: intros; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: intro H; only 1: destr_eq H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_lt_compat_r	40	40.158871	32231	3458
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	40	5.094139	3388	458	0.0.0.0.25	synth with cache (only 1: destr_bool; only 1: apply Private_NZDiv.div_small; only 1: order'; only 1: apply Private_NZDiv.div_small; only 1: order').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	40	40.087738	26036	3883
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	40	40.099451	6696	3124
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.introNf	40	40.335395	14356	729
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_default_eq	40	40.085703	25624	6069
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_nonneg	40	40.057928	17250	1998
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	40	0.398494	145	33	0.0.0.0.8	synth with cache (only 1: intros; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; order')).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_le_compat_neg_l	40	40.040786	9096	2381
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.introTn	40	40.155662	20605	1145
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	40	40.064619	19871	1947
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.star_monotone	40	13.514052	5823	2681	0.0.5.3.0.0.0.0	synth with cache (only 1: unfold contains; only 1: intros U R S H' x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.cast	40	5.341219	2879	634	10.4.4	synth with cache (only 1: intros x y; only 1: intro; only 1: now intros ->).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.between_or_exists	40	40.103331	37006	3405
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.app_nth1	40	0.940431	187	71	0.0.5.0.0.0	synth with cache (only 1: induction l; only 1: inversion 1; only 1: simpl; only 1: destruct n; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.uniset_twist1	40	40.063869	14768	5451
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	40	1.187052	437	117	0.0.2.0.2.0.4.0	synth with cache (only 1: intros a0; only 1: apply b2n_inj; only 1: rewrite testbit_spec' by trivial; only 1: nzsimpl; only 1: simpl; only 1: order; only 1: order'; only 1: order_nz).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_succ	40	22.729497	8176	1642	1.0.1.0.0.0.0.2.7.14	synth with cache (only 1: unfold Z.le, Z.max; only 1: intuition; only 1: simpl in *; only 1: destruct n; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: unfold N.succ, N.add; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.fold	40	4.267114	3204	475	5.3.6.7	synth with cache (only 1: intro n; only 1: intros; only 1: simpl; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_lt_reg_l	40	40.061983	13300	2816
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_gt_reg_l	40	0.050421	12	7	4.0.0.0	synth with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.cardinal	40	0.201386	165	26	5.3.2	synth with cache (only 1: simpl in *; only 1: intros; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	40	40.071243	15098	3174
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40	40.063800	18748	2290
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union'	40	40.114517	33278	6217
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_abs_sgn	40	40.071505	7178	2263
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.fold_1	40	40.111364	39213	4134
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.singlx	40	0.538869	158	55	1.0.0.0.0.2	synth with cache (only 1: unfold Add at 1; only 1: intros x y H'; only 1: elim H'; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_spec	40	40.001413	169	55
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add	40	0.140761	33	10	1.5	synth with cache (only 1: unfold Add; only 1: auto using Union_associative with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	40	40.079502	23080	3199
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos_pos	40	40.142847	24296	3227
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.le_ind_rel	40	40.075750	26282	3322
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zcompare_elim	40	40.129535	32091	2922
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.compare_eq_iff	40	24.557805	9983	4207	0.0.0.0.0.0.0.1.0.0.0.0.1.0.0.0.1.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: destruct m; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: rewrite ?IHn; only 1: split; only 1: now intros ->; only 1: now injection 1).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_cancel_l	40	40.050804	9453	2667
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zcompare_eq_case	40	0.643519	211	53	2.1.4.0.0	synth with cache (only 1: intros a n a0 l h Hl EQ; only 1: case Z.compare_spec; only 1: trivial; only 1: Z.order; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	40	40.050562	13538	3101
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_xO	40	0.018549	4	2	0.2	synth with cache (only 1: simpl; only 1: f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	40	40.092468	19333	3405
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj	40	40.161153	25059	4280
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zle_compare	40	0.107350	30	11	0.1.0.0.1	synth with cache (only 1: intros EQ n Hn; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_r	40	8.255724	1199	537	0.0.0.0.0.0.0.0.0.0.0.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!max_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zlt_compare	40	0.047534	11	6	0.0.2.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.order; only 1: trivial; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	40	0.305607	93	26	0.1.0.4	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: rewrite add_comm; only 1: apply add_sub).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zge_compare	40	0.040171	6	5	0.1.0.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40	40.147390	8044	1784
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zgt_compare	40	0.035574	2	2	0.0	synth with cache (only 1: intros x y H; only 1: now rewrite H).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_pred	40	0.068566	14	6	0.0.0.0.3	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: now destruct p; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	40	40.099140	33627	2071
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.remove_Inf	40	40.150677	14112	3131
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_compare	40	0.684104	106	56	1.0.1.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: easy || now destruct y; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1; only 1: now destruct 1 || now destruct 2; only 1: now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.elements_1	40	0.019049	4	2	1.1	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.elements_2	40	0.011713	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.elements_3	40	0.031331	10	3	2	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inter_spec	40	40.036015	8784	2087
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.strength	40	40.324239	142152	6079
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	40	40.101206	35272	3353
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_l	40	16.655853	9389	2301	0.2.0.0.1.3.10	synth with cache (only 1: intros a b c Ha H; only 1: destruct (lt_trichotomy a b) as [LT| [EQ'| GT]]; only 1: assert (a ^ c < b ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order; only 1: trivial; only 1: assert (b ^ c < a ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_r	40	0.060648	8	7	0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (lt_trichotomy b c) as [LT| [EQ'| GT]]; only 1: assert (a ^ b < a ^ c) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.radd_term_term	40	40.205882	44555	3398
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_inj_r	40	40.090144	32993	3152
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Streams.trans_EqSt	40	40.084875	19338	7830
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.prime_mult	40	40.075455	17387	2000
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Add_covers	40	40.133707	20882	5126
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_negative	40	40.043787	9891	4428
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_le	40	2.508153	891	207	0.2.20	synth with cache (only 1: unfold N.le, N.ge; only 1: intros; only 1: now rewrite N2Z.inj_compare).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40	40.144659	52096	4547
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40	40.061462	17548	3123
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_add_inside	40	40.128302	21556	3460
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.wB_pos	40	0.023140	1	1	0	synth with cache (only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.inter_ok	40	40.060914	17815	3464
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.add_succ_l	40	40.316077	29401	4810
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.PartialOrder_proper_type	40	40.098885	4699	1770
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_zdigits	40	0.406581	159	26	5.9	synth with cache (only 1: unfold phi; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	40	4.776185	889	398	0.2.0.0.4	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: rewrite <- add_sub_assoc by apply le_refl; only 1: rewrite sub_diag; only 1: now rewrite add_0_r).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.app_nth2	40	9.518253	3264	1086	0.0.8.0.0.3.0.1.0.1.0	synth with cache (only 1: induction l; only 1: simpl; only 1: inversion 1; only 1: auto; only 1: simpl; only 1: auto with arith; only 1: intros l' d [| n]; only 1: simpl; only 1: now destruct l; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40	40.069133	19579	3448
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_more_than_1_digit	40	0.054677	38	4	10	synth with cache (only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40	40.087370	11483	2108
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_0	40	0.022756	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	40	0.057086	7	6	1.0.0.0.0.0	synth with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intro n; only 1: intro H; only 1: now rewrite pred_succ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_1	40	0.015592	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.app_nth2_plus	40	0.249708	32	20	1.1.0.1.0.0	synth with cache (only 1: induction l; only 1: intros l' d [| n]; only 1: auto; only 1: auto; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_max	40	40.088567	27040	4296
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_m1	40	0.134222	6	1	5	synth with cache (only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_NoDup	40	40.147918	37644	5095
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_any_fst_arg	40	40.032114	7180	3010
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_compare	40	0.023883	3	1	2	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_In	40	40.158913	42551	4624
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nzhead_del_tail_nzhead	40	40.053732	15962	3213
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_inj_l	40	40.048169	13677	2220
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_0_l	40	0.017849	3	3	0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	40	24.140066	7764	2174	1.0.1.5.1.0.1.6.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_length_1_inv	40	40.089502	27862	3701
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_0_r	40	0.141503	19	6	0.1.0.1	synth with cache (only 1: red; only 1: simpl; only 1: intros; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_middle	40	0.961176	349	123	3.1.0.0.0.1.1.1	synth with cache (only 1: induction l; only 1: simpl; only 1: intros [| ] ?; only 1: intros; only 1: auto; only 1: auto with arith; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.even_odd_double	40	40.099259	24752	5389
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.pair_equal_spec	40	40.283672	115273	10588
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.hset_hOneType	40	40.197225	76664	6692
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.rew_pair	40	0.014379	3	2	0.1	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40	40.051130	14021	2434
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40	40.029093	7191	1593
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	40	40.112735	46768	1278
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40	40.048530	12087	2434
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.nth_order_replace_eq	40	40.053845	16261	3495
coq-tactician-stdlib.8.12.dev	Coq.Sets.Permut.Axiomatisation.op_rotate	40	31.540406	6605	3646	0.8.5.1.0	synth with cache (only 1: intros; only 1: apply cong_sym; only 1: apply cong_trans with (op (op x y) z); only 1: apply op_comm; only 1: apply op_ass).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40	40.049580	15174	3121
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	40	40.171061	17255	1664
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	40.071656	17127	4673
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_carry_reg_r	40	40.146369	17283	5015
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.extend_ok	40	40.072839	25844	3341
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.empty_cardinal	40	40.152047	62171	2370
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_incr_0	40	40.024664	5656	2523
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.introFn	40	40.235327	14379	543
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_lt	40	40.130102	16931	4802
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT.eq_sigT_rect	40	40.324052	143785	3333
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_indep	40	34.823389	27525	4726	0.0.0.2.1.7.4.2.1.12	synth with cache (only 1: induction l; only 1: intros l m a; only 1: simpl; only 1: intro; only 1: now Nat.nzsimpl; only 1: intros; only 1: destruct n; only 1: split; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT.rew_sigT	40	0.025233	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	40	40.025305	5818	1491
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.modal	40	9.161813	17145	1084	0.5.10.45	synth with cache (only 1: intro p; only 1: red; only 1: destruct p; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig.eq_exist_uncurried	40	0.145373	3	3	0.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct p, q; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	40	40.071909	16150	5404
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.Forall	40	0.037010	18	4	1.6	synth with cache (only 1: red; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig.eq_sig_uncurried	40	0.065228	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	40	40.085588	18279	5028
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARsub_ext	40	40.047534	10046	1076
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.not_prime_0	40	8.291588	15576	439	5.68.25	synth with cache (only 1: intuition; only 1: case H; only 1: Z.order').
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_Add_gen	40	40.079790	26298	5768
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	40	40.110490	41073	1977
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_0_r	40	0.200066	297	18	24	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_1_r	40	0.027074	1	1	0	synth with cache (only 1: mrewrite).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_0_r	40	0.026992	1	1	0	synth with cache (only 1: mrewrite).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Berardi.Berardis_paradox.not_has_fixpoint	40	40.842294	398738	3891
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40	40.032243	8003	1266
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.compare_le_iff	40	13.613725	4569	1958	0.0.0.0.0.0.0.0.1.0.1.0.0.1.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: split; only 1: intros; only 1: apply le_0_n; only 1: easy; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: rewrite ?IHn; only 1: split; only 1: apply le_n_S; only 1: apply le_S_n).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_t1n_trans	40	40.203185	66076	8335
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	40	5.298596	993	396	0.1.0.0.0.0.0.0.1.0.0	synth with cache (only 1: intros n m p H1 H2; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_neg_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: apply eq_le_incl; only 1: rewrite H1; only 1: now do 2 rewrite mul_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_l	40	14.218299	1593	585	2.0.0.1.2.0.0.0.2.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_l; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.leb_le	40	40.054850	14931	4172
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.In_m_Proper	40	40.096095	29549	4627
coq-tactician-stdlib.8.12.dev	Coq.Logic.Berardi.Berardis_paradox.classical_proof_irrelevance	40	1.523078	10557	138
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.compare_lt_iff	40	0.246856	5	5	0.0.0.0.0	synth with cache (only 1: unfold ltb, lt; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.proper_sym_impl_iff_2	40	23.904066	8216	1214	4.4.4.12.2	synth with cache (only 1: simpl_relation; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: split; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.In_nth	40	40.150892	40358	4216
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.compare_le_iff	40	0.019535	2	2	0.0	synth with cache (only 1: unfold leb, le; only 1: apply iff_refl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	40	40.073141	21348	3109
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.elements	40	40.179438	37258	2699
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_add_or	40	40.055284	15310	2591
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_compat	40	40.083247	9184	1515
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_overflow	40	40.127599	34986	5751
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nless_def_3	40	40.106331	40214	2879
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40	40.050321	13630	2476
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_1	40	40.139099	53273	2993
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Union_is_Lub	40	40.087333	25623	5079
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.or_cancel_l	40	40.230583	85846	9218
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	40	40.225649	58348	4536
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	40	0.024178	7	2	3.2	synth with cache (only 1: apply max_r; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_rel	40	40.083235	25567	6372
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.or_comm	40	0.400133	337	133	0.0.0.1.0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.compare_eq_iff	40	40.068143	18288	4778
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.compare_antisym	40	3.725150	1468	648	3.0.2.0.0.2.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: reflexivity || destruct H; only 1: simpl; only 1: reflexivity || destruct H; only 1: destruct m; only 1: simpl; only 1: split; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwscal_ok	40	40.041396	13793	1530
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.compare_succ	40	0.092187	26	20	2.2.0	synth with cache (only 1: revert m; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_r	40	2.952499	459	209	0.0.0.1.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.not_prime_1	40	5.357007	3290	102	77	synth with cache (only 1: now destruct 1 || intros _).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Product.Swap.wf_swapprod	40	40.071363	21721	5884
coq-tactician-stdlib.8.12.dev	Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	40.277213	109539	8443
coq-tactician-stdlib.8.12.dev	Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	0.027266	18	5	5.0	synth with cache (only 1: intros Ext A Ha; only 1: now apply Ext).
coq-tactician-stdlib.8.12.dev	Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	40	40.104003	32976	1244
coq-tactician-stdlib.8.12.dev	Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40	40.212685	82425	5630
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p2	40	40.109222	42074	5018
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	40	40.106635	35289	2787
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40	40.306220	67168	4158
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_carry_reg_l	40	40.126978	14673	5476
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_xO_tail	40	40.030380	9016	1067
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.is_empty_m	40	40.084716	30455	3025
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.max_l	40	2.006353	670	360	0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_pred_double	40	0.144124	5	4	0.1.0.0	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: now jump_simpl).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_add	40	0.171340	6	5	0.0.0.0.1	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	40	40.034692	8764	1344
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40	40.121689	49387	3965
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkZmon_ok	40	40.032753	10262	871
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40	40.625826	302019	2807
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.max_r	40	1.873229	549	320	0.0.0.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	40	40.080351	27235	2451
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	40	40.093696	18326	3611
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Z_modulo_2	40	40.202686	8569	1002
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	40	40.254553	5852	771
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	40	40.086132	24772	4631
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zgt_le_succ	40	40.057552	19068	3017
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_lt_succ	40	0.007561	1	1	0	synth with cache (only 1: apply Z.lt_succ_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zlt_le_succ	40	0.006865	1	1	0	synth with cache (only 1: apply Z.le_succ_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zgt_succ_le	40	0.020373	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zlt_succ_le	40	0.009016	1	1	0	synth with cache (only 1: apply Z.lt_succ_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_succ_gt	40	0.022917	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	40	3.252929	486	169	0.0.0.0.1.4.1	synth with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.MapsTo_m_Proper	40	40.070445	23578	3159
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep_eq_on	40	40.273491	105087	5801
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA19	40	40.057414	18847	1855
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.remove_min_spec2	40	23.969863	9419	1343	4.1.1.2.0.5.14.2	synth with cache (only 1: red; only 1: red; only 1: destruct s as [| c l y r]; only 1: inversion 2; only 1: inversion 1; only 1: intros; only 1: destruct delmin as (x0, s0); only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40	40.126621	39626	5320
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA20	40	0.105486	4	4	0.0.0.0	synth with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRinv_mult_distr	40	40.031394	6980	1974
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	40	40.090490	30552	3472
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40	40.043769	9695	1954
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.ZTautoChecker_sound	40	40.516247	41464	2921
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	40	40.058698	10408	3787
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.lt_plus_trans	40	40.221314	11944	781
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_gt_succ	40	40.095060	31847	3691
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	40	40.111557	36277	5844
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.min_l	40	4.224562	1602	744	0.0.0.0.0.0.0.0.0.0.0.0.0.0.6	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_gives_succ_pred	40	40.272861	75420	5951
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_cardinal	40	40.060662	21119	2529
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.max_l	40	40.150514	47203	9819
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.K_dec_type	40	40.239893	99004	8102
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.asin_sin	40	40.026035	7472	1797
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	0.422405	162	63	1.0.0.0.0.0.0.2.0	synth with cache (only 1: intros A eq_dec x P H p; only 1: elim p using K_dec; only 1: intros; only 1: case (eq_dec x0 y); only 1: left; only 1: assumption; only 1: right; only 1: assumption; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_app	40	40.105418	12989	2901
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.succ_pred	40	40.086311	24661	6262
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.subset_spec	40	40.056923	15526	4445
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_add_nodup	40	40.063998	22459	3450
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40	40.055348	16211	2585
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.remove_sorted	40	40.052759	13571	4593
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.InjectionsTheory.eq_inj	40	40.254935	99873	4884
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	2.283714	495	224	2.0.5.1	synth with cache (only 1: intro Hn; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.lt_inject_Q	40	40.089965	31877	2887
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.inter_spec	40	40.221954	57667	3835
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_is_O	40	3.792964	2197	412	8.2.0.0.0.0.6	synth with cache (only 1: Nat.induct n; only 1: split; only 1: auto; only 1: auto; only 1: intros n IH; only 1: intro H; only 1: inversion H).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.elements_spec1	40	40.067496	18352	4321
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	40	30.952010	17543	2285	0.0.0.8.0.2.0.13.3.0.0	synth with cache (only 1: intro n; only 1: destruct_max n; only 1: rewrite abs_neq; only 1: apply eq_opp_r; only 1: auto with relations; only 1: rewrite opp_nonpos_nonneg; only 1: auto; only 1: rewrite abs_eq; only 1: auto with relations; only 1: rewrite opp_nonneg_nonpos; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.elimT	40	40.326735	53207	1409
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.max_r	40	3.665016	1866	794	0.0.0.0.5.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	40	13.627556	10539	1834	0.7.0.2.3.2.2.1.4	synth with cache (only 1: intros n m; only 1: revert m; only 1: unfold eq; only 1: Bool.destr_bool; only 1: destruct compare; only 1: intuition; only 1: now right; only 1: right; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.remove_min_spec1	40	40.068379	20857	2974
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_assoc	40	40.152603	15332	4640
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.ge_lt_dec	40	40.088948	31737	3463
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.min_r	40	5.282590	2310	918	0.0.0.0.0.0.0.0.0.0.0.0.0.0.7	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_eq	40	0.017915	2	1	1	synth with cache (only 1: now injection 1 || (intros; now f_equal)).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_0	40	0.008422	1	1	0	synth with cache (only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	1.828683	496	169	14.1.0	synth with cache (only 1: rewrite abs_eq; only 1: now nzsimpl; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_1	40	0.009668	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_zero_spec	40	0.555837	1354	52	1.0.48	synth with cache (only 1: intros EQ; only 1: simpl in *; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_end_IfEq	40	14.965913	22089	859	30.14.4.25	synth with cache (only 1: intros a; only 1: destruct a; only 1: now simpl; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_2	40	0.008839	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_3	40	0.007829	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.compare_lt_iff	40	40.075390	19922	6014
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.pow_neg_r	40	0.017468	3	2	1.0	synth with cache (only 1: intro H; only 1: false_hyp H nlt_0_r).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.pow_0_r	40	0.014391	1	1	0	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.min_l	40	2.139715	840	410	0.0.0.0.0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: auto; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.mkZmon_ok	40	12.473884	2582	384	3.3.1.9.2.14	synth with cache (only 1: induction M; only 1: simpl; only 1: now jump_simpl; only 1: simpl; only 1: now jump_simpl; only 1: now jump_simpl).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.pow_succ_r	40	0.184091	22	7	2.2	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.square_spec	40	0.014415	1	1	0	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sub_succ_r	40	40.432613	22740	5469
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_add	40	1.364013	76	24	9	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_opp	40	0.016202	5	1	4	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.nat_compare_ge	40	40.093735	12882	4723
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_sub	40	0.007965	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_mul	40	0.007757	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.mul_succ_l	40	40.191926	24028	5787
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.get_In	40	40.177198	30194	5699
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_max	40	0.006904	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_S_le_reg_l	40	40.110231	31048	5054
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_eqb	40	0.009528	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0.006897	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_ltb	40	0.007557	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40	40.094527	25027	6282
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40	40.077872	22518	4154
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_one_spec	40	2.416557	1656	103	0.0.0.2.42	synth with cache (only 1: intro n; only 1: induction n as [| n IH]; only 1: easy; only 1: red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40	40.084418	8100	3255
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.elimF	40	40.222453	22659	1168
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_le_minus	40	40.047656	3256	741
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_lt_reg_r	40	40.059117	16083	6115
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	40	40.142331	3118	1015
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.elimN	40	40.144497	27259	1164
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40	40.088386	27320	7013
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.min_r	40	2.640131	1008	493	0.0.0.0.2.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.between_not_exists	40	40.125901	48477	4369
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	40	0.795979	149	73	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.uniset_twist2	40	40.063264	15050	5430
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.nat_rect_succ_r	40	0.936713	651	158	2.3.1.0.0.7	synth with cache (only 1: induction n as [| p H]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	40	40.053356	10081	2716
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.NatOrder.leb_total	40	32.100688	17293	2822	0.0.3.1.0.3.0.4.0.0.4.4.7	synth with cache (only 1: intros a n; only 1: revert a; only 1: induction n; only 1: intros H; only 1: right; only 1: auto with arith; only 1: intros m; only 1: destruct m; only 1: simpl; only 1: auto; only 1: elim (IHn m); only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_sub	40	40.132931	28903	4089
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	40	12.915922	2282	619	0.0.0.0.0.0.4.6	synth with cache (only 1: intros n m H; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.nat_rect_plus	40	0.534324	230	76	0.0.1.3.1.0.0	synth with cache (only 1: intros ? ? ? Fl Fr; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite <- ?IHn; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_le_reg_l	40	40.045870	11521	3237
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	40	40.182985	37978	3296
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	40	40.063564	14695	3208
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40	40.092189	18134	2308
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	0.013749	4	3	0.1.0	synth with cache (only 1: intro n; only 1: intro H; only 1: apply divide_mul_l, divide_refl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40	40.078039	17469	5280
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40	40.070855	21103	2801
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40	40.095186	32433	3703
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_remove_1	40	10.571124	7234	1023	0.1.0.1.0.2.1.0.30	synth with cache (only 1: induction l; only 1: simpl; only 1: trivial; only 1: simpl; only 1: elim (Aeq_dec b a0); only 1: auto; only 1: intros H0 [| ]; only 1: tauto; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEadd_ok	40	40.001521	227	51
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add_x	40	40.090755	26324	7001
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.lt_ind_rel	40	40.105867	40239	3016
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	40	0.059001	13	6	0.0.0.2	synth with cache (only 1: intros; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40	40.080729	22842	3210
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	40	40.059713	17138	2797
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_xI_pred_double	40	40.206422	12820	5505
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.peano_rect_base	40	0.008155	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	40	40.430445	191420	4433
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Equivalences.eq_dep_eq_on__UIP_on	40	17.150399	45380	2294	0.4.21.37.1.10	synth with cache (only 1: red; only 1: intros h1 h2; only 1: subst; only 1: apply h1; only 1: destruct h2; only 1: apply eq_dep_intro).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.elements_3w	40	40.095500	30192	5457
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Equivalences.UIP_on__UIP_refl_on	40	0.506347	496	90	11.0.0.0	synth with cache (only 1: intro eq_dep_eq; only 1: red; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	40	40.055546	15468	2628
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l_iff	40	40.049931	12853	4387
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_assoc	40	40.056249	18290	2741
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.radd_term_term'	40	40.206543	20723	3475
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.diff_inf	40	40.057251	9089	1675
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_1_r	40	0.121946	13	11	0.1.0.0.0.0	synth with cache (only 1: intro; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.diff_ok	40	0.121791	3	3	0.0.0	synth with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Streams.eqst_ntheq	40	40.061286	13701	8139
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv	40	40.051123	18448	2033
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_Add	40	40.093898	31130	5140
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_lt	40	40.068545	23506	3309
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative	40	5.662059	2324	742	7.7.1	synth with cache (only 1: intros x y z; only 1: unfold Add; only 1: auto  9 with sets).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.diff_spec_ok	40	40.031771	8313	2035
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_append	40	40.186709	20322	2609
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_comm	40	2.028114	538	137	6.2.0.0.0.0	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: intros; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.eqb_eq	40	40.302458	20796	5692
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40	40.050003	12694	3004
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40	40.052969	7919	2249
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.or_cancel_r	40	40.198736	72543	11432
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.iff_and	40	0.007795	3	2	1.0	synth with cache (only 1: intros; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	40	40.041611	9814	2313
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	40	40.081337	24328	3867
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.iff_to_and	40	0.326722	205	87	1.0.0.0.0.2.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial; only 1: intro H; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.universal_quantification.inst	40	0.024682	26	7	5.2	synth with cache (only 1: intro H1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.universal_quantification.gen	40	0.007064	2	2	0.0	synth with cache (only 1: unfold all; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_min	40	40.194151	15767	2261
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.unorm_del_tail_unorm	40	40.050692	13119	3805
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_c	40	40.042367	10408	4011
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_eq	40	40.170144	29230	5072
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Logic_lemmas.absurd	40	0.457861	485	144	0.7.2.1	synth with cache (only 1: intro A; only 1: intros H ?; only 1: destruct 1; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_sym	40	0.008314	6	2	1.3	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_1_l	40	40.049914	17821	1550
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans	40	0.012696	3	3	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Equivalences.UIP_refl_on__Streicher_K_on	40	4.748384	6184	861	2.8.0.2.6.3	synth with cache (only 1: red; only 1: intro; only 1: intro UIP; only 1: intros; only 1: rewrite H; only 1: apply UIP).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40	40.108757	9245	1482
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_split	40	40.084168	28067	4241
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	40	0.008472	2	2	0.0	synth with cache (only 1: destruct 2; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_swap	40	40.137605	49425	2874
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Logic_lemmas.equality.f_equal	40	0.009259	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.123454	5	5	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_ext	40	40.076812	24264	3145
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	40	0.756750	1562	126	29.1	synth with cache (only 1: destruct 2; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Logic_lemmas.eq_sind_r	40	0.013607	5	3	0.0.2	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Logic_lemmas.eq_ind_r	40	0.010977	3	3	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Equivalences.Streicher_K_on__eq_rect_eq_on	40	1.024811	820	110	2.17.0	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Logic_lemmas.eq_rec_r	40	0.011880	3	3	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Logic_lemmas.eq_rect_r	40	0.012681	3	3	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.even_2n	40	40.189264	63055	4634
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.hprop_hprop	40	40.119473	42858	7514
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.odd_S2n	40	0.022201	11	4	0.0.1	synth with cache (only 1: intros n H; only 1: exists (Nat.div2 n); only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.div2_double	40	0.073980	21	9	1	synth with cache (only 1: apply Nat.div2_double).
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.comparison_eq_stable	40	40.384054	162801	13235
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.CompOpp_involutive	40	0.019564	6	5	0.0.0.0.1	synth with cache (only 1: intro H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_not_eq	40	40.075512	24948	3591
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.div2_double_plus_one	40	0.505625	207	64	0.8.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: rewrite Nat.div2_succ_double; only 1: f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40	40.110276	42213	3562
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	40	40.048140	10663	2275
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40	40.050897	14807	2456
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.nth_order_replace_neq	40	40.044367	11172	3818
coq-tactician-stdlib.8.12.dev	Coq.Sets.Permut.Axiomatisation.twist	40	40.038996	9102	4461
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	40	40.075947	8456	3532
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40	40.036873	9386	3552
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_xO_pred_double	40	40.177447	15971	5046
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40	40.168033	21354	2242
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.nat_compare_eq	40	16.905069	10895	1930	2.0.0.0.0.0.0.6.6.0.11.1	synth with cache (only 1: revert m; only 1: induction n; only 1: simpl; only 1: intros H; only 1: intros; only 1: reflexivity || destruct H; only 1: reflexivity; only 1: easy; only 1: destruct m; only 1: simpl; only 1: easy; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.CompOpp_inj	40	1.980283	2252	577	0.0.1.0.1.0.1.0.0.0.1.0.1.0.1.0.0.0.0	synth with cache (only 1: destruct c, c'; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.singleton_cardinal	40	40.139438	54703	2518
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	40	0.539374	225	70	5.0.2.0	synth with cache (only 1: intros; only 1: apply div_small; only 1: intuition; only 1: order').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	40	11.005992	6987	1251	0.0.5.0.0.1.1.10.4	synth with cache (only 1: cases ltac:(n); only 1: apply le_ngt; only 1: rewrite pred_0; only 1: apply le_ngt; only 1: order; only 1: intro; only 1: nzsimpl; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.equality_dep.f_equal_dep	40	2.528744	9662	278
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_incr_1	40	40.023982	5314	2575
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	40	0.074749	20	15	0.0.0.2.0	synth with cache (only 1: intros; only 1: apply mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	0.010512	2	1	1	synth with cache (only 1: apply Nat.compare_lt_iff).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	40	40.037678	8769	3155
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.equality_dep2.f_equal_dep2	40	0.019293	5	3	0.1.1	synth with cache (only 1: destruct 1; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	0.009280	1	1	0	synth with cache (only 1: apply Nat.compare_gt_iff).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.rew_opp_r	40	0.010743	3	2	1.0	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.rew_opp_l	40	0.015360	3	3	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.elimNf	40	40.256751	39879	1177
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_more_IfEq	40	19.241586	5249	927	3.11.3.0.6	synth with cache (only 1: intuition; only 1: red; only 1: simpl; only 1: rewrite H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_le	40	40.181706	13912	5134
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.f_equal2	40	0.156408	13	7	1.0.1.0.1	synth with cache (only 1: intros A B C Hl Hr; only 1: intros H ?; only 1: destruct 1; only 1: destruct 1; only 1: repeat split).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_IfEq	40	40.060169	18222	2095
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.f_equal3	40	0.020813	5	4	0.0.0.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.f_equal4	40	0.172687	17	11	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	40	40.040002	7159	4588
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.equivP	40	0.381880	225	17	0.20	synth with cache (only 1: intuition; only 1: by case : Pb ; constructor; auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.paradox	40	40.143921	55788	2489
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_error_In	40	40.135152	34135	5051
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.f_equal5	40	0.035511	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40	40.056953	9308	3847
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig.eq_sig_rect	40	40.289398	128847	3359
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.f_equal_compose	40	0.487707	471	87	0.6.4.3	synth with cache (only 1: intros A x P H y H0; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_trans_refl_l	40	0.011370	5	2	0.3	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_trans_refl_r	40	0.011223	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_sym_involutive	40	0.012142	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_st_card_lt	40	40.070494	19999	6254
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_trans_sym_inv_l	40	0.011995	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_trans_sym_inv_r	40	0.012038	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	40	40.149655	53930	2260
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_trans_assoc	40	0.075561	41	14	0.2.3.0	synth with cache (only 1: destruct e; only 1: intros h1 h2; only 1: destruct h2; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.rew_map	40	0.042152	19	7	0.1.5	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARdistr_r	40	40.276999	12748	866
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	40	2.598205	725	244	5.4.0.0.0.0.0	synth with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros n IH; only 1: rewrite pred_succ; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40	40.032040	7749	1795
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_comm	40	40.173501	36943	3427
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n	40	40.211368	69555	8218
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig.eq_sig_uncurried_iff	40	2.179456	899	239	6.4.0.0.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: apply eq_exist_uncurried).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	40	40.036547	7139	1620
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig.rew_sig	40	0.028833	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.Empty_m_Proper	40	40.070636	22018	3611
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.PartialOrder_proper	40	40.027256	2299	632
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.compare_antisym	40	40.204208	26489	6659
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40	40.074547	23181	4147
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.In_nth_error	40	40.178328	47261	5097
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.filter	40	40.234879	57704	3475
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.add_spec	40	40.077426	25346	3634
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	3.797378	528	317	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_error_None	40	40.126841	20203	4624
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nless_def_4	40	40.115996	42633	3331
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_is_Glb	40	40.101587	29262	4667
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40	40.049673	12006	3402
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	40	40.056700	15067	3639
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.or_assoc	40	40.320087	124257	9989
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	40	0.632545	196	67	1.2.1.8	synth with cache (only 1: pose proof (max_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwmul_ok	40	40.034932	9921	1909
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0.020105	1	1	0	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.min_l	40	40.229678	47873	4743
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_rev	40	40.101762	10697	2148
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.map_subst	40	0.011097	2	2	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.map_subst_map	40	0.013857	3	2	0.1	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40	40.102046	6567	914
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.prime_2	40	40.045880	15435	1425
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.rew_swap	40	0.012904	8	3	4.1.0	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.rew_compose	40	0.012180	5	3	2.0.0	synth with cache (only 1: intros; only 1: destruct H2; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	40	40.073232	18977	6377
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_rot	40	13.306552	3045	896	2.8.5.1.0.0.0.1	synth with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: rewrite app_nil_r; only 1: trivial; only 1: rewrite app_assoc; only 1: rewrite app_assoc; only 1: now rewrite <- app_assoc).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40	40.153777	53724	5613
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.proof_irrelevance_cc	40	40.103408	40987	4442
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	40	40.105822	31543	4190
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.mem_m	40	40.065017	18193	2057
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40	40.089993	26963	3483
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_diag	40	40.125640	27496	4805
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	40	40.046626	12110	2348
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.addmuldiv_spec	40	40.068265	4245	1024
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	40	0.033694	8	4	0.1.3.0	synth with cache (only 1: intro H; only 1: intro EQ; only 1: contradict ltac:(H); only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	40	0.023410	1	1	0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_error_app2	40	8.083273	2134	793	0.0.0.1.0.3.1.1.0.0.4.0	synth with cache (only 1: revert l; only 1: revert n; only 1: induction n; only 1: intros [| a l] H; only 1: auto; only 1: simpl; only 1: now auto with arith; only 1: intros [| a l] H; only 1: auto; only 1: simpl in *; only 1: apply IHn; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	40	0.020234	1	1	0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	40	0.110819	2	1	1	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	0.012080	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	40	0.011355	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0.011672	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	40	0.025226	4	2	2.0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	0.026956	4	2	2.0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp_r	40	40.072024	25709	2590
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0.011535	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	40	0.010890	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	40	0.011852	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.zmon_pred_ok	40	40.027328	7820	1103
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	0.009930	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	40	0.015392	2	2	0.0	synth with cache (only 1: intro H; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	0.007837	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	40	0.008212	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	40	14.480389	4695	1464	0.0.0.7.0.0.0.8.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40	40.254111	112355	1947
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	40	0.008396	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	40	0.009431	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	40	40.063982	18637	3435
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40	0.466872	484	51	2.14.0.0	synth with cache (only 1: apply forall_eq_rect with (H := H); only 1: clear H g; only 1: rewrite functional_extensionality_dep_good_refl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	0.009220	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.eta_expansion	40	0.005289	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zsplit2	40	40.215538	16049	446
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	40	40.127861	46307	2522
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_ex	40	0.062703	8	4	2.1.0.1	synth with cache (only 1: intros; only 1: exists (Z.div2 n); only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	40	40.069089	12212	2849
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_ex	40	0.148614	25	15	0.0.0.0.1	synth with cache (only 1: boolify_even_odd; only 1: intros Hn; only 1: exists (Z.div2 n); only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now rewrite Hn).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	40	9.902409	4568	1081	3.0.0.0.0.3.1.1.0.0.0.6	synth with cache (only 1: cases ltac:(n); only 1: intros; only 1: rewrite pred_0; only 1: assumption; only 1: intro p; only 1: intros; only 1: elim H using le_ind; only 1: solve_proper; only 1: rewrite pred_succ; only 1: now apply le_le_succ_r; only 1: intros k H1 H2; only 1: now apply le_le_succ_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_succ_le	40	40.088598	32386	3317
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zlt_succ_pred	40	0.007815	1	1	0	synth with cache (only 1: apply Z.lt_succ_lt_pred).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	40	40.037740	7641	3017
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40	8.570778	4359	999	0.0.6.4.4.3.0.0.0.3.0.15	synth with cache (only 1: split; only 1: intro n; only 1: intro H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: false_hyp H lt_irrefl; only 1: intro n; only 1: intro m; only 1: intro p; only 1: intros LT EQ; only 1: generalize (lt_trans n m p); only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.is_empty_m_Proper	40	40.068306	17318	1420
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	40	6.720250	2912	634	0.0.2.0.9.8	synth with cache (only 1: destruct (lt_total n m); only 1: solve_max; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: intuition; only 1: now apply max_l; only 1: now apply max_l).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	40	0.053643	10	3	1	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.remove_min_ok	40	40.100767	33922	2412
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.intro_Z	40	40.059097	14719	2183
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	40	40.070344	15900	4844
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_error_Some	40	40.099961	14261	5535
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	40	40.050743	11824	4291
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	40	40.070868	18311	3472
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	40	40.090400	28937	5120
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRinv_morph	40	40.624158	17309	2127
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zgt_succ_pred	40	40.098894	36644	2962
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_eq	40	0.058875	3	3	0.0.0	synth with cache (only 1: intros l x y H H'; only 1: rewrite <- H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal	40	40.071182	22701	2492
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	0.079766	14	4	0.3	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_pred_injective	40	40.126126	27510	4761
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_neg_pos	40	0.029608	4	2	0.2	synth with cache (only 1: intros a b; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zgt_pos_0	40	0.022679	2	2	0.0	synth with cache (only 1: intro n; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_0_pos	40	0.023791	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zlt_neg_0	40	0.021288	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.cos_asin	40	40.029472	8682	1755
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40	8.149320	1339	397	1.0.1.0.1.1.0.0.3	synth with cache (only 1: unfold eqb; only 1: intros x x' Hxx' y y' Hyy'; only 1: destruct eq_dec; only 1: destruct eq_dec; only 1: auto; only 1: order; only 1: destruct eq_dec; only 1: order; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.elimTn	40	40.180745	39231	1802
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	40	40.226208	83609	7466
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRlt_minus	40	1.605813	348	51	1.11.0.0	synth with cache (only 1: intros; only 1: rewrite <- (CRplus_opp_r x); only 1: apply CRplus_lt_compat_r; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.equal_spec	40	40.049958	12956	3996
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_split	40	40.114916	21280	3930
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.ltb_lt	40	40.118547	30395	5223
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_error_nth	40	12.446191	6195	1532	5.1.0.6.0.0.0.0.0.0.4	synth with cache (only 1: induction l; only 1: destruct n; only 1: simpl; only 1: firstorder  discriminate; only 1: simpl; only 1: firstorder  discriminate; only 1: intros [| n]; only 1: injection 1; only 1: auto; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.fold_1	40	40.093280	32787	3908
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.last_last	40	8.130493	7492	999	0.1.0.0.21.0.0.0.7	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: destruct l; only 1: simpl in *; only 1: intros; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.InjectionsTheory.eq_can	40	40.274958	103361	3914
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.compare_lt_iff	40	0.051013	9	7	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_singleton	40	0.356421	112	26	1.1.0.6.0	synth with cache (only 1: constructor; only 1: rewrite InA_altdef, Exists_exists; only 1: intros (y, (H4, H5)); only 1: intuition; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	40	40.100346	14203	3318
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	40	40.111669	10010	3076
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.compare_le_iff	40	0.172696	33	19	3.0	synth with cache (only 1: revert m; only 1: now split).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.le_inject_Q	40	40.064174	20423	2452
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.diff_spec	40	40.127216	45477	3882
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_is_one	40	40.132546	43357	3212
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.elements_spec2'	40	40.083920	26348	3666
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	40	8.284921	2630	864	2.2.0.1.0.1.0.1.0.4.3	synth with cache (only 1: split; only 1: intro EQ; only 1: intuition; only 1: contradict ltac:(H); only 1: order; only 1: contradict ltac:(H); only 1: order; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: auto; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.compare_antisym	40	4.186728	2345	630	0.3.2.0.0.0.0.0.0.3.0.0.2.0.2.0.0.0.1.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos.compare_antisym; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite CompOpp_involutive; only 1: rewrite ?CompOpp_iff, ?Pos.compare_eq_iff; only 1: apply Pos.compare_antisym).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.elimFn	40	40.282303	49974	1424
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	40	40.128907	46469	5349
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_error_nth'	40	14.148866	5529	1847	0.0.0.0.1.0.4.0.0.1.7.0.0.0.0	synth with cache (only 1: induction l; only 1: destruct n; only 1: simpl; only 1: intros; only 1: solve [ inversion H ]; only 1: simpl; only 1: intros; only 1: now auto with arith; only 1: intros [| n]; only 1: simpl; only 1: now auto with arith; only 1: simpl; only 1: intros; only 1: apply IHl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	40	40.097114	30478	3821
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.peano_rect_succ	40	40.292021	57062	3149
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_1_l	40	0.011737	2	1	1	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.removelast_last	40	0.636046	255	77	0.0.0.1.0.0.0.1.3	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: intros; only 1: simpl; only 1: rewrite IHl; only 1: destruct l; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_1_r	40	0.494350	180	71	0.0.0.2.0.1.0.5	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.find_m_Proper	40	8.241929	3589	603	5.3.0.0.0.3.7.4	synth with cache (only 1: intros s; only 1: intros x y z; only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- 2!find_mapsto_iff; only 1: rewrite <- H0; only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.zmon_pred_ok	40	40.029891	8974	1028
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	40	40.210439	69143	3486
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	40	40.151246	51956	3740
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40	8.036780	2173	764	0.0.0.6.1.0.0.0.4.1.0	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: right; only 1: order; only 1: order; only 1: order; only 1: intuition; only 1: left; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.leb_le	40	40.189034	19168	4487
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	40	0.778786	878	129	0.0.0.27	synth with cache (only 1: intros ([| ], H); only 1: discriminate; only 1: simpl in H; only 1: now rewrite <- plus_n_Sm in H).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.odd_even_lem	40	40.162867	39181	2206
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	40	40.077232	20308	6842
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	40	0.519513	75	45	0.0.0.0.0.0.0.1.0	synth with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.compare_eq_iff	40	40.073409	19569	5629
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Map.Tget_Tmap	40	40.296782	72110	3810
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_cont_spec	40	40.114515	43074	2084
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	40	0.044986	8	5	0.1.0.1.1	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.introP	40	40.137138	25575	982
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_minus	40	40.026974	4825	1342
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	40	40.149633	7778	3251
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	40	0.021761	1	1	0	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	40	40.118071	12935	3919
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	40	0.047705	8	5	0.1.0.1.1	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order)).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_le_reg_r	40	40.055589	14299	4811
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	40	0.104539	12	7	0.4.0	synth with cache (only 1: split; only 1: solve_max; only 1: solve_max).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_minus	40	0.036544	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_In	40	8.793816	4349	1033	2.2.0.6.0.0.2.0.0.0	synth with cache (only 1: simple induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: subst; only 1: destruct (eq_dec x x); only 1: auto; only 1: constructor; only 1: auto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	40	0.022849	1	1	0	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.iffP	40	40.207129	51591	1708
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_lt	40	6.160926	4342	826	4.0.0.0.4.0.12	synth with cache (only 1: induction l; only 1: constructor; only 1: intro y; only 1: intros; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	40	0.175431	18	11	2	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.Lemma1	40	40.066876	18012	7723
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.decP	40	0.218770	143	11	17	synth with cache (only 1: by case : Pb ; constructor; auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.rwP	40	0.149088	77	7	13	synth with cache (only 1: by case : Pb ; constructor; auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.nth_le	40	40.105029	36680	4385
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40	40.208329	4379	1248
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.treesort_twist1	40	40.055946	12820	5050
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40	40.096414	14492	3293
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_min	40	40.145935	33805	3406
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	40	0.012460	2	2	0.0	synth with cache (only 1: intros; only 1: apply testbit_even_succ, le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	40	40.050640	13422	1898
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_minus	40	40.061667	16589	4758
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_nz_opp_r	40	40.086634	29057	4038
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.for_all	40	40.130001	11087	2700
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	40	40.061478	15878	4653
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40	40.073172	21218	4267
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40	40.043190	11705	2212
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.max_r	40	3.622627	1000	394	0.0.3.2.2.0	synth with cache (only 1: unfold le, max; only 1: rewrite N.compare_antisym; only 1: case N.compare_spec; only 1: now destruct compare; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.min_r	40	0.271029	28	12	0.0.0.1.1.0	synth with cache (only 1: unfold le, min; only 1: rewrite (compare_antisym n m); only 1: case compare_spec; only 1: trivial; only 1: now destruct 2; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40	40.058489	15452	3724
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	40	40.066537	15621	4559
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_remove_2	40	40.116566	19803	3926
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.xfilter_spec	40	40.069832	22290	2707
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40	40.064584	13579	3675
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40	40.062024	18142	2721
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.peano_case	40	40.278565	43844	5479
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.eq_dep_eq_positive	40	40.193252	51236	4845
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEsub_ok	40	40.001303	103	39
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.equal_1	40	40.060912	12806	2066
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_minus	40	4.982392	1071	360	0.1.6.4.0	synth with cache (only 1: intros a b; only 1: unfold Rle; only 1: intros [?| ?]; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40	40.047871	9233	2972
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l_iff	40	40.047298	12912	3256
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.xror_clause_clause	40	40.167476	66639	3093
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.diff_spec	40	40.040777	7332	1956
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Streams.ntheq_eqst	40	40.148303	48382	9409
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_max	40	40.072074	25428	2628
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_is_Add	40	40.063570	19009	4911
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative'	40	40.054623	13793	4555
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ_c	40	40.030984	5970	1775
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_error_app1	40	37.341618	13909	3297	1.2.0.0.2.0.1.1.3.9.1	synth with cache (only 1: revert l; only 1: induction n; only 1: induction l; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: eauto; only 1: intros [| a l] H; only 1: now f_equal; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_plus_distr_r	40	40.058451	12163	1748
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40	40.064625	14359	3208
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.diff_spec	40	40.056445	16805	2757
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.CompOpp_iff	40	34.998708	34657	10134	0.0.0.0.0.0.0.0.0.8.0.0.0.2.0.0.0.2.0.0.0.2.2.5.5	synth with cache (only 1: intros; only 1: split; only 1: destruct c; only 1: destruct c'; only 1: auto; only 1: discriminate; only 1: discriminate; only 1: destruct c'; only 1: discriminate; only 1: auto; only 1: auto; only 1: destruct c'; only 1: discriminate; only 1: auto; only 1: auto; only 1: destruct c, c'; only 1: auto; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: auto; only 1: auto; only 1: discriminate; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.StrictOrder_PreOrder	40	40.097012	21553	1949
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	40	40.073886	19526	3915
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.PairInduction.pair_induction	40	40.066221	19089	4589
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.compare_sub	40	40.264789	26862	6835
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.norm_del_tail_int_norm	40	40.045241	12645	2830
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.event_O	40	10.484929	28228	842	1.12.34.16.17	synth with cache (only 1: intros * []; only 1: PeanoNat.Nat.le_elim H; only 1: now PeanoNat.Nat.nzsimpl; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_iter	40	40.268963	45818	2718
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_1	40	40.157635	19743	4752
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.id	40	0.273521	152	35	0.4.0.2.5	synth with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_integral	40	40.064285	23416	2080
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_length_2	40	40.163511	21570	4742
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_error_split	40	40.114185	18990	4254
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry_c	40	40.835059	6354	942
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.UIP_shift_on	40	40.165227	65162	7401
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.hprop_hset	40	40.172977	67980	8209
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Corollaries.eq_dep_eq_on__inj_pair2_on	40	0.041596	16	7	3.0.0	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.f_eq_dep	40	0.031465	12	4	1.2	synth with cache (only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.085405	28	13	0.1	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.010413	2	2	0.0	synth with cache (only 1: intros * []; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	40	40.045559	10676	2449
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_2	40	40.175603	10533	3906
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	40	40.141820	57588	5269
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	40	40.069421	19931	4583
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_3'	40	0.165932	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: functional induction remove x m; only 1: auto; only 1: auto; only 1: do 2 inversion_clear 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.replace_id	40	40.110294	12222	4247
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_0_nat	40	23.456780	23604	2046	30.0.0.34	synth with cache (only 1: intros n H; only 1: simpl in *; only 1: apply (Nat.lt_irrefl (S n)); only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_pow	40	40.071449	21867	4058
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.PeanoViewUnique	40	40.219528	53488	5295
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	40	40.058536	14037	2955
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.diff_inter_cardinal	40	40.057505	19193	2334
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40	40.173350	29011	3595
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_decr_0	40	40.019304	3618	2017
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.nat_compare_equiv	40	40.140610	21101	4764
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_cont_IfEq	40	40.068704	17571	1551
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_gt	40	40.194919	16770	4482
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	40	40.075912	14624	3198
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_IfEq	40	40.122683	44307	2642
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	40	40.102576	17045	3528
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.sumboolP	40	40.226429	40580	1083
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pow	40	1.314843	655	99	0.0.0.0.12.6	synth with cache (only 1: intros; only 1: red; only 1: intros; only 1: unfold derivable_pt; only 1: exists (INR n * x ^ Init.Nat.pred n); only 1: apply derivable_pt_lim_pow).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	40	0.299869	66	22	0.0.5.0	synth with cache (only 1: intros; only 1: apply mul_div_le; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractToNegativeProp.Paradox.paradox	40	40.268568	112968	4709
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	40	40.057366	13237	3552
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	0.083396	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	40	0.302947	32	13	0.0.0.2	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	40	40.087673	26902	5866
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_trans_map	40	40.165151	80641	6343	3.28.4.11.8	synth with cache (only 1: intros A x P H y H0; only 1: intros ? ? ? Fl Fr; only 1: destruct 1; only 1: destruct Fl; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_card_le	40	40.192844	19896	5666
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc1	40	40.080567	23771	1301
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_eq	40	18.433946	14000	2385	0.16.0.10.6	synth with cache (only 1: intros n m p; only 1: intro H; only 1: intros LT; only 1: rewrite H; only 1: auto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	40	40.033951	7667	2246
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_swap_app	40	40.129351	12915	2619
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_Inf	40	0.402574	171	45	0.1.0.2.0.4	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: constructor; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n_iff	40	40.123375	40477	8371
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.max_r	40	0.053957	7	6	1.0.0.0.0.0	synth with cache (only 1: unfold max, le; only 1: rewrite compare_antisym; only 1: case compare_spec; only 1: trivial; only 1: now destruct 2; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40	40.062486	15157	4523
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_tn1_trans	40	0.477909	194	97	0.2.2.0.0.0.0	synth with cache (only 1: induction 1; only 1: left; only 1: auto; only 1: right with y; only 1: auto; only 1: left; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_Inf	40	0.547715	198	63	5.0.0.1.2	synth with cache (only 1: destruct l; only 1: intros; only 1: constructor; only 1: intros; only 1: auto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT2.eq_existT2_uncurried	40	40.534026	252401	2563
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.mem_m_Proper	40	40.055049	13491	2254
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.PartialOrder_StrictOrder	40	40.062535	4271	485
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_div	40	40.070933	21448	4255
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.min_r	40	40.099769	27621	5781
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.exists_	40	40.113729	10628	3112
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT2.eq_sigT2_uncurried	40	1.181964	434	89	0.0.0.3.2.0.2	synth with cache (only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.remove_spec	40	40.073749	24316	4177
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	40	40.198244	79309	1290
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nless_z	40	40.086845	32522	2457
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	40	17.098271	8411	637	1.2.2.5.7.5.29.5	synth with cache (only 1: rewrite one_succ; only 1: rewrite <- (add_0_l 0); only 1: rewrite <- (add_0_l 0); only 1: rewrite <- (add_0_l 0); only 1: rewrite opp_succ; only 1: apply lt_pred_le; only 1: rewrite <- (add_0_l 0); only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	40	40.062319	15522	3020
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.max_l	40	40.165126	22667	4990
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_morph	40	40.051448	18067	751
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.prime_3	40	40.038696	11245	1585
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40	40.134638	9981	2419
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_swap	40	40.103538	10358	2853
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_id_comm_l	40	40.524439	226168	6048
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_refl_map_distr	40	0.007621	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_middle	40	40.054886	14416	3104
coq-tactician-stdlib.8.12.dev	Coq.Structures.Orders.TTLB_to_OTF.lt_compat	40	40.070502	16425	6083
coq-tactician-stdlib.8.12.dev	Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40	40.110214	30777	7064
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p1	40	40.071732	24227	4219
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.singleton_m	40	40.059299	19279	2984
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.peano_equiv	40	40.100914	30879	6205
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	40	40.039009	4250	1755
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_trans_map_distr	40	2.051234	3379	386	1.1.1.3.20.0	synth with cache (only 1: destruct e; only 1: intros; only 1: rewrite eq_trans_refl_l; only 1: simpl; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_bit	40	40.046856	12123	3428
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_sym_map_distr	40	0.010551	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_trans_sym_distr	40	0.027660	18	6	0.4.1	synth with cache (only 1: destruct e'; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_trans_rew_distr	40	0.016340	12	3	0.4	synth with cache (only 1: destruct e'; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.rew_const	40	0.013294	13	3	1.3	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_zero_opp_full	40	40.063883	22200	3602
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r_iff	40	18.342330	4349	1865	0.0.1.0.0.0.0.0.7	synth with cache (only 1: intros; only 1: split; only 1: intro LT; only 1: now apply Private_NZPow.pow_lt_mono_r; only 1: intro LT; only 1: destruct (le_gt_cases c b) as [LE| GT]; only 1: assert (a ^ c <= a ^ b) by (apply Private_NZPow.pow_le_mono_r; order'); only 1: order; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.double_spec	40	4.219379	430	83	5.1.13	synth with cache (only 1: nzinduct n; only 1: reflexivity; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkVmon_ok	40	40.025484	7332	803
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	40	40.080117	10257	2885
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	40	40.074253	20671	3949
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	40	39.071276	13992	3218	0.0.3.1.2.3.6.1.0.2	synth with cache (only 1: intros n m; only 1: induct n; only 1: intro H; only 1: rewrite pred_0; only 1: order; only 1: intro n; only 1: intros _ H; only 1: rewrite pred_succ; only 1: apply le_succ_l; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	40	40.207802	37423	1709
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_2p	40	40.042176	14075	1896
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40	40.097482	18723	3630
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zlt_0_le_0_pred	40	40.096311	41162	1722
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	40	40.053840	12015	4097
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.double_add	40	2.680486	297	137	0.0.0.3.0.0.2.0.0.0	synth with cache (only 1: destruct n, m; only 1: now nzsimpl; only 1: unfold succ, add; only 1: simpl; only 1: trivial; only 1: unfold succ, add; only 1: auto; only 1: unfold succ, add; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	40	40.092652	28194	4313
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	40	0.021119	4	4	0.0.0.0	synth with cache (only 1: intros n m; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	40	40.058758	14033	3737
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	40	8.741673	4385	840	2.2.2.6.0.0.3.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: simpl in *; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl; only 1: apply eq_existT2_uncurried).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_aux_spec	40	40.109372	42072	2283
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	40	40.073444	16463	3709
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	40	0.076092	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	40	0.076538	4	3	0.0.1	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.app_removelast_last	40	40.103398	22718	3784
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40	40.072519	20726	4629
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal	40	40.057983	13813	5684
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	40	0.026060	8	3	5.0.0	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	40	0.026730	3	2	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	40	40.086865	15264	3387
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	0.024586	3	2	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	0.023801	3	2	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	0.025842	3	2	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	40	0.033674	14	3	1	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	0.031858	14	3	1	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_pow	40	14.853639	4045	1266	0.0.13.0.0.0.0.0.1.1.0	synth with cache (only 1: intros; only 1: induction n as [| n Hrecn]; only 1: simpl; only 1: apply derive_pt_eq_0; only 1: rewrite Rmult_0_l; only 1: replace (fun _ : R => 1) with (fct_cte 1); only 1: apply derivable_pt_lim_const; only 1: reflexivity; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_pow_pos; only 1: apply Nat.lt_0_succ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	40	0.116586	21	13	1.0.0.2.0	synth with cache (only 1: intros x y; only 1: rewrite 2!lt_eq_cases; only 1: intuition; only 1: elim (StrictOrder_Irreflexive x); only 1: now transitivity y).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.tan_asin	40	40.019450	4950	1621
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	40	40.063963	17096	3813
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40	40.191942	74512	6612
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.appP	40	40.284587	108063	3586
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_double_add	40	3.789214	249	85	8.0.0.0	synth with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: now destruct n, m).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec1	40	40.055643	15308	3047
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	40	40.327414	140623	7536
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_le	40	40.066240	22479	2107
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.double_mul	40	0.163386	9	8	1	synth with cache (only 1: now destruct n, m).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEopp_ok	40	40.001267	156	27
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.exists_last	40	40.137792	47596	5451
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.removelast_app	40	40.079003	23977	4516
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_can_eq	40	40.246715	95511	3469
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_proper	40	40.157841	7146	1688
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40	40.091662	10696	2937
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.impliesP	40	1.236598	2552	149	5.45	synth with cache (only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	1.548169	264	49	0.0.3.7.2	synth with cache (only 1: apply sqrt_unique; only 1: nzsimpl; only 1: split; only 1: order; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.lt_succ_r	40	40.309322	21359	4403
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_le	40	40.063206	19237	3338
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	40	40.058696	14991	3923
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.equal_2	40	40.051707	14722	3611
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.fold_spec	40	40.132938	47624	3637
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_tail_plus	40	40.084878	10908	3324
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.treesort_twist2	40	33.384907	11675	4302	2.1.1.1.4.0.0.0.0.0.1	synth with cache (only 1: unfold seq; only 1: intros; only 1: apply seq_trans with (union x (union (union y z) t)); only 1: apply seq_right; only 1: apply seq_left; only 1: trivial; only 1: apply seq_sym; only 1: apply seq_trans with (union (union x (union y z)) t); only 1: apply seq_left; only 1: apply union_perm_left; only 1: apply union_ass).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.elements_spec2	40	40.154321	55738	4084
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40	40.072744	15300	7845
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_double_mul	40	2.008385	158	86	2.7	synth with cache (only 1: rewrite add_comm; only 1: now destruct n, m).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.max_l	40	40.218426	30182	4913
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.div2_double	40	0.021628	4	3	1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.div2_succ_double	40	0.008430	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.abs_eq	40	0.154394	34	10	2.1	synth with cache (only 1: intro H; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.sameP	40	40.213570	22300	826
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.abs_neq	40	0.093839	17	12	0.0.0.0.1	synth with cache (only 1: unfold le, min; only 1: destruct n; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sgn_null	40	0.152866	52	20	0.0.0.0.0.0.2	synth with cache (only 1: destruct n; only 1: intros H; only 1: now f_equal; only 1: intros H; only 1: destr_eq H; only 1: intros H; only 1: destr_eq H).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	40	40.109391	35361	7575
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sgn_neg	40	0.013985	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pow_0_r	40	0.008162	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_xO_r	40	39.060717	13367	4410	0.0.0.1.1.2.0.0.9.2.5	synth with cache (only 1: revert q; only 1: intros H; only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: f_equal; only 1: now f_equal; only 1: simpl; only 1: f_equal; only 1: now f_equal; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40	40.165308	16177	3111
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.unlessL	40	1.128507	2982	200	9.3.26.3	synth with cache (only 1: split; only 1: red; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40	26.706077	9494	2328	1.7.2.7.1	synth with cache (only 1: intros n m p H; only 1: rewrite add_comm; only 1: symmetry; only 1: rewrite add_comm; only 1: now apply add_sub_assoc).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.remove_cons	40	40.168292	66507	4629
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40	5.700092	1025	373	2.3.2.2	synth with cache (only 1: Bool.destr_bool; only 1: rewrite lt_eq_cases; only 1: rewrite lt_succ_r; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	40	0.019695	6	3	0.3.0	synth with cache (only 1: intros x y H; only 1: apply le_succ_l; only 1: now apply lt_le_incl).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.add_m_Proper	40	40.060373	19045	2914
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.unlessR	40	0.846132	2387	173	13.3.18.3	synth with cache (only 1: repeat split; only 1: red; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.mkVmon_ok	40	40.025491	7310	940
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.impliesPn	40	4.229512	6324	472	0.8.45	synth with cache (only 1: destruct 1; only 1: intro p; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40	40.063531	13739	3832
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.even_spec	40	40.106289	24084	5939
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_acc_aux	40	40.100527	12088	3727
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	40	40.121386	36305	5197
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Map.Tmap_Tadd	40	40.210791	37608	4596
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_lt_mono	40	40.041683	11153	2654
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40	5.312408	822	330	8.0.0.0.0.0.5	synth with cache (only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: apply mul_nonneg_nonneg; only 1: apply lt_le_incl, lt_0_2; only 1: apply lt_le_incl, lt_0_1; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	40	40.124680	11162	3967
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40	40.069082	19280	3379
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.decPcases	40	40.361750	37295	621
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	40	13.238125	3009	1247	1.2.0.0.0.1.2.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!max_l; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_Rminus	40	40.048159	11818	3728
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.min_l	40	40.269167	31574	4991
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	3.152292	1234	204	9.8.0.0	synth with cache (only 1: intro n; only 1: destruct_max n; only 1: now left; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	40	40.043385	10996	2878
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	40	40.056688	14673	2673
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_Inf_In	40	40.143619	22332	5824
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.rwP2	40	40.159741	52138	2495
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.pr_nu	40	9.104002	4159	784	0.4.3.2.2.7	synth with cache (only 1: intros a n m H; only 1: elim H; only 1: intros H1 H2; only 1: simpl; only 1: apply derive_pt_eq_0; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40	40.057563	16434	2650
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40	40.033936	8093	2227
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	40	40.072488	7303	1461
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	40	40.033629	7731	1505
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_mod	40	40.060119	17419	3387
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_nz_opp_full	40	40.031505	9681	1860
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	0.050795	92	8	14	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pow_neg_r	40	1.438153	401	111	0.0.1.1.2.1.5	synth with cache (only 1: revert m; only 1: destruct m; only 1: now destruct n; only 1: intros H; only 1: destr_eq H; only 1: intros H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	40	40.076590	12266	2616
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pow_pos_fold	40	0.036543	1	1	0	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_double_spec	40	18.613267	5089	1552	0.0.0.2.8.2	synth with cache (only 1: simpl; only 1: unfold succ, add; only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_l	40	40.055947	12454	5290
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	2.426365	802	348	0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply min_l; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply min_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	40	0.067684	10	9	1.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.partition	40	40.058688	16408	3573
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	40	40.087784	14620	3010
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.peano_ind	40	40.238838	87353	5180
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec2	40	10.830210	3544	1299	1.0.0.0.9.0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: induction s; only 1: unfold Empty, empty; only 1: red; only 1: intros; only 1: inv; only 1: inversion H).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.cardinal_spec	40	0.022529	3	2	1.0	synth with cache (only 1: unfold elements; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_remove_3	40	40.097145	12069	3835
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.filter_1	40	40.108928	38581	3711
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	40	40.055061	10292	4266
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	40	16.641510	8955	2173	1.1.9.10	synth with cache (only 1: intros n1 m1 H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_div2	40	1.918292	1091	184	0.0.1.1.1.1.11.1.0.1.2	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: induction p; only 1: simpl; only 1: trivial; only 1: simpl Z.to_N; only 1: trivial; only 1: reflexivity; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_comm	40	40.054274	14549	4068
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_quot2	40	0.682023	382	60	13.1.0.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.unless_sym	40	7.453539	26432	918	2.1.9.22.22.50.4	synth with cache (only 1: split; only 1: intro H; only 1: red; only 1: intros; only 1: apply H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_xI_r	40	40.089908	14857	5403
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.classicW	40	0.813723	1640	87	0.44	synth with cache (only 1: red; only 1: by move  =>b b' ->).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_comm	40	40.173243	16610	5399
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_minus	40	40.041984	10972	2607
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_simpl_nonpos	40	40.066210	16684	4573
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	40	10.332496	4254	1192	1.2.4.9	synth with cache (only 1: intros z Base Step; only 1: apply lt_le_incl; only 1: rewrite lt_succ_r; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	40	0.063498	18	8	0.0.4.0	synth with cache (only 1: intros n m H; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now left).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.equal_cons	40	40.061981	7657	1644
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.ror_clause_clause	40	40.038881	9324	4005
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Streams.Stream_Properties.ForAll_Str_nth_tl	40	40.096687	29803	7652
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Streams.Stream_Properties.Co_Induction_ForAll.ForAll_coind	40	0.233519	190	30	5.5.2	synth with cache (only 1: coinduction ltac:(EqSt_reflex); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Map.Str_nth_tl_map	40	0.040404	5	5	0.0.0.0.0	synth with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Map.Str_nth_map	40	0.025018	5	4	0.1.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros s; only 1: apply IHn).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.equal_spec	40	40.047981	12854	3277
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Singleton_atomic	40	40.091667	28550	5780
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app	40	30.798135	13966	2696	0.1.13.0.0.12	synth with cache (only 1: intro y; only 1: intros l m a; only 1: intros; only 1: rewrite H; only 1: rewrite app_comm_cons, Permutation_cons_append; only 1: now rewrite <- app_assoc).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_quot	40	40.067816	19347	4237
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_distributes	40	40.068391	19384	5128
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_middle	40	0.008530	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.setcover_intro	40	0.036574	10	4	0.1.1	synth with cache (only 1: intro; only 1: intros x y z H' H'0; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add	40	40.016047	3567	1432
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ	40	0.019663	2	2	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEpow_ok	40	40.001141	93	28
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.remove_app	40	40.065799	18803	4100
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_integral_l	40	40.040873	12607	1436
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.diff_ok	40	40.195909	10998	1731
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	40	40.057742	11619	5458
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.inject_Z_mult	40	0.015710	4	2	2.0	synth with cache (only 1: unfold Qplus, inject_Z; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40	40.081162	16221	3535
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.inject_Z_opp	40	0.009140	1	1	0	synth with cache (only 1: now destruct x).
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.CompareSpec2Type	40	40.527457	242196	8548
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nzhead_app_nzhead	40	40.053636	15603	2814
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.TwoDimensionalInduction.two_dim_induction	40
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.bi_induction	40	40.191461	42720	5220
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.inject_Z_plus	40	40.049952	16558	2069
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_length_2_inv	40	40.059072	16941	4190
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj	40	40.332613	77615	4162
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_3	40	40.160418	9629	4383
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_iff	40	0.185201	49	23	3.0.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.elements_1	40	0.007735	4	1	3	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.elements_2	40	0.241314	6	2	4.0	synth with cache (only 1: intros m x; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.remove_In	40	40.088857	27728	4976
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40	4.845635	1304	660	1.4.5.0	synth with cache (only 1: intros; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.succ_plus_discr	40	18.680332	11109	1672	4.10.2.13.5.8	synth with cache (only 1: Nat.induct n; only 1: auto; only 1: red; only 1: intros a Ha; only 1: Nat.nzsimpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.elements_3w	40	0.261342	11	4	3	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry	40	40.046176	13391	1956
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.DoubleInduction.double_induction	40	2.476652	1338	273	7.0.0.0.5.0.0	synth with cache (only 1: intros H1 H2 H3; only 1: induct ltac:(n); only 1: exact H1; only 1: intros n IH; only 1: induct ltac:(m); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sqrt_neg	40	0.067735	24	8	4	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40	40.049289	12599	2732
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40	40.094622	35481	4002
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40	40.047408	11489	3487
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.fold_1	40	1.120977	629	114	4.0.1.0.3.7	synth with cache (only 1: induction m; only 1: simpl; only 1: intros p l inlist; only 1: auto; only 1: simpl in *; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.replace_replace_eq	40	40.087063	21867	4503
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_NoDup	40	40.208182	16080	4300
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	40	1.508147	444	143	0.1.0.0.0.0.4.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: rewrite abs_eq; only 1: auto with relations; only 1: auto; only 1: rewrite (abs_eq (- n)); only 1: auto with relations; only 1: rewrite opp_nonneg_nonpos; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40	40.073000	25283	2515
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_gt	40	11.644774	3865	1459	0.0.0.4.2.4.0	synth with cache (only 1: intros; only 1: red; only 1: replace r2 with (0 + r2); only 1: replace r1 with (r1 - r2 + r2); only 1: auto with real; only 1: ring; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_le	40	0.118702	15	14	0.0.0.0.0.0.1	synth with cache (only 1: intros; only 1: replace r1 with (r1 - r2 + r2); only 1: pattern r2 at 3; only 1: replace r2 with (0 + r2); only 1: auto with real; only 1: auto with real; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.empty_ok	40	0.019838	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	40	40.047100	9689	3330
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_add_distr_l	40	40.127486	13936	3793
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.empty_spec	40	0.177888	143	11	17	synth with cache (only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40	40.063426	21682	2092
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40	40.096187	37154	3054
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	40	4.244488	1498	331	0.0.15.0	synth with cache (only 1: intros n m p (q, Hq); only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: exists q; only 1: now rewrite mul_shuffle3, Hq).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_decr_1	40	40.018035	3379	2191
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.leb_iff_conv	40	40.112015	16729	4763
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.Equivb_elements	40	40.065142	18430	2227
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.count_occ_nil	40	0.020468	4	2	2.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_ge	40	40.127327	16481	3771
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40	40.092933	30450	3708
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	40	0.563999	167	57	0.0.0.0.3.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_Equivb	40	40.032101	8104	1989
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.altP	40	40.207885	58574	639
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.MParadox.mparadox	40	40.149909	55107	7003
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.481321	142	76	0.2.3.0	synth with cache (only 1: intros; only 1: intuition; only 1: apply div_small; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	40	40.044679	5622	3273
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	0.142537	32	21	0.2.2.0	synth with cache (only 1: intros; only 1: intuition; only 1: apply mod_small; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.048093	8	7	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	40	40.064979	18636	4495
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	40	40.069111	19554	4308
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_id_comm_r	40	40.391606	167862	7586
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc2	40	40.080556	24106	1295
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40	40.039310	8885	3104
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.G_aux	40	40.307437	93766	5500
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_cancel_r	40	0.285285	39	21	0.4.0.0	synth with cache (only 1: split; only 1: revert q r; only 1: apply mul_reg_r; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.lt_succ_r	40	40.105646	12213	3893
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	40	40.081279	25919	3250
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.281602	46	23	0.1.2.0	synth with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1	40	40.098862	28171	8567
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_alt	40	40.146097	24605	5333
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_step	40	0.296516	606	62	0.0.5.17	synth with cache (only 1: intros; only 1: right with y; only 1: auto; only 1: left).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_eqk	40	0.063877	35	8	4.3	synth with cache (only 1: induction 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.notin_remove	40	40.132250	19257	4619
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_r	40	0.009085	2	1	1	synth with cache (only 1: eauto using OrderTac.eq_trans, OrderTac.eq_sym).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_l	40	0.008412	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_refl	40	0.016000	4	2	0.2	synth with cache (only 1: intros l'; only 1: auto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_refl	40	0.009073	1	1	0	synth with cache (only 1: auto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.StrictOrder_PreOrder	40	40.063662	11402	989
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.map_m_Proper	40	40.022951	6668	1872
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_sym	40	0.021034	2	2	0.0	synth with cache (only 1: unfold eqk, eqke; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.count_occ_cons_eq	40	0.059377	9	6	1.0.0.0.2	synth with cache (only 1: simpl; only 1: intros Hnin; only 1: destruct (eq_dec x y); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_sym	40	0.031431	2	2	0.0	synth with cache (only 1: unfold eqk, eqke; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.count_occ_cons_neq	40	0.032495	3	3	0.0.0	synth with cache (only 1: intros H; only 1: simpl; only 1: now destruct (eq_dec x y)).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_step	40	0.626378	1215	119	0.0.8.12.12	synth with cache (only 1: intro y0; only 1: intros; only 1: right with y0; only 1: auto; only 1: left).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_rt	40	0.115207	72	23	0.0.5.0.0	synth with cache (only 1: induction 1; only 1: constructor 2; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_rem	40	40.068395	19795	4581
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	40	21.095748	4414	1650	1.0.0.3.1.0.0.4.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.abs_N_spec	40	0.047498	7	7	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.double_lt_mono	40	0.658582	73	42	1.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intro H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.abs_N_nonneg	40	0.021349	2	2	0.0	synth with cache (only 1: intros; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.id_abs	40	0.008992	2	1	1	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.id	40	0.011664	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_0	40	0.016485	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_pos	40	0.011997	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_neg	40	0.013445	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_opp	40	0.108394	8	6	0.0.0.0.0.2	synth with cache (only 1: destruct n; only 1: now Z.nzsimpl; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_trans	40	1.266016	699	117	0.13.3	synth with cache (only 1: intros x y z; only 1: compute; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40	40.072799	21042	6164
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40	40.229867	41515	3729
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.N0_less_1	40	40.105005	40341	3106
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40	40.048092	12041	3760
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40	40.090528	31989	4394
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_add	40	0.504670	77	46	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_eq_1_l	40	3.143630	1491	446	0.0.0.0.0.2.0.0.1.0.0.2.0.0	synth with cache (only 1: destruct p; only 1: intros; only 1: reflexivity || apply f_equal || exfalso; only 1: contradict H; only 1: induction q; only 1: discriminate; only 1: rewrite mul_xO_r; only 1: intro H; only 1: discriminate; only 1: discriminate; only 1: intros; only 1: destr_eq H; only 1: intro; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt2.map_lelistA	40	2.296790	420	185	3.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: intros; only 1: destruct a as (x'', e''); only 1: inversion_clear H; only 1: compute in H0; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0.212464	16	4	0	synth with cache (only 1: now destruct p, q).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	40	40.020143	4512	1281
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.square_xO	40	0.050492	25	7	1.5.0	synth with cache (only 1: simpl; only 1: f_equal; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_mul	40	0.590492	152	71	10	synth with cache (only 1: now destruct n, m).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_succ	40	1.713894	389	147	1.1.3.1.0.1	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1 || intros _; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_l	40	40.115834	7791	1226
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.prime_ge_2	40	40.069490	24377	1924
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.GEN_DIV.radd_ext_Proper	40	40.045503	15101	1419
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_proper	40	40.153034	6273	1282
coq-tactician-stdlib.8.12.dev	Coq.Structures.Orders.TTLB_to_OTF.le_lteq	40	40.060269	13140	7228
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_double_head	40	0.080415	4	3	0.0.1	synth with cache (only 1: intros E; only 1: rewrite !InA_cons; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_Add	40	40.134997	20015	2525
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	40	20.031094	20530	2498	19.2.8.1.7.1.8.0.5.6	synth with cache (only 1: split; only 1: now try order'; only 1: intros a; only 1: revert a; only 1: intros; only 1: firstorder; only 1: intros a; only 1: intros n m; only 1: intros H H1 H2; only 1: now rewrite H).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p2	40	40.059984	19991	3449
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.add_m	40	40.041470	13211	1784
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.log2_nonpos	40	0.045019	7	6	0.1.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1 || intros _; only 1: now destruct 1 || intros _; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	40	40.022571	4393	1848
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_add_distr_r	40	40.178781	17459	4637
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	40	13.094365	3705	1315	3.1.1.6.3.0	synth with cache (only 1: intros; only 1: symmetry; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_permute_heads	40	1.826172	209	28	0.0.0.0.16	synth with cache (only 1: split; only 1: rewrite !InA_cons; only 1: tauto; only 1: rewrite !InA_cons; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_spec	40	40.076582	24865	4401
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_zero_opp_r	40	40.068538	23628	3174
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	40	0.047353	8	3	0.5.0	synth with cache (only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r_iff	40	40.047139	7790	2366
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_idem	40	0.103708	51	10	0.0.9	synth with cache (only 1: intro; only 1: rewrite InA_app_iff; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.unique_existence	40	40.373270	159214	8501
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Mcphi_ok	40	40.025340	6742	1561
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.plength_spec	40	40.140557	50352	3696
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	40	40.069474	21918	3059
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	40	40.057004	7785	3167
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	40	14.561100	4683	1216	0.0.0.0.0.1.11	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order; only 1: order; only 1: intuition; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40	40.145219	9954	1444
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.AllAnd.all_and2	40	0.030072	8	7	0.0.0.0.0.0.1	synth with cache (only 1: repeat split; only 1: intro z; only 1: destruct (H z); only 1: auto; only 1: intro z; only 1: destruct (H z); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_2p_plus_1	40	40.276406	16713	1343
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.AllAnd.all_and3	40	0.012930	1	1	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.AllAnd.all_and4	40	0.016631	1	1	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.AllAnd.all_and5	40	0.024512	1	1	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_testbit	40	18.467666	17580	2120	0.1.0.2.1.20.2.6.4	synth with cache (only 1: intros H; only 1: assert (Hn : 0 <= n); only 1: trivial; only 1: destruct a; only 1: simpl; only 1: now destruct n; only 1: simpl; only 1: apply Z.testbit_Zpos; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.pair_andP	40	0.018124	9	2	6	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	40	40.079008	21059	3441
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_gt_compat_l	40	40.019830	5475	983
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1_iff	40	14.165517	14869	3189	0.0.0.0.0.0.8.0.0.0.0.0.0.0.0.0.0.0.8.0	synth with cache (only 1: split; only 1: induction 1; only 1: left; only 1: auto; only 1: elim IHclos_trans2; only 1: intro y0; only 1: right with y; only 1: auto; only 1: auto; only 1: intros; only 1: right with y0; only 1: auto; only 1: auto; only 1: induction 1; only 1: left; only 1: auto; only 1: right with y; only 1: auto; only 1: left; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	40	40.132872	42513	6322
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	40	40.054798	15005	4033
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.035958	13	5	0.2.0	synth with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl, lt_0_1).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	40	0.119145	61	19	0.3.1.0.1	synth with cache (only 1: transitivity 1; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite two_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT2.eq_sigT2_rect	40	40.109628	41705	2731
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_elements	40	40.087437	23422	3644
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40	40.083959	24368	4611
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev	40	6.271732	2127	431	0.1.10.5.0.1	synth with cache (only 1: induction l; only 1: intuition; only 1: simpl; only 1: rewrite <- IHl; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT2.rew_sigT2	40	0.038960	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	40	40.046511	11252	3758
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig2.eq_exist2_uncurried	40	0.044357	4	4	0.0.0.0	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl in *; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	40	1.335544	359	158	1.0.0.0.0.0.1.3	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried	40	0.126876	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.026178	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	40	0.027607	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.in_remove	40	40.057077	16560	4160
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40	40.049783	15442	1556
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40	40.054220	14325	5212
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	40	0.189846	323	19	25	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	40	0.014968	3	2	0.1	synth with cache (only 1: intros a; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.derivable_pt_asin	40	40.017920	4365	1688
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.UIP_refl_unit	40	40.185196	71403	8917
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	40	40.145276	49477	5871
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_morph_Proper	40	40.052755	15422	1938
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.in_in_remove	40	40.071284	20707	4628
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_nil	40	40.106019	7960	608
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Bijections.bij_inj	40	40.293038	124536	7408
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.remove_remove_comm	40	40.123684	17660	4457
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEmul_ok	40	40.000990	67	28
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Z_plus	40	40.037721	5350	846
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	40	40.042094	11820	2460
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40	40.099621	30330	4321
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.cardinal_spec	40	40.193410	46155	2355
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.elements_spec2w	40	40.113499	38312	3298
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	40	40.158061	56190	8399
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	40	4.223892	1176	361	2.2.5.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: apply eq_exist2_uncurried).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	40	0.017884	2	2	0.0	synth with cache (only 1: intros H; only 1: now apply compare_eq_iff).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	40	0.059634	11	9	2.0.0.0.0.0	synth with cache (only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.double_inj	40	40.091194	26756	3655
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt2.map_1	40	40.036039	8056	1952
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	40	9.005000	3710	1087	0.0.0.0.8.1.1	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: split; only 1: intros (q, Hq); only 1: exists q; only 1: now rewrite mul_shuffle3, mul_cancel_l in Hq; only 1: apply mul_divide_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.double_le_mono	40	14.837659	4540	1337	0.0.0.0.4.4.0.5.0	synth with cache (only 1: unfold min, le; only 1: destruct n, m; only 1: auto; only 1: apply iff_refl; only 1: apply iff_refl; only 1: destruct compare; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: easy || now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	40	40.147196	23982	5223
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pow_succ_r	40	40.030373	7950	1766
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sgn_pos	40	40.282694	20549	1571
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_double_le_mono	40	0.282182	54	31	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.rev_unit	40	15.583784	7411	2038	0.12.0.0.0.0.1.9	synth with cache (only 1: induction l; only 1: simpl; only 1: intros Hnin; only 1: auto; only 1: intros H; only 1: simpl; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.double_spec	40	0.010262	2	1	1	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_assoc	40	40.086423	15645	5003
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	40	40.090277	29129	3701
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.compare_0_r	40	0.629993	315	47	5.15	synth with cache (only 1: inversion 1; only 1: false_hyp H nlt_0_r).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_double_lt_mono	40	1.414718	323	93	0.0.0.0.0.0.0.0.5	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pow_0_r	40	0.015800	3	2	0.1	synth with cache (only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.succ_double_spec	40	0.714061	91	38	0.1.0.0.0.1.3	synth with cache (only 1: destruct n; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pred_double_spec	40	0.011680	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.remove_remove_eq	40	40.126773	20138	4586
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Mphi_ok	40	40.018765	4403	1746
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Map.ForAll_map	40
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.rev_length	40	1.649203	286	150	1.1.0.0.0.0.0.0.2	synth with cache (only 1: induction l as [| y l IHl]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite app_length; only 1: simpl; only 1: rewrite <- plus_n_Sm, plus_n_O; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.eqk_equiv	40	40.090787	35404	2494
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.odd_spec	40	40.105528	27608	5429
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.unlessP	40	40.369374	142856	7755
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.divmod_spec	40	40.079833	18890	2320
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_tail_mult	40	40.119162	9408	2361
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.boolP	40	0.006706	1	1	0	synth with cache (only 1: by case b1; constructor).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40	40.101533	33027	3354
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.idPn	40	0.007857	1	1	0	synth with cache (only 1: by case b1; constructor).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.negP	40	0.009253	1	1	0	synth with cache (only 1: by case b1; constructor).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.idP	40	11.106782	32909	391	2.2.196	synth with cache (only 1: destruct b1; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Map.get_map	40	40.068700	20279	5179
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_pos_neg	40	40.086395	13662	1797
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.negPn	40	0.006446	1	1	0	synth with cache (only 1: by case b1; constructor).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.negPf	40	0.008281	1	1	0	synth with cache (only 1: by case b1; constructor; auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40	40.032782	8455	1657
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_lt	40	40.063951	17760	6106
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40	40.062855	13962	4179
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	40	40.077901	22791	2258
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	40	40.109892	8231	2984
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.bind_unless	40	40.365707	145927	5673
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	40	40.065566	16132	3135
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_NoDup	40	40.114517	16629	6104
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	40	36.583670	15116	3098	1.0.1.6.1.21	synth with cache (only 1: intros n m p q; only 1: rewrite testbit_eqb; only 1: rewrite testbit_eqb; only 1: f_equiv; only 1: f_equiv; only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_trans	40	0.021117	2	1	1	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqk	40	0.062403	9	2	2	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.unless_contra	40	40.182819	62729	2973
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.pr_nu_xeq	40	40.052157	16917	3031
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqke	40	0.143383	26	10	0.0.0.1	synth with cache (only 1: unfold eqk, eqke; only 1: unfold eqk, ltk; only 1: intuition; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.classicP	40	40.298681	120721	5598
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.eqke_equiv	40	40.063669	18211	2373
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40	40.042882	10621	1980
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	40	40.058938	17111	2580
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	40	40.032193	7527	1762
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_lsl_1	40	40.072787	21334	3456
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_nz_opp_r	40	40.036874	11703	2162
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_least	40	40.063609	17141	4026
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.square_spec	40	40.217986	5445	763
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	40	40.022396	4359	1282
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_l	40	40.054021	11739	5095
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_double_inj	40	40.150551	28580	4468
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	0.014233	3	2	0.1	synth with cache (only 1: apply min_l; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec'	40	40.036799	8350	1565
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.choose	40	40.256915	52414	2955
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	40	1.498901	355	137	0.0.1.3.2.0.0	synth with cache (only 1: intros n1 n2; only 1: split; only 1: intros; only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H; only 1: intros; only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_succ_l	40	40.163572	14768	4078
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_remove_iff	40	40.086773	10328	3082
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.filter_2	40	40.089011	28939	2656
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	40	40.058129	10319	4154
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	40	40.067951	18888	3933
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40	40.051577	10525	2446
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	40	12.559927	7097	1182	0.5.9.6.0.0.0.0	synth with cache (only 1: PeanoNat.Nat.cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intro n; only 1: simpl; only 1: intro H; only 1: now rewrite PeanoNat.Nat.pred_succ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40	40.080412	26275	2844
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_equiv	40	3.473273	1539	237	3.1.2.1.0.18.0.0.3	synth with cache (only 1: split; only 1: auto with ordered_type; only 1: auto with ordered_type; only 1: apply Build_preorder; only 1: unfold eqk, ltk; only 1: auto with *; only 1: unfold eqk, eqke; only 1: red; only 1: eauto using PeanoNat.Nat.Private_OrderTac.Tac.eq_trans, PeanoNat.Nat.Private_OrderTac.Tac.eq_sym).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.iter_swap	40	7.387238	7158	848	0.10.0.0.0.0.0.17	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: intros; only 1: simpl; only 1: now rewrite ?H, ?IHp; only 1: intros; only 1: simpl; only 1: now rewrite ?H, ?IHp; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_equiv	40	0.066557	4	4	0.0.0.0	synth with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sqrtrem_spec	40	40.332714	18327	1226
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40	40.064331	16468	2984
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_sub	40	40.070953	20412	4477
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_pow	40	40.074493	22750	3985
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.filter_spec	40	40.159574	42582	2978
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_le	40	0.032029	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_l	40	40.047221	11165	1813
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	40	40.054330	14563	3886
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_lt	40	0.034645	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt, N.lt; only 1: now rewrite Z2N.inj_compare).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	40	0.023289	2	2	0.0	synth with cache (only 1: intros n m; only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	40	1.577483	553	188	0.0.0.1.0.0.0.3	synth with cache (only 1: intro n; only 1: cases ltac:(m); only 1: rewrite pred_0; only 1: trivial; only 1: intros m IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	40	0.059148	6	4	0.2.0.0	synth with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr; only 1: now rewrite add_assoc).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_succ_r	40	40.064613	16822	4700
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.classic_bind	40	40.231054	78522	3448
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40	40.181574	28260	3676
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_gt_0_lt	40	40.065703	17194	5677
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40	40.062626	15052	5339
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.classic_EM	40	40.256235	93316	3325
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_r	40	4.501659	1140	508	3.0.0.0.6.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite gcd_comm, gcd_opp_l, gcd_comm).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	40	40.035109	8759	2535
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n_iff	40	18.988729	16417	4103	0.0.0.0.0.11.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.9.1	synth with cache (only 1: split; only 1: induction 1; only 1: right with y; only 1: auto; only 1: left; only 1: left; only 1: generalize IHclos_refl_trans2; only 1: clear IHclos_refl_trans2; only 1: induction IHclos_refl_trans1; only 1: auto; only 1: right with y; only 1: auto; only 1: eapply IHIHclos_refl_trans1; only 1: apply clos_rt1n_rt; only 1: auto; only 1: auto; only 1: auto; only 1: induction 1; only 1: constructor 2; only 1: constructor 3 with y; only 1: constructor 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	40	26.878729	6009	2385	1.2.0.0.0.1.2.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.nandP	40	0.017835	1	1	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.norP	40	0.017526	1	1	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case; auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.implyP	40	0.009824	1	1	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_rt	40	0.407683	168	81	0.2.2.0.0.0	synth with cache (only 1: induction 1; only 1: constructor 2; only 1: constructor 3 with y; only 1: auto; only 1: constructor 1; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.filter_3	40	14.809900	12391	1159	2.0.6.0.29	synth with cache (only 1: intros Hbeq; only 1: unfold filter; only 1: destr_bool; only 1: rewrite xfilter_spec; only 1: intuition discriminate).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andTb	40	0.007271	5	1	4	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andFb	40	0.005725	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pow_neg_r	40	11.197587	5143	853	25	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.ror_cnf_cnf	40	40.145535	51335	4507
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.leb_correct	40	32.619586	23034	4560	17.1.0.0.0.1.3.0.0.0.0.0.0.1	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: intros m H; only 1: destruct m; only 1: now split; only 1: simpl; only 1: rewrite IHn; only 1: trivial; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andbT	40	0.095589	111	13	2.12	synth with cache (only 1: intro H; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.leb_complete	40	0.008981	1	1	0	synth with cache (only 1: apply Nat.leb_le).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andbF	40	0.079165	80	11	2.10	synth with cache (only 1: intro H; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.leb_correct_conv	40	0.029636	3	2	0.1	synth with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.lt_nge).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andbb	40	0.006906	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.leb_complete_conv	40	0.027813	2	2	0.0	synth with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.nle_gt).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_xO_discr	40	40.197578	24972	4183
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt2.map_2	40	40.074789	20732	2799
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub	40	0.034092	2	2	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.less_than_singleton	40	40.119118	21309	5529
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40	16.520280	93372	610
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andbC	40	0.722548	1247	45	0.48	synth with cache (only 1: intro H; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry	40	0.204326	43	15	0.0.4.1	synth with cache (only 1: intros; only 1: unfold sub31carryc, sub31, interp_carry; only 1: repeat rewrite phi_phi_inv; only 1: apply Zplus_mod_idemp_l).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.remove_length_le	40	40.068728	19673	4560
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andbA	40	0.007190	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_middle2	40	40.122739	13614	2582
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andbCA	40	0.010363	1	1	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Disjoint_Intersection	40	40.085134	23752	6440
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andbAC	40	0.022627	2	1	1	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_l	40	0.012670	1	1	0	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.subset_spec	40	40.049178	12577	3144
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andbACA	40	0.038687	50	5	11	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_r	40	0.018835	2	2	0.0	synth with cache (only 1: intros; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orTb	40	0.007465	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orFb	40	0.007144	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbT	40	0.011025	3	1	2	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbF	40	0.008045	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_c	40	40.427555	8971	1551
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbb	40	0.007245	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.union_spec	40	40.064249	13368	3512
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbC	40	0.009895	1	1	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	4.473921	604	213	5.3.1.0	synth with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: now rewrite opp_involutive).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	40	40.061106	15404	3753
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbA	40	0.016445	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	40	40.074672	22046	4397
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbCA	40	0.016909	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec1	40	0.053999	27	7	5.0.1	synth with cache (only 1: split; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qinv_involutive	40	40.058697	19066	1990
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbAC	40	0.016529	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.remove_length_lt	40	40.143874	24033	4681
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbACA	40	0.031424	1	1	0	synth with cache (only 1: by do 4!case).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2	40	0.124992	42	17	1.0.6	synth with cache (only 1: firstorder; only 1: inv; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andbN	40	0.009641	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2w	40	0.030336	6	3	3.0.0	synth with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andNb	40	0.010137	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_l	40	0.917416	315	113	0.0.1.0.1.1.1.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbN	40	0.011228	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	40	0.450549	52	24	1.5.0	synth with cache (only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: now rewrite add_comm).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.classic_pick	40	40.181735	65815	3087
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.CompSpec2Type	40	40.259613	99981	8993
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orNb	40	0.010150	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40	40.074030	14287	2606
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	40	6.607558	2965	825	1.2.2.8.3	synth with cache (only 1: induction n; only 1: apply PeanoNat.Nat.lt_succ_r; only 1: apply lt_eq_cases; only 1: now right; only 1: now apply PeanoNat.Nat.lt_lt_succ_r).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andb_orl	40	0.031706	5	1	4	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	40	0.033677	3	3	0.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: now rewrite opp_involutive).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.unorm_app_unorm	40	40.052549	13632	3509
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp	40	0.022232	2	2	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andb_orr	40	0.008893	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	40	0.049322	5	4	0.1.0.0	synth with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: now rewrite add_comm).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orb_andl	40	0.017532	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orb_andr	40	0.018156	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_r	40	0.396728	68	36	0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	40	4.078565	957	286	0.1.1.10.0	synth with cache (only 1: intros a b Hb; only 1: rewrite rem_eq by order; only 1: rewrite <- add_opp_r, mul_comm, <- mul_opp_l; only 1: rewrite (gcd_comm _ b); only 1: apply gcd_add_mult_diag_r).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.elements_aux_cardinal	40	40.072624	20227	2996
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_inv_r	40	40.028613	7632	1149
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.concat_nil	40	0.011329	2	1	1	synth with cache (only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andb_idl	40	0.436726	179	21	8.8	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.concat_cons	40	0.064273	7	7	0.0.0.0.0.0.0	synth with cache (only 1: induction x as [| a l IHl]; only 1: simpl; only 1: intros; only 1: auto; only 1: intro y; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_vs_elt_inv	40	40.139807	19764	3505
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andb_idr	40	0.018684	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andb_id2l	40	0.020991	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.count_occ_In	40	40.133478	23033	4366
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40	40.130741	37225	2694
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andb_id2r	40	0.028543	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orb_idl	40	0.018619	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orb_idr	40	0.018309	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orb_id2l	40	0.031933	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orb_id2r	40	0.028657	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	40	40.031729	6194	3259
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_double	40	40.204574	15616	1793
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negb_and	40	0.058606	1	1	0	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negb_or	40	0.013577	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sqrt_spec	40	40.247712	14583	2557
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andbK	40	0.012350	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andKb	40	0.013017	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_succ_double	40	0.041784	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbK	40	0.012710	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orKb	40	0.012126	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	40	40.053875	12513	2813
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implybT	40	0.010936	7	1	6	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implybF	40	0.009187	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_succ	40	0.036520	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implyFb	40	0.007312	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implyTb	40	0.008482	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.Reverse_Induction.rev_list_ind	40	2.353610	1907	279	9.4.1.5	synth with cache (only 1: simpl; only 1: induction l; only 1: auto; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_pred	40	0.050067	5	4	0.1.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: clear IHn; only 1: nat2N).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implybb	40	0.007132	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negb_imply	40	0.012879	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	40	40.138183	57045	2098
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implybE	40	0.011851	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implyNb	40	0.012737	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_add	40	0.035161	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implybN	40	0.011616	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implybNN	40	0.012721	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implyb_idl	40	0.017081	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implyb_idr	40	0.017108	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addFb	40	0.005348	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implyb_id2l	40	0.030067	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbF	40	0.006826	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.count_occ_not_In	40	40.144056	6150	2020
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbb	40	0.009830	2	1	1	synth with cache (only 1: by case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbC	40	0.010363	1	1	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbA	40	0.017841	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbCA	40	0.018206	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry_c	40	40.042337	7811	1888
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbAC	40	0.041319	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbACA	40	0.035395	1	1	0	synth with cache (only 1: by do 4!case).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	40	40.034972	9173	1989
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andb_addl	40	0.017440	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andb_addr	40	0.019798	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40	40.228538	20321	3307
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addKb	40	0.012096	2	1	1	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbK	40	0.010102	1	1	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	40	40.093423	31235	3881
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addIb	40	0.025747	2	1	1	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbI	40	0.029723	3	1	2	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addTb	40	0.008427	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbT	40	0.011553	2	1	1	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbN	40	0.011986	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsimp_ok	40	40.001001	61	21
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addNb	40	0.014187	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_reg_r	40	40.095971	17467	5240
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	40	40.041108	10603	2928
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40	40.056008	14450	2730
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.submap_1	40	40.086112	16871	2961
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred_c	40	0.040342	2	2	0.0	synth with cache (only 1: intros; only 1: apply spec_sub_c).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.replace_replace_neq	40	40.133263	9354	1975
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40	40.095551	16994	2055
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.map_cons	40	0.022250	7	2	1.4	synth with cache (only 1: simpl; only 1: f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	40	40.082059	16409	2023
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred	40	0.107340	4	3	1.0.0	synth with cache (only 1: intros; only 1: rewrite <- spec_1; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	40	0.050092	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_gt_compat_r	40	40.021647	5408	984
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_ge	40	40.051471	11999	4709
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_lt_compat_l	40	0.008214	1	1	0	synth with cache (only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	40	40.109471	14475	3770
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	40	40.039191	7021	2016
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.submap_2	40	40.068415	17814	3749
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_lt_compat_r	40	0.017430	2	1	1	synth with cache (only 1: apply Z.add_lt_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_le_reg_l	40	0.020361	2	1	1	synth with cache (only 1: apply Z.add_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_le_reg_r	40	0.014191	2	1	1	synth with cache (only 1: apply Z.add_le_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.is_empty_spec	40	40.070170	23370	2880
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40	40.063956	17167	4535
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_lt_reg_l	40	0.019583	3	1	2	synth with cache (only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40	40.065092	20388	2204
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_lt_reg_r	40	0.023477	4	1	3	synth with cache (only 1: apply Z.add_lt_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_reg_l	40	40.135911	20352	6143
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_incr_0	40	40.020901	4584	2099
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_n2f	40	40.199721	48249	2712
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_sub_max	40	40.063489	15728	4912
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.044028	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.count_occ_inv_nil	40	40.178001	23074	3983
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_gt_reg_r	40	0.045461	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Mphi_ok	40	40.018396	3814	1731
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_strorder	40	11.687887	26381	763	0.1.5.47.61.1	synth with cache (only 1: constructor; only 1: intro y; only 1: destruct y; only 1: compute; only 1: order; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	40	40.049154	3079	1061
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.classic_imply	40	40.211016	75921	3304
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.Paradox.paradox	40	40.154872	57057	8195
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_double_lt	40	40.148447	14040	2166
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	40	40.064620	15183	4467
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	40	40.078969	19349	3810
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	40	40.071296	19620	4000
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.subrelUl	40	3.169863	4219	348	0.20.0.7.25	synth with cache (only 1: intro H; only 1: simpl; only 1: Bool.destr_bool; only 1: elim eq_sym with (1 := H0); only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_pred	40	34.429786	10109	2549	0.0.0.3.2.0.0.0.1.1.0.0.6.4	synth with cache (only 1: intros; only 1: destruct n; only 1: unfold Z.pred; only 1: rewrite <- N.sub_1_r; only 1: rewrite !abs_N_nonneg; only 1: trivial; only 1: Z.order'; only 1: now Z.nzsimpl'; only 1: unfold Z.pred; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.map_length	40	0.147775	13	10	0.0.0.1.0.0.0	synth with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: rewrite IHl; only 1: elim (length l); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	40	40.069630	19985	4237
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map.map_1	40	40.064433	14108	2008
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_elt	40	40.126618	17933	3005
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_nil_eq	40	40.235057	15667	2284
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.map_id	40	2.941191	2244	302	4.2.6.0.6.7	synth with cache (only 1: Bool.destr_bool; only 1: induction v; only 1: now simpl; only 1: simpl; only 1: f_equal; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	0.632796	187	65	0.0.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	40	40.061751	17669	2787
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	40	40.062657	5281	1779
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc1	40	40.076445	18654	1082
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbP	40	4.074934	1873	72	1.0.0.0.55	synth with cache (only 1: repeat match goal with | p:(_ * _)%type |- _ => destruct p | b:bool |- _ => destruct b end; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.equal_1	40	40.069217	21850	3083
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.forall_exists_unique_domain_coincide	40	40.182728	64976	9126
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Generalized_induction_on_finite_sets	40	40.326228	64202	5548
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.sub_refl	40	0.130727	278	22	3.19	synth with cache (only 1: red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map.map_2	40	40.067855	21985	2500
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.map_nth	40	1.177301	520	138	0.0.6.0.0.0.1.0.0	synth with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: trivial; only 1: destruct n; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.topredE	40	0.011081	1	1	0	synth with cache (only 1: by case : pT pp ).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.log2_spec	40	40.291036	15051	2269
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	40	40.041887	9628	3621
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.exists_inhabited	40	0.397059	670	103	8.8.0	synth with cache (only 1: intros A P H; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.inhabited_covariant	40	0.015665	14	4	0.0.4	synth with cache (only 1: intro; only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_stepl	40	0.086377	53	17	0.0.7	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.const_nth	40	40.114916	20212	2538
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.iff_stepl	40	0.016392	4	4	0.0.0.0	synth with cache (only 1: intros A B C [H1 H2] [H3 H4]; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	40	15.154326	3294	1126	0.0.0.5.0.5	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intro H; only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_pos_l p n m) by assumption; only 1: now rewrite (mul_cancel_l n m p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	6.790035	3453	760	0.0.1.0.15.0	synth with cache (only 1: intros n m; only 1: nzinduct m n; only 1: now right; only 1: intro m; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.069786	13	9	0.0.2.0	synth with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.StrictOrder_PartialOrder	40	40.074384	17573	2411
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.map_map	40	2.082431	836	216	1.0.0.2.0.12	synth with cache (only 1: intros n k1; only 1: induction v; only 1: auto; only 1: simpl; only 1: rewrite IHv; only 1: f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.map_ext	40	0.065277	7	7	0.0.0.0.0.0.0	synth with cache (only 1: induction v; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite H by constructor; only 1: rewrite IHv; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n	40	40.186698	66861	8518
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.rev_app_distr	40	40.181439	32361	5009
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.InA_eqke_eqk	40	40.103117	34484	3946
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	40	40.066539	18127	6479
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_trans	40	40.100058	33181	4598
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.N0_less_2	40	40.114103	43740	2544
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40	40.096447	30126	4061
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_morph_T	40	0.954178	168	62	0.0.0.0.0.0.4.1	synth with cache (only 1: intros; only 1: split; only 1: apply CR_of_Q_le; only 1: rewrite H; only 1: apply Qle_refl; only 1: apply CR_of_Q_le; only 1: rewrite H; only 1: apply Qle_refl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	40	40.109235	20157	4963
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.union_spec	40	40.066662	23135	3199
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt2.map_sorted	40	40.049649	13732	3245
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.map_app	40	0.594174	155	75	1.0.0.0.0.2.1.0	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: reflexivity; only 1: intro y; only 1: simpl; only 1: rewrite (IHl y); only 1: f_equal).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.square_xI	40	40.083802	17928	4024
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	40	40.047509	9579	1620
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_sub	40	40.070161	21158	4377
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qinv_mult_distr	40	40.041184	12500	2318
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.map_last	40	0.493342	107	51	3.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40	40.048089	9351	3044
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.GEN_DIV.rmul_ext_Proper	40	40.050850	17137	1802
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Z_0_1_more	40	40.077770	26438	2652
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	40	5.055015	1677	462	0.0.1.1.0.1.15	synth with cache (only 1: intros n m; only 1: apply Private_NZDiv.div_unique with 0; only 1: split; only 1: now try split; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: now try split).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.subrelUr	40	5.597662	8643	662	15.13.9.31	synth with cache (only 1: intro H; only 1: Bool.destr_bool; only 1: red; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_2	40	0.159311	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	40	27.526418	5692	2459	0.0.0.0.0.0.0.0.4.0.0.0.0.0	synth with cache (only 1: unfold compare; only 1: intros x y; only 1: destruct (compare_spec x y); only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	3.814000	566	250	5.4.0.0	synth with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: generalize (le_gt_cases n m); only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.inter_spec	40	40.041887	10324	3753
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wproof_irrelevance_cc	40	40.064335	25903	2224
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	40	40.055376	15159	4937
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qinv_minus_distr	40	1.030829	266	105	0.0.0.4.1	synth with cache (only 1: red; only 1: intros; only 1: simpl; only 1: rewrite Pos2Z.inj_mul; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec1	40	13.496180	4434	762	1.15.1.0.0.7	synth with cache (only 1: intros [| x l] H; only 1: intuition; only 1: discriminate; only 1: simpl; only 1: inversion_clear 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_r	40	9.649437	9	7	2.0.0.0.0.0	synth with cache (only 1: rewrite PCond_cons; only 1: destruct l1; only 1: simpl; only 1: destruct 1; only 1: trivial; only 1: now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.remove_m	40	40.025851	4485	738
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	40	19.240642	9888	2014	7.0.1.0.0.0.0.12	synth with cache (only 1: intro LS'; only 1: cases ltac:(m); only 1: rewrite pred_0; only 1: intro H; only 1: assumption; only 1: intros m IH; only 1: rewrite pred_succ in IH; only 1: now apply le_le_succ_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.even_spec	40	40.252902	21296	4517
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	40	40.109437	19309	5029
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	40	40.084700	28933	4670
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.quotient_by_2	40	40.046074	16208	1184
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_lin_r	40	40.061530	14452	2425
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	40	40.169045	60491	3719
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_NoDupA_split	40	40.122269	9562	1645
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.iter_swap_gen	40	40.160337	32385	3570
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.list_eq_dec	40	12.454863	9477	1452	25	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	40	40.068346	19285	4467
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	40	0.059135	8	4	0.0.3.1	synth with cache (only 1: intros; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.forall_exists_coincide_unique_domain	40	40.337720	143856	8620
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec3	40	1.539938	1061	129	13.1.6	synth with cache (only 1: intros [| a l] H; only 1: easy; only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.in_map	40	11.363659	5797	1420	1.5.0.0.4.0.0.0.4	synth with cache (only 1: induction l; only 1: intros a H; only 1: inversion_clear H; only 1: intros x Hin; only 1: firstorder; only 1: simpl; only 1: left; only 1: subst; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_eqlistA	40	31.040204	9386	1019	15.13.1.0.6.3	synth with cache (only 1: intros x y; only 1: induction 1; only 1: simpl; only 1: intuition; only 1: compute; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40	40.038962	10906	1321
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_lelistA	40	3.848965	1029	344	0.0.0.3.0.0.0.0.5	synth with cache (only 1: intros m x e f; only 1: induction m; only 1: simpl; only 1: auto; only 1: destruct a as (x', e'); only 1: intros; only 1: simpl; only 1: inversion_clear H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_le_compat_l	40	40.025674	7826	1371
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	40	40.062259	7577	3707
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	40	0.778889	144	90	0.0.3.2	synth with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0.013840	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	40	0.034203	7	5	0.0.0.2.0	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	40	40.072744	23404	2260
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	40	0.259958	43	20	0.1.3.0	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_sorted	40	0.795339	119	63	2.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	40	0.013949	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.map_eq_nil	40	1.294898	435	155	4.3.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0.013752	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	1.858721	163	107	2.0.3.0	synth with cache (only 1: intros; only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	40	40.153873	16901	4021
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_plus_Zodd	40	40.259089	35175	2238
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	40	0.367856	44	26	0.4.0.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_le_compat_r	40	40.023591	7245	1337
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	40	23.618551	7870	1681	11.0.2.2.14	synth with cache (only 1: compute; only 1: intros a n m H; only 1: revert a m; only 1: intros m Hm; only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_compare	40	40.082790	26887	3605
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40	21.202478	8816	2768	0.0.3.0.0.1.0.0.1.5.0.0.1.0.0.5.1	synth with cache (only 1: intro n; only 1: destruct_max n; only 1: apply gcd_unique; only 1: trivial using divide_refl; only 1: apply divide_0_r; only 1: trivial using divide_refl; only 1: trivial; only 1: apply gcd_unique_alt; only 1: rewrite opp_nonneg_nonpos; only 1: trivial using divide_refl; only 1: intros q; only 1: rewrite divide_opp_r; only 1: split; only 1: split; only 1: apply divide_0_r; only 1: trivial; only 1: now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	40	0.959046	196	70	0.0.0.6.0	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40	40.091968	27257	5933
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	40	40.066448	6648	1592
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	40	13.533896	4099	1078	1.5.4.0.2.9	synth with cache (only 1: repeat red; only 1: intros x y; only 1: compute; only 1: symmetry; only 1: f_equiv'; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	0.462265	35	14	0.0.2.1.0	synth with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	40	40.063062	16333	4727
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40	40.079758	25206	2174
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.POneSubst_ok	40	40.043818	14589	927
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev'	40	40.069462	20381	3521
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	40	40.142768	45830	5944
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.filter_elements	40	40.086547	28778	2504
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	40	1.059276	243	160	0.1.1.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: split; only 1: intro H; only 1: apply le_succ_l; only 1: order; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	40	40.068147	18717	2950
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	40	40.078925	22473	4307
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	40	19.008928	5553	759	4.0.1.0.24.0	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: generalize (partial_order_equivalence y y'); only 1: compute; only 1: setoid_rewrite Hx; only 1: setoid_rewrite Hy; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40	40.035928	12142	724
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.div_mod	40	40.090404	15587	3881
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_sub	40	17.965571	14458	1078	0.0.0.90	synth with cache (only 1: destruct n as [| [| n]]; only 1: nat2N; only 1: nat2N; only 1: nat2N).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_mul	40	0.036249	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	40	11.491721	2410	772	0.0.0.1.0.6.0.1	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intro H; only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_neg_l p n m); only 1: rewrite (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl); only 1: now setoid_replace (n == m) with (m == n) by split; now intro; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_div2	40	0.148951	9	3	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	0.737482	310	80	2.2.1.12	synth with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	40	40.085730	14612	3130
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0.019207	1	1	0	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.rev_involutive	40	40.123902	40940	4164
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	0.081436	18	4	4	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	0.034577	2	1	1	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1_iff	40	11.787742	12722	2610	0.0.0.0.0.13.0.0.0.0.0.0.0.0.0.0.12.0	synth with cache (only 1: split; only 1: induction 1; only 1: right with x; only 1: auto; only 1: left; only 1: left; only 1: elim IHclos_refl_trans2; only 1: auto; only 1: intros; only 1: right with y0; only 1: auto; only 1: auto; only 1: induction 1; only 1: constructor 2; only 1: constructor 3 with y; only 1: auto; only 1: constructor 1; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.derive_pt_asin	40	40.023151	6811	1432
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_remove_nodup	40	40.069383	21464	3392
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	40	40.052080	17068	3367
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40	40.070187	20160	4424
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.UIP_refl_bool	40	40.116482	38172	8298
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.eq_inject_Q	40	40.048168	15575	2022
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.NoDupA_eqk_eqke	40	40.089119	30642	3703
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40	13.941314	5820	1273	0.9.1.2.0.0.0.0.0.3.1	synth with cache (only 1: split; only 1: intros; only 1: apply bits_inj; only 1: intros n; only 1: destruct (le_gt_cases 0 n); only 1: now apply H; only 1: now rewrite 2!testbit_neg_r; only 1: intros; only 1: destruct (le_gt_cases 0 n); only 1: now rewrite <- H; only 1: now rewrite 2!testbit_neg_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_min	40	28.219320	10388	3460	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.7	synth with cache (only 1: intros Hn Hm; only 1: rewrite !abs_N_nonneg; only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: unfold Z.min, N.min; only 1: simpl; only 1: now case Pos.compare; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: trivial; only 1: now destruct Hn || now destruct Hm || clear; only 1: now destruct Hn || now destruct Hm || clear; only 1: Z.order; only 1: Z.order; only 1: Z.solve_min).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Bijections.bij_can_sym	40	40.335625	134267	3654
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.opp_inject_Z	40	40.038805	9649	606
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.quot_rem	40	0.145904	15	15	0.0.1.0.0.0.0	synth with cache (only 1: intros Hb; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: now destruct quotrem).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.rev_eq_app	40	40.186073	32550	5835
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_union_intro2	40	1.814065	442	142	0.0.2.0.5.0.0	synth with cache (only 1: simple induction y; only 1: simpl; only 1: destruct 1; only 1: simpl; only 1: intros a0 l H [Ha0a| Hal]; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.for_all_spec	40	40.178342	41242	3580
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.elements_cardinal	40	40.091746	28796	3766
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_union_intro	40	0.202476	16	11	0.1.1	synth with cache (only 1: intros a b x [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig2.eq_sig2_rect	40	40.107576	41398	2646
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.in_rev	40	40.168798	19769	5256
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	40	40.078644	9755	2347
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	40	40.093292	26994	3928
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40	40.071198	17198	5808
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig2.rew_sig2	40	0.040127	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	0.014878	1	1	0	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	40	0.022666	3	1	2	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	40	40.071084	20020	3893
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_1	40	40.044531	12288	2087
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.odd_spec	40	40.241588	25758	4334
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.rev_nth	40	40.066933	18165	3436
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	40	40.053887	12934	3105
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pow_succ_r	40	40.128120	15514	1354
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.in_map_iff	40	20.414718	10651	2433	0.0.19.3.2.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: split; only 1: easy; only 1: destruct 1; only 1: tauto; only 1: firstorder; only 1: destruct H0; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40	40.373723	48267	1908
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Map.Exists_map	40	40.086047	25541	8126
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons	40	40.002197	442	33
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.flat_map_concat_map	40	0.262412	57	22	0.0.0.0.2.1	synth with cache (only 1: intros l1; only 1: induction l; only 1: reflexivity || discriminate; only 1: simpl; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.rev_append_rev	40	40.085802	26557	4876
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.findA_rev	40	40.058324	17596	2848
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Zip.Str_nth_tl_zipWith	40	0.542580	262	74	0.7.1.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros; only 1: apply IHn).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.rev_alt	40	40.095779	30160	5229
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Zip.Str_nth_zipWith	40	0.048227	7	6	0.0.1.0.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: unfold Str_nth in *; only 1: simpl in *; only 1: apply IHn).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.mod_bound_pos	40	40.106303	23160	4129
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40	40.057927	12173	3848
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.sqrt_neg	40	0.019616	4	2	2.0	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	40	40.078716	11289	2642
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Map.map_push	40	40.076114	22962	4472
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_nonneg_nonneg	40	40.041842	7950	1344
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.andP	40	40.139471	7421	668
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.and3P	40	40.248034	63424	753
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	40	40.107902	34613	4612
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.tech_Rplus	40	40.031159	5144	1108
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	40	40.057266	15129	3777
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	40	40.123575	32164	3117
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_0_1	40	0.018027	4	3	0.0.1	synth with cache (only 1: replace 1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal_lt	40	40.033780	6787	3252
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.filter_spec	40	40.046386	15300	1565
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_0_1	40	0.039518	14	6	0.0.0.2	synth with cache (only 1: replace 1 with 1²; only 1: auto with real; only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.and4P	40	40.459553	37447	535
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.map_id	40	0.043949	7	6	1.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	40	40.118550	6821	3144
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.iter_succ	40	40.180984	42023	3997
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0.018197	1	1	0	synth with cache (only 1: now rewrite partition_spec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_inter	40	40.057034	17739	2242
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.POneSubst_ok	40	40.042145	15141	871
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_1	40	0.029010	11	4	4.0	synth with cache (only 1: intros a b H; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.and5P	40	40.484824	45263	512
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_2	40	0.157405	47	17	0.0.1.4	synth with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	40	40.035989	4964	1383
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.deriv_maximum	40	40.041381	12743	2623
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.in_simpl	40	0.013367	1	1	0	synth with cache (only 1: by case : msp  => _ /= ->).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	40	40.195139	43924	4885
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.unfold_in	40	0.012032	4	1	3	synth with cache (only 1: by rewrite -mem_topred).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.simpl_predE	40	0.007340	3	1	2	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_simpl	40	0.007294	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.qualifE	40	0.007606	2	1	1	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.map_map	40	1.595840	514	179	2.4.0.0.0.5	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.orP	40	40.270254	9385	415
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_0_sqr	40	40.063762	19127	2307
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.or3P	40	40.207878	29794	304
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_Empty	40	40.094390	32118	3012
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_main_trick	40	40.045673	14184	1284
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.ror_opt_cnf_cnf	40	40.049471	10639	4669
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	40	40.081306	4853	1401
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmult_mod_distr_l	40	40.045095	16521	2138
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_succ_abs	40	8.242941	2075	617	1.1.1.1.0.0.0.0.11	synth with cache (only 1: destruct n; only 1: rewrite !abs_N_nonneg; only 1: now apply Z2N.inj_succ; only 1: Z.order; only 1: Z.order_pos; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: simpl; only 1: now rewrite Pos.add_1_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	40	40.066683	6652	1946
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_comm	40	40.094716	32534	3281
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	40	40.049865	7722	1268
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.square_spec	40	40.157246	28536	2843
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40	40.077224	19781	4648
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec	40	40.049012	13629	2601
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.div_eucl_eq	40	40.361511	41083	4073
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40	40.057720	15315	3379
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_equal	40	40.162205	53739	3022
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_union_intro1	40	40.056801	17532	3877
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.xforall_spec	40	40.056130	14523	3730
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40	40.081887	16020	3928
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.iter_succ_r	40	40.147124	27324	5737
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_l	40	36.116713	45	28	0.0.2.0.0.0.0	synth with cache (only 1: destruct l1; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	40	0.077254	7	6	0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: auto; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_add_abs	40	2.040287	470	186	7.0.0.0.0.1	synth with cache (only 1: assert (forall p q, Z.abs_N (Z.pos p ÷ Z.pos q) = (N.pos p / N.pos q)%N); only 1: intros; only 1: rewrite abs_N_nonneg; only 1: now apply Z2N.inj_quot; only 1: now apply Z.quot_pos; only 1: now destruct n, m).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.rem_opp_r'	40	5.308527	2443	580	0.0.0.0.0.0.0.2.0.1.0.0.0.0.3.3.3.0.3	synth with cache (only 1: destruct b as [| b| b]; only 1: reflexivity; only 1: unfold rem; only 1: simpl; only 1: destruct a as [| a| a]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: induction a; only 1: trivial; only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.iter_add	40	40.079247	23152	4911
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_mul_abs	40	0.027556	1	1	0	synth with cache (only 1: now destruct n, m).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40	40.038509	7380	1571
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.189610	28	22	0.0.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_diag	40	0.122557	7	7	0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_0	40	0.006557	3	1	2	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	40	40.135824	25474	2853
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_pred	40	40.150617	28379	3272
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.absurd_PCond_bottom	40	6.338360	9	3	3.1	synth with cache (only 1: intros; only 1: now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.exists_spec	40	40.288027	81991	3434
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.div_mod	40	40.101078	36713	3634
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_r	40	40.111725	13734	2759
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.min_elt	40	40.244167	36382	4269
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	40	2.875898	665	317	0.0.2.1.0.0.1.1.2	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order; only 1: order; only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.iter_ind	40	40.127675	44953	5368
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	40	21.815920	9804	2426	0.0.0.5.0.1.0.10.1	synth with cache (only 1: intros n m H; only 1: apply le_ind with (4 := H); only 1: solve_proper; only 1: intuition order; only 1: intros k H1 H2; only 1: nzsimpl; only 1: apply le_trans with n; only 1: apply le_pred_l; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.iter_invariant	40	40.067705	18135	2522
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_0_sqr	40	40.066043	16260	5507
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.or4P	40	40.185241	37464	419
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_lt_0_compat	40	4.944806	968	522	0.0.0.1.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: red; only 1: intros; only 1: absurd (1 <= 0); only 1: auto with real; only 1: replace 1 with (r * / r); only 1: replace 0 with (r * 0); only 1: auto with real; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_neg	40	40.051344	13562	2925
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	40	3.495824	994	278	6.0.0.1.3.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite pred_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	40	40.043624	11324	2240
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	40	40.046180	8262	2149
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1	40	40.116102	38159	8177
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.size_log2	40	40.169945	26784	3007
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.for_all_1	40	40.128477	47558	3064
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.ratom_cnf	40	40.180013	73980	4414
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.leb_compare	40	40.123041	12817	5429
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_2	40	40.043431	10156	3791
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_c	40	40.025242	4899	916
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	40	40.095180	25680	5669
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.pow_1_r	40	40.165424	32216	4191
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pos_div_eucl_bound	40	40.291911	23583	3129
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40	40.069666	16746	5614
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length	40	40.061880	18656	3868
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.rem_opp_r	40	4.938789	1854	616	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.3	synth with cache (only 1: intuition; only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: simpl; only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul	40	0.037008	2	2	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.rem_opp_l	40	5.275981	1342	741	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros _; only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.log2_nonpos	40	1.524548	419	155	0.0.0.2.5.0	synth with cache (only 1: intro H; only 1: destruct n as [| [n| n| ]]; only 1: reflexivity; only 1: easy'; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	40	3.922792	714	361	0.0.0.0.0.0.0.1.3	synth with cache (only 1: split; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	40	40.085146	24771	3195
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	40	40.067998	16505	4922
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	0.044216	9	4	3	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	40	0.021678	1	1	0	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.union_ok	40	40.030770	8370	1648
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.Reverse_Induction.rev_ind	40	40.169112	65031	4344
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qdiv_mult_l	40	40.048473	9116	2218
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	40	0.069537	15	7	3.3	synth with cache (only 1: intros Hnm Hpq; only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	0.097811	15	8	0.5.0	synth with cache (only 1: split; only 1: solve_min; only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	40	0.020327	2	1	1	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_carry	40	40.070096	4536	252
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.norm_app_int_norm	40	40.058678	17131	3581
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	40	40.051215	13874	2748
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	40	0.193335	26	13	4	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	40	40.245210	53161	4485
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_l	40	40.063899	17220	5018
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.elements_app	40	40.117329	36474	3654
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_div_r	40	40.059171	18461	2495
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	40	40.074031	22016	3990
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.map_ext_in	40	12.023298	8702	1313	0.4.19.1.1.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: f_equal; only 1: auto with arith; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.concat_app	40	40.112717	36047	4795
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_vs_cons_inv	40	40.070421	21854	4413
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.filter_ok	40	40.040313	5160	505
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qinv_plus_distr	40	35.710692	8426	1410	8.0.3.3.2.0.0.3	synth with cache (only 1: intros x y; only 1: unfold Qplus, inject_Z; only 1: simpl; only 1: unfold Qeq; only 1: intro H0; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40	40.038346	9138	2378
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.map_ext	40	0.321152	68	32	0.0.1.0.0.2.0	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: rewrite H by intuition; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.partition_ok2	40	0.025214	2	2	0.0	synth with cache (only 1: rewrite partition_spec; only 1: now apply filter_ok).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40	40.110450	20198	4940
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.flat_map_ext	40	0.215944	78	25	0.0.0.2.1.1	synth with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_CCI.proof_irrelevance_cci	40	40.266123	113255	7975
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.pow_succ_r	40	40.133260	17098	4302
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.in_concat	40	40.199132	27016	5606
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	40	40.070009	2505	998
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length'	40	35.673669	21687	2526	0.0.0.0.0.0.0.28.21	synth with cache (only 1: intros x l; only 1: induction 1; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Fold_Left_Recursor.fold_left_app	40	0.044745	7	4	3.0.0.0	synth with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40	40.099793	26198	6108
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.mod_pos_bound	40	40.286531	18235	3052
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec1	40	40.134366	49828	4214
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.max_elt	40	40.049206	12826	3702
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.fold_right_app	40	0.285363	104	41	0.1.0.0.0.0.2	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: intros; only 1: simpl; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40	40.066010	21984	1788
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	40	40.047661	12754	2356
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi2_phi_inv2	40	40.030846	8453	804
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nless_trans	40	40.061444	16581	1750
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.square_spec	40	40.139347	18997	4262
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	40	40.062385	15658	3897
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.mod_neg_bound	40	40.116417	13167	4486
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_empty	40	40.278711	126596	869
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_sqr_eq_0_l	40	40.051782	16067	2412
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.equal_2	40	40.046073	13004	4094
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40	40.042982	9465	2806
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_pred_max	40	40.209372	30803	3696
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	40	40.052712	13466	3296
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec2	40	40.030312	7566	1587
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	40	40.070213	22165	3361
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_incr_1	40	40.024130	5289	2533
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.extend_surjective	40	40.107854	39104	4599
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_min	40	40.180673	16606	6307
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.union_inter_cardinal	40	40.050375	17068	1390
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_le_compat_r	40	40.086334	34047	2655
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_succ_r	40	40.126665	16862	4460
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_compat_r	40	0.064317	10	3	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40	0.083913	3	2	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40	8.630770	1815	717	0.2.0.0.1.0.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l by trivial; only 1: rewrite max_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite min_r by trivial; only 1: rewrite max_r; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat	40	40.141868	19084	3543
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt2.map_1	40	40.045440	10856	2842
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_not_ltk	40	0.021352	2	2	0.0	synth with cache (only 1: unfold eqk, ltk; only 1: auto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_eqk	40	0.016901	1	1	0	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_ltk	40	0.018480	1	1	0	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	40	40.050578	11034	4502
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractFromTypeToProp.Paradox.paradox	40	40.322162	143363	7958
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.size_gt	40	40.190242	22973	2064
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_max	40	40.054029	13562	4684
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40	40.116823	31117	5305
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map.map_bst	40	40.075473	22770	2610
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	40	0.209372	25	15	0.0.0.1.0	synth with cache (only 1: intros; only 1: apply div_add; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	40	40.069841	10327	1886
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40	40.079709	25441	2667
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	40	40.071110	21592	2842
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.035693	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.InA_eqke_eqk	40	1.157269	600	113	1.5.0.11	synth with cache (only 1: induction 1; only 1: left; only 1: firstorder; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc2	40	40.070862	18912	1060
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	40	0.583544	111	40	0.2.4	synth with cache (only 1: intros a b c; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.114354	15	8	0.3.0.0	synth with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: apply Private_NZDiv.div_0_l; only 1: order_nz).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.map_nth_error	40	40.089877	28158	4148
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_topred	40	40.496253	212230	1590
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40	40.049253	12529	3233
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_1	40	40.047475	14317	1586
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.app_predE	40	40.384252	151935	2405
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.ForallOrdPairs_inclA	40	40.109165	17225	1855
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt2.map_2	40	40.081831	26939	4410
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.map_ext_in	40	40.299992	36554	4371
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.up_down	40	1.762726	3603	217	2.46	synth with cache (only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.ex.eq_ex_uncurried	40	40.552946	265766	3655
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst1_ok	40	40.025048	7450	1054
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.ex2.eq_ex2_uncurried	40	0.247656	97	30	0.0.5.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct H; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.ex2.rew_ex2	40	0.024423	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.quotrem_eq	40	40.143978	25860	5255
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.is_nonneg	40	2.295470	2057	159	3.0.2.24.1	synth with cache (only 1: apply Z.lt_succ_r; only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	40	7.758385	3397	643	0.0.4.13.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: revert a; only 1: intros n; only 1: rewrite shiftr_spec'; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.nth_map	40	40.286548	26669	4237
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	2.274374	744	222	0.3.3.2.0	synth with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	40	0.139659	20	10	0.0.0.3.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1	40	40.087723	27630	4305
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_succ	40	16.598422	3388	1005	0.0.0.0.3.0.0.0.2.6	synth with cache (only 1: unfold Z.succ, Z.pred; only 1: simpl; only 1: destruct n; only 1: simpl; only 1: easy; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	40	40.054322	16757	1439
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	40	40.037380	8935	1776
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.id	40	1.334451	435	82	0.4.0.1.17	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial using Nat.le_add_r; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nless_total	40	40.077947	16948	2611
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat'	40	40.187755	18936	3732
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.046297	6	5	0.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros H; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.gcd_divide_r	40	0.896290	219	85	0.2.1.0.0.0.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_opp	40	40.442682	5038	433
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.diff_spec	40	40.051382	13110	3776
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.empty_1	40	40.129416	53701	3244
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40	40.047998	12001	3766
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_quot	40	40.069441	21058	4239
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.map_rev	40	40.080856	26145	4298
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_pos	40	29.914336	14845	1113	9.5.44	synth with cache (only 1: intros [xn xd] [yn yd] Hxy; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	40	40.061976	15376	4288
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.GEN_DIV.ropp_ext_Proper	40	40.060334	20652	1556
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.prime_alt	40	40.075254	27480	1611
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	40	40.047581	11483	3215
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_bst	40	40.047869	13116	2418
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40	40.067080	17428	5235
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.in_applicative	40	40.383430	157772	2102
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40	16.563563	3969	1798	0.0.0.0.0.0.6.1.0	synth with cache (only 1: intros n m H1 H2; only 1: apply (mul_lt_mono_neg_r m) in H1; only 1: apply lt_le_pred in H2; only 1: rewrite mul_1_l in H1; only 1: setoid_replace (P 0) with (-1) in H2; only 1: now apply lt_le_trans with m; only 1: apply eq_opp_r; only 1: now rewrite one_succ, opp_pred, opp_0; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40	40.088811	13060	2820
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_rem	40	40.072289	21921	4697
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Weak_proof_irrelevance_CCI.wem_proof_irrelevance_cci	40	40.143560	55373	7408
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.concat_map	40	25.853866	19747	3163	7.0.2.0.0.0.4.3.0.0.0.9.1	synth with cache (only 1: intros l2; only 1: intros; only 1: induction l as [| x l IH]; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct l; only 1: simpl; only 1: rewrite map_app; only 1: auto; only 1: simpl; only 1: rewrite map_app; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_inj_r	40	40.038375	11249	2561
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_sqr_eq_0	40	40.043139	11852	2798
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	40	40.098240	9181	1810
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.fold_spec	40	40.072989	27101	2220
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_app	40	40.001180	102	26
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.union_m	40	40.058673	16753	1759
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	40	3.923684	714	239	0.0.0.1.0.1.2.1.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmult_mod_distr_r	40	40.043847	13433	2568
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40	40.047391	7936	1529
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	40	0.753652	116	50	0.0.0.0.0.0.3	synth with cache (only 1: intros n m; only 1: rewrite shiftr_div_pow2, div_small_iff by order_nz; only 1: intros H; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: trivial using le_0_l; only 1: trivial using le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	40	40.038135	8886	2484
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_spec	40	40.081201	21598	6175
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_main	40	40.037071	9068	1515
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec1	40	40.057829	17524	2169
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_refl	40	14.357072	29187	1083	111	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.ex.rew_ex	40	40.388340	170387	6450
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.map_eq_cons	40	40.059513	16984	3235
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_commutes_restr	40	40.114131	15421	1138
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_irrefl	40	0.301971	107	14	14	synth with cache (only 1: apply Z.lt_irrefl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.quot_rem'	40	40.086121	29319	1889
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_le_compat_l	40	40.099330	37972	2892
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.partition_aux_spec	40	40.088246	27755	2650
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0.008229	1	1	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.Choice_lemmas.Choice	40	31.580387	232989	2494
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	40	40.083243	6715	3011
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_equivlistA_restr	40	40.093867	32714	3256
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.INV_sym	40	0.290067	119	29	8.1	synth with cache (only 1: revert l1 l2; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40	40.055689	12784	4821
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.map_eq_app	40	40.109122	36985	4671
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt3.map2_alt_equiv	40	40.099896	34938	4061
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst_ok	40	40.018196	4455	1806
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	40	0.050988	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	40	40.093320	18894	3919
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	40	0.076906	7	5	1.1.0.0.0	synth with cache (only 1: intros Hnm Hpq; only 1: pose proof (max_le_compat_l _ _ m Hpq) as LE; only 1: pose proof (max_le_compat_r _ _ p Hnm) as LE'; only 1: apply min_glb_iff; only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	40	2.997478	561	191	0.0.0.1.0.2.3.0	synth with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	40	40.282052	19364	1129
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_lt_compat_r	40	40.069495	26557	2270
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	40	0.051866	7	2	0.5	synth with cache (only 1: apply max_r || apply max_l; only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_plus_Zeven	40	40.262217	32248	1876
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_lt_compat_l	40	0.007362	1	1	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_compat_l	40	0.035374	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_r	40	40.053372	12242	4616
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_pow	40	40.056338	17765	3115
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	40	0.271849	58	17	0.8	synth with cache (only 1: apply min_l; only 1: solve_max).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	40	0.384434	64	31	1.3.0.0.0	synth with cache (only 1: intros; only 1: destruct (mod_bound_pos a n); only 1: auto'; only 1: auto'; only 1: now rewrite Private_NZDiv.mod_small_iff).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	40	40.084139	28455	1050
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.091869	4	4	0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40	40.127046	45787	3655
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_ge_compat_r	40	0.475722	215	34	7.0.3	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	40	0.208219	50	29	0.0.0.3.0	synth with cache (only 1: intros; only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_plus_Zodd	40	0.093328	4	4	0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_ge_compat_l	40	0.046975	8	3	5.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	0.047759	6	5	0.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: apply neq_0_lt_0; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	40	40.195384	17210	1391
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	40	40.079347	23974	4399
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.map_ext_in_iff	40	17.541571	9083	2265	0.0.0.0.0.0.0.0.3.1.0.0.0.0.6.6	synth with cache (only 1: split; only 1: induction l; only 1: intros [=] ? []; only 1: intros [=] ? []; only 1: subst; only 1: auto; only 1: auto; only 1: induction l as [| y l]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	40	0.256601	51	20	0.0.0.0.2.0.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: apply neq_0_lt_0; only 1: auto'; only 1: apply neq_0_lt_0; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_commutes	40	2.433320	586	206	4.0.0.0.0.0.0.3.1.1	synth with cache (only 1: induction s1; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: apply IHs1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	40	40.024187	5788	1439
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	40	0.387749	64	26	0.0.0.4.0	synth with cache (only 1: intros; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.partition_spec	40	40.076707	22895	3476
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	40	0.048584	7	5	0.0.0.2.0	synth with cache (only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: apply neq_0_lt_0; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	40	40.070765	20368	3598
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_Forall	40	40.211064	20010	3689
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40	40.053302	11450	2656
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.partition_spec1	40	40.035817	8906	1970
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	40	40.113873	36988	5113
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL1_ok	40	40.019881	5475	1201
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	40	40.044305	7477	3006
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40	40.046141	14600	1627
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_2	40	0.029240	9	3	1.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	40	40.047529	9678	2162
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt3.combine_lelistA	40	40.052386	11395	2194
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.sqrt_specif	40	40.081540	12267	3449
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	40	1.105625	206	76	0.0.0.0.3.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: apply neq_0_lt_0; only 1: auto'; only 1: apply neq_0_lt_0; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	40	40.059585	15322	3990
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_compare	40	40.164236	60304	5922
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.log2_nonpos	40	0.045621	16	5	0.1	synth with cache (only 1: inversion 1; only 1: now apply pred_0).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_min	40	0.039611	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.forallb_app	40	1.548699	331	192	1.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l1; only 1: intros l2; only 1: simpl; only 1: solve [ auto ]; only 1: intros l2; only 1: simpl; only 1: case (f a); only 1: simpl; only 1: solve [ auto ]; only 1: simpl; only 1: solve [ auto ]).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	40	40.070774	17026	4113
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_max	40	0.040609	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	40	14.305610	5951	1682	1.0.0.0.3.9.1.1	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with 0; only 1: left; only 1: split; only 1: order; only 1: apply lt_0_1; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_left	40	40.394928	169903	5947
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40	40.057379	15111	3636
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_mod	40	40.055402	19929	2795
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	40	40.028436	4553	1447
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.UIP_refl_nat	40	40.167425	60302	8595
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.count_occ_map	40	40.134655	53115	2155
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	40	0.717259	228	120	1.0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: split; only 1: order; only 1: apply lt_0_1; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.acos_atan	40	40.037719	7742	1612
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.inter_m	40	40.043799	10672	1614
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	40	0.029286	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	40	40.027901	7188	1689
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	40	0.400209	58	23	0.0.2.0.0.0.0	synth with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: now apply div_mod).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	40	0.029432	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_false	40	40.047961	12662	2398
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.Subset_m	40	0.045784	9	3	1.0	synth with cache (only 1: unfold Equal; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1b	40	40.067071	18743	3768
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	40	40.066825	15590	6180
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	0.743428	160	84	1.0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto'; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.rem_bound_pos	40	40.126751	18009	4343
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Bijections.bij_can_eq	40	40.326680	133391	4306
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec2	40	40.146077	55185	3808
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.elements_node	40	40.137094	49578	1591
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_union_elim	40	40.155095	18262	3303
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	40	30.507515	11234	3857	0.0.4.1.5.0.1.5.0	synth with cache (only 1: intros a b Ha Hb; only 1: intuition; only 1: destruct (lt_ge_cases a b); only 1: auto; only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: exfalso; only 1: order; only 1: apply mod_small; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.flat_map_app	40	40.052625	12585	5088
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	40	40.072247	21527	3820
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	40	40.058204	9942	3249
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40	40.047498	9896	2377
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	40	40.070028	21182	2709
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	40	0.095641	74	13	0.8.0	synth with cache (only 1: intros; only 1: rewrite mul_comm; only 1: apply divide_mul_l, divide_refl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	40	4.706770	1658	400	7.0.3.4.0	synth with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: now apply mod_always_pos).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.in_flat_map	40	40.115300	21967	3571
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	40	40.028288	6698	1419
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt3.combine_sorted	40	40.074681	23081	4315
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	40	2.598526	999	305	0.0.0.0.1.0.0.0.0.4	synth with cache (only 1: split; only 1: intros; only 1: exists (a / b); only 1: rewrite Private_NZDiv.div_exact; only 1: auto; only 1: order; only 1: intros (c, Hc); only 1: rewrite Hc, mul_comm; only 1: apply Private_NZDiv.mod_mul; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40	40.044545	9018	3625
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.size_le	40	40.078403	20233	3416
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.rem_opp_l'	40	40.114294	40924	3008
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.remove_concat	40	40.092456	30950	3900
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	40	40.063258	12866	5228
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.log2_iter_spec	40	40.074286	17886	3740
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_2	40	40.071948	21877	4397
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_pos_neg	40	40.070427	10111	1850
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Map.Full_map	40	40.168519	28659	6874
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.log2_spec	40	40.107067	19517	3783
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_0_lt_compat	40	40.064426	18348	5006
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_of_N	40	1.472348	502	238	0.0.1.0.0.0.0.0.0.0.1.0.0.0.0.0.1	synth with cache (only 1: destruct a as [| [a| a| ]], n as [| n]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40	40.072185	20613	3322
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40	40.042717	8852	2739
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.gcd_divide_r	40	0.013784	2	2	0.0	synth with cache (only 1: intros; only 1: apply gcd_divide).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	40	40.071479	18925	3195
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40	40.047752	5498	1275
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	40	40.046371	12522	2550
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40	40.088821	31510	3160
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_ge	40	11.218184	4445	962	0.0.8.17	synth with cache (only 1: revert n m; only 1: intros a Ha; only 1: unfold Z.ge; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_ge_iff).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_nul_iff	40	40.112804	12435	4198
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_1	40	40.058979	14317	3800
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40	11.918891	3204	1440	0.0.0.0.0.0.1.0.0.6.1.0	synth with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: destruct_max n; only 1: trivial using divide_refl; only 1: rewrite opp_nonneg_nonpos; only 1: trivial using divide_refl; only 1: now apply divide_abs_l; only 1: destruct_max n; only 1: trivial using divide_refl; only 1: auto with relations; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubst1_ok	40	40.040036	13797	1078
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	40	40.058875	16092	2994
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.in_collective	40	40.314614	121466	2311
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.KeyPred.keyed_predE	40	40.193072	66262	3918
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_mem	40	40.404402	175186	2018
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ext_in_map	40	40.077666	23990	4442
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40	40.071070	15479	5126
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.KeyedQualifier.keyed_qualifier_suproof	40	40.296245	112616	1569
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	40	0.929610	112	43	1.0.0.0.1.1	synth with cache (only 1: unfold leb, le; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: now split; only 1: easy'; only 1: now split).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalProperties.forE	40	0.005529	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.in1W	40	0.027480	7	2	0.5	synth with cache (only 1: intro; only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.in2W	40	0.010689	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.in3W	40	0.012374	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40	40.027960	6504	1844
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40	40.053175	18715	1436
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.rxcnf_xcnf	40	40.146782	57836	2953
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	40	40.047265	7672	1915
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40	40.053322	14848	3524
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.in1T	40	0.277442	137	19	15	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_of_N'	40	2.725967	1161	411	0.0.0.0.0.0.1.0.0.1.0.2	synth with cache (only 1: intros EQ; only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmult_mod	40	40.068435	25678	2476
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.in2T	40	0.016536	2	1	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	40	0.420207	57	31	0.0.0.0.3.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold ltb, lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.in3T	40	0.010189	1	1	0	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_3	40	40.101738	34767	4071
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.sub_in1	40	0.009551	1	1	0	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.sub_in11	40	0.016540	2	1	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.sub_in111	40	0.014148	2	1	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.on1W	40	0.092241	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40	40.060143	13412	2412
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.on1lW	40	0.010178	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.on2W	40	0.011001	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.on1T	40	0.016335	2	1	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	40	0.114101	5	3	0.2.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.on1lT	40	0.016387	2	1	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.on2T	40	0.010964	1	1	0	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.all_tag_cond_dep	40	40.317777	129053	3526
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.subon1	40	0.018265	2	1	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.subon1l	40	0.014872	1	1	0	synth with cache (only 1: by move  =>allQ x /sub2; apply : allQ ).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.log2_spec	40	40.061092	17021	2935
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	40	0.063791	5	3	0.2.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.subon2	40	0.023853	3	1	2	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	40	0.075272	5	3	0.2.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40	40.079718	16689	2780
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.all_tag_cond	40	40.305675	117934	2949
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_ok	40	40.040669	9919	2684
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.deriv_minimum	40	40.026070	6755	3045
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.rev_elements_app	40	40.101512	34156	3005
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_union_iff	40	40.130132	19453	3405
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.for_all_2	40	40.089772	29885	3495
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Z_pos_sub_gt	40	40.002700	189	25
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	40	40.082659	18509	807
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.find_none	40	4.966350	1431	380	0.3.7.0.1.0.0.0	synth with cache (only 1: induction l as [| a l IH]; only 1: simpl; only 1: easy; only 1: simpl; only 1: case_eq (f a); only 1: congruence; only 1: intuition; only 1: intuition congruence).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	40	40.084287	17556	5363
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.partition_cons2	40	0.028396	2	2	0.0	synth with cache (only 1: simpl; only 1: now intros -> ->).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_add	40	40.086479	6089	2333
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_union_emptyL	40	0.693724	109	58	0.0.0.0.0.0.0.0.1	synth with cache (only 1: simple induction x; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: generalize (set_add_elim _ _ _ H0); only 1: intros [H1| H1]; only 1: auto with datatypes; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_union_emptyR	40	0.039416	4	4	0.0.0.0	synth with cache (only 1: intros a x H; only 1: case (set_union_elim _ _ _ H); only 1: auto || contradiction; only 1: auto || contradiction).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40	40.125660	16396	4213
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_max	40	40.079172	21836	6180
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.default_isIn_ok	40	40.003620	107	25
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	40	0.074550	6	6	0.0.0.0.0.0	synth with cache (only 1: unfold gt; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec1	40	40.210607	51792	4104
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	40	0.068799	7	6	0.0.0.0.0.1	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold le; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gauss	40	40.105967	15088	2681
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	40	40.057902	14665	3209
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	40	0.072899	7	6	0.0.0.0.0.1	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold ge; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_Zpos	40	3.472824	1662	359	1.4.1.4.0.4.0	synth with cache (only 1: intro Hn; only 1: destruct a as [| a| a]; only 1: simpl; only 1: now destruct n; only 1: simpl; only 1: now destruct n; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	40	0.077667	8	6	0.0.0.0.0.2	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_xO_xO	40	0.027263	10	3	2.3	synth with cache (only 1: revert q; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_xI_xI	40	0.008382	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	40	40.131603	49971	4221
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul_c	40	40.089265	6519	1467
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.filter_app	40	12.321781	10525	1705	0.0.0.0.1.1.1.1.0.27	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: case_eq (f a); only 1: intros l2; only 1: simpl; only 1: rewrite IHl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.divide_Zpos	40	40.142253	24266	4247
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_1	40	6.665496	1481	596	6.7.1	synth with cache (only 1: symmetry; only 1: generalize (F.mem_iff s x); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40	40.051638	13618	3265
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_lt_contravar	40	40.064657	16730	4704
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_pos_iff	40	40.146774	19113	6480
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	40	40.080053	20566	5559
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40	40.069766	19785	4391
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_1_lt_contravar	40	40.043122	9645	3017
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	40	40.060204	16188	2670
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_2	40	40.282942	24796	1765
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.div2_spec	40	0.009211	8	1	7	synth with cache (only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_0_l	40	0.016602	6	1	5	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_neg_r	40	0.106111	39	9	9	synth with cache (only 1: now induction n).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.S_INR	40	0.642881	82	18	0.0.0.5	synth with cache (only 1: induction n; only 1: simpl; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.rt1n_ind_right	40	40.124130	44917	7277
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.all_sig_cond_dep	40	40.327197	132477	2683
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40	40.100335	34239	2746
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.on_can_inj	40	0.024091	1	1	0	synth with cache (only 1: by move  =>fK x y /fK {+2}<- /fK {+2}<- ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.canLR_on	40	0.017589	2	1	1	synth with cache (only 1: by move  =>fK D1y ->; rewrite fK).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.eval_cnf_app	40	40.081307	29783	3309
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.canRL_on	40	0.018176	3	1	2	synth with cache (only 1: by move  =>fK D1x <-; rewrite fK).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	40	40.054851	12531	4253
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.partition_cons1	40	6.943725	2620	535	0.1.1.8.3.0.5	synth with cache (only 1: intros; only 1: simpl; only 1: case_eq (f a); only 1: rewrite H; only 1: intros; only 1: reflexivity; only 1: intuition congruence).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.eval_cnf_tt	40	0.049919	3	3	0.0.0	synth with cache (only 1: unfold cnf_ff, eval_cnf, eval_clause; only 1: simpl; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40	40.086987	17373	4941
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	40	15.703425	4534	2054	0.0.0.0.0.0.0.0.0.0.0.0.3.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: split; only 1: order; only 1: intuition; only 1: right; only 1: split; only 1: intuition; only 1: order; only 1: order; only 1: nzsimpl; only 1: apply mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_Exists	40	40.125231	14140	2265
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_neg_iff	40	40.056124	14099	4333
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	40	40.178790	35885	2560
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_square_c	40	40.057577	18798	2286
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	40	0.182615	27	20	0.0.1.0	synth with cache (only 1: intros; only 1: apply mod_le; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40	40.050174	14545	2154
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.even_spec	40	40.201457	36017	4090
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt3.map2_sorted	40	40.069587	20027	4967
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	40	40.057141	15618	2920
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	40	40.098613	13632	1282
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_xO_xI	40	4.468738	2091	545	3.3.9.1	synth with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.filter_spec	40	40.064765	21935	2105
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.ggcd_gcd	40	40.083019	24104	4776
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	40	0.531709	44	29	2.3.0	synth with cache (only 1: intros; only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_inj_l	40	40.049165	12299	2859
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.S_O_plus_INR	40	3.134631	525	143	2.0.3.0.0.2.1	synth with cache (only 1: intros; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros; only 1: field).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	40	0.264593	39	25	0.3.0.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40	40.061916	15404	3535
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40	40.050845	13123	2383
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_r	40	40.048919	10875	4743
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div21	40	40.243276	8049	530
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	40	40.315046	34838	4468
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.rev_elements_node	40	40.144837	49479	2450
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_cont_refl	40	0.772472	500	111	0.2.3.1.1.7	synth with cache (only 1: induction p; only 1: now f_equal; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: reflexivity || destruct H).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40	39.385587	77175	11613	5.13.8.1.14.0	synth with cache (only 1: intros H A; only 1: destruct (H A); only 1: right; only 1: trivial; only 1: left; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_rev	40	40.173243	16228	1442
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_antisym	40	40.063217	19243	2261
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.INV_init	40	40.071010	19885	4588
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.eval_cnf_ff	40	9.397896	6593	792	1.0.17.1.10.0	synth with cache (only 1: unfold eval_cnf; only 1: clear; only 1: split; only 1: destruct 1; only 1: reflexivity; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.nth_nth_nth_map	40	40.068783	19448	4779
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_xI_xO	40	6.613188	3717	956	4.5.4.1.5	synth with cache (only 1: change p~1 with (p~0 + 1); only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: now split).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	40	40.101157	19714	4993
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40	40.056536	12361	1971
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.eqb_eq	40	40.070770	19410	5969
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.fold_left_length	40	40.099035	31063	3192
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_Forall2	40	40.077602	26822	3552
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40	40.093248	23427	7208
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	40	40.060234	16439	2326
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.div_mod	40	2.944865	848	234	0.10.0.1	synth with cache (only 1: generalize (div_eucl_spec a b); only 1: unfold div, modulo; only 1: intros H; only 1: now destruct div_eucl).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec2w	40	40.334474	115399	3397
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.fold_left_rev_right	40	40.088876	26891	4828
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	40	40.059350	16330	2300
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.mem_1	40	40.104039	36351	4245
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.ggcd_correct_divisors	40	40.078761	29649	2014
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	40	40.070091	9584	2600
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	40	40.080502	24825	3496
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Bv2N_N2Bv	40	40.102922	41913	2535
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_even_0	40	4.324334	4690	368	3.3.46	synth with cache (only 1: destruct (N.le_gt_cases a 0) as [Ha| Ha]; only 1: now destruct a; only 1: now destruct a).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	40	40.054390	11758	4366
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.tech_Rgt_minus	40	15.175668	3877	1052	0.0.0.1.0.4.9	synth with cache (only 1: intros x y H'; only 1: pattern x at 1; only 1: rewrite <- (Rplus_0_r x); only 1: apply Rplus_lt_compat_l; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.ltb_lt	40	40.153448	24334	4938
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_lt_0_plus_1	40	40.061620	16490	4969
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_iter	40	40.151553	28155	4874
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40	40.043743	12528	2226
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_spec_right	40	40.161757	66320	687
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	40	40.044668	12303	1435
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec2	40	40.027602	6770	1476
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_decr_0	40	40.039145	11367	2930
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.gcd_divide_l	40	40.079240	23161	4221
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40	40.060081	19811	2074
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.extend_injective	40	40.207857	45442	4631
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt2.map_NoDup	40	40.062179	19313	4052
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Nat2Pos.id	40	40.201448	55560	4927
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div	40	40.879502	29208	1576
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40	40.073404	27550	1378
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.leb_le	40	40.138203	25027	6663
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.112737	21	21	1.1.0.0.0	synth with cache (only 1: unfold lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40	40.047572	9875	2086
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_le_iff	40	0.028791	4	3	0.0.1	synth with cache (only 1: unfold le; only 1: unfold compare; only 1: now destruct compare_cont; split; try apply comparison_eq_stable).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_1	40	40.059376	17636	3524
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_right	40	24.585636	20959	4313	0.0.1.0.0.1.0.1.0.0.1.0.1.1.1.0.0.1.0.2.1	synth with cache (only 1: induction 3; only 1: apply H0 with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply IHclos_refl_trans1; only 1: apply IHclos_refl_trans2; only 1: auto with sets; only 1: intros; only 1: apply H0 with y0; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: intros; only 1: apply H0 with y0; only 1: auto with sets; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.gt_lt_iff	40	0.363495	48	19	2.1	synth with cache (only 1: unfold gt; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.gt_lt	40	0.019724	2	2	0.0	synth with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_gt	40	0.008924	1	1	0	synth with cache (only 1: apply gt_lt_iff).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.ge_le_iff	40	0.031603	9	4	1.1.2	synth with cache (only 1: unfold ge; only 1: unfold le; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_ge	40	0.009122	1	1	0	synth with cache (only 1: apply ge_le_iff).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.ge_le	40	0.030124	2	2	0.0	synth with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.odd_spec	40	40.182497	26674	3770
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40	40.035153	6163	3498
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	40	40.075367	14217	3149
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_alt	40	40.102777	34172	4888
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_bst	40	40.406926	15904	2805
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_mul_r	40	40.082735	21948	980
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	40	40.049252	11306	3947
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	40	40.040021	9996	2171
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	0.032847	4	3	1.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	40	0.027565	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec	40	40.125469	48559	3481
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_trans	40	2.047791	2006	450	0.4.0.0.12	synth with cache (only 1: induction 1; only 1: auto; only 1: right with y; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	40	15.277117	5711	1468	1.0.8.3.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: split; only 1: intros H; only 1: bitwise; only 1: apply xorb_eq; only 1: now rewrite <- lxor_spec, H, bits_0; only 1: intros H; only 1: rewrite H; only 1: bitwise; only 1: apply xorb_nilpotent).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.all_sig_cond	40	40.315228	121828	3088
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	40	0.033430	3	3	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.RelationProperties.symmetric_from_pre	40	40.305970	118233	3523
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	40	14.409171	4412	1682	0.0.0.2.0.0.0.0.0.12	synth with cache (only 1: intros n m; only 1: apply Private_NZDiv.div_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: now try split; only 1: right; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: now try split).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_add_restr	40	40.081291	27873	3271
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_2	40	40.075127	22011	4411
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_find	40	40.048857	13587	2075
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_1	40	3.463742	1227	297	0.0.2.7.3	synth with cache (only 1: intros; only 1: rewrite (cardinal_2 (s:=remove x s) (s':=s) (x:=x)); only 1: auto with set; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.paradox	40	40.253730	106842	6209
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.fold_symmetric	40	40.103875	33068	4733
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.nth_map2	40	40.258482	23448	2413
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.onW_bij	40	0.018808	1	1	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.inT_bij	40	0.033538	1	1	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_2	40	0.197822	32	12	1	synth with cache (only 1: auto with set fset).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL_ok	40	40.024738	7189	1317
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.onT_bij	40	0.027024	1	1	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_nodep	40	26.032148	30859	2842	4.2.0.0.42	synth with cache (only 1: intros x x' Hx y y' Hy Hr; only 1: apply fold_rec; only 1: intros; only 1: trivial; only 1: auto with map).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.subon_bij	40	0.036735	1	1	0	synth with cache (only 1: by move  =>subD [g' fK g'K]; exists g' => x; move /subD ; [ apply : fK  | apply : g'K  ]).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40	40.061280	12087	3127
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.sub_in2	40	0.366943	254	42	5.5.4	synth with cache (only 1: intros; only 1: intro; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40	40.317756	54359	1688
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Filtering.filter_ext_in	40	5.891531	2431	594	0.2.1.0.0.0.0.0.12	synth with cache (only 1: induction l as [| y l]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: rewrite H by intuition; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.take_O	40	0.023191	7	2	5.0	synth with cache (only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Filtering.filter_ext	40	0.034889	4	4	0.0.0.0	synth with cache (only 1: intros f g l H; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj	40	40.087074	23390	4132
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	40	40.082390	22207	4400
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	40	40.074297	23515	3552
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_compare	40	40.096757	19991	5292
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.gcd_greatest	40	40.061823	17554	3933
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.sub_in3	40	1.166250	993	116	12.15	synth with cache (only 1: red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.MapsTo_eq	40	40.149851	28779	4036
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Bv2N_Nsize	40	40.175499	47902	2611
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_bis	40	40.092435	28378	3495
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_inv	40	40.035818	11704	1246
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40	5.992352	1287	521	0.2.0.0.0.0.2.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: rewrite min_r; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite max_l by trivial; only 1: rewrite min_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.mem_2	40	40.142951	54820	5486
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.sub_in12	40	0.520512	149	16	3.13	synth with cache (only 1: intros; only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.cardinal_spec	40	40.059930	23928	1266
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.sub_in21	40	0.013926	1	1	0	synth with cache (only 1: by move  =>/= sub1 sub; apply : sub_in111 ).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_cont_spec	40	40.067241	17518	3588
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_le	40	40.053006	14496	4439
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	40	40.039157	7111	4760
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.GEN_DIV.rsub_ext_Proper	40	40.095405	12809	1135
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_le_0_compat	40	40.198605	17219	1900
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	40	40.054179	15892	2525
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.square_not_prime	40	40.111881	41187	2541
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Filtering.remove_alt	40	2.078390	617	179	0.10.0.0.0.0	synth with cache (only 1: induction l as [| y l]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: now destruct (eq_dec x y)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40	40.051297	11141	2987
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.existsb_exists	40	40.080396	21816	4261
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.RelationProperties.PER.sym_left_transitive	40	40.233289	83623	3773
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.canLR_in	40	20.503093	25338	1131	26.53.17	synth with cache (only 1: intros; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	40	40.097254	29835	4944
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40	40.237466	98623	9154
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_trans	40	40.078168	28109	2132
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_lt	40	40.140174	13043	2825
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_2	40	40.064432	16308	1608
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40	40.052020	15674	2678
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_plus_1	40	40.063171	19255	3728
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.existsb_nth	40	40.058692	17416	3525
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.sub_in_bij	40	4.660347	4381	155	0.68	synth with cache (only 1: intro x; only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.mono2W	40	0.107233	38	4	10	synth with cache (only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.diff_m	40	40.046774	15367	1930
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoLR	40	0.011640	1	1	0	synth with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zplus_mod	40	40.105137	24006	2826
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40	40.023669	2609	1079
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.023095	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.isIn_ok	40	40.001396	164	24
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40	40.046781	12845	2584
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	40	40.050635	13653	3621
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	40	40.073631	20413	4158
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_step_correct	40	40.032309	7760	1800
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec3	40	40.037831	9317	2966
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	0.037696	8	3	3.2.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now destruct (even a)).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_not_eq	40	40.119588	45964	2691
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40	40.056463	17701	2928
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	0.032373	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_cont_Eq	40	40.129180	24966	5118
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	40	40.131172	14437	4050
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.fold_spec	40	0.034643	10	4	3.1	synth with cache (only 1: intro s; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	0.025008	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40	40.094049	23685	3655
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_lt_reg_r	40	0.010823	1	1	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.cardinal_spec	40	0.019502	5	2	2.1	synth with cache (only 1: intros m H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_le_reg_r	40	0.025361	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	0.009372	1	1	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_ge_reg_r	40	0.034946	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_reg_r	40	0.039071	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.INV_drop	40	40.071213	22245	2018
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.Choice_lemmas.Choice2	40	40.617062	282244	2808
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.gcd_nonneg	40	40.066048	19220	3934
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_eq	40	4.904469	2031	432	7.1.1.2.8	synth with cache (only 1: intros x y z; only 1: unfold eqke, ltk; only 1: intuition; only 1: compute; only 1: now rewrite H).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_equivlistA	40	40.075907	24380	3315
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.existsb_app	40	40.213655	29014	2439
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubstL_ok	40	40.018598	4902	1494
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	40	40.047075	9153	1650
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40	40.225926	25078	3498
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	40	40.084430	11005	2758
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	40	40.067589	17396	3607
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	40	40.047510	10565	3742
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.forallb_forall	40	40.099032	8764	1566
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt3.combine_1	40	40.046633	12486	3726
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_ge_compat	40	40.100505	40670	2671
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.048390	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40	40.063648	22760	2244
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	40	0.056676	8	6	0.2.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs_rs'	40	40.054245	10701	4292
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	40	0.056617	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	40	40.215922	21975	3944
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	0.091942	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_add	40	40.072091	22554	3144
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	40	40.036918	8594	2678
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	40	40.058874	15573	2840
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.INV_eq	40	40.061360	20303	1238
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	40	40.042802	11083	2057
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	40	40.062484	16295	2908
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs'_rs''	40	40.095180	33044	3252
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkX_ok	40	40.028593	9250	814
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_ind_bis	40	40.246914	17941	2317
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	40	40.056472	11727	2326
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.INV_lt	40	40.026438	6513	1982
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	40	40.045417	11659	2592
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	40	40.016838	2810	1417
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.sort_equivlistA_eqlistA	40	40.113207	31987	4779
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.gcd_divide	40	40.161652	19604	4002
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.filter_In	40	40.065023	19932	4031
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_iter	40	40.280192	37083	3816
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	0.137259	115	19	13	synth with cache (only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.in_split_r	40	5.859464	1553	705	0.0.0.1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct p; only 1: destruct a; only 1: destruct (split l); only 1: simpl in *; only 1: destruct H; only 1: injection H; only 1: auto; only 1: right; only 1: apply (IHl (a0, b) H)).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40	40.069660	16467	5021
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.split_length_r	40	0.077779	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zminus_mod	40	40.064265	23967	2836
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40	40.029969	4589	1275
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zminus_mod_idemp_r	40	0.189323	45	14	0.0.3	synth with cache (only 1: intros n m p; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt3.map2_0	40	40.041616	10409	3560
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	40	40.116375	15602	5287
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.acos_asin	40	40.020648	5705	1488
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.subset_m	40	40.052888	18426	1364
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	40	40.050258	13112	2734
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.INV_rev	40	40.078905	26291	2017
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40	40.041204	9598	2182
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.asin_acos	40	0.182136	6	6	0.0.0.0.0.0	synth with cache (only 1: intros x; only 1: unfold acos, asin; only 1: repeat case Rle_dec; only 1: lra; only 1: lra; only 1: lra).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	40	0.071083	3	3	0.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	40	0.064093	3	3	0.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.prime_div_prime	40	40.100435	36448	3118
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	40	0.472098	53	16	0.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.BijectionsTheory.eq_bij	40	40.325484	127897	4136
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.div2_double	40	2.585722	1044	181	0.2.0.0.3.10.2	synth with cache (only 1: simpl; only 1: nzsimpl; only 1: induction n; only 1: now nzsimpl; only 1: simpl; only 1: nzsimpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.rev_elements_rev	40	40.187036	70715	2102
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec1	40	40.269517	77664	3475
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_union_nodup	40	40.082292	26820	3860
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.ggcd_opp	40	40.077165	25147	3019
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.151289	33	18	1.0.0.0.1.1	synth with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite add_succ_r; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40	40.057588	14244	3094
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	40	40.077743	20655	4230
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	40	40.366680	167974	4637
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	40	40.093576	12376	2540
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	40	40.159318	8246	856
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	40	40.038891	7114	2430
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.MapsTo_1	40	2.130464	590	156	0.0.0.0.8.0	synth with cache (only 1: intros m x y e; only 1: CRelationClasses.simpl_crelation; only 1: apply InA_eqA with (x, e); only 1: eauto with *; only 1: eauto with *; only 1: eauto with *).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.concat_filter_map	40	40.155144	41343	4614
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.SubsetSetoid	40	2.915706	3795	165	61	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	40	40.051029	12277	3994
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	40	0.210404	29	20	0.0.0.1.0.1	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_always_pos; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40	40.056406	15056	2889
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_div_eucl_spec	40	40.265647	65599	1796
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.find_some	40	40.164550	21474	4075
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Filtering.filter_ext_in_iff	40	17.102989	4414	1256	0.0.0.1.0.0.0.3.8	synth with cache (only 1: split; only 1: intros H; only 1: rewrite filter_map in H; only 1: apply ext_in_map; only 1: assumption; only 1: intros H; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_NoDup	40	22.293417	6676	2469	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: constructor; only 1: contradict H; only 1: clear IHm H0; only 1: induction m; only 1: simpl in *; only 1: inversion H; only 1: simpl in *; only 1: destruct a; only 1: inversion H; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neg_neg	40	40.040886	10831	1856
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	40	40.066752	12230	3973
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt3.map2_1	40	40.031275	7559	3082
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.gcd_divide_l	40	40.152404	25191	4050
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	40	40.037744	8562	1770
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40	40.034628	7183	1537
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.gcd_greatest	40	40.173427	19834	3599
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40	40.087463	28311	2811
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_weak	40	40.090479	31892	4231
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.div_eucl_spec	40	40.197055	34112	4573
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	40	40.050033	13288	3030
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_lt	40	12.794242	5775	1080	0.1.5.0.7.2.0.8	synth with cache (only 1: induction l; only 1: intuition; only 1: intros; only 1: induction H0 as [| ? ? ? ? H1]; only 1: constructor; only 1: unfold eqk, ltk; only 1: constructor; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_gt	40	40.049503	14432	3003
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	40	40.070788	9126	3035
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_mult_diag_r	40	40.054616	12892	4443
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_eqlistA2	40	20.436952	16843	1182	0.0.1.0.2.0.6.18.35	synth with cache (only 1: intros n IH; only 1: intros x x' Hxx'; only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply Comp; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.combine_length	40	1.430302	543	144	2.5.0.0.0.1.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: easy; only 1: destruct l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubst_ok	40	40.022352	6119	1722
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40	40.079856	25082	2330
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.gtb_1	40	40.113918	26190	3788
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	40	40.117315	12857	2493
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.RelationProperties.PER.sym_right_transitive	40	40.266872	101186	3188
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40	40.149890	22041	3492
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.RelationProperties.equivalence_relP	40	40.292885	113457	3441
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.rev_trans	40	40.168354	58632	3805
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	40	40.090470	9853	2250
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	40	0.929739	479	108	0.0.0.0.1.9	synth with cache (only 1: intros n m; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.empty_1	40	0.342902	407	47	3.0.22	synth with cache (only 1: intros H; only 1: simpl in *; only 1: inversion_clear 1).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_succ_diag_r	40	14.875653	10771	1556	0.0.50	synth with cache (only 1: apply PeanoNat.Nat.lt_succ_r; only 1: apply lt_eq_cases; only 1: now right).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40	40.120349	15867	4089
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zplus_mod_idemp_l	40	40.062738	20737	3712
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40	40.062401	17929	2127
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.035178	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.EqualityModulo.eqm_refl	40	0.028306	9	2	2	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.can_in_inj	40	40.101859	31177	1935
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.EqualityModulo.eqm_sym	40	0.037280	3	2	1.0	synth with cache (only 1: intros n m H; only 1: now rewrite <- ?Z.add_le_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	40	40.062300	17312	4254
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40	40.046608	14488	1793
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.In_s_m	40	6.525755	1363	406	1.3.5.0.0.1	synth with cache (only 1: intros x y H s s' H0; only 1: rewrite (In_eq_iff s H); only 1: generalize (mem_iff s x); only 1: intros; only 1: red; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rel	40	40.105469	38463	3343
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.for_all_spec	40	40.064280	18368	3186
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	40	40.063600	18092	3349
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.nlt_1_r	40	0.064673	21	5	5	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.deriv_constant2	40	40.029413	7200	3542
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.div_mod'	40	40.192325	26152	4472
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_1_succ	40	0.057411	19	6	1	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_nlt	40	0.018437	2	2	0.0	synth with cache (only 1: unfold lt, le; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.canRL_in	40	40.141318	52261	1887
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.sorted_app_inv	40	40.121621	42170	4306
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_nle	40	0.279478	23	11	0.4	synth with cache (only 1: unfold ltb, lt; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.Empty_s_m	40	0.987761	606	85	10.7	synth with cache (only 1: repeat red; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.mono2W_in	40	0.013029	1	1	0	synth with cache (only 1: by move  =>hf x ax; rewrite hf).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.equal_1	40	40.142895	32318	2098
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.exists_1	40	40.080378	25056	2046
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.partition_length	40	40.087081	18940	4858
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.add_s_m	40	0.288995	16	16	1.0.0.0	synth with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !add_iff, Hx, Hs; only 1: rewrite mem_iff; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	40	1.006822	822	115	2.0.14.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_inter_intro	40	40.061226	17540	3800
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.remove_s_m	40	0.101012	5	3	1.1.0	synth with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !remove_iff, Hx, Hs; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	40	0.049062	8	4	3.1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_le_incl	40	1.049621	109	43	0.0.3	synth with cache (only 1: unfold lt, le; only 1: rewrite compare_antisym; only 1: now do 2 destruct compare).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Nat2Pos.id_max	40	40.147799	28926	3544
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Nat2Pos.inj_succ	40	0.033260	4	3	0.1.0	synth with cache (only 1: destruct n; only 1: now destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec2	40	40.280754	91579	2812
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_Zneg	40	40.082186	27731	3380
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40	40.041997	9489	2887
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_mul_split	40	40.128155	14580	3394
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	40.163573	62022	4297
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok1	40	40.002459	77	25
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_2	40	40.068594	21173	3790
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	40	40.058748	13992	4903
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.partition_inv_nil	40	40.083538	25126	5348
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mod	40	40.051527	18764	1820
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.choose_2	40	0.600896	267	65	0.0.4.0.0.0.0.1	synth with cache (only 1: intro s; only 1: unfold choose; only 1: case (M.choose s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_assoc	40
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	40	40.068485	17327	4285
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_r	40	0.038253	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.in_prod_aux	40	1.016965	320	96	1.2.0.0.5	synth with cache (only 1: intro H; only 1: induction l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40	40.058056	15232	2723
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_sub_mask	40	40.088156	23905	5885
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_iff_add	40	40.129472	24156	4799
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_odd_0	40	40.088599	30601	2165
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rbase	40	23.744507	10390	987	53.1	synth with cache (only 1: intros RS' n; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.plus_INR	40	40.047758	12662	3691
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok	40	40.000968	38	25
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_rst	40	40.149156	53143	8895
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_l	40	1.235532	304	124	0.0.0.0.0.3.1.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists n; only 1: now nzsimpl'; only 1: exists 1; only 1: now nzsimpl'; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.exists_2	40	40.131587	47613	3427
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_bst	40	40.058103	15360	1897
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.634263	171	73	0.0.0.0.0.3.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists 1; only 1: now nzsimpl'; only 1: exists n; only 1: now nzsimpl'; only 1: trivial using divide_1_l, le_0_l, divide_refl).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.inW_bij	40	40.142239	49512	1486
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	40	40.068649	18405	3340
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.eval_cnf_and_opt	40	40.059701	19666	2400
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_diag	40	0.421330	154	70	0.0.0.0.0.3.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists 1; only 1: now nzsimpl'; only 1: exists 1; only 1: now nzsimpl'; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.elements_in_partition	40	40.119519	11736	4565
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoLR_in	40	0.028729	1	1	0	synth with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK_on //; apply).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	40	40.063009	14602	2919
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_nil_app_cons	40	40.060090	18838	3359
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	40	40.049764	11099	3014
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.gt_iff_add	40	40.054099	12717	5015
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_gcd	40	40.141637	4159	678
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_odd_succ	40	40.051621	12385	2775
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.filter_weak_spec	40	40.072115	21814	3186
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	40	40.053246	10389	3183
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Zle_Qle	40	40.121781	47614	3435
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.minus_INR	40	40.061423	20176	2857
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	40	40.119131	13050	3856
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40	40.059980	13998	3249
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_even_succ	40	40.055044	14070	4210
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	40	40.062370	15181	3844
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40	21.982330	3654	2064	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	40	0.050372	4	3	0.1.0	synth with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: now rewrite add_move_l, sub_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Disjoint_noop	40	40.065243	17117	4743
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_cont_antisym	40	40.065935	16811	5609
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.elements_sort_ok	40	40.041408	8776	1317
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	0.151160	14	8	0.3.0	synth with cache (only 1: intros n m; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	40	40.214070	16610	4142
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	40	0.084987	11	8	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_pos_bound a b); only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40	40.163061	61040	9382
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40	0.945868	372	138	0.2.3.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: intro H; only 1: apply le_le_succ_r, sqrt_nonneg; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_in	40	40.191551	23128	4046
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt3.map2_2	40	40.053680	16194	3776
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Zlt_Qlt	40	40.100934	33119	3971
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.add_term_correct	40	40.064946	22187	1910
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_eq_iff	40	40.066919	16215	5830
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	11.362747	8051	987	0.0.0.15.14.2	synth with cache (only 1: nzinduct n; only 1: apply mul_0_l; only 1: unfold lcm; only 1: intros; only 1: nzsimpl; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_gcd	40	41.398833	7418	970
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	40	40.101408	9850	3310
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40	40.039645	6790	1825
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Included_empty	40	1.753611	585	214	1.0.0.2.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: unfold In in *; only 1: exfalso; only 1: inversion_clear H1; only 1: contradict H; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40	40.074489	17609	5481
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	40	2.083620	470	198	0.0.0.1.0.0.0.0.1.0.0.0	synth with cache (only 1: intros Eqf Lef x y; only 1: destruct (min_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: auto; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: auto; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_div_eucl_remainder	40	40.200188	34240	3732
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	40	0.073451	9	6	1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: now destruct (mod_pos_bound a b)).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.linear_union_ok	40	40.052460	12108	2943
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_Add_inv	40	40.185359	24924	3212
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Filtering.filter_map	40	40.063189	18055	3861
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	40	40.043851	3812	900
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_antisym	40	40.085882	23874	5970
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	40	0.035905	3	3	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_1_l	40	11.873116	7575	1751	0.4.3.1.1.14	synth with cache (only 1: apply ltb_ge; only 1: induction p; only 1: now f_equal; only 1: trivial; only 1: unfold ltb, lt; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	40	40.070387	10368	1061
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	40	40.270071	69838	2306
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_eq_r	40	1.221054	456	144	0.0.3.0.2.2	synth with cache (only 1: intros z n H; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: trivial; only 1: apply divide_refl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.subset_1	40	40.055795	15912	942
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.mult_INR	40	40.044590	11273	3647
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	40	40.049712	11274	3560
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Bv2N_Nsize_1	40	40.082231	28587	2725
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40	40.042046	4834	1812
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.shiftr_spec_aux	40	40.048396	12088	3463
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40	40.038209	8730	1979
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.pow_INR	40	40.038316	10638	2008
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Filtering.ext_in_filter	40	40.058394	15365	3439
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_compat	40	0.881189	175	36	4	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.shiftl_spec_low	40	40.068727	20327	4730
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Nat2Pos.inj	40	40.065301	21112	4235
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	40	19.002785	6975	1396	0.0.0.0.0.0.18	synth with cache (only 1: intuition; only 1: apply (mul_cancel_l _ _ c); only 1: order; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	40	40.091276	10191	1570
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_refl	40	0.025806	3	2	0.1	synth with cache (only 1: apply lt_eq_cases; only 1: now right).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.no_middle_eval_tt	40	5.033927	3328	174	51.4	synth with cache (only 1: intros; only 1: eauto with bool).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_decr_1	40	40.030082	7605	2970
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.length_order.lel_refl	40	0.776065	759	57	28	synth with cache (only 1: RelationClasses.simpl_relation).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40	40.046522	11307	2426
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Nat2Pos.inj_iff	40	40.068020	20432	3882
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.choose_spec3	40	40.064457	18328	3308
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_surjective	40	40.160427	29897	3597
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction	40	40.064847	18363	4421
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.length_order.lel_cons_cons	40	0.024192	3	3	0.0.0	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.length_order.lel_cons	40	0.015630	3	3	0.0.0	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.length_order.lel_tail	40	0.017238	4	3	0.0.1	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.shiftl_spec_high	40	40.055148	14230	4265
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40	1.163428	218	76	6.1.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_le_compat	40	40.130760	54390	2040
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	40	25.636919	7918	2023	10.8.4.0	synth with cache (only 1: unfold lcm; only 1: intros n m; only 1: rewrite <- gcd_div_swap; only 1: apply abs_nonneg).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter_int31_iter_nat	40	40.055687	18296	2023
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_succ_r	40	40.166740	34651	7601
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_succ_l	40	40.048190	10552	4247
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoW	40	32.870769	70479	1902	20.120	synth with cache (only 1: red; only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.fold_right_pair_NoDup	40	40.055403	16684	2956
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.mod_lt	40	40.087636	26055	3430
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	40	40.045689	12203	2471
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_zero	40	40.090508	21855	1325
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.sqrt_neg	40	0.020116	3	2	1.0	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_eq	40	40.190638	39136	3696
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	40	40.119518	19965	3593
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40	40.026627	2909	1360
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	40	40.062340	17348	3493
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.gt_lt	40	3.750836	1501	322	4.2.0.11	synth with cache (only 1: destruct (le_gt_cases m n); only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff; only 1: apply N.gt_lt_iff).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_sym	40	40.155911	51049	9262
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.lt_gt	40	0.007716	1	1	0	synth with cache (only 1: apply gt_lt_iff).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	40	40.103389	12392	2474
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.le_ge	40	0.007358	1	1	0	synth with cache (only 1: apply ge_le_iff).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	40	40.074869	6641	3947
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction_bis	40	40.068059	26016	1984
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.to_list_of_list_opp	40	40.289987	103163	1634
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.PropNeqType.paradox	40	40.335996	148203	9496
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_NoDup	40	40.129675	36338	4160
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	40	0.073670	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_identity	40	40.074591	22723	3323
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_pos_ok	40	40.021975	6221	861
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40	13.517811	5758	1548	1.4.8.0.1.0.0.1	synth with cache (only 1: intro n; only 1: cases ltac:(m); only 1: intro H; only 1: apply le_succ_l in H; only 1: false_hyp ltac:(H) nlt_0_r; only 1: intro H; only 1: rewrite pred_succ; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	40	0.047694	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_1	40	40.073311	12399	2094
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	40	40.034888	6183	1456
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	40	0.200430	36	21	0.0.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.sort_equivlistA_eqlistA	40	40.145188	31506	4486
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	40	0.030065	10	4	0.5.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	0.057351	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.in_combine_l	40	23.591885	12253	2773	0.0.5.3.2.2.3.0.3.0.0.2	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: intros [| ] ? Heq; only 1: simpl; only 1: intros; only 1: right; only 1: firstorder  (subst; auto); only 1: simpl; only 1: firstorder  (subst; auto); only 1: injection H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	40	0.024791	3	3	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.take_idem	40	40.215201	22584	3219
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_0_compat	40	4.444046	1460	278	4.0.4.0.0.0.7	synth with cache (only 1: destruct m as [| m| m]; only 1: Z.swap_greater; only 1: now destruct n; only 1: Z.swap_greater; only 1: now destruct n; only 1: Z.swap_greater; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40	40.076269	18820	6117
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40	40.040413	9324	3247
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_nil_l	40	0.034710	9	3	1	synth with cache (only 1: now destruct l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40	0.033519	4	2	2.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_abs_nat	40	40.124397	31378	809
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_add	40	40.082139	10595	1653
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	40	2.371404	891	193	9.6.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	0.032936	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Bv2N_upper_bound	40	40.044185	16172	713
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	40	6.626293	1849	424	0.0.0.0.0.14	synth with cache (only 1: unfold log2_up; only 1: intros a Ha; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_init	40	40.101742	32646	2355
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.subset_2	40	40.116046	41212	4775
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.equivalence_relP_in	40	40.148656	53086	1465
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.shiftr_spec	40	40.052846	11936	4592
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.filter_spec	40	40.061524	18566	3767
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.take_app	40	2.748240	825	248	0.2.0.2.0.3.1.0	synth with cache (only 1: intros; only 1: generalize dependent n; only 1: induction v; only 1: reflexivity; only 1: intro Hneq; only 1: simpl; only 1: rewrite IHv; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.ge_le	40	3.852873	931	364	0.0.0.1.0.6.1	synth with cache (only 1: unfold le, min; only 1: case compare_spec; only 1: intuition; only 1: easy; only 1: intuition; only 1: easy; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_mul	40	40.049422	10562	1635
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.563368	158	54	0.2.3.0.0.0.0	synth with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros H; only 1: order_pos; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.GEN_DIV.triv_div_th	40	40.096823	37152	266
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.uncons_cons	40	0.017655	6	2	0.4	synth with cache (only 1: intros m w le; only 1: now constructor).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40	40.036796	8766	2525
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.append_comm_cons	40	0.018756	2	2	0.0	synth with cache (only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.take_prf_irr	40	2.062535	569	199	0.0.0.1.0.3.0.0.0	synth with cache (only 1: induction p; only 1: intros n v le le'; only 1: auto; only 1: intros n v le le'; only 1: destruct v; only 1: now subst; only 1: simpl; only 1: apply f_equal; only 1: apply IHp).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_succ_r	40	40.115476	9114	3272
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Filtering.count_occ_alt	40	40.042543	11402	2437
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zgcd_is_gcd	40	40.065455	21821	2938
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40	40.039039	7534	2096
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_le_compat_l	40	40.052526	10795	2477
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	40	3.432369	1313	452	0.2.0.0.0.1.0.0.3	synth with cache (only 1: intros n m; only 1: cases n; only 1: rewrite pred_0; only 1: intro H; only 1: apply lt_0_succ; only 1: intros n IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: now apply le_succ_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	40	40.020963	4229	1567
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40	40.127962	41834	9806
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_lteq	40	40.059054	18292	2593
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_sub_max	40	40.062826	19816	3914
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_bst	40	40.082627	28883	2837
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.lt_0_INR	40	40.084914	29533	3972
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.xforall_spec	40	40.072855	19934	2733
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_refl	40	0.041689	4	3	0.1.0	synth with cache (only 1: destruct l; only 1: easy; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_le_compat_r	40	40.078679	12610	2273
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.ge_le_iff	40	5.810596	1241	442	4.2.6	synth with cache (only 1: unfold leb, le; only 1: rewrite compare_gt_iff; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoRL	40	40.233832	86783	2774
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.equal_m	40	40.037886	7256	4476
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homo_mono	40	40.189836	65115	2395
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.in_split_l	40	40.094307	31655	5088
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zminus_mod_idemp_l	40	40.088082	29452	4758
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.in_combine_r	40	26.673483	14216	3293	0.1.19.0.0.0.0.0.7.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: red; only 1: tauto; only 1: destruct l'; only 1: simpl; only 1: contradiction; only 1: simpl; only 1: firstorder  (subst; auto); only 1: injection H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.even_pow	40	40.069793	17024	7693
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40	40.044904	11338	3110
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_tl	40	0.958550	342	123	2.1.1.3.1	synth with cache (only 1: intros x l; only 1: destruct l; only 1: intro l'; only 1: firstorder  discriminate; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_tran	40	0.030489	7	3	3.0.1	synth with cache (only 1: induction l; only 1: auto with datatypes; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_appl	40	0.015129	1	1	0	synth with cache (only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	40	40.040649	10733	2565
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_appr	40	0.014728	1	1	0	synth with cache (only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_cons_inv	40	0.062648	6	5	0.0.1.0.0	synth with cache (only 1: unfold incl; only 1: simpl; only 1: intros l l1 l2; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	40	40.067023	20916	3320
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	40	0.745563	213	89	0.2.1.0.0.1.0	synth with cache (only 1: intros a; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros H; only 1: order_pos; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_le_weak	40	40.114595	42138	2967
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.filter_inf	40	40.036226	7139	3100
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_app_app	40	0.127055	29	12	1	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40	40.110467	12339	2880
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_app_inv	40	0.017228	4	2	2.0	synth with cache (only 1: unfold incl; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_le_trans	40	9.307578	3088	1167	0.0.0.0.3.15	synth with cache (only 1: intros EQ; only 1: intros H; only 1: apply le_lteq in H; only 1: destruct H; only 1: now apply lt_trans with m; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_lt_compat	40	40.107785	41279	2295
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.pos_INR	40	11.710741	4749	877	2.1.0.13.6	synth with cache (only 1: red; only 1: induction n; only 1: auto with real; only 1: repeat rewrite S_INR; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_spec	40	40.060922	19030	1583
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_succ_succ	40	40.165215	14854	5515
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.Choice_lemmas.bool_choice	40	40.566552	257613	2398
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_commutes_restr2	40	40.081133	26805	3086
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.lor_spec	40	40.085600	26373	3395
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	40	40.038852	9886	2345
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_N_ok	40	40.023140	7289	906
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.fold_add_ok	40	40.046347	4659	723
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	40	40.058784	9554	1686
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_l	40	40.001088	70	27
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	40	40.335778	75923	1790
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	40	40.069109	16656	5147
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_1	40	40.068294	23540	2644
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_lt_compat2	40	40.083305	32546	1580
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40	40.109997	44644	1704
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.split_nth	40	40.088547	26640	4762
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	0.021940	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.A'A_right	40	40.140993	59645	4126
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	40	40.184028	19602	1215
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_equivlistA_restr2	40	40.069007	21352	3378
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	40	40.050223	12396	2879
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.EqualityModulo.eqm_setoid	40	4.437764	2425	226	4.1.14.7.0.6.0	synth with cache (only 1: unfold eqm; only 1: split; only 1: auto; only 1: auto with relations; only 1: intros H; only 1: intros; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	40	40.038409	9367	2666
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.split_length_l	40	40.072424	21645	3337
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	40	40.062412	18629	2233
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction	40	40.116369	44332	3366
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	40	40.059221	9672	3490
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_preorder	40	2.727254	2464	229	1.0.0.0.14.9.0	synth with cache (only 1: split; only 1: unfold lt, le; only 1: intros [q| q| ]; only 1: now rewrite compare_refl; only 1: now rewrite compare_refl; only 1: now rewrite compare_refl; only 1: exact PeanoNat.Nat.le_trans).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	40	40.030295	9046	700
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.union_ok	40	40.064050	18334	3036
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	40	40.031872	8735	673
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv	40	40.196537	12142	1204
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	40	40.039586	7309	2397
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.leb_1	40	40.086042	19214	3324
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.union_list_spec	40	40.066371	20169	2122
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	40	40.054001	11915	3677
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_filter	40	5.580873	1867	475	4.0.10.0.0.0.2.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: solve [ auto ]; only 1: simpl; only 1: case_eq (f a); only 1: intros; only 1: firstorder  (subst; auto); only 1: intros; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.split_combine	40	40.090118	29956	4483
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmult_mod_idemp_l	40	40.055266	18044	3759
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.combine_split	40	40.102870	34439	4735
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	40	40.081872	15378	1855
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	40	40.113100	10049	2026
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.acos_0	40	40.024513	7314	1409
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_cons	40	0.021984	5	2	0.3	synth with cache (only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zgcd_spec	40	40.076598	27546	2297
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.linear_union_spec	40	40.092494	29521	2748
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_all	40	0.506157	219	49	4.1.0.1.5	synth with cache (only 1: induction l as [| x l IH]; only 1: now simpl; only 1: simpl; only 1: f_equal; only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_def	40	40.054508	12877	1022
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_O	40	0.008419	1	1	0	synth with cache (only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.length_order.lel_trans	40	18.618509	16483	2338	0.0.2.9.2.0.2.0.4.0.0.9.0.0	synth with cache (only 1: intros; only 1: unfold lel; only 1: destruct l; only 1: inversion H; only 1: inversion H; only 1: simpl; only 1: auto with arith; only 1: simpl in *; only 1: auto with arith; only 1: auto with arith; only 1: elim H0; only 1: auto; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	40	40.049234	13336	3142
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.for_all_spec	40	40.085755	27146	3663
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.BijectionsTheory.bij_comp	40	40.334254	130558	4194
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	40	1.124321	801	134	5.10.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_inter_elim1	40	40.058409	13430	3943
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.le_div2	40	40.162257	33428	4305
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	40	40.214644	21578	3130
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.double_twice	40	0.039402	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	40	40.028304	6427	1270
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40	40.051177	11652	3419
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.testbit_0_l	40	0.082323	20	7	1.1.3	synth with cache (only 1: induct ltac:(n); only 1: trivial; only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	40	40.064342	24570	914
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.land_spec	40	40.065938	18378	4275
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_inter_elim	40	0.661750	90	40	0.2.0.1.1	synth with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: intros; only 1: eauto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qnot_lt_le	40	9.678919	7283	1106	6.7.8.5	synth with cache (only 1: intros H H'; only 1: apply H; only 1: apply Z.gt_lt_iff; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.mem_1	40	40.044408	11177	1723
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	40	40.124348	13988	2834
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	40	40.055649	12270	4178
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40	40.122198	17683	3238
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	40	1.736442	887	193	1.4.0.7	synth with cache (only 1: intros Hab; only 1: bitwise; only 1: apply andb_false_iff; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.union_spec	40	7.140856	960	485	0.1.0.1.0.0.0.0.0.0.2	synth with cache (only 1: intros s1 s2 B1 B2; only 1: unfold union; only 1: destruct compare_height; only 1: unfold linear_union; only 1: rewrite treeify_spec, union_list_spec, !rev_elements_rev; only 1: rewrite !InA_rev, InA_nil, !elements_spec1 by auto_tc; only 1: tauto; only 1: rewrite fold_add_spec; only 1: tauto; only 1: rewrite fold_add_spec; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.mem_2	40	40.115965	42753	4405
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40	40.068634	19167	3351
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.mod_bound_pos	40	40.164042	13638	3337
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qnot_le_lt	40	1.751213	1135	164	19.7	synth with cache (only 1: intros H; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_not_le	40	0.007057	2	1	1	synth with cache (only 1: apply Z.nle_gt).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.length_order.lel_nil	40	21.549535	18487	2371	18.3.0.0.13	synth with cache (only 1: destruct l' as [| y l']; only 1: intros Hnin; only 1: auto; only 1: firstorder; only 1: now destruct l).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_l_1	40	40.047191	13018	3956
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_trans	40	21.309530	11249	2384	1.0.5.0.4.0.0.4.0.0.0	synth with cache (only 1: intros H H'; only 1: apply le_lteq in H'; only 1: destruct H'; only 1: apply le_lteq; only 1: apply le_lteq in H; only 1: destruct H; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: auto with relations; only 1: destruct H; only 1: now left; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_square_nonneg	40	40.186161	75536	2300
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_inv	40	40.266017	7361	1253
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40	40.051737	10208	2227
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	40	5.164842	1348	594	0.0.5.0.1.1	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_bound_or; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.lt_div2	40	40.122304	18183	4536
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	40	40.036426	6227	1848
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.div2_decr	40	40.117954	36037	5194
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.sqrtrem_sqrt	40	40.091079	29127	4438
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_sub	40	40.065985	19315	2519
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Empty	40	40.096989	35449	3153
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_In	40	40.201086	16813	3095
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_app	40	13.836506	4311	1284	2.2.3.1.0.7	synth with cache (only 1: intros l m n; only 1: elim l; only 1: auto; only 1: unfold incl; only 1: intros y H0 H1; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_diag_r	40	40.046217	9500	4567
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	40	40.077623	14479	3555
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.combine_nth	40	40.071395	20909	4517
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PSubstL1_ok	40	40.024183	7368	1660
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_all2	40	6.794147	2029	897	0.5.0.0.0.2.1.0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: destruct l; only 1: simpl; only 1: intros Hnin; only 1: reflexivity; only 1: simpl; only 1: now destruct l; only 1: intros [| ] ?; only 1: simpl in *; only 1: now simpl; only 1: simpl in *; only 1: f_equal; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	40	40.075953	11479	2846
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	40	29.419555	15021	2417	0.0.28.0	synth with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_add_restr2	40	40.059699	18096	3338
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.gtb_compat	40	40.113182	10841	1156
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40	40.082549	16364	2731
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	40	40.065967	17740	4267
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_app	40	3.080771	1117	453	0.0.0.1.1.0.0.0.0.0.1.5	synth with cache (only 1: induction n as [| n IH]; only 1: intros l1; only 1: intros; only 1: induction l1; only 1: simpl; only 1: auto; only 1: apply IHl1; only 1: intros [| x l] H; only 1: simpl; only 1: now reflexivity; only 1: simpl; only 1: now rewrite IH).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.fold_add_spec	40	40.076409	21048	5311
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	40	40.094019	13682	2357
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_not_lt	40	3.990023	4060	415	26.0.6	synth with cache (only 1: intro; only 1: apply Z.nlt_ge; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40	40.050152	12803	3418
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.is_empty_1	40	40.135085	52145	3471
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoLR	40	40.221717	80594	1566
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoRL	40	40.226294	82327	1542
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.can_mono	40	40.183192	65541	1478
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.EqualityModulo.eqm_trans	40	40.080827	26049	2594
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_r_1	40	40.046514	11718	3623
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	40	40.093340	10339	3055
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.exists_spec	40	40.057130	16132	3200
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoW_in	40	40.136757	43715	2116
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	40	40.064578	18321	3443
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt2_lower_bound	40	40.061107	19439	1822
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.nonneg_derivative_0	40	40.054905	16919	3181
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_commutes	40	40.080825	22252	2041
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.sqrtrem_spec	40	40.231476	38053	3933
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.036521	3	3	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	40	0.038397	3	3	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.id	40	3.813128	1577	459	0.1.0.0.0.1.4.0.1.3	synth with cache (only 1: intro Hn; only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: now destruct Hn).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.exists_spec	40	40.094071	32379	3604
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoRL_in	40	40.127761	43992	1787
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_cons	40	18.335550	15426	1934	5.3.0.6.9.7.8	synth with cache (only 1: intros F l1 l2; only 1: intros d ie; only 1: intro y; only 1: simpl; only 1: intuition; only 1: elim H0; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40	20.993507	3612	1676	5.6.1	synth with cache (only 1: intros a b c; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.choose_1	40	40.137948	48907	4142
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.partition_filter	40	40.168712	68319	2716
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	5.399271	862	327	0.0.9.0	synth with cache (only 1: intros; only 1: apply NZQuot.div_pos; only 1: order; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	0.240093	19	11	1.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.partition_2	40	0.093614	28	9	0.0.3	synth with cache (only 1: intros n m Hn; only 1: rewrite partition_filter; only 1: apply eq_refl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	40	40.070293	20485	3134
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.union_s_m	40	40.028349	8344	965
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_inter_elim2	40	40.137470	3983	1571
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	40	30.585421	13605	1579	0.0.11.2.1.5.2.2.3.0	synth with cache (only 1: intros A B SetoidFunChoice R T Hequiv Hexists; only 1: intros x; only 1: pose (T' := fun x y => forall x', R x x' -> T x' y); only 1: assert (Hcompat : forall (x x' : A) (y : B), R x x' -> T' x y -> T' x' y) by firstorder; only 1: destruct SetoidFunChoice with (R := R) (T := T) as (f, Hf); only 1: easy; only 1: intros; only 1: firstorder; only 1: exists f; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.skipn_O	40	0.031702	4	4	0.0.0.0	synth with cache (only 1: induction l as [| a l IHl]; only 1: now simpl; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_lt_succ	40	40.213696	42205	4519
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Nat2Pos.inj_pred	40	40.079234	24844	5124
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.skipn_nil	40	0.509478	344	48	0.0.0.19	synth with cache (only 1: intros; only 1: induction n; only 1: now simpl; only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.skipn_cons	40	0.009438	1	1	0	synth with cache (only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.skipn_all	40	0.042800	7	4	1.0.0.2	synth with cache (only 1: induction l as [| a l IHl]; only 1: now simpl; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_le_length	40	11.621131	5002	1690	4.1.3.0.1.1.2.0.1.4	synth with cache (only 1: induction n; only 1: destruct l; only 1: now simpl; only 1: simpl; only 1: auto; only 1: destruct l as [| x xs]; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: now auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.diff_s_m	40	0.979264	72	25	0.2.0	synth with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !diff_spec, Hs1, Hs2; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.compare_spec	40	40.494089	184387	2076
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.ldiff_spec	40	40.092608	29207	6098
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	40	40.077596	23417	2774
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.gcd_divide_r	40	2.964688	785	254	1.0.2.3.0.0.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: intros (EQ, EQ'); only 1: exists bb; only 1: simpl; only 1: now rewrite Pos.mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40	40.074833	18883	5242
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.choose_3	40	40.115375	38894	3367
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.in_prod	40	40.058565	16368	4632
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	40	40.038233	9292	2145
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_r	40	40.002156	49	19
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.gtb_1	40	40.173878	30213	3822
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_3w	40	0.326423	104	33	7.0	synth with cache (only 1: intros; only 1: auto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction	40	40.062149	20082	2696
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.lt_INR	40	40.088860	29773	3932
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_lt_mono	40	40.093292	30163	4501
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n	40	40.098659	30458	6695
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.in_prod_iff	40	40.054022	12563	3086
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.INR_not_0	40	0.249286	69	24	4.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: rewrite H0; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_le_mono	40	40.171998	28345	3452
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.addmuldiv31_equiv	40	41.340974	9740	916
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.geb_spec	40	17.180872	2691	794	1.0.1.0.0.0.7.6	synth with cache (only 1: rewrite <- (succ_pred m); only 1: rewrite <- (succ_pred m); only 1: rewrite geb_leb; only 1: case leb_spec0; only 1: constructor; only 1: order; only 1: constructor; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.lxor_spec	40	40.089177	26284	4014
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_l	40	40.001204	106	28
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.partition_1	40	40.066388	20577	3149
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.skipn_all2	40	2.990275	834	301	1.0.0.0.0.5.0.0.0	synth with cache (only 1: induction n as [| k iHk]; only 1: intro; only 1: now destruct l; only 1: destruct l; only 1: simpl; only 1: now reflexivity; only 1: simpl; only 1: intro H; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_eq_0	40	40.052289	12042	3709
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	40	40.081467	7502	1004
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homo_mono_in	40	40.081343	26024	1799
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.mul_reg_r	40	0.729004	257	75	0.11	synth with cache (only 1: rewrite 2!(mul_comm _ p); only 1: exact (fun Hp => proj1 (mul_cancel_l n m p Hp))).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	40	40.059310	9350	2369
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_length	40	2.039518	687	224	2.0.1.0.0.0.0.0.4	synth with cache (only 1: induction n as [| k iHk]; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct l as [| x xs]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.filter_ok	40	40.031317	8809	1085
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	40	40.085276	11824	3711
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app_inv	40	40.322211	8586	767
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.skipn_length	40	1.760437	789	177	1.0.0.0.0.2.0.0.0.0.3	synth with cache (only 1: induction n; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: split; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_mul_div	40	40.087530	1663	314
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_lt_trans	40	40.082328	28733	2680
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.lt_1_INR	40	40.083663	28191	3705
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.prod_length	40	40.069733	20554	3483
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_trans	40	40.310334	26822	3277
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.skipn_app	40	1.865406	561	203	0.0.0.5.0.0.0.0.0	synth with cache (only 1: induction n as [| k iHk]; only 1: intros l1 l2; only 1: now simpl; only 1: intros l1 l2; only 1: destruct l1 as [| x xs]; only 1: now rewrite 2!app_nil_l, <- minus_n_O; only 1: rewrite <- app_comm_cons; only 1: simpl; only 1: apply iHk).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40	40.043537	10477	2866
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40	40.106563	8596	2626
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	40	40.021875	4383	1705
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	40	0.142455	12	5	0.2.0	synth with cache (only 1: intros; only 1: rewrite add_comm; only 1: now rewrite add_sub_swap, sub_diag, add_0_l).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_lt_mono_r	40	0.033564	6	4	0.0.2.0	synth with cache (only 1: unfold lt; only 1: rewrite 2!(add_comm _ p); only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.fold_spec'	40	40.171559	63630	3025
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_2	40	40.118845	27079	3060
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	40	31.358523	5696	3395	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40	40.182123	70392	10080
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40	40.059986	16604	2575
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.add_diag	40	0.269084	8	3	0.4.1	synth with cache (only 1: rewrite two_succ; only 1: unfold succ; only 1: now rewrite Private_BootStrap.mul_add_distr_r, Private_BootStrap.mul_1_l).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_ind	40	40.189490	23137	2438
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_in'	40	40.254200	22681	4119
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_le_trans	40	40.058992	16768	3308
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	40	40.070028	18236	4934
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.or_clause_correct	40	40.041849	7116	1763
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40	40.025653	5936	1977
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_strorder	40	40.256317	41202	3822
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	40	40.066689	16209	3317
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.sqrt_spec	40	40.184923	12562	3947
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.shift_unshift_mod_2	40	40.034763	11654	1459
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	40	40.053690	14954	3241
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_le_mono_r	40	0.020676	5	3	0.2.0	synth with cache (only 1: unfold le; only 1: rewrite add_compare_mono_r; only 1: apply iff_refl).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_l	40	40.206474	6889	1466
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.compare_opp	40	1.886052	462	192	0.0.1.0.1.1.0.2.0.0.0.0.0.0.4	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite <- ?Pos.compare_antisym; only 1: trivial; only 1: trivial; only 1: trivial; only 1: simpl; only 1: apply Pos.compare_antisym).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.acos_1	40	40.039147	10286	1501
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_iff	40	40.047954	9499	3761
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.gcd_nonneg	40	0.207091	44	17	1	synth with cache (only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.union_spec'	40	40.059171	17756	2843
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.gt_lt_iff	40	40.037613	7446	2230
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.elements_spec2	40	40.282627	81291	2848
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_1	40	40.130461	45329	5459
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_total	40	40.191376	14383	5614
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.testbit_even_0	40	0.451146	483	36	2.2.24	synth with cache (only 1: induction a; only 1: split; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.is_empty_2	40	40.066797	21370	2613
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.pos_INR_nat_of_P	40	40.108019	37247	3649
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	40	40.070229	19311	3630
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.testbit_odd_0	40	0.015231	1	1	0	synth with cache (only 1: now destruct a).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	40	0.224234	49	24	0.0.0.0.0.0.1.0	synth with cache (only 1: intro s; only 1: unfold min_elt; only 1: case (M.min_elt s); only 1: simple destruct s0; only 1: intros; only 1: intuition; only 1: discriminate H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.ByteV2N_upper_bound	40	40.027795	7179	671
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	40	40.045828	10352	3671
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	40	40.067952	19572	3534
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Nat2Pos.inj_add	40	40.125997	20136	3411
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_lt_trans	40	40.200731	25595	3451
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.tan_incr_0	40	40.023257	5007	2896
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Nat2Pos.inj_mul	40	40.119257	20791	3441
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40	40.192808	31161	3545
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.filter_ok	40	40.058633	15748	2194
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40	40.062075	16203	2838
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	40	40.078936	18802	2700
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal	40	40.079807	20140	1127
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.or_clause_cnf_correct	40	40.043798	12669	1583
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.opp_eq_mul_m1	40	6.647973	1728	266	0.0.1.0.0.0.0.1.26	synth with cache (only 1: destruct n; only 1: nzsimpl; only 1: now f_equal; only 1: simpl; only 1: rewrite ?Pos.mul_1_r; only 1: trivial; only 1: simpl; only 1: rewrite ?Pos.mul_1_r; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40	40.084362	14147	4118
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	0.025040	3	3	0.0.0	synth with cache (only 1: rewrite sgn_null; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40	40.041691	8272	1754
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoLR_in	40	40.136317	46996	1737
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_1	40	40.041835	9780	3574
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_rst	40	9.479915	3415	1881	0.0.1.0.0.2.2.0.0.0	synth with cache (only 1: induction 1; only 1: constructor 2; only 1: constructor 4 with y; only 1: auto; only 1: case H; only 1: constructor 1; only 1: auto; only 1: constructor 3; only 1: constructor 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.eval_cnf_cons_iff	40	0.138730	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pos_mod	40	40.042470	11729	1613
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	40	40.089445	24055	5678
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.ggcd_gcd	40	40.217018	20348	3991
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_NotIn	40	40.225611	6942	1163
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	40	40.043682	9744	3090
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	40	40.054879	14896	3020
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n_iff	40	40.087675	23265	7374
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.gtb_ltb	40	40.068051	19789	2981
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	40	40.073695	19259	3632
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_ones_nonneg	40	0.546315	168	61	0.0.4.0.0.0.0.0.0	synth with cache (only 1: destruct (leb_spec 0 i), (ltb_spec i n); only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: now try order'; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.geb_leb	40	40.052188	13678	3062
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj	40	15.961142	8216	1617	1.21.0.0	synth with cache (only 1: intros; only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial; only 1: f_equal; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal2	40	40.067774	18793	1946
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_iff	40	0.045470	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: now apply Z2N.inj; only 1: intros; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_0	40	0.289856	63	8	0.11	synth with cache (only 1: Nat.bitwise; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_NoDup	40	40.069542	20527	4020
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	40	40.048926	13245	2725
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_pos	40	0.008339	3	1	2	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_neg	40	0.015967	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.leb_1	40	40.095239	18213	1751
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.empty_1	40	0.020570	8	1	7	synth with cache (only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Add	40	40.070441	21170	2311
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	40	40.026142	9483	782
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	40	40.075068	19752	4609
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_l_nil	40	40.082340	24373	4592
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	40	40.071038	21909	2933
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_le_0_reg_r	40	40.088932	32247	2981
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_pred_max	40	40.054314	16427	2124
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40	7.699514	946	422	0.0.4.3.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	40	0.275791	51	16	0.6.0	synth with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!even_spec; only 1: now rewrite Even_succ, Odd_succ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	40	21.003309	3208	1053	0.0.0.6.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: order; only 1: order; only 1: rewrite <- neq_mul_0; only 1: intuition; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_pred	40	40.127958	28043	4154
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40	40.054192	14625	3160
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.N2Bv_N2Bv_gen	40	40.061535	23581	1577
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	40	0.336086	77	21	0.7.0	synth with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!odd_spec; only 1: now rewrite Odd_succ, Even_succ).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40	35.854151	25938	2771	0.0.1.2.2.3.5.1.4.3.0.0.0.5.1.22.7	synth with cache (only 1: intro H; only 1: destruct n, m; only 1: Z.nzsimpl; only 1: intros Ha; only 1: Z.order'; only 1: easy || now destruct y; only 1: easy; only 1: intro LT; only 1: auto; only 1: now split; only 1: unfold Z.lt; only 1: simpl; only 1: easy || now destruct 1; only 1: trivial; only 1: simpl; only 1: easy; only 1: easy || now destruct y).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zgt_square_simpl	40	0.036305	3	2	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_2	40	40.134254	52245	4419
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.gtb_lt	40	40.054634	13072	3816
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40	40.058578	16941	2269
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.for_all_spec	40	40.075512	22882	3251
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoRL_in	40	40.132318	45494	1675
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_min	40	40.074407	17872	3282
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	18.627149	68526	1529	0.0.0.107	synth with cache (only 1: compute; only 1: intros; only 1: case (M.elements s); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.GEN_DIV.Ztriv_div_th	40	40.069975	25135	1262
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.splitat_append	40	40.263904	23935	3104
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.eval_cnf_cons	40	8.246056	1505	479	1.0.0.0.0.0.1.0.2.1.2	synth with cache (only 1: unfold eval_cnf; only 1: intros; only 1: unfold eval_clause; only 1: generalize nil as acc; only 1: induction f; only 1: simpl; only 1: intros; only 1: tauto; only 1: intros; only 1: simpl; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.append_splitat	40	40.128408	24654	3982
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_le_mono_l	40	10.724830	3742	1259	4.0.0.8.3	synth with cache (only 1: revert p q r; only 1: intros a b Ha; only 1: unfold le; only 1: rewrite add_compare_mono_l; only 1: easy || now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.id	40	0.011884	2	1	1	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_Zgcd	40	40.067536	24022	2168
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_m1_mul_r	40	40.050171	10891	5038
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj	40	0.009028	1	1	0	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	40	0.014890	2	2	0.0	synth with cache (only 1: apply log2_up_eqn0; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_add	40	40.070210	18767	1662
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_iff	40	0.032875	3	3	0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_succ_l	40	40.155639	17157	4008
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	40	40.058395	15205	4223
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.is_pos	40	0.023670	5	1	4	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_1	40	0.008121	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.is_nonneg	40	0.050446	8	1	7	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_pos_pos	40	40.081540	6844	761
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_xO	40	0.112706	4	2	0.2	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0.027685	2	2	0.0	synth with cache (only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_succ	40	0.016144	3	2	1.0	synth with cache (only 1: rewrite <- Pos.add_1_r; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_add	40	0.015202	2	2	0.0	synth with cache (only 1: simpl; only 1: now rewrite Pos.add_comm).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_lt_mono_r	40	0.098702	28	15	0.0.0.3	synth with cache (only 1: rewrite 2!(mul_comm _ p); only 1: unfold lt; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40	40.220373	85604	11425
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	40	0.843396	148	71	0.0.0.0.1.2.0	synth with cache (only 1: intro s; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.INR_lt	40	40.102587	37153	3876
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_max	40	40.120474	34159	4840
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_trans	40	40.059964	17838	2984
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.xexists_spec	40	40.093962	31986	3486
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_mul	40	2.897077	885	256	0.0.0.0.0.3.0.3.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.geb_le	40	40.041299	9377	3421
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_pred	40	0.382086	185	50	0.3.0.0.3	synth with cache (only 1: destruct p; only 1: intros; only 1: trivial; only 1: trivial; only 1: now destruct 1 || intros _).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_mul	40	0.010806	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_pos_appart_zero	40	40.169094	12677	2056
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.can_mono_in	40	40.117545	40596	1442
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.inter_s_m	40	40.057433	17213	1234
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40	40.052461	11294	2574
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	40	40.052057	9434	3262
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.filter_subset	40	0.089356	3	3	0.0.0	synth with cache (only 1: intros f Hf s s' Hs a; only 1: rewrite !filter_spec, Hs by auto; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	40	3.703976	484	273	1.2.3.0	synth with cache (only 1: intros a b n Hn; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	40	40.046796	11935	2806
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.gtb_spec	40	40.038311	7827	2102
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	40	40.034090	8703	2826
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.filter_spec	40	40.018230	3614	1305
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_add	40	5.647819	2314	625	0.0.0.0.1.7.0.3.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: simpl; only 1: intro H; only 1: intros; only 1: apply Pos2Nat.inj_add; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_antisym	40	40.096376	28539	5645
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	40	40.058197	18132	2438
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	40	40.079273	17227	3592
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.le_INR	40	40.049878	14788	3304
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_le_mono_l	40	0.019096	7	3	0.4.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_le_mono_r	40	0.019004	7	3	0.4.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_pow	40	0.011177	1	1	0	synth with cache (only 1: now apply Pos.iter_swap_gen).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_square	40	0.020072	3	2	1.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.IZN	40	0.454155	208	35	0.1.0.9	synth with cache (only 1: intros x IH; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_compare	40	0.011705	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	40	40.305943	125335	4066
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_leb	40	0.018534	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.testbit_odd_succ	40	9.158885	2397	724	1.0.0.0.0.0.0.3.0.3.1	synth with cache (only 1: nzsimpl; only 1: destruct n; only 1: now destruct a; only 1: destruct a as [| a]; only 1: intros _; only 1: simpl; only 1: trivial; only 1: discriminate || intros _; only 1: simpl; only 1: f_equal; only 1: apply Pos.pred_N_succ).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0.022754	2	2	0.0	synth with cache (only 1: unfold Pos.ltb, Pos.lt; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.absurd_set	40	0.013860	3	3	0.0.0	synth with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40	40.044507	9985	3300
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.diveucl_21_spec_aux	40	40.061452	20950	1793
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_eqb	40	0.006446	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	40	1.905740	319	125	0.0.0.0.6	synth with cache (only 1: intros a b Hb Hab; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now rewrite mul_comm; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.testbit_even_succ	40	0.041933	4	4	0.0.0.0	synth with cache (only 1: intros H; only 1: rewrite testbit_succ_r_div2 by trivial; only 1: f_equal; only 1: now destruct a).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.testbit_neg_r	40	0.031811	5	1	4	synth with cache (only 1: now induction n).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	40	40.030109	6792	1354
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_commutes2	40	40.056991	15480	3159
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_r	40	40.001272	134	24
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction'	40	38.195341	21661	3540	0.0.32.0.0.0.1.0.0	synth with cache (only 1: intros L R n; only 1: destruct (lt_trichotomy n z) as [H| [H| H]]; only 1: apply L; only 1: now apply lt_le_incl; only 1: apply L; only 1: now apply eq_le_incl; only 1: apply strong_right_induction; only 1: assumption; only 1: now apply lt_le_incl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40	40.216555	34305	2014
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	40	40.103350	37724	3145
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40	40.069210	23544	2184
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40	40.021412	7624	667
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_mult_Zodd	40	40.107690	42940	3077
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction'	40	40.096869	35141	3527
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	40	6.207320	1265	513	0.0.0.0.0.0.0.0.0.1.1.0	synth with cache (only 1: intros s x y; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: unfold For_all; only 1: simple destruct s0; only 1: intros; only 1: injection H; only 1: intros; only 1: subst; only 1: firstorder; only 1: intros; only 1: discriminate H).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	40	7.317043	1031	424	0.1.0.0.0.1.1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: tauto; only 1: tauto; only 1: tauto; only 1: rewrite <- neq_mul_0; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.add_2	40	0.040156	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.EqualityModulo.Zplus_eqm	40	40.057258	20299	1829
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	40	40.247261	47041	3054
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	40	0.345821	24	15	1.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.remove_incl	40	40.084249	26102	3276
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_equivlistA2	40	40.075466	22685	4113
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40	40.059693	17282	3069
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	40	40.050763	14132	2520
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_partorder	40	40.057290	17147	3222
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_sqrt	40	0.025067	4	2	0.2	synth with cache (only 1: unfold Z.sqrtrem, Z.sqrt, Pos.sqrt; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_gcd	40	0.006385	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	40	40.071681	19829	4305
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	40	40.060788	13578	6322
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.incl_map	40	40.069431	23782	2725
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	40	40.056344	14704	2750
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_add_r	40	0.021456	2	2	0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: now exists q).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.leb_compat	40	40.090475	10513	1426
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	40	40.047058	11919	3239
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_r	40	40.292955	11272	2104
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.inter_list_ok	40	40.070802	19687	3143
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.removelast_firstn_len	40	9.435215	7440	1091	2.0.0.0.14.4.0.2.2	synth with cache (only 1: intro; only 1: induction l as [| ? ? H]; only 1: now simpl; only 1: simpl; only 1: destruct l as [| x xs]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.MapsTo_1	40	40.092069	29640	2549
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Combining.combine_nil	40	0.024020	5	4	0.0.1.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_nil	40	40.078006	23846	7139
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	40	40.090884	21417	6491
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40	40.019914	6071	528
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.linear_inter_ok	40	40.067192	9371	2611
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Combining.combine_firstn_l	40	0.892830	219	96	2.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: destruct l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40	6.251650	5698	523	0.0.0.8.23.1	synth with cache (only 1: intro n; only 1: unfold lcm; only 1: nzsimpl; only 1: rewrite abs_eq; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.EqualityModulo.Zminus_eqm	40	40.183174	22539	2465
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	40	0.045833	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto using eq_refl, le_refl; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	40	0.166546	30	14	0.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: exists n; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	40	0.109282	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: apply divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	40	0.109446	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.acos_opp	40	40.025691	6520	2173
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_gcd	40	40.067080	23067	2492
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.mem_1	40	40.050507	14301	1104
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40	40.052258	13595	1918
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.div2_phi	40	40.050570	15587	1704
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.inter_ok	40	40.063077	18047	1576
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_1	40	16.051603	4866	1087	0.0.3.1.1.7.2.6	synth with cache (only 1: intros x l' H H0; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eapply SortA_InfA_InA; only 1: eauto with *; only 1: eauto with *; only 1: solve_proper; only 1: eauto with *; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	40	40.055985	14959	2784
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_length_le	40	40.076078	23288	4592
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.fold_spec	40	40.115108	40367	3331
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.BijectionsTheory.bij_can_bij	40	40.333927	135207	4267
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	40	40.057840	12685	4124
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	40	40.095441	27654	4932
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec1	40	40.218060	46854	5240
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.testbit_odd_0	40	40.174587	33032	3057
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40	11.768177	2339	668	1.0.1.9.0.0.0.0.1.0.0.1.1	synth with cache (only 1: rewrite <- (pow_1_r 2); only 1: apply log2_up_unique; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: split; only 1: apply pow_lt_mono_r; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite one_succ; only 1: nzsimpl; only 1: apply lt_succ_diag_r; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40	40.078278	23106	2751
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_inter_iff	40	40.054059	13498	4540
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.add_1	40	40.072895	23848	3400
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	40	40.049457	12536	3433
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	40	40.061587	17298	3172
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40	40.042481	11125	2772
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	40	40.041378	11560	2105
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40	7.565464	15903	173	0.176	synth with cache (only 1: compute; only 1: now rewrite recursion_0).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	40	40.043467	11728	1939
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40	15.441317	6189	877	0.17.10	synth with cache (only 1: intros p n m; only 1: rewrite add_comm; only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Combining.combine_firstn_r	40	4.512127	2558	655	0.0.0.0.0.1.0.0.0.0.7.0	synth with cache (only 1: induction l as [| x l IHl]; only 1: destruct l'; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: intros l'; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: simpl; only 1: specialize IHl with (l' := l'); only 1: rewrite <- IHl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.add_2	40	40.046592	9981	1598
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	40	40.056648	15202	2494
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.ggcd_correct_divisors	40	40.105825	38979	2580
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.mem_2	40	40.135893	50703	3966
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neq_0	40	40.071609	22386	2986
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_compare_mono_l	40	40.058220	13821	4247
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_m	40	40.253009	8830	1862
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	40	40.097825	13487	3654
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.add_reg_l	40	40.052722	15401	2387
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.testbit_even_0	40	40.175118	31381	2422
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40	40.067620	15832	2065
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_0	40	40.042007	10684	4069
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	40	40.177151	21120	3328
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.exists_spec	40	40.079838	26641	2585
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_NoDupA	40	40.163063	18508	4139
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40	40.049407	9801	4677
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.gcd_divide_l	40	40.227532	29803	2050
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40	40.069015	7384	2705
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_app_2	40	40.073440	20882	4485
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PSubstL_ok	40	40.038532	12562	1511
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Add.Add_in	40	3.639608	1247	361	5.0.5.0.0.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: intuition; only 1: simpl in *; only 1: intros; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.partition_spec2	40	0.379442	33	8	0.0.5	synth with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_firstn	40	40.111988	37721	4993
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.elements_split	40	40.081388	22780	3575
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	40	40.086157	17595	4693
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_add2	40	40.076526	25508	3656
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Add.Add_length	40	0.364567	87	33	2.0.0.2.1.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: split; only 1: simpl in *; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	0.029015	5	5	0.0.0.0.0	synth with cache (only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	40	40.048127	12496	3125
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_skipn_comm	40	40.075885	22943	4234
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40	40.049832	14002	1904
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_fold	40	40.084295	29927	2652
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.skipn_firstn_comm	40	40.079632	24923	4056
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_lt_or_eq	40	40.059042	17953	3140
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40	40.102800	10710	1908
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.add_3	40	40.056244	16289	2720
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	40	40.052619	12377	3462
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.mul_reg_l	40	34.055897	16749	2589	3.2.30	synth with cache (only 1: destruct (min_spec n m); only 1: apply mul_cancel_l; only 1: apply mul_cancel_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.EqualityModulo.Zmult_eqm	40	40.072422	14368	1785
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.fold_remove_ok	40	4.911066	1333	516	7.1.0.0.0.0.0	synth with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: unfold flip in *; only 1: ok).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.linear_inter_spec	40	40.088766	26789	4159
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	40	40.052030	14991	2219
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_correct	40	40.047749	12609	2794
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec1	40	40.047974	9470	2403
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	40	40.066487	19214	2915
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	40	7.329764	1275	274	0.14	synth with cache (only 1: unfold clearbit; only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.subsetl_spec	40	40.041744	11718	1716
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	40	40.100277	20596	4118
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_1	40	40.030397	6991	3294
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40	40.081139	21561	3657
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40	40.038790	9154	2160
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.xelements_spec	40	40.102739	18883	3988
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_Empty	40	40.076364	26337	2458
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	40	40.130610	46865	3436
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	40	40.056299	15902	3663
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_inter_nodup	40	40.062660	19334	4130
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	40	13.303833	2285	561	0.0.1.4.11	synth with cache (only 1: unfold Basics.flip, respectful; only 1: unfold clearbit; only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	40	11.272080	5981	706	0.0.3.19.0.5.0.1	synth with cache (only 1: intros A B SetoidFunChoice T Hexists; only 1: destruct SetoidFunChoice with (R := eq) (T := T) as (f, Hf); only 1: intuition; only 1: intro x; only 1: abstract now inversion 1; only 1: firstorder; only 1: exists f; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Nat2Pos.inj_compare	40	40.067691	20351	4778
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_compare_mono_r	40	40.200007	19464	5408
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.filter_equal	40	40.036410	12419	1240
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec2	40	40.175317	34317	2711
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_skipn	40	40.079888	24917	5899
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_1_r	40	0.208853	46	19	9	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.pred_sub	40	0.008807	1	1	0	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40	40.061170	16926	2738
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.eq_equiv	40	0.217892	567	27	33	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40	2.104802	305	151	0.0.1.4	synth with cache (only 1: intros a b Hb Hab; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_testbit	40	2.355957	1007	243	0.6.0.1.0.1.6.0	synth with cache (only 1: intro Hn; only 1: destruct n as [| n| n]; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct Hn).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	40	40.061049	9332	1755
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.gcd_greatest	40	40.067616	19261	3794
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_neg	40	0.009051	1	1	0	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_neg_iff	40	0.028467	3	3	0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_pos	40	0.009200	1	1	0	synth with cache (only 1: now injection 1).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40	40.038251	9028	1910
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.030741	4	4	0.0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Pcond_Fnorm	40	40.003581	184	31
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.neg_is_neg	40	0.021121	5	1	4	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.neg_is_nonpos	40	0.034905	13	3	3	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.pos_is_pos	40	0.007027	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0.026119	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.neg_le_pos	40	0.017573	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.neg_lt_pos	40	0.009424	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	40	40.161599	62710	4513
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	0.367560	70	19	1.2.0.2	synth with cache (only 1: nzinduct m; only 1: now nzsimpl; only 1: intro; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.gtb_compat	40	40.148152	14257	1908
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	0.031372	2	2	0.0	synth with cache (only 1: intros; only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls_ls'	40	40.171184	29638	3971
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_add_diag_r	40	40.066022	14486	6386
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.not_0_INR	40	40.044574	10565	1964
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_1	40	24.643842	14356	1530	0.0.35	synth with cache (only 1: intro H; only 1: rewrite <- cardinal_Empty; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_lt_mono_l	40	40.081284	16816	4959
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40	40.046866	13554	1941
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.elements_1	40	40.134760	44727	3649
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	40	40.081530	4724	401
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_pos	40	0.045262	4	4	0.0.0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: intros (r, Hr); only 1: exists r; only 1: now apply sub_mask_pos_iff).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.MapsTo_1	40	26.119957	14214	2645	2.0.0.0.0.0.0.0.1.0.0.0.0.17.0	synth with cache (only 1: intros m x y e; only 1: reduce; only 1: apply InA_eqA with (x, e); only 1: split; only 1: eauto; only 1: eauto; only 1: red; only 1: unfold Raw.PX.eqke; only 1: intuition; only 1: eauto; only 1: congruence; only 1: unfold Raw.PX.eqke in *; only 1: simpl in *; only 1: intuition congruence; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_FEeval_PEeval	40	40.001261	159	25
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	40	40.040311	7432	4246
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head00	40	40.396641	8232	1761
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_skipn_rev	40	40.096307	30732	4109
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec1'	40	40.116471	45972	1340
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	40	40.082100	10890	4594
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec2'	40	0.059966	6	6	0.0.0.0.0.0	synth with cache (only 1: induction s as [| h l Hl x r Hr]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Hl, <- Hr; only 1: now destruct (partition f l), (partition f r), (f x)).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1_inv	40	40.075661	17938	2848
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_rev	40	40.031278	6600	2016
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	40	40.105992	34369	2784
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Q_dec	40	40.059978	15128	3938
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.not_INR	40	40.056283	14675	4140
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.skipn_rev	40	40.027718	5748	2247
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail00	40	0.083524	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	40	4.745689	1349	484	0.0.4.1.0.4	synth with cache (only 1: intros a b Hb Hab; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: rewrite !(add_comm a); only 1: reflexivity; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	40	40.038569	7014	1412
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_cons_iff	40	0.060638	4	4	0.0.0.0	synth with cache (only 1: split; only 1: inversion_clear 1; only 1: now split; only 1: now constructor).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.remove_2	40	0.365739	45	28	0.0.0.1	synth with cache (only 1: intros; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	40	40.162294	17432	4477
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_lt_mono	40	40.087000	26257	4161
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.empty_1	40	2.103127	1951	292	0.0.1.6.7.20	synth with cache (only 1: intros H; only 1: simpl in *; only 1: intro n; only 1: unfold Raw.empty; only 1: intro abs; only 1: inversion abs).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	40	40.055671	13161	3043
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	40	40.059707	13830	4677
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.Bezout_wd	40	40.079139	4162	809
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40	40.128216	43947	9286
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	40	40.057075	13501	3259
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.removelast_firstn	40	40.048786	13452	3268
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.subsetr_spec	40	40.037028	6749	2130
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_map	40	40.245731	6587	988
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_le_dec	40	40.070584	22594	3032
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2b	40	10.908607	6181	1044	0.0.0.0.0.0.0.6.7.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite M.cardinal_1 in *; only 1: generalize (elements_mapsto_iff m); only 1: destruct (elements m); only 1: simpl in *; only 1: now elim H; only 1: exists p; only 1: rewrite H0; only 1: destruct p; only 1: simpl; only 1: constructor; only 1: red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40	40.074815	17220	5336
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40	1.003989	88	50	0.0.1.0.2	synth with cache (only 1: intros a b c; only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	40	40.116136	32169	7507
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	40	1.186580	167	80	1.1.2.0.0.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: rewrite !(mul_comm a); only 1: now rewrite mul_comm; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.head031_equiv	40	41.824791	5121	1045
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_le_mono	40	40.071181	20953	3437
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.add_compare_mono_l	40	40.067557	18449	2344
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	40	40.046670	12304	1924
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1	40	40.286232	54451	4177
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.acos_inv_sqrt2	40	40.037044	11510	1693
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_r	40	40.084463	8197	2739
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_mod_pow2	40	40.044435	13230	833
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_nz	40	40.150666	12875	2179
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec3	40	40.177856	60221	2676
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.remove_1	40	40.058632	10817	1594
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	40	40.029341	5522	2932
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.INR_eq	40	40.078074	24431	3978
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.testbit_succ_r_div2	40	40.171913	13711	2853
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	40	40.061423	19831	2805
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_compare_mono_l	40	40.066293	16608	4637
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.INR_le	40	40.083133	27380	4034
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	40	40.091014	36740	1734
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40	40.090985	27084	3561
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.tan_incr_1	40	40.025264	5603	2997
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Nat2Pos.inj_sub	40	40.153328	31654	3894
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.mem_proper	40	40.047343	5264	1514
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40	40.065468	17506	3812
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Nat2Pos.inj_min	40	40.145914	25494	5543
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_compare_mono_r	40	40.055979	14223	5016
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	40	1.945696	210	100	0.1.0.1.2	synth with cache (only 1: intros a b c; only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_min	40	27.052552	12774	2799	0.23.0.2	synth with cache (only 1: unfold Pos.min; only 1: rewrite Pos2Nat.inj_compare; only 1: unfold Z.le, Z.min; only 1: now case Z.compare_spec).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	40	2.307907	1867	392	0.0.0.0.0.0.0.0.1.12	synth with cache (only 1: apply min_case_strong; only 1: intros x y H [E| E]; only 1: left; only 1: rewrite <- H; only 1: auto; only 1: right; only 1: rewrite <- H; only 1: auto; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.bInjective_bSurjective	40	40.205069	33857	3525
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.for_all_spec	40	40.051299	15455	2231
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	40	40.061047	16751	2762
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	0.016851	5	2	3.0	synth with cache (only 1: unfold Pos.le, Pos.sub; only 1: easy').
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_ones	40	40.100141	33006	2726
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.pos_lt_pos	40	0.030614	8	2	6.0	synth with cache (only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40	40.067864	14365	3052
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.neg_xO	40	0.019315	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	40	15.581854	9865	1650	0.0.1.13.0.0.0.0.1.0.6.0	synth with cache (only 1: rewrite <- (mul_1_l 1)  at 1; only 1: rewrite sqrt_up_eqn; only 1: rewrite sqrt_pred_square; only 1: apply (lt_succ_pred 0); only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: rewrite <- (add_0_l 0); only 1: nzsimpl; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40	40.119476	27121	4276
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0.020975	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.pos_xO	40	0.010529	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0.020447	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.opp_neg	40	0.018882	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0.010994	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	40	40.042200	10514	3092
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.add_neg_neg	40	0.006941	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	40	1.285164	143	58	0.0.0.2.0.0.0.0	synth with cache (only 1: intros a b c Hb Hc; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.add_pos_neg	40	0.027980	4	1	3	synth with cache (only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.add_neg_pos	40	0.021594	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_trans	40	40.131611	45199	6847
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.or_cnf_correct	40	40.035355	10061	1936
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.add_pos_pos	40	0.011435	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Equal_cardinal	40	40.084408	27931	3428
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40	40.063649	17873	3022
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	40	21.658850	7315	1187	0.12.14	synth with cache (only 1: intros p n m; only 1: rewrite add_comm; only 1: now rewrite (sub_le_mono_r _ _ p), add_simpl_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	40	40.034064	6774	1973
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	40	40.079373	22952	3527
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_sym	40	40.150057	47620	9160
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head0	40	40.271382	7720	1966
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_2	40	40.060668	17961	3953
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40	40.044909	9439	2101
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	4.163992	829	314	1.1.4.1.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: rewrite !(add_comm a); only 1: reflexivity; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40	3.473053	795	393	1.2.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n m Hn; only 1: split; only 1: intros EQ; only 1: apply lcm_unique_alt; only 1: trivial; only 1: intros q; only 1: split; only 1: split; only 1: now transitivity m; only 1: trivial; only 1: now destruct 1; only 1: intros EQ; only 1: rewrite <- EQ; only 1: trivial using divide_lcm_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	40	4.828426	1377	593	1.0.0.0.0.0.1.0.8	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: exists 0; only 1: now nzsimpl; only 1: exists 1; only 1: now nzsimpl; only 1: intro; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	40	0.037480	7	6	0.1.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	40	40.051002	14430	2707
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_1	40	40.079757	26948	1295
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.testbit_pos	40	0.009879	1	1	0	synth with cache (only 1: apply Z.testbit_Zpos).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.leb_compat	40	40.056020	5623	3203
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	40	16.182414	4298	1067	0.5.13.0	synth with cache (only 1: intros n m p; only 1: revert n m; only 1: symmetry; only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	40	0.374330	62	35	0.0.0.1.0.1.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: apply lt_le_incl, lt_0_1; only 1: apply divide_refl; only 1: exists n; only 1: now nzsimpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	40	0.108536	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_1	40	40.133730	51221	2328
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	40	0.090386	7	6	0.0.0.0.1.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zlt_square_simpl	40	40.072448	26296	2192
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mon_of_pol_ok	40	40.018769	5717	1183
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_2	40	40.081546	28287	2781
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_succ	40	40.075856	26088	3684
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	40	40.049268	13207	2376
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.N2Bv_Bv2N	40	40.087664	27192	2869
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	40	40.057133	15303	2559
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.GEN_DIV.Ntriv_div_th	40	40.032318	8859	2695
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.partition_filter	40	40.132441	47184	3377
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_sub	40	40.084803	26787	3966
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_lt_mono_l	40	40.061437	15075	5183
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.eq_mul_1	40	40.044438	11081	2527
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zgcd_div_swap0	40	40.052376	19981	1549
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.Forall_impl	40	40.187509	47232	3996
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.add_2	40	25.257283	12485	1646	1.15.9.1.0	synth with cache (only 1: intros m x y e e'; only 1: generalize y, e; only 1: intros; only 1: simpl_relation; only 1: eauto using add_2, add_3).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.or_cnf_opt_correct	40	40.036032	9643	2127
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.Forall_forall	40	40.260358	24490	8029
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_sub	40	40.061163	19055	4512
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_sub_max	40	40.068030	20615	3572
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_lt_mono	40	40.087229	25050	4829
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.not_1_INR	40	40.030885	6863	1779
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.add_1	40	40.174177	68598	4777
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40	40.278170	120227	8521
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qarchimedean	40	40.112372	45236	1200
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_pred	40	40.054371	18747	2257
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_compare	40	40.101077	36331	3721
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_pow_pos	40	40.072833	21324	2670
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.partition_spec1	40	40.073384	23337	3396
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.singleton_2	40	0.324243	180	43	0.1.7.0	synth with cache (only 1: unfold singleton; only 1: intros; only 1: case (M.singleton x); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.abs_nat_spec	40	0.018959	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.abs_nat_nonneg	40	0.030548	2	2	0.0	synth with cache (only 1: intros; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40	13.565842	2803	727	0.0.3.0.0.1.1.1.3.1.0	synth with cache (only 1: intros n m p; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: rewrite add_comm; only 1: apply add_move_l; only 1: rewrite <- 2!add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: rewrite opp_succ, opp_pred; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	40	40.070001	21466	3585
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.filter_ext	40	40.038684	5979	2573
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_le_reg_l	40	40.235006	31059	2428
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	40	40.057889	15872	2635
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	40	40.049484	12724	3396
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_le_reg_r	40	40.085925	25752	3020
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_le	40	40.079103	26481	4252
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	40	40.033501	9938	1613
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40	10.230771	7798	683	2.0.22.17.1	synth with cache (only 1: intros; only 1: set (m := max x y) in *; only 1: apply max_mono; only 1: eauto with *; only 1: eauto with *).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.id	40	0.029786	5	4	0.0.0.1	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_le_mono	40	40.082834	22286	4394
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0.006313	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_pos	40	0.010147	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0.020298	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zeq_plus_swap	40
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.INR_IPR	40	40.065175	20475	3265
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_minus_le_0	40	0.008725	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	40	2.072571	447	117	2.10.0	synth with cache (only 1: intros n m p; only 1: rewrite add_comm; only 1: apply add_add_simpl_l_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	40	32.868404	5971	1100	0.0.0.0.0.17.1	synth with cache (only 1: intros a a' Ha n n' Hn; only 1: unfold setbit; only 1: destruct (le_ge_cases n 0) as [H| H]; only 1: pose proof H as H'; only 1: now rewrite <- 2!shiftr_opp_r, Ha, Hn; only 1: pose proof H as H'; only 1: now rewrite <- 2!shiftr_opp_r, Ha, Hn).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.exists_spec	40	40.053689	16084	2703
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.add_1	40	33.871074	32226	2683	0.0.0.0.2.4.8.9.1.17	synth with cache (only 1: intros (e, abs); only 1: intros; only 1: apply find_2; only 1: simpl; only 1: rewrite ?add_find, ?bal_find; only 1: destruct X.compare; only 1: order; only 1: auto using find_1, add_1 with ordered_type; only 1: order; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40	40.058758	15703	3952
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_max	40	40.079356	23481	4433
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	40	40.039252	8708	2948
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	40	0.030354	6	5	0.1.0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: destruct H1 as [H1| H1]; only 1: false_hyp H1 H2; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.shiftr_succ_r	40	40.233411	19921	2877
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.add_3	40	38.998200	25021	5311	0.0.0.0.15.0.12	synth with cache (only 1: unfold not; only 1: intros s x y; only 1: intro H; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_1	40	0.022554	2	2	0.0	synth with cache (only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.InA_dec	40	40.049323	11824	1789
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	40	40.040232	7204	3794
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.div2_spec	40	0.018785	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	0.135091	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.union_2	40	0.113944	22	13	0.0.0.0.0.1.0	synth with cache (only 1: intros s s' x; only 1: intuition; only 1: unfold union; only 1: case (M.remove x s); only 1: firstorder; only 1: case (M.union s s'); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls'_ls''	40	40.124471	39789	3828
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.030954	4	4	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zlt_0_minus_lt	40	40.088726	27039	5425
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.id_abs	40	3.535563	1760	441	1.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.18	synth with cache (only 1: destruct n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	40	1.884797	1453	138	0.0.19.4	synth with cache (only 1: intros x x' Hxx'; only 1: apply min_mono; only 1: congruence; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	40	40.069188	17413	5491
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.lbase	40	40.043786	14527	2359
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.EqualityModulo.Zopp_eqm	40	40.147843	20075	3086
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	40	40.096712	31311	3684
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	40	40.276731	36117	4518
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.interp_PElist_ok	40	40.024618	9033	994
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_crossproduct	40	40.013301	94	24
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_filter	40	40.084632	30499	3221
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	40	40.070930	21507	2912
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_divide	40	40.067453	17606	4243
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	40	12.279783	4269	1140	1.10.3	synth with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_removelast	40	40.048606	11727	3772
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	40	40.064651	18811	3361
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40	40.023641	5097	2644
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_not_add_l	40	40.057975	14561	4504
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_add	40	2.187584	664	223	0.0.0.0.1.1.0.1.0.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros Hn Hm; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: now destruct 1 || now destruct 2).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	40	40.083507	6146	2921
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_succ_double	40	0.028580	1	1	0	synth with cache (only 1: now destruct x).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add	40	40.030710	5340	2805
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40	40.082354	23770	3862
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40	40.064728	17216	3334
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	40	1.492985	154	72	1.0.1.0.0.0.1	synth with cache (only 1: intros a b c Hb Hc; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: now apply div_mod).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40	40.040819	11087	2212
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2_inv	40	40.247834	17760	1743
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_2	40	40.074927	27434	2287
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.elements_2	40	40.073461	23198	4011
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	40	0.189711	48	24	1.0.1.0.1.0	synth with cache (only 1: intros n m H1 H2; only 1: apply mul_le_mono_nonneg; only 1: order; only 1: assumption; only 1: order; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40	40.060267	17055	2987
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2	40	40.109587	38778	4439
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40	40.085121	20440	6555
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.inter_spec	40	40.061108	16784	3228
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Combining.combine_firstn	40	40.069287	17293	5851
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_InA	40	40.074885	24739	4379
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	40	15.415221	5956	1525	3.7.0.4.5.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with (a mod b); only 1: now apply mod_always_pos; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.EqualityModulo.Zmod_eqm	40	40.071675	22925	5945
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_ok	40	40.001224	91	30
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	40	40.074664	15134	2976
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.norm_subst_ok	40	40.014416	3775	1176
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Add.Add_app	40	40.047740	11766	747
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	40	0.043115	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zgcd_div_swap	40	40.050654	12233	4824
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40	40.064501	13960	2785
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.acos_bound	40	40.029175	5051	2127
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	40	27.232411	7918	1797	0.24	synth with cache (only 1: symmetry; only 1: now rewrite (sub_le_mono_r _ _ p), add_simpl_r).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	38.830598	12669	3368	0.0.1.17.1	synth with cache (only 1: rewrite <- compare_le_iff; only 1: case leb_spec0; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff; only 1: rewrite <- compare_le_iff; only 1: easy || now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_2	40	40.078558	7281	1675
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	40	40.061950	13884	4667
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40	40.054657	13446	2458
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Involutions.inv_inj	40	40.216826	83745	10592
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.testbit_even_succ'	40	40.157682	21321	3887
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec1	40	40.214277	51833	4140
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	40	40.055044	13921	3724
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Involutions.inv_bij	40	0.321649	399	41	3.3.18	synth with cache (only 1: exists f; only 1: by [  ]; only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Add.Add_split	40	40.071921	21632	4668
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.testbit_neg	40	16.577340	6757	1618	10.2.0.0.0.3.4	synth with cache (only 1: unfold Z.testbit; only 1: destruct n; only 1: intro Hn; only 1: now destruct a as [| [| | ]| ]; only 1: now destruct 1 || intros _; only 1: trivial; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.diff_inter_ok	40	40.069699	20486	3364
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_diff_intro	40	40.273771	4564	1954
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.subset_spec	40	40.076655	24484	2962
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.remove_2	40	40.058101	17320	2598
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	40	40.103814	24464	4179
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.elements_1	40	0.008106	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	40	40.262956	6837	954
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.elements_2	40	0.022729	2	2	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40	40.056059	15803	3078
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40	40.047226	10660	4903
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.remove_3	40	40.039812	8336	1389
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40	40.050953	12601	1785
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt2_spec	40	40.059293	20007	1757
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	40	40.056268	16097	2934
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.shiftl_succ_r	40	40.194389	18617	1600
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	40	7.480526	4896	595	14.1.12	synth with cache (only 1: intro RS'; only 1: intros; only 1: now apply mul_lt_mono_nonneg).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.add_3	40	40.038203	11117	1580
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_neg_pos	40	40.069153	18982	2283
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.elements_3	40	2.421189	5281	283	0.4.42	synth with cache (only 1: destruct m; only 1: simpl in *; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.cardinal_1	40	0.024316	7	2	5.0	synth with cache (only 1: intros m; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.pow_gt_1	40	40.100447	31497	4564
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.shiftr_specif	40	40.091783	10174	5618
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2	40	40.210200	18381	3532
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40	40.127661	31072	5617
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	40	40.051970	11360	4277
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.shiftl_specif_high	40	40.142987	16666	4043
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.bezout_1_gcd	40	40.069022	20200	4012
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	40	0.139678	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_3	40	40.286945	5927	872
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	40	40.065771	7907	2432
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubstL_ok	40	40.016603	4441	1359
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.shiftr_spec	40	40.165245	13837	3282
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40	40.067525	20973	3727
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40	1.464371	844	151	9.1.0.1.7	synth with cache (only 1: inversion 1; only 1: invrb; only 1: auto; only 1: invrb; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Add.Add_inv	40	40.105823	36220	5825
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	40	40.023209	4373	1135
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40	40.104372	32662	3133
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	40	40.051953	12428	3621
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Add.incl_Add_inv	40	40.103441	36175	5130
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	40	40.058005	8006	1473
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_NoDupA	40	40.071789	22440	4189
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qopp_le_compat	40	40.072175	22465	3643
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_2	40	1.024475	342	63	0.2.10.0	synth with cache (only 1: inversion_clear 1; only 1: induction 1; only 1: eauto with ordered_type; only 1: eauto with *).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.find_1	40	40.088737	29215	2921
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_Add	40	40.105875	35378	6437
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.mem_1	40	40.072993	23535	3837
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	40	8.665880	2754	990	0.0.0.3.2.0.0.0.1.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40	40.083437	27007	3301
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_remove	40	40.107477	36673	5036
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_remove_1	40	40.074145	22221	5501
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_Zdiv	40	40.049108	12587	2010
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.diff_ok	40	40.063899	17906	2826
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40	40.023369	4917	2055
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	40	40.050344	13229	3206
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40	40.036250	9505	2059
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	3.292044	663	273	1.0.0.0.6.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	40	40.039386	9088	2537
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.find_2	40	5.442414	5350	543	2.9.26	synth with cache (only 1: intros y1 y2 Hy1 Hy2; only 1: apply L.find_2; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec2	40	40.029846	4205	1804
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40	40.045723	11840	2350
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_3	40	2.839602	710	184	0.0.7.0.0.2	synth with cache (only 1: unfold eqk, eqke; only 1: intuition; only 1: simpl in *; only 1: invlist InA; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	40	40.071827	19813	1628
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.filter_iff	40	40.143146	13166	1368
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40	40.025145	5479	2004
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40	40.117552	43967	3084
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_diff_elim1	40	40.244450	3661	1563
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	40	40.037434	9152	2835
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.negbE	40	3.046271	651	106	19	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40	40.053984	7016	908
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.Z_oddE	40	0.019265	3	2	0.1	synth with cache (only 1: rewrite Zmod_odd; only 1: now destruct Z.odd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.Z_evenE	40	0.021381	2	2	0.0	synth with cache (only 1: rewrite Zmod_even; only 1: now destruct Z.even).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Nat2Pos.inj_max	40	40.092345	29225	5086
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec2	40	40.090726	27623	3312
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_succ_r	40	40.081466	17167	4566
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.mem_2	40	40.091564	31596	2902
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.eq_Leq	40	40.095997	31301	5654
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40	40.060932	15950	3795
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.shiftl_spec_high	40	40.053680	13579	4005
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_remove_2	40	40.070019	22234	4427
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.neg_le_neg	40	40.090390	31833	2737
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.neg_lt_neg	40	40.059376	16800	3437
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40	40.043739	9174	2209
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.remove_1	40	40.036273	7330	1553
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.elements_split	40	40.111702	33888	3711
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.A'A_left	40	40.104245	40213	3924
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.INR_IZR_INZ	40	40.175683	21688	3570
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	0.035963	4	4	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_pos'	40	40.091990	26718	4928
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_3	40	0.120255	29	13	0.1.0.3	synth with cache (only 1: intros; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40	6.885668	2258	663	0.2.0.6.4.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: destruct_max n; only 1: trivial; only 1: now rewrite opp_nonneg_nonpos; only 1: assert (LE : 0 <= abs n) by apply abs_nonneg; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: now apply divide_abs_l; only 1: intros p Hn Hm; only 1: now apply divide_abs_l).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	40	2.679615	1863	54	60	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_1_lcm_mul	40	40.042488	9321	2801
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	40	40.058393	14690	2753
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.for_all_iff	40	40.037982	10082	2284
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_add	40	40.080537	21629	4994
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.elements_3	40	40.145817	56784	2764
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40	12.276455	10945	863	0.1.0.1.2.1.0.7.0.5.24.0	synth with cache (only 1: intros; only 1: destruct H; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: ok; only 1: eauto; only 1: ok; only 1: ok; only 1: auto_tc; only 1: ok; only 1: ok; only 1: ok; only 1: ok).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	40	1.142394	144	40	7.2	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: now rewrite Ha).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40	40.059850	18148	3009
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	40	40.065880	11918	2788
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	1.190684	236	67	0.0.10	synth with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.of_pos_rec_spec	40	40.040544	10999	2695
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	40	40.119227	9590	2540
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_vs_elt_inv	40	40.229869	15762	3188
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_minus_iff	40	40.045857	5727	1409
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.plus_IZR_NEG_POS	40	40.046861	12178	1862
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40	40.047715	11062	2567
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.tail031_equiv	40	40.170727	4884	1294
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_rev	40	40.100274	31298	5624
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_correct	40	40.003068	242	42
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	40	40.145789	36852	3873
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.remove_3	40	40.218229	89466	5203
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.is_empty_1	40	40.119357	44550	3829
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	40	20.291398	7375	2395	0.0.0.1.0.0.5.0.0.0.5.0.0	synth with cache (only 1: intros; only 1: destruct (lt_ge_cases 0 b); only 1: apply div_small; only 1: destruct (mod_pos_bound a b); only 1: intuition; only 1: intuition; only 1: rewrite <- div_opp_opp by trivial; only 1: apply div_small; only 1: rewrite <- opp_lt_mono, opp_nonneg_nonpos; only 1: destruct (mod_neg_bound a b); only 1: intuition; only 1: order; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_filter	40	40.071666	21924	4095
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_sub	40	40.071920	18193	4635
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	40	40.074538	15919	3802
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.diff_2	40	0.040996	4	4	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_bezout	40	40.066411	19075	3561
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.nodup_fixed_point	40	40.063433	20028	3734
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_xI_xI	40	0.121244	4	4	0.0.0.0	synth with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_map_inv	40	40.068003	19762	4360
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_xI_xO	40	0.033296	4	4	0.0.0.0	synth with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40	40.047981	12417	2527
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_minus_iff	40	40.071314	14010	3814
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.SuccNat2Pos.id_succ	40	7.076648	4352	820	0.0.11.5.0.0.0.2.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: rewrite Pos2Nat.inj_succ; only 1: induction n; only 1: trivial; only 1: f_equal; only 1: simpl; only 1: rewrite <- IHn; only 1: rewrite Pos2Nat.inj_succ; only 1: f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	40	0.031051	3	3	0.0.0	synth with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.flatten_e_elements	40	6.347753	2556	572	0.0.0.10.3	synth with cache (only 1: intros; only 1: rewrite elements_node; only 1: unfold elements; only 1: simpl; only 1: now rewrite !app_assoc_reverse).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.arb_nr_rb	40	12.349528	11872	1071	1.41.0.0	synth with cache (only 1: destruct 1; only 1: auto; only 1: inversion H; only 1: invrb).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.nodup_In	40	40.051221	15932	3330
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.NatSeq.cons_seq	40	0.028755	5	3	0.2.0	synth with cache (only 1: simpl; only 1: intros n m; only 1: f_equal).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.exists_iff	40	40.077401	28166	3328
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40	40.044002	7354	2181
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.lt_strorder	40	40.090404	33234	1376
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.linear_diff_spec	40	40.063731	15074	6461
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.071319	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_sub_distr_l	40	40.038250	8357	3047
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_vs_cons_inv	40	40.068688	22391	3806
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40	40.033415	8734	1868
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_pow_correct	40	40.012965	268	41
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.acos_bound_lt	40	40.026443	7078	1676
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.find_2	40	40.067894	20790	2256
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec3	40	40.166916	47673	2154
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	40	40.065253	19238	2588
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.plus_IZR	40	40.034087	9904	1553
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.shiftl_spec_low	40	40.074946	18519	3030
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_sym	40	0.867346	121	29	0.2	synth with cache (only 1: compute; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail0	40	40.093594	5701	1083
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40	20.412021	6566	2652	0.8.0.3.2.0	synth with cache (only 1: intros; only 1: apply divide_0_l; only 1: transitivity (gcd n m); only 1: rewrite H; only 1: now nzsimpl; only 1: trivial using gcd_divide_r).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_sub_distr_r	40	40.054184	12987	3689
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.singleton_1	40	40.231977	94328	5194
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nbit0_Blow	40	40.116719	34615	3134
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.mult_IZR	40	40.057858	18652	2112
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Unrestricted_minimization_entails_excluded_middle.unrestricted_minimization_entails_excluded_middle	40	40.229101	56838	4753
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2SuccNat.id_succ	40	40.049599	13254	2313
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_eq_0_1	40	40.041200	12229	2506
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.quotient_by_2	40	40.046488	17250	1224
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_sym	40	5.399062	3585	471	13.12	synth with cache (only 1: intros z n H; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2SuccNat.pred_id	40	40.113165	7865	2107
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_lt_mono_l	40	40.075989	20738	4361
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.diff_3	40	4.083123	866	427	1.0.0.0.0.0.1.0.1.0	synth with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.inter s s'); only 1: case (M.mem x s); only 1: case (M.inter s s'); only 1: firstorder; only 1: case (M.diff s s'); only 1: firstorder; only 1: case (M.diff s s'); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.bSurjective_bBijective	40	40.198367	35360	1693
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40	40.061456	16808	3219
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	40	40.074482	21085	3906
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	40	40.076767	14472	6251
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.fold_remove_spec	40	40.035902	8301	3082
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	40	40.058639	15441	3630
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.opp_IZR	40	9.277125	6916	651	3.1.1.0.2.12.9.4	synth with cache (only 1: intro; only 1: unfold IZR, IPR; only 1: destruct n; only 1: auto with real; only 1: rewrite <- (Z.opp_involutive (Z.pos p)); only 1: auto with real; only 1: simpl; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40	40.067981	25366	1349
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1	40	40.117819	35831	6889
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf1	40	40.034235	7284	3014
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	40	40.091857	6414	1831
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	40	40.041658	9339	2329
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.xcnf_correct	40	40.068060	21819	2160
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_mul	40	0.099608	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1_iff	40	40.110002	30874	8716
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_l	40	40.065281	24056	1282
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	40	40.014857	2859	942
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_alt	40	40.077539	24226	3375
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	7.659160	3104	497	0.0.0.0.6.0.4.1.0.8	synth with cache (only 1: induction n; only 1: intro m; only 1: simpl; only 1: symmetry; only 1: apply add_0_l; only 1: unfold ofnat; only 1: intros; only 1: rewrite ofnat_succ, add_succ_l; only 1: simpl; only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.SuccNat2Pos.inj_iff	40	3.516413	970	448	5.0.0.0.0.0.1	synth with cache (only 1: split; only 1: intro H; only 1: apply (f_equal Pos.to_nat) in H; only 1: rewrite !id_succ in H; only 1: now injection H; only 1: intro H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	40	40.054958	16028	2709
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main_trick	40	40.050076	16514	2139
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	40	40.076660	8786	3100
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	40	40.074544	14007	4229
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.remove_1	40	40.048677	13772	1658
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.id	40	40.067743	25668	987
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	40	40.036274	8532	2015
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	1.246754	217	90	0.2.1.1.0.1	synth with cache (only 1: intros H; only 1: destruct t; only 1: invrb; only 1: invrb; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40	40.039777	8550	2101
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.is_empty_2	40	40.072715	24827	3001
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.elements_Add	40	40.073548	24821	1996
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	40	40.054693	15011	2854
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_0_minus_le	40	40.076340	25103	3077
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	0.280444	74	35	0.1.0.0.1.2	synth with cache (only 1: intros n m Hn; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_lt	40	40.059498	16994	3535
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	40	13.132430	3649	1522	0.0.0.5.0.0.0.0.4.1.0	synth with cache (only 1: intros; only 1: rewrite <- lcm_abs_r; only 1: apply lcm_unique; only 1: destruct_max n; only 1: trivial; only 1: now rewrite opp_nonneg_nonpos; only 1: now apply divide_abs_l; only 1: destruct_max n; only 1: apply divide_refl; only 1: auto with relations; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Bnth_Nbit	40	40.072695	25168	3376
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	40	40.023856	4935	1460
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_correct	40	40.025936	8283	1036
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_1	40	40.049578	15685	3036
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40	40.083818	6737	2664
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	40	40.074630	22729	2961
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_compare	40	2.189152	903	200	0.2.3.2.0.0.12	synth with cache (only 1: intros H; only 1: destruct x; only 1: intros; only 1: simpl; only 1: easy; only 1: easy || now destruct y; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_min	40	40.070671	21105	3909
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_2	40	40.039263	10365	3280
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_leb	40	0.124542	5	5	0.0.0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: easy; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_ltb	40	0.060664	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zgcd_ass	40	40.054150	18948	1901
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.elements_spec1	40	40.094966	31636	4923
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.remove_2	40	40.056191	17678	2378
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.Forall_nth_order	40	40.068905	19512	5102
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_eqb	40	0.063724	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40	40.070845	11996	2006
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_compare_mono_l	40	40.085599	25272	3811
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.Forall2_nth_order	40	40.135235	19642	4835
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_compare_mono_r	40	40.076025	21552	5078
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj	40	40.097388	31474	4758
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_iff	40	40.052202	14821	3401
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.cnf_checker_sound	40	40.087545	34178	1999
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.pow_IZR	40	40.043568	12117	2147
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_max	40	40.085728	27478	4953
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_le_compat	40	40.037709	8655	2148
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_pred	40	16.860425	14658	489	0.1.0.0.0.0.0.0.0.75	synth with cache (only 1: Z.nzsimpl'; only 1: destruct x; only 1: easy; only 1: simpl; only 1: destruct p; only 1: trivial; only 1: intros H; only 1: reflexivity; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.union_1	40	40.082689	24668	2629
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.f_dec	40	0.013586	1	1	0	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.to_pos_nonpos	40	40.098743	36089	1717
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_rev_append	40	40.089083	30818	2488
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_gcd	40	0.140836	18	6	0.0.0.1	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_lt	40	1.374858	482	197	0.0.0.0.0.0.5	synth with cache (only 1: unfold lt; only 1: unfold le, sub; only 1: rewrite compare_sub_mask; only 1: destruct sub_mask; only 1: congruence; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_sqrt	40	0.331458	123	46	2.0.0.0.0.0.6	synth with cache (only 1: destruct x; only 1: simpl; only 1: now rewrite ?Pos.min_1_r, <- ?Pos2Z.inj_min; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite ?Pos.min_1_r, <- ?Pos2Z.inj_min).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	40	40.091980	14758	4655
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Zpos_eq	40	0.021799	2	2	0.0	synth with cache (only 1: intros n m H; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRup_nat	40	40.104423	38270	2764
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.ZL0	40	0.006346	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	40	40.050382	12423	3345
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z_eq_mult	40	0.122584	9	2	4	synth with cache (only 1: now destruct m).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40	0.677748	74	13	8	synth with cache (only 1: now Z.nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	40	40.083062	5287	1749
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_lt_le_compat	40	40.154960	16843	2215
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_lt_mono_r	40	40.097939	29093	4918
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	40	40.040416	8464	3521
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_succ	40	40.068304	23150	3448
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRfloor	40	40.526858	20432	733
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	40	40.041779	9777	2115
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_le	40	0.034859	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le; only 1: now rewrite nat_compare_le, Z2Nat.inj_compare).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40	40.053964	3817	1345
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.030805	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.succ_IZR	40	40.046936	12168	2903
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	40	40.044201	10665	2472
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40	40.039536	9198	2545
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.remove_3	40	40.102397	35487	3212
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Excluded_middle_entails_unrestricted_minimization.excluded_middle_entails_unrestricted_minimization	40	40.175728	53631	6058
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf2	40	40.037000	7881	3609
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_double	40	40.078332	30250	1080
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	40	40.042870	11263	1968
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_lxor_spec	40	40.231839	31125	2350
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	40	40.042105	8287	4084
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_1	40	40.045448	13522	2889
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	40	0.054796	14	8	0.0.0.2.0	synth with cache (only 1: intros n m Hm; only 1: rewrite <- !negb_even; only 1: apply even_spec in Hm; only 1: rewrite even_add, Hm; only 1: now destruct (even n)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction	40	40.123947	48567	3436
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	40	40.116896	35318	2673
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_equivlistA	40	40.052161	13854	3311
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction	40	40.060067	19043	3163
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	40	0.027999	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.025370	8	4	0.0.0.4	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	40	40.116741	38543	2786
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40	15.564860	31440	1292	65.16.0	synth with cache (only 1: unfold singleton; only 1: red; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_div	40	40.083767	29357	3676
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	40	0.026813	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.026061	6	4	0.0.0.2	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	40	2.380093	493	104	0.12.0	synth with cache (only 1: intros n m p; only 1: rewrite (add_comm p m); only 1: now rewrite <- sub_sub_distr, sub_add_distr, sub_diag, sub_0_l, sub_opp_r).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_rec_ok	40	40.041832	15356	1793
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	40	40.072857	4053	966
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_false	40	9.993368	3770	725	0.1.0.1.4.2.0.2.0.12	synth with cache (only 1: intros Hn Hm; only 1: assert (Hij : 0 <= i / j) by (apply Z_div_pos; auto with zarith); only 1: case (Z_mod_lt i j); only 1: auto with zarith; only 1: rewrite (Z_div_mod_eq i j); only 1: intros; only 1: apply Zdiv_lt_upper_bound; only 1: Z.order'; only 1: auto with zarith; only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_ltA	40	40.048448	11169	4784
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	40	40.063475	17969	3473
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul	40	40.061369	18848	2324
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_succ	40	40.095340	39069	1328
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	40	40.027991	5992	1822
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	40	40.010008	1897	803
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_decr	40	40.117943	37885	3617
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.In_InfA	40	0.208599	14	7	3.1.0.0	synth with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.find_1	40	40.066868	18916	1498
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40	40.098395	33288	3104
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	40	40.030748	6302	1239
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_InfA	40	0.067800	8	6	0.0.1.0.1.0	synth with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intros; only 1: constructor; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.rbal_rb	40	1.961472	284	120	1.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: case rbal_match; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	40	40.110231	35386	4178
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.nodup_incl	40	40.122468	44541	3826
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	40	0.068749	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (quot_mul q b) by order; only 1: apply quot_le_mono; only 1: trivial; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_vs_cons_cons_inv	40	40.219292	20566	3314
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40	40.032341	7300	1422
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.elements_3w	40	40.213917	84885	4121
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.is_int	40	40.060803	19869	1969
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40	40.035830	6802	1548
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_correct	40	40.003518	402	41
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	40	40.056639	12645	5179
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_lt_r	40	7.540286	1132	449	0.0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_mult_le	40	40.051943	17618	2627
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_compat	40	40.077736	26654	3219
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_nodup	40	40.183246	72830	5162
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40	40.062705	21369	2411
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult1_ok	40	40.018087	4350	1297
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	40	2.137216	826	119	14.0.2	synth with cache (only 1: intro n; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_Partition	40	40.084760	30879	4077
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	40	40.038229	9779	1828
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.cos_acos	40	40.026762	7742	1855
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.diff_spec	40	40.068163	15784	6375
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_eq_0_0	40	40.088285	32322	2277
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.nodup_inv	40	40.058781	18719	3747
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	40	40.076298	20954	3523
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv	40	40.057295	12001	2204
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	40	40.046731	8422	4306
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.choose_spec3	40	40.178233	36804	4360
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40	40.215593	13654	4880
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_correct	40	40.002182	196	47
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	40	40.071706	19248	4447
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_add	40	40.062240	20744	2292
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40	40.040700	7242	1792
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_count_occ	40	40.057749	16901	4640
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_diff_elim2	40	40.234462	4365	1676
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.lt_compat	40	40.068782	8351	1841
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	40	40.056836	13176	2465
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	40	40.014052	2601	1055
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	40	40.047753	13451	1945
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.elements_3w	40	40.134175	54619	3581
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.of_Z_spec	40	40.049908	6090	1086
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	40	40.030411	4000	657
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	40	3.084231	1745	340	1.3.4.2.0.9	synth with cache (only 1: case ltb_spec0; only 1: now rewrite leb_nle, <- compare_lt_iff, compare_nge_iff; only 1: symmetry; only 1: symmetry; only 1: apply leb_le; only 1: now rewrite <- compare_le_iff, compare_ngt_iff).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	40	40.089453	23683	5750
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	40	40.059055	17096	1724
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_0_1	40	40.132464	53066	1032
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.lxor_spec	40	40.301093	56616	2014
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40	1.345865	550	81	0.2.18	synth with cache (only 1: case ltb_spec0; only 1: now rewrite <- compare_lt_iff, compare_refl; only 1: now rewrite <- compare_lt_iff, compare_refl).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.fold_1	40	40.134510	54803	3913
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	40	40.076055	13072	2663
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_sub_assoc	40	40.060670	15074	4100
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation	40	40.053591	14362	4242
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.div2_bitwise	40	40.121015	8184	3165
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	40	40.051267	13508	2576
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.odd_bitwise	40	40.110389	13440	4516
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	40	8.819676	984	196	2.16	synth with cache (only 1: compute; only 1: f_equiv').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	40	2.800110	1021	166	0.0.1.12	synth with cache (only 1: unfold pow; only 1: intro y; only 1: rewrite recursion_0; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.mkX_ok	40	40.031801	10288	786
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l	40	40.040798	10229	3543
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_lor_spec	40	40.208951	12698	4565
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.elements_spec2	40	40.141114	53557	4197
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	40	40.067705	17189	3509
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.set_induction_max	40	40.032981	8855	1179
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	40	40.036664	7269	2982
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	40	40.041932	10685	2058
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_map.Permutation_map'	40	1.164251	346	65	0.0.0.0.0.0.0.9	synth with cache (only 1: induction 1; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.equal_1	40	40.081187	27317	2237
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40	37.782593	8982	3637	0.0.6.4.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: destruct_max n; only 1: trivial; only 1: now rewrite opp_nonneg_nonpos; only 1: now apply divide_abs_l; only 1: assert (LE : 0 <= abs n) by apply abs_nonneg; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: intros p Hn Hm; only 1: now apply divide_abs_l).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_count_occ'	40	40.059032	17584	4423
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_eqA	40	40.069457	25151	1708
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.add_1	40	40.101697	37380	3961
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_le_l	40	40.287620	12181	1402
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_nth_error	40	40.059624	18121	3912
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	40	40.035586	8080	1590
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_nth	40	40.070312	20876	4716
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_divides	40	40.056842	14433	2192
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_incl_length	40	40.059686	17092	3287
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40	40.042834	11232	1924
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_length_incl	40	40.072458	21495	3800
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	40	40.063023	18173	2450
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_nil	40	0.162309	88	20	0.4.1.2	synth with cache (only 1: split; only 1: firstorder; only 1: solve [ inversion H ]; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.fold_1	40	40.100939	39085	2465
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	40	40.041397	9567	1489
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	40	40.031682	5703	1360
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40	40.042854	10437	1673
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1'	40	40.037270	7237	2105
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.is_zeroE	40	40.028104	8465	173
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	40	40.036446	9405	1474
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_odd	40	40.043387	16435	1566
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	40	40.044885	12666	1760
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40	40.043446	9229	973
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_diff_iff	40	40.112154	13204	3125
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.choose_1	40	40.101067	36137	3082
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.rb_maxdepth	40	40.042068	10984	2934
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_add_distr	40	40.049781	11869	4212
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.add_2	40	40.076930	23521	4225
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.rb_mindepth	40	40.053497	15456	3452
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_In	40	40.060591	18650	2356
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40	40.057424	14996	2462
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40	7.915202	3606	808	1.2.5.0.13	synth with cache (only 1: case leb_spec0; only 1: now rewrite ltb_nlt, <- compare_le_iff, compare_ngt_iff; only 1: destr_bool; only 1: apply ltb_lt; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_app	40	13.888595	6827	1015	1.0.1.1.2.25	synth with cache (only 1: induction 1; only 1: intros H; only 1: eauto; only 1: intros; only 1: constructor; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_sub	40	40.054065	16473	2378
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	40	40.043971	10342	1682
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.lor_spec	40	40.342831	35066	2481
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.max_r	40	1.041329	317	112	0.0.0.2.0.0.0.0.0.0	synth with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: trivial; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction'	40	40.089826	31407	3932
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.diff_1	40	40.049977	13487	3133
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_incl_NoDup	40	40.049666	14676	4600
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_sub_distr	40	40.073419	18711	4837
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40	40.099952	35460	2786
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_diff_trivial	40	2.918517	550	181	0.2.0.0.3.2	synth with cache (only 1: unfold set_In; only 1: intros a x y; only 1: eapply set_diff_elim2; only 1: eauto; only 1: eapply set_diff_elim1; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_xO_xO	40	40.129418	42253	4034
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.choose_2	40	40.123248	44317	4909
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.maxdepth_upperbound	40	40.037805	7779	4081
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec2	40	40.094094	22144	2930
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	40	40.085475	11177	2377
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	40	40.217465	84531	2427
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	40	40.047857	2929	1072
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40	40.041304	9293	3031
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bitE	40	40.097007	34078	466
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation_bis	40	40.049837	13148	3664
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.minus_IZR	40	40.049258	14015	2771
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.add_3	40	40.072133	22729	3483
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_le_r	40	40.124828	4654	1580
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40	40.048689	9312	2995
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	40	40.044672	10638	2339
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main	40	40.042593	11072	1536
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_xO_xI	40	40.121830	40079	4576
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	40	0.053330	3	3	0.0.0	synth with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_image	40	40.141487	53256	4326
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.NoDup_map_inv	40	40.091428	30268	5556
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.SuccNat2Pos.pred_id	40	40.129388	18383	4435
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40	40.082363	10893	4028
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.SuccNat2Pos.inj_succ	40	0.034473	4	4	0.0.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.cons_1	40	40.083952	27811	3494
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r_nonneg	40	0.129049	10	8	0.3.0.0	synth with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.filter_2	40	4.759126	1264	352	0.0.3.0.0.1.3	synth with cache (only 1: intros a b c0; only 1: unfold compat_bool, compat_P, Proper, respectful, impl; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.NatSeq.seq_length	40	40.121327	45605	3823
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	40	28.254516	31931	2380	2.4.22.24	synth with cache (only 1: intros a b c0; only 1: intros l H; only 1: inversion 1; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_lt_l	40	40.050324	10191	1704
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.max_1_r	40	0.059602	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.min_1_l	40	0.011340	3	2	0.1	synth with cache (only 1: apply min_l; only 1: apply le_1_l).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.NatSeq.seq_nth	40	40.050467	14380	3891
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_correct	40	40.004095	223	71
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.compare_end_Cmp	40	40.158630	59735	1553
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.filter_3	40	0.159397	6	6	0.0.0.0.0.0	synth with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.min_1_r	40	0.066307	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold min; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	40	40.067457	16868	5991
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.NatSeq.seq_shift	40	40.073139	24195	3897
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.equal_2	40	40.088787	33589	3452
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.acos_cos	40	40.031555	10245	1598
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	40	40.039110	8715	2631
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_diag	40	30.651501	20415	3778	1.0.2.2.0.1.18.4	synth with cache (only 1: unfold sub; only 1: case sub_mask_spec; only 1: intros; only 1: reflexivity || apply f_equal || exfalso; only 1: intros r H; only 1: rewrite add_comm in H; only 1: elim (add_no_neutral _ _ H); only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_cons	40	11.128928	9774	1188	0.5.0.17.13	synth with cache (only 1: split; only 1: inversion 1 as [H1| ?]; only 1: auto; only 1: auto; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	40	40.056642	15700	2100
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.for_all_2	40	1.066015	260	85	0.5.0.0.0.0	synth with cache (only 1: intros s f; only 1: unfold for_all; only 1: case M.for_all; only 1: intuition; only 1: intros a n H H'; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup	40	40.076271	21459	3557
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Z_R_minus	40	40.056569	14138	2961
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	40	40.214739	13826	1985
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	40	40.055845	12955	3847
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Empty	40	40.045435	13889	2311
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_inv	40	0.192101	60	20	0.0.6	synth with cache (only 1: intros x l; only 1: inversion 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_land_spec	40	40.078822	24396	3149
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_init	40	40.085172	14315	1117
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_neg	40	40.069828	18269	4710
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nbit_Nsize	40	40.093156	33283	4202
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_inv_tail	40	0.031587	3	3	0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40	40.151934	58075	2433
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.SuccNat2Pos.inj	40	40.205162	46195	4574
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmultm1_ok	40	40.016905	3365	1123
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.lt_0_IZR	40	40.073390	27418	2158
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Add	40	40.085323	30830	3613
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40	40.118574	41870	3931
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Example_of_undecidable_predicate_with_the_minimization_property.undecidable_predicate_with_the_minimization_property	40	40.253237	78431	4273
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_true	40	40.040292	10421	1996
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_eq_0_0	40	40.039607	12916	2164
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.fold_1	40	40.072635	22061	3542
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_aux_ok	40	40.001088	78	22
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_le	40	40.085981	23440	5587
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	40	40.058929	17631	1895
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40	40.065409	19806	4534
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	40	40.057015	14734	3678
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_min_distr_l	40	0.074581	12	6	0.0.0.4	synth with cache (only 1: apply min_mono; only 1: eauto with *; only 1: intros x x'; only 1: apply add_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_min_distr_r	40	0.039557	6	4	0.0.0.2	synth with cache (only 1: rewrite 3!(add_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.lt_IZR	40	40.080156	24468	4815
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	40	40.069314	18567	4475
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	40	40.042752	7898	3026
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.clos_trans_transp_permute	40	40.143609	49780	7962
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_max_distr_l	40	2.537427	982	240	1.0.7.2.0.2	synth with cache (only 1: apply max_monotone; only 1: repeat red; only 1: intros q r; only 1: unfold le; only 1: rewrite add_compare_mono_l; only 1: easy').
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok1	40	40.070465	17588	3160
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	40	40.050374	13304	1393
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40	30.241413	18120	3823	0.0.0.16.0.0.3	synth with cache (only 1: intros a b n Ha Hb Hn; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply NZQuot.mul_div_le; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_fold_right	40	4.403546	2573	572	0.0.0.3.7.1.1.1.1.0.1.0	synth with cache (only 1: split; only 1: induction l; only 1: inversion 1; only 1: inversion_clear 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: intuition; only 1: induction l as [| a1 l]; only 1: firstorder; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_pow	40	40.048140	15022	1807
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.min_r	40	9.862378	4634	1190	3.0.0.0.2.0.0.0.3.0	synth with cache (only 1: unfold le, min; only 1: intros; only 1: case compare_spec; only 1: auto; only 1: intros H'; only 1: rewrite compare_antisym, CompOpp_iff in H; only 1: apply le_nlt in H; only 1: apply le_nlt in H; only 1: now elim H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_fold	40	40.072922	21699	2578
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	40	40.036917	4272	1120
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_min_distr_l	40	0.021515	7	3	0.0.4	synth with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_min_distr_r	40	0.027522	5	4	0.0.0.1	synth with cache (only 1: rewrite 3!(mul_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.tauto_checker_sound	40	40.034215	10485	2222
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_diff_nodup	40	22.700381	7878	2127	1.0.0.0.14.0.0.0.1	synth with cache (only 1: induction 1 as [| x l H H' IH]; only 1: intro Hl'; only 1: simpl; only 1: constructor; only 1: intuition; only 1: simpl; only 1: destruct (set_mem x l'); only 1: auto; only 1: now apply set_add_nodup).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_pow_pos	40	40.069142	22177	2997
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2'	40	14.168098	1643	1088	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction s; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: inv; only 1: generalize (IHs H1 f x); only 1: destruct (f a); only 1: destruct (partition f s); only 1: simpl in *; only 1: auto; only 1: destruct (partition f s); only 1: simpl in *; only 1: inversion_clear H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.SuccNat2Pos.inv	40	40.113221	43708	4331
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	40	40.027426	5634	2329
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40	40.183721	22605	2125
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.elements_1	40	40.040288	5889	741
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	40	40.048598	12252	2961
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40	40.063370	6432	2695
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.elements_2	40	40.100793	34932	3747
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_cardinal	40	40.050999	16794	1918
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	40	40.043108	10413	2177
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.lbal_rb	40	40.039984	8120	1122
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	40	40.048633	11143	3265
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_elt	40	2.575698	1794	290	0.1.0.3.0.3.0.0.5.1.4	synth with cache (only 1: induction l1; only 1: simpl; only 1: intros; only 1: inversion H; only 1: trivial; only 1: simpl; only 1: intuition; only 1: generalize H; only 1: intros HF; only 1: inversion_clear HF; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.remove_1	40	40.107589	39387	3966
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_1	40	0.021600	6	2	4.0	synth with cache (only 1: intros m; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_2	40	0.022693	2	2	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.029314	5	4	0.1.0.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40	40.058206	15278	4088
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.elements_Add_Below	40	40.054657	17115	2134
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_sub	40	40.095659	33010	3942
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nbit_Bth	40	40.094472	43708	4772
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup'	40	40.109727	36109	4641
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_max_distr_l	40	5.033572	2047	506	0.0.13.2	synth with cache (only 1: apply max_monotone; only 1: intros H; only 1: intros Hnm Hpq; only 1: now apply mul_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	40	40.061389	5124	2451
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_3w	40	1.320745	2871	142	5.40	synth with cache (only 1: destruct m; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.cardinal_1	40	0.024018	6	2	4.0	synth with cache (only 1: intros m; only 1: constructor 1).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	40	27.965602	5744	1534	1.0.0.17.1	synth with cache (only 1: intros; only 1: apply mod_small; only 1: apply mod_bound_pos; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	40	40.066960	20693	4837
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40	40.049262	7814	3986
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.r_list_pow_rev	40	40.039749	14183	932
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok2	40	40.036398	7237	3624
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_pred	40	40.066197	24519	1483
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40	40.043624	13324	1766
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_max	40	40.064769	21124	2172
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.rel_prime_dec	40	40.054060	17359	2268
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40	40.060086	10393	1597
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.elements_3	40	40.142614	56196	1813
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.iter_op_succ	40	4.942158	2720	493	1.2.14.1.0	synth with cache (only 1: induction p; only 1: simpl; only 1: congruence; only 1: auto; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_partition	40	40.089966	31405	4237
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.elements_spec2w	40	40.051935	14914	4067
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.In_compat	40	0.091419	16	7	6	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.eq_IZR_R0	40	40.065971	20229	3279
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_min	40	40.095304	31255	3245
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.eval_bf_map	40	40.076485	24302	1833
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_compare	40	40.076815	22354	5010
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_forall	40	10.349480	4497	1161	0.0.0.0.0.0.0.3.0.1.0.0.13	synth with cache (only 1: split; only 1: induction 1; only 1: intros a H; only 1: inversion_clear H; only 1: simpl; only 1: intuition; only 1: subst; only 1: firstorder  (subst; auto); only 1: induction l; only 1: firstorder; only 1: simpl; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.update_mapsto_iff	40	40.058517	19233	2804
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40	40.036736	8516	1741
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.of_nat_succ	40	2.529446	1845	232	1.6.0.0.2.0.0.0.27	synth with cache (only 1: PeanoNat.Nat.cases n; only 1: simpl; only 1: now f_equal; only 1: intros; only 1: simpl; only 1: induction n; only 1: auto; only 1: f_equal; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	40	40.057456	17369	1860
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.size_nat_monotone	40	40.093570	19253	4620
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Zplus_minus_eq	40	40.098134	37498	3314
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	40	40.027443	6915	1748
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.choose_spec1	40	40.120280	43927	4230
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40	1.345149	360	205	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial using Nat.le_add_r; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	40	40.031146	4851	1915
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_appart_reg_l	40	40.055664	14529	2373
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	40	5.322536	659	287	0.9.0.0	synth with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), lcm_mul_mono_l, mul_comm; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	40	40.050105	11476	3717
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_same	40	0.310291	67	34	0.1.2.2	synth with cache (only 1: intros; only 1: zero_or_not a; only 1: apply Z.mod_same; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.size_gt	40	40.093894	26489	4595
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_le_compat_r	40	40.041103	12877	1810
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	40	40.038528	10890	2324
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_min	40	40.077949	25396	4612
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.eq_IZR	40	40.044476	10398	5608
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_appart_reg_r	40	40.043548	10552	3106
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	40	40.066783	6348	1315
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40	40.040924	11507	1394
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.elements_3w	40	40.191848	78726	1599
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	0.036774	9	4	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40	40.219388	76616	3545
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	40	0.052165	9	4	1.1.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40	40.040932	8760	3107
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction'	40	40.057951	13753	3112
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.filter_1	40	40.037442	13401	3536
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction	40	40.088053	27518	4679
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	40.067537	14569	6144
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.SortA_InfA_InA	40	40.043283	14180	1793
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.land_spec	40	40.079462	25362	2876
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_even	40	40.045804	15289	1461
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	40	40.189492	70752	8135
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40	40.070778	15220	4185
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_pos_ok	40	40.010740	2520	1100
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_pos_ok	40	40.024942	7774	1129
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_max	40	40.071787	21183	3573
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_def	40	40.439374	10643	1972
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.lt_gt	40	0.012397	1	1	0	synth with cache (only 1: apply gt_lt_iff).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	40	40.073695	23418	5440
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40	40.092223	30979	2247
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.cardinal_1	40	40.089149	34414	2833
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_alt	40	40.030487	7937	2155
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.set_induction_min	40	40.038895	9319	3607
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.size_le	40	40.073171	20085	2993
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	40	40.033278	7522	2673
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.rbal'_rb	40	40.053567	16089	2153
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	40	40.063567	17202	3817
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	40.093086	31806	2180
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_app	40	0.084686	7	6	0.1.0.0.0.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: intuition; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	40	40.063993	19720	2438
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.choose_empty	40	40.159393	61637	5286
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lt_pow_lt_log	40	40.090758	35973	1512
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40	40.055609	15046	2180
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_map.Permutation_map	40	40.066284	12671	2433
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	40	40.048315	13121	2338
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.NatSeq.in_seq	40	40.124613	63556	3036
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zodd_mod	40	40.040222	13781	1254
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.prime_dec_aux	40	40.063241	20755	2445
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40	40.060074	16849	2335
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	40	40.047138	10448	3012
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_ok	40	40.011551	2463	1041
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_eq_0_1	40	40.034977	10382	2426
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_in_correct	40	40.002496	338	65
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.gt_lt	40	16.493400	5660	1009	0.2.25	synth with cache (only 1: pose proof (le_sub_l n m) as LE'; only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.NatSeq.seq_NoDup	40	40.210236	92061	3098
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.ifred_or	40	1.730577	812	221	0.0.1.0.1.4.10	synth with cache (only 1: intros; only 1: destruct s; only 1: right; only 1: assumption; only 1: descolor; only 1: ok; only 1: ok).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.ge_le	40	0.027228	3	2	0.1	synth with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.le_ge	40	0.012529	1	1	0	synth with cache (only 1: apply ge_le_iff).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.SortA_app	40	40.042359	9882	2208
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.NatSeq.seq_app	40	40.031078	9091	2334
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	40	40.220561	8420	1937
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40	40.036655	8322	2428
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	40	40.221719	13283	1949
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	40	40.044510	11747	2361
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.ldiff_spec	40	1.097353	892	124	0.0.1.0.2.2.2.2.7.4	synth with cache (only 1: unfold testbit; only 1: destruct divmod as (q', u'); only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: fold testbit; only 1: apply testbit_bitwise_1; only 1: destr_bool; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.map_1	40	40.062265	18312	2972
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	40	40.037539	8410	1948
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.le_ind	40	8.128064	5149	968	1.1.15.1	synth with cache (only 1: intros Az AS AP n; only 1: apply right_induction; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.NatSeq.seq_S	40	40.079740	24683	4840
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	40	40.029578	6680	1849
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	40	40.023475	6099	1135
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	40	40.044252	11788	1938
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	40	40.059757	9720	1794
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.map_2	40	40.072696	21085	5443
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.app_eqlistA_compat	40	9.588908	1556	257	0.0.3.1.0.1.2.2.8	synth with cache (only 1: induction 1; only 1: induction 1; only 1: constructor; only 1: simpl; only 1: auto; only 1: simpl; only 1: constructor; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	40	40.069842	16233	4883
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	40	40.167379	13108	4728
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.max_l	40	40.099269	31209	3709
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	40	40.055817	17043	2238
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	40	40.038128	9137	2759
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.land_spec	40	40.177491	22501	3255
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40	18.370545	10236	2498	0.0.1.3.0.4.1.25	synth with cache (only 1: reduce; only 1: induction s as [| c l IHl x r IHr]; only 1: intuition_in; only 1: simpl; only 1: clear IHl IHr; only 1: descolor; only 1: invrb; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	40	40.054874	15391	2955
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.div2_spec	40	0.016445	4	1	3	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.testbit_neg_r	40	0.008915	1	1	0	synth with cache (only 1: inversion H).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev	40	1.315298	392	98	1.0.3.1.1.3	synth with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: apply eqlistA_rev_app; only 1: congruence; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40	40.048130	8504	3451
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	40	40.047320	12690	2806
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_ldiff_spec	40	40.078947	23726	3076
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40	40.066831	16991	4367
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.fold_3	40	40.047285	9921	4047
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_map.Permutation_map_inv	40	40.103553	39403	2699
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.choose_spec2	40	40.074325	25302	4189
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	40	40.051943	14425	3102
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.remove_2	40	40.064062	20543	4005
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_length	40	34.559680	20058	2556	1.9.0.21	synth with cache (only 1: induction 1; only 1: constructor; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40	40.051927	13452	3227
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	40	40.032665	5507	2460
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_le_r	40	40.079717	8639	1558
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.SortA_NoDupA	40	40.087013	27691	3728
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	40	40.058473	11245	4472
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_fold_right	40	6.299510	4931	1026	0.0.0.0.5.0.0.0.2.1.0.0.0.14	synth with cache (only 1: induction l as [| a l IH]; only 1: simpl; only 1: split; only 1: inversion 1; only 1: inversion_clear H; only 1: split; only 1: inversion 1; only 1: apply Forall_nil; only 1: simpl; only 1: split; only 1: intros HE; only 1: now inversion HE; intuition; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.remove_3	40	40.060133	19324	3765
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zeven_mod	40	40.049526	17185	1828
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_exists	40	40.092463	31802	4889
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_nth	40	40.086522	27016	5067
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	40	40.047290	11945	3307
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_app	40	40.091680	32416	3621
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	40	40.065591	23318	4836
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.Equivb_Equivb	40	40.052675	13860	1275
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_rev	40	40.042754	10579	2957
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	40	40.059248	16691	2423
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	40	40.072880	19978	4101
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_plus	40	0.126616	36	18	3.1.0	synth with cache (only 1: intros; only 1: apply Z.mod_add; only 1: now intros ->).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	40	40.037372	8921	1290
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.land_spec'	40	40.101460	12786	2614
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_app	40	30.093727	18635	2941	1.21.1.0.0.0.0.0.2.16.0.0.0.0.0.0	synth with cache (only 1: induction l1; only 1: simpl; only 1: split; only 1: intros HE; only 1: intuition; only 1: intros HE; only 1: intuition; only 1: simpl; only 1: split; only 1: intros HE; only 1: inversion_clear HE; only 1: intuition; only 1: intros HE; only 1: intuition; only 1: inversion H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_add_abs	40	22.217560	6106	1092	1.0.1.0.0.0.1.0.1.1.0.0.0.0.0.0.0.2.29	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial using Nat.le_add_r; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: simpl; only 1: apply Pos2Nat.inj_add).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	40	40.047212	13082	2297
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	40	40.017130	3398	1254
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_exact_1	40	1.230152	398	66	1.0.1.9	synth with cache (only 1: intros a n Hn; only 1: rewrite Z.div_exact; only 1: auto; only 1: now intros ->).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.ge_le_iff	40	14.858869	3562	1120	4.3.2.1.1.4.0.0.0.2.0	synth with cache (only 1: destruct n as [| p], m as [| q]; only 1: split; only 1: intros H; only 1: order; only 1: intros H; only 1: easy; only 1: easy'; only 1: easy'; only 1: revert q; only 1: intro n; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40	40.062987	20104	1830
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.find_1	40	40.092520	32568	3749
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40	40.072770	20462	3478
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec1	40	40.047621	8969	1843
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.lbalS_rb	40	40.031269	6681	1989
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.lbalS_arb	40	40.035356	8109	2722
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.min_l	40	40.097426	30405	4759
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.ldiff_spec	40	40.099499	33017	2757
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.del_arb	40	0.016672	3	2	1.0	synth with cache (only 1: invrb; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.set_induction_max	40	40.099868	11201	1252
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_dec	40	40.059255	20578	2411
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	40	2.791520	504	295	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a n; only 1: bitwise; only 1: destruct (le_gt_cases n m); only 1: rewrite lnot_spec_high, ones_spec_high; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial; only 1: rewrite lnot_spec_low, ones_spec_low; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_exact_2	40	3.966716	1020	297	0.0.2.2.6.1.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: Z.nzsimpl; only 1: now Z.nzsimpl; only 1: rewrite Z.div_exact; only 1: auto; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.choose_3'	40	40.145162	55129	3441
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp	40	0.049030	6	5	0.0.1.0.0	synth with cache (only 1: intros a b Hb H; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: Z.order; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40	40.028050	9480	1049
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.max_1_l	40	40.148764	50156	4215
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40	40.179725	6442	1317
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40	40.095140	27260	3816
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40	40.032640	8944	1290
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	40	40.059469	11545	4356
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	40	40.048207	11720	2858
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.map_ext_Forall	40	8.883304	5480	1148	1.0.1.2.13.0.0	synth with cache (only 1: intros f g H l; only 1: apply map_ext_in; only 1: induction l as [| a l IH]; only 1: apply ext_in_map; only 1: simpl; only 1: reflexivity; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.not_0_IZR	40	40.035485	7619	3367
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.find_2	40	40.151042	60153	4252
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_map.Permutation_image	40	40.140716	52883	4370
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	40	40.050443	10927	4144
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_le_l	40	40.025770	6048	1338
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	40	40.081282	23589	2964
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_Forall	40	40.161865	21839	3717
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_zero_rb	40	0.246794	323	19	25	synth with cache (only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div31_phi	40	40.024293	6955	669
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.SuccNat2Pos.inj_compare	40	40.133376	48278	6536
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gauss	40	40.075718	15152	4254
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_in_correct	40	40.002525	303	49
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.compare_more_Cmp	40	40.072829	21778	2922
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_max_distr	40	40.076948	15847	3510
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_lt_compat_r	40	40.048162	12380	3445
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.for_all_1	40	40.107076	10478	925
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.incl_Exists	40	40.151878	54859	3801
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40	3.531659	540	308	0.0.0.0.5.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: rewrite !rem_eq by trivial; only 1: rewrite quot_mul_cancel_r by order; only 1: now rewrite mul_sub_distr_r, <- !mul_assoc, (mul_comm (a ÷ b) c)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40	40.055048	12562	4552
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.sin_acos	40	40.020360	4899	1750
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.exists_1	40	40.056215	13362	1576
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_impl.fcons_ok	40	40.002577	217	23
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.le_0_IZR	40	40.073125	21987	3903
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_min_distr	40	40.074783	19410	4129
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_nth	40	40.072186	22000	5046
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.compare_cont_Cmp	40	40.107730	31864	3870
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40	40.025258	5975	1307
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	40	40.221711	12102	1637
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pred_div2_up	40	9.130394	3979	1350	0.3.0.6.0.0.6.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.2	synth with cache (only 1: destruct p; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: now f_equal; only 1: now f_equal; only 1: bitwise; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_map.Permutation_elt_map_inv	40	40.048566	13884	3656
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.set_induction_min	40	40.042316	10408	3586
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_mult	40	40.125335	23277	2596
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nxor_BVxor	40	40.076377	28583	2776
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.iter_swap	40	0.037974	4	3	0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: now apply Pos.iter_swap_gen).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkadd_mult_ok	40	40.009919	1966	807
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.exists_2	40	40.048097	13751	2576
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.cardinal_m_Proper	40	0.765281	257	81	0.0.0.0.0.0.1.0.0.1	synth with cache (only 1: intros m m' Hm; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_Equal with (eqA := eq); only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	40	4.959076	5150	482	4.6.22	synth with cache (only 1: unfold lt; only 1: intros A P; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_max_distr_r	40	40.065015	16962	3624
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_correct	40	40.062652	9805	1645
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.partition_1	40	40.068735	5866	1788
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	40	40.079955	23654	2871
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.rbalS_arb	40	40.036675	8869	2403
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	40	40.045857	11037	3054
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.Exists_impl	40	13.409762	7964	1422	2.0.1.9.1.2.2.7	synth with cache (only 1: induction l; only 1: inversion 1; only 1: intros HE; only 1: inversion_clear HE; only 1: constructor; only 1: intuition; only 1: intuition; only 1: now apply Exists_cons_tl).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_max_distr_r	40	40.080178	24434	3474
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.gt_lt_iff	40	40.098850	16891	3644
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	40	40.046745	10441	4495
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	40	40.096242	25054	6018
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	40	40.034215	8751	1959
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons_fcons_inv	40	40.000999	39	22
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec2	40	40.034601	7104	2858
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.iter_succ	40	3.037303	1022	302	0.0.0.1.2.7	synth with cache (only 1: intros n H; only 1: intros m IH; only 1: destruct n; only 1: split; only 1: simpl; only 1: apply Pos.iter_succ).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.iter_add	40	0.045658	8	5	0.0.3.0.0	synth with cache (only 1: induction p using Pos.peano_ind; only 1: intros; only 1: auto; only 1: intros; only 1: now rewrite Pos.add_succ_l, !Pos.iter_succ, IHp).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40	40.047430	13159	2850
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.le_IZR	40	40.076589	25983	3234
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter31_sqrt_correct	40	40.602538	9376	1596
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	40	40.047424	12242	2813
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_succ_morphism	40	40.131963	24262	3630
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.equal_1	40	40.052463	17568	1756
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.equal_2	40	40.079235	27103	3775
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	40	40.042171	10994	2078
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.IZR_neq	40	5.633405	1521	419	2.2.2.0.4.0	synth with cache (only 1: intros n m H; only 1: red; only 1: intros H0; only 1: apply H; only 1: apply eq_IZR; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_rev	40	40.046529	11749	3252
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40	40.081473	19365	7037
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.Forall_impl	40	15.500849	12682	2037	3.3.14.12.0.0	synth with cache (only 1: intros P Q H l H0; only 1: induction H0; only 1: constructor; only 1: constructor; only 1: firstorder; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_succ_r	40	40.050456	15041	1775
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.update_dec	40	40.055301	14707	3411
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	40	40.065777	19327	3292
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_succ_abs	40	40.078296	27166	3400
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.update_in_iff	40	40.088467	29931	4279
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	40	40.029493	5686	2638
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.fold_1	40	40.154575	61886	4161
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_map.Permutation_flat_map	40	40.077310	8961	1486
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	40	40.051229	12923	3814
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_l	40	40.053029	7017	2255
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_pow_list_ok	40	40.011475	2696	855
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.pred_of_succ_nat	40	40.143838	52737	3865
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40	40.061912	15897	3719
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.lt_strorder	40	40.107504	38774	4601
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.map_1	40	40.057305	14525	2166
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.le_IZR_R1	40	40.070827	25136	2550
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_mapsto_iff	40	40.069163	22571	3797
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_rect	40	40.145195	56282	4900
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_le_pos	40	0.172953	37	18	0.0.0.1	synth with cache (only 1: intros; only 1: replace 0 with (0 * r2); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_of_nat	40	40.096040	30117	4957
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.mapi_1	40	40.052324	10325	1556
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_in_iff	40	40.065422	20052	4004
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	40	40.052354	14734	2856
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	40	40.072234	20509	2940
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40	40.064929	7847	2218
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40	40.092408	29137	3136
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.choose_empty	40	40.097868	36956	2900
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.inj_neq	40	40.098215	36095	3360
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40	40.063922	7526	2946
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_appart_reg_l	40	40.051518	3306	481
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40	40.143575	32991	3361
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40	40.083624	5708	2174
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_same	40	40.056862	15166	4786
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40	40.025744	3064	1343
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction'	40	40.086334	27488	3801
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_lt_r	40	40.036656	10211	1845
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sqrtrem_spec	40	40.064368	18281	2853
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40	40.038413	9523	2292
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	40	40.059160	16129	2830
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.IZR_ge	40	40.065438	20681	3017
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	40	40.037551	9809	2361
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40	40.337381	61653	2980
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.map_2	40	40.122561	44054	4171
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.lt_ind	40	40.132087	48142	5202
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_Exists	40	16.336615	7357	1334	0.0.0.4.0.7.0.7.0	synth with cache (only 1: intros l1 l2 HP; only 1: intros HE; only 1: apply Exists_exists in HE; only 1: induction HP; only 1: destruct HE as [a [Hin HP]]; only 1: apply Exists_exists; only 1: exists a; only 1: apply in_app_or in Hin; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	40	40.054965	14181	4286
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.Forall_and_inv	40	21.042669	9615	2249	0.5.8.1.12	synth with cache (only 1: intro H; only 1: intros HF; only 1: intros Hincl; only 1: rewrite !Forall_forall; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	40	40.080861	24005	4115
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_N_ok	40	40.030044	9701	1294
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.inj_minus2	40	40.051599	15670	2961
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_mult_dev_ok	40	40.011336	2969	876
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.compare_Cmp	40	40.163191	61246	3514
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40	40.039390	8312	1924
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev_app	40	40.027943	5060	1008
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40	40.051241	7226	4051
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1	40	40.033393	8024	2673
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	40	40.034206	7957	2165
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	40	40.059011	17619	2076
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sqrt_spec	40	40.091790	20384	3724
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40	40.037614	9500	2021
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.choose_3	40	40.080673	25733	4475
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt	40	40.812973	8867	2451
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40	40.063506	19913	2835
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_lt_l	40	40.034377	7599	2070
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_plus	40	40.029131	8731	1925
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	40	40.020219	4533	1278
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	40	0.041352	4	3	1.0.0	synth with cache (only 1: intros a n; only 1: rewrite <- shiftl_opp_r; only 1: now rewrite 2!lt_nge, shiftl_nonneg).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.nat_bijection_Permutation	40	40.066051	18385	2297
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40	40.032277	6994	1837
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	40	0.172118	12	5	0.0.1	synth with cache (only 1: intros; only 1: rewrite div2_spec; only 1: now rewrite 2!lt_nge, shiftr_nonneg).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40	40.041901	10602	2131
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.ins_rr_rb	40	40.061410	15655	3016
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.ins_arb	40	40.046688	12244	2687
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_pred_shiftl_low	40	40.106161	12005	2618
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.rev_eqlistA_compat	40	40.039632	8455	967
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_dec	40	40.094074	31883	4347
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	40	40.034728	6734	3044
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons0_fcons_inv	40	40.001004	38	24
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	40	40.048861	11898	4211
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	40	40.115164	9945	2500
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	40	40.212577	40727	1390
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	40	40.068707	7266	2038
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.iter_ind	40	17.639043	17598	1813	14.1.11.0.14.0	synth with cache (only 1: intros; only 1: induct ltac:(n); only 1: trivial; only 1: intros; only 1: rewrite Pos.iter_succ; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.lor_spec	40	40.131699	42481	3774
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.min_elt_1	40	40.066790	19785	4939
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.mapi_2	40	40.097068	33436	3937
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rlt_wd	40	40.082993	17601	2512
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.map2_1	40	40.083858	29789	4015
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40	40.062816	16910	3514
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	40	40.045443	11300	2559
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	40	40.056167	15460	1509
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.incl_Forall	40	40.154834	55032	4640
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40	40.039806	8236	3042
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	40	40.053257	13664	3163
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.map2_2	40	40.053975	14800	4136
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40	40.071418	9439	1831
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	0.059788	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_sgn x; only 1: apply sgn_pos; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.lxor_spec	40	40.129817	43014	4505
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_mapsto_iff	40	40.086987	27735	3792
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40	40.062639	19174	2301
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.add_rb	40	40.073378	23109	3446
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.land0_r	40	0.054933	6	4	2.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite land_spec, bit_0; only 1: now rewrite andb_false_r).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.SortA_equivlistA_eqlistA	40	40.098935	32638	3504
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	40	40.021432	3139	1187
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	40	40.053693	11942	2049
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	40	3.443941	1032	358	0.0.4.5	synth with cache (only 1: intros x y z; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_assoc_reverse).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.divide_add_cancel_l	40	40.110317	34858	4381
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40	40.083079	18853	3645
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.fold_4	40	40.044644	9277	3878
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.choose_spec3'	40	40.065277	22056	2052
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	40	40.025343	4198	2120
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	40	40.020568	2674	1139
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	40	40.072457	19025	3952
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_alt.adapt_injective	40	40.066345	22623	1893
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.equal_1	40	40.029813	8569	1081
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_end_Cmp	40	4.665911	7537	460	0.4.2.5.6.14.14	synth with cache (only 1: red; only 1: red; only 1: intros l; only 1: destruct l; only 1: constructor; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	40	40.055821	13509	3948
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	40	40.069475	19179	3828
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.tail_add_spec	40	40.124399	7645	3047
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Filter.filter_sort	40	40.054820	15708	3011
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.equal_2	40	40.058570	17964	3660
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_mult	40	40.052560	15127	3942
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Filter.filter_InA	40	40.036635	10218	2262
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_pred_shiftl_high	40	40.090819	10167	2395
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.filter_rb	40	1.478421	4586	163	75	synth with cache (only 1: ok).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40	40.056843	13273	4293
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	40	40.021206	5857	601
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.partition_rb1	40	0.384865	164	41	0.6.2.0	synth with cache (only 1: rewrite partition_spec; only 1: unfold filter; only 1: simpl; only 1: auto_tc).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.Exists_or	40	40.096849	31765	3694
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.partition_rb2	40	0.062646	10	5	0.1.1.0	synth with cache (only 1: rewrite partition_spec; only 1: unfold partition, filter; only 1: simpl; only 1: auto_tc).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.Exists_or_inv	40	40.064748	19739	4530
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.mapi_1	40	40.077021	25230	2273
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.exists_Forall	40	23.004218	18325	2890	1.0.4.1.0.22.2.0.1	synth with cache (only 1: induction l; only 1: firstorder  auto with datatypes; only 1: firstorder  (subst; auto); only 1: inversion H; only 1: subst; only 1: constructor; only 1: inversion H; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	40	40.051514	8931	3165
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.FoldOpt.add_fold	40	0.042778	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Forall2.Forall2_refl	40	0.005947	1	1	0	synth with cache (only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.045539	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lxor_spec'	40	40.038623	8083	4060
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	40	40.047661	12299	2558
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.TestOrder.test	40	0.031029	13	3	1	synth with cache (only 1: Nat.order).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.Forall_and	40	40.066389	20121	4129
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40	40.051424	11280	2623
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nand_BVand	40	40.068921	24163	2862
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_le_0_compat	40	40.041858	13516	1518
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.map_1	40	40.080625	24460	4041
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qinv_lt_0_compat	40	0.022032	4	4	0.0.0.0	synth with cache (only 1: intros [[| n| n] d] Ha; only 1: assumption; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	40	40.066511	9077	1305
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_div_den	40	1.640622	472	105	1.0.0.6.2	synth with cache (only 1: intro; only 1: intuition; only 1: unfold Rdiv; only 1: field; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.fold_add_rb	40	2.850519	687	415	0.0.0.0.0.0.0.4.0	synth with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: intros; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.double	40	0.054818	15	6	5.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	40	40.062945	17611	3247
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.append_arb_rb	40	40.043494	9791	2974
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.lt_compat	40	40.049804	12721	2483
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	0.826510	191	102	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.choose_spec3	40	40.069240	23287	3303
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.divide_xO_xI	40	40.107179	33728	4479
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.fold_3	40	40.043450	9654	4173
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.remove_rb	40	40.070063	21674	3540
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	40	40.074892	21587	3435
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.FoldOpt.add_fold	40	0.034374	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.031409	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.inter_rb	40	0.056455	8	7	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_POS_correct	40	40.052555	16653	1752
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.min_elt_3	40	40.063177	17536	4470
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_in_iff	40	40.098403	32398	4562
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.iter_swap_gen	40	40.193444	30856	3706
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	40	40.081676	22353	3447
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.divide_xO_xO	40	40.085930	24369	6220
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.Complete.radd_ext3_Proper	40	0.014460	2	1	1	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.Complete.rmul_ext3_Proper	40	0.013526	3	1	2	synth with cache (only 1: exact (Rmul_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.Complete.ropp_ext3_Proper	40	0.011831	1	1	0	synth with cache (only 1: exact (Ropp_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40	40.077339	17823	3280
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.Forall_Exists_neg	40	40.059906	18598	3574
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.IZR_le	40	40.057319	18815	2487
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.map_2	40	40.081923	28139	4182
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40	40.071784	19524	4011
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.mapi_2	40	40.091832	31766	3965
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qinv_le_0_compat	40	40.058306	14431	2056
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_alt.adapt_ok	40	40.051764	12473	1702
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Zeq_bool_IZR	40	0.244690	33	14	1.2.1.1	synth with cache (only 1: intros; only 1: apply Zeq_is_eq_bool; only 1: apply eq_IZR; only 1: auto with zarith real).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.diff_rb	40	3.118803	1376	403	0.0.0.9.0.0.0	synth with cache (only 1: intros; only 1: unfold diff; only 1: destruct compare_height; only 1: unfold linear_diff; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	40.089847	29417	2423
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.union_rb	40	4.483847	2160	587	1.1.2.5.0.0.0.12	synth with cache (only 1: intuition_in; only 1: unfold union; only 1: destruct compare_height; only 1: unfold linear_union; only 1: unfold elt in *; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	40	0.156347	19	12	0.0.1.0	synth with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 * r3); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_l_plus_morphism	40	40.159007	15984	4870
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.compare_spec	40	40.109455	36312	4096
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.ObsoletePmultNat.ZL6	40	0.312477	72	20	4.0.0.1	synth with cache (only 1: intros a; only 1: unfold Pos.to_nat; only 1: rewrite !Pmult_nat_mult; only 1: now Nat.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_shift_div_l	40	40.064499	11792	3494
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.partition_2	40	40.037746	8385	3148
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_def	40	40.262305	4908	665
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.divide_mul_l	40	40.077506	18489	4921
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons00_fcons_inv	40	40.001128	90	18
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.IZR_lt	40	40.062446	19698	2960
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	40	40.045566	10405	4462
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	40	40.027776	5863	2466
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.Exists_Forall_neg	40	40.055241	14946	3618
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.tan_acos	40	40.019892	5315	1634
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rgt_wd	40	27.601929	8331	1229	0.0.0.0.13.0.17	synth with cache (only 1: compute; only 1: intros x1 x2 H1 x3 x4 H2; only 1: split; only 1: rewrite H1; only 1: now rewrite H2; only 1: rewrite H1; only 1: now rewrite H2).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.equal_spec	40	40.072139	19437	4243
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.one_IZR_lt1	40	40.068452	23496	2656
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.neg_Forall_Exists_neg	40	40.043972	8367	1972
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_plus_carry_morphism	40	40.110397	16809	4395
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.divide_mul_r	40	40.083765	23171	5525
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.fold_4	40	40.053710	10879	5216
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.N2Bv_sized_Nsize	40	40.056906	19886	2070
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error	40	40.081784	28854	2598
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40	40.038026	9258	3039
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.ceqb_spec'	40	40.002417	136	17
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	40	40.203744	28494	2163
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40	40.063924	18568	2429
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Repeat.repeat_length	40	0.036122	6	4	1.0.0.1	synth with cache (only 1: induction n as [| n IH]; only 1: now simpl; only 1: simpl; only 1: eauto with arith).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pcompare_eq_Gt	40	0.010098	3	1	2	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	40	40.320316	22660	2798
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Partition_m_Proper	40	40.040779	11215	1869
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.iter_succ_r	40	38.896667	18274	6956	3.3.19	synth with cache (only 1: intro H; only 1: intros m H2 H3; only 1: now rewrite Pos.iter_succ, Pos.iter_swap).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.ggcdn_gcdn	40	40.102742	32862	4269
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	40	40.022817	4564	2223
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40	40.069695	11630	3068
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mult_dev_ok	40	40.011095	2311	1026
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_lower_bound	40	40.190770	24278	1623
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	40	40.067066	17403	4439
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40	40.045666	11664	2274
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.Forall_Exists_dec	40	40.061750	17932	4279
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_Forall2	40	40.061494	18796	3521
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.ggcd_gcd	40	40.124045	41498	5192
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40	40.085530	12449	3799
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40	40.059337	18552	2431
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	40	40.041594	5348	1717
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons1_fcons_inv	40	40.001015	58	25
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	40	40.058619	15902	2581
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.compare_spec_aux	40	40.137616	49653	4817
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.landC	40	40.044763	12056	3474
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.one_IZR_r_R1	40	40.080349	26851	3396
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_r_plus_morphism	40	40.077670	26507	2805
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.update_m_Proper	40	40.060835	14828	1875
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div312_phi	40	40.133205	7644	905
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40	40.049385	12086	2747
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.single_z_r_R1	40	40.047382	11510	3428
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.map2_2	40	40.212651	26316	2923
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40	40.039298	10129	2218
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40	40.049418	11687	2532
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_succ	40	40.046484	11948	2148
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.map2_1	40	40.515049	6292	836
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.incl_Forall_in_iff	40	40.055546	11377	3196
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.repeat_to_concat	40	1.079834	378	104	6.0.0.1.8	synth with cache (only 1: induction n as [| n IH]; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	40	40.065414	16791	3202
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40	40.071461	19382	3767
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	40	40.172791	25681	4643
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.restrict_m_Proper	40	40.059974	13714	2199
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	40	5.406153	2242	466	4.5.3.1.3	synth with cache (only 1: intros x y z; only 1: intuition auto; MO.OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: intro H; only 1: rewrite <- H0; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40	40.032834	7444	2406
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40	40.067729	8638	3027
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.mapi_1	40	40.098806	12991	2028
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40	40.056938	13531	4236
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_r	40	40.045722	5562	1909
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	40	40.044908	7040	1936
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error_bis	40	40.019101	4066	1996
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	40	40.051300	13134	3358
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.diff_m_Proper	40	40.074921	20151	3163
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.compare_spec	40	40.083120	24971	5277
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	40	40.100888	34065	4587
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.tech_single_z_r_R1	40	40.049311	17283	1944
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Req_EM_T	40	0.040085	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons2_fcons_inv	40	40.001030	55	24
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40	40.029072	7299	1434
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.pos_half_prf	40	0.005731	1	1	0	synth with cache (only 1: apply Rinv_0_lt_compat, Rlt_0_2).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_le_contravar	40	40.032668	7817	2337
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	40	40.044390	9756	2163
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Forall_image	40	40.110574	39408	5254
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40	40.148207	13202	2051
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40	40.167348	53465	2721
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.Pphi_avoid_ok	40	40.009318	1948	846
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.min_elt_spec1	40	40.074655	23356	5113
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.prime_dec	40	40.067011	24611	2040
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_appart_reg_r	40	40.117588	16739	1935
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40	0.034641	5	4	1.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite lor_spec, bit_0; only 1: now rewrite orb_false_r).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.sort_equivlistA_eqlistA	40	40.099507	30024	3423
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	40	40.267843	23200	4619
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	40	40.029926	7105	2083
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	40	40.044962	9623	3963
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod'_correct	40	40.071979	19342	1868
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.eq_equal	40	40.060179	16753	3980
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.gcd_divide_l	40	40.156712	56636	4543
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_shift_inv_l	40	40.049539	17032	2070
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40	40.053327	12913	4398
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.gcd_divide_r	40	40.107564	31002	4046
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_1	40	40.054647	15813	2122
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	40	40.065431	3083	1483
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.landA	40	40.065251	18404	3097
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_Rinv	40	40.051294	12044	3905
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40	40.273170	3747	1308
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_1	40	40.042226	12351	2308
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.lt_wf	40	40.151322	57943	5381
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	40	40.035493	7243	3281
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_rewrite_rev	40	40.209541	12702	1615
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	40	40.078650	16524	3307
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_seq	40	0.238448	9	4	3.0	synth with cache (only 1: intros; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.lt_slt	40	0.031807	4	2	1.1	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.concat_nil_Forall	40	40.077728	23690	5433
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_correct	40	40.125832	12276	1464
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	40	40.037278	7258	4089
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	40	40.036959	14696	759
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.mindepth_maxdepth	40	40.070145	25645	1177
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2	40	40.028557	5565	3320
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40	40.036966	6782	4076
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Filter.filter_split	40	40.044202	11793	2683
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40	10.622597	2354	429	6.1.0.2.0.1.9	synth with cache (only 1: intros x y l1 l2 Hin; only 1: intro EQ; only 1: inversion_clear 1; only 1: auto; only 1: constructor 2; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.min_elt_2	40	40.112072	35683	3970
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40	40.059903	15913	4214
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.cons_Cmp	40	40.072175	24569	2808
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40	40.045440	8143	4033
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_shift_div_r	40	40.046197	13060	3435
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.gcdn_greatest	40	40.092889	31609	3328
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.land0	40	40.046306	11499	2303
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.partition_ok2	40	40.028668	7695	951
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_eucl_extended	40	40.081592	23196	3100
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	40	40.045745	12108	2505
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40	40.041495	10394	2563
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	40	40.037511	9251	2918
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.local_mkpow_ok	40	40.048364	6934	471
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_alt.Permutation_nth	40	40.022516	5363	1958
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	40	40.078886	22246	3945
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter312_sqrt_correct	40	40.037109	9760	2880
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.iter_invariant	40	40.227390	50012	4942
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40	40.066699	18121	3581
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.in_flat_map_Exists	40	40.074970	23028	4233
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_aux_rb	40	40.060506	18346	4150
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	40	40.103580	6516	1325
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.eq_1	40	40.104755	39332	3560
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40	40.087080	29244	5107
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40	40.049443	13442	3381
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	40	40.052631	14462	2913
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	40	40.050581	13024	3566
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Find.findA_NoDupA	40	40.048178	13350	2838
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	40	40.058010	13200	4731
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	40	40.350374	72921	2385
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.gt_wf	40	40.083317	25239	5630
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40	40.044655	9025	4428
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40	40.024708	1833	706
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_shift_inv_r	40	40.043595	12964	2132
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40	40.054945	16231	2620
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	40	40.104072	34584	4417
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.notin_flat_map_Forall	40	40.086140	27863	5016
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.tail_addmul_spec	40	40.085050	8202	2219
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkopp_pow_ok	40	8.952698	375	177	0.0.0.1.0.2.0.0.0.0.0.2	synth with cache (only 1: destruct p; only 1: simpl; only 1: Esimpl; only 1: rewrite !mkmult_pow_ok; only 1: Esimpl; only 1: simpl; only 1: rewrite mkmult_pow_ok; only 1: Esimpl; only 1: change x with (x ^ 1)  at 1; only 1: now rewrite <- pow_pos_add, Pos.add_1_r, Pos.succ_pred_double; only 1: simpl; only 1: now rewrite ?local_mkpow_ok).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.eq_2	40	40.055644	15425	3005
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40	40.065772	17525	3491
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Repeat.repeat_cons	40	21.444378	27247	1321	0.14.27.0.51	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.eq_refl	40	40.157163	62085	2941
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lorC	40	40.082783	27704	3078
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	40	40.058023	16297	3210
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.FoldOpt.fold_equal	40	40.057597	13924	4698
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.eq_sym	40	40.078230	26556	3988
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	40	40.043143	11224	2713
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	40	40.047350	12254	3803
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.gcd_greatest	40	40.074957	21837	4629
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.min_elt_spec3	40	40.039840	8823	4152
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.mapi_2	40	40.103873	37786	5206
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.tail_mul_spec	40	40.099906	10005	2803
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	40	40.072791	19832	4487
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	40	40.050808	12918	2821
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40	40.082508	13070	2314
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	40	40.073428	7946	2748
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.map2_1	40	40.089236	32450	4471
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_pow_ok	40	40.015456	4150	658
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	40	40.037759	9282	1668
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_compat	40	40.042547	10138	1077
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.div_Zdiv	40	40.090351	33306	3593
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_list_sum	40	40.185876	26943	3901
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.FoldOpt.fold_equal	40	40.062549	14896	5481
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_pow_correct	40	40.025867	8218	1185
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40	40.032506	11126	878
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	40	40.045021	11247	2915
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_div	40	40.087173	10147	1045
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rdiv_plus_distr	40	24.434741	7471	1027	1.1.0.2.13.10	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intros a b; only 1: intros x y z; only 1: intro; only 1: unfold Rdiv; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Forall2.Forall2_app_inv_l	40	40.091456	29373	4844
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	40	40.060004	16113	3217
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Forall2.Forall2_app_inv_r	40	40.087956	28894	5166
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.choose_equal	40	40.087719	27966	2914
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	40	40.071779	7414	3650
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Forall2.Forall2_app	40	40.092250	29511	5846
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_compat	40	40.037176	6858	2991
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lorA	40	40.109615	31635	4841
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	40	40.045551	13174	2111
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.N2Bv_sized_Bv2N	40	40.167632	72736	956
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_shift_div_l	40	40.063883	20699	2328
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.map2_2	40	40.050744	13016	4455
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40	40.123664	42204	3793
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_split	40	40.101442	36165	2832
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	40	40.044892	13296	2117
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ForallPairs.ForallOrdPairs_In	40	40.048947	13424	3685
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.double_var	40	40.049028	16302	1395
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.R_rm	40	40.050228	12186	4505
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_list_max	40	40.063837	19257	3641
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40	40.053151	14859	2415
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.min_elt_spec2	40	40.049947	13071	4554
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_eq_O_2PI_0	40	40.032526	8512	1948
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.choose_equal	40	40.084674	24992	2750
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_r	40	32.545500	14332	3176	1.3.0.3.13.1	synth with cache (only 1: intros n m p q H1 H2; only 1: rewrite mul_comm; only 1: apply (mul_lt_mono_pos_r m) in H1; only 1: rewrite mul_1_l in H1; only 1: order'; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.ggcd_greatest	40	40.135207	48386	5308
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	40	40.068175	20004	3171
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	40	40.030381	7436	873
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.mod_Zmod	40	40.037043	12732	1371
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	40	40.086586	23881	3920
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.max_elt_3	40	40.049149	11628	5039
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.add_inj_r	40	40.059869	20338	1983
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_shift_inv_l	40	40.054643	18928	1901
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	40	40.057818	13944	3950
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	40	40.037448	7886	3435
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.Make.remove_min_spec1	40	40.161393	64404	2082
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ForallPairs.ForallPairs_ForallOrdPairs	40	40.124585	46200	4114
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_shift_div_r	40	40.052197	15263	3289
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.maxdepth_cardinal	40	40.080911	31855	1063
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Peqb_true_eq	40	40.178596	70512	4868
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.le_epsilon	40	40.041811	10801	2602
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiPOS_inj	40	40.104867	40807	1012
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.mindepth_cardinal	40	40.047204	9982	5055
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.ObsoletePmultNat.le_Pmult_nat	40	40.166378	30048	3385
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_cont_Cmp	40	40.073922	25837	3345
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_shift_inv_r	40	40.046496	15485	1358
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add	40	40.060649	19432	3109
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_transp.Permutation_transp_sym	40	40.254860	56012	4037
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Repeat.repeat_spec	40	38.339851	68817	3938	1.2.1.2.6.9.0.2.2.36.16	synth with cache (only 1: revert n; only 1: destruct n; only 1: simpl; only 1: intuition; only 1: simpl; only 1: compute; only 1: induction n as [| n IH]; only 1: destruct 1; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	40	40.034900	8329	1995
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.derivable_pt_acos	40	40.018496	4201	1711
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	40	40.080088	11272	4185
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.maxdepth_log_cardinal	40	40.042453	8820	2956
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.completeness_weak	40	40.068863	16557	5225
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.eq_trans	40	40.122714	44806	3836
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rdiv_lt_0_compat	40	40.065312	16793	6519
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ForallPairs.ForallOrdPairs_ForallPairs	40	40.065237	19117	3664
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.Make.remove_min_spec2	40	40.099536	38431	2566
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.max_elt_spec1	40	40.048395	11837	4772
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40	40.084413	37958	434
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt2	40	40.048227	16259	1323
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pminus_mask_Gt	40	40.093478	32429	4064
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40	40.116030	17691	2780
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	40	40.027613	6499	1804
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	40	40.047871	12916	2287
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	40	40.053480	12203	4052
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.PosNeg.zero_pos_neg	40	40.093661	32625	3959
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_transp.Permutation_transp_equiv	40	40.265723	69357	3551
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pplus_minus	40	40.100117	35126	4681
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRapart_morph	40	40.054139	11561	4018
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	40	40.050572	11710	3183
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	40	40.049560	10282	4225
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkmult_pow_ok	40	40.018483	4397	627
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Dcompare	40	40.131084	51110	2412
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40	40.045990	11245	4015
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.derive_pt_acos	40	40.021476	5873	1396
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lor0	40	40.055565	15613	4104
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Above	40	40.119254	42249	2793
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	40	40.054246	13381	1649
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Below	40	40.100452	33334	3958
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rdiv_minus_distr	40	40.071896	25126	1854
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40	40.085479	30640	2737
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40	40.043081	9800	2502
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_Cmp	40	40.092307	36045	1902
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.list_sum_app	40	40.080451	26190	3541
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_eq0	40	40.012553	3233	650
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.list_max_app	40	40.087775	26926	5375
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	40	40.023802	5222	1845
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	40	40.037590	9646	2341
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	40	40.034322	8500	1755
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	40	40.062280	17283	4294
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Equal_eqlistA	40	40.072842	20042	2285
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	40	40.027110	5365	1596
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	40	40.038618	8951	3287
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_is_even	40	40.073093	12218	1250
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_transp.Permutation_transp_cons	40	40.065831	16138	2220
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qinv_lt_contravar	40	40.076008	5499	983
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	40	40.042852	10737	3562
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	40	40.082975	26171	3669
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	40	40.048277	14282	1465
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	40	40.057709	17549	2880
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	40	23.113365	10716	2411	0.0.10.2.7.0	synth with cache (only 1: intros a n H; only 1: symmetry; only 1: pose proof (land_lnot_diag_low a n H) as H'; only 1: apply add_sub_eq_l; only 1: rewrite add_nocarry_lxor, lxor_lor by trivial; only 1: now apply lor_lnot_diag_low).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lxorC	40	40.063561	19500	4232
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.not_prime_divide	40	40.106064	40153	3371
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.list_max_le	40	40.074183	22205	4723
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.max_elt_spec3	40	40.054019	9746	4716
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Above	40	40.132777	47005	4024
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkpow_ok	40	40.015632	2344	668
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	40	40.061085	16039	4369
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.lt_trans	40	40.092975	32456	4396
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	40	40.044545	13270	2219
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qpower_positive_comp	40	40.059261	19883	2143
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	40	40.041529	10915	2600
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.log2_phi_bounded	40	40.066016	10321	2651
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lxorA	40	40.064068	17863	4098
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_MapsTo	40	40.083310	14865	1999
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.compare	40	40.143264	31132	501
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Empty	40	40.055679	17167	2812
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40	40.051453	14511	3976
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	40	40.030329	6591	1447
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	40	40.048704	15400	3212
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_1	40	40.107634	18166	1880
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Below	40	40.042351	11270	3334
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.mindepth_log_cardinal	40	40.053668	12404	3252
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_inj	40	40.088733	33434	1348
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.list_max_lt	40	40.068732	22047	4368
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40	40.041794	8528	4488
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_MapsTo	40	40.047393	9154	2512
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_complete	40	40.019110	4440	1904
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	40	40.116113	11835	3313
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.max_elt_2	40	40.045661	11044	4778
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lxor0	40	40.068519	20827	4403
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	40	40.108309	20893	3175
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40	40.028110	7003	1431
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_2	40	40.058200	17982	3434
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qpower_comp	40	40.154062	10179	1220
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	40	40.038272	9859	3285
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40	40.050818	13721	3372
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_dev_ok	40	40.010408	2023	885
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_transp.Permutation_Permutation_transp	40	40.084148	31071	4882
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Empty	40	40.139220	22481	3861
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_eq_O_2PI_1	40	40.032397	8971	1977
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lor	40	41.171785	3447	456
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.Complete.Field.ring_S_inj	40	40.126911	58433	1292
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40	40.070748	25734	3164
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.lt_not_eq	40	40.074118	25480	3881
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40	40.054304	16287	2745
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40	40.052943	14829	2715
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	40	40.022302	3753	2103
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_max	40	40.184000	62402	2553
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	40	40.048024	12073	2741
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_land	40	40.552069	11431	1966
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.Complete.Field.gen_phiPOS_discr_sgn	40	40.048958	14349	1489
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	40	40.053255	17005	2520
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_correct	40	40.032053	9038	1056
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40	40.040929	9574	2692
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40	40.036093	5700	1385
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lxor0_r	40	40.069670	20739	4312
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	40	40.055590	15307	4801
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_min	40	40.047128	12575	4753
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.compare	40	40.150265	67717	5104
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_inj	40	40.051141	17482	1706
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.max_elt_spec2	40	40.043467	11074	4540
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Equal	40	40.059160	14347	2705
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40	40.097716	38307	1286
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	40	40.023708	3514	1179
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40	40.051634	17798	3178
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_transp.Permutation_ind_transp	40	40.034208	6099	802
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Above	40	40.109234	9813	1530
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_sym	40	40.058216	19678	1782
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Below	40	40.056073	14720	1923
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40	40.046945	10935	2512
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_complete	40	40.014651	3393	1237
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40	40.029593	8405	2839
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_trans	40	40.052371	16740	1879
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.lt_trans	40	40.074047	31732	2042
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lxor	40	40.392929	7013	694
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.lt_not_eq	40	40.047817	13862	1259
