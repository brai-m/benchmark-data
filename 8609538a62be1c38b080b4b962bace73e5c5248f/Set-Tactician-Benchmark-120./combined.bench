Coq.Init.Logic.Conjunction.proj1	120
Coq.Init.Peano.O_S	120	0	synth with cache (only 1: discriminate).	15.275300	1
Coq.Init.Logic.Equivalence.iff_refl	120
Coq.Init.Specif.sigT_eta	120	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	15.555057	2
Coq.Init.Peano.not_eq_S	120	0.0	synth with cache (only 1: red; only 1: auto).	15.662300	2
Coq.Init.Specif.sig_eta	120	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	16.104914	2
Coq.Init.Specif.sig2_eta	120	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	16.121097	2
Coq.Init.Logic.Conjunction.proj2	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	16.359029	2
Coq.Init.Specif.sigT2_eta	120	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	16.277921	2
Coq.Init.Peano.pred_Sn	120	0.0	synth with cache (only 1: simpl; only 1: reflexivity).	16.374964	2
Coq.Init.Peano.plus_O_n	120	0	synth with cache (only 1: reflexivity).	1.655302	1
Coq.Init.Logic.not_iff_compat	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply imp_iff_compat_r; only 1: assumption).	16.869533	5
Coq.Init.Peano.plus_Sn_m	120	0	synth with cache (only 1: reflexivity).	1.683111	1
Coq.Init.Specif.inhabited_sig_to_exists	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: destruct X; only 1: exists x; only 1: exact p).	18.221664	5
Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	21.261454	2
Coq.Init.Specif.sigT.eq_existT_curried_map	120	0.0.0	synth with cache (only 1: destruct p; only 1: destruct q; only 1: reflexivity).	5.744892	3
Coq.Init.Logic.Equivalence.iff_sym	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto).	22.056927	13
Coq.Init.Logic.and_iff_compat_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: trivial; only 1: auto; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: trivial; only 1: auto).	22.062256	16
Coq.Init.Peano.plus_n_Sm	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	6.744143	7
Coq.Init.Specif.sigT.eq_existT_curried_congr	120	0.0.0	synth with cache (only 1: destruct r; only 1: destruct 1; only 1: reflexivity).	6.439550	3
Coq.Init.Specif.sigT.eq_existT_curried_trans	120	0.0.0	synth with cache (only 1: destruct p'; only 1: destruct q'; only 1: reflexivity).	6.825254	3
Coq.Init.Logic.imp_iff_compat_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: apply H0; only 1: assumption; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: apply H; only 1: assumption).	23.031858	16
Coq.Init.Logic.imp_iff_compat_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: apply H1; only 1: assumption; only 1: intros ?; only 1: intros ?; only 1: apply H0; only 1: apply H1; only 1: assumption).	23.147517	16
Coq.Init.Logic.Equivalence.iff_trans	120	0.0.0.3.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	23.419362	31
Coq.Init.Logic.and_iff_compat_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: apply H; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: apply H0; only 1: assumption; only 1: assumption).	23.722080	18
Coq.Init.Logic.or_comm	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: right; only 1: assumption; only 1: left; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: right; only 1: assumption; only 1: left; only 1: assumption).	8.964441	14
Coq.Init.Logic.or_iff_compat_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: left; only 1: apply H; only 1: assumption; only 1: right; only 1: assumption; only 1: intros ?; only 1: destruct H1; only 1: left; only 1: apply H0; only 1: assumption; only 1: right; only 1: assumption).	25.421506	20
Coq.Init.Logic.universal_quantification.inst	120	0	synth with cache (only 1: trivial).	2.537356	1
Coq.Init.Logic.and_cancel_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: apply H1; only 1: split; only 1: assumption; only 1: apply H; only 1: assumption; only 1: intros; only 1: apply H2; only 1: split; only 1: assumption; only 1: apply H0; only 1: assumption; only 1: apply and_iff_compat_r).	26.011283	22
Coq.Init.Logic.and_cancel_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: apply H1; only 1: split; only 1: apply H; only 1: assumption; only 1: assumption; only 1: intros; only 1: apply H2; only 1: split; only 1: apply H0; only 1: assumption; only 1: assumption; only 1: apply and_iff_compat_l).	26.177329	22
Coq.Init.Specif.exists_to_inhabited_sig	120	0.2.1.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: split; only 1: exists x; only 1: exact H).	27.618300	24
Coq.Init.Logic.Logic_lemmas.equality.eq_sym	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	5.097920	2
Coq.Init.Logic.Logic_lemmas.absurd	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold not; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: assumption).	5.539505	7
Coq.Init.Logic.or_cancel_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: destruct H1; only 1: right; only 1: assumption; only 1: destruct H; only 1: assumption; only 1: assumption; only 1: assumption; only 1: intros; only 1: destruct H2; only 1: right; only 1: assumption; only 1: destruct H0; only 1: assumption; only 1: assumption; only 1: assumption; only 1: apply or_iff_compat_l).	15.852909	26
Coq.Init.Datatypes.eq_true_rec_r	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0 in H; only 1: assumption).	30.721027	6
Coq.Init.Tactics.decide_left	120	0.3.0.0.0	synth with cache (only 1: intros; only 1: destruct decide; only 1: apply H0; only 1: destruct n; only 1: auto).	31.683394	23
Coq.Init.Logic.Logic_lemmas.equality.eq_trans	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: destruct 1; only 1: trivial).	6.337574	4
Coq.Init.Logic.Logic_lemmas.equality.f_equal	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	5.877012	2
Coq.Init.Logic.or_assoc	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: left; only 1: assumption; only 1: right; only 1: left; only 1: assumption; only 1: right; only 1: right; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: left; only 1: left; only 1: assumption; only 1: destruct H; only 1: left; only 1: right; only 1: assumption; only 1: right; only 1: assumption).	14.596565	24
Coq.Init.Peano.mult_n_O	120	0.0.0.0.33	synth with cache (only 1: apply nat_rect; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	15.171290	69
Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: destruct 1; only 1: trivial).	6.749339	4
Coq.Init.Logic.and_comm	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: split; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: split; only 1: assumption; only 1: assumption).	31.980578	29
Coq.Init.Specif.sigT.rew_sigT	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	10.040361	3
Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	12.056926	2
Coq.Init.Logic.or_cancel_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: destruct H1; only 1: left; only 1: assumption; only 1: assumption; only 1: destruct H; only 1: assumption; only 1: assumption; only 1: intros; only 1: destruct H2; only 1: left; only 1: assumption; only 1: assumption; only 1: destruct H0; only 1: assumption; only 1: assumption; only 1: apply or_iff_compat_r).	18.111279	30
Coq.Init.Logic.iff_and	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto).	12.395558	18
Coq.Init.Logic.rew_opp_r	120	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	2.639064	3
Coq.Init.Logic.rew_opp_l	120	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	2.628265	3
Coq.Init.Logic.f_equal2	120	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	2.771025	3
Coq.Init.Logic.equality_dep.f_equal_dep	120	0.0.1	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).	5.208477	5
Coq.Init.Logic.f_equal3	120	0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	3.329045	4
Coq.Init.Logic.f_equal_compose	120	0.0.0	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	2.726862	3
Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	120	0.0.0.0.3.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: destruct H0; only 1: destruct H; only 1: trivial).	11.364779	14
Coq.Init.Logic.eq_trans_refl_l	120	0.0.0	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	2.776491	3
Coq.Init.Logic.equality_dep2.f_equal_dep2	120	0.0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: destruct H0; only 1: reflexivity).	6.678396	4
Coq.Init.Logic.f_equal4	120	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	3.989396	5
Coq.Init.Datatypes.eq_true_ind_r	120	0.1.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: assumption).	38.439371	15
Coq.Init.Logic.f_equal5	120	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	4.577978	6
Coq.Init.Logic.eq_sym_involutive	120	0.0.0	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	2.631375	3
Coq.Init.Tactics.decide_right	120	0.0.0.0	synth with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	8.164516	4
Coq.Init.Specif.sigT.eq_existT_curried	120	0.1.0	synth with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	24.602598	6
Coq.Init.Logic.eq_trans_refl_r	120	0.0.0	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	3.219868	3
Coq.Init.Logic.eq_trans_sym_inv_l	120	0.0.0	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	2.713350	3
Coq.Init.Logic.eq_trans_sym_inv_r	120	0.0.0	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	2.744610	3
Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	120	0.0.1.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: destruct 1; only 1: trivial).	40.699196	7
Coq.Init.Logic.eq_trans_assoc	120	0.0.0	synth with cache (only 1: intros; only 1: destruct e''; only 1: reflexivity).	2.854033	3
Coq.Init.Specif.sigT.eq_sigT_uncurried	120	0.0.0.0.0.0.0.0	synth with cache (only 1: destruct u; only 1: destruct v; only 1: simpl in *; only 1: destruct pq; only 1: destruct x1; only 1: simpl in *; only 1: destruct e; only 1: reflexivity).	40.606155	8
Coq.Init.Logic.rew_map	120	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	2.987905	3
Coq.Init.Logic.map_subst	120	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	2.783869	3
Coq.Init.Datatypes.surjective_pairing	120	0.0.0	synth with cache (only 1: intros; only 1: destruct p; only 1: reflexivity).	3.391395	3
Coq.Init.Logic.map_subst_map	120	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	2.646343	3
Coq.Init.Logic.eq_refl_map_distr	120	0	synth with cache (only 1: reflexivity).	1.637846	1
Coq.Init.Datatypes.andb_true_intro	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: intros ?; only 1: destruct b1; only 1: simpl; only 1: intros ?; only 1: destruct b2; only 1: intros ?; only 1: destruct H; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: assumption; only 1: simpl; only 1: intros ?; only 1: destruct b2; only 1: intros ?; only 1: destruct H; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: assumption).	43.337831	28
Coq.Init.Logic.rew_swap	120	0.0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: destruct H0; only 1: reflexivity).	3.488124	4
Coq.Init.Logic.eq_trans_map	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct H2; only 1: destruct H1'; only 1: destruct H2'; only 1: destruct H1; only 1: reflexivity).	5.319393	6
Coq.Init.Logic.rew_compose	120	0.0.0.0	synth with cache (only 1: intros; only 1: destruct H2; only 1: destruct H1; only 1: reflexivity).	4.010134	4
Coq.Init.Logic.eq_trans_map_distr	120	0.0.0	synth with cache (only 1: intros; only 1: destruct e'; only 1: reflexivity).	3.831909	3
Coq.Init.Logic.eq_sym_map_distr	120	0.0.1	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	3.675000	5
Coq.Init.Specif.sigT.eq_existT_uncurried	120	0.1.0.0	synth with cache (only 1: destruct pq; only 1: destruct e; only 1: destruct x; only 1: reflexivity).	45.869940	7
Coq.Init.Datatypes.eq_true_rect_r	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H in X; only 1: assumption).	15.186919	6
Coq.Init.Logic.rew_const	120	0.0.0	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	2.846013	3
Coq.Init.Logic.eq_trans_sym_distr	120	0.0.0.0	synth with cache (only 1: intros; only 1: destruct e'; only 1: destruct e; only 1: reflexivity).	3.755305	4
Coq.Init.Logic.eq_trans_rew_distr	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct e'; only 1: destruct e; only 1: simpl; only 1: trivial).	4.461964	5
Coq.Init.Logic.exists_inhabited	120	0.0	synth with cache (only 1: destruct 1; only 1: auto).	2.187595	2
Coq.Init.Specif.sig.rew_sig	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	8.043943	3
Coq.Init.Datatypes.rew_pair	120	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	3.352759	3
Coq.Init.Logic.iff_to_and	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto).	28.508477	44
Coq.Init.Logic.and_assoc	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: split; only 1: assumption; only 1: split; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: destruct H0; only 1: split; only 1: split; only 1: assumption; only 1: assumption; only 1: assumption).	51.592879	58
Coq.Init.Peano.plus_n_O	120	0.0.0.0.3.3	synth with cache (only 1: intros; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	53.131251	61
Coq.Init.Logic.inhabited_covariant	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: apply X; only 1: assumption).	7.981352	6
Coq.Init.Specif.sig.eq_exist_uncurried	120	0.1.0.0	synth with cache (only 1: destruct pq; only 1: destruct e; only 1: destruct x; only 1: reflexivity).	31.946632	8
Coq.Init.Logic.ex.eq_ex_uncurried	120	0.0.0.0	synth with cache (only 1: destruct pq; only 1: destruct H; only 1: destruct x; only 1: reflexivity).	4.436364	4
Coq.Init.Logic.ex.rew_ex	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	5.958036	5
Coq.Init.Logic.ex2.rew_ex2	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	4.637670	3
Coq.Init.Logic.ex2.eq_ex2_uncurried	120	0.0.0.0.0.0	synth with cache (only 1: destruct pq; only 1: destruct H0; only 1: destruct H; only 1: destruct x; only 1: simpl in *; only 1: reflexivity).	6.320672	6
Coq.Init.Specif.sigT2.eq_existT2_uncurried	120	0.0.0.0.0.0	synth with cache (only 1: destruct pqr; only 1: destruct e0; only 1: destruct e; only 1: destruct x; only 1: simpl; only 1: reflexivity).	16.410441	6
Coq.Init.Logic.eq_stepl	120	1.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- H0; only 1: exact H).	18.274490	16
Coq.Init.Logic.iff_stepl	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: auto; only 1: auto).	19.797438	27
Coq.Init.Specif.sig.eq_sig_uncurried	120	0.1.0.0.0.0.0	synth with cache (only 1: destruct u; only 1: destruct v; only 1: simpl in *; only 1: destruct pq; only 1: destruct e; only 1: destruct x1; only 1: reflexivity).	42.510372	14
Coq.Init.Specif.sigT2.eq_sigT2_uncurried	120	0.0.0.0.0.0.0.0	synth with cache (only 1: destruct u; only 1: destruct v; only 1: simpl in *; only 1: destruct pqr; only 1: destruct e0; only 1: destruct e; only 1: destruct x1; only 1: reflexivity).	22.550061	8
Coq.Init.Peano.le_n_S	120	0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: constructor; only 1: trivial).	16.786510	4
Coq.Init.Logic.Logic_lemmas.eq_ind_r	120	0.54.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim eq_sym with (1 := H0); only 1: assumption).	51.676866	163
Coq.Init.Specif.sigT2.rew_sigT2	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	17.954417	3
Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	120	0.0.0.0.7.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: destruct H0; only 1: destruct H; only 1: trivial).	51.116064	27
Coq.Init.Logic.Logic_lemmas.eq_rec_r	120	0.58.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim eq_sym with (1 := H0); only 1: assumption).	57.599482	228
Coq.Init.Specif.sig2.eq_exist2_uncurried	120	0.0.0.0.0.0	synth with cache (only 1: destruct pqr; only 1: destruct e0; only 1: destruct e; only 1: destruct x; only 1: simpl; only 1: reflexivity).	16.156073	6
Coq.Init.Logic.Logic_lemmas.eq_rect_r	120	0.65.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim eq_sym with (1 := H); only 1: assumption).	55.807288	233
Coq.Init.Logic_Type.identity_ind_r	120	0.5.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: exact H).	48.951023	36
Coq.Init.Datatypes.CompOpp_involutive	120	0.0.0.0.3	synth with cache (only 1: intros; only 1: destruct c; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	19.982591	14
Coq.Init.Specif.sig2.eq_sig2_uncurried	120	0.0.0.0.0.0.0.0	synth with cache (only 1: destruct u; only 1: destruct v; only 1: simpl in *; only 1: destruct pqr; only 1: destruct e0; only 1: destruct e; only 1: destruct x1; only 1: reflexivity).	26.608444	9
Coq.Init.Peano.le_0_n	120	0.1.0.6.4	synth with cache (only 1: intros ?; only 1: elim n; only 1: constructor; only 1: right; only 1: trivial).	47.478839	133
Coq.Init.Logic_Type.identity_rec_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case identity_sym with (1 := H0); only 1: trivial).	16.982225	8
Coq.Init.Peano.nat_case	120	0.0.7.4	synth with cache (only 1: intros; only 1: destruct n; only 1: auto; only 1: auto).	39.060292	74
Coq.Init.Logic_Type.identity_rect_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case identity_sym with (1 := H); only 1: trivial).	18.130093	10
Coq.Init.Specif.sig2.rew_sig2	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	10.261373	4
Coq.Init.Datatypes.andb_prop	120
Coq.Init.Logic.or_iff_compat_l	120
Coq.Init.Wf.Well_founded.well_founded_induction_type	120
Coq.Init.Logic.neg_false	120
Coq.Init.Peano.n_Sn	120
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	120	1.4.2.0	synth with cache (only 1: intros ?; only 1: intros; only 1: destruct r; only 1: reflexivity).	33.799501	62
Coq.Init.Wf.Well_founded.Acc_inv	120
Coq.Init.Byte.of_bits_to_bits	120
Coq.Init.Datatypes.CompOpp_iff	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: apply CompOpp_inj; only 1: rewrite CompOpp_involutive; only 1: auto; only 1: intros; only 1: apply CompOpp_inj; only 1: rewrite CompOpp_involutive; only 1: auto).	17.274464	9
Coq.Init.Datatypes.CompSpec2Type	120	0.0.0	synth with cache (only 1: intros; only 1: apply CompareSpec2Type; only 1: assumption).	7.242461	3
Coq.Init.Peano.mult_n_Sm	120
Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	120
Coq.Init.Logic.universal_quantification.gen	120
Coq.Init.Specif.sigT.eq_sigT_rect	120
Coq.Init.Peano.le_pred	120
Coq.Init.Logic.Logic_lemmas.eq_sind_r	120
Coq.Init.Specif.absurd_set	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply False_rec; only 1: apply H0; only 1: assumption).	9.841280	7
Coq.Init.Peano.le_S_n	120
Coq.Init.Specif.sig.eq_sig_rect	120
Coq.Init.Peano.nat_rect_succ_r	120	1.0.0.0.1.0	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- IHn; only 1: trivial).	37.407188	24
Coq.Init.Logic.eq_id_comm_l	120
Coq.Init.Specif.sig.eq_sig_uncurried_iff	120
Coq.Init.Logic.eq_id_comm_r	120
Coq.Init.Wf.Well_founded.well_founded_induction	120
Coq.Init.Datatypes.injective_projections	120
Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	120
Coq.Init.Datatypes.pair_equal_spec	120
Coq.Init.Logic.unique_existence	120
Coq.Init.Logic.forall_exists_unique_domain_coincide	120
Coq.Init.Logic.forall_exists_coincide_unique_domain	120
Coq.Init.Specif.Choice_lemmas.bool_choice	120
Coq.Init.Datatypes.comparison_eq_stable	120
Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	120
Coq.Init.Wf.Well_founded.well_founded_ind	120
Coq.Init.Specif.sigT2.eq_sigT2_rect	120
Coq.Init.Peano.nat_double_ind	120
Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	120
Coq.Init.Peano.min_r	120	0.0.0.0.0.0.0.0.0.5.0.0.2.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: inversion 1; only 1: simpl; only 1: auto; only 1: intros ?; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal; only 1: apply IHn; only 1: apply le_S_n; only 1: trivial).	83.387211	68
Coq.Init.Byte.to_bits_of_bits	120
Coq.Init.Specif.sig2.eq_sig2_rect	120
Coq.Init.Peano.max_l	120
Coq.Init.Datatypes.CompOpp_inj	120
Coq.Init.Peano.max_r	120
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	120
Coq.Init.Peano.min_l	120
Coq.Init.Specif.Choice_lemmas.Choice	120
Coq.Init.Peano.nat_rect_plus	120	3.0.0.0.0.9.0	synth with cache (only 1: intros; only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite IHn; only 1: trivial).	95.329865	241
Coq.Init.Specif.Choice_lemmas.Choice2	120
Coq.Init.Datatypes.CompareSpec2Type	120
Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	120
Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	120
