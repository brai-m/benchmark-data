Coq.Init.Peano.O_S	120	0	synth with cache (only 1: discriminate).	11.411680	1
Coq.Init.Specif.sigT_eta	120	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	12.524735	2
Coq.Init.Logic.Conjunction.proj1	120
Coq.Init.Logic.Equivalence.iff_refl	120
Coq.Init.Peano.not_eq_S	120	0.0	synth with cache (only 1: red; only 1: auto).	12.813132	2
Coq.Init.Specif.sig2_eta	120	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	12.436555	2
Coq.Init.Peano.pred_Sn	120	0.0	synth with cache (only 1: simpl; only 1: reflexivity).	13.180271	2
Coq.Init.Specif.sigT2_eta	120	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	12.833285	2
Coq.Init.Logic.Conjunction.proj2	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	13.388906	2
Coq.Init.Specif.sig_eta	120	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	13.368470	2
Coq.Init.Peano.plus_O_n	120	0	synth with cache (only 1: reflexivity).	1.670592	1
Coq.Init.Logic.not_iff_compat	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply imp_iff_compat_r; only 1: assumption).	13.194540	5
Coq.Init.Peano.plus_Sn_m	120	0	synth with cache (only 1: reflexivity).	1.652954	1
Coq.Init.Specif.inhabited_sig_to_exists	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: destruct X; only 1: exists x; only 1: exact p).	16.242982	5
Coq.Init.Specif.sigT.eq_existT_curried_map	120	0.0.0	synth with cache (only 1: destruct p; only 1: destruct q; only 1: reflexivity).	5.708837	3
Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	18.846261	2
Coq.Init.Logic.and_iff_compat_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: trivial; only 1: auto; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: trivial; only 1: auto).	19.352690	16
Coq.Init.Logic.Equivalence.iff_sym	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto).	19.885580	13
Coq.Init.Specif.sigT.eq_existT_curried_congr	120	0.0.0	synth with cache (only 1: destruct r; only 1: destruct 1; only 1: reflexivity).	6.650903	3
Coq.Init.Specif.sigT.eq_existT_curried_trans	120	0.0.0	synth with cache (only 1: destruct p'; only 1: destruct q'; only 1: reflexivity).	7.066828	3
Coq.Init.Peano.plus_n_Sm	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	7.385377	7
Coq.Init.Logic.imp_iff_compat_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: apply H1; only 1: assumption; only 1: intros ?; only 1: intros ?; only 1: apply H0; only 1: apply H1; only 1: assumption).	19.909409	16
Coq.Init.Logic.imp_iff_compat_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: apply H0; only 1: assumption; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: apply H; only 1: assumption).	20.375853	16
Coq.Init.Logic.Equivalence.iff_trans	120	0.0.0.3.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	20.960026	31
Coq.Init.Logic.and_iff_compat_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: apply H; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: apply H0; only 1: assumption; only 1: assumption).	20.958645	18
Coq.Init.Logic.or_comm	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: right; only 1: assumption; only 1: left; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: right; only 1: assumption; only 1: left; only 1: assumption).	9.117654	14
Coq.Init.Logic.universal_quantification.inst	120	0	synth with cache (only 1: trivial).	2.615763	1
Coq.Init.Logic.or_iff_compat_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: left; only 1: apply H; only 1: assumption; only 1: right; only 1: assumption; only 1: intros ?; only 1: destruct H1; only 1: left; only 1: apply H0; only 1: assumption; only 1: right; only 1: assumption).	22.861653	20
Coq.Init.Logic.and_cancel_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: apply H1; only 1: split; only 1: assumption; only 1: apply H; only 1: assumption; only 1: intros; only 1: apply H2; only 1: split; only 1: assumption; only 1: apply H0; only 1: assumption; only 1: apply and_iff_compat_r).	23.350525	22
Coq.Init.Logic.and_cancel_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: apply H1; only 1: split; only 1: apply H; only 1: assumption; only 1: assumption; only 1: intros; only 1: apply H2; only 1: split; only 1: apply H0; only 1: assumption; only 1: assumption; only 1: apply and_iff_compat_l).	24.594554	22
Coq.Init.Specif.exists_to_inhabited_sig	120	0.2.1.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: split; only 1: exists x; only 1: exact H).	25.131536	24
Coq.Init.Logic.Logic_lemmas.equality.eq_sym	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	4.802230	2
Coq.Init.Logic.Logic_lemmas.absurd	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold not; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: assumption).	5.720510	7
Coq.Init.Logic.or_assoc	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: left; only 1: assumption; only 1: right; only 1: left; only 1: assumption; only 1: right; only 1: right; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: left; only 1: left; only 1: assumption; only 1: destruct H; only 1: left; only 1: right; only 1: assumption; only 1: right; only 1: assumption).	14.755094	24
Coq.Init.Logic.Logic_lemmas.equality.eq_trans	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: destruct 1; only 1: trivial).	6.440548	4
Coq.Init.Peano.mult_n_O	120	0.0.0.0.33	synth with cache (only 1: apply nat_rect; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	15.480832	69
Coq.Init.Tactics.decide_left	120	0.3.0.0.0	synth with cache (only 1: intros; only 1: destruct decide; only 1: apply H0; only 1: destruct n; only 1: auto).	29.354918	23
Coq.Init.Logic.or_cancel_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: destruct H1; only 1: right; only 1: assumption; only 1: destruct H; only 1: assumption; only 1: assumption; only 1: assumption; only 1: intros; only 1: destruct H2; only 1: right; only 1: assumption; only 1: destruct H0; only 1: assumption; only 1: assumption; only 1: assumption; only 1: apply or_iff_compat_l).	16.936314	26
Coq.Init.Logic.Logic_lemmas.equality.f_equal	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	6.374155	2
Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: destruct 1; only 1: trivial).	6.998082	4
Coq.Init.Datatypes.eq_true_rec_r	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0 in H; only 1: assumption).	29.842391	6
Coq.Init.Logic.and_comm	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: split; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: split; only 1: assumption; only 1: assumption).	29.958045	29
Coq.Init.Specif.sigT.rew_sigT	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	10.625805	3
Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	12.636914	2
Coq.Init.Logic.or_cancel_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: destruct H1; only 1: left; only 1: assumption; only 1: assumption; only 1: destruct H; only 1: assumption; only 1: assumption; only 1: intros; only 1: destruct H2; only 1: left; only 1: assumption; only 1: assumption; only 1: destruct H0; only 1: assumption; only 1: assumption; only 1: apply or_iff_compat_r).	18.681372	30
Coq.Init.Logic.iff_and	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto).	12.331264	18
Coq.Init.Logic.rew_opp_r	120	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	2.757931	3
Coq.Init.Logic.rew_opp_l	120	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	2.747171	3
Coq.Init.Logic.f_equal2	120	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	2.866195	3
Coq.Init.Logic.equality_dep.f_equal_dep	120	0.0.1	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).	5.218418	5
Coq.Init.Logic.f_equal3	120	0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	3.460440	4
Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	120	0.0.0.0.3.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: destruct H0; only 1: destruct H; only 1: trivial).	11.534061	14
Coq.Init.Logic.f_equal_compose	120	0.0.0	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	2.741161	3
Coq.Init.Logic.f_equal4	120	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	3.990764	5
Coq.Init.Logic.eq_trans_refl_l	120	0.0.0	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	2.915552	3
Coq.Init.Logic.equality_dep2.f_equal_dep2	120	0.0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: destruct H0; only 1: reflexivity).	7.174211	4
Coq.Init.Logic.f_equal5	120	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	4.722818	6
Coq.Init.Specif.sigT.eq_existT_curried	120	0.1.0	synth with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	24.895620	6
Coq.Init.Logic.eq_trans_refl_r	120	0.0.0	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	3.208227	3
Coq.Init.Tactics.decide_right	120	0.0.0.0	synth with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	8.338004	4
Coq.Init.Specif.sigT.eq_sigT_uncurried	120	0.0.0.0.0.0.0.0	synth with cache (only 1: destruct u; only 1: destruct v; only 1: simpl in *; only 1: destruct pq; only 1: destruct x1; only 1: simpl in *; only 1: destruct e; only 1: reflexivity).	37.122161	8
Coq.Init.Logic.eq_sym_involutive	120	0.0.0	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	2.641000	3
Coq.Init.Logic.eq_trans_sym_inv_l	120	0.0.0	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	2.790695	3
Coq.Init.Logic.eq_trans_sym_inv_r	120	0.0.0	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	2.796067	3
Coq.Init.Datatypes.eq_true_ind_r	120	0.1.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: assumption).	38.180103	15
Coq.Init.Logic.rew_map	120	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	2.908860	3
Coq.Init.Logic.eq_trans_assoc	120	0.0.0	synth with cache (only 1: intros; only 1: destruct e''; only 1: reflexivity).	3.485166	3
Coq.Init.Logic.map_subst	120	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	2.891306	3
Coq.Init.Logic.map_subst_map	120	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	2.843105	3
Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	120	0.0.1.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: destruct 1; only 1: trivial).	40.433185	7
Coq.Init.Logic.rew_swap	120	0.0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: destruct H0; only 1: reflexivity).	3.548838	4
Coq.Init.Logic.eq_refl_map_distr	120	0	synth with cache (only 1: reflexivity).	1.580242	1
Coq.Init.Logic.eq_trans_map	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct H2; only 1: destruct H1'; only 1: destruct H2'; only 1: destruct H1; only 1: reflexivity).	5.080022	6
Coq.Init.Datatypes.surjective_pairing	120	0.0.0	synth with cache (only 1: intros; only 1: destruct p; only 1: reflexivity).	3.528006	3
Coq.Init.Logic.rew_compose	120	0.0.0.0	synth with cache (only 1: intros; only 1: destruct H2; only 1: destruct H1; only 1: reflexivity).	4.240971	4
Coq.Init.Datatypes.andb_true_intro	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: intros ?; only 1: destruct b1; only 1: simpl; only 1: intros ?; only 1: destruct b2; only 1: intros ?; only 1: destruct H; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: assumption; only 1: simpl; only 1: intros ?; only 1: destruct b2; only 1: intros ?; only 1: destruct H; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: assumption).	42.230580	28
Coq.Init.Logic.eq_sym_map_distr	120	0.0.1	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	3.395172	5
Coq.Init.Logic.eq_trans_map_distr	120	0.0.0	synth with cache (only 1: intros; only 1: destruct e'; only 1: reflexivity).	3.897948	3
Coq.Init.Specif.sigT.eq_existT_uncurried	120	0.1.0.0	synth with cache (only 1: destruct pq; only 1: destruct e; only 1: destruct x; only 1: reflexivity).	43.852210	7
Coq.Init.Logic.rew_const	120	0.0.0	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	3.125276	3
Coq.Init.Specif.sig.rew_sig	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	8.061383	3
Coq.Init.Logic.eq_trans_rew_distr	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct e'; only 1: destruct e; only 1: simpl; only 1: trivial).	4.630019	5
Coq.Init.Logic.eq_trans_sym_distr	120	0.0.0.0	synth with cache (only 1: intros; only 1: destruct e'; only 1: destruct e; only 1: reflexivity).	4.869720	4
Coq.Init.Datatypes.eq_true_rect_r	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H in X; only 1: assumption).	16.074968	6
Coq.Init.Logic.exists_inhabited	120	0.0	synth with cache (only 1: destruct 1; only 1: auto).	2.476452	2
Coq.Init.Logic.and_assoc	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: split; only 1: assumption; only 1: split; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: destruct H0; only 1: split; only 1: split; only 1: assumption; only 1: assumption; only 1: assumption).	47.627573	58
Coq.Init.Logic.iff_to_and	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto).	29.583908	44
Coq.Init.Datatypes.rew_pair	120	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	3.423391	3
Coq.Init.Peano.plus_n_O	120	0.0.0.0.3.3	synth with cache (only 1: intros; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	51.613570	61
Coq.Init.Logic.ex.eq_ex_uncurried	120	0.0.0.0	synth with cache (only 1: destruct pq; only 1: destruct H; only 1: destruct x; only 1: reflexivity).	4.719921	4
Coq.Init.Specif.sig.eq_exist_uncurried	120	0.1.0.0	synth with cache (only 1: destruct pq; only 1: destruct e; only 1: destruct x; only 1: reflexivity).	33.628047	8
Coq.Init.Logic.inhabited_covariant	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: apply X; only 1: assumption).	8.648991	6
Coq.Init.Logic.ex.rew_ex	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	5.964491	5
Coq.Init.Logic.ex2.eq_ex2_uncurried	120	0.0.0.0.0.0	synth with cache (only 1: destruct pq; only 1: destruct H0; only 1: destruct H; only 1: destruct x; only 1: simpl in *; only 1: reflexivity).	5.856258	6
Coq.Init.Logic.ex2.rew_ex2	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	5.042846	3
Coq.Init.Specif.sigT2.eq_existT2_uncurried	120	0.0.0.0.0.0	synth with cache (only 1: destruct pqr; only 1: destruct e0; only 1: destruct e; only 1: destruct x; only 1: simpl; only 1: reflexivity).	16.891569	6
Coq.Init.Logic.eq_stepl	120	1.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- H0; only 1: exact H).	19.364176	16
Coq.Init.Specif.sigT2.eq_sigT2_uncurried	120	0.0.0.0.0.0.0.0	synth with cache (only 1: destruct u; only 1: destruct v; only 1: simpl in *; only 1: destruct pqr; only 1: destruct e0; only 1: destruct e; only 1: destruct x1; only 1: reflexivity).	23.094965	8
Coq.Init.Logic.iff_stepl	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: auto; only 1: auto).	21.731415	27
Coq.Init.Specif.sig.eq_sig_uncurried	120	0.1.0.0.0.0.0	synth with cache (only 1: destruct u; only 1: destruct v; only 1: simpl in *; only 1: destruct pq; only 1: destruct e; only 1: destruct x1; only 1: reflexivity).	45.491811	14
Coq.Init.Specif.sigT2.rew_sigT2	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	9.917721	3
Coq.Init.Peano.le_n_S	120	0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: constructor; only 1: trivial).	18.805130	4
Coq.Init.Logic.Logic_lemmas.eq_ind_r	120	0.54.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim eq_sym with (1 := H0); only 1: assumption).	53.159758	163
Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	120	0.0.0.0.7.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: destruct H0; only 1: destruct H; only 1: trivial).	53.643305	27
Coq.Init.Specif.sig2.eq_exist2_uncurried	120	0.0.0.0.0.0	synth with cache (only 1: destruct pqr; only 1: destruct e0; only 1: destruct e; only 1: destruct x; only 1: simpl; only 1: reflexivity).	16.754297	6
Coq.Init.Logic.Logic_lemmas.eq_rec_r	120	0.58.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim eq_sym with (1 := H0); only 1: assumption).	60.475834	228
Coq.Init.Logic.Logic_lemmas.eq_rect_r	120	0.65.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim eq_sym with (1 := H); only 1: assumption).	58.978729	233
Coq.Init.Datatypes.CompOpp_involutive	120	0.0.0.0.3	synth with cache (only 1: intros; only 1: destruct c; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	20.533969	14
Coq.Init.Logic_Type.identity_ind_r	120	0.5.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: exact H).	52.772381	36
Coq.Init.Specif.sig2.eq_sig2_uncurried	120	0.0.0.0.0.0.0.0	synth with cache (only 1: destruct u; only 1: destruct v; only 1: simpl in *; only 1: destruct pqr; only 1: destruct e0; only 1: destruct e; only 1: destruct x1; only 1: reflexivity).	29.511422	9
Coq.Init.Peano.le_0_n	120	0.1.0.6.4	synth with cache (only 1: intros ?; only 1: elim n; only 1: constructor; only 1: right; only 1: trivial).	49.702881	133
Coq.Init.Logic_Type.identity_rec_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case identity_sym with (1 := H0); only 1: trivial).	18.282657	8
Coq.Init.Peano.nat_case	120	0.0.7.4	synth with cache (only 1: intros; only 1: destruct n; only 1: auto; only 1: auto).	41.134801	74
Coq.Init.Specif.sig2.rew_sig2	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	11.300594	4
Coq.Init.Logic_Type.identity_rect_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case identity_sym with (1 := H); only 1: trivial).	19.490821	10
Coq.Init.Logic.neg_false	120
Coq.Init.Peano.n_Sn	120
Coq.Init.Logic.or_iff_compat_l	120
Coq.Init.Byte.of_bits_to_bits	120
Coq.Init.Datatypes.andb_prop	120
Coq.Init.Wf.Well_founded.Acc_inv	120
Coq.Init.Wf.Well_founded.well_founded_induction_type	120
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	120	1.4.2.0	synth with cache (only 1: intros ?; only 1: intros; only 1: destruct r; only 1: reflexivity).	37.753748	62
Coq.Init.Datatypes.CompOpp_iff	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: apply CompOpp_inj; only 1: rewrite CompOpp_involutive; only 1: auto; only 1: intros; only 1: apply CompOpp_inj; only 1: rewrite CompOpp_involutive; only 1: auto).	20.460004	9
Coq.Init.Peano.mult_n_Sm	120
Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	120
Coq.Init.Logic.universal_quantification.gen	120
Coq.Init.Specif.sigT.eq_sigT_rect	120
Coq.Init.Peano.le_pred	120
Coq.Init.Datatypes.CompSpec2Type	120	0.0.0	synth with cache (only 1: intros; only 1: apply CompareSpec2Type; only 1: assumption).	7.681652	3
Coq.Init.Logic.Logic_lemmas.eq_sind_r	120
Coq.Init.Peano.le_S_n	120
Coq.Init.Specif.absurd_set	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply False_rec; only 1: apply H0; only 1: assumption).	10.491188	7
Coq.Init.Specif.sig.eq_sig_rect	120
Coq.Init.Wf.Well_founded.well_founded_induction	120
Coq.Init.Logic.eq_id_comm_l	120
Coq.Init.Specif.sig.eq_sig_uncurried_iff	120
Coq.Init.Logic.eq_id_comm_r	120
Coq.Init.Datatypes.injective_projections	120
Coq.Init.Logic.unique_existence	120
Coq.Init.Datatypes.pair_equal_spec	120
Coq.Init.Logic.forall_exists_unique_domain_coincide	120
Coq.Init.Logic.forall_exists_coincide_unique_domain	120
Coq.Init.Peano.nat_rect_succ_r	120	1.0.0.0.1.0	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- IHn; only 1: trivial).	39.909378	24
Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	120
Coq.Init.Datatypes.comparison_eq_stable	120
Coq.Init.Specif.Choice_lemmas.bool_choice	120
Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	120
Coq.Init.Wf.Well_founded.well_founded_ind	120
Coq.Init.Specif.sigT2.eq_sigT2_rect	120
Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	120
Coq.Init.Peano.nat_double_ind	120
Coq.Init.Byte.to_bits_of_bits	120
Coq.Init.Peano.min_r	120	0.0.0.0.0.0.0.0.0.5.0.0.2.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: inversion 1; only 1: simpl; only 1: auto; only 1: intros ?; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal; only 1: apply IHn; only 1: apply le_S_n; only 1: trivial).	86.367807	68
Coq.Init.Specif.sig2.eq_sig2_rect	120
Coq.Init.Peano.max_l	120
Coq.Init.Datatypes.CompOpp_inj	120
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	120
Coq.Init.Peano.nat_rect_plus	120	3.0.0.0.0.9.0	synth with cache (only 1: intros; only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite IHn; only 1: trivial).	89.281429	241
Coq.Init.Peano.max_r	120
Coq.Init.Peano.min_l	120
Coq.Init.Specif.Choice_lemmas.Choice	120
Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	120
Coq.Init.Specif.Choice_lemmas.Choice2	120
Coq.Init.Datatypes.CompareSpec2Type	120
Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	120
