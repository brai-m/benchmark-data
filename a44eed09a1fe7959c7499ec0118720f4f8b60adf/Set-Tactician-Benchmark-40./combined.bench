
Coq.micromega.OrderedRing.rplus_morph_Proper	40
Coq.micromega.OrderedRing.rtimes_morph_Proper	40
Coq.micromega.OrderedRing.ropp_morph_Proper	40
Coq.micromega.OrderedRing.rle_morph_Proper	40
Coq.micromega.OrderedRing.rlt_morph_Proper	40
Coq.micromega.OrderedRing.rminus_morph_Proper	40
Coq.micromega.OrderedRing.Rneq_symm	40	40.10.111.14	search with cache (only 1: intros; only 1: intros H0; only 1: apply H; only 1: now elim H).	28.379267931	97285
Coq.micromega.OrderedRing.Rplus_0_l	40
Coq.micromega.OrderedRing.Rplus_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0133831501007	2
Coq.micromega.OrderedRing.Rtimes_0_r	40	0.5	search with cache (only 1: intro; only 1: ring).	0.0149810314178	7
Coq.micromega.OrderedRing.Rplus_comm	40	4.4.5	search with cache (only 1: intro; only 1: intro; only 1: ring).	0.251160860062	140
Coq.micromega.OrderedRing.Rtimes_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.203028202057	2
Coq.micromega.OrderedRing.Rtimes_comm	40	2.2	search with cache (only 1: intros; only 1: ring).	0.0165591239929	6
Coq.micromega.OrderedRing.Rminus_eq_0	40
Coq.micromega.OrderedRing.Rplus_cancel_l	40
Coq.micromega.OrderedRing.Req_em	40
Coq.micromega.OrderedRing.Req_dne	40
Coq.micromega.OrderedRing.Rle_lt_eq	40
Coq.micromega.OrderedRing.Rlt_trans	40
Coq.micromega.OrderedRing.Rle_lt_trans	40
Coq.micromega.OrderedRing.Rlt_le_trans	40
Coq.micromega.OrderedRing.Rle_gt_cases	40
Coq.micromega.OrderedRing.Rlt_neq	40	0.4.1.0	search with cache (only 1: intros n m; only 1: rewrite Rlt_le_neq; only 1: intro H; only 1: now destruct H).	0.0188720226288	9
Coq.micromega.OrderedRing.Rle_ngt	40
Coq.micromega.OrderedRing.Rlt_nge	40
Coq.micromega.OrderedRing.Rplus_le_mono_l	40
Coq.micromega.OrderedRing.Rplus_le_mono_r	40
Coq.micromega.OrderedRing.Rplus_lt_mono_l	40
Coq.micromega.OrderedRing.Rplus_lt_mono_r	40	0.0.0.3.1.0	search with cache (only 1: intros n m p; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm n p); only 1: do 2 rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).	0.153683900833	30
Coq.micromega.OrderedRing.Rplus_lt_mono	40
Coq.micromega.OrderedRing.Rplus_le_mono	40
Coq.micromega.OrderedRing.Rplus_lt_le_mono	40
Coq.micromega.OrderedRing.Rplus_le_lt_mono	40
Coq.micromega.OrderedRing.Rplus_pos_pos	40
Coq.micromega.OrderedRing.Rplus_pos_nonneg	40
Coq.micromega.OrderedRing.Rplus_nonneg_pos	40
Coq.micromega.OrderedRing.Rplus_nonneg_nonneg	40
Coq.micromega.OrderedRing.Rle_le_minus	40
Coq.micromega.OrderedRing.Rlt_lt_minus	40
Coq.micromega.OrderedRing.Ropp_lt_mono	40
Coq.micromega.OrderedRing.Ropp_pos_neg	40
Coq.micromega.OrderedRing.Rtimes_nonneg_nonneg	40
Coq.micromega.OrderedRing.Rtimes_pos_neg	40
Coq.micromega.OrderedRing.Rtimes_neg_neg	40
Coq.micromega.OrderedRing.Rtimes_square_nonneg	40
Coq.micromega.OrderedRing.Rtimes_neq_0	40
Coq.micromega.OrderedRing.Ropp_neg_pos	40
Coq.micromega.OrderedRing.Rlt_0_1	40
Coq.micromega.OrderedRing.Rlt_succ_r	40
Coq.micromega.OrderedRing.Rlt_lt_succ	40
Coq.micromega.Ztac.eq_incl	40	1.1	search with cache (only 1: intros; only 1: now subst).	0.0838620662689	26
Coq.micromega.Ztac.elim_concl_eq	40
Coq.micromega.Ztac.elim_concl_le	40	0.8	search with cache (only 1: intros; only 1: Z.order).	0.0556619167328	15
Coq.micromega.Ztac.elim_concl_lt	40	2.1.0.0.0	search with cache (only 1: intros; only 1: destruct (Z_lt_le_dec y x); only 1: exfalso; only 1: Z.order; only 1: Z.order).	0.0539288520813	25
Coq.micromega.Ztac.Zlt_le_add_1	40
Coq.micromega.Ztac.add_le	40	1	search with cache (only 1: now apply Z.add_nonneg_nonneg).	0.0128788948059	2
Coq.micromega.Ztac.mul_le	40	5.0.0	search with cache (only 1: intros; only 1: change 0 with (0 + 0); only 1: Z.order_pos).	0.0823700428009	29
Coq.micromega.ZifyInst.PropAnd	40
Coq.micromega.ZifyInst.PropOr	40	0.0	search with cache (only 1: constructor; only 1: tauto).	0.0413980484009	2
Coq.micromega.ZifyInst.PropArrow	40	0.0	search with cache (only 1: constructor; only 1: tauto).	0.0307960510254	2
Coq.micromega.ZifyInst.PropIff	40	0.0	search with cache (only 1: constructor; only 1: tauto).	0.0540430545807	2
Coq.micromega.ZifyInst.PropNot	40	0.6.19	search with cache (only 1: split; only 1: intros; only 1: tauto).	0.325426101685	404
Coq.micromega.ZifyInst.of_nat_to_nat_eq	40	0.0.2.0.61.1	search with cache (only 1: intros; only 1: destruct x; only 1: trivial; only 1: now rewrite <- Z_N_nat, <- nat_N_Z, N2Nat.id, Z2N.id; only 1: simpl; only 1: trivial).	3.33899712563	10140
Coq.micromega.ZifyInst.z_max_spec	40
Coq.micromega.ZifyInst.z_min_spec	40
Coq.micromega.ZCoeff.req_refl	40
Coq.micromega.ZCoeff.req_sym	40
Coq.micromega.ZCoeff.req_trans	40
Coq.micromega.ZCoeff.rplus_morph_Proper	40
Coq.micromega.ZCoeff.rtimes_morph_Proper	40
Coq.micromega.ZCoeff.ropp_morph_Proper	40
Coq.micromega.ZCoeff.rle_morph_Proper	40
Coq.micromega.ZCoeff.rlt_morph_Proper	40
Coq.micromega.ZCoeff.rminus_morph_Proper	40
Coq.micromega.ZCoeff.ring_ops_wd	40
Coq.micromega.ZCoeff.Zring_morph	40
Coq.micromega.ZCoeff.phi_pos1_pos	40
Coq.micromega.ZCoeff.phi_pos1_succ	40
Coq.micromega.ZCoeff.clt_pos_morph	40
Coq.micromega.ZCoeff.clt_morph	40
Coq.micromega.ZCoeff.Zcleb_morph	40
Coq.micromega.ZCoeff.Zcneqb_morph	40
Coq.micromega.Fourier_util.Rlt_mult_inv_pos	40
Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	40
Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	0.4.1.0	search with cache (only 1: intros x H; only 1: rewrite Rplus_comm; only 1: red; only 1: auto with real).	0.0566790103912	18
Coq.micromega.Fourier_util.Rle_mult_inv_pos	40	0.2.0.0	search with cache (only 1: intros x y H H0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: ring).	0.168794155121	21
Coq.micromega.ZifyClasses.mkapp2	40
Coq.micromega.ZifyClasses.mkapp	40
Coq.micromega.ZifyClasses.mkapp0	40
Coq.micromega.ZifyClasses.mkrel	40
Coq.micromega.ZMicromega.eq_le_iff	40
Coq.micromega.ZMicromega.lt_le_iff	40
Coq.micromega.ZMicromega.le_0_iff	40	0.0.0	search with cache (only 1: split; only 1: now rewrite Z.le_0_sub; only 1: now rewrite Z.le_0_sub).	0.0320789813995	3
Coq.micromega.ZMicromega.le_neg	40	6.2.6.2.0	search with cache (only 1: split; only 1: rewrite ?Z.opp_pos_neg; only 1: Z.order; only 1: rewrite ?Z.opp_pos_neg; only 1: Z.order).	1.11687111855	1902
Coq.micromega.ZMicromega.eq_cnf	40
Coq.micromega.ZMicromega.Zsor	40
Coq.micromega.ZMicromega.ZSORaddon	40
Coq.micromega.ZMicromega.ZNpower	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: unfold Z.pow_pos; only 1: rewrite <- (Z.mul_1_r (pow_pos _ _ _)); only 1: generalize 1; only 1: induction p; only 1: simpl; only 1: intros; only 1: rewrite ?IHp, ?Z.mul_assoc; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite ?IHp, ?Z.mul_assoc; only 1: trivial; only 1: simpl; only 1: intros; only 1: trivial).	33.6422550678	31004
Coq.micromega.ZMicromega.Zeval_expr_compat	40
Coq.micromega.ZMicromega.Zeval_formula_compat'	40
Coq.micromega.ZMicromega.Zeval_nformula_dec	40
Coq.micromega.ZMicromega.ZWeakChecker_sound	40
Coq.micromega.ZMicromega.eval_pol_sub	40
Coq.micromega.ZMicromega.eval_pol_add	40
Coq.micromega.ZMicromega.eval_pol_mul	40
Coq.micromega.ZMicromega.eval_pol_norm	40
Coq.micromega.ZMicromega.Zunsat_sound	40
Coq.micromega.ZMicromega.xnnormalise_correct	40
Coq.micromega.ZMicromega.eval_pol_Pc	40	5.0	search with cache (only 1: intros; only 1: eauto).	0.0168330669403	7
Coq.micromega.ZMicromega.xnormalise_correct	40
Coq.micromega.ZMicromega.cnf_of_list_correct	40
Coq.micromega.ZMicromega.normalise_correct	40
Coq.micromega.ZMicromega.xnegate_correct	40
Coq.micromega.ZMicromega.negate_correct	40
Coq.micromega.ZMicromega.Zdivide_ceiling	40
Coq.micromega.ZMicromega.narrow_interval_lower_bound	40
Coq.micromega.ZMicromega.isZ0_0	40
Coq.micromega.ZMicromega.isZ0_n0	40	0.0.0.0.0.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: intuition congruence; only 1: simpl; only 1: intuition congruence; only 1: simpl; only 1: intuition congruence).	0.066675901413	7
Coq.micromega.ZMicromega.Zdiv_pol_correct	40
Coq.micromega.ZMicromega.Zgcd_pol_ge	40
Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	40
Coq.micromega.ZMicromega.Zdivide_pol_one	40	1.1.2.0.1.122.0.0	search with cache (only 1: induction p; only 1: constructor; only 1: intuition; only 1: constructor; only 1: easy; only 1: constructor; only 1: easy; only 1: easy).	13.7256879807	56868
Coq.micromega.ZMicromega.Zgcd_minus	40
Coq.micromega.ZMicromega.Zdivide_pol_sub	40
Coq.micromega.ZMicromega.Zdivide_pol_sub_0	40
Coq.micromega.ZMicromega.Zgcd_pol_div	40
Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	40
Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40
Coq.micromega.ZMicromega.pos_le_add	40
Coq.micromega.ZMicromega.max_var_le	40
Coq.micromega.ZMicromega.max_var_correct	40
Coq.micromega.ZMicromega.max_var_nformulae_mono_aux	40
Coq.micromega.ZMicromega.max_var_nformulae_mono_aux'	40
Coq.micromega.ZMicromega.max_var_nformulae_correct_aux	40
Coq.micromega.ZMicromega.max_var_nformalae_correct	40
Coq.micromega.ZMicromega.in_bdepth	40
Coq.micromega.ZMicromega.eval_Psatz_sound	40
Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40
Coq.micromega.ZMicromega.cutting_plane_sound	40
Coq.micromega.ZMicromega.genCuttingPlaneNone	40
Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40
Coq.micromega.ZMicromega.eval_nformula_bound_var	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite xnnormalise_correct; only 1: simpl; only 1: easy).	0.0305428504944	4
Coq.micromega.ZMicromega.agree_env_subset	40
Coq.micromega.ZMicromega.agree_env_jump	40
Coq.micromega.ZMicromega.agree_env_tail	40
Coq.micromega.ZMicromega.max_var_acc	40
Coq.micromega.ZMicromega.agree_env_eval_nformula	40
Coq.micromega.ZMicromega.agree_env_eval_nformulae	40
Coq.micromega.ZMicromega.eq_true_iff_eq	40
Coq.micromega.ZMicromega.ZChecker_sound	40
Coq.micromega.ZMicromega.ZTautoChecker_sound	40
Coq.micromega.ZifyBool.Z_of_bool_bound	40	0.1.0.1.10.0.10.24.2	search with cache (only 1: intros; only 1: destruct x; only 1: simpl; only 1: auto with zarith; only 1: simpl; only 1: repeat split; only 1: discriminate; only 1: compute; only 1: congruence).	5.32942390442	15684
Coq.micromega.ZifyBool.Z_eqb_isZero	40
Coq.micromega.ZifyBool.Z_leb_sub	40
Coq.micromega.ZifyBool.Z_ltb_leb	40
Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	40
Coq.micromega.ZifyBool.Z_eqb_ZSpec_ok	40	1.14.2.39	search with cache (only 1: destruct x; only 1: intuition try easy; only 1: intuition try easy; only 1: easy).	3.54834985733	8816
Coq.micromega.ZifyBool.leZeroSpec_ok	40
Coq.micromega.Env.jump_add	40
Coq.micromega.Env.jump_simpl	40
Coq.micromega.Env.jump_tl	40
Coq.micromega.Env.jump_succ	40
Coq.micromega.Env.jump_pred_double	40
Coq.micromega.Env.nth_spec	40
Coq.micromega.Env.nth_jump	40	0.0.0	search with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: apply Pos.add_comm).	0.0163159370422	3
Coq.micromega.Env.nth_pred_double	40	0.0.0	search with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: now rewrite Pos.add_1_r, Pos.succ_pred_double, Pos.add_diag).	0.0184378623962	3
Coq.micromega.Tauto.eval_f_morph	40
Coq.micromega.Tauto.map_simpl	40	2.0.1.4.3	search with cache (only 1: intros Q H H'; only 1: destruct l as [| x xs]; only 1: simpl; only 1: reflexivity; only 1: auto).	0.321487903595	350
Coq.micromega.Tauto.is_X_inv	40
Coq.micromega.Tauto.if_same	40
Coq.micromega.Tauto.is_cnf_tt_cnf_ff	40	0	search with cache (only 1: reflexivity).	0.00611996650696	1
Coq.micromega.Tauto.is_cnf_ff_cnf_ff	40	0	search with cache (only 1: reflexivity).	0.00606298446655	1
Coq.micromega.Tauto.is_cnf_tt_inv	40	3.5.0.11.5	search with cache (only 1: intro H; only 1: induction H as [| a l Hal Hl IH]; only 1: reflexivity; only 1: simpl; only 1: congruence).	0.438636064529	780
Coq.micromega.Tauto.is_cnf_ff_inv	40
Coq.micromega.Tauto.if_cnf_tt	40	1.0.0.1.8.0	search with cache (only 1: unfold cnf_tt; only 1: destruct f; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	0.252393007278	241
Coq.micromega.Tauto.or_cnf_opt_cnf_ff	40	1.4.0.19.5.3.12	search with cache (only 1: destruct f; only 1: reflexivity; only 1: destruct c; only 1: destruct f; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	32.0867741108	80570
Coq.micromega.Tauto.abs_and_pol	40
Coq.micromega.Tauto.abs_or_pol	40
Coq.micromega.Tauto.xcnf_true_mk_arrow_l	40
Coq.micromega.Tauto.or_cnf_opt_cnf_ff_r	40	1.0.2.0.0.2.0.4.0	search with cache (only 1: intros; only 1: unfold or_cnf_opt; only 1: rewrite is_cnf_tt_cnf_ff; only 1: destruct (is_cnf_tt f) eqn:EQ; only 1: simpl; only 1: apply is_cnf_tt_inv in EQ; only 1: congruence; only 1: simpl; only 1: reflexivity).	0.669361114502	1008
Coq.micromega.Tauto.xcnf_true_mk_arrow_r	40
Coq.micromega.Tauto.abst_form_correct	40
Coq.micromega.Tauto.radd_term_term	40
Coq.micromega.Tauto.radd_term_term'	40
Coq.micromega.Tauto.xror_clause_clause	40
Coq.micromega.Tauto.ror_clause_clause	40
Coq.micromega.Tauto.ror_cnf_cnf	40
Coq.micromega.Tauto.ror_opt_cnf_cnf	40
Coq.micromega.Tauto.ratom_cnf	40
Coq.micromega.Tauto.rxcnf_xcnf	40
Coq.micromega.Tauto.eval_cnf_app	40
Coq.micromega.Tauto.eval_cnf_ff	40
Coq.micromega.Tauto.eval_cnf_tt	40	0.0.0	search with cache (only 1: unfold cnf_ff, eval_cnf, eval_clause; only 1: simpl; only 1: tauto).	0.0151250362396	3
Coq.micromega.Tauto.eval_cnf_and_opt	40
Coq.micromega.Tauto.add_term_correct	40
Coq.micromega.Tauto.no_middle_eval_tt	40
Coq.micromega.Tauto.or_clause_correct	40
Coq.micromega.Tauto.or_clause_cnf_correct	40
Coq.micromega.Tauto.eval_cnf_cons	40	0.0.1.0.5.6.8	search with cache (only 1: unfold eval_cnf; only 1: unfold eval_clause; only 1: induction f; only 1: simpl; only 1: tauto; only 1: repeat rewrite make_conj_cons in *; only 1: tauto).	4.94944000244	3516
Coq.micromega.Tauto.eval_cnf_cons_iff	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: tauto).	0.0648620128632	5
Coq.micromega.Tauto.or_cnf_correct	40
Coq.micromega.Tauto.or_cnf_opt_correct	40
Coq.micromega.Tauto.xcnf_correct	40
Coq.micromega.Tauto.cnf_checker_sound	40
Coq.micromega.Tauto.tauto_checker_sound	40
Coq.micromega.Tauto.eval_bf_map	40
Coq.micromega.ZifyComparison.Z_of_comparison_bound	40
Coq.micromega.ZifyComparison.Zcompare_spec	40
Coq.micromega.EnvRing.radd_ext_Proper	40	23	search with cache (only 1: exact (Radd_ext Reqe)).	0.742640018463	677
Coq.micromega.EnvRing.rmul_ext_Proper	40	20	search with cache (only 1: exact (Rmul_ext Reqe)).	0.655293941498	419
Coq.micromega.EnvRing.ropp_ext_Proper	40	23	search with cache (only 1: exact (Ropp_ext Reqe)).	0.769195079803	684
Coq.micromega.EnvRing.rsub_ext_Proper	40	3.19	search with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	0.803086996078	623
Coq.micromega.EnvRing.Peq_ok	40
Coq.micromega.EnvRing.Peq_spec	40
Coq.micromega.EnvRing.Pphi0	40
Coq.micromega.EnvRing.Pphi1	40
Coq.micromega.EnvRing.env_morph	40
Coq.micromega.EnvRing.Pjump_add	40
Coq.micromega.EnvRing.Pjump_xO_tail	40
Coq.micromega.EnvRing.Pjump_pred_double	40
Coq.micromega.EnvRing.mkPinj_ok	40
Coq.micromega.EnvRing.pow_pos_add	40
Coq.micromega.EnvRing.ceqb_spec	40
Coq.micromega.EnvRing.mkPX_ok	40
Coq.micromega.EnvRing.PaddC_ok	40
Coq.micromega.EnvRing.PsubC_ok	40	0.2.0.0.0.0.0.0.1.0.0.0	search with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	7.62837815285	1741
Coq.micromega.EnvRing.PmulC_aux_ok	40
Coq.micromega.EnvRing.PmulC_ok	40
Coq.micromega.EnvRing.Popp_ok	40	0.1.1.0.0.0.0.0.0.1.1.0.0.0	search with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: Esimpl; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: rewrite IHP; only 1: rsimpl; only 1: simpl; only 1: intros; only 1: rsimpl; only 1: rewrite IHP1, IHP2; only 1: rsimpl).	12.0728251934	2926
Coq.micromega.EnvRing.PaddX_ok	40
Coq.micromega.EnvRing.Padd_ok	40
Coq.micromega.EnvRing.PsubX_ok	40
Coq.micromega.EnvRing.Psub_ok	40
Coq.micromega.EnvRing.PmulI_ok	40
Coq.micromega.EnvRing.Pmul_ok	40
Coq.micromega.EnvRing.Psquare_ok	40
Coq.micromega.EnvRing.Mphi_morph	40
Coq.micromega.EnvRing.Mjump_xO_tail	40
Coq.micromega.EnvRing.Mjump_pred_double	40	0.0.0.0	search with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: now jump_simpl).	0.0769460201263	4
Coq.micromega.EnvRing.Mjump_add	40	0.0.0.0.3	search with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.0946187973022	8
Coq.micromega.EnvRing.mkZmon_ok	40	2.0.4.0.3.1.3	search with cache (only 1: induction M; only 1: simpl; only 1: rsimpl; only 1: simpl; only 1: now jump_simpl; only 1: simpl; only 1: rsimpl).	2.39125609398	661
Coq.micromega.EnvRing.zmon_pred_ok	40
Coq.micromega.EnvRing.mkVmon_ok	40
Coq.micromega.EnvRing.Mphi_ok	40
Coq.micromega.EnvRing.POneSubst_ok	40
Coq.micromega.EnvRing.PNSubst1_ok	40
Coq.micromega.EnvRing.PNSubst_ok	40
Coq.micromega.EnvRing.PSubstL1_ok	40
Coq.micromega.EnvRing.PSubstL_ok	40
Coq.micromega.EnvRing.PNSubstL_ok	40
Coq.micromega.EnvRing.mkX_ok	40
Coq.micromega.EnvRing.Ppow_pos_ok	40
Coq.micromega.EnvRing.Ppow_N_ok	40
Coq.micromega.EnvRing.norm_aux_PEadd	40
Coq.micromega.EnvRing.norm_aux_PEopp	40
Coq.micromega.EnvRing.norm_aux_spec	40
Coq.micromega.RingMicromega.rplus_morph_Proper	40
Coq.micromega.RingMicromega.rtimes_morph_Proper	40
Coq.micromega.RingMicromega.ropp_morph_Proper	40
Coq.micromega.RingMicromega.rle_morph_Proper	40
Coq.micromega.RingMicromega.rlt_morph_Proper	40
Coq.micromega.RingMicromega.rminus_morph_Proper	40
Coq.micromega.RingMicromega.cleb_sound	40
Coq.micromega.RingMicromega.cneqb_sound	40
Coq.micromega.RingMicromega.cltb_sound	40
Coq.micromega.RingMicromega.OpMult_sound	40
Coq.micromega.RingMicromega.OpAdd_sound	40
Coq.micromega.RingMicromega.pexpr_times_nformula_correct	40
Coq.micromega.RingMicromega.nformula_times_nformula_correct	40
Coq.micromega.RingMicromega.nformula_plus_nformula_correct	40
Coq.micromega.RingMicromega.eval_Psatz_Sound	40
Coq.micromega.RingMicromega.ge_bool_cases	40
Coq.micromega.RingMicromega.extract_hyps_app	40
Coq.micromega.RingMicromega.nhyps_of_psatz_correct	40
Coq.micromega.RingMicromega.check_inconsistent_sound	40
Coq.micromega.RingMicromega.checker_nf_sound	40
Coq.micromega.RingMicromega.eval_pol_sub	40
Coq.micromega.RingMicromega.eval_pol_add	40	17.4.3.0	search with cache (only 1: intros; only 1: unfold eval_pol; only 1: rewrite (Padd_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: reflexivity).	1.80788397789	1388
Coq.micromega.RingMicromega.eval_pol_mul	40	18.7.3.0	search with cache (only 1: intros; only 1: unfold eval_pol; only 1: rewrite (Pmul_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: reflexivity).	2.52839684486	1970
Coq.micromega.RingMicromega.eval_pol_opp	40
Coq.micromega.RingMicromega.eval_pol_norm	40
Coq.micromega.RingMicromega.normalise_sound	40
Coq.micromega.RingMicromega.negate_correct	40
Coq.micromega.RingMicromega.cnf_of_list_correct	40
Coq.micromega.RingMicromega.eq0_cnf	40
Coq.micromega.RingMicromega.xnormalise_correct	40
Coq.micromega.RingMicromega.xnegate_correct	40
Coq.micromega.RingMicromega.cnf_normalise_correct	40
Coq.micromega.RingMicromega.cnf_negate_correct	40
Coq.micromega.RingMicromega.eval_nformula_dec	40
Coq.micromega.RingMicromega.xdenorm_correct	40
Coq.micromega.RingMicromega.denorm_correct	40
Coq.micromega.RingMicromega.eval_pexprSC	40
Coq.micromega.RingMicromega.eval_formulaSC	40
Coq.micromega.Refl.make_impl_true	40	4.2.6	search with cache (only 1: induction l as [| x xs Hrec]; only 1: now simpl; only 1: firstorder).	0.420675992966	460
Coq.micromega.Refl.make_impl_map	40	8.2.1.3	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: firstorder).	0.518910169601	564
Coq.micromega.Refl.make_conj_cons	40	0.3.1.21.15	search with cache (only 1: intros Q H H'; only 1: destruct l as [| x xs]; only 1: simpl in *; only 1: intuition; only 1: reflexivity).	19.152919054	56949
Coq.micromega.Refl.make_conj_impl	40	10.0.2.0.1.1.0.0	search with cache (only 1: induction l as [| a l IH]; only 1: simpl; only 1: tauto; only 1: destruct l; only 1: simpl; only 1: now reflexivity; only 1: simpl; only 1: firstorder).	19.1232149601	18171
Coq.micromega.Refl.make_conj_in	40	1.1.3.1.0.1.3.0.0.0.1.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: tauto; only 1: simpl; only 1: destruct l; only 1: simpl; only 1: firstorder; only 1: subst; only 1: firstorder; only 1: simpl; only 1: firstorder; only 1: subst; only 1: firstorder).	29.0926589966	36717
Coq.micromega.Refl.make_conj_app	40
Coq.micromega.Refl.make_conj_rapp	40
Coq.micromega.Refl.not_make_conj_cons	40	5.12.0	search with cache (only 1: intros; only 1: rewrite make_conj_cons; only 1: tauto).	5.8310649395	2086
Coq.micromega.Refl.not_make_conj_app	40
Coq.micromega.QMicromega.Qsor	40
Coq.micromega.QMicromega.QSORaddon	40
Coq.micromega.QMicromega.Qeval_expr_simpl	40
Coq.micromega.QMicromega.QNpower	40
Coq.micromega.QMicromega.Qeval_expr_compat	40
Coq.micromega.QMicromega.Qeval_formula_compat	40
Coq.micromega.QMicromega.Qeval_nformula_dec	40
Coq.micromega.QMicromega.QWeakChecker_sound	40
Coq.micromega.QMicromega.QTautoChecker_sound	40
Coq.micromega.RMicromega.Rsrt	40
Coq.micromega.RMicromega.Rsor	40
Coq.micromega.RMicromega.Rinv_1	40	0.1.19.3	search with cache (only 1: intros; only 1: rewrite <- Rmult_1_r; only 1: rewrite Rinv_1; only 1: auto with real).	0.461403131485	620
Coq.micromega.RMicromega.Qeq_true	40
Coq.micromega.RMicromega.Qeq_false	40
Coq.micromega.RMicromega.Qle_true	40
Coq.micromega.RMicromega.Q2R_0	40	4.3.0	search with cache (only 1: unfold Qinv, Q2R, Qeq; only 1: rewrite RIneq.Rinv_1; only 1: auto).	0.0179290771484	10
Coq.micromega.RMicromega.Q2R_1	40	5.4.1	search with cache (only 1: unfold Qinv, Q2R, Qeq; only 1: rewrite RIneq.Rinv_1; only 1: auto).	0.0464000701904	94
Coq.micromega.RMicromega.Q2R_inv_ext	40
Coq.micromega.RMicromega.QSORaddon	40
Coq.micromega.RMicromega.is_neg_true	40
Coq.micromega.RMicromega.is_neg_false	40	2.0.2.0.2.2.0.0.0.0.0.7.36.0.3.1.0	search with cache (only 1: destruct z; only 1: destruct z; only 1: intros; only 1: simpl; only 1: easy; only 1: rewrite <- positive_nat_Z  at 2; only 1: simpl; only 1: now rewrite positive_nat_Z; only 1: simpl; only 1: congruence; only 1: simpl; only 1: induction n; only 1: easy; only 1: simpl; only 1: induction n; only 1: easy; only 1: auto with real).	37.0797898769	132580
Coq.micromega.RMicromega.Q2R_m_Proper	40
Coq.micromega.RMicromega.Q2R_pow_pos	40
Coq.micromega.RMicromega.Q2R_pow_N	40
Coq.micromega.RMicromega.Qmult_integral	40
Coq.micromega.RMicromega.Qpower_positive_eq_zero	40
Coq.micromega.RMicromega.Qpower_positive_zero	40
Coq.micromega.RMicromega.Q2RpowerRZ	40
Coq.micromega.RMicromega.Qpower0	40
Coq.micromega.RMicromega.Q_of_RcstR	40
Coq.micromega.RMicromega.Reval_formula_compat	40
Coq.micromega.RMicromega.Reval_nformula_dec	40
Coq.micromega.RMicromega.RWeakChecker_sound	40
Coq.micromega.RMicromega.RTautoChecker_sound	40
Coq.rtauto.Bintree.Gt_Psucc	40
Coq.rtauto.Bintree.Psucc_Gt	40	4.0.17	search with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: auto).	2.02817583084	2029
Coq.rtauto.Bintree.map_app	40	0.11.15.14.14	search with cache (only 1: intros; only 1: revert m; only 1: fix sqrtrem_spec 1; only 1: intros; only 1: contradiction || auto).	2.46072292328	7492
Coq.rtauto.Bintree.length_map	40	3.0.27.47	search with cache (only 1: intros Compat Hl Hr; only 1: fix sqrtrem_spec 1; only 1: intro m; only 1: contradiction || auto).	2.90335011482	11031
Coq.rtauto.Bintree.Lget_map	40
Coq.rtauto.Bintree.Lget_app	40	0.3.1.1.10.1.0.0.2.4	search with cache (only 1: induction l; only 1: induction i; only 1: trivial; only 1: trivial; only 1: simpl; only 1: induction i; only 1: apply f_equal; only 1: trivial; only 1: simpl; only 1: trivial).	12.9259338379	26574
Coq.rtauto.Bintree.Lget_app_Some	40
Coq.rtauto.Bintree.Tget_Tempty	40	0.20	search with cache (only 1: fix sqrtrem_spec 1; only 1: easy).	0.214356184006	411
Coq.rtauto.Bintree.Tget_Tadd	40
Coq.rtauto.Bintree.get_empty	40	0.1.1.2	search with cache (only 1: destruct i; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.0199241638184	8
Coq.rtauto.Bintree.get_Full_Gt	40
Coq.rtauto.Bintree.get_Full_Eq	40
Coq.rtauto.Bintree.get_push_Full	40
Coq.rtauto.Bintree.Full_push_compat	40
Coq.rtauto.Bintree.Full_index_one_empty	40
Coq.rtauto.Bintree.push_not_empty	40	7.7.3.5.18	search with cache (only 1: unfold empty, get; only 1: intros; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: unfold get, push; only 1: congruence).	1.86143183708	5297
Coq.rtauto.Bintree.get_In	40
Coq.rtauto.Bintree.Tget_Tmap	40
Coq.rtauto.Bintree.Tmap_Tadd	40
Coq.rtauto.Bintree.get_map	40
Coq.rtauto.Bintree.map_push	40
Coq.rtauto.Bintree.Full_map	40
Coq.rtauto.Rtauto.pos_eq_refl	40
Coq.rtauto.Rtauto.form_eq_refl	40
Coq.rtauto.Rtauto.compose0	40	14.0.1.4.0.5.1.0	search with cache (only 1: intros S W; only 1: induction W; only 1: unfold push, empty; only 1: simpl; only 1: intros S F; only 1: auto; only 1: simpl; only 1: auto).	8.68173193932	25847
Coq.rtauto.Rtauto.compose1	40
Coq.rtauto.Rtauto.compose2	40	1.1.1.9.1.1.0	search with cache (only 1: induction F; only 1: intros i e; only 1: auto; only 1: intro W; only 1: intros A B H; only 1: apply IHF; only 1: auto).	3.05636286736	7298
Coq.rtauto.Rtauto.compose3	40	1.0.0.3.10.0.0.0.0	search with cache (only 1: induction F; only 1: intros A B H; only 1: simpl; only 1: auto; only 1: intro W; only 1: intros A B C H; only 1: simpl; only 1: apply IHF; only 1: auto).	5.16329097748	11377
Coq.rtauto.Rtauto.weaken	40
Coq.rtauto.Rtauto.project_In	40
Coq.rtauto.Rtauto.project	40
Coq.rtauto.Rtauto.interp_proof	40
Coq.rtauto.Rtauto.Reflect	40
Coq.nsatz.Nsatz.psos_r1b	40
Coq.nsatz.Nsatz.psos_r1	40	0.0.0.0.0	search with cache (only 1: intros x y H; only 1: setoid_replace x with (x - y + y); only 1: setoid_rewrite H; only 1: cring; only 1: cring).	0.115067958832	5
Coq.nsatz.Nsatz.nsatzR_diff	40
Coq.nsatz.Nsatz.P0Z_correct	40	14.3	search with cache (only 1: intros; only 1: auto).	1.27814984322	372
Coq.nsatz.Nsatz.Rext	40
Coq.nsatz.Nsatz.Rset	40
Coq.nsatz.Nsatz.Rtheory	40
Coq.nsatz.Nsatz.PolZadd_correct	40
Coq.nsatz.Nsatz.PolZmul_correct	40
Coq.nsatz.Nsatz.R_power_theory	40
Coq.nsatz.Nsatz.norm_correct	40
Coq.nsatz.Nsatz.PolZeq_correct	40
Coq.nsatz.Nsatz.mult_l_correct	40
Coq.nsatz.Nsatz.compute_list_correct	40
Coq.nsatz.Nsatz.check_correct	40
Coq.nsatz.Nsatz.Rsth	40	0.9.0.7.7.2.0.0.241	search with cache (only 1: split; only 1: auto with real; only 1: auto with real; only 1: red; only 1: intros F0 H0; only 1: intros x H; only 1: intros; only 1: elim H1; only 1: auto with real).	10.3786261082	96142
Coq.nsatz.Nsatz.Rri	40
Coq.nsatz.Nsatz.R_one_zero	40	3	search with cache (only 1: Lra.lra).	0.0261988639832	4
Coq.nsatz.Nsatz.Rcri	40	12.0.4.4.13	search with cache (only 1: red; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: auto with real).	1.83549618721	5008
Coq.nsatz.Nsatz.Rdi	40
Coq.nsatz.Nsatz.Qri	40
Coq.nsatz.Nsatz.Q_one_zero	40
Coq.nsatz.Nsatz.Qcri	40
Coq.nsatz.Nsatz.Qdi	40
Coq.nsatz.Nsatz.Z_one_zero	40	0	search with cache (only 1: auto with *).	0.0282440185547	1
Coq.nsatz.Nsatz.Zcri	40	1	search with cache (only 1: auto with *).	0.0141129493713	12
Coq.nsatz.Nsatz.Zdi	40
Coq.omega.OmegaLemmas.Zred_factor0	40
Coq.omega.OmegaLemmas.Zred_factor1	40
Coq.omega.OmegaLemmas.Zred_factor2	40
Coq.omega.OmegaLemmas.Zred_factor3	40	1	search with cache (only 1: now Z.nzsimpl).	0.28225684166	15
Coq.omega.OmegaLemmas.Zred_factor4	40	0.1	search with cache (only 1: rewrite Z.mul_add_distr_l; only 1: now Z.nzsimpl).	0.076632976532	3
Coq.omega.OmegaLemmas.Zred_factor5	40	0	search with cache (only 1: now Z.nzsimpl).	0.063019990921	1
Coq.omega.OmegaLemmas.Zred_factor6	40	0	search with cache (only 1: now Z.nzsimpl).	0.0617871284485	1
Coq.omega.OmegaLemmas.new_var	40	0.30.8	search with cache (only 1: intros; only 1: exists x; only 1: trivial).	0.50327706337	1819
Coq.omega.OmegaLemmas.OMEGA1	40	1.2	search with cache (only 1: intros; only 1: now subst).	0.0509629249573	5
Coq.omega.OmegaLemmas.OMEGA2	40	1	search with cache (only 1: now apply Z.add_nonneg_nonneg).	0.0123119354248	2
Coq.omega.OmegaLemmas.OMEGA3	40
Coq.omega.OmegaLemmas.OMEGA4	40
Coq.omega.OmegaLemmas.OMEGA5	40	20.2	search with cache (only 1: intros Hx Hxy; only 1: now subst).	1.30222702026	503
Coq.omega.OmegaLemmas.OMEGA6	40
Coq.omega.OmegaLemmas.OMEGA7	40	1.3.2.10.10	search with cache (only 1: intro; only 1: intro; only 1: Z.swap_greater; only 1: intros Hx Hxy; only 1: Z.order_pos).	33.0971181393	3940
Coq.omega.OmegaLemmas.OMEGA8	40
Coq.omega.OmegaLemmas.OMEGA9	40
Coq.omega.OmegaLemmas.OMEGA10	40
Coq.omega.OmegaLemmas.OMEGA11	40	1.0.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal).	0.02406001091	4
Coq.omega.OmegaLemmas.OMEGA12	40	0.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: apply Z.add_shuffle3).	0.0183908939362	2
Coq.omega.OmegaLemmas.OMEGA13	40
Coq.omega.OmegaLemmas.OMEGA14	40	0.1.0.0.0.0.0.0.0	search with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l, <- Pos2Z.opp_neg, Z.add_opp_diag_r; only 1: now Z.nzsimpl).	0.107144117355	13
Coq.omega.OmegaLemmas.OMEGA15	40	0.1.0.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal; only 1: apply Z.add_shuffle3).	0.0308978557587	5
Coq.omega.OmegaLemmas.OMEGA16	40	6.4	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: now Z.nzsimpl).	0.460710048676	80
Coq.omega.OmegaLemmas.OMEGA17	40	0.0	search with cache (only 1: intros H ->; only 1: now Z.nzsimpl).	0.0607740879059	2
Coq.omega.OmegaLemmas.OMEGA18	40	0.1.4.0	search with cache (only 1: unfold Zne, not; only 1: intros; only 1: subst; only 1: now Z.nzsimpl).	0.0660319328308	20
Coq.omega.OmegaLemmas.OMEGA19	40
Coq.omega.OmegaLemmas.OMEGA20	40	0.0.1.0	search with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now Z.nzsimpl).	0.0853018760681	5
Coq.omega.OmegaLemmas.intro_Z	40
Coq.omega.PreOmega.mod_0_r_ext	40	0.0.2.0.3.30.1	search with cache (only 1: intros Hm; only 1: destruct x; only 1: now subst; only 1: subst; only 1: trivial; only 1: subst; only 1: trivial).	2.38635897636	5671
Coq.omega.PreOmega.div_0_r_ext	40	0.0.4.0.0.1	search with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: trivial; only 1: reflexivity; only 1: reflexivity).	0.0841891765594	44
Coq.omega.PreOmega.rem_0_r_ext	40	0.0.1.1.2.9.1	search with cache (only 1: intro; only 1: destruct x; only 1: now subst; only 1: subst; only 1: trivial; only 1: subst; only 1: trivial).	0.64852809906	886
Coq.omega.PreOmega.quot_0_r_ext	40	0.0.3.0.0.1	search with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: trivial; only 1: reflexivity; only 1: reflexivity).	0.0246710777283	10
Coq.omega.PreOmega.rem_bound_pos_pos	40
Coq.omega.PreOmega.rem_bound_neg_pos	40
Coq.omega.PreOmega.rem_bound_pos_neg	40
Coq.omega.PreOmega.rem_bound_neg_neg	40
Coq.btauto.Algebra.Decidable_sound	40	1.2.60	search with cache (only 1: destruct H; only 1: simpl; only 1: intuition congruence).	2.37525200844	19257
Coq.btauto.Algebra.Decidable_complete	40	1.5.55	search with cache (only 1: destruct H; only 1: simpl; only 1: intuition congruence).	9.00616598129	18816
Coq.btauto.Algebra.Decidable_sound_alt	40
Coq.btauto.Algebra.Decidable_complete_alt	40	3.1.70	search with cache (only 1: destruct H; only 1: simpl; only 1: intuition congruence).	11.2611219883	59666
Coq.btauto.Algebra.Decidable_PosEq_obligation_1	40
Coq.btauto.Algebra.Decidable_PosLt_obligation_1	40
Coq.btauto.Algebra.Decidable_PosLe_obligation_1	40
Coq.btauto.Algebra.Decidable_eq_poly_obligation_1	40
Coq.btauto.Algebra.Decidable_null_obligation_3	40
Coq.btauto.Algebra.Decidable_valid_obligation_1	40
Coq.btauto.Algebra.valid_le_compat	40
Coq.btauto.Algebra.linear_le_compat	40	0.0.0.1.0.0.0.0	search with cache (only 1: intros k l p H Hl; only 1: induction H; only 1: constructor; only 1: constructor; only 1: now eapply Pos.lt_le_trans; eassumption; only 1: eauto; only 1: eauto; only 1: eauto).	0.0544328689575	9
Coq.btauto.Algebra.linear_valid_incl	40
Coq.btauto.Algebra.eval_null_zero	40	0.7.5	search with cache (only 1: intuition; only 1: induction H; only 1: first [ discriminate | constructor ]).	0.294438838959	154
Coq.btauto.Algebra.eval_extensional_eq_compat	40
Coq.btauto.Algebra.eval_suffix_compat	40
Coq.btauto.Algebra.poly_add_compat	40
Coq.btauto.Algebra.poly_mul_cst_compat	40
Coq.btauto.Algebra.poly_mul_mon_compat	40
Coq.btauto.Algebra.poly_mul_compat	40
Coq.btauto.Algebra.poly_add_valid_compat	40
Coq.btauto.Algebra.poly_mul_cst_valid_compat	40
Coq.btauto.Algebra.poly_mul_mon_null_compat	40
Coq.btauto.Algebra.poly_mul_mon_valid_compat	40
Coq.btauto.Algebra.poly_mul_valid_compat	40
Coq.btauto.Algebra.poly_add_linear_compat	40
Coq.btauto.Algebra.reduce_aux_eval_compat	40
Coq.btauto.Algebra.reduce_eval_compat	40
Coq.btauto.Algebra.reduce_aux_le_compat	40
Coq.btauto.Algebra.linear_reduce_aux	40
Coq.btauto.Algebra.linear_reduce	40
Coq.btauto.Reflect.poly_of_formula_eval_compat	40
Coq.btauto.Reflect.poly_of_formula_valid_compat	40
Coq.btauto.Reflect.poly_of_formula_sound	40
Coq.btauto.Reflect.reduce_poly_of_formula_sound	40
Coq.btauto.Reflect.list_nth_base	40	1	search with cache (only 1: auto).	0.0156559944153	2
Coq.btauto.Reflect.list_nth_succ	40
Coq.btauto.Reflect.list_nth_nil	40
Coq.btauto.Reflect.make_last_nth_1	40
Coq.btauto.Reflect.make_last_nth_2	40	0.0.0.0.1.0.3.0.0.1.2	search with cache (only 1: zify; only 1: induction n using Pos.peano_rect; only 1: unfold make_last; only 1: simpl; only 1: rewrite list_nth_base; only 1: reflexivity; only 1: unfold make_last; only 1: rewrite Pos.peano_rect_succ; only 1: fold (make_last n x def); only 1: rewrite list_nth_succ; only 1: apply IHn).	3.47550106049	4964
Coq.btauto.Reflect.list_replace_nth_1	40
Coq.btauto.Reflect.list_replace_nth_2	40
Coq.btauto.Reflect.boolean_witness_nonzero	40
Coq.btauto.Reflect.reduce_poly_of_formula_sound_alt	40
Coq.funind.Recdef.le_lt_SS	40	7	search with cache (only 1: auto with arith).	0.0171570777893	8
Coq.funind.Recdef.Splus_lt	40	6	search with cache (only 1: auto with arith).	0.0723760128021	15
Coq.funind.Recdef.SSplus_lt	40	8	search with cache (only 1: auto with arith).	0.351242780685	193
Coq.funind.Recdef.max	40
Coq.setoid_ring.Rings_Z.Zcri	40	0.0	search with cache (only 1: red; only 1: exact Z.mul_comm).	0.0186650753021	2
Coq.setoid_ring.Rings_Z.Z_one_zero	40	30.1	search with cache (only 1: intro; only 1: now Z.nzsimpl).	1.66179990768	1341
Coq.setoid_ring.Rings_Z.Zdi	40
Coq.setoid_ring.Integral_domain.integral_domain_minus_one_zero	40
Coq.setoid_ring.Integral_domain.pow_not_zero	40
Coq.setoid_ring.Integral_domain.Rintegral_domain_pow	40
Coq.setoid_ring.Ncring_polynom.cO	40	71	search with cache (only 1: now f_equal).	1.3681910038	2583
Coq.setoid_ring.Ncring_polynom.cI	40	0	search with cache (only 1: exact ring0).	0.0148909091949	1
Coq.setoid_ring.Ncring_polynom.Peq_ok	40
Coq.setoid_ring.Ncring_polynom.Pphi0	40
Coq.setoid_ring.Ncring_polynom.Pphi1	40
Coq.setoid_ring.Ncring_polynom.mkPX_ok	40
Coq.setoid_ring.Ncring_polynom.PaddCl_ok	40
Coq.setoid_ring.Ncring_polynom.PmulC_aux_ok	40
Coq.setoid_ring.Ncring_polynom.PmulC_ok	40
Coq.setoid_ring.Ncring_polynom.Popp_ok	40	0.0.0.0.0.0.1.0.0.2	search with cache (only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: rewrite IHP1; only 1: rewrite IHP2; only 1: rsimpl).	5.43319702148	354
Coq.setoid_ring.Ncring_polynom.PaddXPX	40
Coq.setoid_ring.Ncring_polynom.PaddX_ok2	40
Coq.setoid_ring.Ncring_polynom.Padd_ok	40
Coq.setoid_ring.Ncring_polynom.PaddX_ok	40
Coq.setoid_ring.Ncring_polynom.Psub_ok	40
Coq.setoid_ring.Ncring_polynom.Pmul_ok	40
Coq.setoid_ring.Ncring_polynom.Psquare_ok	40
Coq.setoid_ring.Ncring_polynom.mkX_ok	40
Coq.setoid_ring.Ncring_polynom.Ppow_pos_ok	40
Coq.setoid_ring.Ncring_polynom.Ppow_N_ok	40
Coq.setoid_ring.Ncring_polynom.norm_aux_spec	40
Coq.setoid_ring.Ncring_polynom.norm_subst_spec	40
Coq.setoid_ring.Ncring_polynom.norm_subst_ok	40	1.0.0	search with cache (only 1: intros; only 1: unfold norm_subst; only 1: apply norm_aux_spec).	1.43979907036	45
Coq.setoid_ring.Ncring_polynom.ring_correct	40
Coq.setoid_ring.Ring.BoolTheory	40
Coq.setoid_ring.Ring.bool_eq_ok	40	2.0.6.0.0.0.2.83	search with cache (only 1: intros a b; only 1: destruct b; only 1: destruct a; only 1: auto; only 1: auto; only 1: destruct a; only 1: auto; only 1: auto).	3.8943169117	26378
Coq.setoid_ring.Field_theory.radd_ext_Proper	40
Coq.setoid_ring.Field_theory.rmul_ext_Proper	40
Coq.setoid_ring.Field_theory.ropp_ext_Proper	40
Coq.setoid_ring.Field_theory.rsub_ext_Proper	40
Coq.setoid_ring.Field_theory.rinv_ext_Proper	40	10	search with cache (only 1: now f_equal).	0.0253510475159	21
Coq.setoid_ring.Field_theory.ceqb_spec	40
Coq.setoid_ring.Field_theory.NPEequiv_eq	40
Coq.setoid_ring.Field_theory.NPEeval_ext	40
Coq.setoid_ring.Field_theory.rsub_0_l	40	8	search with cache (only 1: eauto).	0.056529045105	11
Coq.setoid_ring.Field_theory.rsub_0_r	40
Coq.setoid_ring.Field_theory.rdiv_simpl	40
Coq.setoid_ring.Field_theory.rdiv_ext	40
Coq.setoid_ring.Field_theory.rmul_reg_l	40
Coq.setoid_ring.Field_theory.field_is_integral_domain	40
Coq.setoid_ring.Field_theory.ropp_neq_0	40
Coq.setoid_ring.Field_theory.rdiv_r_r	40	26	search with cache (only 1: eauto).	2.47089791298	1468
Coq.setoid_ring.Field_theory.rdiv1	40
Coq.setoid_ring.Field_theory.rdiv2	40
Coq.setoid_ring.Field_theory.rdiv2b	40
Coq.setoid_ring.Field_theory.rdiv5	40
Coq.setoid_ring.Field_theory.rdiv3b	40
Coq.setoid_ring.Field_theory.rdiv6	40
Coq.setoid_ring.Field_theory.rdiv4	40
Coq.setoid_ring.Field_theory.rdiv4b	40
Coq.setoid_ring.Field_theory.rdiv7	40
Coq.setoid_ring.Field_theory.rdiv7b	40
Coq.setoid_ring.Field_theory.rinv_nz	40
Coq.setoid_ring.Field_theory.rdiv8	40
Coq.setoid_ring.Field_theory.cross_product_eq	40
Coq.setoid_ring.Field_theory.pow_ext	40
Coq.setoid_ring.Field_theory.pow_N_ext	40
Coq.setoid_ring.Field_theory.pow_pos_0	40
Coq.setoid_ring.Field_theory.pow_pos_1	40
Coq.setoid_ring.Field_theory.pow_pos_cst	40
Coq.setoid_ring.Field_theory.pow_pos_mul_l	40	0.2.2.2.2.8	search with cache (only 1: induction p; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: ring [ IHp ]; only 1: trivial).	5.69694805145	838
Coq.setoid_ring.Field_theory.pow_pos_add_r	40
Coq.setoid_ring.Field_theory.pow_pos_mul_r	40
Coq.setoid_ring.Field_theory.pow_pos_nz	40
Coq.setoid_ring.Field_theory.pow_pos_div	40
Coq.setoid_ring.Field_theory.PEadd_ext	40
Coq.setoid_ring.Field_theory.PEsub_ext	40	0.0.0	search with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.169132947922	3
Coq.setoid_ring.Field_theory.PEmul_ext	40	0.0.0	search with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.189018011093	3
Coq.setoid_ring.Field_theory.PEopp_ext	40
Coq.setoid_ring.Field_theory.PEpow_ext	40
Coq.setoid_ring.Field_theory.PE_1_l	40
Coq.setoid_ring.Field_theory.PE_1_r	40	5.0.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: trivial).	0.299138069153	9
Coq.setoid_ring.Field_theory.PEpow_0_r	40	15.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: eauto).	6.63431882858	1175
Coq.setoid_ring.Field_theory.PEpow_1_r	40	3.7.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: rewrite !rpow_pow; only 1: reflexivity).	2.69584298134	362
Coq.setoid_ring.Field_theory.PEpow_1_l	40
Coq.setoid_ring.Field_theory.PEpow_add_r	40
Coq.setoid_ring.Field_theory.PEpow_mul_l	40
Coq.setoid_ring.Field_theory.PEpow_mul_r	40
Coq.setoid_ring.Field_theory.PEpow_nz	40
Coq.setoid_ring.Field_theory.if_true	40
Coq.setoid_ring.Field_theory.PExpr_eq_semi_ok	40
Coq.setoid_ring.Field_theory.PExpr_eq_spec	40
Coq.setoid_ring.Field_theory.NPEadd_ok	40
Coq.setoid_ring.Field_theory.NPEsub_ok	40
Coq.setoid_ring.Field_theory.NPEopp_ok	40
Coq.setoid_ring.Field_theory.NPEpow_ok	40
Coq.setoid_ring.Field_theory.NPEmul_ok	40
Coq.setoid_ring.Field_theory.PEsimp_ok	40
Coq.setoid_ring.Field_theory.PCond_cons	40
Coq.setoid_ring.Field_theory.PCond_cons_inv_l	40	0.0.0.6.1	search with cache (only 1: simpl; only 1: destruct l1; only 1: trivial; only 1: destruct 1; only 1: trivial).	11.9127559662	384
Coq.setoid_ring.Field_theory.PCond_cons_inv_r	40
Coq.setoid_ring.Field_theory.PCond_app	40
Coq.setoid_ring.Field_theory.absurd_PCond_bottom	40	0.3.4	search with cache (only 1: intros H; only 1: destruct 1; only 1: trivial).	0.424921035767	10
Coq.setoid_ring.Field_theory.Z_pos_sub_gt	40
Coq.setoid_ring.Field_theory.default_isIn_ok	40
Coq.setoid_ring.Field_theory.isIn_ok	40
Coq.setoid_ring.Field_theory.split_aux_ok1	40
Coq.setoid_ring.Field_theory.split_aux_ok	40
Coq.setoid_ring.Field_theory.split_ok_l	40
Coq.setoid_ring.Field_theory.split_ok_r	40
Coq.setoid_ring.Field_theory.split_nz_l	40
Coq.setoid_ring.Field_theory.split_nz_r	40
Coq.setoid_ring.Field_theory.Pcond_Fnorm	40
Coq.setoid_ring.Field_theory.Fnorm_FEeval_PEeval	40
Coq.setoid_ring.Field_theory.Fnorm_crossproduct	40
Coq.setoid_ring.Field_theory.Fnorm_ok	40
Coq.setoid_ring.Field_theory.Field_rw_correct	40
Coq.setoid_ring.Field_theory.Field_rw_pow_correct	40
Coq.setoid_ring.Field_theory.Field_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_pow_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_aux_ok	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_pow_in_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_in_correct	40
Coq.setoid_ring.Field_theory.fcons_ok	40
Coq.setoid_ring.Field_theory.PFcons_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons0_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons00_fcons_inv	40
Coq.setoid_ring.Field_theory.ceqb_spec'	40
Coq.setoid_ring.Field_theory.PFcons1_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons2_fcons_inv	40
Coq.setoid_ring.Field_theory.radd_ext3_Proper	40
Coq.setoid_ring.Field_theory.rmul_ext3_Proper	40
Coq.setoid_ring.Field_theory.ropp_ext3_Proper	40
Coq.setoid_ring.Field_theory.add_inj_r	40
Coq.setoid_ring.Field_theory.gen_phiPOS_inj	40
Coq.setoid_ring.Field_theory.gen_phiN_inj	40
Coq.setoid_ring.Field_theory.gen_phiN_complete	40
Coq.setoid_ring.Field_theory.ring_S_inj	40
Coq.setoid_ring.Field_theory.gen_phiPOS_discr_sgn	40
Coq.setoid_ring.Field_theory.gen_phiZ_inj	40
Coq.setoid_ring.Field_theory.gen_phiZ_complete	40
Coq.setoid_ring.Ncring_initial.Zsth	40
Coq.setoid_ring.Ncring_initial.Zr	40
Coq.setoid_ring.Ncring_initial.same_gen	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_add	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_mult	40
Coq.setoid_ring.Ncring_initial.same_genZ	40
Coq.setoid_ring.Ncring_initial.gen_Zeqb_ok	40
Coq.setoid_ring.Ncring_initial.gen_phiZ1_add_pos_neg	40
Coq.setoid_ring.Ncring_initial.match_compOpp	40	2.2.1.6.5	search with cache (only 1: intros x y H7; only 1: destruct x; only 1: reflexivity; only 1: norm; only 1: norm).	1.4542798996	745
Coq.setoid_ring.Ncring_initial.gen_phiZ_add	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_opp	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_mul	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_ext	40	0.11.3	search with cache (only 1: intros x y H7; only 1: subst; only 1: reflexivity).	0.881547927856	298
Coq.setoid_ring.Ncring_initial.gen_phiZ_morph	40
Coq.setoid_ring.ArithRing.natSRth	40
Coq.setoid_ring.ArithRing.nat_morph_N	40
Coq.setoid_ring.Rings_R.Rsth	40	0.9.0.7.7.2.0.0.241	search with cache (only 1: split; only 1: auto with real; only 1: auto with real; only 1: red; only 1: intros F0 H0; only 1: intros x H; only 1: intros; only 1: elim H1; only 1: auto with real).	10.7564520836	96142
Coq.setoid_ring.Rings_R.Rri	40
Coq.setoid_ring.Rings_R.Rcri	40	12.0.4.4.12	search with cache (only 1: red; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: auto with real).	1.85841584206	4922
Coq.setoid_ring.Rings_R.R_one_zero	40	4.3.0	search with cache (only 1: red; only 1: intros; only 1: Lra.lra).	0.0591580867767	10
Coq.setoid_ring.Rings_R.Rdi	40
Coq.setoid_ring.RealField.RTheory	40
Coq.setoid_ring.RealField.Rfield	40
Coq.setoid_ring.RealField.Rlt_n_Sn	40
Coq.setoid_ring.RealField.Rlt_0_2	40
Coq.setoid_ring.RealField.Rgen_phiPOS	40
Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	40
Coq.setoid_ring.RealField.Rdef_pow_add	40
Coq.setoid_ring.RealField.R_power_theory	40
Coq.setoid_ring.Ring_theory.pow_pos_swap	40
Coq.setoid_ring.Ring_theory.pow_pos_succ	40
Coq.setoid_ring.Ring_theory.pow_pos_add	40
Coq.setoid_ring.Ring_theory.pow_N_pow_N	40	1	search with cache (only 1: reflexivity).	0.0114130973816	2
Coq.setoid_ring.Ring_theory.get_sign_None_th	40	13.152	search with cache (only 1: split; only 1: discriminate).	0.815635204315	14177
Coq.setoid_ring.Ring_theory.IDmorph	40	67	search with cache (only 1: now repeat split).	1.42549109459	3759
Coq.setoid_ring.Ring_theory.Eqsth	40	19.9.12.13.4.0.0.2.211	search with cache (only 1: split; only 1: intros a; only 1: trivial; only 1: intros a n; only 1: intros H; only 1: now rewrite H; only 1: intros a b c0; only 1: intros Ha Hb; only 1: now rewrite Ha, Hb).	35.5331728458	235085
Coq.setoid_ring.Ring_theory.Eq_s_ext	40	11.0.203	search with cache (only 1: split; only 1: solve_proper; only 1: solve_proper).	6.13491106033	23812
Coq.setoid_ring.Ring_theory.Eq_ext	40	0.0.0.0	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.0787441730499	4
Coq.setoid_ring.Ring_theory.radd_ext1_Proper	40
Coq.setoid_ring.Ring_theory.rmul_ext1_Proper	40
Coq.setoid_ring.Ring_theory.SRopp_ext	40	25.16	search with cache (only 1: intros a b; only 1: trivial).	0.46493601799	1582
Coq.setoid_ring.Ring_theory.SReqe_Reqe	40	0.1.2.2.4	search with cache (only 1: constructor; only 1: exact (SRadd_ext SReqe); only 1: exact (SRmul_ext SReqe); only 1: intros x y H; only 1: exact H).	0.106125116348	138
Coq.setoid_ring.Ring_theory.SRopp_mul_l	40	10	search with cache (only 1: reflexivity).	0.018424987793	21
Coq.setoid_ring.Ring_theory.SRopp_add	40	0	search with cache (only 1: reflexivity).	0.0112719535828	1
Coq.setoid_ring.Ring_theory.SRsub_def	40	0	search with cache (only 1: reflexivity).	0.0114140510559	1
Coq.setoid_ring.Ring_theory.SRIDmorph	40	38.1.0.1.0.4.4.6	search with cache (only 1: constructor; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: trivial).	9.74172711372	31741
Coq.setoid_ring.Ring_theory.SRmorph_Rmorph	40
Coq.setoid_ring.Ring_theory.radd_ext2_Proper	40
Coq.setoid_ring.Ring_theory.rmul_ext2_Proper	40
Coq.setoid_ring.Ring_theory.ropp_ext2_Proper	40
Coq.setoid_ring.Ring_theory.Rmul_0_l	40
Coq.setoid_ring.Ring_theory.Ropp_mul_l	40
Coq.setoid_ring.Ring_theory.Ropp_add	40
Coq.setoid_ring.Ring_theory.Ropp_opp	40
Coq.setoid_ring.Ring_theory.cadd_ext_Proper	40
Coq.setoid_ring.Ring_theory.cmul_ext_Proper	40
Coq.setoid_ring.Ring_theory.copp_ext_Proper	40
Coq.setoid_ring.Ring_theory.phi_ext1_Proper	40	53.4.1.2	search with cache (only 1: case Smorph; only 1: case Smorph; only 1: case Smorph; only 1: trivial).	9.28729295731	14501
Coq.setoid_ring.Ring_theory.Smorph_opp	40
Coq.setoid_ring.Ring_theory.Smorph_sub	40
Coq.setoid_ring.Ring_theory.ARth_SRth	40
Coq.setoid_ring.Ring_theory.ARsub_ext	40
Coq.setoid_ring.Ring_theory.ARadd_0_r	40
Coq.setoid_ring.Ring_theory.ARmul_1_r	40	0	search with cache (only 1: mrewrite).	0.0238280296326	1
Coq.setoid_ring.Ring_theory.ARmul_0_r	40	0	search with cache (only 1: mrewrite).	0.0256810188293	1
Coq.setoid_ring.Ring_theory.ARdistr_r	40
Coq.setoid_ring.Ring_theory.ARadd_assoc1	40
Coq.setoid_ring.Ring_theory.ARadd_assoc2	40
Coq.setoid_ring.Ring_theory.ARmul_assoc1	40
Coq.setoid_ring.Ring_theory.ARmul_assoc2	40
Coq.setoid_ring.Ring_theory.ARopp_mul_r	40
Coq.setoid_ring.Ring_theory.ARopp_zero	40
Coq.setoid_ring.InitialRing.Zth	40
Coq.setoid_ring.InitialRing.radd_ext3_Proper	40
Coq.setoid_ring.InitialRing.rmul_ext3_Proper	40
Coq.setoid_ring.InitialRing.ropp_ext3_Proper	40
Coq.setoid_ring.InitialRing.get_signZ_th	40
Coq.setoid_ring.InitialRing.rsub_ext3_Proper	40
Coq.setoid_ring.InitialRing.same_gen	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_add	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_mult	40
Coq.setoid_ring.InitialRing.rsub_ext4_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0121581554413	1
Coq.setoid_ring.InitialRing.same_genZ	40
Coq.setoid_ring.InitialRing.gen_Zeqb_ok	40
Coq.setoid_ring.InitialRing.gen_phiZ1_pos_sub	40
Coq.setoid_ring.InitialRing.gen_phiZ_add	40
Coq.setoid_ring.InitialRing.gen_phiZ_mul	40
Coq.setoid_ring.InitialRing.gen_phiZ_ext	40	0.7.0	search with cache (only 1: intros x y H; only 1: rewrite H; only 1: rrefl).	0.0459868907928	14
Coq.setoid_ring.InitialRing.gen_phiZ_morph	40
Coq.setoid_ring.InitialRing.Nth	40
Coq.setoid_ring.InitialRing.Neqb_ok	40
Coq.setoid_ring.InitialRing.radd_ext4_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0113620758057	1
Coq.setoid_ring.InitialRing.rmul_ext4_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0123767852783	2
Coq.setoid_ring.InitialRing.same_genN	40
Coq.setoid_ring.InitialRing.gen_phiN_add	40
Coq.setoid_ring.InitialRing.gen_phiN_mult	40
Coq.setoid_ring.InitialRing.gen_phiN_sub	40
Coq.setoid_ring.InitialRing.gen_phiN_morph	40
Coq.setoid_ring.InitialRing.radd_ext5_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.00951099395752	1
Coq.setoid_ring.InitialRing.rmul_ext5_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.00957298278809	1
Coq.setoid_ring.InitialRing.ropp_ext5_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.00948810577393	1
Coq.setoid_ring.InitialRing.rsub_ext7_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0127589702606	1
Coq.setoid_ring.InitialRing.gen_phiNword0_ok	40
Coq.setoid_ring.InitialRing.gen_phiNword_cons	40
Coq.setoid_ring.InitialRing.gen_phiNword_Nwcons	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction w; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros; only 1: destruct n; only 1: norm; only 1: norm).	0.111826896667	10
Coq.setoid_ring.InitialRing.gen_phiNword_ok	40
Coq.setoid_ring.InitialRing.Nwadd_ok	40
Coq.setoid_ring.InitialRing.Nwopp_ok	40	3.3.10	search with cache (only 1: induction x; only 1: norm; only 1: norm).	0.486260175705	354
Coq.setoid_ring.InitialRing.Nwscal_ok	40
Coq.setoid_ring.InitialRing.Nwmul_ok	40
Coq.setoid_ring.InitialRing.gen_phiNword_morph	40
Coq.setoid_ring.InitialRing.radd_ext_Proper	40	102	search with cache (only 1: exact (Radd_ext Reqe)).	34.8325369358	13435
Coq.setoid_ring.InitialRing.rmul_ext_Proper	40
Coq.setoid_ring.InitialRing.ropp_ext_Proper	40	28	search with cache (only 1: exact (Ropp_ext Reqe)).	1.07356905937	720
Coq.setoid_ring.InitialRing.rsub_ext_Proper	40	12	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.164322853088	72
Coq.setoid_ring.InitialRing.triv_div_th	40
Coq.setoid_ring.InitialRing.Ztriv_div_th	40
Coq.setoid_ring.InitialRing.Ntriv_div_th	40
Coq.setoid_ring.Cring.cring_eq_ext	40	19.2.3.99	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	34.1799931526	9153
Coq.setoid_ring.Cring.cring_almost_ring_theory	40
Coq.setoid_ring.Cring.cring_morph	40
Coq.setoid_ring.Cring.cring_power_theory	40	36	search with cache (only 1: let rec Esimpl3 := let rec Esimpl2 := let rec Esimpl := let rec rsimpl := repeat gen_rewrite || rewrite phiCR_comm in repeat progress match goal with | |- context [ @Pphi ?l ?P ] => match P with | P0 => rewrite (Pphi0 (C:=l)) | P1 => rewrite (Pphi1 (C:=l)) | @mkPX ?P ?i ?n ?Q => rewrite (@mkPX_ok l P i n Q) end | |- context [ [?c] ] => match c with | 0 => rewrite ring_morphism0 | 1 => rewrite ring_morphism1 | ?x + ?y => rewrite ring_morphism_add | ?x * ?y => rewrite ring_morphism_mul | ?x - ?y => rewrite ring_morphism_sub | - ?x => rewrite ring_morphism_opp end end; simpl; rsimpl in Esimpl; repeat progress match goal with | |- context [ @Pphi ?l (@PaddCl ?c ?P) ] => rewrite (@PaddCl_ok c P l) | |- context [ @Pphi ?l (@PmulC ?P ?c) ] => rewrite (@PmulC_ok c P l) | |- context [ @Pphi ?l (@Popp ?P) ] => rewrite (@Popp_ok P l) end; Esimpl in repeat match goal with | |- context [ @Pphi ?l (@Padd ?P1 ?P2) ] => rewrite (@Padd_ok P1 P2 l) | |- context [ @Pphi ?l (@Psub ?P1 ?P2) ] => rewrite (@Psub_ok P1 P2 l) end; try Esimpl2; try reflexivity; try apply ring_add_comm in now Esimpl3).	3.48393392563	658
Coq.setoid_ring.Cring.cring_div_theory	40
Coq.setoid_ring.Cring.Zcri	40	38.2.11.16	search with cache (only 1: intro; only 1: intros; only 1: apply Ncring_initial.Zsth; only 1: now rewrite Z.mul_comm).	28.3131120205	19376
Coq.setoid_ring.Ring_polynom.radd_ext_Proper	40	18	search with cache (only 1: exact (Radd_ext Reqe)).	0.297930002213	326
Coq.setoid_ring.Ring_polynom.rmul_ext_Proper	40	20	search with cache (only 1: exact (Rmul_ext Reqe)).	0.470370054245	419
Coq.setoid_ring.Ring_polynom.ropp_ext_Proper	40	20	search with cache (only 1: exact (Ropp_ext Reqe)).	0.450932979584	446
Coq.setoid_ring.Ring_polynom.rsub_ext_Proper	40	3.19	search with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	0.616602897644	623
Coq.setoid_ring.Ring_polynom.Pequiv_eq	40
Coq.setoid_ring.Ring_polynom.Pphi_ext	40
Coq.setoid_ring.Ring_polynom.Pinj_ext	40
Coq.setoid_ring.Ring_polynom.PX_ext	40
Coq.setoid_ring.Ring_polynom.jump_add'	40
Coq.setoid_ring.Ring_polynom.Peq_ok	40
Coq.setoid_ring.Ring_polynom.Peq_spec	40
Coq.setoid_ring.Ring_polynom.Pphi0	40
Coq.setoid_ring.Ring_polynom.Pphi1	40
Coq.setoid_ring.Ring_polynom.mkPinj_ok	40
Coq.setoid_ring.Ring_polynom.mkPinj_ext	40
Coq.setoid_ring.Ring_polynom.pow_pos_add	40
Coq.setoid_ring.Ring_polynom.ceqb_spec	40
Coq.setoid_ring.Ring_polynom.mkPX_ok	40
Coq.setoid_ring.Ring_polynom.mkPX_ext	40
Coq.setoid_ring.Ring_polynom.PaddC_ok	40
Coq.setoid_ring.Ring_polynom.PsubC_ok	40	0.2.0.0.0.0.0.1.0.0.0.0	search with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	6.39573788643	1564
Coq.setoid_ring.Ring_polynom.PmulC_aux_ok	40
Coq.setoid_ring.Ring_polynom.PmulC_ok	40
Coq.setoid_ring.Ring_polynom.Popp_ok	40
Coq.setoid_ring.Ring_polynom.PaddX_ok	40
Coq.setoid_ring.Ring_polynom.Padd_ok	40
Coq.setoid_ring.Ring_polynom.Psub_opp	40
Coq.setoid_ring.Ring_polynom.Psub_ok	40
Coq.setoid_ring.Ring_polynom.PmulI_ok	40
Coq.setoid_ring.Ring_polynom.Pmul_ok	40
Coq.setoid_ring.Ring_polynom.mkZmon_ok	40
Coq.setoid_ring.Ring_polynom.zmon_pred_ok	40
Coq.setoid_ring.Ring_polynom.mkVmon_ok	40
Coq.setoid_ring.Ring_polynom.Mcphi_ok	40
Coq.setoid_ring.Ring_polynom.Mphi_ok	40
Coq.setoid_ring.Ring_polynom.POneSubst_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst1_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL1_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL_ok	40
Coq.setoid_ring.Ring_polynom.PNSubstL_ok	40
Coq.setoid_ring.Ring_polynom.mkX_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_pos_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_N_ok	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEadd	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEopp	40
Coq.setoid_ring.Ring_polynom.norm_aux_spec	40
Coq.setoid_ring.Ring_polynom.norm_subst_spec	40
Coq.setoid_ring.Ring_polynom.mon_of_pol_ok	40
Coq.setoid_ring.Ring_polynom.interp_PElist_ok	40
Coq.setoid_ring.Ring_polynom.norm_subst_ok	40
Coq.setoid_ring.Ring_polynom.ring_correct	40
Coq.setoid_ring.Ring_polynom.mkmult_rec_ok	40
Coq.setoid_ring.Ring_polynom.mkmult1_ok	40
Coq.setoid_ring.Ring_polynom.mkmultm1_ok	40
Coq.setoid_ring.Ring_polynom.r_list_pow_rev	40
Coq.setoid_ring.Ring_polynom.mkmult_c_pos_ok	40
Coq.setoid_ring.Ring_polynom.mkmult_c_ok	40
Coq.setoid_ring.Ring_polynom.mkadd_mult_ok	40
Coq.setoid_ring.Ring_polynom.add_pow_list_ok	40
Coq.setoid_ring.Ring_polynom.add_mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_avoid_ok	40
Coq.setoid_ring.Ring_polynom.local_mkpow_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_pow_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_pow_correct	40
Coq.setoid_ring.Ring_polynom.mkmult_pow_ok	40
Coq.setoid_ring.Ring_polynom.mkpow_ok	40
Coq.setoid_ring.Ring_polynom.mkopp_pow_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_dev_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_correct	40
Coq.setoid_ring.BinList.jump_tl	40
Coq.setoid_ring.BinList.jump_succ	40
Coq.setoid_ring.BinList.jump_add	40
Coq.setoid_ring.BinList.jump_pred_double	40
Coq.setoid_ring.BinList.nth_jump	40
Coq.setoid_ring.BinList.nth_pred_double	40
Coq.setoid_ring.Ncring.pow_pos_comm	40
Coq.setoid_ring.Ncring.pow_pos_succ	40
Coq.setoid_ring.Ncring.pow_pos_add	40
Coq.setoid_ring.Ncring.pow_N_pow_N	40	0	search with cache (only 1: reflexivity).	0.0151829719543	1
Coq.setoid_ring.Ncring.ring_mul_0_l	40
Coq.setoid_ring.Ncring.ring_mul_0_r	40
Coq.setoid_ring.Ncring.ring_opp_mul_l	40
Coq.setoid_ring.Ncring.ring_opp_mul_r	40
Coq.setoid_ring.Ncring.ring_opp_add	40
Coq.setoid_ring.Ncring.ring_opp_opp	40
Coq.setoid_ring.Ncring.ring_sub_ext	40
Coq.setoid_ring.Ncring.ring_add_0_r	40	0.0.1.12	search with cache (only 1: intros x; only 1: rewrite (ring_add_comm x); only 1: rewrite ring_add_0_l; only 1: reflexivity).	0.381494998932	118
Coq.setoid_ring.Ncring.ring_add_assoc1	40	1.19.24.5	search with cache (only 1: intros; only 1: rewrite <- ring_add_assoc; only 1: rewrite (ring_add_comm x); only 1: reflexivity).	13.4795501232	8177
Coq.setoid_ring.Ncring.ring_add_assoc2	40	0.2.1.21.0	search with cache (only 1: intros; only 1: rewrite (ring_add_comm y); only 1: rewrite <- (ring_add_assoc x); only 1: rewrite (ring_add_comm x); only 1: reflexivity).	2.21767401695	1290
Coq.setoid_ring.Ncring.ring_opp_zero	40
Coq.setoid_ring.Ncring_tac.Zeqb_ok	40	0.0.3.0.22	search with cache (only 1: intros x y H7; only 1: apply Zsth; only 1: pose proof (Zeq_bool_eq x y H7) as H10; only 1: rewrite H10; only 1: reflexivity).	1.26262283325	1170
Coq.setoid_ring.Ncring_tac.comm	40
Coq.setoid_ring.Rings_Q.Qri	40
Coq.setoid_ring.Rings_Q.Qcri	40	31.13	search with cache (only 1: unfold Qopp; only 1: exact Qmult_comm).	6.55083298683	6636
Coq.setoid_ring.Rings_Q.Q_one_zero	40	0	search with cache (only 1: discriminate).	0.0187969207764	1
Coq.setoid_ring.Rings_Q.Qdi	40
Coq.ssr.ssreflect.master_key	40	1	search with cache (only 1: tauto).	0.00507593154907	2
Coq.ssr.ssreflect.lock	40
Coq.ssr.ssreflect.not_locked_false_eq_true	40	0.3	search with cache (only 1: unlock; only 1: discriminate).	0.0276539325714	13
Coq.ssr.ssreflect.unlock	40
Coq.ssr.ssreflect.locked_withE	40
Coq.ssr.ssreflect.unlock_with	40	1	search with cache (only 1: by case : k ).	0.00810599327087	2
Coq.ssr.ssreflect.nary_congruence	40
Coq.ssr.ssreflect.ssr_congr_arrow	40	1.5.7	search with cache (only 1: intros; only 1: subst; only 1: tauto).	0.063001871109	135
Coq.ssr.ssreflect.iffLR	40	0	search with cache (only 1: intuition).	0.00900101661682	1
Coq.ssr.ssreflect.iffRL	40	0	search with cache (only 1: by case : eqPQ ).	0.00810408592224	1
Coq.ssr.ssreflect.iffLRn	40	2	search with cache (only 1: intuition).	0.0168311595917	3
Coq.ssr.ssreflect.iffRLn	40	0	search with cache (only 1: by move  =>nP tQ; case : nP ; case : eqPQ tQ ).	0.00913000106812	1
Coq.ssr.ssreflect.abstract_context	40	5.69.117	search with cache (only 1: intro H; only 1: apply H; only 1: reflexivity).	7.14046001434	85856
Coq.ssr.ssrbool.prop_congr	40	0	search with cache (only 1: Bool.destr_bool).	0.00923299789429	1
Coq.ssr.ssrbool.is_true_true	40	7	search with cache (only 1: reflexivity).	0.00424599647522	8
Coq.ssr.ssrbool.not_false_is_true	40	0	search with cache (only 1: by [  ]).	0.00615310668945	1
Coq.ssr.ssrbool.is_true_locked_true	40	0.0	search with cache (only 1: unlock; only 1: by [  ]).	0.00602984428406	2
Coq.ssr.ssrbool.negbT	40	0	search with cache (only 1: Bool.destr_bool).	0.00655508041382	1
Coq.ssr.ssrbool.negbTE	40	0	search with cache (only 1: by case : b ).	0.00643301010132	1
Coq.ssr.ssrbool.negbF	40	0	search with cache (only 1: by case : b ).	0.00637698173523	1
Coq.ssr.ssrbool.negbFE	40	0	search with cache (only 1: by case : b ).	0.00671005249023	1
Coq.ssr.ssrbool.negbK	40	0.29	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.0907378196716	451
Coq.ssr.ssrbool.negbNE	40	0	search with cache (only 1: by case : b ).	0.00484204292297	1
Coq.ssr.ssrbool.negb_inj	40	0.38	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.412324905396	1090
Coq.ssr.ssrbool.negbLR	40	0	search with cache (only 1: Bool.destr_bool).	0.00946402549744	1
Coq.ssr.ssrbool.negbRL	40	1	search with cache (only 1: Bool.destr_bool).	0.0106918811798	2
Coq.ssr.ssrbool.contra	40	1.8	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.0700228214264	22
Coq.ssr.ssrbool.contraL	40	0	search with cache (only 1: by case : b  => //; case : c ).	0.0114068984985	1
Coq.ssr.ssrbool.contraR	40	0	search with cache (only 1: by case : b  => //; case : c ).	0.0106110572815	1
Coq.ssr.ssrbool.contraLR	40	0	search with cache (only 1: by case : b  => //; case : c ).	0.0106830596924	1
Coq.ssr.ssrbool.contraT	40	1.13	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.226696014404	92
Coq.ssr.ssrbool.wlog_neg	40	0	search with cache (only 1: by case : b  => // ->).	0.00786089897156	1
Coq.ssr.ssrbool.contraFT	40	4.14	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.524403095245	176
Coq.ssr.ssrbool.contraFN	40	4.15	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.557377099991	197
Coq.ssr.ssrbool.contraTF	40	0.15	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.364660978317	108
Coq.ssr.ssrbool.contraNF	40	0.16	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.430613994598	126
Coq.ssr.ssrbool.contraFF	40	0.0.42.32	search with cache (only 1: Bool.destr_bool; only 1: destruct H; only 1: by [  ]; only 1: intuition).	7.19015192986	18402
Coq.ssr.ssrbool.ifP	40
Coq.ssr.ssrbool.ifPn	40	0	search with cache (only 1: by case  def_b: b ; constructor).	0.00683808326721	1
Coq.ssr.ssrbool.ifT	40	1	search with cache (only 1: by case : b ).	0.0103099346161	2
Coq.ssr.ssrbool.ifF	40	3	search with cache (only 1: by case : b ).	0.0115439891815	4
Coq.ssr.ssrbool.ifN	40	2	search with cache (only 1: by case : b ).	0.00958395004272	3
Coq.ssr.ssrbool.if_same	40	18	search with cache (only 1: by case  def_b: b ; constructor; rewrite ?def_b).	0.0334260463715	145
Coq.ssr.ssrbool.if_neg	40	3	search with cache (only 1: by case : b ).	0.00635099411011	4
Coq.ssr.ssrbool.fun_if	40	0	search with cache (only 1: by case b).	0.0052638053894	1
Coq.ssr.ssrbool.if_arg	40	3	search with cache (only 1: by case b).	0.00545191764832	4
Coq.ssr.ssrbool.ifE	40	5	search with cache (only 1: reflexivity).	0.0110878944397	6
Coq.ssr.ssrbool.introNTF	40
Coq.ssr.ssrbool.introTF	40	0	search with cache (only 1: by case c; case Hb).	0.0106780529022	1
Coq.ssr.ssrbool.elimNTF	40	0	search with cache (only 1: by case c; case Hb).	0.010461807251	1
Coq.ssr.ssrbool.elimTF	40	0	search with cache (only 1: by case c; case Hb).	0.00998997688293	1
Coq.ssr.ssrbool.equivPif	40
Coq.ssr.ssrbool.xorPif	40	0.0.11	search with cache (only 1: intuition; only 1: by case Hb; auto; only 1: by case Hb; auto).	0.175379037857	86
Coq.ssr.ssrbool.introTFn	40
Coq.ssr.ssrbool.elimTFn	40
Coq.ssr.ssrbool.equivPifn	40
Coq.ssr.ssrbool.xorPifn	40
Coq.ssr.ssrbool.introT	40
Coq.ssr.ssrbool.introF	40
Coq.ssr.ssrbool.introN	40
Coq.ssr.ssrbool.introNf	40
Coq.ssr.ssrbool.introTn	40
Coq.ssr.ssrbool.introFn	40
Coq.ssr.ssrbool.elimT	40
Coq.ssr.ssrbool.elimF	40
Coq.ssr.ssrbool.elimN	40
Coq.ssr.ssrbool.elimNf	40
Coq.ssr.ssrbool.elimTn	40
Coq.ssr.ssrbool.elimFn	40
Coq.ssr.ssrbool.introP	40
Coq.ssr.ssrbool.iffP	40
Coq.ssr.ssrbool.equivP	40	0.33	search with cache (only 1: intuition; only 1: by case : Pb ; constructor; auto).	3.37495279312	585
Coq.ssr.ssrbool.sumboolP	40
Coq.ssr.ssrbool.appP	40
Coq.ssr.ssrbool.sameP	40
Coq.ssr.ssrbool.decPcases	40
Coq.ssr.ssrbool.decP	40
Coq.ssr.ssrbool.rwP	40	12	search with cache (only 1: by case Pb).	0.117697954178	46
Coq.ssr.ssrbool.rwP2	40
Coq.ssr.ssrbool.altP	40
Coq.ssr.ssrbool.impliesP	40	15.5.58	search with cache (only 1: intro H; only 1: destruct H; only 1: auto).	1.55511784554	13037
Coq.ssr.ssrbool.impliesPn	40	6.8.7	search with cache (only 1: intuition; only 1: destruct H; only 1: tauto).	0.330962896347	395
Coq.ssr.ssrbool.unlessL	40	1.57.54	search with cache (only 1: repeat split; only 1: red; only 1: auto).	1.37032699585	9622
Coq.ssr.ssrbool.unlessR	40	35.17.83	search with cache (only 1: repeat split; only 1: red; only 1: intuition).	1.86430001259	14874
Coq.ssr.ssrbool.unless_sym	40
Coq.ssr.ssrbool.unlessP	40
Coq.ssr.ssrbool.bind_unless	40
Coq.ssr.ssrbool.unless_contra	40	5.6.5.6.40.115	search with cache (only 1: repeat split; only 1: Bool.destr_bool; only 1: intro H; only 1: intuition; only 1: intro H; only 1: intuition).	12.7460100651	36645
Coq.ssr.ssrbool.classicP	40
Coq.ssr.ssrbool.classicW	40	0.9	search with cache (only 1: red; only 1: by move  =>b b' ->).	0.0125269889832	21
Coq.ssr.ssrbool.classic_bind	40
Coq.ssr.ssrbool.classic_EM	40
Coq.ssr.ssrbool.classic_pick	40
Coq.ssr.ssrbool.classic_imply	40
Coq.ssr.ssrbool.all_and2	40
Coq.ssr.ssrbool.all_and3	40	0	search with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0111038684845	1
Coq.ssr.ssrbool.all_and4	40	0	search with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0121960639954	1
Coq.ssr.ssrbool.all_and5	40	0	search with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0133969783783	1
Coq.ssr.ssrbool.pair_andP	40	7	search with cache (only 1: intuition).	0.0137190818787	14
Coq.ssr.ssrbool.idP	40	0.1.48	search with cache (only 1: destruct b1; only 1: intuition; only 1: intuition).	16.2876758575	1336
Coq.ssr.ssrbool.boolP	40	0	search with cache (only 1: by case b1; constructor).	0.00584292411804	1
Coq.ssr.ssrbool.idPn	40	0	search with cache (only 1: by case b1; constructor).	0.00574612617493	1
Coq.ssr.ssrbool.negP	40	0	search with cache (only 1: by case b1; constructor).	0.00804591178894	1
Coq.ssr.ssrbool.negPn	40	0	search with cache (only 1: by case b1; constructor; auto).	0.00582599639893	1
Coq.ssr.ssrbool.negPf	40	0	search with cache (only 1: by case b1; constructor; auto).	0.00607395172119	1
Coq.ssr.ssrbool.andP	40
Coq.ssr.ssrbool.and3P	40
Coq.ssr.ssrbool.and4P	40
Coq.ssr.ssrbool.and5P	40
Coq.ssr.ssrbool.orP	40
Coq.ssr.ssrbool.or3P	40
Coq.ssr.ssrbool.or4P	40
Coq.ssr.ssrbool.nandP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0114750862122	1
Coq.ssr.ssrbool.norP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case; auto).	0.0109739303589	1
Coq.ssr.ssrbool.implyP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.00911402702332	1
Coq.ssr.ssrbool.andTb	40	14	search with cache (only 1: repeat split).	0.0177900791168	75
Coq.ssr.ssrbool.andFb	40	2	search with cache (only 1: by [  ]).	0.00660681724548	3
Coq.ssr.ssrbool.andbT	40	1.22	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.0623989105225	281
Coq.ssr.ssrbool.andbF	40	3	search with cache (only 1: by case).	0.00882816314697	4
Coq.ssr.ssrbool.andbb	40	5	search with cache (only 1: by case).	0.00807595252991	6
Coq.ssr.ssrbool.andbC	40	0.51	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.359169006348	1386
Coq.ssr.ssrbool.andbA	40	0	search with cache (only 1: by case).	0.00678086280823	1
Coq.ssr.ssrbool.andbCA	40	0	search with cache (only 1: by do 2!case).	0.00846695899963	1
Coq.ssr.ssrbool.andbAC	40	4	search with cache (only 1: by do 3!case).	0.0155260562897	5
Coq.ssr.ssrbool.andbACA	40	13	search with cache (only 1: by do 3!case).	0.0342540740967	60
Coq.ssr.ssrbool.orTb	40	0	search with cache (only 1: reflexivity).	0.00704598426819	1
Coq.ssr.ssrbool.orFb	40	0	search with cache (only 1: by [  ]).	0.0058810710907	1
Coq.ssr.ssrbool.orbT	40	2	search with cache (only 1: Bool.destr_bool).	0.00993895530701	3
Coq.ssr.ssrbool.orbF	40	0	search with cache (only 1: by case).	0.00701403617859	1
Coq.ssr.ssrbool.orbb	40	0	search with cache (only 1: by case).	0.00616502761841	1
Coq.ssr.ssrbool.orbC	40	0	search with cache (only 1: by do 2!case).	0.0080668926239	1
Coq.ssr.ssrbool.orbA	40	0	search with cache (only 1: by do 3!case).	0.0115120410919	1
Coq.ssr.ssrbool.orbCA	40	0	search with cache (only 1: by do 3!case).	0.0128281116486	1
Coq.ssr.ssrbool.orbAC	40	0	search with cache (only 1: by do 3!case).	0.0120921134949	1
Coq.ssr.ssrbool.orbACA	40	0	search with cache (only 1: by do 4!case).	0.0192809104919	1
Coq.ssr.ssrbool.andbN	40	0	search with cache (only 1: Bool.destr_bool).	0.00922298431396	1
Coq.ssr.ssrbool.andNb	40	0	search with cache (only 1: by case : b ).	0.00694108009338	1
Coq.ssr.ssrbool.orbN	40	0	search with cache (only 1: Bool.destr_bool).	0.00829410552979	1
Coq.ssr.ssrbool.orNb	40	0	search with cache (only 1: by case : b ).	0.00710415840149	1
Coq.ssr.ssrbool.andb_orl	40	7	search with cache (only 1: by do 3!case).	0.0207810401917	8
Coq.ssr.ssrbool.andb_orr	40	0	search with cache (only 1: by do 3!case).	0.0124979019165	1
Coq.ssr.ssrbool.orb_andl	40	0	search with cache (only 1: by do 3!case).	0.0124199390411	1
Coq.ssr.ssrbool.orb_andr	40	0	search with cache (only 1: by do 3!case).	0.0126039981842	1
Coq.ssr.ssrbool.andb_idl	40	1.6	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.0284161567688	9
Coq.ssr.ssrbool.andb_idr	40	0	search with cache (only 1: by case : a ; case : b  => // ->).	0.0130980014801	1
Coq.ssr.ssrbool.andb_id2l	40	0	search with cache (only 1: by case : a ; case : b  => // ->).	0.0153889656067	1
Coq.ssr.ssrbool.andb_id2r	40	0	search with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.015625	1
Coq.ssr.ssrbool.orb_idl	40	0	search with cache (only 1: by case : a ; case : b  => // ->).	0.011855840683	1
Coq.ssr.ssrbool.orb_idr	40	0	search with cache (only 1: by case : a ; case : b  => // ->).	0.0114948749542	1
Coq.ssr.ssrbool.orb_id2l	40	0	search with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0166161060333	1
Coq.ssr.ssrbool.orb_id2r	40	0	search with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0857729911804	1
Coq.ssr.ssrbool.negb_and	40	0	search with cache (only 1: Bool.destr_bool).	0.0101549625397	1
Coq.ssr.ssrbool.negb_or	40	0	search with cache (only 1: by case : a ; case : b ).	0.00869297981262	1
Coq.ssr.ssrbool.andbK	40	0	search with cache (only 1: by case : a ; case : b  => // ->).	0.00861501693726	1
Coq.ssr.ssrbool.andKb	40	0	search with cache (only 1: by case : a ; case : b ).	0.00880193710327	1
Coq.ssr.ssrbool.orbK	40	0	search with cache (only 1: by case : a ; case : b ).	0.00853180885315	1
Coq.ssr.ssrbool.orKb	40	0	search with cache (only 1: by case : a ; case : b ).	0.00837802886963	1
Coq.ssr.ssrbool.implybT	40	3	search with cache (only 1: Bool.destr_bool).	0.0105369091034	4
Coq.ssr.ssrbool.implybF	40	0	search with cache (only 1: by case : b ).	0.00675201416016	1
Coq.ssr.ssrbool.implyFb	40	0	search with cache (only 1: by case : b ).	0.0063271522522	1
Coq.ssr.ssrbool.implyTb	40	0	search with cache (only 1: by case : b ).	0.00663614273071	1
Coq.ssr.ssrbool.implybb	40	1	search with cache (only 1: by case : b ).	0.00768518447876	2
Coq.ssr.ssrbool.negb_imply	40	0	search with cache (only 1: by case : a ; case : b ).	0.00811791419983	1
Coq.ssr.ssrbool.implybE	40	0	search with cache (only 1: by case : a ; case : b ).	0.00857090950012	1
Coq.ssr.ssrbool.implyNb	40	0	search with cache (only 1: by case : a ; case : b ).	0.00829696655273	1
Coq.ssr.ssrbool.implybN	40	0	search with cache (only 1: by case : a ; case : b ).	0.00865983963013	1
Coq.ssr.ssrbool.implybNN	40	0	search with cache (only 1: by case : a ; case : b ).	0.00856685638428	1
Coq.ssr.ssrbool.implyb_idl	40	2	search with cache (only 1: by case : a ; case : b  => // ->).	0.0183410644531	3
Coq.ssr.ssrbool.implyb_idr	40	0	search with cache (only 1: by case : a ; case : b  => // ->).	0.0121610164642	1
Coq.ssr.ssrbool.implyb_id2l	40	0	search with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0159261226654	1
Coq.ssr.ssrbool.addFb	40	0	search with cache (only 1: by [  ]).	0.00713300704956	1
Coq.ssr.ssrbool.addbF	40	0	search with cache (only 1: by case).	0.00628805160522	1
Coq.ssr.ssrbool.addbb	40	1	search with cache (only 1: by case).	0.00824904441833	2
Coq.ssr.ssrbool.addbC	40	0	search with cache (only 1: by do 2!case).	0.00750803947449	1
Coq.ssr.ssrbool.addbA	40	0	search with cache (only 1: by do 3!case).	0.0103130340576	1
Coq.ssr.ssrbool.addbCA	40	0	search with cache (only 1: by do 3!case).	0.0107188224792	1
Coq.ssr.ssrbool.addbAC	40	0	search with cache (only 1: by do 3!case).	0.0100560188293	1
Coq.ssr.ssrbool.addbACA	40	0	search with cache (only 1: by do 4!case).	0.0174808502197	1
Coq.ssr.ssrbool.andb_addl	40	0	search with cache (only 1: by do 3!case).	0.027694940567	1
Coq.ssr.ssrbool.andb_addr	40	0	search with cache (only 1: by do 3!case).	0.0124800205231	1
Coq.ssr.ssrbool.addKb	40	0	search with cache (only 1: by do 2!case).	0.00883388519287	1
Coq.ssr.ssrbool.addbK	40	0	search with cache (only 1: by do 2!case).	0.00828385353088	1
Coq.ssr.ssrbool.addIb	40	3	search with cache (only 1: by do 3!case).	0.0210359096527	4
Coq.ssr.ssrbool.addbI	40	1	search with cache (only 1: by do 3!case).	0.0179929733276	2
Coq.ssr.ssrbool.addTb	40	0	search with cache (only 1: by case : b ).	0.00784301757812	1
Coq.ssr.ssrbool.addbT	40	1	search with cache (only 1: by case : b ).	0.00885605812073	2
Coq.ssr.ssrbool.addbN	40	2	search with cache (only 1: by case : a ; case : b ).	0.0133399963379	3
Coq.ssr.ssrbool.addNb	40	0	search with cache (only 1: by case : a ; case : b ).	0.00970602035522	1
Coq.ssr.ssrbool.addbP	40	0.0.0.0.42	search with cache (only 1: Bool.destr_bool; only 1: intuition; only 1: intuition; only 1: now constructor; only 1: intuition).	1.18915009499	1094
Coq.ssr.ssrbool.subrelUl	40	8.15.6.30.23	search with cache (only 1: intro H; only 1: intros; only 1: red; only 1: Bool.destr_bool; only 1: intuition).	2.51758098602	11144
Coq.ssr.ssrbool.subrelUr	40	9.16.7.31.24	search with cache (only 1: intro H; only 1: intros; only 1: red; only 1: Bool.destr_bool; only 1: intuition).	3.06238007545	13040
Coq.ssr.ssrbool.sub_refl	40	4.19	search with cache (only 1: intro H; only 1: case  =>// undecP).	0.135693788528	293
Coq.ssr.ssrbool.mem_topred	40
Coq.ssr.ssrbool.topredE	40	0	search with cache (only 1: by case : pT pp ).	0.00820994377136	1
Coq.ssr.ssrbool.app_predE	40
Coq.ssr.ssrbool.in_applicative	40
Coq.ssr.ssrbool.in_collective	40
Coq.ssr.ssrbool.in_simpl	40	0	search with cache (only 1: by case : msp  => _ /= ->).	0.00956296920776	1
Coq.ssr.ssrbool.unfold_in	40	2	search with cache (only 1: by rewrite -mem_topred).	0.00890207290649	3
Coq.ssr.ssrbool.simpl_predE	40	4	search with cache (only 1: by [  ]).	0.00633907318115	5
Coq.ssr.ssrbool.mem_simpl	40	2	search with cache (only 1: by [  ]).	0.00692200660706	3
Coq.ssr.ssrbool.mem_mem	40
Coq.ssr.ssrbool.qualifE	40	0	search with cache (only 1: by [  ]).	0.00739192962646	1
Coq.ssr.ssrbool.keyed_predE	40
Coq.ssr.ssrbool.keyed_qualifier_suproof	40
Coq.ssr.ssrbool.all_tag_cond_dep	40
Coq.ssr.ssrbool.all_tag_cond	40
Coq.ssr.ssrbool.all_sig_cond_dep	40
Coq.ssr.ssrbool.all_sig_cond	40
Coq.ssr.ssrbool.symmetric_from_pre	40
Coq.ssr.ssrbool.sym_left_transitive	40
Coq.ssr.ssrbool.sym_right_transitive	40
Coq.ssr.ssrbool.equivalence_relP	40
Coq.ssr.ssrbool.rev_trans	40
Coq.ssr.ssrbool.forE	40	5	search with cache (only 1: by [  ]).	0.00922393798828	6
Coq.ssr.ssrbool.in1W	40	1.17	search with cache (only 1: intros; only 1: by [  ]).	0.143055915833	166
Coq.ssr.ssrbool.in2W	40	0	search with cache (only 1: by move  =>? ?).	0.00734400749207	1
Coq.ssr.ssrbool.in3W	40	0	search with cache (only 1: by move  =>? ?).	0.007169008255	1
Coq.ssr.ssrbool.in1T	40	9.19	search with cache (only 1: intros; only 1: auto).	0.311928987503	465
Coq.ssr.ssrbool.in2T	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0129442214966	2
Coq.ssr.ssrbool.in3T	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0132069587708	2
Coq.ssr.ssrbool.sub_in1	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0127310752869	2
Coq.ssr.ssrbool.sub_in11	40	2	search with cache (only 1: by move  =>? ?; auto).	0.0156960487366	3
Coq.ssr.ssrbool.sub_in111	40	3	search with cache (only 1: by move  =>? ?; auto).	0.0215971469879	4
Coq.ssr.ssrbool.on1W	40	0	search with cache (only 1: by move  =>? ?).	0.0075318813324	1
Coq.ssr.ssrbool.on1lW	40	0	search with cache (only 1: by move  =>? ?).	0.00679898262024	1
Coq.ssr.ssrbool.on2W	40	0	search with cache (only 1: by move  =>? ?).	0.00722002983093	1
Coq.ssr.ssrbool.on1T	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0709011554718	2
Coq.ssr.ssrbool.on1lT	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0707550048828	2
Coq.ssr.ssrbool.on2T	40	1	search with cache (only 1: by move  =>? ?; auto).	0.01220703125	2
Coq.ssr.ssrbool.subon1	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0105979442596	2
Coq.ssr.ssrbool.subon1l	40	0	search with cache (only 1: by move  =>allQ x /sub2; apply : allQ ).	0.00916504859924	1
Coq.ssr.ssrbool.subon2	40	3	search with cache (only 1: by move  =>? ?; auto).	0.0153908729553	4
Coq.ssr.ssrbool.can_in_inj	40
Coq.ssr.ssrbool.canLR_in	40	88.33.31	search with cache (only 1: intros; only 1: subst; only 1: auto).	14.3879959583	43775
Coq.ssr.ssrbool.canRL_in	40
Coq.ssr.ssrbool.on_can_inj	40	0	search with cache (only 1: by move  =>fK x y /fK {+2}<- /fK {+2}<- ->).	0.0132129192352	1
Coq.ssr.ssrbool.canLR_on	40	1	search with cache (only 1: by move  =>fK D1y ->; rewrite fK).	0.00957489013672	2
Coq.ssr.ssrbool.canRL_on	40	2	search with cache (only 1: by move  =>fK D1x <-; rewrite fK).	0.00895190238953	3
Coq.ssr.ssrbool.inW_bij	40
Coq.ssr.ssrbool.onW_bij	40	0	search with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0092978477478	1
Coq.ssr.ssrbool.inT_bij	40	0	search with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0110681056976	1
Coq.ssr.ssrbool.onT_bij	40	0	search with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0120711326599	1
Coq.ssr.ssrbool.sub_in_bij	40	0.27	search with cache (only 1: intro H; only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.437301874161	426
Coq.ssr.ssrbool.subon_bij	40	0	search with cache (only 1: by move  =>subD [g' fK g'K]; exists g' => x; move /subD ; [ apply : fK  | apply : g'K  ]).	0.0156009197235	1
Coq.ssr.ssrbool.sub_in2	40	19.48	search with cache (only 1: red; only 1: auto).	1.29349589348	4064
Coq.ssr.ssrbool.sub_in3	40	5.18.14	search with cache (only 1: intros; only 1: inversion 1; only 1: intuition).	0.826516151428	1549
Coq.ssr.ssrbool.sub_in12	40	0.27	search with cache (only 1: intro H; only 1: by move  =>/= sub_dd'; apply : sub_in111 ).	0.464241981506	390
Coq.ssr.ssrbool.sub_in21	40	0	search with cache (only 1: by move  =>/= sub1 sub; apply : sub_in111 ).	0.00943112373352	1
Coq.ssr.ssrbool.equivalence_relP_in	40
Coq.ssr.ssrbool.monoW	40	32	search with cache (only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).	0.540186166763	860
Coq.ssr.ssrbool.mono2W	40	0	search with cache (only 1: by move  =>hf x ax; rewrite hf).	0.00708484649658	1
Coq.ssr.ssrbool.homoRL	40
Coq.ssr.ssrbool.homoLR	40	0	search with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).	0.00999879837036	1
Coq.ssr.ssrbool.homo_mono	40
Coq.ssr.ssrbool.monoLR	40
Coq.ssr.ssrbool.monoRL	40
Coq.ssr.ssrbool.can_mono	40
Coq.ssr.ssrbool.monoW_in	40
Coq.ssr.ssrbool.mono2W_in	40	1	search with cache (only 1: by move  =>hf x ax; rewrite hf).	0.00920581817627	2
Coq.ssr.ssrbool.homoRL_in	40
Coq.ssr.ssrbool.homoLR_in	40	0	search with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK_on //; apply).	0.014848947525	1
Coq.ssr.ssrbool.homo_mono_in	40
Coq.ssr.ssrbool.monoLR_in	40
Coq.ssr.ssrbool.monoRL_in	40
Coq.ssr.ssrbool.can_mono_in	40
Coq.ssr.ssrsetoid.compat_Reflexive	40	0	search with cache (only 1: firstorder).	0.00577306747437	1
Coq.ssr.ssrfun.unitE	40	2.62.14	search with cache (only 1: intro H; only 1: destruct H; only 1: reflexivity).	1.46291303635	14773
Coq.ssr.ssrfun.frefl	40	1.12	search with cache (only 1: red; only 1: trivial).	0.0163538455963	76
Coq.ssr.ssrfun.fsym	40	0.35	search with cache (only 1: intro H; only 1: by [  ]).	0.153129816055	811
Coq.ssr.ssrfun.ftrans	40	2.60.20.10	search with cache (only 1: red; only 1: intros; only 1: rewrite H; only 1: trivial).	6.21779894829	42801
Coq.ssr.ssrfun.rrefl	40	3	search with cache (only 1: by [  ]).	0.0051748752594	4
Coq.ssr.ssrfun.eq_comp	40
Coq.ssr.ssrfun.all_tag	40	0.0.0.1.0	search with cache (only 1: intro H; only 1: exists (fun z => projT1 (H z)); only 1: intro z; only 1: destruct (H z); only 1: assumption).	0.0119280815125	6
Coq.ssr.ssrfun.all_tag2	40	0	search with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).	0.0107450485229	1
Coq.ssr.ssrfun.svalP	40	42	search with cache (only 1: apply proj2_sig).	0.132375955582	901
Coq.ssr.ssrfun.s2valP	40	4	search with cache (only 1: by case : u ).	0.00700998306274	5
Coq.ssr.ssrfun.s2valP'	40	0	search with cache (only 1: by case : u ).	0.00651597976685	1
Coq.ssr.ssrfun.all_sig	40	0	search with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).	0.00874710083008	1
Coq.ssr.ssrfun.all_sig2	40	0	search with cache (only 1: by case /all_tag =>f /all_pair []; exists f).	0.0131919384003	1
Coq.ssr.ssrfun.can_pcan	40
Coq.ssr.ssrfun.pcan_inj	40
Coq.ssr.ssrfun.can_inj	40	0	search with cache (only 1: by move  =>fK x y /(congr1 g); rewrite !fK => [[]]).	0.00978398323059	1
Coq.ssr.ssrfun.canLR	40	13.18.8	search with cache (only 1: intros h1 h2; only 1: subst; only 1: trivial).	0.521858930588	2357
Coq.ssr.ssrfun.canRL	40	29.21	search with cache (only 1: destruct 2; only 1: auto).	1.97980999947	11653
Coq.ssr.ssrfun.Some_inj	40	10.25.14	search with cache (only 1: intro H; only 1: inversion 1; only 1: repeat split).	1.15131807327	4710
Coq.ssr.ssrfun.of_voidK	40	6.15	search with cache (only 1: intro H; only 1: destruct H).	0.0773980617523	252
Coq.ssr.ssrfun.esymK	40	0.14.25	search with cache (only 1: intro H; only 1: destruct H; only 1: reflexivity).	0.454939842224	2617
Coq.ssr.ssrfun.etrans_id	40	2.17	search with cache (only 1: rewrite eq_trans_refl_l; only 1: trivial).	0.0404000282288	189
Coq.ssr.ssrfun.inj_id	40	3.1	search with cache (only 1: red; only 1: Bool.destr_bool).	0.00830292701721	6
Coq.ssr.ssrfun.inj_can_sym	40	9.25	search with cache (only 1: red; only 1: auto).	0.518072843552	1133
Coq.ssr.ssrfun.inj_comp	40	7.21	search with cache (only 1: red; only 1: auto).	0.469413042068	1029
Coq.ssr.ssrfun.inj_compr	40
Coq.ssr.ssrfun.can_comp	40	3.19.71	search with cache (only 1: red; only 1: simpl; only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).	2.52336406708	14366
Coq.ssr.ssrfun.pcan_pcomp	40
Coq.ssr.ssrfun.eq_inj	40
Coq.ssr.ssrfun.eq_can	40
Coq.ssr.ssrfun.inj_can_eq	40
Coq.ssr.ssrfun.bij_inj	40
Coq.ssr.ssrfun.bij_can_sym	40
Coq.ssr.ssrfun.bij_can_eq	40
Coq.ssr.ssrfun.eq_bij	40
Coq.ssr.ssrfun.bij_comp	40
Coq.ssr.ssrfun.bij_can_bij	40
Coq.ssr.ssrfun.inv_inj	40
Coq.ssr.ssrfun.inv_bij	40	9.9.187	search with cache (only 1: exists f; only 1: trivial; only 1: trivial).	3.1935210228	34152
Coq.ssr.ssrunder.Under_rel_from_rel	40	2	search with cache (only 1: auto).	0.0040590763092	3
Coq.ssr.ssrunder.Under_relE	40	0	search with cache (only 1: now trivial).	0.0028657913208	1
Coq.ssr.ssrunder.over_rel	40	0	search with cache (only 1: now trivial).	0.00290298461914	1
Coq.ssr.ssrunder.over_rel_done	40	0	search with cache (only 1: now trivial).	0.00330591201782	1
Coq.ssr.ssrunder.under_rel_done	40	0	search with cache (only 1: now unfold Over_rel).	0.00292587280273	1
Coq.Vectors.VectorEq.eqb_nat_eq	40
Coq.Vectors.VectorEq.eqb_eq	40
Coq.Vectors.VectorEq.eq_dec	40
Coq.Vectors.VectorEq.cast	40	0.1.18.3	search with cache (only 1: intros m n v1; only 1: intros H; only 1: intros <-; only 1: congruence).	0.996643066406	2427
Coq.Vectors.VectorDef.trunc	40
Coq.Vectors.VectorSpec.eta	40
Coq.Vectors.VectorSpec.eq_nth_iff	40
Coq.Vectors.VectorSpec.nth_order_last	40
Coq.Vectors.VectorSpec.shiftin_nth	40
Coq.Vectors.VectorSpec.shiftin_last	40
Coq.Vectors.VectorSpec.shiftrepeat_nth	40
Coq.Vectors.VectorSpec.shiftrepeat_last	40	0.0.6	search with cache (only 1: refine (@rectS _ _ _ _); only 1: now simpl; only 1: now simpl).	0.16768693924	45
Coq.Vectors.VectorSpec.const_nth	40	2.3.21	search with cache (only 1: induction p; only 1: now simpl; only 1: now simpl).	0.682100057602	1050
Coq.Vectors.VectorSpec.nth_map	40
Coq.Vectors.VectorSpec.nth_map2	40
Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40
Coq.Vectors.VectorSpec.to_list_of_list_opp	40
Coq.Vectors.VectorSpec.take_O	40	0.0.3.1	search with cache (only 1: intros; only 1: induction v; only 1: now simpl; only 1: now simpl).	0.0222170352936	8
Coq.Vectors.VectorSpec.take_idem	40
Coq.Vectors.VectorSpec.take_app	40
Coq.Vectors.VectorSpec.take_prf_irr	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: induction p; only 1: intros n v le le'; only 1: auto; only 1: intros n v le le'; only 1: destruct v; only 1: inversion le; only 1: simpl; only 1: apply f_equal; only 1: apply IHp).	0.0338439941406	9
Coq.Vectors.VectorSpec.uncons_cons	40	0.1	search with cache (only 1: intros; only 1: now simpl).	0.0146450996399	3
Coq.Vectors.VectorSpec.append_comm_cons	40	1.0.4.0.0	search with cache (only 1: intros m w le; only 1: simpl; only 1: intros; only 1: apply f_equal; only 1: reflexivity).	0.0227930545807	10
Coq.Vectors.VectorSpec.splitat_append	40
Coq.Vectors.VectorSpec.append_splitat	40
Coq.Vectors.Fin.of_nat_ext	40
Coq.Vectors.Fin.of_nat_to_nat_inv	40
Coq.Vectors.Fin.to_nat_of_nat	40
Coq.Vectors.Fin.to_nat_inj	40
Coq.Vectors.Fin.L_sanity	40
Coq.Vectors.Fin.L_R	40	2.2.2.5.9.0.11.5.8	search with cache (only 1: destruct m as [| m]; only 1: now destruct (to_nat p); only 1: destruct n; only 1: auto; only 1: right; only 1: pattern n; only 1: destruct n; only 1: auto with arith; only 1: left).	20.0999510288	61440
Coq.Vectors.Fin.R_sanity	40
Coq.Vectors.Fin.depair_sanity	40
Coq.Vectors.Fin.eqb_nat_eq	40
Coq.Vectors.Fin.eqb_eq	40
Coq.Vectors.Fin.eq_dec	40
Coq.Vectors.Fin.cast	40	2.7.0	search with cache (only 1: intros m n p; only 1: intros <-; only 1: congruence).	0.142874002457	232
Coq.Setoids.Setoid.Seq_refl	40	2	search with cache (only 1: firstorder).	0.00791001319885	3
Coq.Setoids.Setoid.Seq_sym	40	2.0.0	search with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: now transitivity y).	0.00973105430603	5
Coq.Setoids.Setoid.Seq_trans	40	3.0.0.0.0.0.0	search with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: now transitivity y).	0.0205528736115	16
Coq.Setoids.Setoid.gen_st	40	6	search with cache (only 1: simpl_relation).	0.00820803642273	7
Coq.Bool.IfProp.Iftrue_inv	40	1.0.1	search with cache (only 1: destruct 1; only 1: tauto; only 1: discriminate).	0.0226440429688	26
Coq.Bool.IfProp.Iffalse_inv	40	0.0.1.0.0	search with cache (only 1: destruct 1; only 1: intros; only 1: case diff_true_false; only 1: intuition; only 1: tauto).	0.0135669708252	6
Coq.Bool.IfProp.IfProp_true	40	3.9	search with cache (only 1: inversion 1; only 1: auto with bool).	0.113924980164	228
Coq.Bool.IfProp.IfProp_false	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: assumption).	0.0407719612122	11
Coq.Bool.IfProp.IfProp_or	40	0.4.0.3.0.1	search with cache (only 1: intros; only 1: inversion H; only 1: left; only 1: assumption; only 1: right; only 1: assumption).	0.980239152908	1162
Coq.Bool.IfProp.IfProp_sum	40
Coq.Bool.Zerob.zerob_true_intro	40	49.9	search with cache (only 1: intros; only 1: now subst).	0.947042942047	3768
Coq.Bool.Zerob.zerob_true_elim	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial with bool; only 1: inversion 1).	0.0201299190521	3
Coq.Bool.Zerob.zerob_false_intro	40	2.12.0	search with cache (only 1: destruct n; only 1: now subst; only 1: trivial with bool).	0.104026079178	196
Coq.Bool.Zerob.zerob_false_elim	40	1.1.3.0	search with cache (only 1: destruct n; only 1: inversion 1; only 1: inversion 1; only 1: inversion 1).	0.0365719795227	23
Coq.Bool.DecBool.ifdec_left	40	15.2.3.2.0.14.0	search with cache (only 1: unfold not; only 1: intros h1 h2; only 1: intro H; only 1: intros n m; only 1: induction n; only 1: trivial; only 1: contradiction).	5.46662211418	39764
Coq.Bool.DecBool.ifdec_right	40	0.5.0.0	search with cache (only 1: intros; only 1: case H; only 1: contradiction; only 1: auto).	0.0412299633026	53
Coq.Bool.Sumbool.sumbool_of_bool	40	0.0.8.0	search with cache (only 1: intro H; only 1: destruct H; only 1: auto; only 1: auto).	0.0334351062775	64
Coq.Bool.Sumbool.bool_eq_rec	40	0.2.4	search with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.0179069042206	35
Coq.Bool.Sumbool.bool_eq_ind	40	0.0.0	search with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.00944685935974	3
Coq.Bool.Sumbool.sumbool_and	40
Coq.Bool.Sumbool.sumbool_or	40	0.0.0.0.0.0.0	search with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.0119781494141	7
Coq.Bool.Sumbool.sumbool_not	40	1.1.1.0.0.0.0	search with cache (only 1: case H1; only 1: case H2; only 1: case H2; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.0446100234985	48
Coq.Bool.Sumbool.bool_of_sumbool	40
Coq.Bool.Bool.bool_dec	40
Coq.Bool.Bool.diff_true_false	40	6	search with cache (only 1: discriminate).	0.00823593139648	21
Coq.Bool.Bool.diff_false_true	40	0	search with cache (only 1: discriminate).	0.00383710861206	1
Coq.Bool.Bool.eq_true_false_abs	40	7.7.9.0	search with cache (only 1: intro H; only 1: destruct H; only 1: discriminate; only 1: discriminate).	0.49452495575	2738
Coq.Bool.Bool.not_true_is_false	40	5.21.0	search with cache (only 1: destr_bool; only 1: reflexivity || destruct H; only 1: trivial).	0.597198963165	3131
Coq.Bool.Bool.not_false_is_true	40	2.0	search with cache (only 1: destr_bool; only 1: intuition).	0.00820994377136	4
Coq.Bool.Bool.not_true_iff_false	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0107581615448	3
Coq.Bool.Bool.not_false_iff_true	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0114858150482	3
Coq.Bool.Bool.leb_implb	40	2.1.2.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0143899917603	10
Coq.Bool.Bool.eqb_subst	40	2.0.0	search with cache (only 1: intro H; only 1: intro z; only 1: destr_bool).	0.0107071399689	5
Coq.Bool.Bool.eqb_reflx	40	0	search with cache (only 1: destr_bool).	0.00584888458252	1
Coq.Bool.Bool.eqb_prop	40	0	search with cache (only 1: destr_bool).	0.00703096389771	1
Coq.Bool.Bool.eqb_true_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0149040222168	5
Coq.Bool.Bool.eqb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0194818973541	5
Coq.Bool.Bool.negb_orb	40	0	search with cache (only 1: destr_bool).	0.00842714309692	1
Coq.Bool.Bool.negb_andb	40	0	search with cache (only 1: destr_bool).	0.00764393806458	1
Coq.Bool.Bool.negb_involutive	40	0	search with cache (only 1: destr_bool).	0.00625610351562	1
Coq.Bool.Bool.negb_involutive_reverse	40	0	search with cache (only 1: destr_bool).	0.00574803352356	1
Coq.Bool.Bool.negb_sym	40	0	search with cache (only 1: destr_bool).	0.00724601745605	1
Coq.Bool.Bool.no_fixpoint_negb	40	0	search with cache (only 1: destr_bool).	0.0072078704834	1
Coq.Bool.Bool.eqb_negb1	40	0	search with cache (only 1: destr_bool).	0.00619196891785	1
Coq.Bool.Bool.eqb_negb2	40	0	search with cache (only 1: destr_bool).	0.00592398643494	1
Coq.Bool.Bool.if_negb	40	0	search with cache (only 1: destr_bool).	0.00615811347961	1
Coq.Bool.Bool.negb_true_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0107500553131	3
Coq.Bool.Bool.negb_false_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0117909908295	3
Coq.Bool.Bool.orb_true_iff	40	2.1.9.2.1	search with cache (only 1: destruct b1; only 1: simpl; only 1: intuition; only 1: intuition; only 1: destr_bool).	1.81628108025	6026
Coq.Bool.Bool.orb_false_iff	40	0.1.2.4	search with cache (only 1: intuition; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool).	0.38102221489	357
Coq.Bool.Bool.orb_true_elim	40	0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.0164999961853	4
Coq.Bool.Bool.orb_prop	40	0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.015604019165	4
Coq.Bool.Bool.orb_true_intro	40	0.1.0	search with cache (only 1: intros; only 1: destr_bool; only 1: intuition).	0.0127499103546	4
Coq.Bool.Bool.orb_false_intro	40	0	search with cache (only 1: destr_bool).	0.00908803939819	1
Coq.Bool.Bool.orb_false_elim	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0122220516205	2
Coq.Bool.Bool.orb_diag	40	0	search with cache (only 1: destr_bool).	0.00789499282837	1
Coq.Bool.Bool.orb_true_r	40	1	search with cache (only 1: destr_bool).	0.00712490081787	2
Coq.Bool.Bool.orb_true_l	40	0	search with cache (only 1: destr_bool).	0.00700116157532	1
Coq.Bool.Bool.orb_false_r	40	2	search with cache (only 1: destr_bool).	0.00702881813049	3
Coq.Bool.Bool.orb_false_l	40	0	search with cache (only 1: destr_bool).	0.00717687606812	1
Coq.Bool.Bool.orb_negb_r	40	1	search with cache (only 1: destr_bool).	0.0074520111084	2
Coq.Bool.Bool.orb_comm	40	0	search with cache (only 1: destr_bool).	0.0083429813385	1
Coq.Bool.Bool.orb_assoc	40	0	search with cache (only 1: destr_bool).	0.0120570659637	1
Coq.Bool.Bool.andb_true_iff	40	1.0.2.3.1	search with cache (only 1: destruct b1; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destr_bool).	0.601227998734	744
Coq.Bool.Bool.andb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0244100093842	5
Coq.Bool.Bool.andb_true_eq	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct a, b; only 1: repeat split; only 1: repeat split; only 1: assumption; only 1: repeat split; only 1: assumption; only 1: repeat split; only 1: assumption; only 1: assumption).	0.0198338031769	9
Coq.Bool.Bool.andb_false_intro1	40	4	search with cache (only 1: destr_bool).	0.0194089412689	19
Coq.Bool.Bool.andb_false_intro2	40	0.0.0.0	search with cache (only 1: intros; only 1: apply andb_false_iff; only 1: subst; only 1: intuition).	0.0150640010834	4
Coq.Bool.Bool.andb_false_r	40	4	search with cache (only 1: destr_bool).	0.00985288619995	5
Coq.Bool.Bool.andb_false_l	40	0	search with cache (only 1: destr_bool).	0.00865793228149	1
Coq.Bool.Bool.andb_diag	40	1.0	search with cache (only 1: intros; only 1: destr_bool).	0.00942301750183	3
Coq.Bool.Bool.andb_true_r	40	2	search with cache (only 1: destr_bool).	0.00876498222351	3
Coq.Bool.Bool.andb_true_l	40	0	search with cache (only 1: destr_bool).	0.00881910324097	1
Coq.Bool.Bool.andb_false_elim	40	0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.0170450210571	4
Coq.Bool.Bool.andb_negb_r	40	0	search with cache (only 1: destr_bool).	0.00958299636841	1
Coq.Bool.Bool.andb_comm	40	0	search with cache (only 1: destr_bool).	0.0102989673615	1
Coq.Bool.Bool.andb_assoc	40	0	search with cache (only 1: destr_bool).	0.0136580467224	1
Coq.Bool.Bool.andb_orb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.0149698257446	1
Coq.Bool.Bool.andb_orb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.0568158626556	1
Coq.Bool.Bool.orb_andb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.0163061618805	1
Coq.Bool.Bool.orb_andb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.0164370536804	1
Coq.Bool.Bool.absorption_andb	40	0	search with cache (only 1: destr_bool).	0.0122339725494	1
Coq.Bool.Bool.absorption_orb	40	0	search with cache (only 1: destr_bool).	0.011647939682	1
Coq.Bool.Bool.xorb_false_r	40	0	search with cache (only 1: destr_bool).	0.00980687141418	1
Coq.Bool.Bool.xorb_false_l	40	0	search with cache (only 1: destr_bool).	0.00896787643433	1
Coq.Bool.Bool.xorb_true_r	40	0	search with cache (only 1: destr_bool).	0.00891900062561	1
Coq.Bool.Bool.xorb_true_l	40	0	search with cache (only 1: reflexivity).	0.00702214241028	1
Coq.Bool.Bool.xorb_nilpotent	40	0	search with cache (only 1: destr_bool).	0.00895500183105	1
Coq.Bool.Bool.xorb_comm	40	0	search with cache (only 1: destr_bool).	0.0105400085449	1
Coq.Bool.Bool.xorb_assoc_reverse	40	0	search with cache (only 1: destr_bool).	0.0151700973511	1
Coq.Bool.Bool.xorb_eq	40	0	search with cache (only 1: destr_bool).	0.0131299495697	1
Coq.Bool.Bool.xorb_move_l_r_1	40	0	search with cache (only 1: destr_bool).	0.0165560245514	1
Coq.Bool.Bool.xorb_move_l_r_2	40	0	search with cache (only 1: destr_bool).	0.017186164856	1
Coq.Bool.Bool.xorb_move_r_l_1	40	0	search with cache (only 1: destr_bool).	0.0173258781433	1
Coq.Bool.Bool.xorb_move_r_l_2	40	0	search with cache (only 1: destr_bool).	0.0172080993652	1
Coq.Bool.Bool.negb_xorb_l	40	0	search with cache (only 1: destr_bool).	0.01251912117	1
Coq.Bool.Bool.negb_xorb_r	40	0.0.0.0.0	search with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.0164067745209	5
Coq.Bool.Bool.xorb_negb_negb	40	0	search with cache (only 1: destr_bool).	0.0119588375092	1
Coq.Bool.Bool.eq_iff_eq_true	40	0.0.0.0.3	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.109644174576	52
Coq.Bool.Bool.eq_true_iff_eq	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0207691192627	3
Coq.Bool.Bool.eq_true_negb_classical	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0130059719086	2
Coq.Bool.Bool.eq_true_not_negb	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0131831169128	2
Coq.Bool.Bool.absurd_eq_bool	40	6.6.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.370100975037	686
Coq.Bool.Bool.absurd_eq_true	40	5.1	search with cache (only 1: destr_bool; only 1: contradiction).	0.0119459629059	8
Coq.Bool.Bool.trans_eq_bool	40	11	search with cache (only 1: destr_bool).	0.0626850128174	57
Coq.Bool.Bool.Is_true_eq_true	40	2.1	search with cache (only 1: destr_bool; only 1: contradiction).	0.0120079517365	5
Coq.Bool.Bool.Is_true_eq_left	40	0	search with cache (only 1: destr_bool).	0.00975298881531	1
Coq.Bool.Bool.Is_true_eq_right	40	0.0.0	search with cache (only 1: intros; only 1: subst; only 1: auto with bool).	0.0105221271515	3
Coq.Bool.Bool.eqb_refl	40	0	search with cache (only 1: destr_bool).	0.00887894630432	1
Coq.Bool.Bool.eqb_eq	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0332908630371	3
Coq.Bool.Bool.orb_prop_elim	40	4.0.0.4.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: tauto; only 1: tauto; only 1: intuition).	0.206992149353	264
Coq.Bool.Bool.orb_prop_intro	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.014641046524	2
Coq.Bool.Bool.andb_prop_intro	40	0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: tauto).	0.0168359279633	4
Coq.Bool.Bool.andb_prop_elim	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.0194141864777	5
Coq.Bool.Bool.eq_bool_prop_intro	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0192260742188	3
Coq.Bool.Bool.eq_bool_prop_elim	40	1.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: tauto).	0.0180389881134	4
Coq.Bool.Bool.negb_prop_elim	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0140950679779	3
Coq.Bool.Bool.negb_prop_intro	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.0121800899506	2
Coq.Bool.Bool.negb_prop_classical	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.0118770599365	2
Coq.Bool.Bool.negb_prop_involutive	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0126519203186	3
Coq.Bool.Bool.andb_if	40	0	search with cache (only 1: destr_bool).	0.0121171474457	1
Coq.Bool.Bool.negb_if	40	0	search with cache (only 1: destr_bool).	0.01007604599	1
Coq.Bool.Bool.andb_lazy_alt	40	1.0.0.0.0	search with cache (only 1: destruct a, b; only 1: repeat split; only 1: repeat split; only 1: repeat split; only 1: reflexivity).	0.0152900218964	6
Coq.Bool.Bool.orb_lazy_alt	40	1.0	search with cache (only 1: intros; only 1: destr_bool).	0.0136730670929	3
Coq.Bool.Bool.reflect_iff	40	0.1.0.19.18	search with cache (only 1: intros n m; only 1: inversion 1; only 1: intuition; only 1: intuition; only 1: destr_bool).	11.8412868977	46598
Coq.Bool.Bool.iff_reflect	40	0.0.0.0	search with cache (only 1: destruct 1; only 1: destr_bool; only 1: intuition; only 1: intuition).	0.019867181778	4
Coq.Bool.Bool.reflect_dec	40	18.3.1	search with cache (only 1: destruct 1; only 1: intuition; only 1: auto).	1.65531802177	2086
Coq.Bool.Bool.eqb_spec	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0186901092529	5
Coq.Bool.BoolEq.beq_eq_true	40	0.21.4	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.43679189682	997
Coq.Bool.BoolEq.beq_eq_not_false	40
Coq.Bool.BoolEq.beq_false_not_eq	40
Coq.Bool.BoolEq.exists_beq_eq	40
Coq.Bool.BoolEq.not_eq_false_beq	40	13.25.0	search with cache (only 1: intros x y e; only 1: apply eq_iff_eq_true; only 1: intuition).	3.83667397499	13409
Coq.Bool.BoolEq.eq_dec	40
Coq.Lists.ListSet.set_In_dec	40	11.1.5.4.79	search with cache (only 1: intros Pdec l; only 1: induction l as [| a l' Hrec]; only 1: right; only 1: auto; only 1: firstorder).	33.8742799759	187776
Coq.Lists.ListSet.set_mem_ind	40	2.0.9.3.0.0.1.0	search with cache (only 1: intros i j Hi E; only 1: simple induction x; only 1: auto; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: case (Aeq_dec a a0); only 1: auto with datatypes; only 1: auto with datatypes).	8.62731385231	10953
Coq.Lists.ListSet.set_mem_ind2	40	11.0.0.0.0.1.0.1	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: auto with datatypes; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intuition).	37.2841441631	27494
Coq.Lists.ListSet.set_mem_correct1	40	0.0.0.0.2.12.4.0	search with cache (only 1: simple induction x; only 1: intros; only 1: now inversion H; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: auto with datatypes).	4.55596399307	10694
Coq.Lists.ListSet.set_mem_correct2	40
Coq.Lists.ListSet.set_mem_complete1	40
Coq.Lists.ListSet.set_mem_complete2	40
Coq.Lists.ListSet.set_add_intro1	40
Coq.Lists.ListSet.set_add_intro2	40
Coq.Lists.ListSet.set_add_intro	40	3.4.3	search with cache (only 1: intros H H0 H1 [| ]; only 1: auto with datatypes; only 1: auto with datatypes).	0.550539970398	538
Coq.Lists.ListSet.set_add_elim	40
Coq.Lists.ListSet.set_add_elim2	40	0.0.0.0.0.0.0.0.0.0.0.1.0.0.1	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: intros [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes; only 1: simpl; only 1: do 3 intro; only 1: elim (Aeq_dec b a0); only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros H0 [| ]; only 1: tauto; only 1: tauto).	2.09388613701	1629
Coq.Lists.ListSet.set_add_not_empty	40
Coq.Lists.ListSet.set_add_iff	40
Coq.Lists.ListSet.set_add_nodup	40
Coq.Lists.ListSet.set_remove_1	40
Coq.Lists.ListSet.set_remove_2	40
Coq.Lists.ListSet.set_remove_3	40
Coq.Lists.ListSet.set_remove_iff	40
Coq.Lists.ListSet.set_remove_nodup	40
Coq.Lists.ListSet.set_union_intro1	40
Coq.Lists.ListSet.set_union_intro2	40	10.0.15.0.0	search with cache (only 1: simple induction y; only 1: simpl; only 1: eauto; only 1: simpl; only 1: intuition).	36.6988730431	42674
Coq.Lists.ListSet.set_union_intro	40	1.2.6	search with cache (only 1: intros a b x [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes).	0.550726890564	244
Coq.Lists.ListSet.set_union_elim	40
Coq.Lists.ListSet.set_union_iff	40
Coq.Lists.ListSet.set_union_nodup	40
Coq.Lists.ListSet.set_union_emptyL	40	0.0.0.1.0.0.2.0.5	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: auto; only 1: simpl; only 1: intros; only 1: generalize (set_add_elim _ _ _ H0); only 1: intros [H1| H1]; only 1: auto with datatypes; only 1: tauto).	1.39328217506	968
Coq.Lists.ListSet.set_union_emptyR	40	0.0.0.0	search with cache (only 1: intros a x H; only 1: case (set_union_elim _ _ _ H); only 1: auto || contradiction; only 1: auto || contradiction).	0.0213561058044	4
Coq.Lists.ListSet.set_inter_intro	40
Coq.Lists.ListSet.set_inter_elim1	40
Coq.Lists.ListSet.set_inter_elim2	40
Coq.Lists.ListSet.set_inter_elim	40	8.0.1.0	search with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: eauto with datatypes).	0.619786024094	353
Coq.Lists.ListSet.set_inter_iff	40
Coq.Lists.ListSet.set_inter_nodup	40
Coq.Lists.ListSet.set_diff_intro	40
Coq.Lists.ListSet.set_diff_elim1	40
Coq.Lists.ListSet.set_diff_elim2	40
Coq.Lists.ListSet.set_diff_iff	40
Coq.Lists.ListSet.set_diff_nodup	40
Coq.Lists.ListSet.set_diff_trivial	40
Coq.Lists.ListDec.In_decidable	40	1.0.6	search with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.224742889404	10
Coq.Lists.ListDec.incl_decidable	40
Coq.Lists.ListDec.NoDup_decidable	40
Coq.Lists.ListDec.incl_dec	40
Coq.Lists.ListDec.NoDup_dec	40
Coq.Lists.ListDec.uniquify_map	40
Coq.Lists.ListDec.uniquify	40
Coq.Lists.Streams.unfold_Stream	40	4.24	search with cache (only 1: intros (x, (Hx, Huni)); only 1: split).	0.569365978241	2460
Coq.Lists.Streams.tl_nth_tl	40	0.4.1.7	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: trivial).	2.94324088097	4454
Coq.Lists.Streams.Str_nth_tl_plus	40
Coq.Lists.Streams.Str_nth_plus	40
Coq.Lists.Streams.EqSt_reflex	40
Coq.Lists.Streams.sym_EqSt	40	0.1.3.5.1.8.10	search with cache (only 1: intro x; only 1: case x; only 1: coinduction ltac:(EqSt_reflex); only 1: destruct H; only 1: simpl; only 1: auto with datatypes; only 1: trivial).	21.5623381138	3315
Coq.Lists.Streams.trans_EqSt	40
Coq.Lists.Streams.eqst_ntheq	40
Coq.Lists.Streams.ntheq_eqst	40
Coq.Lists.Streams.ForAll_Str_nth_tl	40
Coq.Lists.Streams.ForAll_coind	40	8.15.25	search with cache (only 1: coinduction ltac:(Equiv2); only 1: auto; only 1: auto).	17.5795390606	68971
Coq.Lists.Streams.Str_nth_tl_map	40	0.0.0.0.0	search with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0139470100403	5
Coq.Lists.Streams.Str_nth_map	40	0.3.0.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: intros s; only 1: apply IHn).	0.0130770206451	7
Coq.Lists.Streams.ForAll_map	40
Coq.Lists.Streams.Exists_map	40
Coq.Lists.Streams.Str_nth_tl_zipWith	40	1.4.0.1.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: apply IHn).	0.102874994278	110
Coq.Lists.Streams.Str_nth_zipWith	40	0.0.0.0.0.1	search with cache (only 1: unfold Str_nth; only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: simpl in *; only 1: apply IHn).	0.0365040302277	43
Coq.Lists.List.nil_cons	40	0.21	search with cache (only 1: intros a n Ha; only 1: discriminate).	0.336133956909	455
Coq.Lists.List.destruct_list	40
Coq.Lists.List.hd_error_tl_repr	40
Coq.Lists.List.hd_error_some_nil	40	0.1.0.0.0.1	search with cache (only 1: destruct l as [| x xs]; only 1: unfold hd_error, tl; only 1: intros a r; only 1: firstorder  discriminate; only 1: unfold hd_error, tl; only 1: discriminate).	0.0405309200287	33
Coq.Lists.List.length_zero_iff_nil	40	0.1.1.3.5	search with cache (only 1: induction l as [| a tail]; only 1: split; only 1: reflexivity; only 1: reflexivity; only 1: firstorder  discriminate).	0.242455005646	216
Coq.Lists.List.hd_error_nil	40	1.0	search with cache (only 1: unfold hd_error; only 1: firstorder  discriminate).	0.013053894043	3
Coq.Lists.List.hd_error_cons	40	1.1.0.1.1.0	search with cache (only 1: destruct l as [| x xs]; only 1: unfold hd_error, tl; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: reflexivity).	0.0217151641846	10
Coq.Lists.List.in_eq	40	2.0.0	search with cache (only 1: intros; only 1: simpl; only 1: now left).	0.0145871639252	5
Coq.Lists.List.in_cons	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0119421482086	2
Coq.Lists.List.not_in_cons	40	5.2.19.14.0.0.2	search with cache (only 1: split; only 1: simpl; only 1: auto; only 1: intros (H1, H2); only 1: inversion 1; only 1: auto; only 1: auto).	13.2486259937	44342
Coq.Lists.List.in_nil	40	2	search with cache (only 1: auto).	0.0123798847198	12
Coq.Lists.List.in_split	40
Coq.Lists.List.in_inv	40	0.0	search with cache (only 1: simpl; only 1: intuition).	0.0179769992828	2
Coq.Lists.List.in_dec	40
Coq.Lists.List.app_cons_not_nil	40
Coq.Lists.List.app_nil_l	40	1.0.0	search with cache (only 1: simpl; only 1: intros; only 1: split).	0.0140941143036	4
Coq.Lists.List.app_nil_r	40	1.13.0.0.3.5	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: apply f_equal; only 1: auto).	0.836030960083	1992
Coq.Lists.List.app_nil_end	40	0.0.0.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	0.0224189758301	7
Coq.Lists.List.app_assoc	40
Coq.Lists.List.app_assoc_reverse	40	0.0.0.0.0.0.0	search with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.0270800590515	7
Coq.Lists.List.app_comm_cons	40	0.1.1	search with cache (only 1: intros; only 1: simpl; only 1: f_equal).	0.0162680149078	5
Coq.Lists.List.app_eq_nil	40	1.1.1.6.9	search with cache (only 1: destruct l as [| x xs]; only 1: destruct 1; only 1: auto; only 1: simpl; only 1: inversion 1).	1.35894703865	2812
Coq.Lists.List.app_eq_unit	40
Coq.Lists.List.app_inj_tail	40
Coq.Lists.List.app_length	40	1.0.0.0.6	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).	0.183743953705	69
Coq.Lists.List.in_app_or	40	13.0.5.1.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: intros; only 1: simpl; only 1: firstorder  discriminate).	7.64341497421	12103
Coq.Lists.List.in_or_app	40	11.0.4.0.3	search with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	9.49783396721	17029
Coq.Lists.List.in_app_iff	40
Coq.Lists.List.app_inv_head	40	2.20.1.2	search with cache (only 1: induction l as [| a tail]; only 1: auto; only 1: inversion 1; only 1: auto).	2.42628002167	5656
Coq.Lists.List.app_inv_tail	40
Coq.Lists.List.nth_in_or_default	40
Coq.Lists.List.nth_S_cons	40	0.0.0.0.0	search with cache (only 1: intros [| n]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0194189548492	5
Coq.Lists.List.nth_default_eq	40
Coq.Lists.List.nth_In	40
Coq.Lists.List.In_nth	40
Coq.Lists.List.nth_overflow	40
Coq.Lists.List.nth_indep	40	0.1.0.1.1.0.1	search with cache (only 1: induction l as [| a l IH]; only 1: easy; only 1: intros [| n]; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	0.717054128647	530
Coq.Lists.List.app_nth1	40	0.0.0.0.8.0.0	search with cache (only 1: induction l; only 1: inversion 1; only 1: destruct n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	2.37454605103	2216
Coq.Lists.List.app_nth2	40	0.1.2.0.1.2.5.1.0.0	search with cache (only 1: induction l; only 1: inversion 1; only 1: simpl; only 1: auto; only 1: auto with arith; only 1: simpl; only 1: intros l' d [| n]; only 1: inversion 1; only 1: simpl; only 1: auto with arith).	6.68164587021	8971
Coq.Lists.List.nth_split	40
Coq.Lists.List.nth_error_In	40
Coq.Lists.List.In_nth_error	40
Coq.Lists.List.nth_error_None	40
Coq.Lists.List.nth_error_Some	40
Coq.Lists.List.nth_error_split	40
Coq.Lists.List.nth_error_app1	40	0.0.0.0.4.0.0.0	search with cache (only 1: revert n; only 1: induction l; only 1: inversion 1; only 1: destruct n; only 1: simpl; only 1: now auto with arith; only 1: simpl; only 1: auto with arith).	1.33393788338	634
Coq.Lists.List.nth_error_app2	40	0.0.0.1.0.5.0.0.0.0	search with cache (only 1: revert l; only 1: induction n; only 1: intros [| a l] H; only 1: auto; only 1: solve [ inversion H ]; only 1: intros [| a l] H; only 1: auto; only 1: simpl in *; only 1: apply IHn; only 1: auto with arith).	1.44074988365	1281
Coq.Lists.List.nth_error_nth	40
Coq.Lists.List.nth_error_nth'	40	1.0.0.0.1.0.3.1	search with cache (only 1: induction l; only 1: simpl; only 1: easy; only 1: destruct n; only 1: simpl; only 1: now auto with arith; only 1: simpl; only 1: auto with arith).	1.41891479492	868
Coq.Lists.List.remove_In	40
Coq.Lists.List.app_removelast_last	40
Coq.Lists.List.exists_last	40
Coq.Lists.List.removelast_app	40
Coq.Lists.List.count_occ_In	40
Coq.Lists.List.count_occ_not_In	40
Coq.Lists.List.count_occ_nil	40	4.1	search with cache (only 1: simpl; only 1: split).	0.0145809650421	7
Coq.Lists.List.count_occ_inv_nil	40
Coq.Lists.List.count_occ_cons_eq	40	5.2.2.9	search with cache (only 1: simpl; only 1: destruct eq_dec as [_| NEQ]; only 1: auto; only 1: intuition).	1.01090788841	964
Coq.Lists.List.count_occ_cons_neq	40	0.1.0	search with cache (only 1: intros H; only 1: simpl; only 1: now destruct (eq_dec x y)).	0.021537065506	4
Coq.Lists.List.rev_app_distr	40
Coq.Lists.List.rev_unit	40	0.1.0.0.0.0.10	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: intro y; only 1: simpl; only 1: rewrite (IHl y); only 1: auto).	0.294939041138	343
Coq.Lists.List.rev_involutive	40
Coq.Lists.List.in_rev	40
Coq.Lists.List.rev_length	40
Coq.Lists.List.rev_nth	40
Coq.Lists.List.rev_append_rev	40
Coq.Lists.List.rev_alt	40
Coq.Lists.List.rev_list_ind	40	1.5.0.0.8	search with cache (only 1: simpl; only 1: induction l; only 1: easy; only 1: simpl; only 1: auto).	0.46817111969	574
Coq.Lists.List.rev_ind	40
Coq.Lists.List.concat_nil	40	0.4	search with cache (only 1: simpl; only 1: reflexivity).	0.013729095459	6
Coq.Lists.List.concat_cons	40	1.0.0.1.0.1	search with cache (only 1: simpl; only 1: induction x as [| a l IHl]; only 1: auto; only 1: intro y; only 1: simpl; only 1: auto).	0.026349067688	9
Coq.Lists.List.concat_app	40
Coq.Lists.List.list_eq_dec	40
Coq.Lists.List.map_cons	40	4.5	search with cache (only 1: simpl; only 1: auto).	0.0265030860901	25
Coq.Lists.List.in_map	40	0.4.0.0.0.0.4	search with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: subst; only 1: intuition).	1.57897591591	1163
Coq.Lists.List.in_map_iff	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	0.0762760639191	3
Coq.Lists.List.map_length	40	0.1.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0227379798889	6
Coq.Lists.List.map_nth	40	0.0.2.0.0.2.0	search with cache (only 1: induction l; only 1: destruct n; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto); only 1: destruct n; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	0.411472082138	266
Coq.Lists.List.map_nth_error	40
Coq.Lists.List.map_app	40	1.0.0.0.0.2	search with cache (only 1: induction l; only 1: reflexivity; only 1: intro y; only 1: simpl; only 1: rewrite (IHl y); only 1: trivial).	0.0280361175537	9
Coq.Lists.List.map_rev	40
Coq.Lists.List.map_eq_nil	40	8.6	search with cache (only 1: symmetry; only 1: now destruct l).	2.50829100609	2730
Coq.Lists.List.count_occ_map	40
Coq.Lists.List.in_flat_map	40
Coq.Lists.List.flat_map_concat_map	40	0.0.1.0.6.2	search with cache (only 1: intros l2; only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.174296855927	201
Coq.Lists.List.concat_map	40	0.0.0.0.0.1.0.1	search with cache (only 1: intros A B f l; only 1: induction l as [| x l IH]; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite map_app; only 1: rewrite IH; only 1: reflexivity).	0.0284700393677	10
Coq.Lists.List.map_id	40	0.0.0.0.0.4	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.0942418575287	94
Coq.Lists.List.map_map	40	2.1.0.0.1.1	search with cache (only 1: induction l as [| x l IH]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IH; only 1: reflexivity).	0.1547498703	124
Coq.Lists.List.map_ext_in	40
Coq.Lists.List.ext_in_map	40	9.9.2.0	search with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: inversion 1; only 1: firstorder  (subst; auto)).	6.79525589943	8159
Coq.Lists.List.map_ext_in_iff	40
Coq.Lists.List.map_ext	40	0.0.1.0.0.1.1	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto).	0.0264108181	10
Coq.Lists.List.fold_left_app	40	0.0.0.0.1.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).	0.0254118442535	8
Coq.Lists.List.fold_left_length	40
Coq.Lists.List.fold_right_app	40	0.1.0.0.3.1	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).	0.173238992691	123
Coq.Lists.List.fold_left_rev_right	40
Coq.Lists.List.fold_symmetric	40
Coq.Lists.List.existsb_exists	40
Coq.Lists.List.existsb_nth	40
Coq.Lists.List.existsb_app	40	7.4.1.1.0.20.3	search with cache (only 1: intros; only 1: induction l1 as [| x l1 IH]; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: rewrite IH; only 1: intuition).	5.14272689819	8879
Coq.Lists.List.forallb_forall	40
Coq.Lists.List.forallb_app	40	0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction l1; only 1: intros l2; only 1: simpl; only 1: solve [ auto ]; only 1: intros l2; only 1: simpl; only 1: case (f a); only 1: simpl; only 1: solve [ auto ]; only 1: simpl; only 1: solve [ auto ]).	0.528955936432	283
Coq.Lists.List.filter_In	40
Coq.Lists.List.filter_app	40	1.1.0.1.11.1.2.25	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: case (f a); only 1: simpl; only 1: f_equal; only 1: auto using app_assoc; only 1: auto using app_assoc).	7.38060379028	13199
Coq.Lists.List.concat_filter_map	40
Coq.Lists.List.find_some	40	1.3.0.0.3.1	search with cache (only 1: induction l; only 1: easy; only 1: simpl; only 1: case_eq (f a); only 1: intuition congruence; only 1: intuition congruence).	2.52924704552	1303
Coq.Lists.List.find_none	40
Coq.Lists.List.partition_cons1	40
Coq.Lists.List.partition_cons2	40	0.0	search with cache (only 1: simpl; only 1: now intros -> ->).	0.0153660774231	2
Coq.Lists.List.partition_length	40
Coq.Lists.List.partition_inv_nil	40	0.0.0.1.5.0.0.0.0.1.5.0.12	search with cache (only 1: split; only 1: induction l as [| a l' Hrec]; only 1: auto; only 1: simpl; only 1: destruct (f a), (partition l') as (left, right); only 1: intros [=<- <-]; only 1: intros [=<- <-]; only 1: induction l as [| a l' Hrec]; only 1: auto; only 1: simpl; only 1: destruct (f a), (partition l') as (left, right); only 1: intros [=<- <-]; only 1: intros [=<- <-]).	5.49378299713	10541
Coq.Lists.List.elements_in_partition	40
Coq.Lists.List.filter_map	40
Coq.Lists.List.filter_ext_in	40	0.0.1.1.0.1.0.1.0	search with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto; only 1: auto).	0.417137145996	326
Coq.Lists.List.ext_in_filter	40	1.0.0.0.12	search with cache (only 1: destruct l; only 1: rewrite filter_map; only 1: intros [=] ? []; only 1: rewrite filter_map; only 1: apply ext_in_map).	3.82076191902	4077
Coq.Lists.List.filter_ext_in_iff	40	0.1.1.1.5	search with cache (only 1: split; only 1: rewrite filter_map; only 1: apply ext_in_map; only 1: rewrite filter_map; only 1: apply map_ext_in).	0.338109970093	263
Coq.Lists.List.filter_ext	40	0.2.0	search with cache (only 1: intros f g l H; only 1: apply filter_ext_in; only 1: auto).	0.0132789611816	5
Coq.Lists.List.in_split_l	40
Coq.Lists.List.in_split_r	40	1.0.0.0.1.0.0.0.0.0.0.0.1.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct p; only 1: destruct a; only 1: destruct (split l); only 1: simpl in *; only 1: destruct H; only 1: injection H; only 1: injection H; only 1: auto; only 1: right; only 1: apply (IHl (a0, b) H)).	33.4441139698	23994
Coq.Lists.List.split_nth	40
Coq.Lists.List.split_length_l	40	0.0.0.3.0.0.1.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl in *; only 1: auto).	0.289816141129	171
Coq.Lists.List.split_length_r	40	0.0.0.0.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).	0.0307259559631	8
Coq.Lists.List.split_combine	40	0.9.3.0.3.0.1.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: rewrite IHl; only 1: auto).	9.38284707069	15443
Coq.Lists.List.combine_split	40
Coq.Lists.List.in_combine_l	40	0.0.6.2.1.3.1.0.0	search with cache (only 1: induction l, l'; only 1: simpl; only 1: auto; only 1: trivial; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto); only 1: simpl in *; only 1: injection H; only 1: auto).	24.0673999786	22407
Coq.Lists.List.in_combine_r	40
Coq.Lists.List.combine_length	40	6.0.2.0.0.0.0.0	search with cache (only 1: induction l, l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: trivial; only 1: simpl; only 1: auto).	3.6585021019	4718
Coq.Lists.List.combine_nth	40	3.0.0.0.1.1.0.1.0.0.0.0.0.2.0	search with cache (only 1: induction l, l'; only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: discriminate; only 1: simpl; only 1: discriminate; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto).	9.4811270237	12265
Coq.Lists.List.in_prod_aux	40	0.1.1.6	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: firstorder  (subst; auto)).	0.051234960556	70
Coq.Lists.List.in_prod	40
Coq.Lists.List.in_prod_iff	40
Coq.Lists.List.prod_length	40
Coq.Lists.List.lel_refl	40
Coq.Lists.List.lel_trans	40
Coq.Lists.List.lel_cons_cons	40	0.2.9	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0647909641266	91
Coq.Lists.List.lel_cons	40	0.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0129289627075	3
Coq.Lists.List.lel_tail	40	0.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0134620666504	3
Coq.Lists.List.lel_nil	40
Coq.Lists.List.incl_refl	40	2.1	search with cache (only 1: intros; only 1: intuition).	0.0127530097961	5
Coq.Lists.List.incl_tl	40	5.5.3.9	search with cache (only 1: induction l; only 1: left; only 1: easy; only 1: firstorder  (subst; auto)).	0.605375051498	976
Coq.Lists.List.incl_tran	40	0.2	search with cache (only 1: intros H; only 1: solve [ auto ]).	0.0121691226959	4
Coq.Lists.List.incl_appl	40	0	search with cache (only 1: auto with datatypes).	0.0116219520569	1
Coq.Lists.List.incl_appr	40	0	search with cache (only 1: auto with datatypes).	0.0122330188751	1
Coq.Lists.List.incl_cons	40	13.1	search with cache (only 1: intros f g l H; only 1: firstorder  (subst; auto)).	0.233196020126	199
Coq.Lists.List.incl_app	40	2.0.1.2.2.1.1	search with cache (only 1: induction l; only 1: intros l2; only 1: auto with datatypes; only 1: intros; only 1: intro y; only 1: simpl; only 1: firstorder).	1.51536393166	1112
Coq.Lists.List.firstn_nil	40	0.0.0.20	search with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: auto with arith).	0.150620937347	259
Coq.Lists.List.firstn_cons	40	0	search with cache (only 1: now simpl).	0.00964593887329	1
Coq.Lists.List.firstn_all	40	0.1.0.1.15	search with cache (only 1: induction l; only 1: now simpl; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.356610774994	412
Coq.Lists.List.firstn_all2	40
Coq.Lists.List.firstn_O	40	1	search with cache (only 1: now simpl).	0.00922608375549	2
Coq.Lists.List.firstn_le_length	40
Coq.Lists.List.firstn_length_le	40
Coq.Lists.List.firstn_app	40	0.2.0.0.2.1.0	search with cache (only 1: induction n; only 1: now reflexivity; only 1: intros [| a l] H; only 1: auto; only 1: simpl in *; only 1: f_equal; only 1: apply IHn).	0.907258033752	561
Coq.Lists.List.firstn_app_2	40
Coq.Lists.List.firstn_firstn	40
Coq.Lists.List.firstn_skipn_comm	40	0.0.0.0.1.14.3.3.1	search with cache (only 1: induction n as [| k iHk]; only 1: auto with arith; only 1: simpl; only 1: induction l; only 1: apply firstn_all2; only 1: auto with arith; only 1: destruct l as [| x xs]; only 1: auto; only 1: now simpl).	30.6723649502	52143
Coq.Lists.List.skipn_firstn_comm	40
Coq.Lists.List.skipn_O	40	0.0.0.2	search with cache (only 1: induction l as [| a l IHl]; only 1: now simpl; only 1: simpl; only 1: auto).	0.0148859024048	6
Coq.Lists.List.skipn_nil	40	0.0.2	search with cache (only 1: induction n; only 1: reflexivity; only 1: now simpl).	0.0126469135284	5
Coq.Lists.List.skipn_cons	40	0	search with cache (only 1: now simpl).	0.00871801376343	1
Coq.Lists.List.skipn_none	40	0.0.0.0.3.3	search with cache (only 1: intro; only 1: induction l as [| ? ? H]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: now rewrite H).	0.0679769515991	67
Coq.Lists.List.skipn_all2	40	1.1.0.0.0.0.0.0.1	search with cache (only 1: induction n as [| k iHk]; only 1: now induction l; only 1: destruct l as [| x xs]; only 1: simpl; only 1: now reflexivity; only 1: simpl; only 1: intro H; only 1: apply Peano.le_S_n in H; only 1: apply iHk, H).	0.629772901535	381
Coq.Lists.List.firstn_skipn	40	6.2.0.0.0.0.1.0	search with cache (only 1: induction n as [| k iHk]; only 1: reflexivity; only 1: destruct l as [| x xs]; only 1: simpl; only 1: now reflexivity; only 1: simpl; only 1: f_equal; only 1: auto with arith).	6.41853404045	6071
Coq.Lists.List.firstn_length	40	0.1.0.2.1.0.1.11	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	26.295951128	26574
Coq.Lists.List.skipn_length	40	0.0.1.0.0.0.0.0.0.0.3	search with cache (only 1: induction n; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	1.12528395653	694
Coq.Lists.List.skipn_all	40	1.0.0.0.0.0.1.0	search with cache (only 1: rewrite <- (firstn_all l)  at 1; only 1: rewrite <- (firstn_all l)  at 1; only 1: rewrite <- (firstn_all l)  at 1; only 1: rewrite <- (firstn_all l)  at 1; only 1: rewrite <- (firstn_all l)  at 1; only 1: rewrite <- (firstn_all l)  at 1; only 1: rewrite <- (firstn_all l)  at 1; only 1: now induction l).	0.842324972153	11
Coq.Lists.List.skipn_app	40	0.0.0.5.0.0.0.0.0	search with cache (only 1: induction n as [| k iHk]; only 1: intros l1 l2; only 1: now simpl; only 1: intros l1 l2; only 1: destruct l1 as [| x xs]; only 1: now rewrite 2!app_nil_l, <- minus_n_O; only 1: rewrite <- app_comm_cons; only 1: simpl; only 1: apply iHk).	0.774472951889	762
Coq.Lists.List.firstn_skipn_rev	40
Coq.Lists.List.firstn_rev	40
Coq.Lists.List.skipn_rev	40
Coq.Lists.List.removelast_firstn	40
Coq.Lists.List.firstn_removelast	40
Coq.Lists.List.combine_nil	40	0.0.0.3.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl in *; only 1: f_equal).	0.0196459293365	8
Coq.Lists.List.combine_firstn_l	40	0.0.0.4.0.1.0.0.7	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: destruct l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	2.75330996513	3398
Coq.Lists.List.combine_firstn_r	40	0.0.0.0.0.2.0.5.0.0.1.2.0.3.0	search with cache (only 1: induction l as [| x l IHl]; only 1: simpl; only 1: intros l; only 1: induction l as [| x l IHl]; only 1: apply length_zero_iff_nil; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: simpl; only 1: specialize IHl with (l' := l'); only 1: rewrite <- IHl; only 1: reflexivity).	9.17114496231	13282
Coq.Lists.List.combine_firstn	40
Coq.Lists.List.Add_app	40
Coq.Lists.List.Add_split	40
Coq.Lists.List.Add_in	40	11.0.0.0	search with cache (only 1: induction 1; only 1: simpl; only 1: intuition congruence; only 1: firstorder  (subst; auto)).	1.18257594109	950
Coq.Lists.List.Add_length	40	0.0.3.0.0.0	search with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl in *; only 1: rewrite ?IHAdd; only 1: tauto).	0.0219991207123	9
Coq.Lists.List.Add_inv	40
Coq.Lists.List.incl_Add_inv	40
Coq.Lists.List.NoDup_Add	40
Coq.Lists.List.NoDup_remove	40
Coq.Lists.List.NoDup_remove_1	40
Coq.Lists.List.NoDup_remove_2	40	0.1	search with cache (only 1: apply NoDup_Add; only 1: apply Add_app).	0.0144920349121	3
Coq.Lists.List.NoDup_cons_iff	40	0.0.1.0	search with cache (only 1: split; only 1: inversion_clear 1; only 1: now split; only 1: now constructor).	0.0433189868927	5
Coq.Lists.List.nodup_fixed_point	40
Coq.Lists.List.nodup_In	40
Coq.Lists.List.NoDup_nodup	40
Coq.Lists.List.nodup_inv	40
Coq.Lists.List.NoDup_count_occ	40
Coq.Lists.List.NoDup_count_occ'	40
Coq.Lists.List.NoDup_nth_error	40
Coq.Lists.List.NoDup_nth	40
Coq.Lists.List.NoDup_incl_length	40
Coq.Lists.List.NoDup_length_incl	40
Coq.Lists.List.NoDup_map_inv	40
Coq.Lists.List.seq_length	40	0.0.0.7.8.13	search with cache (only 1: intros l; only 1: induction l as [| ? ? H]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).	4.23561406136	10988
Coq.Lists.List.seq_nth	40
Coq.Lists.List.seq_shift	40
Coq.Lists.List.in_seq	40
Coq.Lists.List.seq_NoDup	40
Coq.Lists.List.seq_app	40
Coq.Lists.List.Exists_exists	40
Coq.Lists.List.Exists_nil	40	0.1.0.0	search with cache (only 1: split; only 1: firstorder; only 1: now simpl; only 1: firstorder).	0.0268259048462	5
Coq.Lists.List.Exists_cons	40	2.1.0.11.2	search with cache (only 1: split; only 1: inversion_clear 1; only 1: firstorder; only 1: auto; only 1: firstorder).	1.24631500244	1647
Coq.Lists.List.Exists_dec	40
Coq.Lists.List.Forall_forall	40	0.0.2.3.0.0.0.0.0	search with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: firstorder; only 1: induction l; only 1: firstorder; only 1: firstorder).	1.48474597931	1387
Coq.Lists.List.Forall_inv	40	0.3	search with cache (only 1: inversion 1; only 1: auto).	0.0490398406982	39
Coq.Lists.List.Forall_rect	40
Coq.Lists.List.Forall_dec	40
Coq.Lists.List.Forall_inv_tail	40	0.6.0	search with cache (only 1: intros; only 1: inversion H; only 1: trivial).	0.0181879997253	9
Coq.Lists.List.Exists_impl	40	10.6.21.9.5.7	search with cache (only 1: intro Pdec; only 1: intros Q H H'; only 1: induction 1; only 1: constructor; only 1: auto; only 1: now apply Exists_cons_tl).	26.6800541878	99598
Coq.Lists.List.Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall_neg	40
Coq.Lists.List.neg_Forall_Exists_neg	40	0.0.0.0.0.0.0.1.3.2	search with cache (only 1: intro Dec; only 1: intros NF; only 1: induction l as [| a l IH]; only 1: destruct NF; only 1: constructor; only 1: destruct (Dec a) as [Ha| Ha]; only 1: apply Exists_cons_tl, IH; only 1: contradict NF; only 1: now constructor; only 1: now apply Exists_cons_hd).	31.0363969803	1653
Coq.Lists.List.Forall_Exists_dec	40
Coq.Lists.List.Forall_impl	40	1.0.0.0.4.4.0	search with cache (only 1: intros P Q H xs H0; only 1: apply Forall_forall with (l := xs); only 1: induction H0; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	0.427987098694	485
Coq.Lists.List.Forall2_refl	40	2	search with cache (only 1: auto).	0.0090491771698	3
Coq.Lists.List.Forall2_app_inv_l	40
Coq.Lists.List.Forall2_app_inv_r	40
Coq.Lists.List.Forall2_app	40	4.4.3.1.2.0.0.4.1	search with cache (only 1: induction l1; only 1: induction l1'; only 1: auto; only 1: intros; only 1: inversion H; only 1: intros; only 1: inversion H; only 1: simpl; only 1: auto).	9.49432492256	17034
Coq.Lists.List.ForallOrdPairs_In	40
Coq.Lists.List.ForallPairs_ForallOrdPairs	40
Coq.Lists.List.ForallOrdPairs_ForallPairs	40
Coq.Lists.List.repeat_length	40	0.1.0.3.3	search with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).	0.052903175354	60
Coq.Lists.List.repeat_spec	40	3.0.5.0.0	search with cache (only 1: induction n as [| k Hrec]; only 1: simpl; only 1: contradiction; only 1: simpl; only 1: intuition).	0.156413078308	120
Coq.Lists.SetoidPermutation.Equivalence_instance_0	40
Coq.Lists.SetoidPermutation.PermutationA_cons	40	1.12	search with cache (only 1: repeat red; only 1: eauto).	0.20223402977	82
Coq.Lists.SetoidPermutation.PermutationA_app_head	40	4.0.1.11	search with cache (only 1: induction l; only 1: intuition; only 1: simpl in *; only 1: intuition).	3.16190004349	2847
Coq.Lists.SetoidPermutation.PermutationA_app	40
Coq.Lists.SetoidPermutation.PermutationA_app_tail	40	0.0.0.0.0.1.0.1.11	search with cache (only 1: induction 1; only 1: easy; only 1: now apply permA_skip; only 1: etransitivity; only 1: rewrite <- !app_comm_cons; only 1: now apply permA_swap; only 1: rewrite !app_comm_cons; only 1: now apply PermutationA_app_head; only 1: do 2 (etransitivity; try eassumption)).	9.57355713844	4677
Coq.Lists.SetoidPermutation.PermutationA_cons_append	40	3.1.6.1.7.1.2.9	search with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: etransitivity; only 1: now apply permA_swap; only 1: induction l; only 1: easy; only 1: now apply permA_skip).	8.01227617264	5597
Coq.Lists.SetoidPermutation.PermutationA_app_comm	40
Coq.Lists.SetoidPermutation.PermutationA_cons_app	40	1.1.4.8.1	search with cache (only 1: intros E; only 1: etransitivity; only 1: now rewrite E; only 1: rewrite !app_comm_cons; only 1: now rewrite PermutationA_cons_append, <- app_assoc).	2.68158006668	1358
Coq.Lists.SetoidPermutation.PermutationA_middle	40	6	search with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).	0.043967962265	19
Coq.Lists.SetoidPermutation.PermutationA_equivlistA	40
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_PermutationA	40
Coq.Lists.SetoidPermutation.Permutation_eqlistA_commute	40
Coq.Lists.SetoidPermutation.PermutationA_decompose	40
Coq.Lists.SetoidPermutation.Permutation_PermutationA	40
Coq.Lists.SetoidPermutation.eqlistA_PermutationA	40	0.0.0	search with cache (only 1: induction 1; only 1: intuition; only 1: now constructor).	0.0175840854645	3
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_decompose	40
Coq.Lists.SetoidPermutation.PermutationA_preserves_NoDupA	40
Coq.Lists.StreamMemo.memo_get_correct	40
Coq.Lists.StreamMemo.imemo_get_correct	40
Coq.Lists.StreamMemo.dmemo_get_correct	40
Coq.Lists.StreamMemo.dimemo_get_correct	40
Coq.Lists.SetoidList.InA_altdef	40	0.1.0.0.1.0.0	search with cache (only 1: split; only 1: induction 1; only 1: auto; only 1: auto; only 1: induction 1; only 1: firstorder; only 1: auto).	0.0282700061798	9
Coq.Lists.SetoidList.InA_cons	40	0.0.1.0.0.4.1	search with cache (only 1: split; only 1: inversion 1; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).	0.606200933456	221
Coq.Lists.SetoidList.InA_nil	40	0.4.0	search with cache (only 1: split; only 1: inversion 1; only 1: induction 1).	0.134589910507	15
Coq.Lists.SetoidList.InA_alt	40	0.0.0.0.3.1.0.1.0	search with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	0.703462123871	709
Coq.Lists.SetoidList.NoDupA_altdef	40
Coq.Lists.SetoidList.incl_nil	40	1	search with cache (only 1: now simpl).	0.0215799808502	2
Coq.Lists.SetoidList.eqlistA_altdef	40	1.0.3.5.1.3.1	search with cache (only 1: split; only 1: induction 1; only 1: apply Forall2_nil; only 1: auto; only 1: induction 1; only 1: left; only 1: auto).	1.32483315468	2098
Coq.Lists.SetoidList.equivlist_equiv	40
Coq.Lists.SetoidList.eqlistA_equiv	40
Coq.Lists.SetoidList.eqlistA_equivlistA	40	0.0.4.1.0.0.1.4.1.0.0.3	search with cache (only 1: constructor; only 1: induction H; only 1: auto; only 1: inversion 1; only 1: eauto with *; only 1: auto; only 1: induction H; only 1: auto; only 1: inversion 1; only 1: eauto with *; only 1: subst; only 1: auto).	32.6710190773	24419
Coq.Lists.SetoidList.InA_compat	40
Coq.Lists.SetoidList.InA_eqA	40	0.2.5	search with cache (only 1: intros x y z H; only 1: rewrite 2!InA_alt; only 1: firstorder).	0.189781904221	24
Coq.Lists.SetoidList.In_InA	40	3.0.0	search with cache (only 1: intros; only 1: rewrite InA_altdef, Exists_exists; only 1: firstorder).	0.0218069553375	6
Coq.Lists.SetoidList.InA_split	40
Coq.Lists.SetoidList.InA_app	40
Coq.Lists.SetoidList.InA_app_iff	40
Coq.Lists.SetoidList.InA_rev	40
Coq.Lists.SetoidList.InA_singleton	40	2.0.4.7	search with cache (only 1: rewrite InA_altdef, Exists_exists; only 1: firstorder; only 1: subst; only 1: auto).	4.10773015022	155
Coq.Lists.SetoidList.InA_double_head	40	0.1	search with cache (only 1: rewrite 2!InA_cons; only 1: intuition).	0.0496048927307	3
Coq.Lists.SetoidList.InA_permute_heads	40	0.0	search with cache (only 1: rewrite !InA_cons; only 1: tauto).	0.0698480606079	2
Coq.Lists.SetoidList.InA_app_idem	40
Coq.Lists.SetoidList.NoDupA_app	40
Coq.Lists.SetoidList.NoDupA_rev	40
Coq.Lists.SetoidList.NoDupA_split	40
Coq.Lists.SetoidList.NoDupA_swap	40
Coq.Lists.SetoidList.NoDupA_singleton	40	0.1.4.0	search with cache (only 1: constructor; only 1: intuition; only 1: invlist InA; only 1: auto).	0.0468258857727	9
Coq.Lists.SetoidList.equivlistA_cons_proper	40
Coq.Lists.SetoidList.equivlistA_app_proper	40
Coq.Lists.SetoidList.equivlistA_cons_nil	40
Coq.Lists.SetoidList.equivlistA_nil_eq	40
Coq.Lists.SetoidList.equivlistA_double_head	40	0.0.0.0.1	search with cache (only 1: constructor; only 1: rewrite !InA_cons; only 1: tauto; only 1: rewrite !InA_cons; only 1: tauto).	0.0803098678589	6
Coq.Lists.SetoidList.equivlistA_permute_heads	40	0.0.1	search with cache (only 1: intro; only 1: rewrite !InA_cons; only 1: tauto).	0.0733730792999	4
Coq.Lists.SetoidList.equivlistA_app_idem	40	0.0.5.0.0.4	search with cache (only 1: destruct l; only 1: simpl; only 1: intuition; only 1: intros E; only 1: rewrite InA_app_iff; only 1: tauto).	0.661077976227	324
Coq.Lists.SetoidList.equivlistA_NoDupA_split	40
Coq.Lists.SetoidList.fold_right_eqlistA	40
Coq.Lists.SetoidList.ForallOrdPairs_inclA	40
Coq.Lists.SetoidList.fold_right_commutes_restr	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr	40
Coq.Lists.SetoidList.fold_right_add_restr	40
Coq.Lists.SetoidList.fold_right_commutes	40	3.0.0.1.0.0.2.4.0.4	search with cache (only 1: induction s1; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: auto with relations; only 1: auto with relations).	2.5790169239	2618
Coq.Lists.SetoidList.fold_right_equivlistA	40
Coq.Lists.SetoidList.fold_right_add	40
Coq.Lists.SetoidList.fold_right_eqlistA2	40
Coq.Lists.SetoidList.fold_right_commutes_restr2	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr2	40
Coq.Lists.SetoidList.fold_right_add_restr2	40
Coq.Lists.SetoidList.fold_right_commutes2	40
Coq.Lists.SetoidList.fold_right_equivlistA2	40
Coq.Lists.SetoidList.fold_right_add2	40
Coq.Lists.SetoidList.InA_dec	40
Coq.Lists.SetoidList.removeA_filter	40
Coq.Lists.SetoidList.removeA_InA	40
Coq.Lists.SetoidList.removeA_NoDupA	40
Coq.Lists.SetoidList.removeA_equivlistA	40
Coq.Lists.SetoidList.InfA_ltA	40
Coq.Lists.SetoidList.InfA_compat	40
Coq.Lists.SetoidList.InfA_eqA	40	1.12.3	search with cache (only 1: intro; only 1: rewrite <- H; only 1: intuition).	4.66517782211	2172
Coq.Lists.SetoidList.SortA_InfA_InA	40
Coq.Lists.SetoidList.In_InfA	40	8.0.1.0.0	search with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intros; only 1: intuition).	3.83389091492	705
Coq.Lists.SetoidList.InA_InfA	40	0.0.1.0.1.0	search with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intros; only 1: constructor; only 1: auto).	0.0336539745331	8
Coq.Lists.SetoidList.InfA_alt	40
Coq.Lists.SetoidList.InfA_app	40	0.1.0.0.1.0.20	search with cache (only 1: induction l1; only 1: intros; only 1: inv; only 1: eauto; only 1: constructor; only 1: inv; only 1: auto).	1.86872792244	1411
Coq.Lists.SetoidList.SortA_app	40
Coq.Lists.SetoidList.SortA_NoDupA	40
Coq.Lists.SetoidList.eqlistA_length	40	1.10.0.26	search with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: auto).	9.29922890663	13438
Coq.Lists.SetoidList.app_eqlistA_compat	40	0.5.1.0.0.0.3.5	search with cache (only 1: induction 1; only 1: simpl; only 1: induction 1; only 1: auto; only 1: auto; only 1: simpl; only 1: intro; only 1: auto).	1.50706005096	965
Coq.Lists.SetoidList.eqlistA_app	40	0.0.0.0.0	search with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0312540531158	5
Coq.Lists.SetoidList.eqlistA_rev_app	40
Coq.Lists.SetoidList.rev_eqlistA_compat	40
Coq.Lists.SetoidList.eqlistA_rev	40	3.0.4.1.0.4	search with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: apply eqlistA_rev_app; only 1: congruence; only 1: auto).	0.731981992722	496
Coq.Lists.SetoidList.SortA_equivlistA_eqlistA	40
Coq.Lists.SetoidList.filter_sort	40
Coq.Lists.SetoidList.filter_InA	40
Coq.Lists.SetoidList.filter_split	40
Coq.Lists.SetoidList.findA_NoDupA	40
Coq.NArith.BinNat.eq_dec	40	4.13.1.22.2	search with cache (only 1: destruct n; only 1: fix sqrtrem_spec 1; only 1: auto; only 1: fix sqrtrem_spec 1; only 1: auto).	3.84069013596	12181
Coq.NArith.BinNat.discr	40	2.19.18.7.71.20	search with cache (only 1: right; only 1: destruct n; only 1: trivial; only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: easy).	6.83605790138	55594
Coq.NArith.BinNat.peano_rect_base	40	0	search with cache (only 1: auto).	0.0112679004669	1
Coq.NArith.BinNat.peano_rect_succ	40
Coq.NArith.BinNat.peano_rec_base	40	0	search with cache (only 1: reflexivity).	0.0119948387146	1
Coq.NArith.BinNat.peano_rec_succ	40	0.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).	0.0251891613007	5
Coq.NArith.BinNat.bi_induction	40	6.48.35.0.4.1	search with cache (only 1: intros; only 1: destruct n; only 1: trivial; only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: auto).	29.0525751114	208319
Coq.NArith.BinNat.recursion_wd	40
Coq.NArith.BinNat.recursion_0	40	0	search with cache (only 1: trivial).	0.0116059780121	1
Coq.NArith.BinNat.recursion_succ	40
Coq.NArith.BinNat.one_succ	40	0	search with cache (only 1: trivial).	0.011677980423	1
Coq.NArith.BinNat.two_succ	40	0	search with cache (only 1: reflexivity).	0.0117380619049	1
Coq.NArith.BinNat.pred_0	40	0	search with cache (only 1: trivial).	0.0117480754852	1
Coq.NArith.BinNat.pos_pred_spec	40	0	search with cache (only 1: reflexivity).	0.0117039680481	1
Coq.NArith.BinNat.succ_pos_spec	40	1.0.1.0.0.2	search with cache (only 1: induction n using peano_ind; only 1: reflexivity; only 1: destruct n; only 1: auto; only 1: simpl; only 1: auto).	0.0258169174194	10
Coq.NArith.BinNat.pos_pred_succ	40
Coq.NArith.BinNat.succ_pos_pred	40	0.20.25	search with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: auto).	0.952964067459	2828
Coq.NArith.BinNat.pred_succ	40	0.0.4	search with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Pos.pred_N_succ).	0.0477638244629	30
Coq.NArith.BinNat.pred_sub	40	0.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: now destruct p).	0.0394377708435	3
Coq.NArith.BinNat.succ_0_discr	40	0	search with cache (only 1: now destruct n).	0.044273853302	1
Coq.NArith.BinNat.add_0_l	40	0	search with cache (only 1: now destruct n).	0.0184469223022	1
Coq.NArith.BinNat.add_succ_l	40
Coq.NArith.BinNat.sub_0_r	40	0	search with cache (only 1: now destruct n as [| [p| p| ]]).	0.013885974884	1
Coq.NArith.BinNat.sub_succ_r	40
Coq.NArith.BinNat.mul_0_l	40	0	search with cache (only 1: now destruct n).	0.0125360488892	1
Coq.NArith.BinNat.mul_succ_l	40
Coq.NArith.BinNat.eqb_eq	40
Coq.NArith.BinNat.ltb_lt	40
Coq.NArith.BinNat.leb_le	40
Coq.NArith.BinNat.compare_eq_iff	40
Coq.NArith.BinNat.compare_lt_iff	40	0.2.0.0.0	search with cache (only 1: unfold ltb, lt; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	0.0361869335175	24
Coq.NArith.BinNat.compare_le_iff	40	1	search with cache (only 1: reflexivity).	0.189716815948	79
Coq.NArith.BinNat.compare_antisym	40
Coq.NArith.BinNat.min_l	40
Coq.NArith.BinNat.min_r	40
Coq.NArith.BinNat.max_l	40
Coq.NArith.BinNat.max_r	40	0.1.0.0.0.0	search with cache (only 1: unfold max, le; only 1: rewrite compare_antisym; only 1: case compare_spec; only 1: trivial; only 1: now destruct 2; only 1: trivial).	0.0274069309235	7
Coq.NArith.BinNat.lt_succ_r	40
Coq.NArith.BinNat.double_spec	40	38	search with cache (only 1: reflexivity).	0.971918106079	1251
Coq.NArith.BinNat.succ_double_spec	40
Coq.NArith.BinNat.double_add	40
Coq.NArith.BinNat.succ_double_add	40	0	search with cache (only 1: now destruct n, m).	0.0164699554443	1
Coq.NArith.BinNat.double_mul	40	1	search with cache (only 1: now destruct n, m).	0.0161969661713	2
Coq.NArith.BinNat.succ_double_mul	40	0.26	search with cache (only 1: rewrite add_comm; only 1: now destruct n, m).	0.963778972626	573
Coq.NArith.BinNat.div2_double	40	0.0.0.0.2	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0211200714111	7
Coq.NArith.BinNat.div2_succ_double	40	0	search with cache (only 1: now destruct n).	0.0125510692596	1
Coq.NArith.BinNat.double_inj	40
Coq.NArith.BinNat.succ_double_inj	40
Coq.NArith.BinNat.succ_double_lt	40
Coq.NArith.BinNat.double_lt_mono	40	3.0	search with cache (only 1: intro H; only 1: now destruct n, m).	0.0607581138611	31
Coq.NArith.BinNat.double_le_mono	40	0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.0232520103455	5
Coq.NArith.BinNat.succ_double_lt_mono	40	0.0.0.0.2.0	search with cache (only 1: intro H; only 1: destruct n as [| n], m as [| m]; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.0343461036682	8
Coq.NArith.BinNat.succ_double_le_mono	40	0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.0221269130707	5
Coq.NArith.BinNat.compare_0_r	40
Coq.NArith.BinNat.pow_0_r	40	0	search with cache (only 1: reflexivity).	0.0109519958496	1
Coq.NArith.BinNat.pow_succ_r	40
Coq.NArith.BinNat.pow_neg_r	40	3.0.5.0.0.33.1	search with cache (only 1: destruct n, p; only 1: easy; only 1: simpl; only 1: trivial; only 1: easy; only 1: simpl; only 1: easy).	7.93690514565	23974
Coq.NArith.BinNat.square_spec	40
Coq.NArith.BinNat.size_log2	40
Coq.NArith.BinNat.size_gt	40
Coq.NArith.BinNat.size_le	40
Coq.NArith.BinNat.log2_spec	40
Coq.NArith.BinNat.log2_nonpos	40	1.0.0.0.1	search with cache (only 1: destruct n as [| [n| n| ]]; only 1: trivial; only 1: easy; only 1: easy; only 1: easy).	0.0283131599426	7
Coq.NArith.BinNat.even_spec	40
Coq.NArith.BinNat.odd_spec	40
Coq.NArith.BinNat.pos_div_eucl_spec	40
Coq.NArith.BinNat.div_eucl_spec	40
Coq.NArith.BinNat.div_mod'	40
Coq.NArith.BinNat.div_mod	40	0.0.0	search with cache (only 1: generalize (div_eucl_spec a b); only 1: unfold div, modulo; only 1: now destruct div_eucl).	0.0184080600739	3
Coq.NArith.BinNat.pos_div_eucl_remainder	40
Coq.NArith.BinNat.mod_lt	40
Coq.NArith.BinNat.mod_bound_pos	40
Coq.NArith.BinNat.sqrtrem_sqrt	40
Coq.NArith.BinNat.sqrtrem_spec	40
Coq.NArith.BinNat.sqrt_spec	40
Coq.NArith.BinNat.sqrt_neg	40	0.0.0.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: unfold sqrtrem, sqrt, Pos.sqrt; only 1: destruct (Pos.sqrtrem p) as (s, r); only 1: now destruct r).	0.0408101081848	5
Coq.NArith.BinNat.ggcd_gcd	40
Coq.NArith.BinNat.ggcd_correct_divisors	40
Coq.NArith.BinNat.gcd_divide_l	40
Coq.NArith.BinNat.gcd_divide_r	40
Coq.NArith.BinNat.gcd_greatest	40
Coq.NArith.BinNat.gcd_nonneg	40	2	search with cache (only 1: apply le_0_l).	0.420981168747	202
Coq.NArith.BinNat.testbit_even_0	40	1.1.31	search with cache (only 1: induction a; only 1: reflexivity; only 1: easy).	0.55187702179	1156
Coq.NArith.BinNat.testbit_odd_0	40	0	search with cache (only 1: now destruct a).	0.0136978626251	1
Coq.NArith.BinNat.testbit_succ_r_div2	40
Coq.NArith.BinNat.testbit_odd_succ	40
Coq.NArith.BinNat.testbit_even_succ	40	0.0.0.1	search with cache (only 1: intros H; only 1: rewrite testbit_succ_r_div2 by trivial; only 1: f_equal; only 1: now destruct a).	0.0254302024841	5
Coq.NArith.BinNat.testbit_neg_r	40	10	search with cache (only 1: now destruct n).	0.162803173065	95
Coq.NArith.BinNat.shiftr_succ_r	40
Coq.NArith.BinNat.shiftl_succ_r	40
Coq.NArith.BinNat.shiftr_spec	40
Coq.NArith.BinNat.shiftl_spec_high	40
Coq.NArith.BinNat.shiftl_spec_low	40
Coq.NArith.BinNat.div2_spec	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0151369571686	2
Coq.NArith.BinNat.pos_lxor_spec	40
Coq.NArith.BinNat.lxor_spec	40
Coq.NArith.BinNat.pos_lor_spec	40
Coq.NArith.BinNat.lor_spec	40
Coq.NArith.BinNat.pos_land_spec	40
Coq.NArith.BinNat.land_spec	40
Coq.NArith.BinNat.pos_ldiff_spec	40
Coq.NArith.BinNat.ldiff_spec	40
Coq.NArith.BinNat.gt_lt_iff	40
Coq.NArith.BinNat.gt_lt	40	0.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0197639465332	2
Coq.NArith.BinNat.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.0108950138092	1
Coq.NArith.BinNat.ge_le_iff	40
Coq.NArith.BinNat.ge_le	40	0.0	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0201530456543	2
Coq.NArith.BinNat.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.0109949111938	1
Coq.NArith.BinNat.pos_pred_shiftl_low	40
Coq.NArith.BinNat.pos_pred_shiftl_high	40
Coq.NArith.BinNat.pred_div2_up	40
Coq.NArith.Ndec.Peqb_complete	40
Coq.NArith.Ndec.Peqb_Pcompare	40
Coq.NArith.Ndec.Pcompare_Peqb	40	0	search with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).	0.0197019577026	1
Coq.NArith.Ndec.Neqb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Neqb	40	0	search with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).	0.0196049213409	1
Coq.NArith.Ndec.Neqb_complete	40	1	search with cache (only 1: now rewrite N.eqb_eq, <- N.compare_eq_iff).	0.0206599235535	2
Coq.NArith.Ndec.Nxor_eq_true	40
Coq.NArith.Ndec.Nxor_eq_false	40
Coq.NArith.Ndec.Nodd_not_double	40
Coq.NArith.Ndec.Nnot_div2_not_double	40
Coq.NArith.Ndec.Neven_not_double_plus_one	40	2.11.3.18.0.0.0	search with cache (only 1: intros; only 1: eqb2eq; only 1: intros <-; only 1: absurd (false = true); only 1: auto with arith; only 1: case H; only 1: apply Ndouble_plus_one_bit0).	6.33466506004	15977
Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	40
Coq.NArith.Ndec.Nbit0_neq	40
Coq.NArith.Ndec.Ndiv2_eq	40	7.1	search with cache (only 1: eqb2eq; only 1: now intros <-).	0.0438630580902	40
Coq.NArith.Ndec.Ndiv2_neq	40	0.1.1.0	search with cache (only 1: intros; only 1: eqb2eq; only 1: contradict H; only 1: now subst).	0.0303769111633	6
Coq.NArith.Ndec.Ndiv2_bit_eq	40
Coq.NArith.Ndec.Ndiv2_bit_neq	40	0.2.1.1	search with cache (only 1: eqb2eq; only 1: intros H H'; only 1: contradict H; only 1: now rewrite (N.div2_odd a), (N.div2_odd a'), H, H').	0.197484016418	39
Coq.NArith.Ndec.Nneq_elim	40
Coq.NArith.Ndec.Ndouble_or_double_plus_un	40
Coq.NArith.Ndec.Nleb_alt	40
Coq.NArith.Ndec.Nleb_Nle	40
Coq.NArith.Ndec.Nleb_refl	40	0	search with cache (only 1: now rewrite Nleb_alt, N.leb_le).	0.0131781101227	1
Coq.NArith.Ndec.Nleb_antisym	40
Coq.NArith.Ndec.Nleb_trans	40	11.1	search with cache (only 1: rewrite !Nleb_Nle; only 1: now intros <-).	0.607945919037	353
Coq.NArith.Ndec.Nleb_ltb_trans	40	3.0.2	search with cache (only 1: eqb2eq; only 1: rewrite !Nleb_Nle; only 1: now intros <-).	0.168369054794	46
Coq.NArith.Ndec.Nltb_leb_trans	40	7.18.0.5	search with cache (only 1: eqb2eq; only 1: rewrite !Nleb_Nle; only 1: intros H; only 1: now intros <-).	34.3479251862	42941
Coq.NArith.Ndec.Nltb_trans	40
Coq.NArith.Ndec.Nltb_leb_weak	40
Coq.NArith.Ndec.Nleb_double_mono	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono	40
Coq.NArith.Ndec.Nleb_double_mono_conv	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40	0.1.0.1.1.0	search with cache (only 1: unfold Nleb; only 1: rewrite !N2Nat.inj_succ_double; only 1: intro; only 1: apply leb_correct; only 1: apply (mult_S_le_reg_l 1); only 1: now apply leb_complete).	0.0326309204102	20
Coq.NArith.Ndec.Nltb_double_mono	40	0.0.0.21.2.0.8.1	search with cache (only 1: intros; only 1: eqb2eq; only 1: unfold Nleb; only 1: rewrite !N2Nat.inj_double; only 1: contradict H; only 1: apply leb_correct; only 1: apply (mult_S_le_reg_l 1); only 1: now apply leb_complete).	26.4277060032	38663
Coq.NArith.Ndec.Nltb_double_plus_one_mono	40	2.3.2.3.3.1.0.2.1	search with cache (only 1: intros; only 1: elim (sumbool_of_bool (Nleb (N.double a) (N.double b))); only 1: intro H0; only 1: rewrite (Nleb_double_mono_conv _ _ H0) in H; only 1: discriminate H; only 1: unfold Nleb; only 1: rewrite !N2Nat.inj_double; only 1: rewrite !N2Nat.inj_succ_double; only 1: trivial).	19.2819199562	29754
Coq.NArith.Ndec.Nltb_double_mono_conv	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Gt_Nltb	40	0	search with cache (only 1: now rewrite N.compare_nle_iff, <- Nleb_Nle, not_true_iff_false).	0.0235569477081	1
Coq.NArith.Ndec.Ncompare_Lt_Nltb	40
Coq.NArith.Ndec.Nmin_le_1	40
Coq.NArith.Ndec.Nmin_le_2	40
Coq.NArith.Ndec.Nmin_le_3	40
Coq.NArith.Ndec.Nmin_le_4	40
Coq.NArith.Ndec.Nmin_le_5	40
Coq.NArith.Ndec.Nmin_lt_3	40
Coq.NArith.Ndec.Nmin_lt_4	40	0.1.1	search with cache (only 1: rewrite <- !not_true_iff_false, !Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).	0.324594974518	5
Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40
Coq.NArith.Ndist.Nplength_infty	40	0.1.0.0.1.0.0.0	search with cache (only 1: induction a as [| p]; only 1: reflexivity; only 1: intro H; only 1: exfalso; only 1: induction p as [| p IHp| ]; only 1: discriminate || simpl; only 1: discriminate || simpl; only 1: discriminate || simpl).	0.0356590747833	10
Coq.NArith.Ndist.Nplength_zeros	40
Coq.NArith.Ndist.Nplength_one	40
Coq.NArith.Ndist.Nplength_first_one	40
Coq.NArith.Ndist.ni_min_idemp	40
Coq.NArith.Ndist.ni_min_comm	40
Coq.NArith.Ndist.ni_min_assoc	40
Coq.NArith.Ndist.ni_min_O_l	40	0.0.0.0.2	search with cache (only 1: simple induction d; only 1: unfold ni_min; only 1: trivial; only 1: unfold ni_min; only 1: trivial).	0.0289227962494	23
Coq.NArith.Ndist.ni_min_O_r	40	0.0.1.2.0.0	search with cache (only 1: simple induction d; only 1: trivial; only 1: unfold ni_min; only 1: simple induction n; only 1: trivial; only 1: trivial).	0.0269241333008	9
Coq.NArith.Ndist.ni_min_inf_l	40	0	search with cache (only 1: trivial).	0.012748003006	1
Coq.NArith.Ndist.ni_min_inf_r	40	0.2.1	search with cache (only 1: intros; only 1: rewrite ni_min_comm; only 1: trivial).	0.0167410373688	6
Coq.NArith.Ndist.ni_le_refl	40
Coq.NArith.Ndist.ni_le_antisym	40
Coq.NArith.Ndist.ni_le_trans	40
Coq.NArith.Ndist.ni_le_min_1	40
Coq.NArith.Ndist.ni_le_min_2	40	0.3.4.0.0	search with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).	0.33906006813	293
Coq.NArith.Ndist.ni_min_case	40
Coq.NArith.Ndist.ni_le_total	40
Coq.NArith.Ndist.ni_le_min_induc	40
Coq.NArith.Ndist.le_ni_le	40
Coq.NArith.Ndist.ni_le_le	40
Coq.NArith.Ndist.Nplength_lb	40
Coq.NArith.Ndist.Nplength_ub	40
Coq.NArith.Ndist.Npdist_eq_1	40
Coq.NArith.Ndist.Npdist_eq_2	40
Coq.NArith.Ndist.Npdist_comm	40
Coq.NArith.Ndist.Nplength_ultra_1	40
Coq.NArith.Ndist.Nplength_ultra	40
Coq.NArith.Ndist.Npdist_ultra	40
Coq.NArith.Ndigits.Ptestbit_Pbit	40
Coq.NArith.Ndigits.Ntestbit_Nbit	40
Coq.NArith.Ndigits.Pbit_Ptestbit	40
Coq.NArith.Ndigits.Nbit_Ntestbit	40	0.1.17.0.2	search with cache (only 1: destruct a; only 1: trivial; only 1: simpl; only 1: intros; only 1: now rewrite <- Ptestbit_Pbit, N2Nat.id).	1.32988905907	2503
Coq.NArith.Ndigits.Nshiftr_nat_S	40	0	search with cache (only 1: trivial).	0.0145380496979	1
Coq.NArith.Ndigits.Nshiftl_nat_S	40	0	search with cache (only 1: reflexivity).	0.0144720077515	1
Coq.NArith.Ndigits.Nshiftr_nat_equiv	40
Coq.NArith.Ndigits.Nshiftr_equiv_nat	40
Coq.NArith.Ndigits.Nshiftl_nat_equiv	40
Coq.NArith.Ndigits.Nshiftl_equiv_nat	40
Coq.NArith.Ndigits.Nshiftr_nat_spec	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_low	40
Coq.NArith.Ndigits.Pshiftl_nat_0	40	6.1.0	search with cache (only 1: simpl; only 1: intros; only 1: trivial).	0.0204699039459	10
Coq.NArith.Ndigits.Pshiftl_nat_S	40	0	search with cache (only 1: reflexivity).	0.0142619609833	1
Coq.NArith.Ndigits.Pshiftl_nat_N	40	0.5.0.0.0.21	search with cache (only 1: induction n; only 1: unfold N.shiftl_nat; only 1: trivial; only 1: rewrite Nshiftl_nat_S; only 1: rewrite <- IHn; only 1: reflexivity).	5.38729691505	9760
Coq.NArith.Ndigits.Pshiftl_nat_plus	40
Coq.NArith.Ndigits.Pxor_semantics	40
Coq.NArith.Ndigits.Nxor_semantics	40
Coq.NArith.Ndigits.Por_semantics	40
Coq.NArith.Ndigits.Nor_semantics	40
Coq.NArith.Ndigits.Pand_semantics	40
Coq.NArith.Ndigits.Nand_semantics	40
Coq.NArith.Ndigits.Pdiff_semantics	40
Coq.NArith.Ndigits.Ndiff_semantics	40
Coq.NArith.Ndigits.Pbit_faithful_0	40
Coq.NArith.Ndigits.Pbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful_iff	40
Coq.NArith.Ndigits.Nbit0_correct	40	2.1.1.4.0.25	search with cache (only 1: intros [| n]; only 1: trivial; only 1: induction n; only 1: trivial; only 1: trivial; only 1: trivial).	1.77507901192	5666
Coq.NArith.Ndigits.Ndouble_bit0	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.0202159881592	3
Coq.NArith.Ndigits.Ndouble_plus_one_bit0	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.0202097892761	3
Coq.NArith.Ndigits.Ndiv2_double	40
Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	5.4.0.5.0.8.1.0	search with cache (only 1: destruct n; only 1: simpl; only 1: now try rewrite H; only 1: destruct p; only 1: reflexivity; only 1: intros; only 1: discriminate H; only 1: reflexivity).	11.6869268417	24300
Coq.NArith.Ndigits.Ndiv2_correct	40	0.0.0.0.5.0.0.4	search with cache (only 1: destruct a; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial).	0.873675107956	781
Coq.NArith.Ndigits.Nxor_bit0	40
Coq.NArith.Ndigits.Nxor_div2	40
Coq.NArith.Ndigits.Nneg_bit0	40
Coq.NArith.Ndigits.Nneg_bit0_1	40
Coq.NArith.Ndigits.Nneg_bit0_2	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: reflexivity).	0.0235910415649	4
Coq.NArith.Ndigits.Nsame_bit0	40
Coq.NArith.Ndigits.Nbit0_less	40
Coq.NArith.Ndigits.Nbit0_gt	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (N.discr (N.lxor a a')) as [(p, H2)| H1]; only 1: unfold Nless; only 1: rewrite H2; only 1: destruct p; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H1 : N.odd (N.lxor a a') = false) by (rewrite H2; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H1; only 1: discriminate H1; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H2 : N.odd (N.lxor a a') = false) by (rewrite H1; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H2; only 1: discriminate H2).	1.8451230526	1887
Coq.NArith.Ndigits.Nless_not_refl	40
Coq.NArith.Ndigits.Nless_def_1	40
Coq.NArith.Ndigits.Nless_def_2	40	0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct a; only 1: destruct a'; only 1: reflexivity; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	0.362686157227	216
Coq.NArith.Ndigits.Nless_def_3	40
Coq.NArith.Ndigits.Nless_def_4	40
Coq.NArith.Ndigits.Nless_z	40
Coq.NArith.Ndigits.N0_less_1	40
Coq.NArith.Ndigits.N0_less_2	40
Coq.NArith.Ndigits.Nless_trans	40
Coq.NArith.Ndigits.Nless_total	40
Coq.NArith.Ndigits.Bv2N_N2Bv	40
Coq.NArith.Ndigits.Bv2N_Nsize	40
Coq.NArith.Ndigits.Bv2N_Nsize_1	40
Coq.NArith.Ndigits.Bv2N_upper_bound	40
Coq.NArith.Ndigits.ByteV2N_upper_bound	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen	40	2.0.0.0.0.0.0.1.2.0.8	search with cache (only 1: destruct a; only 1: simpl; only 1: trivial; only 1: induction p; only 1: simpl in *; only 1: rewrite IHp; only 1: auto; only 1: simpl in *; only 1: rewrite IHp; only 1: auto; only 1: trivial).	0.960496902466	1375
Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	40
Coq.NArith.Ndigits.N2Bv_Bv2N	40
Coq.NArith.Ndigits.Nbit0_Blow	40	1.1.1.0.1.0.0.0.0.0.1.0.0.0.0	search with cache (only 1: apply Vector.rectS; only 1: intros; only 1: simpl; only 1: destruct a; only 1: reflexivity; only 1: trivial; only 1: intros; only 1: simpl; only 1: destruct a, (Bv2N v); only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: trivial; only 1: trivial).	3.35510492325	4645
Coq.NArith.Ndigits.Bnth_Nbit	40
Coq.NArith.Ndigits.Nbit_Nsize	40
Coq.NArith.Ndigits.Nbit_Bth	40
Coq.NArith.Ndigits.Nxor_BVxor	40
Coq.NArith.Ndigits.Nand_BVand	40
Coq.NArith.Ndigits.N2Bv_sized_Nsize	40	0.0.0.3.0.0.3.0.0.0.0.0.2	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: induction p; only 1: simpl; only 1: unfold Bcons; only 1: congruence; only 1: simpl; only 1: unfold Bcons; only 1: congruence; only 1: simpl; only 1: auto).	1.22421598434	2186
Coq.NArith.Ndigits.N2Bv_sized_Bv2N	40
Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40	0.0.0.0.0.0.0.0.0.0.1.0.0	search with cache (only 1: destruct a; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal).	0.863207817078	690
Coq.NArith.NArith.test	40
Coq.NArith.Nnat.id	40
Coq.NArith.Nnat.inj	40
Coq.NArith.Nnat.inj_iff	40	2.0.0.1.0.3	search with cache (only 1: split; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: now f_equal; only 1: intro H; only 1: now f_equal).	0.695273160934	214
Coq.NArith.Nnat.inj_double	40	0.5.5.40.1.2.1.39	search with cache (only 1: destruct a as [| p]; only 1: simpl; only 1: now subst; only 1: simpl; only 1: unfold Pos.to_nat; only 1: simpl; only 1: rewrite Pmult_nat_mult, Nat.mul_comm; only 1: trivial).	36.8737208843	69220
Coq.NArith.Nnat.inj_succ_double	40	0.5.4.3.8.0.1.0.0	search with cache (only 1: destruct a; only 1: simpl N.to_nat; only 1: trivial; only 1: simpl N.to_nat; only 1: unfold Pos.to_nat; only 1: simpl; only 1: f_equal; only 1: rewrite Pmult_nat_mult, Nat.mul_comm; only 1: trivial).	4.3877620697	10124
Coq.NArith.Nnat.inj_succ	40	1.0.0.0.0.0	search with cache (only 1: destruct a; only 1: simpl N.to_nat; only 1: reflexivity; only 1: simpl N.to_nat; only 1: unfold Pos.to_nat; only 1: now rewrite !Pmult_nat_mult, Pos2Nat.inj_succ).	0.0919270515442	7
Coq.NArith.Nnat.inj_add	40
Coq.NArith.Nnat.inj_mul	40
Coq.NArith.Nnat.inj_sub	40
Coq.NArith.Nnat.inj_pred	40
Coq.NArith.Nnat.inj_div2	40
Coq.NArith.Nnat.inj_compare	40
Coq.NArith.Nnat.inj_max	40
Coq.NArith.Nnat.inj_min	40
Coq.NArith.Nnat.inj_iter	40
Coq.NArith.Nnat.id	40	0.0.0.0.18	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: rewrite Pos.of_nat_succ; only 1: now apply Nat2Pos.id).	0.117626905441	241
Coq.NArith.Nnat.inj	40
Coq.NArith.Nnat.inj_iff	40	2.0.0.1.0.3	search with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: now f_equal).	0.689758062363	190
Coq.NArith.Nnat.inj_double	40
Coq.NArith.Nnat.inj_succ_double	40	0	search with cache (only 1: nat2N).	0.0327620506287	1
Coq.NArith.Nnat.inj_succ	40	0	search with cache (only 1: nat2N).	0.0272650718689	1
Coq.NArith.Nnat.inj_pred	40	0	search with cache (only 1: nat2N).	0.0268239974976	1
Coq.NArith.Nnat.inj_add	40	6	search with cache (only 1: nat2N).	0.0393249988556	11
Coq.NArith.Nnat.inj_sub	40	0	search with cache (only 1: nat2N).	0.0295100212097	1
Coq.NArith.Nnat.inj_mul	40	0	search with cache (only 1: nat2N).	0.0294868946075	1
Coq.NArith.Nnat.inj_div2	40	0	search with cache (only 1: nat2N).	0.026957988739	1
Coq.NArith.Nnat.inj_compare	40
Coq.NArith.Nnat.inj_min	40	0	search with cache (only 1: nat2N).	0.029862165451	1
Coq.NArith.Nnat.inj_max	40	0	search with cache (only 1: nat2N).	0.0294201374054	1
Coq.NArith.Nnat.inj_iter	40	0.3.11.3.0.9.0.0.7	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: destruct n as [| n]; only 1: trivial; only 1: simpl; only 1: rewrite Pos.iter_succ; only 1: f_equal; only 1: trivial).	3.04149317741	7572
Coq.Strings.Ascii.ascii_dec	40
Coq.Strings.Ascii.eqb_spec	40
Coq.Strings.Ascii.eqb_refl	40
Coq.Strings.Ascii.eqb_sym	40	0	search with cache (only 1: t_eqb).	0.0174810886383	1
Coq.Strings.Ascii.eqb_eq	40	0	search with cache (only 1: t_eqb).	0.0161511898041	1
Coq.Strings.Ascii.eqb_neq	40	0	search with cache (only 1: t_eqb).	0.016960144043	1
Coq.Strings.Ascii.eqb_compat	40	0	search with cache (only 1: t_eqb).	0.0110900402069	1
Coq.Strings.Ascii.ascii_N_embedding	40
Coq.Strings.Ascii.N_ascii_embedding	40
Coq.Strings.Ascii.N_ascii_bounded	40
Coq.Strings.Ascii.ascii_nat_embedding	40
Coq.Strings.Ascii.nat_ascii_embedding	40
Coq.Strings.Ascii.nat_ascii_bounded	40
Coq.Strings.Ascii.ascii_of_byte_of_ascii	40
Coq.Strings.Ascii.byte_of_ascii_of_byte	40
Coq.Strings.Ascii.ascii_of_byte_via_N	40
Coq.Strings.Ascii.ascii_of_byte_via_nat	40
Coq.Strings.Ascii.byte_of_ascii_via_N	40
Coq.Strings.Ascii.byte_of_ascii_via_nat	40
Coq.Strings.String.string_dec	40
Coq.Strings.String.eqb_spec	40
Coq.Strings.String.eqb_refl	40
Coq.Strings.String.eqb_sym	40	0	search with cache (only 1: t_eqb).	0.0201799869537	1
Coq.Strings.String.eqb_eq	40	0	search with cache (only 1: t_eqb).	0.0165400505066	1
Coq.Strings.String.eqb_neq	40	0	search with cache (only 1: t_eqb).	0.0187311172485	1
Coq.Strings.String.eqb_compat	40	4	search with cache (only 1: t_eqb).	0.0153200626373	5
Coq.Strings.String.get_correct	40
Coq.Strings.String.append_correct1	40
Coq.Strings.String.append_correct2	40
Coq.Strings.String.substring_correct1	40
Coq.Strings.String.substring_correct2	40
Coq.Strings.String.prefix_correct	40
Coq.Strings.String.index_correct1	40
Coq.Strings.String.index_correct2	40
Coq.Strings.String.index_correct3	40
Coq.Strings.String.index_correct4	40
Coq.Strings.String.string_of_list_ascii_of_string	40	1.0.0.2.2.25.0.17	search with cache (only 1: elim s; only 1: constructor; only 1: intros m s1; only 1: simpl; only 1: intros ->; only 1: induction s1; only 1: constructor; only 1: constructor).	10.6415410042	25850
Coq.Strings.String.list_ascii_of_string_of_list_ascii	40	0.1.1.0	search with cache (only 1: induction s as [| ? ? IHs]; only 1: reflexivity; only 1: cbn; only 1: apply f_equal, IHs).	0.0208840370178	6
Coq.Strings.String.string_of_list_byte_of_string	40
Coq.Strings.String.list_byte_of_string_of_list_byte	40
Coq.Strings.Byte.byte_dec_lb	40
Coq.Strings.Byte.byte_dec_bl	40
Coq.Strings.Byte.eqb_false	40
Coq.Strings.Byte.of_to_nat	40
Coq.Strings.Byte.to_of_nat	40
Coq.Strings.Byte.to_of_nat_iff	40
Coq.Strings.Byte.to_of_nat_option_map	40
Coq.Strings.Byte.to_nat_bounded	40
Coq.Strings.Byte.of_nat_None_iff	40
Coq.Strings.Byte.of_to_N	40
Coq.Strings.Byte.to_of_N	40
Coq.Strings.Byte.to_of_N_iff	40
Coq.Strings.Byte.to_of_N_option_map	40	0.14	search with cache (only 1: cbv[of_N]; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x | _ => intro | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	1.17563986778	294
Coq.Strings.Byte.to_N_bounded	40
Coq.Strings.Byte.of_N_None_iff	40
Coq.Strings.Byte.to_N_via_nat	40
Coq.Strings.Byte.to_nat_via_N	40
Coq.Strings.Byte.of_N_via_nat	40
Coq.Strings.Byte.of_nat_via_N	40
Coq.Strings.HexString.to_N_of_pos	40	2	search with cache (only 1: auto).	0.088231086731	41
Coq.Strings.HexString.to_N_of_N	40
Coq.Strings.HexString.to_Z_of_Z	40
Coq.Strings.HexString.to_nat_of_nat	40
Coq.Strings.HexString.to_pos_of_pos	40
Coq.Strings.OctalString.to_N_of_pos	40	2	search with cache (only 1: auto).	0.0562379360199	39
Coq.Strings.OctalString.to_N_of_N	40
Coq.Strings.OctalString.to_Z_of_Z	40
Coq.Strings.OctalString.to_nat_of_nat	40
Coq.Strings.OctalString.to_pos_of_pos	40
Coq.Strings.BinaryString.to_N_of_pos	40	2	search with cache (only 1: auto).	0.106421947479	33
Coq.Strings.BinaryString.to_N_of_N	40
Coq.Strings.BinaryString.Z_of_of_Z	40
Coq.Strings.BinaryString.to_nat_of_nat	40
Coq.Strings.BinaryString.to_pos_of_pos	40
Coq.Reals.Rdefinitions.total_order_T	40
Coq.Reals.Rdefinitions.Req_appart_dec	40
Coq.Reals.Rdefinitions.Rrepr_appart_0	40
Coq.Reals.Rdefinitions.up	40
Coq.Reals.Rtrigo_alt.pre_sin_bound	40
Coq.Reals.Rtrigo_alt.pre_cos_bound	40
Coq.Reals.Ratan.Ropp_div	40	8.1	search with cache (only 1: unfold Rdiv; only 1: intuition).	0.0625998973846	29
Coq.Reals.Ratan.pos_half_prf	40	0	search with cache (only 1: lra).	0.0263760089874	1
Coq.Reals.Ratan.Boule_half_to_interval	40
Coq.Reals.Ratan.Boule_lt	40
Coq.Reals.Ratan.Un_cv_ext	40
Coq.Reals.Ratan.Alt_first_term_bound	40
Coq.Reals.Ratan.Alt_CVU	40
Coq.Reals.Ratan.pow2_ge_0	40
Coq.Reals.Ratan.pow2_abs	40
Coq.Reals.Ratan.derivable_pt_tan	40
Coq.Reals.Ratan.derive_pt_tan	40
Coq.Reals.Ratan.derive_increasing_interv	40
Coq.Reals.Ratan.plus_Rsqr_gt_0	40
Coq.Reals.Ratan.PI2_lower_bound	40
Coq.Reals.Ratan.PI2_3_2	40
Coq.Reals.Ratan.PI2_1	40
Coq.Reals.Ratan.tan_increasing	40
Coq.Reals.Ratan.tan_is_inj	40
Coq.Reals.Ratan.exists_atan_in_frame	40
Coq.Reals.Ratan.tan_1_gt_1	40
Coq.Reals.Ratan.frame_tan	40
Coq.Reals.Ratan.ub_opp	40	58.2	search with cache (only 1: intros x xint; only 1: lra).	11.3075170517	18658
Coq.Reals.Ratan.pos_opp_lt	40	2.0	search with cache (only 1: intros x h; only 1: lra).	0.0260238647461	4
Coq.Reals.Ratan.tech_opp_tan	40
Coq.Reals.Ratan.pre_atan	40
Coq.Reals.Ratan.atan_bound	40
Coq.Reals.Ratan.atan_right_inv	40
Coq.Reals.Ratan.atan_opp	40
Coq.Reals.Ratan.derivable_pt_atan	40
Coq.Reals.Ratan.atan_increasing	40
Coq.Reals.Ratan.atan_0	40
Coq.Reals.Ratan.atan_1	40
Coq.Reals.Ratan.derive_pt_atan	40
Coq.Reals.Ratan.derivable_pt_lim_atan	40
Coq.Reals.Ratan.Ratan_seq_decreasing	40
Coq.Reals.Ratan.Ratan_seq_converging	40
Coq.Reals.Ratan.ps_atan_exists_01	40
Coq.Reals.Ratan.Ratan_seq_opp	40
Coq.Reals.Ratan.sum_Ratan_seq_opp	40
Coq.Reals.Ratan.ps_atan_exists_1	40
Coq.Reals.Ratan.in_int	40
Coq.Reals.Ratan.ps_atan0_0	40
Coq.Reals.Ratan.ps_atan_exists_1_opp	40
Coq.Reals.Ratan.ps_atan_opp	40
Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40
Coq.Reals.Ratan.pow_lt_1_compat	40
Coq.Reals.Ratan.Datan_seq_Rabs	40
Coq.Reals.Ratan.Datan_seq_pos	40	4.14.8	search with cache (only 1: intros x h; only 1: unfold Datan_seq; only 1: intuition).	10.2357349396	2222
Coq.Reals.Ratan.Datan_sum_eq	40
Coq.Reals.Ratan.Datan_seq_increasing	40
Coq.Reals.Ratan.Datan_seq_decreasing	40
Coq.Reals.Ratan.Datan_seq_CV_0	40
Coq.Reals.Ratan.Datan_lim	40
Coq.Reals.Ratan.Datan_CVU_prelim	40
Coq.Reals.Ratan.Datan_is_datan	40
Coq.Reals.Ratan.Ratan_CVU'	40
Coq.Reals.Ratan.Ratan_CVU	40
Coq.Reals.Ratan.Alt_PI_tg	40
Coq.Reals.Ratan.Ratan_is_ps_atan	40
Coq.Reals.Ratan.Datan_continuity	40
Coq.Reals.Ratan.derivable_pt_lim_ps_atan	40
Coq.Reals.Ratan.derivable_pt_ps_atan	40
Coq.Reals.Ratan.ps_atan_continuity_pt_1	40
Coq.Reals.Ratan.Datan_eq_DatanSeq_interv	40
Coq.Reals.Ratan.atan_eq_ps_atan	40
Coq.Reals.Ratan.Alt_PI_eq	40
Coq.Reals.Ratan.PI_ineq	40
Coq.Reals.RList.MaxRlist_P1	40
Coq.Reals.RList.MinRlist_P1	40
Coq.Reals.RList.AbsList_P1	40
Coq.Reals.RList.MinRlist_P2	40
Coq.Reals.RList.AbsList_P2	40
Coq.Reals.RList.MaxRlist_P2	40
Coq.Reals.RList.pos_Rl_P1	40	0.1.2.11.1	search with cache (only 1: intros; only 1: elim H; only 1: auto with arith; only 1: intro; only 1: auto).	0.360965013504	641
Coq.Reals.RList.pos_Rl_P2	40
Coq.Reals.RList.Rlist_P1	40
Coq.Reals.RList.RList_P0	40
Coq.Reals.RList.RList_P1	40
Coq.Reals.RList.RList_P2	40
Coq.Reals.RList.RList_P3	40
Coq.Reals.RList.RList_P4	40
Coq.Reals.RList.RList_P5	40
Coq.Reals.RList.RList_P6	40
Coq.Reals.RList.RList_P7	40
Coq.Reals.RList.RList_P8	40
Coq.Reals.RList.RList_P9	40
Coq.Reals.RList.RList_P10	40
Coq.Reals.RList.RList_P11	40
Coq.Reals.RList.RList_P12	40
Coq.Reals.RList.RList_P13	40
Coq.Reals.RList.RList_P14	40	1.4.0.1.3	search with cache (only 1: induction l as [| r l Hrecl]; only 1: reflexivity; only 1: simpl; only 1: rewrite Hrecl; only 1: reflexivity).	0.58559679985	996
Coq.Reals.RList.RList_P15	40
Coq.Reals.RList.RList_P16	40
Coq.Reals.RList.RList_P17	40
Coq.Reals.RList.RList_P18	40	2.5.0.2.0.1	search with cache (only 1: intros; only 1: induction l as [| r l Hrecl]; only 1: reflexivity; only 1: simpl; only 1: rewrite Hrecl; only 1: reflexivity).	0.751640081406	1553
Coq.Reals.RList.RList_P19	40
Coq.Reals.RList.RList_P20	40
Coq.Reals.RList.RList_P21	40	4.2.0	search with cache (only 1: intros; only 1: elim H; only 1: reflexivity).	0.021675825119	33
Coq.Reals.RList.RList_P22	40	1.0.13.22.1	search with cache (only 1: intros; only 1: induction l1 as [| r l1 Hrecl1]; only 1: elim H; only 1: reflexivity; only 1: reflexivity).	5.08880400658	13755
Coq.Reals.RList.RList_P23	40	0.0.1.9.0.0.0.0.0	search with cache (only 1: simple induction l1; only 1: intro; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: rewrite H; only 1: apply INR_eq; only 1: rewrite S_INR; only 1: ring).	1.84857797623	2612
Coq.Reals.RList.RList_P24	40
Coq.Reals.RList.RList_P25	40
Coq.Reals.RList.RList_P26	40	0.0.0.0.0.1.0.1.0.1	search with cache (only 1: simple induction l1; only 1: intros; only 1: elim (Nat.nlt_0_r _ H); only 1: intros; only 1: induction i as [| i Hreci]; only 1: reflexivity; only 1: simpl; only 1: apply H; only 1: apply lt_S_n; only 1: apply H0).	0.862637996674	855
Coq.Reals.RList.RList_P27	40	5.10.1.0.0.1.6	search with cache (only 1: simple induction l1; only 1: intros; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: elim H; only 1: split).	1.38336205482	4381
Coq.Reals.RList.RList_P28	40	1.4.0.0.1.29	search with cache (only 1: simple induction l; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: rewrite H; only 1: reflexivity).	13.463809967	42728
Coq.Reals.RList.RList_P29	40
Coq.Reals.Sqrt_reg.sqrt_var_maj	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt	40
Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	40
Coq.Reals.Sqrt_reg.derivable_pt_sqrt	40
Coq.Reals.Sqrt_reg.derive_pt_sqrt	40
Coq.Reals.Sqrt_reg.continuity_pt_sqrt	40
Coq.Reals.Rsigma.sigma_split	40
Coq.Reals.Rsigma.sigma_diff	40
Coq.Reals.Rsigma.sigma_diff_neg	40	0.1.0.0.0.0.0.0.0	search with cache (only 1: intros low high k H1 H2; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: rewrite (sigma_split H1 H2); only 1: ring).	0.0649120807648	13
Coq.Reals.Rsigma.sigma_first	40
Coq.Reals.Rsigma.sigma_last	40
Coq.Reals.Rsigma.sigma_eq_arg	40	0.0.0.0.0.6.0	search with cache (only 1: unfold sigma; only 1: intros; only 1: rewrite <- minus_n_n; only 1: simpl; only 1: replace (low + 0)%nat with low; only 1: reflexivity; only 1: ring).	0.199869155884	216
Coq.Reals.Rbasic_fun.Rmin_case	40
Coq.Reals.Rbasic_fun.Rmin_case_strong	40
Coq.Reals.Rbasic_fun.Rmin_Rgt_l	40
Coq.Reals.Rbasic_fun.Rmin_Rgt_r	40
Coq.Reals.Rbasic_fun.Rmin_Rgt	40
Coq.Reals.Rbasic_fun.Rmin_l	40
Coq.Reals.Rbasic_fun.Rmin_r	40	2.1.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro H1; only 1: auto with real; only 1: auto with real).	0.0675909519196	11
Coq.Reals.Rbasic_fun.Rmin_left	40	1.2.0.0.3	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with real; only 1: auto with real).	0.145646810532	83
Coq.Reals.Rbasic_fun.Rmin_right	40	2.0.0.0.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: intro H1; only 1: auto with real).	0.0270140171051	7
Coq.Reals.Rbasic_fun.Rle_min_compat_r	40
Coq.Reals.Rbasic_fun.Rle_min_compat_l	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 (apply Rmin_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.0300769805908	6
Coq.Reals.Rbasic_fun.Rmin_comm	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 (apply Rmin_case_strong; intro); only 1: auto using Rle_antisym; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0302681922913	6
Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40
Coq.Reals.Rbasic_fun.Rmin_pos	40	5.0.3.1.3.0.1.1.1.1.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec y x); only 1: case (Rle_dec x y); only 1: intros; only 1: apply H; only 1: auto with real; only 1: case (Rle_dec x y); only 1: auto with real; only 1: intros; only 1: assumption).	21.857052803	29685
Coq.Reals.Rbasic_fun.Rmin_glb	40	0.0.0.0.0	search with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: auto).	0.0244169235229	5
Coq.Reals.Rbasic_fun.Rmin_glb_lt	40	1.0.1.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro; only 1: assumption; only 1: intro; only 1: assumption).	0.0296921730042	9
Coq.Reals.Rbasic_fun.Rmax_case	40
Coq.Reals.Rbasic_fun.Rmax_case_strong	40	0.0.0.0.0	search with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).	0.0311548709869	5
Coq.Reals.Rbasic_fun.Rmax_Rle	40
Coq.Reals.Rbasic_fun.Rmax_comm	40
Coq.Reals.Rbasic_fun.Rmax_l	40	0.1.1.0.0.2.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro H1; only 1: assumption; only 1: right; only 1: reflexivity).	0.134210824966	97
Coq.Reals.Rbasic_fun.Rmax_r	40	1.0.1.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro H1; only 1: auto with real; only 1: intro H1; only 1: auto with real).	0.0351901054382	9
Coq.Reals.Rbasic_fun.Rmax_left	40	1.0.1.0.1.0.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intros; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real); only 1: intros; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	0.145987987518	76
Coq.Reals.Rbasic_fun.Rmax_right	40	1.0.1.0.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: intros; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real); only 1: intros; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	0.0292689800262	8
Coq.Reals.Rbasic_fun.Rle_max_compat_r	40	0.0.1.0.0.1.0.1	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: apply Rmax_case_strong; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: apply Rmax_case_strong; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	1.03378415108	659
Coq.Reals.Rbasic_fun.Rle_max_compat_l	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 (apply Rmax_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.0310039520264	6
Coq.Reals.Rbasic_fun.RmaxRmult	40
Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40
Coq.Reals.Rbasic_fun.Rmax_lub	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.0246407985687	4
Coq.Reals.Rbasic_fun.Rmax_lub_lt	40	1.0.1.0.0.1.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro; only 1: assumption; only 1: intro; only 1: assumption).	0.0308320522308	10
Coq.Reals.Rbasic_fun.Rmax_Rlt	40
Coq.Reals.Rbasic_fun.Rmax_neg	40	1.1.0.0	search with cache (only 1: intros; only 1: apply Rmax_lub_lt; only 1: assumption; only 1: assumption).	0.0713500976562	6
Coq.Reals.Rbasic_fun.Rcase_abs	40
Coq.Reals.Rbasic_fun.Rabs_R0	40
Coq.Reals.Rbasic_fun.Rabs_R1	40
Coq.Reals.Rbasic_fun.Rabs_no_R0	40
Coq.Reals.Rbasic_fun.Rabs_left	40
Coq.Reals.Rbasic_fun.Rabs_right	40
Coq.Reals.Rbasic_fun.Rabs_left1	40
Coq.Reals.Rbasic_fun.Rabs_pos	40
Coq.Reals.Rbasic_fun.Rle_abs	40
Coq.Reals.Rbasic_fun.Rabs_le	40
Coq.Reals.Rbasic_fun.Rabs_pos_eq	40	5.1.5.0	search with cache (only 1: intros a H; only 1: rewrite Rabs_right; only 1: auto; only 1: auto with real).	2.09608197212	1542
Coq.Reals.Rbasic_fun.Rabs_Rabsolu	40
Coq.Reals.Rbasic_fun.Rabs_pos_lt	40
Coq.Reals.Rbasic_fun.Rabs_minus_sym	40
Coq.Reals.Rbasic_fun.Rabs_mult	40
Coq.Reals.Rbasic_fun.Rabs_Rinv	40
Coq.Reals.Rbasic_fun.Rabs_Ropp	40
Coq.Reals.Rbasic_fun.Rabs_triang	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv2	40
Coq.Reals.Rbasic_fun.Rabs_def1	40
Coq.Reals.Rbasic_fun.Rabs_def2	40
Coq.Reals.Rbasic_fun.RmaxAbs	40
Coq.Reals.Rbasic_fun.Rabs_Zabs	40
Coq.Reals.Rbasic_fun.abs_IZR	40
Coq.Reals.Rbasic_fun.Ropp_Rmax	40
Coq.Reals.Rbasic_fun.Ropp_Rmin	40
Coq.Reals.Rbasic_fun.Rmax_assoc	40
Coq.Reals.Rbasic_fun.Rminmax	40	3.0.1.3.0.1.0.0.0.1	search with cache (only 1: intros x y; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: eauto using Rle_trans, Rle_refl; only 1: auto with real; only 1: apply Rmax_case_strong; only 1: eauto using Rle_trans, Rle_refl; only 1: auto with real).	15.2410387993	18148
Coq.Reals.Rbasic_fun.Rmin_assoc	40
Coq.Reals.ROrderedType.Req_dec	40
Coq.Reals.ROrderedType.Reqb_eq	40
Coq.Reals.ROrderedType.Rcompare_spec	40
Coq.Reals.ROrderedType.lt_strorder	40
Coq.Reals.ROrderedType.lt_compat	40	2	search with cache (only 1: auto with *).	0.0264618396759	13
Coq.Reals.ROrderedType.le_lteq	40	0.0.8	search with cache (only 1: repeat red; only 1: intros; only 1: auto).	0.0625159740448	70
Coq.Reals.SeqSeries.sum_maj1	40
Coq.Reals.SeqSeries.Rseries_CV_comp	40
Coq.Reals.SeqSeries.Cesaro	40
Coq.Reals.SeqSeries.Cesaro_1	40
Coq.Reals.Rtrigo_def.exp_cof_no_R0	40
Coq.Reals.Rtrigo_def.exist_exp	40
Coq.Reals.Rtrigo_def.pow_i	40
Coq.Reals.Rtrigo_def.exist_exp0	40
Coq.Reals.Rtrigo_def.exp_0	40
Coq.Reals.Rtrigo_def.cosh_0	40
Coq.Reals.Rtrigo_def.sinh_0	40
Coq.Reals.Rtrigo_def.simpl_cos_n	40
Coq.Reals.Rtrigo_def.archimed_cor1	40
Coq.Reals.Rtrigo_def.Alembert_cos	40
Coq.Reals.Rtrigo_def.cosn_no_R0	40	0.0.0.0.5.0	search with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	0.0996930599213	53
Coq.Reals.Rtrigo_def.exist_cos	40
Coq.Reals.Rtrigo_def.simpl_sin_n	40
Coq.Reals.Rtrigo_def.Alembert_sin	40
Coq.Reals.Rtrigo_def.sin_no_R0	40	0.0.0.0.0.0	search with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	0.0376031398773	6
Coq.Reals.Rtrigo_def.exist_sin	40
Coq.Reals.Rtrigo_def.cos_sym	40
Coq.Reals.Rtrigo_def.sin_antisym	40
Coq.Reals.Rtrigo_def.sin_0	40
Coq.Reals.Rtrigo_def.exist_cos0	40
Coq.Reals.Rtrigo_def.cos_0	40
Coq.Reals.NewtonInt.FTCN_step1	40
Coq.Reals.NewtonInt.FTC_Newton	40	0.0	search with cache (only 1: intros f a b; only 1: split).	0.0235629081726	2
Coq.Reals.NewtonInt.NewtonInt_P1	40
Coq.Reals.NewtonInt.NewtonInt_P2	40
Coq.Reals.NewtonInt.NewtonInt_P3	40
Coq.Reals.NewtonInt.NewtonInt_P4	40
Coq.Reals.NewtonInt.NewtonInt_P5	40
Coq.Reals.NewtonInt.antiderivative_P1	40
Coq.Reals.NewtonInt.NewtonInt_P6	40	2.0.3.3.0.3.20	search with cache (only 1: intros f g l a b X X0; only 1: elim X0; only 1: elim X; only 1: symmetry; only 1: unfold NewtonInt, NewtonInt_P3; only 1: simpl; only 1: ring).	13.0288000107	14037
Coq.Reals.NewtonInt.antiderivative_P2	40
Coq.Reals.NewtonInt.antiderivative_P3	40
Coq.Reals.NewtonInt.antiderivative_P4	40
Coq.Reals.NewtonInt.NewtonInt_P7	40
Coq.Reals.NewtonInt.NewtonInt_P8	40
Coq.Reals.NewtonInt.NewtonInt_P9	40
Coq.Reals.Runcountable.in_holed_interval_dec	40
Coq.Reals.Runcountable.middle_in_interval	40
Coq.Reals.Runcountable.point_in_holed_interval_works	40
Coq.Reals.Runcountable.first_in_holed_interval	40
Coq.Reals.Runcountable.first_in_holed_interval_works	40
Coq.Reals.Runcountable.split_couple_eq	40	0.3.1.47	search with cache (only 1: inversion 1; only 1: split; only 1: ring; only 1: reflexivity).	34.2500989437	53468
Coq.Reals.Runcountable.first_two_in_interval_works	40
Coq.Reals.Runcountable.tearing_sequences	40
Coq.Reals.Runcountable.tearing_sequences_projsig	40
Coq.Reals.Runcountable.tearing_sequences_inc_dec	40
Coq.Reals.Runcountable.split_lt_succ	40
Coq.Reals.Runcountable.increase_seq_transit	40
Coq.Reals.Runcountable.decrease_seq_transit	40
Coq.Reals.Runcountable.tearing_sequences_ordered_forall	40
Coq.Reals.Runcountable.torn_number	40
Coq.Reals.Runcountable.torn_number_above_first_sequence	40
Coq.Reals.Runcountable.torn_number_below_second_sequence	40
Coq.Reals.Runcountable.limit_index_above_all_indices	40
Coq.Reals.Runcountable.first_indices_increasing	40
Coq.Reals.Runcountable.R_uncountable	40
Coq.Reals.Rfunctions.INR_fact_neq_0	40
Coq.Reals.Rfunctions.fact_simpl	40	1.1.2	search with cache (only 1: simpl; only 1: intros; only 1: Even.parity_binop).	0.0186460018158	7
Coq.Reals.Rfunctions.simpl_fact	40	2.72	search with cache (only 1: fix ind_0_1_SS 1; only 1: reflexivity || assumption).	8.77479577065	24972
Coq.Reals.Rfunctions.pow_O	40	4.3	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0232739448547	9
Coq.Reals.Rfunctions.pow_1	40	1.9.1	search with cache (only 1: intros; only 1: simpl; only 1: ring_Rsqr).	0.0888261795044	135
Coq.Reals.Rfunctions.pow_add	40
Coq.Reals.Rfunctions.Rpow_mult_distr	40
Coq.Reals.Rfunctions.pow_nonzero	40	0.0.6.9.3.0	search with cache (only 1: intros; only 1: induction n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	1.9325568676	812
Coq.Reals.Rfunctions.pow_RN_plus	40
Coq.Reals.Rfunctions.pow_lt	40
Coq.Reals.Rfunctions.Rlt_pow_R1	40
Coq.Reals.Rfunctions.Rlt_pow	40
Coq.Reals.Rfunctions.tech_pow_Rmult	40	0	search with cache (only 1: auto with real).	0.00767087936401	1
Coq.Reals.Rfunctions.tech_pow_Rplus	40	5.1.3.0.3	search with cache (only 1: induction n; only 1: simpl; only 1: ring_Rsqr; only 1: simpl; only 1: field).	5.61428117752	3727
Coq.Reals.Rfunctions.poly	40
Coq.Reals.Rfunctions.Power_monotonic	40
Coq.Reals.Rfunctions.RPow_abs	40
Coq.Reals.Rfunctions.Pow_x_infinity	40
Coq.Reals.Rfunctions.pow_ne_zero	40
Coq.Reals.Rfunctions.Rinv_pow	40
Coq.Reals.Rfunctions.pow_lt_1_zero	40
Coq.Reals.Rfunctions.pow_R1	40
Coq.Reals.Rfunctions.pow_Rsqr	40
Coq.Reals.Rfunctions.pow_le	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: auto with real).	0.0531561374664	9
Coq.Reals.Rfunctions.pow_1_even	40
Coq.Reals.Rfunctions.pow_1_odd	40
Coq.Reals.Rfunctions.pow_1_abs	40
Coq.Reals.Rfunctions.pow_mult	40
Coq.Reals.Rfunctions.pow_incr	40
Coq.Reals.Rfunctions.pow_R1_Rle	40	0.1.5.0.3.2.0.0.1	search with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: intros; only 1: simpl; only 1: replace 1 with (1 * 1); only 1: auto with real; only 1: auto with real).	17.7788140774	16992
Coq.Reals.Rfunctions.Rle_pow	40
Coq.Reals.Rfunctions.pow1	40	0.0.0.0.0.1.0.0.0.2.0	search with cache (only 1: intro; only 1: induction n as [| n Hrecn]; only 1: reflexivity; only 1: replace (S n) with (n + 1)%nat; only 1: rewrite pow_add; only 1: rewrite Hrecn; only 1: rewrite Rmult_1_l; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: ring; only 1: ring).	1.09078788757	702
Coq.Reals.Rfunctions.pow_Rabs	40
Coq.Reals.Rfunctions.pow_maj_Rabs	40
Coq.Reals.Rfunctions.Rsqr_pow2	40
Coq.Reals.Rfunctions.intP	40
Coq.Reals.Rfunctions.Zpower_NR0	40
Coq.Reals.Rfunctions.powerRZ_O	40	0	search with cache (only 1: reflexivity).	0.00724601745605	1
Coq.Reals.Rfunctions.powerRZ_1	40	0.1	search with cache (only 1: simpl; only 1: auto with real).	0.0108630657196	3
Coq.Reals.Rfunctions.powerRZ_NOR	40
Coq.Reals.Rfunctions.powerRZ_pos_sub	40
Coq.Reals.Rfunctions.powerRZ_add	40
Coq.Reals.Rfunctions.Zpower_nat_powerRZ	40
Coq.Reals.Rfunctions.Zpower_pos_powerRZ	40
Coq.Reals.Rfunctions.powerRZ_lt	40	0.0.0.0.0.0.0	search with cache (only 1: destruct z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	0.0202560424805	7
Coq.Reals.Rfunctions.powerRZ_le	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros x z; only 1: case z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	0.0269911289215	8
Coq.Reals.Rfunctions.Zpower_nat_powerRZ_absolu	40
Coq.Reals.Rfunctions.powerRZ_R1	40
Coq.Reals.Rfunctions.pow_powerRZ	40
Coq.Reals.Rfunctions.powerRZ_ind	40
Coq.Reals.Rfunctions.powerRZ_inv	40
Coq.Reals.Rfunctions.powerRZ_neg	40
Coq.Reals.Rfunctions.powerRZ_mult_distr	40
Coq.Reals.Rfunctions.GP_finite	40
Coq.Reals.Rfunctions.sum_f_R0_triangle	40
Coq.Reals.Rfunctions.R_dist_pos	40
Coq.Reals.Rfunctions.R_dist_sym	40
Coq.Reals.Rfunctions.R_dist_refl	40
Coq.Reals.Rfunctions.R_dist_eq	40	0.0.0.0.0	search with cache (only 1: unfold R_dist; only 1: intros; only 1: split_Rabs; only 1: ring; only 1: ring).	0.0241878032684	5
Coq.Reals.Rfunctions.R_dist_tri	40
Coq.Reals.Rfunctions.R_dist_plus	40
Coq.Reals.Rfunctions.R_dist_mult_l	40
Coq.Reals.Rprod.prod_SO_split	40
Coq.Reals.Rprod.prod_SO_pos	40
Coq.Reals.Rprod.prod_SO_Rle	40
Coq.Reals.Rprod.fact_prodSO	40
Coq.Reals.Rprod.le_n_2n	40	5.0.8	search with cache (only 1: simpl; only 1: intros; only 1: lia).	0.184412002563	273
Coq.Reals.Rprod.RfactN_fact2N_factk	40
Coq.Reals.Rprod.INR_fact_lt_0	40
Coq.Reals.Rprod.C_maj	40
Coq.Reals.Exp_prop.E1_cvg	40
Coq.Reals.Exp_prop.exp_form	40
Coq.Reals.Exp_prop.div2_double	40
Coq.Reals.Exp_prop.div2_S_double	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intro; only 1: induction N as [| N HrecN]; only 1: reflexivity; only 1: replace (2 * S N)%nat with (S (S (2 * N))); only 1: simpl; only 1: simpl in HrecN; only 1: rewrite HrecN; only 1: reflexivity; only 1: ring).	0.0566029548645	9
Coq.Reals.Exp_prop.div2_not_R0	40
Coq.Reals.Exp_prop.Reste_E_maj	40
Coq.Reals.Exp_prop.maj_Reste_cv_R0	40
Coq.Reals.Exp_prop.Reste_E_cv	40
Coq.Reals.Exp_prop.exp_plus	40
Coq.Reals.Exp_prop.exp_pos_pos	40
Coq.Reals.Exp_prop.exp_pos	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp_0	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp	40
Coq.Reals.Rpower.P_Rmin	40
Coq.Reals.Rpower.exp_le_3	40
Coq.Reals.Rpower.exp_increasing	40
Coq.Reals.Rpower.exp_lt_inv	40
Coq.Reals.Rpower.exp_ineq1	40
Coq.Reals.Rpower.ln_exists1	40
Coq.Reals.Rpower.ln_exists	40
Coq.Reals.Rpower.exp_ln	40
Coq.Reals.Rpower.exp_inv	40
Coq.Reals.Rpower.exp_Ropp	40
Coq.Reals.Rpower.ln_increasing	40
Coq.Reals.Rpower.ln_exp	40
Coq.Reals.Rpower.ln_1	40	6.36.5.0.26	search with cache (only 1: apply exp_inv; only 1: pose proof (exp_pos 1) as H0; only 1: rewrite exp_0; only 1: apply exp_ln; only 1: prove_sup0).	30.1128380299	61528
Coq.Reals.Rpower.ln_lt_inv	40
Coq.Reals.Rpower.ln_inv	40	0.1.0.0.0.11.11.1.0	search with cache (only 1: intros x y H H0 H1; only 1: rewrite <- (exp_ln y); only 1: elim H1; only 1: unfold ln; only 1: decide (Rlt_dec 0 x) with H; only 1: unfold Rln; only 1: destruct (ln_exists {| pos := x; cond_pos := H |} (cond_pos {| pos := x; cond_pos := H |})) as (?, Hex); only 1: apply Hex; only 1: assumption).	28.5902540684	35465
Coq.Reals.Rpower.ln_mult	40
Coq.Reals.Rpower.ln_Rinv	40
Coq.Reals.Rpower.ln_continue	40
Coq.Reals.Rpower.Rpower_plus	40
Coq.Reals.Rpower.Rpower_mult	40
Coq.Reals.Rpower.Rpower_O	40
Coq.Reals.Rpower.Rpower_1	40
Coq.Reals.Rpower.Rpower_pow	40
Coq.Reals.Rpower.Rpower_lt	40
Coq.Reals.Rpower.Rpower_sqrt	40
Coq.Reals.Rpower.Rpower_Ropp	40
Coq.Reals.Rpower.powerRZ_Rpower	40
Coq.Reals.Rpower.Rle_Rpower	40
Coq.Reals.Rpower.ln_lt_2	40
Coq.Reals.Rpower.limit1_ext	40
Coq.Reals.Rpower.limit1_imp	40	0.1.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros f g D l x H; only 1: unfold limit1_in, limit_in; only 1: intros H0 eps H1; only 1: case (H0 eps); only 1: auto; only 1: intros x0 [H2 H3]; only 1: exists x0; only 1: split; only 1: auto; only 1: intros x1 [H4 H5]; only 1: auto).	0.557387113571	358
Coq.Reals.Rpower.Rinv_Rdiv	40
Coq.Reals.Rpower.Dln	40
Coq.Reals.Rpower.derivable_pt_lim_ln	40
Coq.Reals.Rpower.D_in_imp	40
Coq.Reals.Rpower.D_in_ext	40	2.6.0.0	search with cache (only 1: intros f g D D1 x H; only 1: unfold D_in; only 1: rewrite <- H; only 1: auto).	0.566873073578	335
Coq.Reals.Rpower.Dpower	40
Coq.Reals.Rpower.derivable_pt_lim_power	40
Coq.Reals.Rpower.Rpower_mult_distr	40
Coq.Reals.Rpower.Rlt_Rpower_l	40
Coq.Reals.Rpower.Rle_Rpower_l	40
Coq.Reals.Rpower.arcsinh_sinh	40
Coq.Reals.Rpower.sinh_arcsinh	40
Coq.Reals.Rpower.derivable_pt_lim_arcsinh	40
Coq.Reals.Rpower.arcsinh_lt	40
Coq.Reals.Rpower.arcsinh_le	40
Coq.Reals.Rpower.arcsinh_0	40
Coq.Reals.ConstructiveRcomplete.CReal_absSmall	40
Coq.Reals.ConstructiveRcomplete.Un_cv_mod_eq	40
Coq.Reals.ConstructiveRcomplete.Rfloor	40
Coq.Reals.ConstructiveRcomplete.FQ_dense	40
Coq.Reals.ConstructiveRcomplete.RQ_limit	40
Coq.Reals.ConstructiveRcomplete.Rdiag_cauchy_sequence	40
Coq.Reals.ConstructiveRcomplete.doubleLeCovariant	40
Coq.Reals.ConstructiveRcomplete.CReal_cv_self	40
Coq.Reals.ConstructiveRcomplete.Un_cv_extens	40
Coq.Reals.ConstructiveRcomplete.R_has_all_rational_limits	40
Coq.Reals.ConstructiveRcomplete.Rcauchy_complete	40
Coq.Reals.ConstructiveRcomplete.CRealImplem	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_increasing_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_unique	40
Coq.Reals.ConstructiveRealsMorphisms.Endomorph_id	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_proper	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_compose	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le	40	8.0.1.1	search with cache (only 1: intros; only 1: intro abs; only 1: apply CRmorph_increasing_inv in abs; only 1: contradiction).	0.250044107437	269
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_one	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_opp	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos	40
Coq.Reals.ConstructiveRealsMorphisms.NatOfZ	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_int	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Ql	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphism	40
Coq.Reals.ConstructiveRealsMorphisms.RightBound	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphismInv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_surject	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inject	40
Coq.Reals.RIneq.Rle_refl	40	3.6.1.9	search with cache (only 1: unfold Rle; only 1: intros; only 1: right; only 1: reflexivity).	0.90478515625	1832
Coq.Reals.RIneq.Rge_refl	40	0.0.0	search with cache (only 1: intro; only 1: right; only 1: reflexivity).	0.0177791118622	3
Coq.Reals.RIneq.Rlt_irrefl	40
Coq.Reals.RIneq.Rgt_irrefl	40	15.0.0.0	search with cache (only 1: intros r H; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	0.748564958572	1387
Coq.Reals.RIneq.Rlt_not_eq	40
Coq.Reals.RIneq.Rgt_not_eq	40
Coq.Reals.RIneq.Rlt_dichotomy_converse	40
Coq.Reals.RIneq.Req_dec	40
Coq.Reals.RIneq.Rtotal_order	40
Coq.Reals.RIneq.Rdichotomy	40	0.0.0	search with cache (only 1: intuition; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.0367109775543	3
Coq.Reals.RIneq.Rlt_le	40	0.2.0.1	search with cache (only 1: red; only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.0278341770172	7
Coq.Reals.RIneq.Rgt_ge	40	4.0.5.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: left; only 1: intuition eauto  3).	0.275035142899	204
Coq.Reals.RIneq.Rle_ge	40
Coq.Reals.RIneq.Rge_le	40	0.0.0.0.0.0	search with cache (only 1: destruct 1; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto; only 1: red; only 1: auto with real).	0.0327119827271	6
Coq.Reals.RIneq.Rlt_gt	40	0.0	search with cache (only 1: intros; only 1: auto with real).	0.0152499675751	2
Coq.Reals.RIneq.Rgt_lt	40	0	search with cache (only 1: trivial).	0.0131349563599	1
Coq.Reals.RIneq.Rnot_le_lt	40	0.4.0.17	search with cache (only 1: unfold Rle; only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: tauto).	12.2184400558	7187
Coq.Reals.RIneq.Rnot_ge_gt	40
Coq.Reals.RIneq.Rnot_le_gt	40	0.1.0.0	search with cache (only 1: intros r1 r2; only 1: unfold Rle; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.0314621925354	5
Coq.Reals.RIneq.Rnot_ge_lt	40	0.0.0	search with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: auto with real).	0.0188109874725	3
Coq.Reals.RIneq.Rnot_lt_le	40	1.1.1.1.0	search with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: generalize (total_order_T r1 r2); only 1: unfold Rle; only 1: intuition eauto  3).	0.0981130599976	16
Coq.Reals.RIneq.Rnot_gt_le	40	0.1.0.0	search with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.0304839611053	5
Coq.Reals.RIneq.Rnot_gt_ge	40	1.2.0.0	search with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  3).	0.0422201156616	7
Coq.Reals.RIneq.Rnot_lt_ge	40	0.1.1.0	search with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.0312161445618	6
Coq.Reals.RIneq.Rlt_not_le	40
Coq.Reals.RIneq.Rgt_not_le	40	2.0	search with cache (only 1: intros; only 1: auto with real).	0.167560100555	46
Coq.Reals.RIneq.Rlt_not_ge	40
Coq.Reals.RIneq.Rgt_not_ge	40	3.0	search with cache (only 1: intros; only 1: auto with real).	0.026359796524	13
Coq.Reals.RIneq.Rle_not_lt	40	0.0.0.2	search with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: unfold not; only 1: intuition eauto  3).	0.269789934158	90
Coq.Reals.RIneq.Rge_not_lt	40	0.0.0.0.1	search with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: auto with real).	0.0272009372711	6
Coq.Reals.RIneq.Rle_not_gt	40	0.0.0.6	search with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: unfold not; only 1: intuition eauto  3).	0.140500068665	51
Coq.Reals.RIneq.Rge_not_gt	40	0.3.1.0	search with cache (only 1: intros; only 1: red; only 1: apply Rle_not_lt; only 1: auto with real).	0.0235290527344	8
Coq.Reals.RIneq.Req_le	40	0.0	search with cache (only 1: unfold Rle; only 1: auto with real).	0.0160419940948	2
Coq.Reals.RIneq.Req_ge	40	0.1	search with cache (only 1: red; only 1: intuition eauto  3).	0.0190680027008	3
Coq.Reals.RIneq.Req_le_sym	40	1.0	search with cache (only 1: unfold Rle; only 1: auto with real).	0.0199980735779	3
Coq.Reals.RIneq.Req_ge_sym	40	1.0	search with cache (only 1: unfold Rge; only 1: intuition eauto  3).	0.023316860199	3
Coq.Reals.RIneq.Rgt_asym	40	0.1.2.1	search with cache (only 1: intros; only 1: apply Rle_not_lt; only 1: red; only 1: auto with real).	0.0321660041809	8
Coq.Reals.RIneq.Rle_antisym	40
Coq.Reals.RIneq.Rge_antisym	40	8.0	search with cache (only 1: intros; only 1: auto with real).	0.0366039276123	21
Coq.Reals.RIneq.Rle_le_eq	40	0.0.0.0	search with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2); only 1: unfold Rle; only 1: intuition).	0.0768761634827	4
Coq.Reals.RIneq.Rge_ge_eq	40	0	search with cache (only 1: intuition).	0.0650131702423	1
Coq.Reals.RIneq.Rlt_eq_compat	40	5.8.2	search with cache (only 1: intuition eauto  3; only 1: subst; only 1: eauto with real).	0.805105209351	673
Coq.Reals.RIneq.Rgt_eq_compat	40	0.0.1.0.0	search with cache (only 1: intros x x' y y'; only 1: intros; only 1: replace x with x'; only 1: replace y with y'; only 1: assumption).	0.0238320827484	6
Coq.Reals.RIneq.Rle_trans	40
Coq.Reals.RIneq.Rge_trans	40
Coq.Reals.RIneq.Rgt_trans	40	8.11.0	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: red; only 1: intuition eauto  3).	1.02909708023	1771
Coq.Reals.RIneq.Rle_lt_trans	40	0.0.13	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	15.9712290764	2924
Coq.Reals.RIneq.Rlt_le_trans	40	0.0.0	search with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.0297091007233	3
Coq.Reals.RIneq.Rge_gt_trans	40
Coq.Reals.RIneq.Rgt_ge_trans	40
Coq.Reals.RIneq.Rlt_dec	40	0.2.13.0	search with cache (only 1: intros; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: generalize (total_order_T r1 r2); only 1: tauto).	1.68967294693	1485
Coq.Reals.RIneq.Rle_dec	40	0.3.2.0	search with cache (only 1: intros; only 1: generalize (Rlt_asym r1 r2); only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.724720954895	38
Coq.Reals.RIneq.Rgt_dec	40	1.0.2.0	search with cache (only 1: do 2 intro; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition eauto  4 with real; only 1: auto with real).	0.0914881229401	7
Coq.Reals.RIneq.Rge_dec	40	2.2.0.1.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition eauto  4 with real; only 1: intuition; only 1: intuition).	0.284160852432	10
Coq.Reals.RIneq.Rlt_le_dec	40	0.2.3.0	search with cache (only 1: intros; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.475249052048	22
Coq.Reals.RIneq.Rgt_ge_dec	40	1.2.0.9	search with cache (only 1: unfold Rge; only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  4 with real).	0.530833959579	297
Coq.Reals.RIneq.Rle_lt_dec	40	0.0.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.0841751098633	3
Coq.Reals.RIneq.Rge_gt_dec	40	0.1.0.1.1.0	search with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.0674121379852	41
Coq.Reals.RIneq.Rlt_or_le	40	0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (Rtotal_order r1 r2) as [| [H0| H0]]; only 1: unfold Rle; only 1: tauto; only 1: subst; only 1: auto with rorders; only 1: auto with real).	0.0333340167999	8
Coq.Reals.RIneq.Rgt_or_ge	40	0.1.0.0.3.0	search with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: left; only 1: eauto with rorders; only 1: right; only 1: eauto with rorders).	0.042240858078	20
Coq.Reals.RIneq.Rle_or_lt	40	0.0.0.0.1.0.2	search with cache (only 1: intros; only 1: destruct (Rtotal_order r1 r2) as [| [H0| H0]]; only 1: unfold Rle; only 1: tauto; only 1: subst; only 1: auto with rorders; only 1: auto with real).	0.266136884689	61
Coq.Reals.RIneq.Rge_or_gt	40	0.1.0.1.0.0	search with cache (only 1: intros; only 1: edestruct Rlt_or_le; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.0942120552063	38
Coq.Reals.RIneq.Rle_lt_or_eq_dec	40	1.4.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  4 with real).	0.565424203873	87
Coq.Reals.RIneq.inser_trans_R	40
Coq.Reals.RIneq.Rplus_0_r	40
Coq.Reals.RIneq.Rplus_ne	40	18	search with cache (only 1: intuition).	0.228758096695	364
Coq.Reals.RIneq.Rplus_opp_l	40	4.0	search with cache (only 1: intros; only 1: ring).	3.31423902512	27
Coq.Reals.RIneq.Rplus_opp_r_uniq	40
Coq.Reals.RIneq.Rplus_eq_compat_l	40	14	search with cache (only 1: intuition).	0.204503059387	149
Coq.Reals.RIneq.Rplus_eq_compat_r	40	1.20.4	search with cache (only 1: intros; only 1: rewrite H; only 1: auto).	1.54638409615	1576
Coq.Reals.RIneq.Rplus_eq_reg_l	40
Coq.Reals.RIneq.Rplus_eq_reg_r	40
Coq.Reals.RIneq.Rplus_0_r_uniq	40	2.1.0.0.0	search with cache (only 1: intros x y H; only 1: replace y with (- x + x + y) by ring; only 1: rewrite Rplus_assoc; only 1: rewrite H; only 1: ring).	0.0430021286011	8
Coq.Reals.RIneq.Rplus_eq_0_l	40
Coq.Reals.RIneq.Rplus_eq_R0	40	0.2.0.0.0.0.0.0.2.1	search with cache (only 1: intros a b H [H0| H0] H1; only 1: absurd (0 < a + b); only 1: rewrite H1; only 1: auto with real; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: assumption; only 1: auto using Rplus_lt_compat_l with real; only 1: rewrite <- H0, Rplus_0_r in H1; only 1: auto with real).	1.58802294731	439
Coq.Reals.RIneq.Rinv_r	40
Coq.Reals.RIneq.Rinv_l_sym	40	0.0.1	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.0324831008911	4
Coq.Reals.RIneq.Rinv_r_sym	40	0.0.1	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.0327050685883	4
Coq.Reals.RIneq.Rmult_0_r	40	7.0.0	search with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: field).	0.106341123581	59
Coq.Reals.RIneq.Rmult_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0232789516449	2
Coq.Reals.RIneq.Rmult_ne	40	2.2.0.0.0.0	search with cache (only 1: split; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l; only 1: apply Rmult_1_l).	1.99531602859	50
Coq.Reals.RIneq.Rmult_1_r	40	0.0.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l).	0.0828249454498	17
Coq.Reals.RIneq.Rmult_eq_compat_l	40	4.0.0	search with cache (only 1: intro; only 1: intro; only 1: apply f_equal).	0.0190751552582	7
Coq.Reals.RIneq.Rmult_eq_compat_r	40	0.0.1.4.2	search with cache (only 1: intros; only 1: apply Rplus_eq_reg_l with r; only 1: apply Rplus_eq_reg_l with r; only 1: rewrite <- H; only 1: reflexivity).	0.207496166229	144
Coq.Reals.RIneq.Rmult_eq_reg_l	40
Coq.Reals.RIneq.Rmult_eq_reg_r	40
Coq.Reals.RIneq.Rmult_integral	40
Coq.Reals.RIneq.Rmult_eq_0_compat	40
Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	0.0.1	search with cache (only 1: intros; only 1: rewrite H; only 1: auto with real).	0.0202190876007	4
Coq.Reals.RIneq.Rmult_eq_0_compat_l	40	0	search with cache (only 1: auto with real).	0.0153708457947	1
Coq.Reals.RIneq.Rmult_neq_0_reg	40	1.2.7	search with cache (only 1: split; only 1: auto with real; only 1: auto with real).	0.343632936478	259
Coq.Reals.RIneq.Rmult_integral_contrapositive	40
Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	40	0.0.0.0.3.0	search with cache (only 1: red; only 1: intros; only 1: case (Rmult_integral r1 r2); only 1: auto with real; only 1: auto with real; only 1: auto with real).	0.0267040729523	9
Coq.Reals.RIneq.Rmult_plus_distr_r	40	3.2.1.0.1	search with cache (only 1: intros m n p; only 1: rewrite Rmult_comm; only 1: rewrite (Rmult_comm n p); only 1: rewrite (Rmult_comm m p); only 1: apply Rmult_plus_distr_l).	14.4623777866	891
Coq.Reals.RIneq.Rsqr_0	40
Coq.Reals.RIneq.Rsqr_0_uniq	40
Coq.Reals.RIneq.Ropp_eq_compat	40	1.0	search with cache (only 1: intros r b; only 1: eauto with real).	0.802142858505	104
Coq.Reals.RIneq.Ropp_0	40	0	search with cache (only 1: ring).	0.0192611217499	1
Coq.Reals.RIneq.Ropp_eq_0_compat	40	0.9.2	search with cache (only 1: intros; only 1: rewrite H; only 1: auto with real).	0.320378065109	100
Coq.Reals.RIneq.Ropp_involutive	40	2.0	search with cache (only 1: intros; only 1: ring).	0.0274629592896	11
Coq.Reals.RIneq.Ropp_neq_0_compat	40
Coq.Reals.RIneq.Ropp_plus_distr	40	0.1	search with cache (only 1: intros; only 1: ring).	0.0588879585266	3
Coq.Reals.RIneq.Ropp_mult_distr_l	40	0.1.0	search with cache (only 1: intro; only 1: intro; only 1: ring).	0.0308599472046	4
Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0284972190857	2
Coq.Reals.RIneq.Rmult_opp_opp	40	0.1.0	search with cache (only 1: intro; only 1: intros; only 1: ring).	0.0286371707916	4
Coq.Reals.RIneq.Ropp_mult_distr_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0261540412903	2
Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0259490013123	2
Coq.Reals.RIneq.Rminus_0_r	40	4.1	search with cache (only 1: intros; only 1: ring).	0.0290231704712	11
Coq.Reals.RIneq.Rminus_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0238738059998	2
Coq.Reals.RIneq.Ropp_minus_distr	40	0.1.2	search with cache (only 1: intro; only 1: intro; only 1: ring).	0.0280230045319	6
Coq.Reals.RIneq.Ropp_minus_distr'	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0254778862	2
Coq.Reals.RIneq.Rminus_diag_eq	40	4.0.2.1	search with cache (only 1: intros x y H; only 1: rewrite H; only 1: replace y with (- x + x + y) by ring; only 1: ring).	2.43896985054	493
Coq.Reals.RIneq.Rminus_diag_uniq	40
Coq.Reals.RIneq.Rminus_diag_uniq_sym	40
Coq.Reals.RIneq.Rplus_minus	40	0.1.1	search with cache (only 1: intros; only 1: unfold Rminus; only 1: ring).	0.0284600257874	5
Coq.Reals.RIneq.Rminus_eq_contra	40	0.0.1.6	search with cache (only 1: intros r b; only 1: replace r with (r + 0); only 1: eauto with real; only 1: eauto with real).	0.820266008377	400
Coq.Reals.RIneq.Rminus_not_eq	40	0.0.0.0	search with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply H; only 1: auto with real).	0.0265250205994	4
Coq.Reals.RIneq.Rminus_not_eq_right	40	0.0.0.0.0	search with cache (only 1: red; only 1: intros; only 1: elim H; only 1: apply Rminus_diag_eq; only 1: auto).	0.0249829292297	5
Coq.Reals.RIneq.Rmult_minus_distr_l	40	2.0	search with cache (only 1: intros; only 1: ring).	1.02491092682	17
Coq.Reals.RIneq.Rinv_1	40	59	search with cache (only 1: field).	11.2781689167	19641
Coq.Reals.RIneq.Rinv_neq_0_compat	40
Coq.Reals.RIneq.Rinv_involutive	40	0.0.1	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.0321969985962	4
Coq.Reals.RIneq.Rinv_mult_distr	40
Coq.Reals.RIneq.Ropp_inv_permute	40	0.0.0	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.033056974411	3
Coq.Reals.RIneq.Rinv_r_simpl_r	40	0.0.4.1	search with cache (only 1: intros; only 1: field; only 1: red; only 1: apply H).	0.0442080497742	16
Coq.Reals.RIneq.Rinv_r_simpl_l	40	0.0.5.0.0	search with cache (only 1: intros; only 1: transitivity (1 * r2); only 1: field; only 1: auto with real; only 1: auto with real).	0.0792028903961	17
Coq.Reals.RIneq.Rinv_r_simpl_m	40	0.0.7.0.0	search with cache (only 1: intros; only 1: transitivity (r2 * 1); only 1: field; only 1: auto with real; only 1: auto with real).	0.824511051178	335
Coq.Reals.RIneq.Rinv_mult_simpl	40
Coq.Reals.RIneq.Rplus_gt_compat_l	40	6	search with cache (only 1: intuition).	0.0577399730682	31
Coq.Reals.RIneq.Rplus_lt_compat_r	40
Coq.Reals.RIneq.Rplus_gt_compat_r	40	7	search with cache (only 1: intuition).	0.0848529338837	68
Coq.Reals.RIneq.Rplus_le_compat_l	40	0.0.10	search with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition).	0.462421894073	238
Coq.Reals.RIneq.Rplus_ge_compat_l	40	9.11	search with cache (only 1: unfold Rge; only 1: intuition).	3.43560314178	1730
Coq.Reals.RIneq.Rplus_le_compat_r	40	1.2.3.5.0	search with cache (only 1: unfold Rle; only 1: intuition; only 1: right; only 1: apply (f_equal (fun v => v + r)); only 1: eauto).	6.99843788147	3444
Coq.Reals.RIneq.Rplus_ge_compat_r	40	7	search with cache (only 1: intuition).	0.0862941741943	54
Coq.Reals.RIneq.Rplus_lt_compat	40
Coq.Reals.RIneq.Rplus_le_compat	40
Coq.Reals.RIneq.Rplus_gt_compat	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rlt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.0220160484314	4
Coq.Reals.RIneq.Rplus_ge_compat	40
Coq.Reals.RIneq.Rplus_lt_le_compat	40
Coq.Reals.RIneq.Rplus_le_lt_compat	40
Coq.Reals.RIneq.Rplus_gt_ge_compat	40	0.0.1.3	search with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.0620198249817	31
Coq.Reals.RIneq.Rplus_ge_gt_compat	40	0.0.2.4	search with cache (only 1: intros; only 1: apply Rlt_le_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.0828020572662	35
Coq.Reals.RIneq.Rplus_lt_0_compat	40
Coq.Reals.RIneq.Rplus_le_lt_0_compat	40
Coq.Reals.RIneq.Rplus_lt_le_0_compat	40
Coq.Reals.RIneq.Rplus_le_le_0_compat	40
Coq.Reals.RIneq.sum_inequa_Rle_lt	40	1	search with cache (only 1: intuition).	0.022842168808	2
Coq.Reals.RIneq.Rplus_lt_reg_l	40
Coq.Reals.RIneq.Rplus_lt_reg_r	40	3.0.0.0.0.0.2.0	search with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: apply CRealLtForget; only 1: apply (CReal_plus_lt_reg_l (Rrepr r)); only 1: rewrite <- Rrepr_plus, <- Rrepr_plus; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: now rewrite 2!(Rplus_comm r)).	2.80462217331	315
Coq.Reals.RIneq.Rplus_le_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_l	40
Coq.Reals.RIneq.Rplus_ge_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_pos_r	40
Coq.Reals.RIneq.Rplus_lt_reg_pos_r	40
Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_neg_r	40
Coq.Reals.RIneq.Ropp_gt_lt_contravar	40
Coq.Reals.RIneq.Ropp_lt_gt_contravar	40	3.0.4	search with cache (only 1: red; only 1: intros; only 1: eauto with real).	0.0571599006653	30
Coq.Reals.RIneq.Ropp_lt_contravar	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp, Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	0.0391249656677	8
Coq.Reals.RIneq.Ropp_gt_contravar	40	8.0	search with cache (only 1: intros; only 1: eauto using Rnot_lt_le with rorders).	0.396369934082	48
Coq.Reals.RIneq.Ropp_le_ge_contravar	40	0.4.0.7.0	search with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).	1.84289097786	856
Coq.Reals.RIneq.Ropp_ge_le_contravar	40	0.0.0	search with cache (only 1: unfold Rge; only 1: intros; only 1: auto with real).	0.020171880722	3
Coq.Reals.RIneq.Ropp_le_contravar	40	0.0.0.2.0.0.0	search with cache (only 1: unfold Rle; only 1: intros; only 1: elim H; only 1: auto with real; only 1: right; only 1: rewrite <- H0; only 1: auto with zarith real).	0.11203789711	27
Coq.Reals.RIneq.Ropp_ge_contravar	40	0.0.0.0	search with cache (only 1: unfold Rge; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).	0.0745270252228	4
Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40
Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0208241939545	4
Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0207140445709	4
Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0209369659424	4
Coq.Reals.RIneq.Ropp_0_le_ge_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0207140445709	4
Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0225739479065	4
Coq.Reals.RIneq.Ropp_lt_cancel	40
Coq.Reals.RIneq.Ropp_gt_cancel	40	3.2.1	search with cache (only 1: intros; only 1: unfold Rgt; only 1: auto with real).	0.0475850105286	11
Coq.Reals.RIneq.Ropp_le_cancel	40	0.0.0.7	search with cache (only 1: intros x y H'; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).	1.28396916389	455
Coq.Reals.RIneq.Ropp_ge_cancel	40	0.0.0.3	search with cache (only 1: intros x y H; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).	0.21772813797	34
Coq.Reals.RIneq.Rmult_lt_compat_r	40	13.6.0	search with cache (only 1: intros; only 1: rewrite <- 2!(Rmult_comm r); only 1: auto with real).	18.5095980167	24562
Coq.Reals.RIneq.Rmult_gt_compat_r	40	3.8.2.1	search with cache (only 1: intros x y z; only 1: pattern x at 1; only 1: unfold Rgt; only 1: auto with real).	4.26516509056	5401
Coq.Reals.RIneq.Rmult_gt_compat_l	40	3.9.3.2	search with cache (only 1: intros x y z; only 1: pattern x at 1; only 1: unfold Rgt; only 1: auto with real).	3.31981801987	4452
Coq.Reals.RIneq.Rmult_le_compat_l	40
Coq.Reals.RIneq.Rmult_le_compat_r	40	5.4.3.0	search with cache (only 1: intros r r1 r2 H H0; only 1: rewrite (Rmult_comm r2 r); only 1: rewrite (Rmult_comm r1 r); only 1: auto with real).	25.2355978489	9125
Coq.Reals.RIneq.Rmult_ge_compat_l	40
Coq.Reals.RIneq.Rmult_ge_compat_r	40	6.3.2.1	search with cache (only 1: intros; only 1: rewrite (Rmult_comm r2 r); only 1: rewrite (Rmult_comm r1 r); only 1: eauto using Rmult_le_compat_l with rorders).	1.56203889847	2597
Coq.Reals.RIneq.Rmult_le_compat	40
Coq.Reals.RIneq.Rmult_ge_compat	40
Coq.Reals.RIneq.Rmult_gt_0_lt_compat	40
Coq.Reals.RIneq.Rmult_le_0_lt_compat	40
Coq.Reals.RIneq.Rmult_lt_0_compat	40
Coq.Reals.RIneq.Rmult_le_compat_neg_l	40
Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	40	0.2.0.2.0	search with cache (only 1: intros; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).	0.0550220012665	25
Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	40	0.3.0.8.0	search with cache (only 1: intros; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).	0.248101949692	314
Coq.Reals.RIneq.Rmult_lt_reg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_r	40
Coq.Reals.RIneq.Rmult_gt_reg_l	40	1.0.1.0	search with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: auto with real).	0.0241780281067	6
Coq.Reals.RIneq.Rmult_le_reg_l	40
Coq.Reals.RIneq.Rmult_le_reg_r	40
Coq.Reals.RIneq.Rlt_minus	40
Coq.Reals.RIneq.Rgt_minus	40	0.0.0.0	search with cache (only 1: intros; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r).	0.027587890625	4
Coq.Reals.RIneq.Rlt_Rminus	40
Coq.Reals.RIneq.Rle_minus	40	2.2.0.2	search with cache (only 1: red; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).	0.178192138672	45
Coq.Reals.RIneq.Rge_minus	40
Coq.Reals.RIneq.Rminus_lt	40
Coq.Reals.RIneq.Rminus_gt	40	0.0.0.0.0.4.1.0.0	search with cache (only 1: intros; only 1: apply (Rplus_lt_reg_l r2); only 1: apply (Rplus_lt_reg_l r2); only 1: replace r1 with (r1 - r2 + r2); only 1: pattern r2 at 3; only 1: replace r2 with (0 + r2); only 1: auto with real; only 1: auto with real; only 1: ring).	0.899302005768	734
Coq.Reals.RIneq.Rminus_gt_0_lt	40
Coq.Reals.RIneq.Rminus_le	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct 1; only 1: replace r1 with (r1 - r2 + r2); only 1: pattern r2 at 3; only 1: replace r2 with (0 + r2); only 1: auto with real; only 1: auto with real; only 1: ring; only 1: unfold Rle; only 1: auto with real).	0.0459749698639	9
Coq.Reals.RIneq.Rminus_ge	40	0.0.0.0.11.3.4	search with cache (only 1: intros; only 1: replace r2 with (0 + r2); only 1: apply Rle_ge; only 1: replace r1 with (r1 - r2 + r2); only 1: auto with real; only 1: ring; only 1: auto with real).	32.605640173	26122
Coq.Reals.RIneq.tech_Rplus	40
Coq.Reals.RIneq.Rle_0_sqr	40
Coq.Reals.RIneq.Rlt_0_sqr	40
Coq.Reals.RIneq.Rplus_sqr_eq_0_l	40
Coq.Reals.RIneq.Rplus_sqr_eq_0	40
Coq.Reals.RIneq.Rlt_0_1	40	0.0.1	search with cache (only 1: replace 1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.0161099433899	4
Coq.Reals.RIneq.Rle_0_1	40	0	search with cache (only 1: auto with real).	0.0130038261414	1
Coq.Reals.RIneq.Rinv_0_lt_compat	40
Coq.Reals.RIneq.Rinv_lt_0_compat	40	0.0.0.0.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: red; only 1: intros; only 1: absurd (1 <= 0); only 1: auto with real; only 1: replace 1 with (r * / r); only 1: replace 0 with (r * 0); only 1: auto with real; only 1: auto with real; only 1: auto with real).	0.702306032181	356
Coq.Reals.RIneq.Rinv_lt_contravar	40
Coq.Reals.RIneq.Rinv_1_lt_contravar	40
Coq.Reals.RIneq.Rle_lt_0_plus_1	40	0.1.1.6	search with cache (only 1: intros; only 1: replace 0 with (0 + 0); only 1: auto with real; only 1: auto with real).	0.0654768943787	48
Coq.Reals.RIneq.Rlt_plus_1	40
Coq.Reals.RIneq.tech_Rgt_minus	40
Coq.Reals.RIneq.S_INR	40
Coq.Reals.RIneq.S_O_plus_INR	40
Coq.Reals.RIneq.plus_INR	40
Coq.Reals.RIneq.minus_INR	40
Coq.Reals.RIneq.mult_INR	40
Coq.Reals.RIneq.pow_INR	40
Coq.Reals.RIneq.lt_0_INR	40
Coq.Reals.RIneq.lt_INR	40
Coq.Reals.RIneq.lt_1_INR	40
Coq.Reals.RIneq.pos_INR_nat_of_P	40
Coq.Reals.RIneq.pos_INR	40	5.1.0.7.12.2	search with cache (only 1: intros; only 1: unfold Rle; only 1: induction n as [| n Hrecn]; only 1: auto with real; only 1: repeat rewrite S_INR; only 1: auto with real).	17.5185859203	22616
Coq.Reals.RIneq.INR_lt	40
Coq.Reals.RIneq.le_INR	40	6.1.2	search with cache (only 1: simple induction 1; only 1: auto with real; only 1: auto with arith real).	0.713002920151	750
Coq.Reals.RIneq.INR_not_0	40	0.0.2.2	search with cache (only 1: intro; only 1: case n; only 1: auto with arith; only 1: auto with arith).	0.0672280788422	38
Coq.Reals.RIneq.not_0_INR	40	3.2.4.5.6	search with cache (only 1: intro; only 1: induction n as [| n Hrecn]; only 1: auto with real; only 1: repeat rewrite S_INR; only 1: auto with real).	6.46988916397	7449
Coq.Reals.RIneq.not_INR	40
Coq.Reals.RIneq.INR_eq	40
Coq.Reals.RIneq.INR_le	40
Coq.Reals.RIneq.not_1_INR	40	0.0.0.2	search with cache (only 1: red; only 1: intros n H H1; only 1: apply H; only 1: now apply not_INR in H).	0.313174962997	50
Coq.Reals.RIneq.IZN	40
Coq.Reals.RIneq.INR_IPR	40
Coq.Reals.RIneq.INR_IZR_INZ	40
Coq.Reals.RIneq.plus_IZR_NEG_POS	40
Coq.Reals.RIneq.plus_IZR	40
Coq.Reals.RIneq.mult_IZR	40
Coq.Reals.RIneq.pow_IZR	40
Coq.Reals.RIneq.succ_IZR	40	5.6.0.0.0.4.1.0.0	search with cache (only 1: intro t; only 1: destruct t; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: rewrite <- 3!INR_IPR, Pos2Nat.inj_add; only 1: apply plus_INR; only 1: rewrite Rplus_comm; only 1: apply plus_IZR_NEG_POS).	5.91387295723	7265
Coq.Reals.RIneq.opp_IZR	40	0.2.1.1.0.1.1.2.2	search with cache (only 1: intro t; only 1: case t; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: intro; only 1: ring).	2.04370093346	2222
Coq.Reals.RIneq.minus_IZR	40
Coq.Reals.RIneq.Z_R_minus	40
Coq.Reals.RIneq.lt_0_IZR	40
Coq.Reals.RIneq.lt_IZR	40
Coq.Reals.RIneq.eq_IZR_R0	40
Coq.Reals.RIneq.eq_IZR	40
Coq.Reals.RIneq.not_0_IZR	40
Coq.Reals.RIneq.le_0_IZR	40
Coq.Reals.RIneq.le_IZR	40
Coq.Reals.RIneq.le_IZR_R1	40
Coq.Reals.RIneq.IZR_ge	40
Coq.Reals.RIneq.IZR_le	40
Coq.Reals.RIneq.IZR_lt	40
Coq.Reals.RIneq.IZR_neq	40	0.0.1.4.2.1	search with cache (only 1: red; only 1: intros H0; only 1: intros n H H1; only 1: case H; only 1: apply eq_IZR; only 1: auto).	2.1191599369	1893
Coq.Reals.RIneq.one_IZR_lt1	40
Coq.Reals.RIneq.one_IZR_r_R1	40
Coq.Reals.RIneq.single_z_r_R1	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.5	search with cache (only 1: intros; only 1: apply Zminus_eq; only 1: apply one_IZR_lt1; only 1: rewrite <- Z_R_minus; only 1: split; only 1: replace (-1) with (r - (r + 1)); only 1: unfold Rminus; only 1: apply Rplus_lt_le_compat; only 1: auto with real; only 1: auto with real; only 1: ring; only 1: replace 1 with (r + 1 - r); only 1: unfold Rminus; only 1: apply Rplus_le_lt_compat; only 1: auto with real; only 1: auto with real; only 1: ring).	7.15296602249	6915
Coq.Reals.RIneq.tech_single_z_r_R1	40
Coq.Reals.RIneq.Rmult_le_pos	40	0.0.0.1	search with cache (only 1: intros; only 1: replace 0 with (0 * r2); only 1: auto with real; only 1: auto with real).	0.0579779148102	41
Coq.Reals.RIneq.Rinv_le_contravar	40
Coq.Reals.RIneq.Rle_Rinv	40
Coq.Reals.RIneq.Ropp_div	40
Coq.Reals.RIneq.double	40	15.12	search with cache (only 1: intro; only 1: ring).	0.487439155579	523
Coq.Reals.RIneq.double_var	40
Coq.Reals.RIneq.R_rm	40
Coq.Reals.RIneq.Zeq_bool_IZR	40
Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	40	0.0.1.0	search with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 * r3); only 1: auto with real; only 1: auto with real).	0.12785410881	30
Coq.Reals.RIneq.le_epsilon	40
Coq.Reals.RIneq.completeness_weak	40
Coq.Reals.RIneq.Rdiv_lt_0_compat	40	2.0.2.1.0.7.2	search with cache (only 1: intros x y H H0; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive x); only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: auto with real; only 1: auto with real).	39.8286659718	58452
Coq.Reals.RIneq.Rdiv_plus_distr	40	2.0.1.6	search with cache (only 1: intros x y; only 1: intro; only 1: unfold Rdiv; only 1: ring).	0.368140935898	240
Coq.Reals.RIneq.Rdiv_minus_distr	40	0.2.3.11	search with cache (only 1: intros n m le; only 1: unfold Z.sub, Rminus; only 1: unfold Rdiv; only 1: ring).	0.920371055603	1065
Coq.Reals.RIneq.Req_EM_T	40
Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40
Coq.Reals.ClassicalDedekindReals.lowerCutBelow	40
Coq.Reals.ClassicalDedekindReals.lowerCutAbove	40
Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40
Coq.Reals.ClassicalDedekindReals.DRealQlim	40
Coq.Reals.ClassicalDedekindReals.DRealAbstr	40
Coq.Reals.ClassicalDedekindReals.UpperAboveLower	40
Coq.Reals.ClassicalDedekindReals.DRealRepr	40
Coq.Reals.ClassicalDedekindReals.Rle_antisym	40
Coq.Reals.ClassicalDedekindReals.lowerUpper	40
Coq.Reals.ClassicalDedekindReals.DRealOpen	40
Coq.Reals.ClassicalDedekindReals.DRealReprQ	40
Coq.Reals.ClassicalDedekindReals.DRealReprQup	40
Coq.Reals.ClassicalDedekindReals.DRealQuot1	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	40
Coq.Reals.ClassicalDedekindReals.DRealQuot2	40
Coq.Reals.ArithProp.minus_neq_O	40	0.48	search with cache (only 1: fix ind_0_1_SS 1; only 1: trivial).	1.25544404984	4298
Coq.Reals.ArithProp.le_minusni_n	40	5.6.10	search with cache (only 1: set (R := fun n m : nat => (m <= n)%nat -> (n - m)%nat = 0%nat -> n = m); only 1: fix even_odd_double 1; only 1: auto with arith).	7.17867493629	18335
Coq.Reals.ArithProp.lt_minus_O_lt	40	1.8.5.3	search with cache (only 1: red; only 1: set (R := fun n m : nat => (m <= n)%nat -> (n - m)%nat = 0%nat -> n = m); only 1: fix even_odd_double 1; only 1: auto with arith).	4.74369502068	12567
Coq.Reals.ArithProp.even_odd_cor	40	3.0.2	search with cache (only 1: simpl; only 1: fix even_odd_double 1; only 1: assumption).	0.0148069858551	13
Coq.Reals.ArithProp.le_double	40	0.5.15.0	search with cache (only 1: intro; only 1: simpl; only 1: fix ind_0_1_SS 1; only 1: assumption).	1.88527798653	3474
Coq.Reals.ArithProp.euclidian_division	40
Coq.Reals.ArithProp.tech8	40	3.0	search with cache (only 1: fix ind_0_1_SS 1; only 1: auto with arith).	0.0126581192017	15
Coq.Reals.R_Ifp.tech_up	40
Coq.Reals.R_Ifp.up_tech	40
Coq.Reals.R_Ifp.fp_R0	40
Coq.Reals.R_Ifp.for_base_fp	40
Coq.Reals.R_Ifp.base_fp	40
Coq.Reals.R_Ifp.base_Int_part	40
Coq.Reals.R_Ifp.Int_part_INR	40
Coq.Reals.R_Ifp.fp_nat	40
Coq.Reals.R_Ifp.R0_fp_O	40
Coq.Reals.R_Ifp.Rminus_Int_part1	40
Coq.Reals.R_Ifp.Rminus_Int_part2	40
Coq.Reals.R_Ifp.Rminus_fp1	40
Coq.Reals.R_Ifp.Rminus_fp2	40
Coq.Reals.R_Ifp.plus_Int_part1	40
Coq.Reals.R_Ifp.plus_Int_part2	40
Coq.Reals.R_Ifp.plus_frac_part1	40
Coq.Reals.R_Ifp.plus_frac_part2	40
Coq.Reals.Machin.atan_sub_correct	40
Coq.Reals.Machin.tech	40
Coq.Reals.Machin.Machin_2_3	40
Coq.Reals.Machin.Machin_4_5_239	40
Coq.Reals.Machin.Machin_2_3_7	40
Coq.Reals.Machin.PI_2_3_7_ineq	40
Coq.Reals.RiemannInt.phi_sequence_prop	40
Coq.Reals.RiemannInt.RiemannInt_P1	40
Coq.Reals.RiemannInt.RiemannInt_P2	40
Coq.Reals.RiemannInt.RiemannInt_P3	40
Coq.Reals.RiemannInt.RiemannInt_exists	40
Coq.Reals.RiemannInt.RiemannInt_P4	40
Coq.Reals.RiemannInt.RinvN_pos	40	17	search with cache (only 1: auto with real).	0.098895072937	162
Coq.Reals.RiemannInt.RinvN_cv	40
Coq.Reals.RiemannInt.Riemann_integrable_ext	40
Coq.Reals.RiemannInt.RiemannInt_P5	40
Coq.Reals.RiemannInt.maxN	40
Coq.Reals.RiemannInt.Heine_cor1	40
Coq.Reals.RiemannInt.Heine_cor2	40
Coq.Reals.RiemannInt.SubEqui_P1	40	5	search with cache (only 1: reflexivity).	0.059219121933	27
Coq.Reals.RiemannInt.SubEqui_P2	40
Coq.Reals.RiemannInt.SubEqui_P3	40
Coq.Reals.RiemannInt.SubEqui_P4	40
Coq.Reals.RiemannInt.SubEqui_P5	40
Coq.Reals.RiemannInt.SubEqui_P6	40
Coq.Reals.RiemannInt.SubEqui_P7	40
Coq.Reals.RiemannInt.SubEqui_P8	40
Coq.Reals.RiemannInt.SubEqui_P9	40
Coq.Reals.RiemannInt.RiemannInt_P6	40
Coq.Reals.RiemannInt.RiemannInt_P7	40
Coq.Reals.RiemannInt.continuity_implies_RiemannInt	40
Coq.Reals.RiemannInt.RiemannInt_P8	40
Coq.Reals.RiemannInt.RiemannInt_P9	40
Coq.Reals.RiemannInt.RiemannInt_P10	40
Coq.Reals.RiemannInt.RiemannInt_P11	40
Coq.Reals.RiemannInt.RiemannInt_P12	40
Coq.Reals.RiemannInt.RiemannInt_P13	40
Coq.Reals.RiemannInt.RiemannInt_P14	40
Coq.Reals.RiemannInt.RiemannInt_P15	40
Coq.Reals.RiemannInt.RiemannInt_P16	40
Coq.Reals.RiemannInt.Rle_cv_lim	40
Coq.Reals.RiemannInt.RiemannInt_P17	40
Coq.Reals.RiemannInt.RiemannInt_P18	40
Coq.Reals.RiemannInt.RiemannInt_P19	40
Coq.Reals.RiemannInt.FTC_P1	40
Coq.Reals.RiemannInt.RiemannInt_P20	40
Coq.Reals.RiemannInt.RiemannInt_P21	40
Coq.Reals.RiemannInt.RiemannInt_P22	40
Coq.Reals.RiemannInt.RiemannInt_P23	40
Coq.Reals.RiemannInt.RiemannInt_P24	40
Coq.Reals.RiemannInt.RiemannInt_P25	40
Coq.Reals.RiemannInt.RiemannInt_P26	40
Coq.Reals.RiemannInt.RiemannInt_P27	40
Coq.Reals.RiemannInt.RiemannInt_P28	40
Coq.Reals.RiemannInt.RiemannInt_P29	40
Coq.Reals.RiemannInt.RiemannInt_P30	40
Coq.Reals.RiemannInt.RiemannInt_P31	40
Coq.Reals.RiemannInt.RiemannInt_P32	40
Coq.Reals.RiemannInt.RiemannInt_P33	40
Coq.Reals.RiemannInt.FTC_Riemann	40
Coq.Reals.RiemannInt.RiemannInt_const_bound	40
Coq.Reals.RiemannInt.Riemann_integrable_scal	40
Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40
Coq.Reals.Ranalysis2.formule	40
Coq.Reals.Ranalysis2.maj_term1	40
Coq.Reals.Ranalysis2.maj_term2	40
Coq.Reals.Ranalysis2.maj_term3	40
Coq.Reals.Ranalysis2.maj_term4	40
Coq.Reals.Ranalysis2.D_x_no_cond	40
Coq.Reals.Ranalysis2.Rabs_4	40
Coq.Reals.Ranalysis2.Rlt_4	40
Coq.Reals.Ranalysis2.quadruple	40	13.5	search with cache (only 1: intro; only 1: field).	0.345538854599	447
Coq.Reals.Ranalysis2.quadruple_var	40
Coq.Reals.Ranalysis2.continuous_neq_0	40
Coq.Reals.Rtopology.interior_P1	40
Coq.Reals.Rtopology.interior_P2	40	3.0.1	search with cache (only 1: unfold included; only 1: unfold interior; only 1: firstorder).	0.0284328460693	59
Coq.Reals.Rtopology.adherence_P1	40
Coq.Reals.Rtopology.included_trans	40	10.0.35.0	search with cache (only 1: red; only 1: intros P exnot allP; only 1: intros; only 1: eauto).	1.18073010445	8472
Coq.Reals.Rtopology.interior_P3	40
Coq.Reals.Rtopology.complementary_P1	40	6.3	search with cache (only 1: unfold intersection_domain; only 1: firstorder).	0.0431940555573	90
Coq.Reals.Rtopology.adherence_P2	40
Coq.Reals.Rtopology.adherence_P3	40
Coq.Reals.Rtopology.open_set_P1	40
Coq.Reals.Rtopology.closed_set_P1	40
Coq.Reals.Rtopology.neighbourhood_P1	40
Coq.Reals.Rtopology.open_set_P2	40
Coq.Reals.Rtopology.open_set_P3	40
Coq.Reals.Rtopology.open_set_P4	40	0.3.13.2	search with cache (only 1: unfold open_set, interior; only 1: red; only 1: intros; only 1: elim H).	0.283775091171	1059
Coq.Reals.Rtopology.open_set_P5	40
Coq.Reals.Rtopology.disc_P1	40
Coq.Reals.Rtopology.continuity_P1	40
Coq.Reals.Rtopology.continuity_P2	40
Coq.Reals.Rtopology.continuity_P3	40
Coq.Reals.Rtopology.Rsepare	40
Coq.Reals.Rtopology.restriction_family	40
Coq.Reals.Rtopology.family_P1	40
Coq.Reals.Rtopology.open_set_P6	40	1.5.0.8.3.0.0	search with cache (only 1: unfold open_set; only 1: intros; only 1: apply neighbourhood_P1 with D1; only 1: apply H0; only 1: apply H; only 1: apply H0; only 1: assumption).	3.81432700157	9839
Coq.Reals.Rtopology.compact_P1	40
Coq.Reals.Rtopology.compact_P2	40
Coq.Reals.Rtopology.compact_EMP	40
Coq.Reals.Rtopology.compact_eqDom	40
Coq.Reals.Rtopology.compact_P3	40
Coq.Reals.Rtopology.compact_P4	40
Coq.Reals.Rtopology.compact_P5	40
Coq.Reals.Rtopology.compact_carac	40
Coq.Reals.Rtopology.continuity_compact	40
Coq.Reals.Rtopology.prolongement_C0	40
Coq.Reals.Rtopology.continuity_ab_maj	40
Coq.Reals.Rtopology.continuity_ab_min	40
Coq.Reals.Rtopology.ValAdh_un_exists	40
Coq.Reals.Rtopology.ValAdh_un_prop	40
Coq.Reals.Rtopology.adherence_P4	40
Coq.Reals.Rtopology.compact_P6	40
Coq.Reals.Rtopology.Bolzano_Weierstrass	40
Coq.Reals.Rtopology.is_lub_u	40
Coq.Reals.Rtopology.domain_P1	40
Coq.Reals.Rtopology.Heine	40
Coq.Reals.Raxioms.Rrepr_0	40
Coq.Reals.Raxioms.Rrepr_1	40
Coq.Reals.Raxioms.Rrepr_plus	40
Coq.Reals.Raxioms.Rrepr_opp	40
Coq.Reals.Raxioms.Rrepr_minus	40
Coq.Reals.Raxioms.Rrepr_mult	40
Coq.Reals.Raxioms.Rrepr_inv	40
Coq.Reals.Raxioms.Rrepr_le	40
Coq.Reals.Raxioms.Rrepr_appart	40
Coq.Reals.Raxioms.Rappart_repr	40
Coq.Reals.Raxioms.Rplus_comm	40	0.20.1.9.9.1	search with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rplus_def, Rquot2; only 1: rewrite Rplus_def, Rquot2; only 1: ring_simplify; only 1: reflexivity).	7.01336503029	19208
Coq.Reals.Raxioms.Rplus_assoc	40
Coq.Reals.Raxioms.Rplus_opp_r	40	5.0.1.20.0.13.1	search with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_opp; only 1: ring_simplify; only 1: unfold IZR; only 1: rewrite R0_def, (Rquot2 0); only 1: reflexivity).	16.0522601604	29177
Coq.Reals.Raxioms.Rplus_0_l	40
Coq.Reals.Raxioms.Rmult_comm	40
Coq.Reals.Raxioms.Rmult_assoc	40
Coq.Reals.Raxioms.Rinv_l	40
Coq.Reals.Raxioms.Rmult_1_l	40
Coq.Reals.Raxioms.R1_neq_R0	40
Coq.Reals.Raxioms.Rmult_plus_distr_l	40
Coq.Reals.Raxioms.Rlt_asym	40
Coq.Reals.Raxioms.Rlt_trans	40
Coq.Reals.Raxioms.Rplus_lt_compat_l	40
Coq.Reals.Raxioms.Rmult_lt_compat_l	40
Coq.Reals.Raxioms.Rrepr_INR	40
Coq.Reals.Raxioms.Rrepr_IPR2	40
Coq.Reals.Raxioms.Rrepr_IPR	40
Coq.Reals.Raxioms.Rrepr_IZR	40
Coq.Reals.Raxioms.archimed	40
Coq.Reals.Raxioms.completeness	40
Coq.Reals.Rseries.EUn_noempty	40
Coq.Reals.Rseries.Un_in_EUn	40	0.2.5.1	search with cache (only 1: unfold EUn; only 1: intros N; only 1: exists N; only 1: trivial).	0.347659826279	219
Coq.Reals.Rseries.Un_bound_imp	40
Coq.Reals.Rseries.growing_prop	40
Coq.Reals.Rseries.Un_cv_crit_lub	40
Coq.Reals.Rseries.Un_cv_crit	40
Coq.Reals.Rseries.finite_greater	40
Coq.Reals.Rseries.cauchy_bound	40
Coq.Reals.Rseries.GP_infinite	40
Coq.Reals.Rseries.CV_shift	40
Coq.Reals.Rseries.CV_shift'	40	0.0.1.3.1.0.0.0	search with cache (only 1: intros f' k l cvfk eps ep; only 1: destruct (cvfk eps ep) as [N Pn]; only 1: exists (N + k)%nat; only 1: intros n nN; only 1: apply Pn; only 1: apply Nat.le_trans with (N + k)%nat; only 1: auto with arith; only 1: auto with arith).	0.380936145782	322
Coq.Reals.Rseries.Un_growing_shift	40	0.2.11.26	search with cache (only 1: intros m1 H'; only 1: intros n nN; only 1: simpl; only 1: auto).	12.3359160423	27191
Coq.Reals.Binomial.pascal_step1	40
Coq.Reals.Binomial.pascal_step2	40
Coq.Reals.Binomial.pascal_step3	40
Coq.Reals.Binomial.pascal	40
Coq.Reals.Binomial.binomial	40
Coq.Reals.PSeries_reg.Boule_convex	40
Coq.Reals.PSeries_reg.boule_of_interval	40
Coq.Reals.PSeries_reg.boule_in_interval	40
Coq.Reals.PSeries_reg.Ball_in_inter	40
Coq.Reals.PSeries_reg.Boule_center	40
Coq.Reals.PSeries_reg.CVN_CVU	40
Coq.Reals.PSeries_reg.CVU_continuity	40
Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40
Coq.Reals.PSeries_reg.SFL_continuity_pt	40
Coq.Reals.PSeries_reg.SFL_continuity	40
Coq.Reals.PSeries_reg.CVN_R_CVS	40
Coq.Reals.PSeries_reg.CVU_cv	40
Coq.Reals.PSeries_reg.CVU_ext_lim	40
Coq.Reals.PSeries_reg.CVU_derivable	40
Coq.Reals.Ranalysis_reg.AppVar	40
Coq.Reals.MVT.MVT	40
Coq.Reals.MVT.MVT_cor1	40
Coq.Reals.MVT.MVT_cor2	40
Coq.Reals.MVT.MVT_cor3	40
Coq.Reals.MVT.Rolle	40
Coq.Reals.MVT.nonneg_derivative_1	40
Coq.Reals.MVT.nonpos_derivative_0	40
Coq.Reals.MVT.increasing_decreasing_opp	40
Coq.Reals.MVT.nonpos_derivative_1	40
Coq.Reals.MVT.positive_derivative	40
Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	40
Coq.Reals.MVT.negative_derivative	40
Coq.Reals.MVT.null_derivative_0	40
Coq.Reals.MVT.increasing_decreasing	40
Coq.Reals.MVT.null_derivative_1	40
Coq.Reals.MVT.derive_increasing_interv_ax	40
Coq.Reals.MVT.derive_increasing_interv	40
Coq.Reals.MVT.derive_increasing_interv_var	40
Coq.Reals.MVT.IAF	40
Coq.Reals.MVT.IAF_var	40
Coq.Reals.MVT.null_derivative_loc	40
Coq.Reals.MVT.antiderivative_Ucte	40
Coq.Reals.MVT.MVT_abs	40
Coq.Reals.Ranalysis1.continuity_pt_locally_ext	40
Coq.Reals.Ranalysis1.continuity_pt_plus	40
Coq.Reals.Ranalysis1.continuity_pt_opp	40
Coq.Reals.Ranalysis1.continuity_pt_minus	40	0.8.0.1.0.0.0	search with cache (only 1: unfold continuity_pt, plus_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_plus; only 1: assumption; only 1: apply limit_Ropp; only 1: assumption).	2.39723110199	2252
Coq.Reals.Ranalysis1.continuity_pt_mult	40
Coq.Reals.Ranalysis1.continuity_pt_const	40
Coq.Reals.Ranalysis1.continuity_pt_scal	40
Coq.Reals.Ranalysis1.continuity_pt_inv	40
Coq.Reals.Ranalysis1.div_eq_inv	40	4.5	search with cache (only 1: unfold inv_fct; only 1: split).	0.111402988434	107
Coq.Reals.Ranalysis1.continuity_pt_div	40	3.0.5.3.1.0.0.6	search with cache (only 1: unfold continuity_pt; only 1: unfold continue_in; only 1: intros; only 1: apply limit_mul; only 1: assumption; only 1: apply limit_inv; only 1: assumption; only 1: assumption).	5.49918413162	4032
Coq.Reals.Ranalysis1.continuity_pt_comp	40
Coq.Reals.Ranalysis1.continuity_plus	40
Coq.Reals.Ranalysis1.continuity_opp	40
Coq.Reals.Ranalysis1.continuity_minus	40
Coq.Reals.Ranalysis1.continuity_mult	40
Coq.Reals.Ranalysis1.continuity_const	40	0.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0	search with cache (only 1: unfold continuity; only 1: unfold constant, continuity_pt; only 1: unfold continue_in; only 1: unfold limit1_in; only 1: unfold limit_in; only 1: intros; only 1: exists 1; only 1: split; only 1: apply Rlt_0_1; only 1: intros; only 1: generalize (H x x0); only 1: intro; only 1: rewrite H2; only 1: simpl; only 1: rewrite R_dist_eq; only 1: assumption).	3.07263684273	2680
Coq.Reals.Ranalysis1.continuity_scal	40
Coq.Reals.Ranalysis1.continuity_inv	40
Coq.Reals.Ranalysis1.continuity_div	40
Coq.Reals.Ranalysis1.continuity_comp	40
Coq.Reals.Ranalysis1.uniqueness_step1	40
Coq.Reals.Ranalysis1.uniqueness_step2	40
Coq.Reals.Ranalysis1.uniqueness_step3	40
Coq.Reals.Ranalysis1.uniqueness_limite	40
Coq.Reals.Ranalysis1.derive_pt_eq	40
Coq.Reals.Ranalysis1.derive_pt_eq_0	40	1.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).	0.0470600128174	12
Coq.Reals.Ranalysis1.derive_pt_eq_1	40	0.0.1.0.0	search with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derive_pt in H; only 1: rewrite H in H1; only 1: assumption).	0.0447959899902	19
Coq.Reals.Ranalysis1.derive_pt_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_ext	40
Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40
Coq.Reals.Ranalysis1.derivable_derive	40
Coq.Reals.Ranalysis1.derivable_continuous_pt	40
Coq.Reals.Ranalysis1.derivable_continuous	40
Coq.Reals.Ranalysis1.derivable_pt_lim_plus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40
Coq.Reals.Ranalysis1.derivable_pt_lim_const	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	40
Coq.Reals.Ranalysis1.derivable_pt_lim_id	40
Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_lim_comp	40
Coq.Reals.Ranalysis1.derivable_pt_plus	40
Coq.Reals.Ranalysis1.derivable_pt_opp	40
Coq.Reals.Ranalysis1.derivable_pt_minus	40
Coq.Reals.Ranalysis1.derivable_pt_mult	40
Coq.Reals.Ranalysis1.derivable_pt_const	40
Coq.Reals.Ranalysis1.derivable_pt_scal	40
Coq.Reals.Ranalysis1.derivable_pt_id	40
Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_comp	40
Coq.Reals.Ranalysis1.derivable_plus	40
Coq.Reals.Ranalysis1.derivable_opp	40
Coq.Reals.Ranalysis1.derivable_minus	40
Coq.Reals.Ranalysis1.derivable_mult	40
Coq.Reals.Ranalysis1.derivable_const	40	0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: unfold fct_cte, derivable_pt_lim; only 1: unfold derivable, continuity; only 1: unfold derivable_pt; only 1: intro; only 1: exists 0; only 1: apply derivable_pt_lim_const).	0.0287790298462	8
Coq.Reals.Ranalysis1.derivable_scal	40
Coq.Reals.Ranalysis1.derivable_id	40	0.0.0.0.0	search with cache (only 1: unfold derivable, continuity; only 1: unfold derivable_pt; only 1: intro; only 1: exists 1; only 1: apply derivable_pt_lim_id).	0.0243451595306	5
Coq.Reals.Ranalysis1.derivable_Rsqr	40	0.0.0.0.0	search with cache (only 1: unfold derivable, continuity; only 1: unfold derivable_pt; only 1: intro; only 1: exists (2 * x); only 1: apply derivable_pt_lim_Rsqr).	0.0239799022675	5
Coq.Reals.Ranalysis1.derivable_comp	40
Coq.Reals.Ranalysis1.derive_pt_plus	40
Coq.Reals.Ranalysis1.derive_pt_opp	40
Coq.Reals.Ranalysis1.derive_pt_minus	40
Coq.Reals.Ranalysis1.derive_pt_mult	40	1.1.0.0.2.2.1.0.0	search with cache (only 1: intros; only 1: pose proof (derivable_derive f1 x pr1) as H; only 1: apply derive_pt_eq_0; only 1: pose proof (proj2_sig pr1) as H3; only 1: apply derivable_pt_lim_mult; only 1: pose proof (proj2_sig pr2) as H4; only 1: assumption; only 1: pose proof (proj2_sig pr2) as H4; only 1: assumption).	2.05500912666	2177
Coq.Reals.Ranalysis1.derive_pt_const	40	2.26.0	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_const).	0.703372955322	1686
Coq.Reals.Ranalysis1.derive_pt_scal	40
Coq.Reals.Ranalysis1.derive_pt_id	40	4.0.1.2	search with cache (only 1: intro; only 1: unfold id; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_id).	0.120660066605	82
Coq.Reals.Ranalysis1.derive_pt_Rsqr	40	2.4.0	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).	0.0504469871521	25
Coq.Reals.Ranalysis1.derive_pt_comp	40	0.1.2.0.1.1.1.6.0	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_comp; only 1: pose proof (proj2_sig pr1) as H3; only 1: pose proof (proj2_sig pr2) as H4; only 1: assumption; only 1: pose proof (proj2_sig pr1) as H3; only 1: pose proof (proj2_sig pr2) as H4; only 1: assumption).	1.88586401939	3103
Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40
Coq.Reals.Ranalysis1.derivable_pt_pow	40
Coq.Reals.Ranalysis1.derivable_pow	40	0.0.0.0.5	search with cache (only 1: unfold derivable; only 1: intros; only 1: unfold derivable_pt; only 1: exists (INR n * x ^ Init.Nat.pred n); only 1: apply derivable_pt_lim_pow).	0.0368990898132	31
Coq.Reals.Ranalysis1.derive_pt_pow	40
Coq.Reals.Ranalysis1.pr_nu	40	1.7.17.0.0.0.0	search with cache (only 1: intros; only 1: pose proof (derivable_derive f x pr1) as H; only 1: pose proof (derivable_derive (- f)%F x (derivable_pt_opp _ _ pr1)) as H0; only 1: unfold derive_pt in H; only 1: apply derive_pt_eq_0; only 1: pose proof (proj2_sig pr2) as H4; only 1: assumption).	5.80468797684	13525
Coq.Reals.Ranalysis1.deriv_maximum	40
Coq.Reals.Ranalysis1.deriv_minimum	40
Coq.Reals.Ranalysis1.deriv_constant2	40
Coq.Reals.Ranalysis1.nonneg_derivative_0	40
Coq.Reals.SeqProp.growing_cv	40
Coq.Reals.SeqProp.decreasing_growing	40
Coq.Reals.SeqProp.decreasing_cv	40
Coq.Reals.SeqProp.ub_to_lub	40
Coq.Reals.SeqProp.lb_to_glb	40
Coq.Reals.SeqProp.maj_ss	40
Coq.Reals.SeqProp.min_ss	40	0.0.0.0.0.0.2.1.1.2.2.0	search with cache (only 1: intros; only 1: elim H; only 1: intros; only 1: exists x; only 1: unfold is_upper_bound in H0; only 1: unfold is_upper_bound; only 1: intros; only 1: apply H0; only 1: elim H1; only 1: intros; only 1: exists (k + x1)%nat; only 1: assumption).	1.20849585533	1915
Coq.Reals.SeqProp.Wn_decreasing	40
Coq.Reals.SeqProp.Vn_growing	40
Coq.Reals.SeqProp.Vn_Un_Wn_order	40
Coq.Reals.SeqProp.min_maj	40
Coq.Reals.SeqProp.maj_min	40
Coq.Reals.SeqProp.cauchy_maj	40
Coq.Reals.SeqProp.cauchy_opp	40
Coq.Reals.SeqProp.cauchy_min	40
Coq.Reals.SeqProp.maj_cv	40
Coq.Reals.SeqProp.min_cv	40
Coq.Reals.SeqProp.cond_eq	40
Coq.Reals.SeqProp.not_Rlt	40
Coq.Reals.SeqProp.approx_maj	40
Coq.Reals.SeqProp.approx_min	40
Coq.Reals.SeqProp.UL_sequence	40
Coq.Reals.SeqProp.CV_plus	40
Coq.Reals.SeqProp.cv_cvabs	40
Coq.Reals.SeqProp.CV_Cauchy	40
Coq.Reals.SeqProp.maj_by_pos	40
Coq.Reals.SeqProp.CV_mult	40
Coq.Reals.SeqProp.tech9	40
Coq.Reals.SeqProp.tech13	40
Coq.Reals.SeqProp.growing_ineq	40
Coq.Reals.SeqProp.CV_opp	40
Coq.Reals.SeqProp.decreasing_ineq	40
Coq.Reals.SeqProp.CV_minus	40
Coq.Reals.SeqProp.cv_infty_cv_R0	40
Coq.Reals.SeqProp.decreasing_prop	40
Coq.Reals.SeqProp.cv_speed_pow_fact	40
Coq.Reals.Rcomplete.R_complete	40
Coq.Reals.Rtrigo_calc.tan_PI	40
Coq.Reals.Rtrigo_calc.sin_3PI2	40
Coq.Reals.Rtrigo_calc.tan_2PI	40
Coq.Reals.Rtrigo_calc.sin_cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI3_cos_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI6_cos_PI3	40
Coq.Reals.Rtrigo_calc.PI6_RGT_0	40
Coq.Reals.Rtrigo_calc.PI6_RLT_PI2	40
Coq.Reals.Rtrigo_calc.sin_PI6	40
Coq.Reals.Rtrigo_calc.sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.sqrt3_2_neq_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40	21.0.0.0.0	search with cache (only 1: assert (Hyp : 0 < 2); only 1: prove_sup0; only 1: generalize (Rlt_le 0 2 Hyp); only 1: intro H1; only 1: now apply sqrt_lt_R0).	4.6927318573	9617
Coq.Reals.Rtrigo_calc.Rlt_sqrt3_0	40	12.0.1.0.0	search with cache (only 1: assert (Hyp : 0 < 3); only 1: prove_sup0; only 1: generalize (Rlt_le 0 3 Hyp); only 1: intro H1; only 1: now apply sqrt_lt_R0).	4.0201151371	5163
Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	1.0.0.0.0	search with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.029079914093	6
Coq.Reals.Rtrigo_calc.cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI4	40
Coq.Reals.Rtrigo_calc.tan_PI4	40
Coq.Reals.Rtrigo_calc.cos_3PI4	40
Coq.Reals.Rtrigo_calc.sin_3PI4	40
Coq.Reals.Rtrigo_calc.cos_PI6	40
Coq.Reals.Rtrigo_calc.tan_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI3	40
Coq.Reals.Rtrigo_calc.cos_PI3	40
Coq.Reals.Rtrigo_calc.tan_PI3	40	1.0.0.18.10.0	search with cache (only 1: unfold tan; only 1: rewrite sin_PI3_cos_PI6; only 1: rewrite sin_PI6_cos_PI3; only 1: rewrite sin_PI6; only 1: rewrite cos_PI6; only 1: field).	32.4527950287	26515
Coq.Reals.Rtrigo_calc.sin_2PI3	40
Coq.Reals.Rtrigo_calc.cos_2PI3	40
Coq.Reals.Rtrigo_calc.tan_2PI3	40
Coq.Reals.Rtrigo_calc.cos_5PI4	40
Coq.Reals.Rtrigo_calc.sin_5PI4	40
Coq.Reals.Rtrigo_calc.sin_cos5PI4	40	0.0.0.0.3.8.9	search with cache (only 1: replace (5 * (PI / 4)) with (PI / 4 + PI) by field; only 1: rewrite neg_cos; only 1: rewrite neg_sin; only 1: rewrite cos_sin; only 1: replace (PI / 2 + PI / 4) with (- (PI / 4) + PI) by field; only 1: rewrite neg_sin, sin_neg; only 1: ring).	2.74858999252	1310
Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40	0.0.0.0.0.0.5	search with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: prove_sup0; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.273646116257	150
Coq.Reals.Rtrigo_calc.Rgt_2PI_0	40	0.0.0	search with cache (only 1: apply Rmult_lt_0_compat; only 1: prove_sup0; only 1: apply PI_RGT_0).	0.0234470367432	3
Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40
Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40
Coq.Reals.Rtrigo_calc.rad_deg	40
Coq.Reals.Rtrigo_calc.toRad_inj	40
Coq.Reals.Rtrigo_calc.deg_rad	40
Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40
Coq.Reals.Rtrigo_calc.sin_lb_ge_0	40
Coq.Reals.Ranalysis4.derivable_pt_inv	40
Coq.Reals.Ranalysis4.pr_nu_var	40
Coq.Reals.Ranalysis4.pr_nu_var2	40
Coq.Reals.Ranalysis4.derivable_inv	40
Coq.Reals.Ranalysis4.derive_pt_inv	40
Coq.Reals.Ranalysis4.Rabs_derive_1	40
Coq.Reals.Ranalysis4.Rabs_derive_2	40
Coq.Reals.Ranalysis4.Rderivable_pt_abs	40
Coq.Reals.Ranalysis4.Rcontinuity_abs	40
Coq.Reals.Ranalysis4.continuity_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40
Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_finite_sum	40
Coq.Reals.Ranalysis4.derivable_finite_sum	40	0.0.0.0.0.0.0.4.0	search with cache (only 1: intros; only 1: intro; only 1: unfold derivable_pt; only 1: pose proof (derivable_pt_lim_finite_sum An x N) as H; only 1: induction N as [| N HrecN]; only 1: exists 0; only 1: apply H; only 1: exists (sum_f_R0 (fun k : nat => INR (S k) * An (S k) * x ^ k) (Init.Nat.pred (S N))); only 1: apply H).	0.464339017868	302
Coq.Reals.Ranalysis4.derivable_pt_lim_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_lim_sinh	40
Coq.Reals.Ranalysis4.derivable_pt_exp	40
Coq.Reals.Ranalysis4.derivable_pt_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_sinh	40
Coq.Reals.Ranalysis4.derivable_exp	40	0.0.0.0	search with cache (only 1: intro x; only 1: unfold derivable_pt; only 1: exists (exp x); only 1: apply derivable_pt_lim_exp).	0.0228538513184	4
Coq.Reals.Ranalysis4.derivable_cosh	40	0.0.0.1	search with cache (only 1: intro x; only 1: unfold derivable_pt; only 1: exists (sinh x); only 1: apply derivable_pt_lim_cosh).	0.022891998291	5
Coq.Reals.Ranalysis4.derivable_sinh	40	0.0.0.4	search with cache (only 1: intro; only 1: unfold derivable_pt; only 1: exists (cosh x); only 1: apply derivable_pt_lim_sinh).	0.13295507431	25
Coq.Reals.Ranalysis4.derive_pt_exp	40
Coq.Reals.Ranalysis4.derive_pt_cosh	40	2.0.0	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cosh).	0.598216056824	131
Coq.Reals.Ranalysis4.derive_pt_sinh	40	3.0.0	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).	0.591052055359	128
Coq.Reals.Ranalysis4.sinh_lt	40
Coq.Reals.Ranalysis3.derivable_pt_lim_div	40
Coq.Reals.Ranalysis3.derivable_pt_div	40
Coq.Reals.Ranalysis3.derivable_div	40
Coq.Reals.Ranalysis3.derive_pt_div	40
Coq.Reals.DiscrR.Rlt_R0_R2	40
Coq.Reals.DiscrR.IZR_eq	40	33	search with cache (only 1: intuition congruence).	0.634957075119	1978
Coq.Reals.ConstructiveReals.CRlt_asym	40
Coq.Reals.ConstructiveReals.CRlt_proper	40
Coq.Reals.ConstructiveReals.CRle_refl	40
Coq.Reals.ConstructiveReals.CRle_lt_trans	40
Coq.Reals.ConstructiveReals.CRlt_le_trans	40
Coq.Reals.ConstructiveReals.CRle_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans_flip	40
Coq.Reals.ConstructiveReals.CReq_refl	40	0.0.1.0.0.1.21	search with cache (only 1: split; only 1: intros; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H); only 1: intros; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H)).	0.650902986526	1675
Coq.Reals.ConstructiveReals.CReq_sym	40	1.1.8.4.6	search with cache (only 1: simple induction 1; only 1: destruct (CRltLinear R); only 1: split; only 1: contradiction; only 1: contradiction).	3.18524312973	4113
Coq.Reals.ConstructiveReals.CReq_trans	40
Coq.Reals.ConstructiveReals.CR_setoid	40
Coq.Reals.ConstructiveReals.CRplus_0_r	40
Coq.Reals.ConstructiveReals.CRmult_1_r	40
Coq.Reals.ConstructiveReals.CRplus_opp_l	40
Coq.Reals.ConstructiveReals.CRplus_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_l	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_le_reg_l	40	2.8.3.0.0	search with cache (only 1: intros; only 1: intros abs; only 1: apply H; only 1: apply CRplus_lt_compat_l; only 1: exact abs).	0.592386960983	724
Coq.Reals.ConstructiveReals.CRplus_le_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_le_compat	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_l	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_r	40
Coq.Reals.ConstructiveReals.CRopp_involutive	40
Coq.Reals.ConstructiveReals.CRopp_gt_lt_contravar	40
Coq.Reals.ConstructiveReals.CRopp_lt_cancel	40
Coq.Reals.ConstructiveReals.CRopp_plus_distr	40
Coq.Reals.ConstructiveReals.CRmult_plus_distr_l	40
Coq.Reals.ConstructiveReals.CRzero_double	40
Coq.Reals.ConstructiveReals.CRmult_0_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_l	40
Coq.Reals.ConstructiveReals.CRmult_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRinv_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_r	40
Coq.Reals.ConstructiveReals.CRmult_eq_reg_r	40
Coq.Reals.ConstructiveReals.CR_of_Q_proper	40
Coq.Reals.ConstructiveReals.CR_of_Q_zero	40
Coq.Reals.ConstructiveReals.CR_of_Q_opp	40
Coq.Reals.ConstructiveReals.CR_of_Q_le	40
Coq.Reals.ConstructiveReals.CR_of_Q_pos	40
Coq.Reals.ConstructiveReals.CR_cv_above_rat	40
Coq.Reals.ConstructiveReals.CR_cv_below_rat	40
Coq.Reals.ConstructiveReals.CR_cv_const	40
Coq.Reals.ConstructiveCauchyRealsMult.BoundFromZero	40
Coq.Reals.ConstructiveCauchyRealsMult.QCauchySeq_bounded	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_cauchy	40
Coq.Reals.ConstructiveCauchyRealsMult.linear_max	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult	40	57	search with cache (only 1: assumption).	0.386063098907	1702
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_unfold	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc_bounded_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_comm	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_proper_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRingExt	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRing	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_T	40	6	search with cache (only 1: apply CReal_isRingExt).	8.67748188972	251
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40	1.0.0.0.1.0.0.0.1	search with cache (only 1: intros; only 1: apply (CReal_plus_eq_reg_l x); only 1: apply (CRealEq_trans _ 0); only 1: apply CReal_plus_opp_r; only 1: apply CRealEq_sym; only 1: apply (CRealEq_trans _ (y + - y)); only 1: apply CReal_plus_proper_r; only 1: apply H; only 1: apply CReal_plus_opp_r).	28.7635850906	459
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_T	40	0	search with cache (only 1: apply CReal_isRingExt).	0.657812833786	1
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_T	40	0.2.0.1	search with cache (only 1: intros x y H z t H0; only 1: unfold CReal_minus; only 1: rewrite H, H0; only 1: reflexivity).	5.53796696663	68
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0142590999603	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_r	40	4.4	search with cache (only 1: intro; only 1: ring).	4.6564450264	122
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0168409347534	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealArchimedean	40
Coq.Reals.ConstructiveCauchyRealsMult.Rup_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealLtDisjunctEpsilon	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftReal	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftEqual	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealNegShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealPosShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_neg	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv	40	7	search with cache (only 1: assumption).	0.0134558677673	17
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift_eq	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_1	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	40
Coq.Reals.ConstructiveCauchyRealsMult.Rinv_eq_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40	1.7	search with cache (only 1: intros x y z; only 1: apply CReal_mult_proper_l).	2.06016182899	86
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	0.0.0	search with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.0129871368408	3
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_invQ	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealQ_dense	40
Coq.Reals.ConstructiveCauchyRealsMult.inject_Q_mult	40
Coq.Reals.Rtrigo_fun.Alembert_exp	40
Coq.Reals.Alembert.Alembert_C1	40
Coq.Reals.Alembert.Alembert_C2	40
Coq.Reals.Alembert.AlembertC3_step1	40
Coq.Reals.Alembert.AlembertC3_step2	40
Coq.Reals.Alembert.Alembert_C3	40
Coq.Reals.Alembert.Alembert_C4	40
Coq.Reals.Alembert.Alembert_C5	40
Coq.Reals.Alembert.Alembert_C6	40
Coq.Reals.R_sqr.Rsqr_neg	40
Coq.Reals.R_sqr.Rsqr_mult	40	2.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.026447057724	4
Coq.Reals.R_sqr.Rsqr_plus	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0301828384399	2
Coq.Reals.R_sqr.Rsqr_minus	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0303020477295	2
Coq.Reals.R_sqr.Rsqr_neg_minus	40	2.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0260779857635	4
Coq.Reals.R_sqr.Rsqr_1	40	25	search with cache (only 1: ring_Rsqr).	0.373407125473	441
Coq.Reals.R_sqr.Rsqr_gt_0_0	40
Coq.Reals.R_sqr.Rsqr_pos_lt	40	22	search with cache (only 1: auto with real).	6.6481320858	2451
Coq.Reals.R_sqr.Rsqr_div	40
Coq.Reals.R_sqr.Rsqr_eq_0	40
Coq.Reals.R_sqr.Rsqr_minus_plus	40	10.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.078174829483	120
Coq.Reals.R_sqr.Rsqr_plus_minus	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0203628540039	2
Coq.Reals.R_sqr.Rsqr_incr_0	40
Coq.Reals.R_sqr.Rsqr_incr_0_var	40
Coq.Reals.R_sqr.Rsqr_incr_1	40	1.7.5	search with cache (only 1: intro; only 1: unfold Rsqr; only 1: auto with real).	1.34501981735	1675
Coq.Reals.R_sqr.Rsqr_incrst_0	40
Coq.Reals.R_sqr.Rsqr_incrst_1	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_1	40
Coq.Reals.R_sqr.neg_pos_Rsqr_le	40
Coq.Reals.R_sqr.Rsqr_abs	40	2.0.1.2.0	search with cache (only 1: intros; only 1: unfold Rabs; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: ring_Rsqr; only 1: auto with real).	0.104451179504	24
Coq.Reals.R_sqr.Rsqr_le_abs_0	40
Coq.Reals.R_sqr.Rsqr_le_abs_1	40
Coq.Reals.R_sqr.Rsqr_lt_abs_0	40
Coq.Reals.R_sqr.Rsqr_lt_abs_1	40
Coq.Reals.R_sqr.Rsqr_inj	40
Coq.Reals.R_sqr.Rsqr_eq_abs_0	40
Coq.Reals.R_sqr.Rsqr_eq_asb_1	40
Coq.Reals.R_sqr.triangle_rectangle	40
Coq.Reals.R_sqr.triangle_rectangle_lt	40
Coq.Reals.R_sqr.triangle_rectangle_le	40
Coq.Reals.R_sqr.Rsqr_inv	40	2.2.0.0.2.1.0	search with cache (only 1: intro; only 1: intro; only 1: unfold Rsqr; only 1: rewrite Rinv_mult_distr; only 1: reflexivity; only 1: assumption; only 1: assumption).	0.45184803009	652
Coq.Reals.R_sqr.canonical_Rsqr	40
Coq.Reals.R_sqr.Rsqr_eq	40
Coq.Reals.RiemannInt_SF.IZN_var	40
Coq.Reals.RiemannInt_SF.Nzorn	40
Coq.Reals.RiemannInt_SF.StepFun_P1	40
Coq.Reals.RiemannInt_SF.StepFun_P2	40
Coq.Reals.RiemannInt_SF.StepFun_P3	40
Coq.Reals.RiemannInt_SF.StepFun_P4	40
Coq.Reals.RiemannInt_SF.StepFun_P5	40
Coq.Reals.RiemannInt_SF.StepFun_P6	40
Coq.Reals.RiemannInt_SF.StepFun_P7	40
Coq.Reals.RiemannInt_SF.StepFun_P8	40
Coq.Reals.RiemannInt_SF.StepFun_P9	40
Coq.Reals.RiemannInt_SF.StepFun_P10	40
Coq.Reals.RiemannInt_SF.StepFun_P11	40
Coq.Reals.RiemannInt_SF.StepFun_P12	40
Coq.Reals.RiemannInt_SF.StepFun_P13	40
Coq.Reals.RiemannInt_SF.StepFun_P14	40
Coq.Reals.RiemannInt_SF.StepFun_P15	40
Coq.Reals.RiemannInt_SF.StepFun_P16	40
Coq.Reals.RiemannInt_SF.StepFun_P17	40
Coq.Reals.RiemannInt_SF.StepFun_P18	40
Coq.Reals.RiemannInt_SF.StepFun_P19	40
Coq.Reals.RiemannInt_SF.StepFun_P20	40
Coq.Reals.RiemannInt_SF.StepFun_P21	40
Coq.Reals.RiemannInt_SF.StepFun_P22	40
Coq.Reals.RiemannInt_SF.StepFun_P23	40
Coq.Reals.RiemannInt_SF.StepFun_P24	40
Coq.Reals.RiemannInt_SF.StepFun_P25	40
Coq.Reals.RiemannInt_SF.StepFun_P26	40
Coq.Reals.RiemannInt_SF.StepFun_P27	40
Coq.Reals.RiemannInt_SF.StepFun_P28	40
Coq.Reals.RiemannInt_SF.StepFun_P29	40
Coq.Reals.RiemannInt_SF.StepFun_P30	40
Coq.Reals.RiemannInt_SF.StepFun_P31	40
Coq.Reals.RiemannInt_SF.StepFun_P32	40
Coq.Reals.RiemannInt_SF.StepFun_P33	40
Coq.Reals.RiemannInt_SF.StepFun_P34	40
Coq.Reals.RiemannInt_SF.StepFun_P35	40
Coq.Reals.RiemannInt_SF.StepFun_P36	40
Coq.Reals.RiemannInt_SF.StepFun_P37	40
Coq.Reals.RiemannInt_SF.StepFun_P38	40
Coq.Reals.RiemannInt_SF.StepFun_P39	40
Coq.Reals.RiemannInt_SF.StepFun_P40	40
Coq.Reals.RiemannInt_SF.StepFun_P41	40
Coq.Reals.RiemannInt_SF.StepFun_P42	40
Coq.Reals.RiemannInt_SF.StepFun_P43	40
Coq.Reals.RiemannInt_SF.StepFun_P44	40
Coq.Reals.RiemannInt_SF.StepFun_P45	40
Coq.Reals.RiemannInt_SF.StepFun_P46	40
Coq.Reals.Cos_rel.cos_plus_form	40
Coq.Reals.Cos_rel.pow_sqr	40
Coq.Reals.Cos_rel.A1_cvg	40
Coq.Reals.Cos_rel.C1_cvg	40
Coq.Reals.Cos_rel.B1_cvg	40
Coq.Reals.Ranalysis5.f_incr_implies_g_incr_interv	40
Coq.Reals.Ranalysis5.derivable_pt_id_interv	40
Coq.Reals.Ranalysis5.pr_nu_var2_interv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40
Coq.Reals.Ranalysis5.IVT_interv_prelim0	40
Coq.Reals.Ranalysis5.IVT_interv_prelim1	40
Coq.Reals.Ranalysis5.IVT_interv	40
Coq.Reals.Ranalysis5.f_interv_is_interv	40
Coq.Reals.Ranalysis5.continuity_pt_recip_prelim	40
Coq.Reals.Ranalysis5.continuity_pt_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_lim_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1	40	10.0	search with cache (only 1: intros f g lb ub lb_lt_ub f_incr_interv f_eq_g g_wf; only 1: intuition).	0.636667013168	339
Coq.Reals.Ranalysis5.derivable_pt_recip_interv	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40	0.1.0.0.1.0.0.0.0.0.2	search with cache (only 1: intros f g lb ub x lb_lt_ub x_encad f_incr g_wf f_eq_g; only 1: pose proof (f_incr_implies_g_incr_interv f g lb ub lb_lt_ub f_incr f_eq_g g_wf) as Temp; only 1: pose proof (leftinv_is_rightinv_interv f g lb ub f_incr f_eq_g g_wf) as Left_inv; only 1: unfold comp, id in Left_inv; only 1: intuition; only 1: rewrite <- Left_inv with (x := lb); only 1: intuition; only 1: intuition; only 1: rewrite <- Left_inv; only 1: intuition; only 1: intuition).	5.91034793854	1219
Coq.Reals.Ranalysis5.derive_pt_recip_interv	40
Coq.Reals.Ranalysis5.ub_lt_2_pos	40
Coq.Reals.Ranalysis5.mkposreal_lb_ub	40
Coq.Reals.Ranalysis5.derivable_pt_lim_CVU	40
Coq.Reals.AltSeries.CV_ALT_step0	40
Coq.Reals.AltSeries.CV_ALT_step1	40
Coq.Reals.AltSeries.CV_ALT_step2	40
Coq.Reals.AltSeries.CV_ALT_step3	40
Coq.Reals.AltSeries.CV_ALT_step4	40
Coq.Reals.AltSeries.CV_ALT	40
Coq.Reals.AltSeries.alternated_series	40
Coq.Reals.AltSeries.alternated_series_ineq	40
Coq.Reals.AltSeries.PI_tg_pos	40
Coq.Reals.AltSeries.PI_tg_decreasing	40
Coq.Reals.AltSeries.PI_tg_cv	40
Coq.Reals.AltSeries.exist_PI	40
Coq.Reals.AltSeries.Alt_PI_ineq	40
Coq.Reals.AltSeries.Alt_PI_RGT_0	40
Coq.Reals.Rminmax.Rmax_l	40	1.0.1.0.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: intros; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real); only 1: intros; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	0.0269908905029	8
Coq.Reals.Rminmax.Rmax_r	40	1.0.1.0.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: intros; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real); only 1: intros; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	0.0273258686066	8
Coq.Reals.Rminmax.Rmin_l	40	2.0.2.0.0.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: intros; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real); only 1: intros; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	0.0272030830383	10
Coq.Reals.Rminmax.Rmin_r	40	1.2.0.0.0	search with cache (only 1: unfold Rmin; only 1: intros; only 1: destruct Rle_dec as [H'| H']; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real); only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	0.0272839069366	8
Coq.Reals.Rminmax.plus_max_distr_l	40	1.1.0.0.5.0	search with cache (only 1: intros; only 1: apply max_mono; only 1: eauto with *; only 1: repeat red; only 1: unfold Rle; only 1: intuition).	1.03141593933	207
Coq.Reals.Rminmax.plus_max_distr_r	40	0.1.0.0.2.12.4.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply max_unicity; only 1: destruct (max_spec n m); only 1: left; only 1: intuition; only 1: right; only 1: intuition).	15.9193358421	3488
Coq.Reals.Rminmax.plus_min_distr_l	40	0.0.1.6.0	search with cache (only 1: intros; only 1: apply min_mono; only 1: eauto with *; only 1: intros x y; only 1: apply Rplus_le_compat_l).	0.3884100914	80
Coq.Reals.Rminmax.plus_min_distr_r	40	0.0.0.3.0	search with cache (only 1: intros; only 1: rewrite (Rplus_comm n p), (Rplus_comm m p), (Rplus_comm _ p); only 1: apply min_monotone; only 1: intros x y; only 1: apply Rplus_le_compat_l).	0.0294711589813	8
Coq.Reals.Rminmax.opp_max_distr	40	0.0.0.0	search with cache (only 1: intros x y; only 1: apply Rmax_case_strong; only 1: now intros w; rewrite Rmin_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmin_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.0280029773712	4
Coq.Reals.Rminmax.opp_min_distr	40	0.0.0.0	search with cache (only 1: intros x y; only 1: apply Rmin_case_strong; only 1: now intros w; rewrite Rmax_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmax_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.0277671813965	4
Coq.Reals.Rminmax.minus_max_distr_l	40	0.0.0.0.4.1.1.0	search with cache (only 1: intros; only 1: apply max_min_antimonotone; only 1: do 3 red; only 1: intros; only 1: apply Rplus_le_compat_l; only 1: apply Rge_le; only 1: apply Ropp_le_ge_contravar; only 1: auto).	2.27370285988	969
Coq.Reals.Rminmax.minus_max_distr_r	40
Coq.Reals.Rminmax.minus_min_distr_l	40	0.0.0.0.3.1.2.1	search with cache (only 1: intros; only 1: apply min_max_antimonotone; only 1: do 3 red; only 1: intros; only 1: apply Rplus_le_compat_l; only 1: apply Rge_le; only 1: apply Ropp_le_ge_contravar; only 1: auto).	1.22885704041	1943
Coq.Reals.Rminmax.minus_min_distr_r	40
Coq.Reals.Rlimit.eps2_Rgt_R0	40
Coq.Reals.Rlimit.eps2	40	1.7	search with cache (only 1: intros; only 1: field).	0.0314049720764	10
Coq.Reals.Rlimit.eps4	40	21.7	search with cache (only 1: intro H; only 1: field).	0.541174888611	750
Coq.Reals.Rlimit.Rlt_eps2_eps	40	0.0	search with cache (only 1: intros; only 1: lra).	0.0129151344299	2
Coq.Reals.Rlimit.Rlt_eps4_eps	40	0.0	search with cache (only 1: intros; only 1: lra).	0.0131731033325	2
Coq.Reals.Rlimit.prop_eps	40
Coq.Reals.Rlimit.mul_factor_wd	40
Coq.Reals.Rlimit.mul_factor_gt	40
Coq.Reals.Rlimit.mul_factor_gt_f	40
Coq.Reals.Rlimit.tech_limit	40
Coq.Reals.Rlimit.tech_limit_contr	40
Coq.Reals.Rlimit.lim_x	40
Coq.Reals.Rlimit.limit_plus	40
Coq.Reals.Rlimit.limit_Ropp	40
Coq.Reals.Rlimit.limit_minus	40
Coq.Reals.Rlimit.limit_free	40
Coq.Reals.Rlimit.limit_mul	40
Coq.Reals.Rlimit.single_limit	40
Coq.Reals.Rlimit.limit_comp	40
Coq.Reals.Rlimit.limit_inv	40
Coq.Reals.R_sqrt.sqrt_pos	40
Coq.Reals.R_sqrt.sqrt_positivity	40	0.7.4.48.0.0.0	search with cache (only 1: intros x; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [H| H]; only 1: right; only 1: split; only 1: intros; only 1: apply Rsqrt_positivity).	31.0959408283	89751
Coq.Reals.R_sqrt.sqrt_sqrt	40
Coq.Reals.R_sqrt.sqrt_0	40
Coq.Reals.R_sqrt.sqrt_1	40
Coq.Reals.R_sqrt.sqrt_eq_0	40
Coq.Reals.R_sqrt.sqrt_lem_0	40
Coq.Reals.R_sqrt.sqrt_lem_1	40
Coq.Reals.R_sqrt.sqrt_def	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).	0.0373950004578	6
Coq.Reals.R_sqrt.sqrt_square	40
Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	0.0292398929596	5
Coq.Reals.R_sqrt.sqrt_pow2	40
Coq.Reals.R_sqrt.sqrt_Rsqr_abs	40
Coq.Reals.R_sqrt.Rsqr_sqrt	40	0.0.0	search with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x H)).	0.022705078125	3
Coq.Reals.R_sqrt.sqrt_mult_alt	40
Coq.Reals.R_sqrt.sqrt_mult	40
Coq.Reals.R_sqrt.sqrt_lt_R0	40
Coq.Reals.R_sqrt.Rlt_mult_inv_pos	40
Coq.Reals.R_sqrt.Rle_mult_inv_pos	40	0.3.0.0	search with cache (only 1: intros x y H H0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: ring).	0.186737775803	43
Coq.Reals.R_sqrt.sqrt_div_alt	40
Coq.Reals.R_sqrt.sqrt_div	40
Coq.Reals.R_sqrt.sqrt_lt_0_alt	40
Coq.Reals.R_sqrt.sqrt_lt_0	40
Coq.Reals.R_sqrt.sqrt_lt_1_alt	40
Coq.Reals.R_sqrt.sqrt_lt_1	40
Coq.Reals.R_sqrt.sqrt_le_0	40
Coq.Reals.R_sqrt.sqrt_le_1_alt	40
Coq.Reals.R_sqrt.sqrt_le_1	40
Coq.Reals.R_sqrt.sqrt_inj	40
Coq.Reals.R_sqrt.sqrt_less_alt	40
Coq.Reals.R_sqrt.sqrt_less	40
Coq.Reals.R_sqrt.sqrt_more	40
Coq.Reals.R_sqrt.sqrt_cauchy	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_0	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_dec	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_epsilon	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_not_epsilon	40
Coq.Reals.ConstructiveRealsLUB.DDlow_below_up	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit_fix	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit	40
Coq.Reals.ConstructiveRealsLUB.glb_dec_Q	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_glb	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_closed	40
Coq.Reals.ConstructiveRealsLUB.sig_lub	40
Coq.Reals.ConstructiveRealsLUB.CR_sig_lub	40
Coq.Reals.Rderiv.cont_deriv	40
Coq.Reals.Rderiv.Dconst	40
Coq.Reals.Rderiv.Dx	40
Coq.Reals.Rderiv.Dadd	40
Coq.Reals.Rderiv.Dmult	40
Coq.Reals.Rderiv.Dmult_const	40
Coq.Reals.Rderiv.Dopp	40
Coq.Reals.Rderiv.Dminus	40
Coq.Reals.Rderiv.Dx_pow_n	40
Coq.Reals.Rderiv.Dcomp	40
Coq.Reals.Rderiv.D_pow_n	40
Coq.Reals.Cauchy_prod.sum_N_predN	40	2.5.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: elim (Nat.lt_irrefl _ H); only 1: simpl; only 1: reflexivity).	0.330101966858	249
Coq.Reals.Cauchy_prod.sum_plus	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.054181098938	7
Coq.Reals.Cauchy_prod.cauchy_finite	40
Coq.Reals.Rlogic.sig_forall_dec	40
Coq.Reals.Rlogic.not_not_archimedean	40
Coq.Reals.Rlogic.sig_not_dec	40
Coq.Reals.Rtrigo1.CVN_R_cos	40
Coq.Reals.Rtrigo1.continuity_cos	40
Coq.Reals.Rtrigo1.sin_gt_cos_7_8	40
Coq.Reals.Rtrigo1.PI_2_aux	40
Coq.Reals.Rtrigo1.cos_pi2	40
Coq.Reals.Rtrigo1.pi2_int	40
Coq.Reals.Rtrigo1.cos_minus	40
Coq.Reals.Rtrigo1.sin2_cos2	40
Coq.Reals.Rtrigo1.cos2	40
Coq.Reals.Rtrigo1.sin2	40	0.0.0	search with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).	0.0726299285889	3
Coq.Reals.Rtrigo1.cos_PI2	40
Coq.Reals.Rtrigo1.sin_pos_tech	40
Coq.Reals.Rtrigo1.sin_PI2	40
Coq.Reals.Rtrigo1.PI_RGT_0	40	1.0.6	search with cache (only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	0.0296499729156	10
Coq.Reals.Rtrigo1.PI_4	40	0.7.0	search with cache (only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	0.312497138977	53
Coq.Reals.Rtrigo1.PI_neq0	40	0.0.0	search with cache (only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	0.0312221050262	3
Coq.Reals.Rtrigo1.cos_PI	40
Coq.Reals.Rtrigo1.sin_PI	40
Coq.Reals.Rtrigo1.sin_bound	40
Coq.Reals.Rtrigo1.cos_bound	40
Coq.Reals.Rtrigo1.neg_cos	40
Coq.Reals.Rtrigo1.sin_cos	40
Coq.Reals.Rtrigo1.sin_plus	40
Coq.Reals.Rtrigo1.sin_minus	40
Coq.Reals.Rtrigo1.tan_plus	40
Coq.Reals.Rtrigo1.sin_2a	40
Coq.Reals.Rtrigo1.cos_2a	40
Coq.Reals.Rtrigo1.cos_2a_cos	40
Coq.Reals.Rtrigo1.cos_2a_sin	40	0.1.0.0.0.0.0.0.0	search with cache (only 1: intro x; only 1: rewrite double; only 1: unfold Rminus; only 1: rewrite cos_plus; only 1: generalize (sin2_cos2 x); only 1: rewrite double; only 1: intro H1; only 1: rewrite <- H1; only 1: ring_Rsqr).	0.0723268985748	10
Coq.Reals.Rtrigo1.tan_2a	40
Coq.Reals.Rtrigo1.sin_neg	40
Coq.Reals.Rtrigo1.cos_neg	40	0.6.2.1.6.0	search with cache (only 1: intro x; only 1: generalize (cos2 x); only 1: rewrite <- (sin2_cos2 x); only 1: intro H1; only 1: rewrite <- cos_sym; only 1: ring).	2.04747986794	1811
Coq.Reals.Rtrigo1.tan_0	40
Coq.Reals.Rtrigo1.tan_neg	40
Coq.Reals.Rtrigo1.tan_minus	40
Coq.Reals.Rtrigo1.cos_3PI2	40
Coq.Reals.Rtrigo1.sin_2PI	40
Coq.Reals.Rtrigo1.cos_2PI	40
Coq.Reals.Rtrigo1.neg_sin	40	0.1.1.2.0	search with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.302880048752	71
Coq.Reals.Rtrigo1.sin_PI_x	40	0.0.2.0.0.1.0	search with cache (only 1: intro x; only 1: unfold Rminus; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite sin_neg; only 1: rewrite cos_PI; only 1: ring).	0.0665838718414	14
Coq.Reals.Rtrigo1.sin_period	40
Coq.Reals.Rtrigo1.cos_period	40	0.0.0.0.0.0.10.0.2.0.0.0.0	search with cache (only 1: intros x k; only 1: induction k as [| k Hreck]; only 1: simpl; only 1: ring_simplify (x + 2 * 0 * PI); only 1: reflexivity; only 1: replace (x + 2 * INR (S k) * PI) with (x + 2 * INR k * PI + 2 * PI); only 1: rewrite cos_plus; only 1: rewrite sin_2PI; only 1: rewrite cos_2PI; only 1: ring_simplify; only 1: trivial; only 1: rewrite S_INR; only 1: ring).	22.8175690174	16344
Coq.Reals.Rtrigo1.sin_shift	40
Coq.Reals.Rtrigo1.cos_shift	40
Coq.Reals.Rtrigo1.cos_sin	40	0.0.0.9.0	search with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	0.65474486351	230
Coq.Reals.Rtrigo1.PI2_RGT_0	40	0.3.1.0.0	search with cache (only 1: unfold PI; only 1: generalize cos_pi2; only 1: generalize cos_pi2; only 1: destruct pi2_int; only 1: lra).	0.296616792679	52
Coq.Reals.Rtrigo1.SIN_bound	40
Coq.Reals.Rtrigo1.COS_bound	40
Coq.Reals.Rtrigo1.cos_sin_0	40
Coq.Reals.Rtrigo1.cos_sin_0_var	40
Coq.Reals.Rtrigo1.sin_lb_gt_0	40
Coq.Reals.Rtrigo1.SIN	40
Coq.Reals.Rtrigo1.COS	40
Coq.Reals.Rtrigo1._PI2_RLT_0	40	0.3.14	search with cache (only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	0.511563062668	362
Coq.Reals.Rtrigo1.PI4_RLT_PI2	40
Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	1.12	search with cache (only 1: pose proof PI_RGT_0 as H; only 1: lra).	0.151475906372	146
Coq.Reals.Rtrigo1.sin_gt_0	40
Coq.Reals.Rtrigo1.cos_gt_0	40
Coq.Reals.Rtrigo1.sin_ge_0	40
Coq.Reals.Rtrigo1.cos_ge_0	40
Coq.Reals.Rtrigo1.sin_le_0	40
Coq.Reals.Rtrigo1.cos_le_0	40
Coq.Reals.Rtrigo1.sin_lt_0	40
Coq.Reals.Rtrigo1.sin_lt_0_var	40
Coq.Reals.Rtrigo1.cos_lt_0	40
Coq.Reals.Rtrigo1.tan_gt_0	40
Coq.Reals.Rtrigo1.tan_lt_0	40
Coq.Reals.Rtrigo1.cos_ge_0_3PI2	40
Coq.Reals.Rtrigo1.form1	40
Coq.Reals.Rtrigo1.form2	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: rewrite <- (cos_neg q); only 1: replace (- q) with ((p - q) / 2 - (p + q) / 2) by field; only 1: rewrite cos_plus; only 1: rewrite cos_minus; only 1: ring).	0.126034021378	8
Coq.Reals.Rtrigo1.form3	40
Coq.Reals.Rtrigo1.form4	40	0.0.0.0.0.0.0.0.0.2.0.0	search with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: pattern q at 3; only 1: replace q with ((p + q) / 2 - (p - q) / 2); only 1: rewrite sin_plus; only 1: rewrite sin_minus; only 1: ring; only 1: pattern q at 3; only 1: rewrite double_var; only 1: unfold Rdiv; only 1: ring).	8.48977899551	3082
Coq.Reals.Rtrigo1.sin_increasing_0	40
Coq.Reals.Rtrigo1.sin_increasing_1	40
Coq.Reals.Rtrigo1.sin_decreasing_0	40
Coq.Reals.Rtrigo1.sin_decreasing_1	40
Coq.Reals.Rtrigo1.cos_increasing_0	40
Coq.Reals.Rtrigo1.cos_increasing_1	40
Coq.Reals.Rtrigo1.cos_decreasing_0	40
Coq.Reals.Rtrigo1.cos_decreasing_1	40
Coq.Reals.Rtrigo1.tan_diff	40
Coq.Reals.Rtrigo1.tan_increasing_0	40
Coq.Reals.Rtrigo1.tan_increasing_1	40
Coq.Reals.Rtrigo1.sin_incr_0	40
Coq.Reals.Rtrigo1.sin_incr_1	40
Coq.Reals.Rtrigo1.sin_decr_0	40
Coq.Reals.Rtrigo1.sin_decr_1	40
Coq.Reals.Rtrigo1.cos_incr_0	40
Coq.Reals.Rtrigo1.cos_incr_1	40
Coq.Reals.Rtrigo1.cos_decr_0	40
Coq.Reals.Rtrigo1.cos_decr_1	40
Coq.Reals.Rtrigo1.tan_incr_0	40
Coq.Reals.Rtrigo1.tan_incr_1	40
Coq.Reals.Rtrigo1.sin_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_0	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_1	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40
Coq.Reals.PartSum.tech1	40
Coq.Reals.PartSum.tech2	40
Coq.Reals.PartSum.tech3	40
Coq.Reals.PartSum.tech4	40
Coq.Reals.PartSum.tech5	40	7.1	search with cache (only 1: intros; only 1: reflexivity).	0.0255570411682	16
Coq.Reals.PartSum.tech6	40
Coq.Reals.PartSum.tech7	40
Coq.Reals.PartSum.tech11	40
Coq.Reals.PartSum.tech12	40	2.0	search with cache (only 1: intros; only 1: assumption).	0.0467038154602	4
Coq.Reals.PartSum.scal_sum	40	12.0.27.3.6.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: rewrite tech5; only 1: rewrite Rmult_plus_distr_l; only 1: rewrite HrecN; only 1: rewrite tech5; only 1: ring).	23.6813650131	52195
Coq.Reals.PartSum.decomp_sum	40
Coq.Reals.PartSum.plus_sum	40	0.0.0.8.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.305662155151	229
Coq.Reals.PartSum.sum_eq	40	0.0.0.0.0.8.0.1.3.0.0.0.0.1	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: apply H; only 1: apply le_n; only 1: do 2 rewrite tech5; only 1: rewrite HrecN; only 1: rewrite (H (S N)); only 1: ring; only 1: apply le_n; only 1: intros; only 1: apply H; only 1: apply le_S; only 1: assumption).	4.34359002113	4959
Coq.Reals.PartSum.uniqueness_sum	40
Coq.Reals.PartSum.minus_sum	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.06276512146	7
Coq.Reals.PartSum.sum_decomposition	40
Coq.Reals.PartSum.sum_Rle	40
Coq.Reals.PartSum.Rsum_abs	40
Coq.Reals.PartSum.sum_cte	40
Coq.Reals.PartSum.sum_growing	40	1.1.0.7.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: apply H; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (sum_f_R0 An N + Bn (S N)); only 1: apply Rplus_le_compat_l; only 1: apply H; only 1: do 2 rewrite <- (Rplus_comm (Bn (S N))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	5.79992699623	3410
Coq.Reals.PartSum.Rabs_triang_gen	40	0.1.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	0.531709909439	282
Coq.Reals.PartSum.cond_pos_sum	40
Coq.Reals.PartSum.cauchy_abs	40
Coq.Reals.PartSum.cv_cauchy_1	40
Coq.Reals.PartSum.cv_cauchy_2	40
Coq.Reals.PartSum.sum_eq_R0	40	0.0.0.0.0.1.1.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: apply H; only 1: apply le_n; only 1: simpl; only 1: rewrite HrecN; only 1: rewrite (H (S N)); only 1: ring; only 1: apply le_n; only 1: intros; only 1: apply H; only 1: apply le_S; only 1: assumption).	1.76509618759	1825
Coq.Reals.PartSum.sum_incr	40
Coq.Reals.PartSum.sum_cv_maj	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_sym	40
Coq.Reals.ConstructiveCauchyReals.factorDenom	40	0.0.0.10	search with cache (only 1: intros [| n| n]; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.371510982513	127
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_sym	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_cau_r	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_inc	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_max	40
Coq.Reals.ConstructiveCauchyReals.standard_modulus	40
Coq.Reals.ConstructiveCauchyReals.CRealLtEpsilon	40
Coq.Reals.ConstructiveCauchyReals.CRealLtForget	40	0.0.0.0.1.0.0.0.0.0.0.0.0.2.0.0	search with cache (only 1: intros; only 1: assert (exists n : nat, n <> 0%nat /\ (2 # Pos.of_nat n < proj1_sig y n - proj1_sig x n)%Q); only 1: destruct H as [n maj]; only 1: exists (Pos.to_nat n); only 1: split; only 1: intro abs; only 1: destruct (Pos2Nat.is_succ n); only 1: rewrite H in abs; only 1: inversion abs; only 1: rewrite Pos2Nat.id; only 1: apply maj; only 1: destruct H0 as [n maj]; only 1: exists (Pos.of_nat n); only 1: rewrite Nat2Pos.id; only 1: apply maj; only 1: apply maj).	2.03927111626	1842
Coq.Reals.ConstructiveCauchyReals.CRealLt_lpo_dec	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_not_lt	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_diff	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_modindep	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_aboveSig	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above_same	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_asym	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_irrefl	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_refl	40	0.0	search with cache (only 1: intros x abs; only 1: exact (CRealLt_asym x x abs abs)).	0.0171670913696	2
Coq.Reals.ConstructiveCauchyReals.CRealEq_refl	40	0.10.0.10.5.0	search with cache (only 1: intros; only 1: split; only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs); only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs)).	1.800314188	4111
Coq.Reals.ConstructiveCauchyReals.CRealEq_sym	40	9.0.0.1.0.3.0.2	search with cache (only 1: intros; only 1: split; only 1: intro abs; only 1: destruct abs as [n majn]; only 1: apply H; only 1: exists n; only 1: assumption; only 1: apply H).	6.78833317757	6131
Coq.Reals.ConstructiveCauchyReals.CRealLt_dec	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_relT	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealGt_morph	40
Coq.Reals.ConstructiveCauchyReals.CReal_appart_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealLtProp_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealGe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_l	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_r	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_l	40	2.0.2.0.7.0	search with cache (only 1: intros; only 1: intro abs; only 1: apply H0; only 1: apply (CRealLt_morph z z (CRealEq_refl z) x y); only 1: apply H; only 1: assumption).	0.520354032516	431
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_r	40	3.0.1.0.8.0	search with cache (only 1: intros; only 1: intro abs; only 1: apply H0; only 1: apply (CRealLt_morph x y H z z); only 1: apply CRealEq_refl; only 1: assumption).	0.469926834106	419
Coq.Reals.ConstructiveCauchyReals.ConstCauchy	40
Coq.Reals.ConstructiveCauchyReals.inject_Q	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_0_1	40
Coq.Reals.ConstructiveCauchyReals.CReal_injectQPos	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQ	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQopp	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_compare	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_T	40	0.0.0.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: split; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs).	0.754041910172	472
Coq.Reals.ConstructiveCauchyReals.CReal_plus_cauchy	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus	40	21	search with cache (only 1: assumption).	0.0916979312897	208
Coq.Reals.ConstructiveCauchyReals.CReal_plus_nth	40	4.29.25.1	search with cache (only 1: destruct x as [xn xcau]; only 1: intro n; only 1: destruct n; only 1: split).	7.25493478775	15401
Coq.Reals.ConstructiveCauchyReals.CReal_plus_unfold	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp	40	70	search with cache (only 1: auto).	0.482558965683	2581
Coq.Reals.ConstructiveCauchyReals.belowMultiple	40	2.2.4.0.1.0.2.12	search with cache (only 1: intros; only 1: rewrite <- (Nat.mul_1_l n); only 1: apply Nat.mul_le_mono_nonneg; only 1: auto; only 1: auto; only 1: apply Nat.le_0_l; only 1: rewrite Nat.mul_1_l; only 1: apply Nat.le_refl).	2.0112349987	3001
Coq.Reals.ConstructiveCauchyReals.CReal_plus_assoc	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_comm	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_r	40	1.2.1.0.0.0.0	search with cache (only 1: intros; only 1: intro abs; only 1: apply H; only 1: clear H; only 1: do 2 rewrite <- (CReal_plus_comm x); only 1: apply CReal_plus_lt_compat_l; only 1: exact abs).	0.709161996841	125
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_lt_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_l	40	0.0.0.1.0.0.0.1.1.0	search with cache (only 1: intros; only 1: split; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction).	4.7412750721	1655
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_T	40	0.0.0.0.1.0.0.1.0.0.0.7	search with cache (only 1: intros x y H z t H0; only 1: apply (CRealEq_trans _ (x + t)); only 1: destruct H0; only 1: split; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: contradiction; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: contradiction; only 1: apply CReal_plus_proper_r; only 1: apply H).	11.5043461323	3069
Coq.Reals.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_0	40	0.0.0.0.7.2.0.6	search with cache (only 1: apply CRealEq_diff; only 1: intro n; only 1: unfold CReal_plus, CReal_opp, inject_Q, proj1_sig; only 1: unfold Qle; only 1: simpl; only 1: unfold Z.le; only 1: intro absurd; only 1: inversion absurd).	17.6192018986	1015
Coq.Reals.ConstructiveCauchyReals.CReal_opp_plus_distr	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_involutive	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_plus	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_one	40	0	search with cache (only 1: reflexivity).	0.0141079425812	1
Coq.Reals.ConstructiveCauchyReals.inject_Q_lt	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.lt_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.le_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_le	40
Coq.Reals.ConstructiveCauchyReals.inject_Z_plus	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Z	40
Coq.Reals.Rtrigo_reg.continuity_sin	40
Coq.Reals.Rtrigo_reg.CVN_R_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	40
Coq.Reals.Rtrigo_reg.derivable_pt_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_cos	40
Coq.Reals.Rtrigo_reg.derivable_sin	40	1.0.5.4.60	search with cache (only 1: pose proof derivable_pt_lim_sin_0 as H0; only 1: intro; only 1: unfold derivable_pt; only 1: exists (cos x); only 1: apply derivable_pt_lim_sin).	4.43947601318	6223
Coq.Reals.Rtrigo_reg.derivable_cos	40	0.0.0.0.0	search with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (- sin x); only 1: apply derivable_pt_lim_cos).	0.0107200145721	5
Coq.Reals.Rtrigo_reg.derive_pt_sin	40
Coq.Reals.Rtrigo_reg.derive_pt_cos	40	5.0.0	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cos).	0.394948005676	152
Coq.Reals.Cos_plus.Majxy_cv_R0	40
Coq.Reals.Cos_plus.reste1_maj	40
Coq.Reals.Cos_plus.reste2_maj	40
Coq.Reals.Cos_plus.reste1_cv_R0	40
Coq.Reals.Cos_plus.reste2_cv_R0	40
Coq.Reals.Cos_plus.reste_cv_R0	40
Coq.Reals.Cos_plus.cos_plus	40
Coq.Reals.Rgeom.distance_refl	40
Coq.Reals.Rgeom.distance_symm	40	0.0.0.0.0.0.0.2.0.3.0.0.0.0.0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: unfold dist_euc; only 1: apply Rsqr_inj; only 1: apply sqrt_positivity; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: apply sqrt_positivity; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: rewrite Rsqr_sqrt; only 1: rewrite Rsqr_sqrt; only 1: unfold Rsqr; only 1: ring; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr).	17.7547957897	27063
Coq.Reals.Rgeom.law_cosines	40
Coq.Reals.Rgeom.triangle	40
Coq.Reals.Rgeom.translation_0	40
Coq.Reals.Rgeom.isometric_translation	40
Coq.Reals.Rgeom.rotation_0	40
Coq.Reals.Rgeom.rotation_PI2	40
Coq.Reals.Rgeom.isometric_rotation_0	40
Coq.Reals.Rgeom.isometric_rotation	40
Coq.Reals.Rgeom.isometric_rot_trans	40
Coq.Reals.Rgeom.isometric_trans_rot	40
Coq.Reals.Rsqrt_def.dicho_comp	40
Coq.Reals.Rsqrt_def.dicho_lb_growing	40
Coq.Reals.Rsqrt_def.dicho_up_decreasing	40
Coq.Reals.Rsqrt_def.dicho_lb_maj_y	40
Coq.Reals.Rsqrt_def.dicho_lb_maj	40
Coq.Reals.Rsqrt_def.dicho_up_min_x	40
Coq.Reals.Rsqrt_def.dicho_up_min	40
Coq.Reals.Rsqrt_def.dicho_lb_cv	40
Coq.Reals.Rsqrt_def.dicho_up_cv	40
Coq.Reals.Rsqrt_def.dicho_lb_dicho_up	40
Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40	0.10.3	search with cache (only 1: intros; only 1: apply pow_nonzero; only 1: discrR).	0.0659599304199	179
Coq.Reals.Rsqrt_def.pow_2_n_growing	40
Coq.Reals.Rsqrt_def.pow_2_n_infty	40
Coq.Reals.Rsqrt_def.cv_dicho	40
Coq.Reals.Rsqrt_def.continuity_seq	40
Coq.Reals.Rsqrt_def.dicho_lb_car	40
Coq.Reals.Rsqrt_def.dicho_up_car	40	4.0.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: induction n as [| n Hrecn]; only 1: assumption; only 1: simpl; only 1: destruct (sumbool_of_bool (P ((Dichotomy_lb x y P n + Dichotomy_ub x y P n) / 2))) as [Heq| Heq]; only 1: rewrite Heq; only 1: assumption; only 1: rewrite Heq; only 1: assumption).	0.867808103561	803
Coq.Reals.Rsqrt_def.cv_pow_half	40
Coq.Reals.Rsqrt_def.IVT	40
Coq.Reals.Rsqrt_def.IVT_cor	40
Coq.Reals.Rsqrt_def.Rsqrt_exists	40
Coq.Reals.Rsqrt_def.Rsqrt_positivity	40
Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40
Coq.FSets.FMapFullAVL.height_non_negative	40
Coq.FSets.FMapFullAVL.avl_node	40	0	search with cache (only 1: intuition).	0.0212590694427	1
Coq.FSets.FMapFullAVL.height_0	40
Coq.FSets.FMapFullAVL.empty_avl	40	21	search with cache (only 1: trivial).	0.140542030334	208
Coq.FSets.FMapFullAVL.create_avl	40	0.2.0.0.19.1.0	search with cache (only 1: intros; only 1: intuition; only 1: constructor; only 1: auto; only 1: auto; only 1: omega_max; only 1: omega_max).	34.5236880779	11318
Coq.FSets.FMapFullAVL.create_height	40	0	search with cache (only 1: intuition).	0.0180480480194	1
Coq.FSets.FMapFullAVL.bal_avl	40
Coq.FSets.FMapFullAVL.bal_height_1	40
Coq.FSets.FMapFullAVL.bal_height_2	40
Coq.FSets.FMapFullAVL.add_avl_1	40
Coq.FSets.FMapFullAVL.add_avl	40
Coq.FSets.FMapFullAVL.remove_min_avl_1	40
Coq.FSets.FMapFullAVL.remove_min_avl	40
Coq.FSets.FMapFullAVL.merge_avl_1	40
Coq.FSets.FMapFullAVL.merge_avl	40	0.0.0.0.4.0.0.1.0.0.6.3	search with cache (only 1: intros; only 1: functional induction (merge m1 m2); only 1: auto; only 1: auto; only 1: factornode _x _x0 _x1 _x2 _x3 as m1; only 1: generalize (remove_min_avl_1 H0); only 1: rewrite e1; only 1: destruct 1; only 1: apply bal_avl; only 1: auto; only 1: auto; only 1: omega_max).	8.44180107117	4513
Coq.FSets.FMapFullAVL.remove_avl_1	40
Coq.FSets.FMapFullAVL.remove_avl	40
Coq.FSets.FMapFullAVL.join_avl_1	40
Coq.FSets.FMapFullAVL.join_avl	40
Coq.FSets.FMapFullAVL.concat_avl	40
Coq.FSets.FMapFullAVL.split_avl	40
Coq.FSets.FMapFullAVL.map_height	40
Coq.FSets.FMapFullAVL.map_avl	40
Coq.FSets.FMapFullAVL.mapi_height	40	0.0.0.0.0	search with cache (only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0274970531464	5
Coq.FSets.FMapFullAVL.mapi_avl	40
Coq.FSets.FMapFullAVL.map_option_avl	40
Coq.FSets.FMapFullAVL.map2_opt_avl	40
Coq.FSets.FMapFullAVL.map2_avl	40
Coq.FSets.FMapFullAVL.MapsTo_1	40
Coq.FSets.FMapFullAVL.mem_1	40
Coq.FSets.FMapFullAVL.mem_2	40
Coq.FSets.FMapFullAVL.empty_1	40	42.22	search with cache (only 1: intros z Hz; only 1: inversion_clear 1).	4.96738505363	9085
Coq.FSets.FMapFullAVL.is_empty_1	40
Coq.FSets.FMapFullAVL.is_empty_2	40
Coq.FSets.FMapFullAVL.add_1	40
Coq.FSets.FMapFullAVL.add_2	40
Coq.FSets.FMapFullAVL.add_3	40
Coq.FSets.FMapFullAVL.remove_1	40
Coq.FSets.FMapFullAVL.remove_2	40
Coq.FSets.FMapFullAVL.remove_3	40
Coq.FSets.FMapFullAVL.find_1	40
Coq.FSets.FMapFullAVL.find_2	40
Coq.FSets.FMapFullAVL.fold_1	40
Coq.FSets.FMapFullAVL.elements_1	40
Coq.FSets.FMapFullAVL.elements_2	40	6.0.0.3	search with cache (only 1: intros m x e; only 1: unfold elements, MapsTo, eq_key_elt; only 1: rewrite elements_mapsto; only 1: auto).	0.321095943451	369
Coq.FSets.FMapFullAVL.elements_3	40
Coq.FSets.FMapFullAVL.elements_3w	40
Coq.FSets.FMapFullAVL.cardinal_1	40
Coq.FSets.FMapFullAVL.Equivb_Equivb	40
Coq.FSets.FMapFullAVL.equal_1	40
Coq.FSets.FMapFullAVL.equal_2	40	0.0.0.0.1.0.0.0	search with cache (only 1: unfold equal; only 1: intros (m, b, a) (m', b', a') cmp; only 1: rewrite Equivb_Equivb; only 1: simpl in *; only 1: rewrite equal_Equivb; only 1: auto; only 1: auto; only 1: auto).	0.0595600605011	19
Coq.FSets.FMapFullAVL.map_1	40
Coq.FSets.FMapFullAVL.map_2	40
Coq.FSets.FMapFullAVL.mapi_1	40
Coq.FSets.FMapFullAVL.mapi_2	40
Coq.FSets.FMapFullAVL.map2_1	40
Coq.FSets.FMapFullAVL.map2_2	40
Coq.FSets.FMapFullAVL.cons_cardinal_e	40
Coq.FSets.FMapFullAVL.compare_aux_tcc	40
Coq.FSets.FMapFullAVL.cons_Cmp	40
Coq.FSets.FMapFullAVL.compare_aux_Cmp	40
Coq.FSets.FMapFullAVL.compare_Cmp	40
Coq.FSets.FMapFullAVL.compare	40
Coq.FSets.FMapFullAVL.eq_seq	40	1.5.15	search with cache (only 1: intro; only 1: red; only 1: auto with arith).	0.198568105698	377
Coq.FSets.FMapFullAVL.lt_slt	40	1	search with cache (only 1: intuition).	0.0162949562073	2
Coq.FSets.FMapFullAVL.eq_1	40
Coq.FSets.FMapFullAVL.eq_2	40
Coq.FSets.FMapFullAVL.eq_refl	40
Coq.FSets.FMapFullAVL.eq_sym	40
Coq.FSets.FMapFullAVL.eq_trans	40
Coq.FSets.FMapFullAVL.lt_trans	40
Coq.FSets.FMapFullAVL.lt_not_eq	40
Coq.FSets.FMapAVL.MapsTo_In	40	0.0.4.1.8.23.1.7.4	search with cache (only 1: induction m; only 1: inversion 1; only 1: intros; only 1: generalize H; only 1: intros; only 1: inversion_clear H0; only 1: auto; only 1: auto; only 1: auto).	6.46517896652	23929
Coq.FSets.FMapAVL.In_MapsTo	40
Coq.FSets.FMapAVL.In_alt	40	0.1.1.0.1.1.0.1.0.0.0.2.14.25.5.0.58	search with cache (only 1: constructor; only 1: induction 1; only 1: induction m; only 1: inversion_clear H; only 1: inversion_clear H; only 1: auto; only 1: auto; only 1: auto; only 1: induction 1; only 1: exists e; only 1: auto; only 1: destruct IHIn as (e, He); only 1: exists e; only 1: auto; only 1: destruct IHIn as (e, He); only 1: exists e; only 1: auto).	13.6496770382	82022
Coq.FSets.FMapAVL.MapsTo_1	40	0.0.4.15.1.10	search with cache (only 1: intros m Hm x y e; only 1: induction 1; only 1: constructor; only 1: L.MX.order; only 1: auto; only 1: auto).	1.92158579826	3740
Coq.FSets.FMapAVL.In_1	40	0.0.0.0.0.0	search with cache (only 1: induction m; only 1: intuition_in; only 1: intuition_in; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.469874858856	6
Coq.FSets.FMapAVL.In_node_iff	40	4	search with cache (only 1: intuition_in).	0.0844240188599	5
Coq.FSets.FMapAVL.lt_leaf	40	9.31	search with cache (only 1: intros m x f; only 1: intuition_in).	0.583312034607	1864
Coq.FSets.FMapAVL.gt_leaf	40	0.33	search with cache (only 1: intros m x f; only 1: intuition_in).	0.733197927475	1856
Coq.FSets.FMapAVL.lt_tree_node	40	2.4.31.0	search with cache (only 1: intuition_in; only 1: red; only 1: intuition_in; only 1: eauto with ordered_type).	8.25345396996	2387
Coq.FSets.FMapAVL.gt_tree_node	40
Coq.FSets.FMapAVL.lt_left	40	0.0	search with cache (only 1: unfold lt_tree in *; only 1: intuition_in).	0.0265991687775	2
Coq.FSets.FMapAVL.lt_right	40	0	search with cache (only 1: intuition_in).	0.0229849815369	1
Coq.FSets.FMapAVL.gt_left	40	0	search with cache (only 1: intuition_in).	0.0227670669556	1
Coq.FSets.FMapAVL.gt_right	40	0	search with cache (only 1: intuition_in).	0.0226149559021	1
Coq.FSets.FMapAVL.lt_tree_not_in	40	7.0.4.10	search with cache (only 1: intuition_in; only 1: induction m; only 1: intuition_in; only 1: order).	35.1811308861	3853
Coq.FSets.FMapAVL.lt_tree_trans	40	2.0.0.1	search with cache (only 1: induction m; only 1: intuition_in; only 1: intuition_in; only 1: eauto with ordered_type).	0.182548999786	38
Coq.FSets.FMapAVL.gt_tree_not_in	40	0.0.0.0	search with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: order).	0.0275900363922	4
Coq.FSets.FMapAVL.gt_tree_trans	40	0	search with cache (only 1: eauto with ordered_type).	0.035847902298	1
Coq.FSets.FMapAVL.empty_bst	40	2	search with cache (only 1: intuition_in).	0.0163049697876	3
Coq.FSets.FMapAVL.empty_1	40	2.18.0	search with cache (only 1: unfold empty; only 1: intros m x f; only 1: intuition_in).	0.188915014267	450
Coq.FSets.FMapAVL.is_empty_1	40
Coq.FSets.FMapAVL.is_empty_2	40	10.0.5.0.0	search with cache (only 1: destruct m as [| r x e l h]; only 1: simpl; only 1: unfold empty, Empty; only 1: intuition_in; only 1: discriminate).	1.71877193451	1543
Coq.FSets.FMapAVL.mem_1	40
Coq.FSets.FMapAVL.mem_2	40	0.0.0.0.0.9.0.0	search with cache (only 1: intros m x; only 1: functional induction (mem x m); only 1: discriminate; only 1: clearf; only 1: intuition_in; only 1: auto; only 1: clearf; only 1: intuition_in).	0.943280935287	986
Coq.FSets.FMapAVL.find_1	40
Coq.FSets.FMapAVL.find_2	40
Coq.FSets.FMapAVL.find_iff	40
Coq.FSets.FMapAVL.find_in	40	0.0.0.1.0.0.0.0.3.0.0	search with cache (only 1: intros m x; only 1: functional induction (find x m); only 1: intuition_in; only 1: clearf; only 1: constructor 2; only 1: auto; only 1: clearf; only 1: auto; only 1: clearf; only 1: constructor 3; only 1: auto).	1.92812418938	862
Coq.FSets.FMapAVL.in_find	40
Coq.FSets.FMapAVL.find_in_iff	40
Coq.FSets.FMapAVL.not_find_iff	40
Coq.FSets.FMapAVL.find_find	40
Coq.FSets.FMapAVL.find_mapsto_equiv	40
Coq.FSets.FMapAVL.find_in_equiv	40
Coq.FSets.FMapAVL.create_bst	40	2.2.1.1.12.0.8	search with cache (only 1: unfold gt_tree; only 1: intros; only 1: constructor 2; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	12.2933030128	7288
Coq.FSets.FMapAVL.create_in	40	1.1	search with cache (only 1: unfold create; only 1: intuition_in).	0.785781860352	13
Coq.FSets.FMapAVL.bal_bst	40
Coq.FSets.FMapAVL.bal_in	40
Coq.FSets.FMapAVL.bal_mapsto	40
Coq.FSets.FMapAVL.bal_find	40
Coq.FSets.FMapAVL.add_in	40
Coq.FSets.FMapAVL.add_bst	40
Coq.FSets.FMapAVL.add_1	40
Coq.FSets.FMapAVL.add_2	40
Coq.FSets.FMapAVL.add_3	40
Coq.FSets.FMapAVL.add_find	40
Coq.FSets.FMapAVL.remove_min_in	40
Coq.FSets.FMapAVL.remove_min_mapsto	40
Coq.FSets.FMapAVL.remove_min_bst	40
Coq.FSets.FMapAVL.remove_min_gt_tree	40
Coq.FSets.FMapAVL.remove_min_find	40
Coq.FSets.FMapAVL.merge_in	40
Coq.FSets.FMapAVL.merge_mapsto	40
Coq.FSets.FMapAVL.merge_bst	40
Coq.FSets.FMapAVL.remove_in	40
Coq.FSets.FMapAVL.remove_bst	40
Coq.FSets.FMapAVL.remove_1	40
Coq.FSets.FMapAVL.remove_2	40
Coq.FSets.FMapAVL.remove_3	40
Coq.FSets.FMapAVL.join_in	40
Coq.FSets.FMapAVL.join_bst	40
Coq.FSets.FMapAVL.join_find	40
Coq.FSets.FMapAVL.split_in_1	40
Coq.FSets.FMapAVL.split_in_2	40
Coq.FSets.FMapAVL.split_in_3	40
Coq.FSets.FMapAVL.split_bst	40
Coq.FSets.FMapAVL.split_lt_tree	40
Coq.FSets.FMapAVL.split_gt_tree	40
Coq.FSets.FMapAVL.split_find	40
Coq.FSets.FMapAVL.concat_in	40
Coq.FSets.FMapAVL.concat_bst	40
Coq.FSets.FMapAVL.concat_find	40
Coq.FSets.FMapAVL.elements_aux_mapsto	40
Coq.FSets.FMapAVL.elements_mapsto	40
Coq.FSets.FMapAVL.elements_in	40
Coq.FSets.FMapAVL.elements_aux_sort	40
Coq.FSets.FMapAVL.elements_sort	40
Coq.FSets.FMapAVL.elements_nodup	40
Coq.FSets.FMapAVL.elements_aux_cardinal	40
Coq.FSets.FMapAVL.elements_cardinal	40
Coq.FSets.FMapAVL.elements_app	40
Coq.FSets.FMapAVL.elements_node	40
Coq.FSets.FMapAVL.fold_equiv_aux	40	3.6.0.0.0.4.0	search with cache (only 1: induction s as [| l Hl x e r Hr h]; only 1: intuition; only 1: simpl; only 1: intros; only 1: rewrite Hl; only 1: simpl; only 1: auto).	4.05588316917	3784
Coq.FSets.FMapAVL.fold_equiv	40
Coq.FSets.FMapAVL.fold_1	40
Coq.FSets.FMapAVL.flatten_e_elements	40	0.0.0.0.0	search with cache (only 1: unfold elements; only 1: simpl; only 1: intros; only 1: rewrite !elements_app, !app_nil_r, !app_assoc_reverse; only 1: auto).	0.046226978302	5
Coq.FSets.FMapAVL.cons_1	40
Coq.FSets.FMapAVL.cons_IfEq	40
Coq.FSets.FMapAVL.equal_end_IfEq	40
Coq.FSets.FMapAVL.equal_more_IfEq	40
Coq.FSets.FMapAVL.equal_cont_IfEq	40
Coq.FSets.FMapAVL.equal_IfEq	40
Coq.FSets.FMapAVL.Equivb_elements	40
Coq.FSets.FMapAVL.equal_Equivb	40
Coq.FSets.FMapAVL.map_1	40	0.0.0.2.10.4.0.7	search with cache (only 1: intuition; only 1: induction m; only 1: intuition_in; only 1: simpl; only 1: inv MapsTo; only 1: auto; only 1: auto; only 1: auto).	6.38509917259	7470
Coq.FSets.FMapAVL.map_2	40	1.1.0.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	0.0655221939087	10
Coq.FSets.FMapAVL.map_bst	40
Coq.FSets.FMapAVL.mapi_1	40
Coq.FSets.FMapAVL.mapi_2	40	0.0.0.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	0.0667428970337	8
Coq.FSets.FMapAVL.mapi_bst	40
Coq.FSets.FMapAVL.map_option_2	40
Coq.FSets.FMapAVL.map_option_bst	40
Coq.FSets.FMapAVL.map_option_find	40
Coq.FSets.FMapAVL.map2_opt_2	40
Coq.FSets.FMapAVL.map2_opt_bst	40
Coq.FSets.FMapAVL.map2_opt_1	40
Coq.FSets.FMapAVL.map2_bst	40
Coq.FSets.FMapAVL.map2_1	40
Coq.FSets.FMapAVL.map2_2	40
Coq.FSets.FMapAVL.MapsTo_1	40
Coq.FSets.FMapAVL.mem_1	40
Coq.FSets.FMapAVL.mem_2	40
Coq.FSets.FMapAVL.empty_1	40	22.32	search with cache (only 1: intros z Hz; only 1: inversion_clear 1).	1.46167707443	2587
Coq.FSets.FMapAVL.is_empty_1	40
Coq.FSets.FMapAVL.is_empty_2	40
Coq.FSets.FMapAVL.add_1	40
Coq.FSets.FMapAVL.add_2	40
Coq.FSets.FMapAVL.add_3	40
Coq.FSets.FMapAVL.remove_1	40
Coq.FSets.FMapAVL.remove_2	40
Coq.FSets.FMapAVL.remove_3	40
Coq.FSets.FMapAVL.find_1	40
Coq.FSets.FMapAVL.find_2	40
Coq.FSets.FMapAVL.fold_1	40
Coq.FSets.FMapAVL.elements_1	40
Coq.FSets.FMapAVL.elements_2	40	6.0.0.5	search with cache (only 1: intros m x e; only 1: unfold elements, MapsTo, eq_key_elt; only 1: rewrite elements_mapsto; only 1: auto).	0.510885953903	570
Coq.FSets.FMapAVL.elements_3	40	18.0.0.1.0.6.1.0	search with cache (only 1: intros; only 1: unfold elements, MapsTo, eq_key_elt; only 1: unfold Raw.elements; only 1: apply elements_aux_sort; only 1: apply (is_bst m); only 1: auto; only 1: intros; only 1: inversion_clear H).	11.4078669548	12092
Coq.FSets.FMapAVL.elements_3w	40	0.6.0	search with cache (only 1: intros m; only 1: apply PX.Sort_NoDupA; only 1: exact (elements_sort (is_bst m))).	0.021094083786	15
Coq.FSets.FMapAVL.cardinal_1	40	0	search with cache (only 1: exact (fun m : Raw.tree elt => elements_aux_cardinal nil)).	0.00939798355103	1
Coq.FSets.FMapAVL.Equivb_Equivb	40
Coq.FSets.FMapAVL.equal_1	40
Coq.FSets.FMapAVL.equal_2	40	0.0.0.0.1.0.0.0	search with cache (only 1: unfold equal; only 1: intros (m, b) (m', b') cmp; only 1: rewrite Equivb_Equivb; only 1: simpl in *; only 1: rewrite equal_Equivb; only 1: auto; only 1: auto using map_option_bst; only 1: auto using map_option_bst).	0.36163687706	19
Coq.FSets.FMapAVL.map_1	40
Coq.FSets.FMapAVL.map_2	40
Coq.FSets.FMapAVL.mapi_1	40
Coq.FSets.FMapAVL.mapi_2	40
Coq.FSets.FMapAVL.map2_1	40
Coq.FSets.FMapAVL.map2_2	40
Coq.FSets.FMapAVL.cons_Cmp	40
Coq.FSets.FMapAVL.compare_end_Cmp	40	1.2.0.0.0.23.0.0	search with cache (only 1: destruct e2; only 1: red; only 1: firstorder; only 1: red; only 1: red; only 1: red; only 1: red; only 1: auto).	3.57449889183	20627
Coq.FSets.FMapAVL.compare_more_Cmp	40
Coq.FSets.FMapAVL.compare_cont_Cmp	40
Coq.FSets.FMapAVL.compare_Cmp	40
Coq.FSets.FMapAVL.compare	40
Coq.FSets.FMapAVL.eq_seq	40	6.0	search with cache (only 1: intros; only 1: P.intuition_in).	0.02099609375	8
Coq.FSets.FMapAVL.lt_slt	40	1	search with cache (only 1: intuition).	0.0133681297302	2
Coq.FSets.FMapAVL.eq_1	40
Coq.FSets.FMapAVL.eq_2	40
Coq.FSets.FMapAVL.eq_refl	40
Coq.FSets.FMapAVL.eq_sym	40
Coq.FSets.FMapAVL.eq_trans	40
Coq.FSets.FMapAVL.lt_trans	40
Coq.FSets.FMapAVL.lt_not_eq	40
Coq.FSets.FSetFacts.In_eq_iff	40
Coq.FSets.FSetFacts.mem_iff	40	18.3	search with cache (only 1: compute; only 1: intuition).	0.348719120026	773
Coq.FSets.FSetFacts.not_mem_iff	40	22.11.5	search with cache (only 1: compute; only 1: Ndec.eqb2eq; only 1: intuition).	3.03900694847	6706
Coq.FSets.FSetFacts.equal_iff	40	5	search with cache (only 1: intuition).	0.0785338878632	45
Coq.FSets.FSetFacts.subset_iff	40	7	search with cache (only 1: intuition).	0.0464680194855	29
Coq.FSets.FSetFacts.empty_iff	40
Coq.FSets.FSetFacts.is_empty_iff	40	9	search with cache (only 1: intuition).	0.0403528213501	40
Coq.FSets.FSetFacts.singleton_iff	40	2	search with cache (only 1: intuition).	0.0202660560608	15
Coq.FSets.FSetFacts.add_iff	40
Coq.FSets.FSetFacts.add_neq_iff	40
Coq.FSets.FSetFacts.remove_iff	40
Coq.FSets.FSetFacts.remove_neq_iff	40	0.0.0.8.4.0	search with cache (only 1: split; only 1: intro; only 1: apply remove_3 with x; only 1: auto; only 1: apply remove_2; only 1: auto).	0.3108689785	629
Coq.FSets.FSetFacts.union_iff	40	7	search with cache (only 1: intuition).	0.0659010410309	57
Coq.FSets.FSetFacts.inter_iff	40
Coq.FSets.FSetFacts.diff_iff	40
Coq.FSets.FSetFacts.filter_iff	40
Coq.FSets.FSetFacts.for_all_iff	40	7	search with cache (only 1: intuition).	0.054239988327	23
Coq.FSets.FSetFacts.exists_iff	40	9	search with cache (only 1: intuition).	0.0429840087891	23
Coq.FSets.FSetFacts.elements_iff	40	9	search with cache (only 1: intuition).	0.028883934021	32
Coq.FSets.FSetFacts.mem_b	40
Coq.FSets.FSetFacts.empty_b	40
Coq.FSets.FSetFacts.add_b	40
Coq.FSets.FSetFacts.add_neq_b	40	0.0.0.0.0.0.0.0	search with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.117475986481	8
Coq.FSets.FSetFacts.remove_b	40
Coq.FSets.FSetFacts.remove_neq_b	40	0.0.0.0.0.0.0.0	search with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	0.345613002777	8
Coq.FSets.FSetFacts.singleton_b	40
Coq.FSets.FSetFacts.union_b	40
Coq.FSets.FSetFacts.inter_b	40
Coq.FSets.FSetFacts.diff_b	40
Coq.FSets.FSetFacts.elements_b	40
Coq.FSets.FSetFacts.filter_b	40
Coq.FSets.FSetFacts.for_all_b	40
Coq.FSets.FSetFacts.exists_b	40
Coq.FSets.FSetFacts.E_ST	40	8.48.8.8.15	search with cache (only 1: split; only 1: intuition; only 1: intuition; only 1: intro; only 1: eauto).	3.35332608223	18889
Coq.FSets.FSetFacts.Equal_ST	40
Coq.FSets.FSetFacts.In_m	40
Coq.FSets.FSetFacts.is_empty_m	40
Coq.FSets.FSetFacts.Empty_m	40
Coq.FSets.FSetFacts.mem_m	40
Coq.FSets.FSetFacts.singleton_m	40
Coq.FSets.FSetFacts.add_m	40
Coq.FSets.FSetFacts.remove_m	40
Coq.FSets.FSetFacts.union_m	40
Coq.FSets.FSetFacts.inter_m	40
Coq.FSets.FSetFacts.diff_m	40
Coq.FSets.FSetFacts.Subset_m	40
Coq.FSets.FSetFacts.subset_m	40
Coq.FSets.FSetFacts.equal_m	40
Coq.FSets.FSetFacts.Subset_refl	40	0.2.3	search with cache (only 1: unfold Equal, Subset; only 1: intros s s' H; only 1: auto).	0.011390209198	8
Coq.FSets.FSetFacts.Subset_trans	40
Coq.FSets.FSetFacts.In_s_m	40	0.5.0.2.1	search with cache (only 1: intros x y H s s' H0; only 1: generalize (H0 x); only 1: clear H0; only 1: rewrite (In_eq_iff s' H); only 1: intuition).	3.28119301796	1489
Coq.FSets.FSetFacts.Empty_s_m_Proper	40	0.12.4.1	search with cache (only 1: red; only 1: unfold Empty; only 1: intuition; only 1: eauto with set).	0.976190805435	1557
Coq.FSets.FSetFacts.add_s_m_Proper	40	0.0.0.0.2	search with cache (only 1: intros x y H s s' H0 a; only 1: do 2 rewrite add_iff; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.256590127945	23
Coq.FSets.FSetFacts.remove_s_m_Proper	40	1.0.0.0.0	search with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: do 2 rewrite remove_iff; only 1: rewrite H; only 1: intuition).	0.117516040802	6
Coq.FSets.FSetFacts.union_s_m_Proper	40	1.0.9	search with cache (only 1: intros x y H s s' H0 a; only 1: do 2 rewrite union_iff; only 1: intuition).	0.5834441185	220
Coq.FSets.FSetFacts.inter_s_m_Proper	40	0.0.1	search with cache (only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite inter_iff; only 1: intuition).	0.02663397789	4
Coq.FSets.FSetFacts.diff_s_m_Proper	40	0.0.1	search with cache (only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite diff_iff; only 1: intuition).	0.0270318984985	4
Coq.FSets.FSetFacts.filter_equal	40
Coq.FSets.FSetFacts.filter_ext	40
Coq.FSets.FSetFacts.filter_subset	40
Coq.FSets.FSetPositive.In_1	40	2.0.0.2.8.0	search with cache (only 1: intros; only 1: inversion H; only 1: subst y; only 1: inversion H; only 1: inversion H; only 1: auto).	0.354080915451	528
Coq.FSets.FSetPositive.eq_refl	40	10.2	search with cache (only 1: intros EQ; only 1: now subst).	0.0377748012543	109
Coq.FSets.FSetPositive.eq_sym	40	11.7	search with cache (only 1: intros; only 1: now subst).	0.562220096588	1251
Coq.FSets.FSetPositive.eq_trans	40
Coq.FSets.FSetPositive.mem_1	40	5	search with cache (only 1: auto with arith).	0.0100011825562	6
Coq.FSets.FSetPositive.mem_2	40	0.0	search with cache (only 1: unfold In; only 1: trivial).	0.00936007499695	2
Coq.FSets.FSetPositive.mem_Leaf	40	4.1	search with cache (only 1: intros; only 1: auto with arith).	0.0108420848846	7
Coq.FSets.FSetPositive.empty_1	40	8	search with cache (only 1: now subst).	0.0209419727325	27
Coq.FSets.FSetPositive.mem_node	40
Coq.FSets.FSetPositive.is_empty_spec	40
Coq.FSets.FSetPositive.is_empty_1	40
Coq.FSets.FSetPositive.is_empty_2	40	0.0.1	search with cache (only 1: intro; only 1: rewrite is_empty_spec; only 1: trivial).	0.267590045929	50
Coq.FSets.FSetPositive.subset_Leaf_s	40	5.1.3.10	search with cache (only 1: induction s as [| l IHl o r IHr]; only 1: intros EQ; only 1: trivial; only 1: intuition discriminate).	0.270292043686	510
Coq.FSets.FSetPositive.subset_spec	40
Coq.FSets.FSetPositive.subset_1	40
Coq.FSets.FSetPositive.subset_2	40
Coq.FSets.FSetPositive.equal_subset	40
Coq.FSets.FSetPositive.equal_spec	40
Coq.FSets.FSetPositive.equal_1	40	4.0.0.0.0	search with cache (only 1: intros; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: firstorder).	0.0347390174866	14
Coq.FSets.FSetPositive.equal_2	40	0.0.0.0.0.1	search with cache (only 1: intros s s'; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: unfold Equal, Subset; only 1: firstorder).	0.0453579425812	16
Coq.FSets.FSetPositive.eq_dec	40
Coq.FSets.FSetPositive.lex_Opp	40
Coq.FSets.FSetPositive.compare_bool_inv	40
Coq.FSets.FSetPositive.compare_inv	40
Coq.FSets.FSetPositive.lex_Eq	40
Coq.FSets.FSetPositive.compare_bool_Eq	40
Coq.FSets.FSetPositive.compare_equal	40
Coq.FSets.FSetPositive.compare_gt	40
Coq.FSets.FSetPositive.compare_eq	40
Coq.FSets.FSetPositive.compare	40
Coq.FSets.FSetPositive.ct_cxe	40
Coq.FSets.FSetPositive.ct_xce	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0152130126953	4
Coq.FSets.FSetPositive.ct_lxl	40	0.4.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0143580436707	8
Coq.FSets.FSetPositive.ct_gxg	40	6.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0141270160675	10
Coq.FSets.FSetPositive.ct_xll	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0146110057831	4
Coq.FSets.FSetPositive.ct_xgg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0147819519043	4
Coq.FSets.FSetPositive.ct_lex	40
Coq.FSets.FSetPositive.ct_compare_bool	40
Coq.FSets.FSetPositive.compare_x_Leaf	40	0.0.0.0.0.0.4	search with cache (only 1: induction s as [| l IHl o r IHr]; only 1: simpl; only 1: tauto; only 1: unfold compare_fun, equal; only 1: case is_empty; only 1: intuition discriminate; only 1: intuition discriminate).	0.0737729072571	82
Coq.FSets.FSetPositive.compare_empty_x	40
Coq.FSets.FSetPositive.compare_x_empty	40
Coq.FSets.FSetPositive.ct_compare_fun	40
Coq.FSets.FSetPositive.lt_trans	40
Coq.FSets.FSetPositive.lt_not_eq	40
Coq.FSets.FSetPositive.add_spec	40
Coq.FSets.FSetPositive.add_1	40
Coq.FSets.FSetPositive.add_2	40	7.0.1	search with cache (only 1: intros; only 1: apply <- add_spec; only 1: intuition congruence).	0.266160011292	164
Coq.FSets.FSetPositive.add_3	40
Coq.FSets.FSetPositive.remove_spec	40
Coq.FSets.FSetPositive.remove_1	40
Coq.FSets.FSetPositive.remove_2	40	1.1.1	search with cache (only 1: intros s x y H; only 1: rewrite remove_spec; only 1: tauto).	0.0521099567413	27
Coq.FSets.FSetPositive.remove_3	40
Coq.FSets.FSetPositive.singleton_1	40
Coq.FSets.FSetPositive.singleton_2	40	0.0.0.0.0.0	search with cache (only 1: unfold singleton; only 1: intros x y; only 1: rewrite add_spec; only 1: unfold In; only 1: rewrite mem_Leaf; only 1: intuition discriminate).	0.0283699035645	6
Coq.FSets.FSetPositive.union_spec	40
Coq.FSets.FSetPositive.union_1	40
Coq.FSets.FSetPositive.union_2	40
Coq.FSets.FSetPositive.union_3	40	1.3.0.0.0.0	search with cache (only 1: intros; only 1: apply <- union_spec; only 1: apply -> union_spec; only 1: apply <- union_spec; only 1: unfold In; only 1: intuition congruence).	0.0714499950409	31
Coq.FSets.FSetPositive.inter_spec	40
Coq.FSets.FSetPositive.inter_1	40
Coq.FSets.FSetPositive.inter_2	40	1.0.0	search with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.0177621841431	4
Coq.FSets.FSetPositive.inter_3	40	2.0.1	search with cache (only 1: intros; only 1: rewrite inter_spec; only 1: tauto).	0.192571878433	140
Coq.FSets.FSetPositive.diff_spec	40
Coq.FSets.FSetPositive.diff_1	40
Coq.FSets.FSetPositive.diff_2	40	0.0.0	search with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.0181879997253	3
Coq.FSets.FSetPositive.diff_3	40	0.0.0.0.1	search with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: split; only 1: tauto; only 1: tauto).	0.254554986954	149
Coq.FSets.FSetPositive.fold_1	40
Coq.FSets.FSetPositive.cardinal_1	40
Coq.FSets.FSetPositive.xfilter_spec	40
Coq.FSets.FSetPositive.filter_1	40
Coq.FSets.FSetPositive.filter_2	40	0.0.0.0	search with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	0.0222380161285	4
Coq.FSets.FSetPositive.filter_3	40	0.0.0.0	search with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	0.026447057724	4
Coq.FSets.FSetPositive.xforall_spec	40
Coq.FSets.FSetPositive.for_all_1	40
Coq.FSets.FSetPositive.for_all_2	40	0.0.0.0	search with cache (only 1: intros s f _; only 1: unfold for_all; only 1: rewrite xforall_spec; only 1: trivial).	0.0212697982788	4
Coq.FSets.FSetPositive.xexists_spec	40
Coq.FSets.FSetPositive.exists_1	40
Coq.FSets.FSetPositive.exists_2	40	0.0.0.0	search with cache (only 1: intros s f _; only 1: unfold exists_; only 1: rewrite xexists_spec; only 1: trivial).	0.0205481052399	4
Coq.FSets.FSetPositive.partition_filter	40
Coq.FSets.FSetPositive.partition_1	40
Coq.FSets.FSetPositive.partition_2	40	0.0.0	search with cache (only 1: intros; only 1: rewrite partition_filter; only 1: apply eq_refl).	0.0156190395355	3
Coq.FSets.FSetPositive.xelements_spec	40
Coq.FSets.FSetPositive.elements_1	40
Coq.FSets.FSetPositive.elements_2	40
Coq.FSets.FSetPositive.lt_rev_append	40
Coq.FSets.FSetPositive.elements_3	40
Coq.FSets.FSetPositive.elements_3w	40
Coq.FSets.FSetPositive.choose_1	40
Coq.FSets.FSetPositive.choose_2	40
Coq.FSets.FSetPositive.choose_empty	40
Coq.FSets.FSetPositive.choose_3'	40
Coq.FSets.FSetPositive.choose_3	40
Coq.FSets.FSetPositive.min_elt_1	40
Coq.FSets.FSetPositive.min_elt_3	40
Coq.FSets.FSetPositive.min_elt_2	40
Coq.FSets.FSetPositive.max_elt_1	40
Coq.FSets.FSetPositive.max_elt_3	40
Coq.FSets.FSetPositive.max_elt_2	40
Coq.FSets.FMapPositive.append_assoc_0	40
Coq.FSets.FMapPositive.append_assoc_1	40	0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction i; only 1: intros; only 1: destruct j; only 1: simpl; only 1: rewrite (IHi j~1); only 1: auto; only 1: simpl; only 1: rewrite (IHi j~0); only 1: auto; only 1: simpl; only 1: rewrite <- (IHi 1); only 1: auto; only 1: intros; only 1: destruct j; only 1: simpl; only 1: rewrite (IHi j~1); only 1: auto; only 1: simpl; only 1: rewrite (IHi j~0); only 1: auto; only 1: simpl; only 1: rewrite <- (IHi 1); only 1: auto; only 1: simpl; only 1: auto).	18.3162059784	36617
Coq.FSets.FMapPositive.append_neutral_r	40
Coq.FSets.FMapPositive.append_neutral_l	40	0.0.1.0.1.0.0	search with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	0.0248548984528	9
Coq.FSets.FMapPositive.gempty	40
Coq.FSets.FMapPositive.gss	40
Coq.FSets.FMapPositive.gleaf	40	0.0.0.0.0.0.0	search with cache (only 1: destruct i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0262751579285	7
Coq.FSets.FMapPositive.gso	40
Coq.FSets.FMapPositive.rleaf	40	0.0.0.8	search with cache (only 1: destruct i; only 1: auto; only 1: auto; only 1: auto).	0.059839963913	65
Coq.FSets.FMapPositive.grs	40
Coq.FSets.FMapPositive.gro	40
Coq.FSets.FMapPositive.xelements_correct	40
Coq.FSets.FMapPositive.elements_correct	40
Coq.FSets.FMapPositive.xfind_left	40
Coq.FSets.FMapPositive.xelements_ii	40
Coq.FSets.FMapPositive.xelements_io	40
Coq.FSets.FMapPositive.xelements_oo	40
Coq.FSets.FMapPositive.xelements_oi	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct o; only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: destruct (in_inv H0); only 1: congruence; only 1: apply (IHm2 _ _ _ H1); only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: apply (IHm2 _ _ _ H0)).	6.64846396446	5678
Coq.FSets.FMapPositive.xelements_ih	40
Coq.FSets.FMapPositive.xelements_oh	40
Coq.FSets.FMapPositive.xelements_hi	40
Coq.FSets.FMapPositive.xelements_ho	40
Coq.FSets.FMapPositive.find_xfind_h	40	1.0.0.0.0.0.2	search with cache (only 1: destruct i; only 1: simpl in *; only 1: auto; only 1: simpl in *; only 1: auto; only 1: simpl in *; only 1: auto).	0.0319831371307	10
Coq.FSets.FMapPositive.xelements_complete	40
Coq.FSets.FMapPositive.elements_complete	40
Coq.FSets.FMapPositive.cardinal_1	40
Coq.FSets.FMapPositive.mem_find	40
Coq.FSets.FMapPositive.Empty_alt	40
Coq.FSets.FMapPositive.Empty_Node	40
Coq.FSets.FMapPositive.mem_1	40
Coq.FSets.FMapPositive.mem_2	40
Coq.FSets.FMapPositive.MapsTo_1	40	5.0.9.6	search with cache (only 1: intuition; only 1: compute in H0; only 1: rewrite H in H0; only 1: auto).	1.04610514641	1390
Coq.FSets.FMapPositive.find_1	40	2.2.1	search with cache (only 1: intros; only 1: rewrite <- H; only 1: auto).	0.0234727859497	8
Coq.FSets.FMapPositive.find_2	40	0.0	search with cache (only 1: unfold MapsTo; only 1: auto).	0.0164661407471	2
Coq.FSets.FMapPositive.empty_1	40	4.6	search with cache (only 1: rewrite Empty_alt; only 1: exact gempty).	0.176733016968	199
Coq.FSets.FMapPositive.is_empty_1	40
Coq.FSets.FMapPositive.is_empty_2	40
Coq.FSets.FMapPositive.add_1	40
Coq.FSets.FMapPositive.add_2	40
Coq.FSets.FMapPositive.add_3	40	0.0.1.4.0	search with cache (only 1: unfold MapsTo; only 1: intro H; only 1: rewrite gso; only 1: auto; only 1: auto).	0.0811641216278	48
Coq.FSets.FMapPositive.remove_1	40
Coq.FSets.FMapPositive.remove_2	40
Coq.FSets.FMapPositive.remove_3	40
Coq.FSets.FMapPositive.elements_1	40
Coq.FSets.FMapPositive.elements_2	40
Coq.FSets.FMapPositive.xelements_bits_lt_1	40
Coq.FSets.FMapPositive.xelements_bits_lt_2	40
Coq.FSets.FMapPositive.xelements_sort	40
Coq.FSets.FMapPositive.elements_3	40
Coq.FSets.FMapPositive.elements_3w	40
Coq.FSets.FMapPositive.xgmapi	40
Coq.FSets.FMapPositive.gmapi	40
Coq.FSets.FMapPositive.mapi_1	40
Coq.FSets.FMapPositive.mapi_2	40
Coq.FSets.FMapPositive.map_1	40
Coq.FSets.FMapPositive.map_2	40	0.0.0.0.1.0.0.0.0.0.0.0.1	search with cache (only 1: unfold map; only 1: intros; only 1: apply mem_2; only 1: rewrite mem_find; only 1: destruct H as (v, H); only 1: generalize (find_1 H); only 1: clear H; only 1: intros; only 1: rewrite gmapi in H; only 1: destruct (find x m); only 1: auto; only 1: simpl in *; only 1: discriminate).	2.97551202774	2684
Coq.FSets.FMapPositive.xgmap2_l	40
Coq.FSets.FMapPositive.xgmap2_r	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction i; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	16.6883721352	15982
Coq.FSets.FMapPositive.gmap2	40
Coq.FSets.FMapPositive.map2_1	40
Coq.FSets.FMapPositive.map2_2	40
Coq.FSets.FMapPositive.xfoldi_1	40
Coq.FSets.FMapPositive.fold_1	40
Coq.FSets.FMapPositive.equal_1	40
Coq.FSets.FMapPositive.equal_2	40
Coq.FSets.FMapPositive.gsspec	40
Coq.FSets.FMapPositive.gsident	40
Coq.FSets.FMapPositive.xmap2_lr	40	1.9.2.1.0.7	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intuition; only 1: congruence).	7.85712504387	13656
Coq.FSets.FMapPositive.map2_commut	40
Coq.FSets.FMapFacts.eq_bool_alt	40
Coq.FSets.FMapFacts.eq_option_alt	40
Coq.FSets.FMapFacts.MapsTo_fun	40
Coq.FSets.FMapFacts.In_iff	40
Coq.FSets.FMapFacts.MapsTo_iff	40	1.7.0.7.0	search with cache (only 1: split; only 1: intros; only 1: apply (MapsTo_1 H H0); only 1: intros; only 1: apply (MapsTo_1 (E.eq_sym H) H0)).	0.334342002869	499
Coq.FSets.FMapFacts.mem_in_iff	40
Coq.FSets.FMapFacts.not_mem_in_iff	40
Coq.FSets.FMapFacts.In_dec	40
Coq.FSets.FMapFacts.find_mapsto_iff	40	5.2	search with cache (only 1: intros; only 1: intuition).	0.0177068710327	9
Coq.FSets.FMapFacts.not_find_in_iff	40
Coq.FSets.FMapFacts.in_find_iff	40
Coq.FSets.FMapFacts.equal_iff	40
Coq.FSets.FMapFacts.empty_mapsto_iff	40
Coq.FSets.FMapFacts.empty_in_iff	40	0.1.1.2.6.7.0	search with cache (only 1: intuition; only 1: elim H; only 1: intros; only 1: elim H; only 1: clear H H0; only 1: intuition; only 1: apply (empty_1 H)).	4.23385906219	4085
Coq.FSets.FMapFacts.is_empty_iff	40	0	search with cache (only 1: intuition).	0.0193128585815	1
Coq.FSets.FMapFacts.add_mapsto_iff	40
Coq.FSets.FMapFacts.add_in_iff	40
Coq.FSets.FMapFacts.add_neq_mapsto_iff	40	0.0.0.7	search with cache (only 1: intuition; only 1: apply add_3 with x e; only 1: auto; only 1: auto).	0.102929115295	70
Coq.FSets.FMapFacts.add_neq_in_iff	40
Coq.FSets.FMapFacts.remove_mapsto_iff	40
Coq.FSets.FMapFacts.remove_in_iff	40
Coq.FSets.FMapFacts.remove_neq_mapsto_iff	40	0.1.0.6.0.0.0	search with cache (only 1: intros; only 1: split; only 1: intros; only 1: apply remove_3 with x; only 1: auto; only 1: apply remove_2; only 1: auto).	0.302576065063	291
Coq.FSets.FMapFacts.remove_neq_in_iff	40	0.0.2.0.0.1.13.0.0.1	search with cache (only 1: split; only 1: intros (e', H0); only 1: exists e'; only 1: apply remove_3 with x; only 1: auto; only 1: intros (e', H0); only 1: exists e'; only 1: apply remove_2; only 1: auto; only 1: auto).	2.72108888626	7560
Coq.FSets.FMapFacts.elements_mapsto_iff	40
Coq.FSets.FMapFacts.elements_in_iff	40	11.0.3.5.0.1.3.5.0.9	search with cache (only 1: unfold In; only 1: split; only 1: intros (e, H); only 1: exists e; only 1: apply elements_1; only 1: auto; only 1: intros (e, H); only 1: exists e; only 1: apply elements_2; only 1: auto).	21.2122080326	64340
Coq.FSets.FMapFacts.map_mapsto_iff	40
Coq.FSets.FMapFacts.map_in_iff	40
Coq.FSets.FMapFacts.mapi_in_iff	40
Coq.FSets.FMapFacts.mapi_inv	40
Coq.FSets.FMapFacts.mapi_1bis	40
Coq.FSets.FMapFacts.mapi_mapsto_iff	40
Coq.FSets.FMapFacts.mem_find_b	40	0.0.0.0.0.1.8.6.0.39.0	search with cache (only 1: intros; only 1: case_eq (find x m); only 1: intros; only 1: apply mem_1; only 1: exists e; only 1: apply find_2; only 1: auto with map; only 1: rewrite <- not_find_in_iff, mem_in_iff; only 1: destruct (mem x m); only 1: intuition; only 1: intuition).	15.3862609863	17047
Coq.FSets.FMapFacts.mem_b	40
Coq.FSets.FMapFacts.find_o	40
Coq.FSets.FMapFacts.empty_o	40	1.2.9.9.0.0.4.1	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff; only 1: intuition; only 1: rewrite empty_mapsto_iff in H; only 1: elim H; only 1: discriminate).	3.33011507988	6402
Coq.FSets.FMapFacts.empty_a	40
Coq.FSets.FMapFacts.add_eq_o	40	0.1	search with cache (only 1: intros; only 1: auto with map).	0.0138871669769	3
Coq.FSets.FMapFacts.add_neq_o	40	1.12.1.3.8.1	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intros; only 1: rewrite <- 2!find_mapsto_iff; only 1: intuition; only 1: apply (add_3 H H0)).	1.60835599899	2845
Coq.FSets.FMapFacts.add_o	40	0.0.0.0.0.0.18.0	search with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: auto with map; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- 2!find_mapsto_iff; only 1: apply add_neq_mapsto_iff; only 1: auto).	4.76261997223	4670
Coq.FSets.FMapFacts.add_eq_b	40
Coq.FSets.FMapFacts.add_neq_b	40
Coq.FSets.FMapFacts.add_b	40
Coq.FSets.FMapFacts.remove_eq_o	40
Coq.FSets.FMapFacts.remove_neq_o	40	0.2.0.1.0	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).	0.0486340522766	15
Coq.FSets.FMapFacts.remove_o	40	3.4.0.0	search with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: auto with map; only 1: auto with map).	0.209766864777	86
Coq.FSets.FMapFacts.remove_eq_b	40
Coq.FSets.FMapFacts.remove_neq_b	40
Coq.FSets.FMapFacts.remove_b	40	0.0.0.0.0.0.0.0.0.0.1.0.4.0	search with cache (only 1: intros; only 1: unfold eqb; only 1: destruct (eq_dec x y); only 1: rewrite mem_find_b; only 1: rewrite remove_eq_o; only 1: rewrite mem_find_b; only 1: simpl; only 1: auto; only 1: auto; only 1: do 2 rewrite mem_find_b; only 1: rewrite remove_neq_o; only 1: simpl; only 1: auto; only 1: auto).	26.2420611382	15213
Coq.FSets.FMapFacts.map_o	40
Coq.FSets.FMapFacts.map_b	40
Coq.FSets.FMapFacts.mapi_b	40
Coq.FSets.FMapFacts.mapi_o	40
Coq.FSets.FMapFacts.map2_1bis	40
Coq.FSets.FMapFacts.elements_o	40
Coq.FSets.FMapFacts.elements_b	40
Coq.FSets.FMapFacts.Equal_mapsto_iff	40
Coq.FSets.FMapFacts.Equal_Equiv	40
Coq.FSets.FMapFacts.Equiv_Equivb	40
Coq.FSets.FMapFacts.Equal_Equivb	40
Coq.FSets.FMapFacts.Equal_Equivb_eqdec	40
Coq.FSets.FMapFacts.Equal_refl	40	0.2.1.2.0	search with cache (only 1: intros; only 1: rewrite Equal_mapsto_iff; only 1: intros; only 1: apply MapsTo_iff; only 1: dintuition).	0.0557169914246	25
Coq.FSets.FMapFacts.Equal_sym	40	0.0.0.4	search with cache (only 1: intros m1 m2; only 1: intros; only 1: intro e; only 1: auto).	0.0138149261475	8
Coq.FSets.FMapFacts.Equal_trans	40	2.4.3.0.4	search with cache (only 1: intros EQ; only 1: unfold Equal; only 1: symmetry; only 1: rewrite <- H0; only 1: eauto).	0.63803601265	387
Coq.FSets.FMapFacts.Equal_ST	40	1	search with cache (only 1: dintuition).	0.0333189964294	2
Coq.FSets.FMapFacts.In_m_Proper	40
Coq.FSets.FMapFacts.MapsTo_m_Proper	40
Coq.FSets.FMapFacts.Empty_m_Proper	40
Coq.FSets.FMapFacts.is_empty_m_Proper	40
Coq.FSets.FMapFacts.mem_m_Proper	40
Coq.FSets.FMapFacts.find_m_Proper	40	0.0.5.6.8.0	search with cache (only 1: intros k k' Hk m m' Hm; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- 2!find_mapsto_iff; only 1: rewrite (MapsTo_iff m e Hk), find_mapsto_iff, find_mapsto_iff, Hm; only 1: intuition).	5.26007509232	4152
Coq.FSets.FMapFacts.add_m_Proper	40
Coq.FSets.FMapFacts.remove_m_Proper	40
Coq.FSets.FMapFacts.map_m_Proper	40
Coq.FSets.FMapFacts.eqk_equiv	40
Coq.FSets.FMapFacts.eqke_equiv	40
Coq.FSets.FMapFacts.InA_eqke_eqk	40
Coq.FSets.FMapFacts.NoDupA_eqk_eqke	40
Coq.FSets.FMapFacts.findA_rev	40
Coq.FSets.FMapFacts.elements_Empty	40
Coq.FSets.FMapFacts.elements_empty	40
Coq.FSets.FMapFacts.of_list_1	40
Coq.FSets.FMapFacts.of_list_1b	40
Coq.FSets.FMapFacts.of_list_2	40
Coq.FSets.FMapFacts.of_list_3	40
Coq.FSets.FMapFacts.fold_spec_right	40
Coq.FSets.FMapFacts.fold_rec	40
Coq.FSets.FMapFacts.fold_rec_bis	40
Coq.FSets.FMapFacts.fold_rec_nodep	40	1.0.0.0.1.1	search with cache (only 1: intros A P f i m Hempty Hstep; only 1: apply fold_rec; only 1: intros; only 1: auto; only 1: intros; only 1: auto).	0.0524849891663	36
Coq.FSets.FMapFacts.fold_rec_weak	40
Coq.FSets.FMapFacts.fold_rel	40
Coq.FSets.FMapFacts.map_induction	40
Coq.FSets.FMapFacts.map_induction_bis	40
Coq.FSets.FMapFacts.fold_identity	40
Coq.FSets.FMapFacts.fold_init	40
Coq.FSets.FMapFacts.fold_Empty	40
Coq.FSets.FMapFacts.fold_commutes	40
Coq.FSets.FMapFacts.fold_Equal	40
Coq.FSets.FMapFacts.fold_Equal2	40
Coq.FSets.FMapFacts.fold_Add	40
Coq.FSets.FMapFacts.fold_add	40
Coq.FSets.FMapFacts.cardinal_fold	40
Coq.FSets.FMapFacts.cardinal_Empty	40
Coq.FSets.FMapFacts.Equal_cardinal	40
Coq.FSets.FMapFacts.cardinal_1	40
Coq.FSets.FMapFacts.cardinal_2	40	0.0.0.0.1.1.1.7.8.9	search with cache (only 1: intros m Hsame; only 1: compute; only 1: intros k Hnodup; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_Add; only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto).	15.9941711426	18964
Coq.FSets.FMapFacts.cardinal_inv_1	40	0.1.17	search with cache (only 1: intros k; only 1: rewrite <- cardinal_Empty; only 1: auto).	1.03828191757	1095
Coq.FSets.FMapFacts.cardinal_inv_2	40
Coq.FSets.FMapFacts.cardinal_inv_2b	40
Coq.FSets.FMapFacts.filter_iff	40
Coq.FSets.FMapFacts.for_all_iff	40
Coq.FSets.FMapFacts.exists_iff	40
Coq.FSets.FMapFacts.Disjoint_alt	40
Coq.FSets.FMapFacts.partition_iff_1	40
Coq.FSets.FMapFacts.partition_iff_2	40
Coq.FSets.FMapFacts.partition_Partition	40
Coq.FSets.FMapFacts.Partition_In	40
Coq.FSets.FMapFacts.Disjoint_sym	40	0.2.0.2.7.3	search with cache (only 1: red; only 1: unfold Disjoint; only 1: compute; only 1: intuition; only 1: eapply H; only 1: eauto).	0.579910993576	806
Coq.FSets.FMapFacts.Partition_sym	40
Coq.FSets.FMapFacts.Partition_Empty	40
Coq.FSets.FMapFacts.Partition_Add	40
Coq.FSets.FMapFacts.Partition_fold	40
Coq.FSets.FMapFacts.Partition_cardinal	40
Coq.FSets.FMapFacts.Partition_partition	40
Coq.FSets.FMapFacts.update_mapsto_iff	40
Coq.FSets.FMapFacts.update_dec	40
Coq.FSets.FMapFacts.update_in_iff	40
Coq.FSets.FMapFacts.diff_mapsto_iff	40
Coq.FSets.FMapFacts.diff_in_iff	40
Coq.FSets.FMapFacts.restrict_mapsto_iff	40
Coq.FSets.FMapFacts.restrict_in_iff	40
Coq.FSets.FMapFacts.cardinal_m_Proper	40	0.0.0.0.0.0.1.0.0.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_Equal with (eqA := eq); only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto).	0.167173862457	90
Coq.FSets.FMapFacts.Disjoint_m_Proper	40
Coq.FSets.FMapFacts.Partition_m_Proper	40
Coq.FSets.FMapFacts.update_m_Proper	40
Coq.FSets.FMapFacts.restrict_m_Proper	40
Coq.FSets.FMapFacts.diff_m_Proper	40
Coq.FSets.FMapFacts.sort_equivlistA_eqlistA	40
Coq.FSets.FMapFacts.gtb_1	40
Coq.FSets.FMapFacts.leb_1	40
Coq.FSets.FMapFacts.gtb_compat	40
Coq.FSets.FMapFacts.leb_compat	40
Coq.FSets.FMapFacts.elements_split	40
Coq.FSets.FMapFacts.elements_Add	40
Coq.FSets.FMapFacts.elements_Add_Above	40
Coq.FSets.FMapFacts.elements_Add_Below	40
Coq.FSets.FMapFacts.elements_Equal_eqlistA	40
Coq.FSets.FMapFacts.max_elt_Above	40
Coq.FSets.FMapFacts.max_elt_MapsTo	40
Coq.FSets.FMapFacts.max_elt_Empty	40
Coq.FSets.FMapFacts.min_elt_Below	40
Coq.FSets.FMapFacts.min_elt_MapsTo	40	0.4.1.0.0.1.0.0.7.0.0	search with cache (only 1: unfold min_elt, Below; only 1: intros; only 1: rewrite elements_mapsto_iff; only 1: generalize (elements_3 m); only 1: destruct (elements m); only 1: discriminate; only 1: destruct p; only 1: injection H as [=-> ->]; only 1: intros H4; only 1: inversion_clear H4; only 1: eauto with *).	31.7163980007	11436
Coq.FSets.FMapFacts.min_elt_Empty	40	0.0.0.3.1.1.0	search with cache (only 1: intros; only 1: rewrite elements_Empty; only 1: unfold min_elt in *; only 1: destruct (elements m); only 1: auto; only 1: destruct p; only 1: discriminate).	0.417119026184	347
Coq.FSets.FMapFacts.map_induction_max	40
Coq.FSets.FMapFacts.map_induction_min	40
Coq.FSets.FMapFacts.fold_Equal	40
Coq.FSets.FMapFacts.fold_Add_Above	40
Coq.FSets.FMapFacts.fold_Add_Below	40
Coq.FSets.FMapWeakList.empty_1	40	4.0.45	search with cache (only 1: compute; only 1: intuition; only 1: invlist InA).	0.403546094894	1368
Coq.FSets.FMapWeakList.empty_NoDup	40	1.0.19	search with cache (only 1: unfold Empty, empty; only 1: unfold PX.eqk, PX.eqke; only 1: intuition).	0.0657770633698	245
Coq.FSets.FMapWeakList.is_empty_1	40
Coq.FSets.FMapWeakList.is_empty_2	40	12.0.0.1	search with cache (only 1: intros m; only 1: case m; only 1: auto; only 1: inversion_clear 1).	3.98038887978	3645
Coq.FSets.FMapWeakList.mem_1	40
Coq.FSets.FMapWeakList.mem_2	40
Coq.FSets.FMapWeakList.find_2	40
Coq.FSets.FMapWeakList.find_1	40
Coq.FSets.FMapWeakList.find_eq	40
Coq.FSets.FMapWeakList.add_1	40
Coq.FSets.FMapWeakList.add_2	40
Coq.FSets.FMapWeakList.add_3	40
Coq.FSets.FMapWeakList.add_3'	40
Coq.FSets.FMapWeakList.add_NoDup	40
Coq.FSets.FMapWeakList.add_eq	40
Coq.FSets.FMapWeakList.add_not_eq	40
Coq.FSets.FMapWeakList.remove_1	40
Coq.FSets.FMapWeakList.remove_2	40
Coq.FSets.FMapWeakList.remove_3	40	0.0.1.0.1.0.0.1.0.0.0	search with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: clear Hm; only 1: unfold PX.MapsTo; only 1: functional induction (remove x m); only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto; only 1: auto).	3.67464089394	2092
Coq.FSets.FMapWeakList.remove_3'	40	0.0.0.0.0.0.1.3.8	search with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: clear Hm; only 1: functional induction (remove x m); only 1: auto; only 1: auto; only 1: do 2 inversion_clear 1; only 1: auto; only 1: auto).	1.39799690247	764
Coq.FSets.FMapWeakList.remove_NoDup	40
Coq.FSets.FMapWeakList.elements_1	40	2.0.0.0.0	search with cache (only 1: intros m; only 1: case m; only 1: auto; only 1: intros p l inlist; only 1: auto).	0.0580849647522	25
Coq.FSets.FMapWeakList.elements_2	40	0	search with cache (only 1: auto).	0.00808715820312	1
Coq.FSets.FMapWeakList.elements_3w	40	3	search with cache (only 1: auto).	0.272967100143	87
Coq.FSets.FMapWeakList.fold_1	40	1.0.1.0.13.9	search with cache (only 1: intros m x; only 1: induction m; only 1: auto; only 1: destruct a as (x', e'); only 1: simpl; only 1: intuition).	1.76524305344	2736
Coq.FSets.FMapWeakList.submap_1	40
Coq.FSets.FMapWeakList.submap_2	40
Coq.FSets.FMapWeakList.equal_1	40
Coq.FSets.FMapWeakList.equal_2	40
Coq.FSets.FMapWeakList.map_1	40
Coq.FSets.FMapWeakList.map_2	40
Coq.FSets.FMapWeakList.map_NoDup	40
Coq.FSets.FMapWeakList.mapi_1	40
Coq.FSets.FMapWeakList.mapi_2	40
Coq.FSets.FMapWeakList.mapi_NoDup	40	0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: constructor; only 1: contradict H; only 1: clear IHm H0; only 1: induction m; only 1: simpl in *; only 1: inversion H; only 1: simpl in *; only 1: destruct a; only 1: inversion H; only 1: auto; only 1: auto; only 1: auto).	39.543407917	22494
Coq.FSets.FMapWeakList.fold_right_pair_NoDup	40
Coq.FSets.FMapWeakList.combine_NoDup	40
Coq.FSets.FMapWeakList.combine_l_1	40
Coq.FSets.FMapWeakList.combine_r_1	40
Coq.FSets.FMapWeakList.combine_1	40
Coq.FSets.FMapWeakList.map2_NoDup	40
Coq.FSets.FMapWeakList.map2_0	40
Coq.FSets.FMapWeakList.map2_1	40
Coq.FSets.FMapWeakList.map2_2	40
Coq.FSets.FMapWeakList.MapsTo_1	40
Coq.FSets.FMapWeakList.mem_1	40
Coq.FSets.FMapWeakList.mem_2	40
Coq.FSets.FMapWeakList.empty_1	40	0.1.49	search with cache (only 1: intros m x; only 1: intro abs; only 1: inversion abs).	0.870906114578	2690
Coq.FSets.FMapWeakList.is_empty_1	40
Coq.FSets.FMapWeakList.is_empty_2	40
Coq.FSets.FMapWeakList.add_1	40
Coq.FSets.FMapWeakList.add_2	40
Coq.FSets.FMapWeakList.add_3	40
Coq.FSets.FMapWeakList.remove_1	40
Coq.FSets.FMapWeakList.remove_2	40
Coq.FSets.FMapWeakList.remove_3	40
Coq.FSets.FMapWeakList.find_1	40
Coq.FSets.FMapWeakList.find_2	40
Coq.FSets.FMapWeakList.elements_1	40	2.0	search with cache (only 1: intros m; only 1: auto).	0.0117199420929	4
Coq.FSets.FMapWeakList.elements_2	40	0.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0108590126038	2
Coq.FSets.FMapWeakList.elements_3w	40	9.54.0	search with cache (only 1: intros m; only 1: induction m; only 1: auto).	1.15050196648	5764
Coq.FSets.FMapWeakList.cardinal_1	40	13	search with cache (only 1: auto).	0.111552000046	115
Coq.FSets.FMapWeakList.fold_1	40
Coq.FSets.FMapWeakList.equal_1	40
Coq.FSets.FMapWeakList.equal_2	40
Coq.FSets.FMapWeakList.map_1	40
Coq.FSets.FMapWeakList.map_2	40
Coq.FSets.FMapWeakList.mapi_1	40
Coq.FSets.FMapWeakList.mapi_2	40
Coq.FSets.FMapWeakList.map2_1	40
Coq.FSets.FMapWeakList.map2_2	40
Coq.FSets.FSetToFiniteSet.In_In	40	1.2.0.1	search with cache (only 1: intros; only 1: rewrite elements_iff; only 1: symmetry; only 1: apply elements_iff).	0.0302271842957	8
Coq.FSets.FSetToFiniteSet.Subset_Included	40	0.0.0	search with cache (only 1: compute; only 1: intros; only 1: auto with extcore).	0.0174810886383	3
Coq.FSets.FSetToFiniteSet.Equal_Same_set	40	4.8.0	search with cache (only 1: unfold Subset, Included, In, mkEns; only 1: red; only 1: firstorder).	2.70062589645	859
Coq.FSets.FSetToFiniteSet.empty_Empty_Set	40	3.0.1.0.2	search with cache (only 1: unfold Subset, Included, Same_set, In, mkEns; only 1: intuition; only 1: unfold Subset, Included, In, mkEns; only 1: intro x; only 1: Dec.fsetdec).	0.087917804718	60
Coq.FSets.FSetToFiniteSet.Empty_Empty_set	40	1.0.7.0.0.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: Dec.fsetdec; only 1: intro; only 1: inversion 1).	1.30252218246	812
Coq.FSets.FSetToFiniteSet.singleton_Singleton	40	0.4.1	search with cache (only 1: intros; only 1: unfold Subset, Included, Same_set, In, mkEns; only 1: intuition).	0.0749609470367	33
Coq.FSets.FSetToFiniteSet.union_Union	40
Coq.FSets.FSetToFiniteSet.inter_Intersection	40	0.0.2.2.0.0.2.5.0.2.2.0.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: intuition; only 1: constructor 1; only 1: auto; only 1: auto; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: auto).	18.3122448921	16984
Coq.FSets.FSetToFiniteSet.add_Add	40
Coq.FSets.FSetToFiniteSet.Add_Add	40
Coq.FSets.FSetToFiniteSet.remove_Subtract	40	0.0.0.5.0.0.2.0.0.5.1.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: constructor 1; only 1: auto; only 1: auto with sets; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: auto with sets).	25.2508349419	4508
Coq.FSets.FSetToFiniteSet.mkEns_Finite	40
Coq.FSets.FSetToFiniteSet.mkEns_cardinal	40
Coq.FSets.FSetToFiniteSet.Ens_to_FSet	40
Coq.FSets.FSetEqProperties.mem_eq	40
Coq.FSets.FSetEqProperties.equal_mem_1	40
Coq.FSets.FSetEqProperties.equal_mem_2	40
Coq.FSets.FSetEqProperties.subset_mem_1	40
Coq.FSets.FSetEqProperties.subset_mem_2	40
Coq.FSets.FSetEqProperties.empty_mem	40
Coq.FSets.FSetEqProperties.is_empty_equal_empty	40
Coq.FSets.FSetEqProperties.choose_mem_1	40	2	search with cache (only 1: auto with set).	0.740772008896	60
Coq.FSets.FSetEqProperties.choose_mem_2	40	0	search with cache (only 1: auto with set).	0.020406961441	1
Coq.FSets.FSetEqProperties.add_mem_1	40	0	search with cache (only 1: auto with set).	0.0205230712891	1
Coq.FSets.FSetEqProperties.add_mem_2	40
Coq.FSets.FSetEqProperties.remove_mem_1	40	1.0	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.062402009964	3
Coq.FSets.FSetEqProperties.remove_mem_2	40
Coq.FSets.FSetEqProperties.singleton_equal_add	40	0	search with cache (only 1: auto with set).	0.0166079998016	1
Coq.FSets.FSetEqProperties.union_mem	40
Coq.FSets.FSetEqProperties.inter_mem	40
Coq.FSets.FSetEqProperties.diff_mem	40
Coq.FSets.FSetEqProperties.mem_3	40	0.0	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.0296981334686	2
Coq.FSets.FSetEqProperties.mem_4	40	0.1	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto).	0.0622711181641	30
Coq.FSets.FSetEqProperties.equal_refl	40	0	search with cache (only 1: auto with set).	0.0166251659393	1
Coq.FSets.FSetEqProperties.equal_sym	40
Coq.FSets.FSetEqProperties.equal_trans	40
Coq.FSets.FSetEqProperties.equal_equal	40	0.1.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0260360240936	4
Coq.FSets.FSetEqProperties.equal_cardinal	40	0.2.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0254940986633	5
Coq.FSets.FSetEqProperties.subset_refl	40	1	search with cache (only 1: auto with set).	0.0169160366058	2
Coq.FSets.FSetEqProperties.subset_antisym	40	2	search with cache (only 1: auto with set fset).	0.0254299640656	3
Coq.FSets.FSetEqProperties.subset_trans	40
Coq.FSets.FSetEqProperties.subset_equal	40	2.0	search with cache (only 1: intros; only 1: auto with set).	0.0213329792023	4
Coq.FSets.FSetEqProperties.choose_mem_3	40
Coq.FSets.FSetEqProperties.choose_mem_4	40
Coq.FSets.FSetEqProperties.add_mem_3	40	11	search with cache (only 1: auto with set).	0.0708210468292	81
Coq.FSets.FSetEqProperties.add_equal	40	0	search with cache (only 1: auto with set).	0.0183711051941	1
Coq.FSets.FSetEqProperties.remove_mem_3	40	1.26	search with cache (only 1: do 2 rewrite <- mem_iff; only 1: eauto with set).	1.47067594528	1709
Coq.FSets.FSetEqProperties.remove_equal	40	0.3	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.735308885574	116
Coq.FSets.FSetEqProperties.add_remove	40	3.1.21.2.1	search with cache (only 1: intros; only 1: apply equal_1; only 1: generalize (FM.mem_iff s x), (FM.mem_iff s' y); only 1: generalize (FM.mem_iff s x), (FM.mem_iff s' y); only 1: intuition).	37.5613939762	15544
Coq.FSets.FSetEqProperties.remove_add	40	0.1.0.14	search with cache (only 1: rewrite <- not_mem_iff; only 1: intros; only 1: apply equal_1; only 1: Dec.fsetdec).	10.232213974	4773
Coq.FSets.FSetEqProperties.is_empty_cardinal	40	0.0.0.0.0.0.2.0	search with cache (only 1: apply eq_true_iff_eq; only 1: rewrite <- is_empty_iff; only 1: rewrite elements_Empty, cardinal_1; only 1: destruct (elements s); only 1: intuition; only 1: intuition; only 1: discriminate; only 1: discriminate).	0.481924057007	40
Coq.FSets.FSetEqProperties.singleton_mem_1	40	0	search with cache (only 1: auto with set).	0.017333984375	1
Coq.FSets.FSetEqProperties.singleton_mem_2	40	0.8	search with cache (only 1: rewrite <- not_mem_iff; only 1: eauto with set).	0.428513050079	20
Coq.FSets.FSetEqProperties.singleton_mem_3	40
Coq.FSets.FSetEqProperties.union_sym	40	0	search with cache (only 1: auto with set).	0.0174930095673	1
Coq.FSets.FSetEqProperties.union_subset_equal	40	0	search with cache (only 1: auto with set).	0.02654504776	1
Coq.FSets.FSetEqProperties.union_equal_1	40	0.0	search with cache (only 1: do 2 rewrite <- equal_iff; only 1: Dec.fsetdec).	0.128674030304	2
Coq.FSets.FSetEqProperties.union_equal_2	40	0	search with cache (only 1: auto with set).	0.0193240642548	1
Coq.FSets.FSetEqProperties.union_assoc	40	0	search with cache (only 1: auto with set).	0.0178039073944	1
Coq.FSets.FSetEqProperties.add_union_singleton	40	2	search with cache (only 1: auto with set).	0.0341949462891	3
Coq.FSets.FSetEqProperties.union_add	40	0	search with cache (only 1: auto with set).	0.0176467895508	1
Coq.FSets.FSetEqProperties.union_subset_1	40	1	search with cache (only 1: auto with set).	0.0171160697937	2
Coq.FSets.FSetEqProperties.union_subset_2	40	0	search with cache (only 1: auto with set).	0.0165159702301	1
Coq.FSets.FSetEqProperties.union_subset_3	40	0.0	search with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.0914568901062	2
Coq.FSets.FSetEqProperties.inter_sym	40	0	search with cache (only 1: auto with set).	0.0177240371704	1
Coq.FSets.FSetEqProperties.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.0216310024261	1
Coq.FSets.FSetEqProperties.inter_equal_1	40	0	search with cache (only 1: auto with set).	0.0191459655762	1
Coq.FSets.FSetEqProperties.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.0191369056702	1
Coq.FSets.FSetEqProperties.inter_assoc	40	0	search with cache (only 1: auto with set).	0.0169229507446	1
Coq.FSets.FSetEqProperties.union_inter_1	40	1	search with cache (only 1: auto with set).	0.0377418994904	2
Coq.FSets.FSetEqProperties.union_inter_2	40	0	search with cache (only 1: auto with set).	0.0172131061554	1
Coq.FSets.FSetEqProperties.inter_add_1	40	0	search with cache (only 1: auto with set).	0.0185790061951	1
Coq.FSets.FSetEqProperties.inter_add_2	40	1.16	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	6.6401219368	2091
Coq.FSets.FSetEqProperties.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.0168631076813	1
Coq.FSets.FSetEqProperties.inter_subset_2	40	0	search with cache (only 1: auto with set).	0.0165188312531	1
Coq.FSets.FSetEqProperties.inter_subset_3	40	1.1.0	search with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).	0.0465960502625	5
Coq.FSets.FSetEqProperties.diff_subset	40	0	search with cache (only 1: auto with set).	0.0164039134979	1
Coq.FSets.FSetEqProperties.diff_subset_equal	40	0	search with cache (only 1: auto with set).	0.0209550857544	1
Coq.FSets.FSetEqProperties.remove_inter_singleton	40	1	search with cache (only 1: auto with set).	0.0343029499054	2
Coq.FSets.FSetEqProperties.diff_inter_empty	40	0	search with cache (only 1: auto with set).	0.0171658992767	1
Coq.FSets.FSetEqProperties.diff_inter_all	40	0	search with cache (only 1: auto with set).	0.0173108577728	1
Coq.FSets.FSetEqProperties.set_rec	40
Coq.FSets.FSetEqProperties.exclusive_set	40
Coq.FSets.FSetEqProperties.fold_empty	40	0.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.0215668678284	2
Coq.FSets.FSetEqProperties.fold_equal	40	2.0.0.0.4.6	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	3.86378192902	2680
Coq.FSets.FSetEqProperties.fold_add	40
Coq.FSets.FSetEqProperties.add_fold	40
Coq.FSets.FSetEqProperties.remove_fold_1	40	0.0.0.0.0.2.3	search with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	0.509127855301	204
Coq.FSets.FSetEqProperties.remove_fold_2	40
Coq.FSets.FSetEqProperties.fold_union	40
Coq.FSets.FSetEqProperties.add_cardinal_1	40	0	search with cache (only 1: auto with set fset).	0.0187141895294	1
Coq.FSets.FSetEqProperties.add_cardinal_2	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.0405900478363	8
Coq.FSets.FSetEqProperties.remove_cardinal_1	40	0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.040885925293	9
Coq.FSets.FSetEqProperties.remove_cardinal_2	40	3.0.0.1.15.2.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: apply MP.fold_equal; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto with set).	2.38612914085	4161
Coq.FSets.FSetEqProperties.union_cardinal	40	0.4.4.5.2.0.0.0	search with cache (only 1: intros; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	1.29998517036	1738
Coq.FSets.FSetEqProperties.subset_cardinal	40	3.0	search with cache (only 1: intros; only 1: auto with set fset).	0.0543210506439	18
Coq.FSets.FSetEqProperties.Comp'	40	0.12.2.0	search with cache (only 1: repeat red; only 1: simpl_relation; only 1: rewrite H; only 1: auto with *).	4.43695497513	538
Coq.FSets.FSetEqProperties.filter_mem	40
Coq.FSets.FSetEqProperties.for_all_filter	40
Coq.FSets.FSetEqProperties.exists_filter	40
Coq.FSets.FSetEqProperties.partition_filter_1	40	0.6.1.0	search with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: red; only 1: auto with set).	0.270626783371	138
Coq.FSets.FSetEqProperties.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.023640871048	1
Coq.FSets.FSetEqProperties.filter_add_1	40
Coq.FSets.FSetEqProperties.filter_add_2	40
Coq.FSets.FSetEqProperties.add_filter_1	40
Coq.FSets.FSetEqProperties.add_filter_2	40	0.0.0.0.0.0.1.1.0.2.0	search with cache (only 1: red; only 1: unfold Add, MP.Add; only 1: intros; only 1: do 2 (rewrite filter_iff; auto); only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate).	6.38631415367	1485
Coq.FSets.FSetEqProperties.union_filter	40
Coq.FSets.FSetEqProperties.filter_union	40	0.0.0.3.1.1.0.0.2	search with cache (only 1: unfold Add, MP.Add, Equal; only 1: intros; only 1: set_iff; only 1: repeat rewrite filter_iff; only 1: set_iff; only 1: intuition; only 1: auto; only 1: auto; only 1: auto).	5.53771495819	1164
Coq.FSets.FSetEqProperties.for_all_mem_1	40	2.1.4.0.5.1	search with cache (only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intros; only 1: intuition).	0.766532182693	584
Coq.FSets.FSetEqProperties.for_all_mem_2	40	0.6.13.0	search with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: intuition; only 1: auto).	0.82487988472	518
Coq.FSets.FSetEqProperties.for_all_mem_3	40
Coq.FSets.FSetEqProperties.for_all_mem_4	40
Coq.FSets.FSetEqProperties.for_all_exists	40
Coq.FSets.FSetEqProperties.Comp'	40	0.0.0.6	search with cache (only 1: repeat red; only 1: intros; only 1: f_equal; only 1: auto).	0.0568249225616	10
Coq.FSets.FSetEqProperties.exists_mem_1	40
Coq.FSets.FSetEqProperties.exists_mem_2	40
Coq.FSets.FSetEqProperties.exists_mem_3	40
Coq.FSets.FSetEqProperties.exists_mem_4	40
Coq.FSets.FSetEqProperties.sum_plus	40
Coq.FSets.FSetEqProperties.sum_filter	40
Coq.FSets.FSetEqProperties.fold_compat	40
Coq.FSets.FSetEqProperties.sum_compat	40
Coq.FSets.FSetBridge.empty	40
Coq.FSets.FSetBridge.is_empty	40
Coq.FSets.FSetBridge.mem	40
Coq.FSets.FSetBridge.add	40
Coq.FSets.FSetBridge.singleton	40
Coq.FSets.FSetBridge.remove	40
Coq.FSets.FSetBridge.union	40
Coq.FSets.FSetBridge.inter	40
Coq.FSets.FSetBridge.diff	40
Coq.FSets.FSetBridge.equal	40
Coq.FSets.FSetBridge.subset	40
Coq.FSets.FSetBridge.elements	40
Coq.FSets.FSetBridge.fold	40	17.0.2	search with cache (only 1: simpl; only 1: intros; only 1: eauto).	0.327137947083	846
Coq.FSets.FSetBridge.cardinal	40	11.0.4	search with cache (only 1: simpl; only 1: intuition; only 1: eauto with set).	0.16178894043	444
Coq.FSets.FSetBridge.compat_P_aux	40
Coq.FSets.FSetBridge.filter	40
Coq.FSets.FSetBridge.for_all	40
Coq.FSets.FSetBridge.exists_	40
Coq.FSets.FSetBridge.partition	40
Coq.FSets.FSetBridge.choose_aux	40
Coq.FSets.FSetBridge.choose	40
Coq.FSets.FSetBridge.choose_ok1	40
Coq.FSets.FSetBridge.choose_ok2	40
Coq.FSets.FSetBridge.choose_equal	40
Coq.FSets.FSetBridge.min_elt	40
Coq.FSets.FSetBridge.max_elt	40
Coq.FSets.FSetBridge.empty_1	40
Coq.FSets.FSetBridge.is_empty_1	40
Coq.FSets.FSetBridge.is_empty_2	40
Coq.FSets.FSetBridge.mem_1	40
Coq.FSets.FSetBridge.mem_2	40
Coq.FSets.FSetBridge.equal_1	40
Coq.FSets.FSetBridge.equal_2	40	2.0.0.0.0.3	search with cache (only 1: intros s x; only 1: unfold equal; only 1: case M.equal; only 1: intuition; only 1: intuition; only 1: discriminate H).	0.214509963989	142
Coq.FSets.FSetBridge.subset_1	40
Coq.FSets.FSetBridge.subset_2	40	1.0.0.0.0.2	search with cache (only 1: intros s s'; only 1: unfold subset; only 1: case M.subset; only 1: intuition; only 1: intuition; only 1: inversion H).	0.118545055389	33
Coq.FSets.FSetBridge.choose_1	40
Coq.FSets.FSetBridge.choose_2	40	5.1.0.0.0.2.4	search with cache (only 1: intro s; only 1: unfold choose; only 1: case (M.choose s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).	2.94478702545	3992
Coq.FSets.FSetBridge.choose_3	40
Coq.FSets.FSetBridge.elements_1	40
Coq.FSets.FSetBridge.elements_2	40	0.0.0.2	search with cache (only 1: intros s x; only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).	0.0978469848633	53
Coq.FSets.FSetBridge.elements_3	40	0.0.1.0	search with cache (only 1: firstorder; only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).	0.0216801166534	5
Coq.FSets.FSetBridge.elements_3w	40	4.0	search with cache (only 1: intros; only 1: firstorder).	0.036896944046	28
Coq.FSets.FSetBridge.min_elt_1	40
Coq.FSets.FSetBridge.min_elt_2	40
Coq.FSets.FSetBridge.min_elt_3	40	0.0.0.0.0.0.4.0	search with cache (only 1: intro s; only 1: unfold min_elt; only 1: case (M.min_elt s); only 1: simple destruct s0; only 1: intros; only 1: intuition; only 1: discriminate H; only 1: auto).	0.191772937775	167
Coq.FSets.FSetBridge.max_elt_1	40
Coq.FSets.FSetBridge.max_elt_2	40
Coq.FSets.FSetBridge.max_elt_3	40	0.0.0.0.1.4.0	search with cache (only 1: intro s; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).	0.392883777618	223
Coq.FSets.FSetBridge.add_1	40
Coq.FSets.FSetBridge.add_2	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.022020816803	5
Coq.FSets.FSetBridge.add_3	40
Coq.FSets.FSetBridge.remove_1	40
Coq.FSets.FSetBridge.remove_2	40	0.0.0.0	search with cache (only 1: intros; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).	0.0215239524841	4
Coq.FSets.FSetBridge.remove_3	40	0.0.0.2	search with cache (only 1: intros s x y; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).	0.0801410675049	48
Coq.FSets.FSetBridge.singleton_1	40
Coq.FSets.FSetBridge.singleton_2	40	0.0.0.0	search with cache (only 1: intros x y; only 1: unfold singleton; only 1: case (M.singleton x); only 1: firstorder).	0.0203371047974	4
Coq.FSets.FSetBridge.union_1	40
Coq.FSets.FSetBridge.union_2	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.0215740203857	4
Coq.FSets.FSetBridge.union_3	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.021833896637	4
Coq.FSets.FSetBridge.inter_1	40
Coq.FSets.FSetBridge.inter_2	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.0218131542206	4
Coq.FSets.FSetBridge.inter_3	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.0218861103058	4
Coq.FSets.FSetBridge.diff_1	40
Coq.FSets.FSetBridge.diff_2	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	0.0224449634552	4
Coq.FSets.FSetBridge.diff_3	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	0.022362947464	4
Coq.FSets.FSetBridge.cardinal_1	40
Coq.FSets.FSetBridge.fold_1	40
Coq.FSets.FSetBridge.f_dec	40
Coq.FSets.FSetBridge.compat_P_aux	40	4.1.2.12.1	search with cache (only 1: intros; only 1: intros s x; only 1: intuition; only 1: rewrite (H _ _ H0); only 1: intuition).	1.52389597893	2232
Coq.FSets.FSetBridge.filter_1	40
Coq.FSets.FSetBridge.filter_2	40	0.0.1.0.0.0	search with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.494074821472	7
Coq.FSets.FSetBridge.filter_3	40	0.0.1.0.0.0	search with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.32507610321	7
Coq.FSets.FSetBridge.for_all_1	40
Coq.FSets.FSetBridge.for_all_2	40	1.0.0.0.0.0	search with cache (only 1: intros s f; only 1: unfold for_all; only 1: case M.for_all; only 1: intuition; only 1: intuition; only 1: firstorder).	0.0363931655884	7
Coq.FSets.FSetBridge.exists_1	40
Coq.FSets.FSetBridge.exists_2	40	1.0.0.0.0.0	search with cache (only 1: intros s f; only 1: unfold exists_; only 1: case M.exists_; only 1: intuition; only 1: intuition; only 1: inversion H0).	0.0310380458832	7
Coq.FSets.FSetBridge.partition_1	40
Coq.FSets.FSetBridge.partition_2	40
Coq.FSets.FSetCompat.lt_not_eq	40
Coq.FSets.FSetCompat.compare	40
Coq.FSets.FSetCompat.In_compat	40	0.0.13.6	search with cache (only 1: intros s s' H s'' s''' H0; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	1.02973198891	1668
Coq.FSets.FSetCompat.mem_spec	40
Coq.FSets.FSetCompat.equal_spec	40
Coq.FSets.FSetCompat.subset_spec	40
Coq.FSets.FSetCompat.is_empty_spec	40
Coq.FSets.FSetCompat.add_spec	40
Coq.FSets.FSetCompat.remove_spec	40
Coq.FSets.FSetCompat.singleton_spec	40
Coq.FSets.FSetCompat.elements_spec1	40	3.6.1.7	search with cache (only 1: intuition; only 1: apply MF.mem_iff; only 1: apply MF.mem_iff; only 1: intuition).	1.7135951519	2201
Coq.FSets.FSetCompat.for_all_spec	40
Coq.FSets.FSetCompat.exists_spec	40
Coq.FSets.FSetCompat.lt_strorder	40
Coq.FSets.FSetCompat.lt_compat	40
Coq.FSets.FSetCompat.compare_spec	40
Coq.FSets.FSetProperties.In_dec	40	0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.0403859615326	5
Coq.FSets.FSetProperties.Add_Equal	40
Coq.FSets.FSetProperties.equal_refl	40	1.3.1.0	search with cache (only 1: unfold Equal; only 1: generalize (F.is_empty_iff s), (F.is_empty_iff s'); only 1: generalize (F.is_empty_iff s), (F.is_empty_iff s'); only 1: intuition).	0.219894886017	85
Coq.FSets.FSetProperties.equal_sym	40	0	search with cache (only 1: fsetdec).	0.0250649452209	1
Coq.FSets.FSetProperties.equal_trans	40	0.1.0	search with cache (only 1: intros g_eq; only 1: rewrite <- g_eq; only 1: fsetdec).	0.0560522079468	4
Coq.FSets.FSetProperties.subset_refl	40	0	search with cache (only 1: fsetdec).	0.0125699043274	1
Coq.FSets.FSetProperties.subset_trans	40	0	search with cache (only 1: fsetdec).	0.0265839099884	1
Coq.FSets.FSetProperties.subset_antisym	40	2.0	search with cache (only 1: intuition; only 1: fsetdec).	0.0326268672943	4
Coq.FSets.FSetProperties.subset_equal	40	0	search with cache (only 1: fsetdec).	0.0193769931793	1
Coq.FSets.FSetProperties.subset_empty	40	0	search with cache (only 1: fsetdec).	0.015506029129	1
Coq.FSets.FSetProperties.subset_remove_3	40	0	search with cache (only 1: fsetdec).	0.0286300182343	1
Coq.FSets.FSetProperties.subset_diff	40	0	search with cache (only 1: fsetdec).	0.0522849559784	1
Coq.FSets.FSetProperties.subset_add_3	40	0	search with cache (only 1: fsetdec).	0.0415098667145	1
Coq.FSets.FSetProperties.subset_add_2	40	0	search with cache (only 1: fsetdec).	0.0231080055237	1
Coq.FSets.FSetProperties.in_subset	40	0	search with cache (only 1: fsetdec).	0.020339012146	1
Coq.FSets.FSetProperties.double_inclusion	40	0.0.2.1.2	search with cache (only 1: split; only 1: intros g_eq; only 1: rewrite <- g_eq; only 1: fsetdec; only 1: fsetdec).	0.0857281684875	10
Coq.FSets.FSetProperties.empty_is_empty_1	40	0	search with cache (only 1: fsetdec).	0.0315968990326	1
Coq.FSets.FSetProperties.empty_is_empty_2	40	0	search with cache (only 1: fsetdec).	0.0243208408356	1
Coq.FSets.FSetProperties.add_equal	40	0.1.2.1.0	search with cache (only 1: red; only 1: split; only 1: fsetdec; only 1: clear H; only 1: apply add_2).	0.0674638748169	14
Coq.FSets.FSetProperties.add_add	40	0	search with cache (only 1: fsetdec).	0.0860040187836	1
Coq.FSets.FSetProperties.remove_equal	40	0	search with cache (only 1: fsetdec).	0.0604109764099	1
Coq.FSets.FSetProperties.Equal_remove	40	2	search with cache (only 1: fsetdec).	0.0773110389709	3
Coq.FSets.FSetProperties.add_remove	40	0	search with cache (only 1: fsetdec).	0.0718410015106	1
Coq.FSets.FSetProperties.remove_add	40	0	search with cache (only 1: fsetdec).	0.0781660079956	1
Coq.FSets.FSetProperties.singleton_equal_add	40	0	search with cache (only 1: fsetdec).	0.0471270084381	1
Coq.FSets.FSetProperties.remove_singleton_empty	40	0	search with cache (only 1: fsetdec).	0.170689105988	1
Coq.FSets.FSetProperties.union_sym	40	1	search with cache (only 1: fsetdec).	0.0572071075439	2
Coq.FSets.FSetProperties.union_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0716080665588	1
Coq.FSets.FSetProperties.union_equal_1	40	0	search with cache (only 1: fsetdec).	0.0705389976501	1
Coq.FSets.FSetProperties.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.0703518390656	1
Coq.FSets.FSetProperties.union_assoc	40	0	search with cache (only 1: fsetdec).	0.11643910408	1
Coq.FSets.FSetProperties.add_union_singleton	40	0	search with cache (only 1: fsetdec).	0.0600490570068	1
Coq.FSets.FSetProperties.union_add	40	0	search with cache (only 1: fsetdec).	0.115873098373	1
Coq.FSets.FSetProperties.union_remove_add_1	40	0	search with cache (only 1: fsetdec).	0.218750953674	1
Coq.FSets.FSetProperties.union_remove_add_2	40	0	search with cache (only 1: fsetdec).	0.192814826965	1
Coq.FSets.FSetProperties.union_subset_1	40	0	search with cache (only 1: fsetdec).	0.0222308635712	1
Coq.FSets.FSetProperties.union_subset_2	40	0	search with cache (only 1: fsetdec).	0.0212309360504	1
Coq.FSets.FSetProperties.union_subset_3	40	0	search with cache (only 1: fsetdec).	0.0409150123596	1
Coq.FSets.FSetProperties.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.039351940155	1
Coq.FSets.FSetProperties.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.0560100078583	1
Coq.FSets.FSetProperties.empty_union_1	40	0	search with cache (only 1: fsetdec).	0.0491960048676	1
Coq.FSets.FSetProperties.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.0463647842407	1
Coq.FSets.FSetProperties.not_in_union	40	4	search with cache (only 1: fsetdec).	0.0603201389313	13
Coq.FSets.FSetProperties.inter_sym	40	2	search with cache (only 1: fsetdec).	0.059592962265	3
Coq.FSets.FSetProperties.inter_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0482180118561	1
Coq.FSets.FSetProperties.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.0804851055145	1
Coq.FSets.FSetProperties.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.0660228729248	1
Coq.FSets.FSetProperties.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.0964329242706	1
Coq.FSets.FSetProperties.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.135418176651	1
Coq.FSets.FSetProperties.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.137228012085	1
Coq.FSets.FSetProperties.inter_add_1	40	0	search with cache (only 1: fsetdec).	0.122958898544	1
Coq.FSets.FSetProperties.inter_add_2	40	0	search with cache (only 1: fsetdec).	0.0979480743408	1
Coq.FSets.FSetProperties.empty_inter_1	40	0	search with cache (only 1: fsetdec).	0.0345540046692	1
Coq.FSets.FSetProperties.empty_inter_2	40	0	search with cache (only 1: fsetdec).	0.0311710834503	1
Coq.FSets.FSetProperties.inter_subset_1	40	0	search with cache (only 1: fsetdec).	0.0227239131927	1
Coq.FSets.FSetProperties.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.0214731693268	1
Coq.FSets.FSetProperties.inter_subset_3	40	0	search with cache (only 1: fsetdec).	0.0548369884491	1
Coq.FSets.FSetProperties.empty_diff_1	40	1	search with cache (only 1: fsetdec).	0.0419859886169	2
Coq.FSets.FSetProperties.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.0493371486664	1
Coq.FSets.FSetProperties.diff_subset	40	0	search with cache (only 1: fsetdec).	0.027074098587	1
Coq.FSets.FSetProperties.diff_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0772910118103	1
Coq.FSets.FSetProperties.remove_diff_singleton	40	0	search with cache (only 1: fsetdec).	0.0693290233612	1
Coq.FSets.FSetProperties.diff_inter_empty	40	0	search with cache (only 1: fsetdec).	0.127873897552	1
Coq.FSets.FSetProperties.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.0968408584595	1
Coq.FSets.FSetProperties.Add_add	40	1.1.4	search with cache (only 1: red; only 1: intros; only 1: fsetdec).	0.0991861820221	18
Coq.FSets.FSetProperties.Add_remove	40	0.1	search with cache (only 1: expAdd; only 1: fsetdec).	0.124549865723	3
Coq.FSets.FSetProperties.union_Add	40	0.3	search with cache (only 1: expAdd; only 1: fsetdec).	0.160440921783	5
Coq.FSets.FSetProperties.inter_Add	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.278134822845	2
Coq.FSets.FSetProperties.union_Equal	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.227080106735	2
Coq.FSets.FSetProperties.inter_Add_2	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.188687801361	2
Coq.FSets.FSetProperties.elements_Empty	40
Coq.FSets.FSetProperties.elements_empty	40
Coq.FSets.FSetProperties.of_list_1	40
Coq.FSets.FSetProperties.of_list_2	40
Coq.FSets.FSetProperties.of_list_3	40
Coq.FSets.FSetProperties.fold_spec_right	40
Coq.FSets.FSetProperties.fold_rec	40
Coq.FSets.FSetProperties.fold_rec_bis	40
Coq.FSets.FSetProperties.fold_rec_nodep	40	2.0.1.1.0	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: intros; only 1: auto with set; only 1: eauto).	0.0793271064758	44
Coq.FSets.FSetProperties.fold_rec_weak	40
Coq.FSets.FSetProperties.fold_rel	40
Coq.FSets.FSetProperties.set_induction	40
Coq.FSets.FSetProperties.set_induction_bis	40
Coq.FSets.FSetProperties.fold_identity	40	0.2.1.1.0.0	search with cache (only 1: intros; only 1: apply fold_rec_bis; only 1: unfold Equal; only 1: firstorder; only 1: auto with set; only 1: auto with set).	0.0475528240204	10
Coq.FSets.FSetProperties.fold_0	40
Coq.FSets.FSetProperties.fold_1	40
Coq.FSets.FSetProperties.fold_2	40
Coq.FSets.FSetProperties.fold_1b	40	0.0.0.0.0.1.0.2.0.1.0.0.0.0.0	search with cache (only 1: unfold Empty; only 1: intros; only 1: destruct (fold_0 s i f) as (l, (H1, (H2, H3))); only 1: rewrite H3; only 1: clear H3; only 1: generalize H, H2; only 1: clear H H2; only 1: case l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: elim (H e); only 1: elim (H2 e); only 1: intuition).	4.5795609951	4970
Coq.FSets.FSetProperties.fold_commutes	40
Coq.FSets.FSetProperties.fold_init	40
Coq.FSets.FSetProperties.fold_equal	40
Coq.FSets.FSetProperties.fold_empty	40	3.2.1.0.0	search with cache (only 1: symmetry; only 1: symmetry; only 1: apply fold_1; only 1: auto with *; only 1: auto with *).	0.297317028046	152
Coq.FSets.FSetProperties.fold_add	40	0.0.0.0.0.12.1	search with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto with *; only 1: auto; only 1: auto; only 1: auto; only 1: auto with *).	2.38067698479	1571
Coq.FSets.FSetProperties.add_fold	40
Coq.FSets.FSetProperties.remove_fold_1	40	0.0.0.0.0.0.16.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	2.68844795227	3105
Coq.FSets.FSetProperties.remove_fold_2	40	0.2.1.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: apply fold_equal; only 1: auto with set).	0.0371270179749	13
Coq.FSets.FSetProperties.fold_union_inter	40
Coq.FSets.FSetProperties.fold_diff_inter	40
Coq.FSets.FSetProperties.fold_union	40
Coq.FSets.FSetProperties.fold_plus	40	0.0.5.2.1.0.9.1	search with cache (only 1: intros; only 1: rewrite 2!fold_spec_right; only 1: set (l := rev (elements s)); only 1: clearbody l; only 1: induction l; only 1: split; only 1: simpl; only 1: auto).	2.02720403671	3326
Coq.FSets.FSetProperties.cardinal_fold	40
Coq.FSets.FSetProperties.cardinal_0	40
Coq.FSets.FSetProperties.cardinal_1	40	0.0.2.8.2.0	search with cache (only 1: intros; only 1: rewrite cardinal_1; only 1: rewrite elements_Empty in H; only 1: rewrite H; only 1: simpl; only 1: auto).	0.793156147003	763
Coq.FSets.FSetProperties.cardinal_2	40
Coq.FSets.FSetProperties.cardinal_Empty	40
Coq.FSets.FSetProperties.cardinal_inv_1	40
Coq.FSets.FSetProperties.cardinal_inv_2	40
Coq.FSets.FSetProperties.cardinal_inv_2b	40	0.0.5.0.0.0.0	search with cache (only 1: intros; only 1: rewrite M.cardinal_1 in H; only 1: generalize (elements_2 (s:=s)); only 1: destruct (elements s); only 1: intuition; only 1: exists e; only 1: auto).	0.383296966553	265
Coq.FSets.FSetProperties.Equal_cardinal	40
Coq.FSets.FSetProperties.cardinal_m_Proper	40
Coq.FSets.FSetProperties.empty_cardinal	40	0.0.0.6	search with cache (only 1: rewrite cardinal_fold; only 1: apply fold_1; only 1: auto with fset; only 1: auto with set).	0.0139989852905	10
Coq.FSets.FSetProperties.singleton_cardinal	40
Coq.FSets.FSetProperties.diff_inter_cardinal	40
Coq.FSets.FSetProperties.union_cardinal	40
Coq.FSets.FSetProperties.subset_cardinal	40
Coq.FSets.FSetProperties.subset_cardinal_lt	40
Coq.FSets.FSetProperties.union_inter_cardinal	40
Coq.FSets.FSetProperties.union_cardinal_inter	40
Coq.FSets.FSetProperties.union_cardinal_le	40	2.4.0	search with cache (only 1: intros; only 1: rewrite <- union_inter_cardinal; only 1: auto with arith).	0.0260939598083	30
Coq.FSets.FSetProperties.add_cardinal_1	40	3.4	search with cache (only 1: intro; only 1: intuition).	0.123224973679	50
Coq.FSets.FSetProperties.add_cardinal_2	40	0.0.1.3	search with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: auto with set; only 1: auto with set).	0.0427889823914	26
Coq.FSets.FSetProperties.remove_cardinal_1	40	0.0.0.0.0.1.0.5.0.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: symmetry; only 1: change S with ((fun _ => S) x); only 1: apply fold_2; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto with set; only 1: auto with set).	1.14171099663	1032
Coq.FSets.FSetProperties.remove_cardinal_2	40	1	search with cache (only 1: auto with set fset).	0.11657500267	46
Coq.FSets.FSetProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FSetProperties.gtb_1	40
Coq.FSets.FSetProperties.leb_1	40
Coq.FSets.FSetProperties.gtb_compat	40
Coq.FSets.FSetProperties.leb_compat	40
Coq.FSets.FSetProperties.elements_split	40
Coq.FSets.FSetProperties.elements_Add	40
Coq.FSets.FSetProperties.elements_Add_Above	40
Coq.FSets.FSetProperties.elements_Add_Below	40
Coq.FSets.FSetProperties.set_induction_max	40
Coq.FSets.FSetProperties.set_induction_min	40
Coq.FSets.FSetProperties.fold_3	40
Coq.FSets.FSetProperties.fold_4	40
Coq.FSets.FSetProperties.fold_equal	40
Coq.FSets.FSetProperties.add_fold	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0153841972351	3
Coq.FSets.FSetProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0152790546417	3
Coq.FSets.FSetProperties.choose_equal	40
Coq.FSets.FSetDecide.test_push	40	0	search with cache (only 1: auto).	0.012974023819	1
Coq.FSets.FSetDecide.test_pull	40	0.0.0	search with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.136657953262	3
Coq.FSets.FSetDecide.eq_refl_iff	40	2.2.0	search with cache (only 1: split; only 1: auto; only 1: auto).	0.0146880149841	7
Coq.FSets.FSetDecide.dec_In	40
Coq.FSets.FSetDecide.dec_eq	40
Coq.FSets.FSetDecide.test_eq_trans_1	40
Coq.FSets.FSetDecide.test_eq_trans_2	40	34	search with cache (only 1: fsetdec).	1.68508219719	3958
Coq.FSets.FSetDecide.test_eq_neq_trans_1	40	0	search with cache (only 1: fsetdec).	0.0623121261597	1
Coq.FSets.FSetDecide.test_eq_neq_trans_2	40	0	search with cache (only 1: fsetdec).	0.537472009659	1
Coq.FSets.FSetDecide.test_In_singleton	40	0	search with cache (only 1: fsetdec).	0.0199918746948	1
Coq.FSets.FSetDecide.test_add_In	40	4	search with cache (only 1: fsetdec).	0.0568919181824	5
Coq.FSets.FSetDecide.test_Subset_add_remove	40	0	search with cache (only 1: fsetdec).	0.0529520511627	1
Coq.FSets.FSetDecide.test_eq_disjunction	40	0	search with cache (only 1: fsetdec).	0.0801649093628	1
Coq.FSets.FSetDecide.test_not_In_disj	40	0	search with cache (only 1: fsetdec).	0.115499019623	1
Coq.FSets.FSetDecide.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.129081964493	1
Coq.FSets.FSetDecide.test_iff_conj	40	1	search with cache (only 1: fsetdec).	0.0672590732574	11
Coq.FSets.FSetDecide.test_set_ops_1	40	0	search with cache (only 1: fsetdec).	0.212177991867	1
Coq.FSets.FSetDecide.eq_chain_test	40	0	search with cache (only 1: fsetdec).	0.263841867447	1
Coq.FSets.FSetDecide.test_too_complex	40	6.1.1	search with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: intuition).	0.163598060608	53
Coq.FSets.FSetDecide.function_test_1	40	4	search with cache (only 1: fsetdec).	0.140532970428	37
Coq.FSets.FSetDecide.function_test_2	40	0	search with cache (only 1: fsetdec).	0.0771250724792	1
Coq.FSets.FSetDecide.test_baydemir	40	0	search with cache (only 1: fsetdec).	0.0551240444183	1
Coq.FSets.FMapList.empty_1	40
Coq.FSets.FMapList.empty_sorted	40	1	search with cache (only 1: constructor).	0.0124320983887	2
Coq.FSets.FMapList.is_empty_1	40
Coq.FSets.FMapList.is_empty_2	40	5.4.0.0.1	search with cache (only 1: intros m; only 1: case m; only 1: auto; only 1: unfold Empty, PX.MapsTo; only 1: eauto with *).	9.21570301056	1320
Coq.FSets.FMapList.mem_1	40
Coq.FSets.FMapList.mem_2	40
Coq.FSets.FMapList.find_2	40
Coq.FSets.FMapList.find_1	40
Coq.FSets.FMapList.add_1	40
Coq.FSets.FMapList.add_2	40
Coq.FSets.FMapList.add_3	40
Coq.FSets.FMapList.add_Inf	40
Coq.FSets.FMapList.add_sorted	40
Coq.FSets.FMapList.remove_1	40
Coq.FSets.FMapList.remove_2	40
Coq.FSets.FMapList.remove_3	40
Coq.FSets.FMapList.remove_Inf	40
Coq.FSets.FMapList.remove_sorted	40	0.0.0.0.2.2.1.0.2.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: destruct a as (x', e'); only 1: intuition; only 1: inversion_clear Hm; only 1: simpl; only 1: case (X.compare x x'); only 1: auto; only 1: auto; only 1: auto).	11.4193861485	8580
Coq.FSets.FMapList.elements_1	40	3.1.0.0.0.0	search with cache (only 1: intros m; only 1: case m; only 1: auto; only 1: intros (k, e) l inlist; only 1: intros sorted hyp; only 1: auto with ordered_type).	0.0551738739014	23
Coq.FSets.FMapList.elements_2	40	0	search with cache (only 1: auto).	0.0120000839233	1
Coq.FSets.FMapList.elements_3	40	1.1.0.1.0	search with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: destruct a as (x', e'); only 1: intuition).	0.0262060165405	8
Coq.FSets.FMapList.elements_3w	40
Coq.FSets.FMapList.fold_1	40	1.0.1.0.0.2	search with cache (only 1: induction m; only 1: auto; only 1: intros; only 1: destruct a as (x', e'); only 1: simpl; only 1: intuition).	0.0324699878693	10
Coq.FSets.FMapList.equal_1	40
Coq.FSets.FMapList.equal_2	40
Coq.FSets.FMapList.equal_cons	40
Coq.FSets.FMapList.map_1	40
Coq.FSets.FMapList.map_2	40
Coq.FSets.FMapList.map_lelistA	40	1.1.0.0.1.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: intros; only 1: destruct a as (x'', e''); only 1: inversion_clear H; only 1: simpl; only 1: intuition).	0.798490047455	247
Coq.FSets.FMapList.map_sorted	40	1.3.2.3.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a as (x', e); only 1: intros hyp; only 1: inversion hyp; only 1: eauto).	7.82610702515	5811
Coq.FSets.FMapList.mapi_1	40
Coq.FSets.FMapList.mapi_2	40
Coq.FSets.FMapList.mapi_lelistA	40	0.0.0.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x0, e0); only 1: inversion_clear H; only 1: auto).	0.0498099327087	8
Coq.FSets.FMapList.mapi_sorted	40	2.0.0.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: auto).	0.0682408809662	14
Coq.FSets.FMapList.map2_alt_equiv	40
Coq.FSets.FMapList.combine_lelistA	40
Coq.FSets.FMapList.combine_sorted	40
Coq.FSets.FMapList.map2_sorted	40
Coq.FSets.FMapList.combine_1	40
Coq.FSets.FMapList.map2_0	40
Coq.FSets.FMapList.map2_1	40
Coq.FSets.FMapList.map2_2	40
Coq.FSets.FMapList.MapsTo_1	40
Coq.FSets.FMapList.mem_1	40
Coq.FSets.FMapList.mem_2	40
Coq.FSets.FMapList.empty_1	40	50.31	search with cache (only 1: compute; only 1: inversion 1).	4.61608099937	15744
Coq.FSets.FMapList.is_empty_1	40
Coq.FSets.FMapList.is_empty_2	40
Coq.FSets.FMapList.add_1	40
Coq.FSets.FMapList.add_2	40
Coq.FSets.FMapList.add_3	40
Coq.FSets.FMapList.remove_1	40
Coq.FSets.FMapList.remove_2	40
Coq.FSets.FMapList.remove_3	40
Coq.FSets.FMapList.find_1	40
Coq.FSets.FMapList.find_2	40
Coq.FSets.FMapList.elements_1	40	0	search with cache (only 1: auto).	0.0140299797058	1
Coq.FSets.FMapList.elements_2	40	0.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0168540477753	2
Coq.FSets.FMapList.elements_3	40	15.11	search with cache (only 1: induction m; only 1: auto).	0.318733930588	823
Coq.FSets.FMapList.elements_3w	40
Coq.FSets.FMapList.cardinal_1	40	13.0	search with cache (only 1: intros m; only 1: auto with ordered_type).	0.0554401874542	130
Coq.FSets.FMapList.fold_1	40
Coq.FSets.FMapList.equal_1	40
Coq.FSets.FMapList.equal_2	40
Coq.FSets.FMapList.map_1	40
Coq.FSets.FMapList.map_2	40
Coq.FSets.FMapList.mapi_1	40
Coq.FSets.FMapList.mapi_2	40
Coq.FSets.FMapList.map2_1	40
Coq.FSets.FMapList.map2_2	40
Coq.FSets.FMapList.eq_equal	40
Coq.FSets.FMapList.eq_1	40
Coq.FSets.FMapList.eq_2	40
Coq.FSets.FMapList.eq_refl	40	0.2.0.14.1.1.1.0.2.7.1	search with cache (only 1: intros (l, Hl); only 1: unfold eq; only 1: simpl; only 1: induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: inversion_clear Hl; only 1: destruct a; only 1: Raw.MX.elim_comp; only 1: intuition).	38.421038866	65952
Coq.FSets.FMapList.eq_sym	40
Coq.FSets.FMapList.eq_trans	40
Coq.FSets.FMapList.lt_trans	40
Coq.FSets.FMapList.lt_not_eq	40
Coq.FSets.FMapList.compare	40
Coq.Wellfounded.Inclusion.Acc_incl	40	1.14.36.0.3	search with cache (only 1: intro x; only 1: intro H; only 1: apply Acc_rect; only 1: split; only 1: auto).	5.09945392609	42172
Coq.Wellfounded.Inclusion.wf_incl	40	2.18	search with cache (only 1: split; only 1: auto with sets).	0.053130865097	367
Coq.Wellfounded.Well_Ordering.wf_WO	40
Coq.Wellfounded.Well_Ordering.wof	40
Coq.Wellfounded.Lexicographic_Exponentiation.left_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.right_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_tail	40
Coq.Wellfounded.Lexicographic_Exponentiation.dist_aux	40
Coq.Wellfounded.Lexicographic_Exponentiation.dist_Desc_concat	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_end	40
Coq.Wellfounded.Lexicographic_Exponentiation.ltl_unit	40
Coq.Wellfounded.Lexicographic_Exponentiation.acc_app	40	0.0.0.1.2.12	search with cache (only 1: intro; only 1: intros a b x; only 1: case x; only 1: case x; only 1: case x; only 1: auto with sets).	0.846853017807	1184
Coq.Wellfounded.Lexicographic_Exponentiation.wf_lex_exp	40
Coq.Wellfounded.Inverse_Image.Acc_lemma	40
Coq.Wellfounded.Inverse_Image.Acc_inverse_image	40
Coq.Wellfounded.Inverse_Image.wf_inverse_image	40	0.1.0.9.18.20	search with cache (only 1: intros y0 H1; only 1: split; only 1: intros x H; only 1: apply (Acc_lemma (f x)); only 1: trivial; only 1: trivial).	1.41058397293	10737
Coq.Wellfounded.Inverse_Image.Acc_inverse_rel	40
Coq.Wellfounded.Inverse_Image.wf_inverse_rel	40
Coq.Wellfounded.Disjoint_Union.acc_A_sum	40
Coq.Wellfounded.Disjoint_Union.acc_B_sum	40
Coq.Wellfounded.Disjoint_Union.wf_disjoint_sum	40
Coq.Wellfounded.Union.strip_commut	40
Coq.Wellfounded.Union.Acc_union	40
Coq.Wellfounded.Union.wf_union	40
Coq.Wellfounded.Lexicographic_Product.acc_A_B_lexprod	40
Coq.Wellfounded.Lexicographic_Product.wf_lexprod	40
Coq.Wellfounded.Lexicographic_Product.Acc_symprod	40
Coq.Wellfounded.Lexicographic_Product.wf_symprod	40
Coq.Wellfounded.Lexicographic_Product.swap_Acc	40
Coq.Wellfounded.Lexicographic_Product.Acc_swapprod	40
Coq.Wellfounded.Lexicographic_Product.wf_swapprod	40
Coq.Wellfounded.Transitive_Closure.incl_clos_trans	40	1.9.14.5.3	search with cache (only 1: red; only 1: intro z; only 1: intros n m; only 1: constructor; only 1: auto).	0.379327058792	3422
Coq.Wellfounded.Transitive_Closure.Acc_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Acc_inv_trans	40	0.0.9.1.6.8	search with cache (only 1: intro x; only 1: intros y H2; only 1: induction H2; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).	1.06807589531	4030
Coq.Wellfounded.Transitive_Closure.wf_clos_trans	40	3.0	search with cache (only 1: red; only 1: auto).	0.00511884689331	5
Coq.Numbers.DecimalFacts.uint_dec	40
Coq.Numbers.DecimalFacts.rev_revapp	40
Coq.Numbers.DecimalFacts.rev_rev	40
Coq.Numbers.DecimalFacts.nzhead_revapp_0	40
Coq.Numbers.DecimalFacts.nzhead_revapp	40
Coq.Numbers.DecimalFacts.nzhead_rev	40
Coq.Numbers.DecimalFacts.rev_nztail_rev	40
Coq.Numbers.DecimalFacts.revapp_nil_inv	40
Coq.Numbers.DecimalFacts.rev_nil_inv	40	5.5.2.0.0	search with cache (only 1: rewrite <- (rev_rev d); only 1: symmetry; only 1: rewrite <- (rev_rev d); only 1: rewrite H; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).	5.94849681854	8776
Coq.Numbers.DecimalFacts.rev_lnorm_rev	40
Coq.Numbers.DecimalFacts.nzhead_nonzero	40
Coq.Numbers.DecimalFacts.unorm_0	40	0.0.0.0.0.0.0.0.0.0.0.5	search with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	1.99226880074	1006
Coq.Numbers.DecimalFacts.unorm_nonnil	40	0.0.0.0.0.0.0.0.0.1.0.0.0.3	search with cache (only 1: induction d; only 1: unfold unorm; only 1: simpl; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	4.90280199051	5524
Coq.Numbers.DecimalFacts.nzhead_invol	40
Coq.Numbers.DecimalFacts.unorm_invol	40	0.1	search with cache (only 1: unfold unorm, lnorm; only 1: now induction d).	0.0394909381866	25
Coq.Numbers.DecimalFacts.norm_invol	40	6.6.9	search with cache (only 1: induction d; only 1: now induction d; only 1: now induction d).	5.39421010017	5814
Coq.Numbers.DecimalPos.of_lu_eqn	40
Coq.Numbers.DecimalPos.of_lu_revapp	40
Coq.Numbers.DecimalPos.Nadd_simpl	40	3.0.8	search with cache (only 1: induction n; only 1: trivial; only 1: trivial).	0.155062913895	191
Coq.Numbers.DecimalPos.of_uint_acc_eqn	40
Coq.Numbers.DecimalPos.of_uint_acc_rev	40
Coq.Numbers.DecimalPos.of_uint_alt	40
Coq.Numbers.DecimalPos.of_lu_rev	40
Coq.Numbers.DecimalPos.of_lu_double_gen	40
Coq.Numbers.DecimalPos.of_lu_double	40
Coq.Numbers.DecimalPos.of_lu_succ_double	40	1	search with cache (only 1: apply of_lu_double_gen).	0.0120410919189	2
Coq.Numbers.DecimalPos.of_to	40
Coq.Numbers.DecimalPos.succ_double_alt	40
Coq.Numbers.DecimalPos.double_succ	40
Coq.Numbers.DecimalPos.to_lu_succ	40
Coq.Numbers.DecimalPos.nat_iter_S	40	0.3.0.0.1	search with cache (only 1: simpl; only 1: induction n; only 1: auto with arith; only 1: simpl; only 1: now simpl).	0.0210149288177	9
Coq.Numbers.DecimalPos.nat_iter_0	40	0	search with cache (only 1: reflexivity).	0.0105741024017	1
Coq.Numbers.DecimalPos.to_ldec_tenfold	40
Coq.Numbers.DecimalPos.of_lu_0	40
Coq.Numbers.DecimalPos.to_of_lu_tenfold	40
Coq.Numbers.DecimalPos.Nadd_alt	40
Coq.Numbers.DecimalPos.to_of_lu	40
Coq.Numbers.DecimalPos.to_of	40
Coq.Numbers.DecimalPos.to_uint_nonzero	40
Coq.Numbers.DecimalPos.to_uint_nonnil	40	0.0.0	search with cache (only 1: intro E; only 1: generalize (of_to p); only 1: now rewrite E).	0.0218160152435	3
Coq.Numbers.DecimalPos.to_uint_inj	40
Coq.Numbers.DecimalPos.to_uint_pos_surj	40
Coq.Numbers.DecimalPos.of_uint_norm	40
Coq.Numbers.DecimalPos.of_inj	40
Coq.Numbers.DecimalPos.of_iff	40
Coq.Numbers.DecimalPos.of_to	40
Coq.Numbers.DecimalPos.to_of	40
Coq.Numbers.DecimalPos.to_int_inj	40
Coq.Numbers.DecimalPos.to_int_pos_surj	40	1.2.0.5.2.1.0	search with cache (only 1: simpl norm; only 1: destruct (Pos.of_uint d) eqn:E; only 1: rewrite <- Unsigned.to_of; only 1: now rewrite E; only 1: exists p; only 1: rewrite <- Unsigned.to_of; only 1: now rewrite E).	8.37365794182	11028
Coq.Numbers.DecimalPos.of_int_norm	40
Coq.Numbers.DecimalPos.of_inj_pos	40
Coq.Numbers.DecimalNat.to_lu_succ	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0136830806732	2
Coq.Numbers.DecimalNat.to_little_uint_succ	40
Coq.Numbers.DecimalNat.to_lu_equiv	40
Coq.Numbers.DecimalNat.to_uint_alt	40
Coq.Numbers.DecimalNat.of_lu_eqn	40
Coq.Numbers.DecimalNat.of_lu_succ	40
Coq.Numbers.DecimalNat.of_to_lu	40
Coq.Numbers.DecimalNat.of_lu_revapp	40
Coq.Numbers.DecimalNat.of_uint_acc_spec	40
Coq.Numbers.DecimalNat.of_uint_alt	40
Coq.Numbers.DecimalNat.of_to	40
Coq.Numbers.DecimalNat.to_lu_tenfold	40
Coq.Numbers.DecimalNat.of_lu_0	40
Coq.Numbers.DecimalNat.to_of_lu_tenfold	40
Coq.Numbers.DecimalNat.to_of_lu	40
Coq.Numbers.DecimalNat.to_of	40
Coq.Numbers.DecimalNat.to_uint_inj	40
Coq.Numbers.DecimalNat.to_uint_surj	40
Coq.Numbers.DecimalNat.of_uint_norm	40	0.0.0.0.0.0.0.0.0.0.0.5	search with cache (only 1: induction d; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.475626945496	501
Coq.Numbers.DecimalNat.of_inj	40
Coq.Numbers.DecimalNat.of_iff	40
Coq.Numbers.DecimalNat.of_to	40
Coq.Numbers.DecimalNat.to_of	40
Coq.Numbers.DecimalNat.to_int_inj	40
Coq.Numbers.DecimalNat.to_int_pos_surj	40	0.0.0.1.3.0.1	search with cache (only 1: exists (Nat.of_uint d); only 1: unfold Nat.to_int; only 1: apply Unsigned.to_of; only 1: unfold Nat.to_int, Nat.of_int, norm; only 1: f_equal; only 1: unfold Nat.of_uint; only 1: now induction d).	0.366338968277	395
Coq.Numbers.DecimalNat.of_int_norm	40
Coq.Numbers.DecimalNat.of_inj_pos	40
Coq.Numbers.DecimalN.of_to	40	7.3.0.2.1	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Unsigned.of_to).	0.553151130676	899
Coq.Numbers.DecimalN.to_of	40	1.21	search with cache (only 1: rewrite <- Unsigned.to_of; only 1: now f_equal).	1.19901394844	1407
Coq.Numbers.DecimalN.to_uint_inj	40
Coq.Numbers.DecimalN.to_uint_surj	40
Coq.Numbers.DecimalN.of_uint_norm	40	2	search with cache (only 1: now induction d).	0.0106401443481	3
Coq.Numbers.DecimalN.of_inj	40	0.3.1	search with cache (only 1: intros; only 1: rewrite <- !DecimalPos.Unsigned.to_of; only 1: now f_equal).	0.076493024826	7
Coq.Numbers.DecimalN.of_iff	40	0.4.6.2.2	search with cache (only 1: split; only 1: apply DecimalPos.Unsigned.of_inj; only 1: intros E; only 1: rewrite <- DecimalPos.Unsigned.of_uint_norm, E; only 1: apply DecimalPos.Unsigned.of_uint_norm).	3.9150929451	3466
Coq.Numbers.DecimalN.of_to	40
Coq.Numbers.DecimalN.to_of	40
Coq.Numbers.DecimalN.to_int_inj	40
Coq.Numbers.DecimalN.to_int_pos_surj	40	0.0.0.2.1.3	search with cache (only 1: unfold N.to_int; only 1: exists (N.of_uint d); only 1: apply Unsigned.to_of; only 1: unfold N.to_int, N.of_int, norm; only 1: f_equal; only 1: now induction d).	0.753589868546	1141
Coq.Numbers.DecimalN.of_int_norm	40
Coq.Numbers.DecimalN.of_inj_pos	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.sub_add_opp	40	3.0	search with cache (only 1: intros m IH; only 1: tauto).	0.0175189971924	5
Coq.Numbers.Integer.NatPairs.ZNatPairs.eq_equiv	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.pair_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.succ_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.pred_wd	40	0.6.6.3.3.0	search with cache (only 1: unfold Z.succ, Z.eq; only 1: intros n m H; only 1: simpl; only 1: rewrite add_succ_r; only 1: nzsimpl; only 1: now rewrite H).	5.55503201485	3273
Coq.Numbers.Integer.NatPairs.ZNatPairs.add_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.opp_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.sub_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.mul_comm	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.mul_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.bi_induction	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.pred_succ	40	4.0.0.9.2	search with cache (only 1: unfold Reflexive, Z.eq; only 1: destruct n as [n m]; only 1: simpl; only 1: rewrite add_succ_r; only 1: now rewrite add_succ_l).	1.18376994133	1999
Coq.Numbers.Integer.NatPairs.ZNatPairs.succ_pred	40	0.0.0.0	search with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.167681932449	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.one_succ	40	2.6	search with cache (only 1: unfold Z.eq; only 1: now nzsimpl).	0.211796045303	38
Coq.Numbers.Integer.NatPairs.ZNatPairs.two_succ	40	0.0.0	search with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl').	0.0907061100006	3
Coq.Numbers.Integer.NatPairs.ZNatPairs.opp_0	40	1	search with cache (only 1: reflexivity).	0.0122060775757	2
Coq.Numbers.Integer.NatPairs.ZNatPairs.opp_succ	40	0.0.0	search with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: simpl; only 1: reflexivity).	0.0165729522705	3
Coq.Numbers.Integer.NatPairs.ZNatPairs.add_0_l	40	0.0.0.0	search with cache (only 1: intro n; only 1: unfold Z.succ, Z.pred, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.160983085632	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.add_succ_l	40	8.0.0.0	search with cache (only 1: intros (n1, n2) (m1, m2); only 1: compute; only 1: apply (add_cancel_r _ _ (m1 + m2)); only 1: now nzsimpl).	1.44657588005	304
Coq.Numbers.Integer.NatPairs.ZNatPairs.sub_0_r	40	0.0.0.0	search with cache (only 1: intro n; only 1: unfold Z.add, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.160572052002	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.sub_succ_r	40	0.0.1.2	search with cache (only 1: intros n m; only 1: unfold Z.pred, Z.succ, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.374701976776	29
Coq.Numbers.Integer.NatPairs.ZNatPairs.mul_0_l	40	0.2.3.0	search with cache (only 1: unfold Z.opp, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.360636949539	15
Coq.Numbers.Integer.NatPairs.ZNatPairs.mul_succ_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.lt_eq_cases	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.lt_irrefl	40	19.18.0	search with cache (only 1: intros; only 1: intro H; only 1: false_hyp H lt_irrefl).	2.75833106041	4670
Coq.Numbers.Integer.NatPairs.ZNatPairs.lt_succ_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.min_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.min_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.max_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.max_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.lt_nge	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.lt_wd	40
Coq.Numbers.Integer.Abstract.ZAddOrder.add_neg_neg	40	0.0.1	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).	0.759550094604	55
Coq.Numbers.Integer.Abstract.ZAddOrder.add_neg_nonpos	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).	0.021134853363	3
Coq.Numbers.Integer.Abstract.ZAddOrder.add_nonpos_neg	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).	0.0214660167694	3
Coq.Numbers.Integer.Abstract.ZAddOrder.add_nonpos_nonpos	40	0.0.1	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).	0.705770015717	47
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.opp_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.opp_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.opp_pos_neg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.opp_neg_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.opp_nonneg_nonpos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.opp_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_m1_0	40	0.160	search with cache (only 1: apply le_succ_l; only 1: now rewrite one_succ, opp_succ, opp_0, succ_pred).	4.15653181076	13158
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_lt_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_lt_mono_r	40	14.4.0	search with cache (only 1: intros; only 1: rewrite <- 2!add_opp_r; only 1: now apply add_lt_mono_r).	4.73677802086	1963
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_le_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_le_mono_r	40	11.12.0	search with cache (only 1: intros; only 1: rewrite <- 2!add_opp_r; only 1: now apply add_le_mono_r).	5.28182411194	2283
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_lt_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_le_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_lt_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_add_lt_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_add_le_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_add_lt_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_add_le_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_sub_lt_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_sub_le_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_sub_lt_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_sub_le_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_sub_lt_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_sub_le_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_sub_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_sub_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_lt_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_le_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_neg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_pos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_nonpos_cases	40	0.15.0.6.0.0	search with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: apply le_sub_le_add_r; only 1: nzsimpl; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_opp_r).	12.5496349335	5075
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_nonneg_cases	40	0.16.0.8.3.0	search with cache (only 1: intros; only 1: apply add_le_cases; only 1: apply le_add_le_sub_r; only 1: nzsimpl; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_opp_r).	17.8203151226	8697
Coq.Numbers.Integer.Abstract.ZAddOrder.zero_pos_neg	40
Coq.Numbers.Integer.Abstract.ZParity.odd_pred	40	0.7.0.0.0	search with cache (only 1: intros; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite <- even_spec, even_succ, odd_spec).	0.72877407074	259
Coq.Numbers.Integer.Abstract.ZParity.even_pred	40	0.0.2.1.0.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	0.0401651859283	16
Coq.Numbers.Integer.Abstract.ZParity.even_opp	40
Coq.Numbers.Integer.Abstract.ZParity.odd_opp	40
Coq.Numbers.Integer.Abstract.ZParity.even_sub	40
Coq.Numbers.Integer.Abstract.ZParity.odd_sub	40
Coq.Numbers.Integer.Abstract.ZMul.mul_pred_r	40
Coq.Numbers.Integer.Abstract.ZMul.mul_pred_l	40
Coq.Numbers.Integer.Abstract.ZMul.mul_opp_l	40
Coq.Numbers.Integer.Abstract.ZMul.mul_opp_r	40
Coq.Numbers.Integer.Abstract.ZMul.mul_opp_opp	40
Coq.Numbers.Integer.Abstract.ZMul.mul_opp_comm	40	0.11.0	search with cache (only 1: intros n m; only 1: apply opp_inj; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	0.27343082428	162
Coq.Numbers.Integer.Abstract.ZMul.mul_sub_distr_l	40
Coq.Numbers.Integer.Abstract.ZMul.mul_sub_distr_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.mul_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.mul_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.mul_nonpos_nonpos	40	0.0.9.0.0	search with cache (only 1: intros; only 1: rewrite <- (mul_0_l m); only 1: apply mul_le_mono_nonpos_r; only 1: order; only 1: order).	2.6413500309	1113
Coq.Numbers.Integer.Abstract.ZMulOrder.mul_nonneg_nonpos	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).	0.0234229564667	3
Coq.Numbers.Integer.Abstract.ZMulOrder.mul_nonpos_nonneg	40	17.1.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_r n)  at 1; only 1: now apply mul_le_mono_nonpos_l).	16.7825450897	8009
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.le_0_mul	40
Coq.Numbers.Integer.Abstract.ZMulOrder.le_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.nlt_square_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.square_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.square_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.square_lt_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.square_le_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_1_mul_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_mul_m1_neg	40	0.0.0.0.0.1.2.0.0	search with cache (only 1: intros n m H1 H2; only 1: apply (mul_lt_mono_neg_r m) in H1; only 1: rewrite mul_1_l in H1; only 1: apply lt_le_pred in H2; only 1: setoid_replace (P 0) with (-1) in H2; only 1: now apply lt_le_trans with m; only 1: apply eq_opp_r; only 1: now rewrite one_succ, opp_pred, opp_0; only 1: assumption).	0.773066997528	334
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_mul_m1_pos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_1_mul_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_m1_mul_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.eq_mul_1	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.le_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.le_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_mul_r	40
Coq.Numbers.Integer.Abstract.ZBits.pow_sub_r	40
Coq.Numbers.Integer.Abstract.ZBits.pow_div_l	40
Coq.Numbers.Integer.Abstract.ZBits.exists_div2	40
Coq.Numbers.Integer.Abstract.ZBits.testbit_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.testbit_succ_r	40
Coq.Numbers.Integer.Abstract.ZBits.testbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.testbit_spec	40
Coq.Numbers.Integer.Abstract.ZBits.testbit_true	40
Coq.Numbers.Integer.Abstract.ZBits.testbit_false	40	0.3.0.0.2.0.0.0.0.0	search with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: now try order'; only 1: split).	2.64715003967	1481
Coq.Numbers.Integer.Abstract.ZBits.testbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.b2z_inj	40
Coq.Numbers.Integer.Abstract.ZBits.add_b2z_double_div2	40
Coq.Numbers.Integer.Abstract.ZBits.add_b2z_double_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.b2z_div2	40
Coq.Numbers.Integer.Abstract.ZBits.b2z_bit0	40	0.0.0.0.22	search with cache (only 1: intros a0; only 1: apply b2z_inj; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; split; simpl; order')).	0.939144134521	696
Coq.Numbers.Integer.Abstract.ZBits.testbit_unique	40
Coq.Numbers.Integer.Abstract.ZBits.bits_0	40
Coq.Numbers.Integer.Abstract.ZBits.bits_opp	40
Coq.Numbers.Integer.Abstract.ZBits.bits_m1	40
Coq.Numbers.Integer.Abstract.ZBits.bit0_odd	40
Coq.Numbers.Integer.Abstract.ZBits.bit0_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.bit0_mod	40	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: left; only 1: destruct b; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: order'; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: order'; only 1: trivial).	4.64900803566	3769
Coq.Numbers.Integer.Abstract.ZBits.testbit_odd	40
Coq.Numbers.Integer.Abstract.ZBits.bit_log2	40
Coq.Numbers.Integer.Abstract.ZBits.bits_above_log2	40
Coq.Numbers.Integer.Abstract.ZBits.bit_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.bits_above_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.bits_iff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.bits_iff_nonneg'	40
Coq.Numbers.Integer.Abstract.ZBits.bits_iff_nonneg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.bits_iff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.bits_iff_neg'	40
Coq.Numbers.Integer.Abstract.ZBits.bits_iff_neg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.div2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.div_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.double_bits_succ	40
Coq.Numbers.Integer.Abstract.ZBits.double_bits	40
Coq.Numbers.Integer.Abstract.ZBits.mul_pow2_bits_add	40
Coq.Numbers.Integer.Abstract.ZBits.mul_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.mul_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.mod_pow2_bits_high	40
Coq.Numbers.Integer.Abstract.ZBits.mod_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.eqf_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.testbit_eqf	40
Coq.Numbers.Integer.Abstract.ZBits.bits_inj_0	40
Coq.Numbers.Integer.Abstract.ZBits.bits_inj	40
Coq.Numbers.Integer.Abstract.ZBits.bits_inj_iff	40
Coq.Numbers.Integer.Abstract.ZBits.bits_inj'	40
Coq.Numbers.Integer.Abstract.ZBits.bits_inj_iff'	40
Coq.Numbers.Integer.Abstract.ZBits.are_bits	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_spec	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_mul_pow2	40	0.1.0.0.0.0.15.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite mul_pow2_bits by trivial; only 1: destruct (le_gt_cases n m); only 1: now apply shiftl_spec_high; only 1: rewrite shiftl_spec_low, testbit_neg_r; only 1: trivial; only 1: now apply lt_sub_0; only 1: trivial).	12.3706200123	8562
Coq.Numbers.Integer.Abstract.ZBits.shiftl_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_wd	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_wd	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_spec_alt	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_shiftl_l	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_shiftl_r	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_1_l	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_eq_0	40	0.1.0.1.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: destruct (le_gt_cases 0 n) as [Hn| Hn]; only 1: rewrite shiftr_div_pow2, div_small_iff by order_nz; only 1: left; only 1: split; only 1: order; only 1: apply log2_lt_cancel; only 1: now rewrite log2_pow2; only 1: rewrite shiftr_mul_pow2 by order; only 1: rewrite eq_mul_0; only 1: generalize (log2_nonneg a); only 1: order).	2.92499399185	1419
Coq.Numbers.Integer.Abstract.ZBits.div2_div	40
Coq.Numbers.Integer.Abstract.ZBits.div2_wd	40	0.0.1.2.0.0.0.2.34	search with cache (only 1: intros H0; only 1: intros a n; only 1: rewrite div2_spec, shiftr_div_pow2; only 1: rewrite div2_spec, shiftr_div_pow2; only 1: nzsimpl; only 1: f_equiv; only 1: trivial; only 1: order'; only 1: order').	3.0875749588	4614
Coq.Numbers.Integer.Abstract.ZBits.div2_odd	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_wd	40
Coq.Numbers.Integer.Abstract.ZBits.land_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0564820766449	3
Coq.Numbers.Integer.Abstract.ZBits.lor_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0769720077515	3
Coq.Numbers.Integer.Abstract.ZBits.ldiff_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0664291381836	3
Coq.Numbers.Integer.Abstract.ZBits.lxor_eq	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_nilpotent	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0206680297852	3
Coq.Numbers.Integer.Abstract.ZBits.lxor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.lor_0_l	40	2.6.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_eq; only 1: apply xorb_nilpotent).	0.151276111603	112
Coq.Numbers.Integer.Abstract.ZBits.lor_0_r	40	1.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0205309391022	4
Coq.Numbers.Integer.Abstract.ZBits.lor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.lor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.lor_diag	40
Coq.Numbers.Integer.Abstract.ZBits.lor_eq_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.lor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.land_0_l	40	8.4.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.192051887512	215
Coq.Numbers.Integer.Abstract.ZBits.land_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.land_comm	40
Coq.Numbers.Integer.Abstract.ZBits.land_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.land_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_0_l	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0208160877228	3
Coq.Numbers.Integer.Abstract.ZBits.ldiff_0_r	40	1.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.020877122879	4
Coq.Numbers.Integer.Abstract.ZBits.ldiff_diag	40
Coq.Numbers.Integer.Abstract.ZBits.lor_land_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.lor_land_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.land_lor_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.land_lor_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_ldiff_l	40
Coq.Numbers.Integer.Abstract.ZBits.lor_ldiff_and	40
Coq.Numbers.Integer.Abstract.ZBits.land_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.setbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.clearbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.setbit_wd	40	0.6.1	search with cache (only 1: intros a a' Ha n n' Hn; only 1: unfold setbit; only 1: now rewrite <- 2!shiftr_opp_r, Ha, Hn).	0.184520959854	47
Coq.Numbers.Integer.Abstract.ZBits.clearbit_wd	40	0.6.1	search with cache (only 1: intros a a' Ha n n' Hn; only 1: unfold clearbit; only 1: now rewrite <- 2!shiftr_opp_r, Ha, Hn).	0.186174154282	47
Coq.Numbers.Integer.Abstract.ZBits.pow2_bits_true	40
Coq.Numbers.Integer.Abstract.ZBits.pow2_bits_false	40
Coq.Numbers.Integer.Abstract.ZBits.pow2_bits_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.setbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.setbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.setbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.setbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.clearbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.clearbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.clearbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.clearbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_land	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_land	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_lor	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_lor	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_wd	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_spec	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_involutive	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_0	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_m1	40
Coq.Numbers.Integer.Abstract.ZBits.lor_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.lor_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.land_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.land_m1_l	40	19.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	0.643383026123	785
Coq.Numbers.Integer.Abstract.ZBits.ldiff_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.lor_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.add_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_land	40
Coq.Numbers.Integer.Abstract.ZBits.land_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_lor	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_land	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_lnot_lnot	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_lxor_l	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_lxor_r	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_m1_r	40	0.0.3.0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite lnot_spec, bits_m1; only 1: trivial; only 1: trivial; only 1: trivial).	0.0266900062561	9
Coq.Numbers.Integer.Abstract.ZBits.lxor_m1_l	40	1.2.0	search with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).	0.0454008579254	12
Coq.Numbers.Integer.Abstract.ZBits.lxor_lor	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ones_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ones_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ones_add	40
Coq.Numbers.Integer.Abstract.ZBits.ones_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ones_mod_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ones_spec_low	40
Coq.Numbers.Integer.Abstract.ZBits.ones_spec_high	40
Coq.Numbers.Integer.Abstract.ZBits.ones_spec_iff	40
Coq.Numbers.Integer.Abstract.ZBits.lor_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.land_ones	40
Coq.Numbers.Integer.Abstract.ZBits.land_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_ones_r	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_ones_r_low	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_ones_l_low	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_neg	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_neg	40	0.2.0	search with cache (only 1: intros a n; only 1: rewrite <- shiftl_opp_r; only 1: now rewrite 2!lt_nge, shiftl_nonneg).	0.0312390327454	5
Coq.Numbers.Integer.Abstract.ZBits.div2_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.div2_neg	40	0.2.0	search with cache (only 1: intros; only 1: rewrite div2_spec; only 1: now rewrite 2!lt_nge, shiftr_nonneg).	0.0291588306427	5
Coq.Numbers.Integer.Abstract.ZBits.lor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.lor_neg	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_nonneg	40	4.5.2.0	search with cache (only 1: intros; only 1: unfold lnot; only 1: rewrite <- lt_succ_r, succ_pred; only 1: now apply opp_pos_neg).	0.959691047668	359
Coq.Numbers.Integer.Abstract.ZBits.lnot_neg	40
Coq.Numbers.Integer.Abstract.ZBits.land_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.land_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.log2_bits_unique	40
Coq.Numbers.Integer.Abstract.ZBits.log2_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.log2_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.log2_shiftl'	40
Coq.Numbers.Integer.Abstract.ZBits.log2_lor	40
Coq.Numbers.Integer.Abstract.ZBits.log2_land	40
Coq.Numbers.Integer.Abstract.ZBits.log2_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.add_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.add3_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.add3_bits_div2	40
Coq.Numbers.Integer.Abstract.ZBits.add_carry_div2	40
Coq.Numbers.Integer.Abstract.ZBits.add_carry_bits_aux	40
Coq.Numbers.Integer.Abstract.ZBits.add_carry_bits	40
Coq.Numbers.Integer.Abstract.ZBits.add_bit1	40
Coq.Numbers.Integer.Abstract.ZBits.nocarry_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.add_nocarry_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_le	40
Coq.Numbers.Integer.Abstract.ZBits.sub_nocarry_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.add_nocarry_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBase.pred_inj	40
Coq.Numbers.Integer.Abstract.ZBase.pred_inj_wd	40
Coq.Numbers.Integer.Abstract.ZBase.succ_m1	40
Coq.Numbers.Integer.Abstract.ZPow.pow_twice_r	40
Coq.Numbers.Integer.Abstract.ZPow.even_pow	40
Coq.Numbers.Integer.Abstract.ZPow.odd_pow	40
Coq.Numbers.Integer.Abstract.ZPow.pow_opp_even	40
Coq.Numbers.Integer.Abstract.ZPow.pow_opp_odd	40
Coq.Numbers.Integer.Abstract.ZPow.pow_even_abs	40
Coq.Numbers.Integer.Abstract.ZPow.pow_even_nonneg	40
Coq.Numbers.Integer.Abstract.ZPow.pow_odd_abs_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.pow_odd_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.abs_pow	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_opp_r	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_abs_l	40	0.0.0.0.0.0.0.0.0.0.0.0.14.0	search with cache (only 1: intros n m; only 1: destruct_max n; only 1: split; only 1: trivial; only 1: trivial; only 1: split; only 1: intros (p, Hp); only 1: exists (- p); only 1: rewrite Hp; only 1: now rewrite mul_opp_l, mul_opp_r; only 1: intros (p, Hp); only 1: exists (- p); only 1: rewrite Hp; only 1: now rewrite mul_opp_opp).	16.8543870449	17485
Coq.Numbers.Integer.Abstract.ZGcd.divide_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_1_r_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_1_r	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_antisym_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_antisym	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_sub_r	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_add_cancel_r	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_opp_r	40	1.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: rewrite and_comm; only 1: rewrite and_comm; only 1: apply gcd_divide_iff).	0.0307819843292	12
Coq.Numbers.Integer.Abstract.ZGcd.gcd_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_abs_r	40	2.0.0.0.11.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite gcd_comm, gcd_opp_l, gcd_comm).	3.06270313263	2147
Coq.Numbers.Integer.Abstract.ZGcd.gcd_0_l	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_0_r	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_diag	40	1.7.0.1.5.1.0	search with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: now apply divide_abs_l, divide_abs_r; only 1: trivial using divide_1_l, le_0_1).	12.4233739376	12053
Coq.Numbers.Integer.Abstract.ZGcd.gcd_add_mult_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_add_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_sub_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.Bezout_wd	40
Coq.Numbers.Integer.Abstract.ZGcd.bezout_1_gcd	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_bezout	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_mul_mono_r_nonneg	40	0.3.0.0	search with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm; only 1: trivial).	0.0390350818634	24
Coq.Numbers.Integer.Abstract.ZGcd.gauss	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_mul_split	40
Coq.Numbers.Integer.Abstract.ZLcm.quot_div_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.rem_mod_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.quot_div	40
Coq.Numbers.Integer.Abstract.ZLcm.rem_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.mod_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.rem_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.rem_mod_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.quot_div_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.divide_div_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.divide_quot_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.gcd_div_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.gcd_quot_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.gcd_div_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.gcd_quot_gcd	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0	search with cache (only 1: intros a b g NZ EQ; only 1: rewrite !quot_div_exact; only 1: rewrite gcd_div_factor; only 1: now rewrite <- EQ, div_same; only 1: generalize (gcd_nonneg a b); only 1: order; only 1: rewrite EQ; only 1: apply gcd_divide_l; only 1: rewrite EQ; only 1: apply gcd_divide_r; only 1: generalize (gcd_nonneg a b); only 1: order; only 1: rewrite EQ; only 1: apply gcd_divide_r; only 1: generalize (gcd_nonneg a b); only 1: order; only 1: rewrite EQ; only 1: apply gcd_divide_l).	8.99772715569	4579
Coq.Numbers.Integer.Abstract.ZLcm.gcd_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.gcd_rem	40	0.1.1.12.0	search with cache (only 1: intros a b Hb; only 1: rewrite rem_eq by order; only 1: rewrite <- add_opp_r, mul_comm, <- mul_opp_l; only 1: rewrite (gcd_comm _ b); only 1: apply gcd_add_mult_diag_r).	0.998939037323	868
Coq.Numbers.Integer.Abstract.ZLcm.lcm_wd	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_equiv1	40	0.0.6.11	search with cache (only 1: symmetry; only 1: apply divide_div_mul_exact; only 1: order; only 1: apply gcd_divide_r).	23.7229759693	1651
Coq.Numbers.Integer.Abstract.ZLcm.lcm_equiv2	40
Coq.Numbers.Integer.Abstract.ZLcm.gcd_div_swap	40
Coq.Numbers.Integer.Abstract.ZLcm.divide_lcm_l	40
Coq.Numbers.Integer.Abstract.ZLcm.divide_lcm_r	40
Coq.Numbers.Integer.Abstract.ZLcm.divide_div	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_least	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_nonneg	40	10.0	search with cache (only 1: unfold lcm; only 1: trivial using gcd_nonneg, abs_nonneg).	0.232954978943	147
Coq.Numbers.Integer.Abstract.ZLcm.lcm_comm	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_divide_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_unique	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_unique_alt	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_assoc	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_0_l	40	0.0.0.1.11.1.4	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: now nzsimpl; only 1: apply divide_0_r; only 1: exists 0; only 1: now nzsimpl; only 1: trivial).	1.8238940239	1870
Coq.Numbers.Integer.Abstract.ZLcm.lcm_0_r	40	0.1.0.1.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	0.0364460945129	10
Coq.Numbers.Integer.Abstract.ZLcm.lcm_1_l_nonneg	40	0.1.0.3.0.1.2	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: exists n; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	0.499032974243	358
Coq.Numbers.Integer.Abstract.ZLcm.lcm_1_r_nonneg	40	0.0.1.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: apply divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl).	0.0249321460724	7
Coq.Numbers.Integer.Abstract.ZLcm.lcm_diag_nonneg	40	0.1.1.0.0.2	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial using divide_refl).	0.0241289138794	10
Coq.Numbers.Integer.Abstract.ZLcm.lcm_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.divide_lcm_eq_r	40	0.4.0.1.4.0	search with cache (only 1: intros; only 1: apply divide_antisym_nonneg; only 1: apply lcm_nonneg; only 1: trivial; only 1: now apply lcm_least; only 1: apply divide_lcm_r).	0.527431964874	539
Coq.Numbers.Integer.Abstract.ZLcm.divide_lcm_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_opp_l	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_opp_r	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	0.0280818939209	6
Coq.Numbers.Integer.Abstract.ZLcm.lcm_abs_l	40	1.0.0.0.2.0.0.0.2.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	1.94347310066	1545
Coq.Numbers.Integer.Abstract.ZLcm.lcm_abs_r	40	2.0.0.0.8.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).	0.944478034973	694
Coq.Numbers.Integer.Abstract.ZLcm.lcm_1_l	40	5.3.0.3.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: trivial using divide_1_l, le_0_1; only 1: now apply divide_abs_l; only 1: intros p Hn Hm; only 1: now apply divide_abs_l).	1.31658697128	1140
Coq.Numbers.Integer.Abstract.ZLcm.lcm_1_r	40	5.3.3.0.0.3.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: trivial using divide_1_l, le_0_1; only 1: intros p Hn Hm; only 1: now apply divide_abs_l).	7.79524803162	7705
Coq.Numbers.Integer.Abstract.ZLcm.lcm_diag	40	1.1.2.0.0.5.1.0	search with cache (only 1: intros; only 1: rewrite <- lcm_abs_r; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: now apply divide_abs_l, divide_abs_r; only 1: intros; only 1: trivial).	1.15333390236	1002
Coq.Numbers.Integer.Abstract.ZLcm.lcm_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_mul_mono_r_nonneg	40	0.5.0.0	search with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), lcm_mul_mono_l, mul_comm; only 1: trivial).	0.171649932861	29
Coq.Numbers.Integer.Abstract.ZLcm.gcd_1_lcm_mul	40
Coq.Numbers.Integer.Abstract.ZMaxMin.succ_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.succ_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.pred_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.pred_min_distr	40	0.1.0.0.0.1.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono; only 1: rewrite 2!min_r; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono).	1.1643819809	812
Coq.Numbers.Integer.Abstract.ZMaxMin.add_max_distr_l	40	1.0.0.0.1.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now f_equiv; only 1: now rewrite <- ?succ_le_mono; only 1: now apply add_le_mono; only 1: rewrite 2!max_l; only 1: now f_equiv; only 1: now rewrite <- ?succ_le_mono; only 1: now apply add_le_mono).	1.2348780632	504
Coq.Numbers.Integer.Abstract.ZMaxMin.add_max_distr_r	40	2.0.0.0.2.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono).	1.9953930378	1435
Coq.Numbers.Integer.Abstract.ZMaxMin.add_min_distr_l	40	0.0.0.2.0.0.0.3.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l).	1.97696495056	855
Coq.Numbers.Integer.Abstract.ZMaxMin.add_min_distr_r	40	1.0.0.0.1.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	1.20632505417	711
Coq.Numbers.Integer.Abstract.ZMaxMin.opp_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.opp_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.sub_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.sub_max_distr_r	40	3.0.0.5.3.0.2.6.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r).	21.4423339367	13946
Coq.Numbers.Integer.Abstract.ZMaxMin.sub_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.sub_min_distr_r	40	0.0.0.7.0.0.0.8.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r).	8.24726891518	5259
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_max_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_max_distr_nonneg_r	40	1.2.0.0.0.1.2.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!max_l; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).	9.06079888344	7083
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_min_distr_nonneg_l	40	0.0.0.3.0.0.0.4.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_l).	3.4441409111	2386
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_min_distr_nonneg_r	40	1.0.0.0.1.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_r).	1.31943798065	743
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_max_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_max_distr_nonpos_r	40	0.3.0.0.0.0.3.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l by trivial; only 1: rewrite max_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite min_r by trivial; only 1: rewrite max_r; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).	5.09943294525	3407
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_min_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_min_distr_nonpos_r	40	3.0.0.0.3.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: rewrite min_r; only 1: reflexivity; only 1: now apply mul_le_mono_nonpos_r; only 1: rewrite max_l by trivial; only 1: rewrite min_l; only 1: reflexivity; only 1: now apply mul_le_mono_nonpos_r).	2.1380751133	1390
Coq.Numbers.Integer.Abstract.ZLt.neg_pos_cases	40	0.1.0.49.4	search with cache (only 1: intro n; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: intuition order; only 1: intuition order; only 1: intuition order).	7.79786396027	12945
Coq.Numbers.Integer.Abstract.ZLt.nonpos_pos_cases	40
Coq.Numbers.Integer.Abstract.ZLt.neg_nonneg_cases	40	0.0.34.0	search with cache (only 1: intro; only 1: destruct (lt_ge_cases n 0); only 1: intuition order; only 1: intuition order).	0.975183010101	2104
Coq.Numbers.Integer.Abstract.ZLt.nonpos_nonneg_cases	40	0.19.0	search with cache (only 1: intro; only 1: apply add_le_cases; only 1: now nzsimpl).	0.810402870178	733
Coq.Numbers.Integer.Abstract.ZLt.lt_pred_l	40	9.0.0	search with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	0.157652139664	97
Coq.Numbers.Integer.Abstract.ZLt.le_pred_l	40	12.0.0	search with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: now apply le_le_succ_r).	0.403532981873	350
Coq.Numbers.Integer.Abstract.ZLt.lt_le_pred	40	2.1.8.1	search with cache (only 1: symmetry; only 1: rewrite <- (succ_pred m)  at 2; only 1: symmetry; only 1: apply lt_succ_r).	1.6856739521	1388
Coq.Numbers.Integer.Abstract.ZLt.nle_pred_r	40	0.0.9.0	search with cache (only 1: intro; only 1: rewrite nle_gt; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	0.369117021561	261
Coq.Numbers.Integer.Abstract.ZLt.lt_pred_le	40	0.8.3.6.0	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite <- (succ_pred m); only 1: rewrite lt_succ_r; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).	39.3805258274	15618
Coq.Numbers.Integer.Abstract.ZLt.lt_lt_pred	40	3.1.6.2.3	search with cache (only 1: intros n m H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite <- H; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	2.53627586365	2076
Coq.Numbers.Integer.Abstract.ZLt.le_le_pred	40	4.3.1.3	search with cache (only 1: intros; only 1: apply lt_le_incl; only 1: apply lt_pred_le; only 1: order).	1.34743118286	911
Coq.Numbers.Integer.Abstract.ZLt.lt_pred_lt	40	10.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred m); only 1: apply lt_succ_r; only 1: order).	1.9585108757	1302
Coq.Numbers.Integer.Abstract.ZLt.le_pred_lt	40	2.0.0.1.0	search with cache (only 1: intros; only 1: apply lt_le_incl; only 1: rewrite <- (succ_pred m); only 1: apply lt_succ_r; only 1: assumption).	0.193795919418	58
Coq.Numbers.Integer.Abstract.ZLt.pred_lt_mono	40	1.2.3.1.3.6.4.6	search with cache (only 1: intros; only 1: rewrite <- (succ_pred m); only 1: rewrite lt_succ_r; only 1: symmetry; only 1: rewrite pred_succ; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply le_succ_l).	11.206692934	6356
Coq.Numbers.Integer.Abstract.ZLt.pred_le_mono	40
Coq.Numbers.Integer.Abstract.ZLt.lt_succ_lt_pred	40	1.2.0	search with cache (only 1: intros n m; only 1: rewrite lt_le_pred; only 1: apply le_succ_l).	0.0189530849457	6
Coq.Numbers.Integer.Abstract.ZLt.le_succ_le_pred	40	0.0.0.3.1.4	search with cache (only 1: intros n m; only 1: rewrite <- lt_pred_le; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: rewrite pred_succ; only 1: apply lt_succ_r).	0.475875139236	171
Coq.Numbers.Integer.Abstract.ZLt.lt_pred_lt_succ	40	0.1.0.6.0	search with cache (only 1: intros n m; only 1: rewrite lt_succ_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply le_succ_l).	0.376873970032	138
Coq.Numbers.Integer.Abstract.ZLt.le_pred_lt_succ	40	2.3.5.0	search with cache (only 1: intros n m; only 1: symmetry; only 1: rewrite <- lt_pred_le; only 1: apply lt_succ_r).	0.606709957123	292
Coq.Numbers.Integer.Abstract.ZLt.neq_pred_l	40
Coq.Numbers.Integer.Abstract.ZLt.lt_m1_r	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_eq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_neq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_null	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_pos	40	0.1.0.0.1.2	search with cache (only 1: intro; only 1: unfold sgn; only 1: destruct (compare_spec 0 n); only 1: order; only 1: now rewrite (opp_lt_mono 0 n), opp_0; only 1: order').	0.0486791133881	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_neg	40	0.0.0.0.0.0	search with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.0184938907623	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_max	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_neq'	40	0.0.2.6	search with cache (only 1: intros; only 1: rewrite abs_neq; only 1: auto with relations; only 1: now rewrite (opp_le_mono n 0), opp_0).	0.312362909317	183
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_nonneg	40	1.2.1.2.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.161159038544	73
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_eq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_neq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_0	40	6.8	search with cache (only 1: apply abs_eq; only 1: order).	0.0786941051483	122
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_0_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_eq_or_opp	40	0.2.9.1.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: now left; only 1: right; only 1: reflexivity).	0.902973890305	627
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_or_opp_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_involutive	40	4.0.0.1.2.2.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: apply abs_eq; only 1: auto; only 1: rewrite (abs_eq (- n)); only 1: reflexivity; only 1: now rewrite opp_nonneg_nonpos).	0.424170970917	430
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_case_strong	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_case	40	0.0.0.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: auto).	0.0188739299774	4
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_eq_cases	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_lt	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_le	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_sub_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_square	40	8.1.1.2	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	2.94590783119	1798
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_0	40	16.16.0	search with cache (only 1: rewrite sgn_null; only 1: auto with relations; only 1: auto with relations).	4.27440595627	7901
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_pos_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_null_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_neg_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_nonpos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_sgn	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_sgn	40	0.4.0.0.0.1.1.3	search with cache (only 1: intros n; only 1: destruct_sgn n; only 1: apply sgn_pos; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).	1.79994988441	2490
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_eq	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_opp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_nonneg	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_nonpos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_sign	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_pos	40	0.0.2.0	search with cache (only 1: intros; only 1: apply NZQuot.div_pos; only 1: auto; only 1: trivial).	0.18635892868	47
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_str_pos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_quot_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_quot_ge	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_succ_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_pred_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_pred_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_succ_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_lt_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_le_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_le_lower_bound	40	1.0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (quot_mul q b) by order; only 1: apply quot_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0237529277802	6
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_add_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_rem_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_rem_distr_l	40	0.0.0.0.5.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: rewrite !rem_eq by trivial; only 1: rewrite quot_mul_cancel_r by order; only 1: now rewrite mul_sub_distr_r, <- !mul_assoc, (mul_comm (a ÷ b) c)).	0.430027961731	171
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.add_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.add_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.add_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_mul_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_unique_pos	40	0.0.0.0.0.1.0.1.0.0.0.1	search with cache (only 1: intros a b q r Hr EQ; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: trivial; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).	6.23376202583	3698
Coq.Numbers.Integer.Abstract.ZDivFloor.div_unique_neg	40	0.0.0.0	search with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).	0.0210890769958	4
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_unique	40	1.1.0.0.1.0.1.0.1.0.1.1.0	search with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: destruct Hr; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: right; only 1: apply mod_neg_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	15.3116848469	11449
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_unique_pos	40	0.0.1.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).	0.872766971588	464
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_unique_neg	40	0.0.0.0	search with cache (only 1: intros; only 1: apply mod_unique with q; only 1: auto; only 1: auto).	0.0212080478668	4
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.opp_mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_sign	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_small	40	1.0.0.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: auto; only 1: intuition; only 1: now nzsimpl).	0.0434319972992	8
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_small	40	1.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto; only 1: intuition; only 1: now nzsimpl).	0.106060028076	32
Coq.Numbers.Integer.Abstract.ZDivFloor.div_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_1_r	40	0.0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: split; only 1: order || apply lt_0_1; only 1: order || apply lt_0_1; only 1: now nzsimpl).	0.089772939682	51
Coq.Numbers.Integer.Abstract.ZDivFloor.div_1_l	40	0.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0207648277283	5
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_1_l	40	0.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0202610492706	5
Coq.Numbers.Integer.Abstract.ZDivFloor.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_mul	40	0.0.0.1.0.1.0.0.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: intuition; only 1: right; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: apply mul_comm).	5.0897769928	3012
Coq.Numbers.Integer.Abstract.ZDivFloor.div_unique_exact	40	0.0.0.0.0.0.1.4.8.8	search with cache (only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: intuition order; only 1: right; only 1: intuition order; only 1: nzsimpl; only 1: now try split).	0.909343957901	964
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_le	40	0.0.1.0	search with cache (only 1: intros; only 1: apply mod_le; only 1: order; only 1: trivial).	0.258740901947	112
Coq.Numbers.Integer.Abstract.ZDivFloor.div_pos	40	7	search with cache (only 1: apply div_pos).	0.662013053894	160
Coq.Numbers.Integer.Abstract.ZDivFloor.div_str_pos	40	0.2.0	search with cache (only 1: intros a b (Hb, Hab); only 1: apply div_str_pos; only 1: auto).	0.286463022232	91
Coq.Numbers.Integer.Abstract.ZDivFloor.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_div_le	40	0.0.2.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)); only 1: rewrite <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_pos_bound a b); only 1: trivial; only 1: trivial).	0.104969024658	22
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_div_ge	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_succ_div_gt	40	0.1.1.1.5.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: destruct (eq_decidable (a mod b) 0) as [EQ| NEQ]; only 1: order; only 1: destruct (mod_pos_bound a b); only 1: intuition; only 1: intuition).	5.97302103043	2084
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_succ_div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_exact	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0318758487701	4
Coq.Numbers.Integer.Abstract.ZDivFloor.div_lt_upper_bound	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	0.0262470245361	6
Coq.Numbers.Integer.Abstract.ZDivFloor.div_le_upper_bound	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	0.0275049209595	6
Coq.Numbers.Integer.Abstract.ZDivFloor.div_le_lower_bound	40	1.0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0380268096924	6
Coq.Numbers.Integer.Abstract.ZDivFloor.div_le_compat_l	40	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	search with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).	17.0829260349	7249
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_add	40	0.4.0.4.7.4.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_bound_or; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: apply add_cancel_l; only 1: apply mul_comm).	8.70586395264	6571
Coq.Numbers.Integer.Abstract.ZDivFloor.div_add	40	0.1.0.2.0.4.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: intuition; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.621314048767	395
Coq.Numbers.Integer.Abstract.ZDivFloor.div_add_l	40	0.3.4.0	search with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: order).	0.438750982285	140
Coq.Numbers.Integer.Abstract.ZDivFloor.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_mul_cancel_l	40	0.0.3.2.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: tauto; only 1: tauto).	0.843644142151	122
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_mod_distr_l	40	0.6.0.0.0.1.1.0.0.2.0	search with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: tauto; only 1: tauto; only 1: tauto; only 1: rewrite <- neq_mul_0; only 1: tauto).	29.6758730412	7581
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_mod_distr_r	40	3.4.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	0.534910917282	80
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_mod_idemp_r	40	0.2.3.0	search with cache (only 1: intros a b n Hn; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).	0.662894010544	89
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_mod	40	0.0.2.0.1.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: rewrite !(mul_comm a); only 1: now rewrite mul_comm; only 1: order; only 1: order).	0.0655720233917	9
Coq.Numbers.Integer.Abstract.ZDivFloor.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.add_mod_idemp_r	40	0.3.2.0	search with cache (only 1: intros a b n Hn; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).	0.502272844315	84
Coq.Numbers.Integer.Abstract.ZDivFloor.add_mod	40	0.0.1.0.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.0307688713074	6
Coq.Numbers.Integer.Abstract.ZDivFloor.div_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.rem_mul_r	40	1.0.2.0.0.0.2	search with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: now apply div_mod).	0.797123908997	170
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_mul_le	40	0.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: auto).	0.0657501220703	9
Coq.Numbers.Integer.Abstract.ZAdd.add_pred_l	40
Coq.Numbers.Integer.Abstract.ZAdd.add_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.add_opp_r	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_succ_l	40	3.5.2.3.12	search with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: nzsimpl; only 1: now f_equiv).	24.74010396	13304
Coq.Numbers.Integer.Abstract.ZAdd.sub_pred_l	40	0.0.1.1	search with cache (only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).	0.0309410095215	6
Coq.Numbers.Integer.Abstract.ZAdd.sub_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.opp_pred	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_diag	40
Coq.Numbers.Integer.Abstract.ZAdd.add_opp_diag_l	40
Coq.Numbers.Integer.Abstract.ZAdd.add_opp_diag_r	40	0.15.0	search with cache (only 1: intro n; only 1: rewrite add_comm; only 1: now rewrite add_comm, add_opp_r, sub_diag).	0.703172922134	384
Coq.Numbers.Integer.Abstract.ZAdd.add_opp_l	40	0.0.0.0.1.4.12	search with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: nzinduct m; only 1: now nzsimpl; only 1: intro m; only 1: rewrite opp_succ, sub_succ_r, add_pred_r; only 1: now rewrite pred_inj_wd).	16.6037931442	9490
Coq.Numbers.Integer.Abstract.ZAdd.add_sub_assoc	40
Coq.Numbers.Integer.Abstract.ZAdd.opp_involutive	40
Coq.Numbers.Integer.Abstract.ZAdd.opp_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.opp_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.opp_inj	40
Coq.Numbers.Integer.Abstract.ZAdd.opp_inj_wd	40	0.1.4.5.1.0.3	search with cache (only 1: intros n1 n2; only 1: split; only 1: intros; only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H; only 1: intros; only 1: now f_equiv).	1.76157307625	1628
Coq.Numbers.Integer.Abstract.ZAdd.eq_opp_l	40	1.3.1.0.3.1.0.0	search with cache (only 1: intros n m; only 1: split; only 1: intros; only 1: apply opp_inj; only 1: now rewrite opp_involutive; only 1: intros; only 1: apply opp_inj; only 1: now rewrite opp_involutive).	1.85943198204	1538
Coq.Numbers.Integer.Abstract.ZAdd.eq_opp_r	40	0.0	search with cache (only 1: intros n m; only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive).	0.0203211307526	2
Coq.Numbers.Integer.Abstract.ZAdd.sub_add_distr	40	0.0.0.0	search with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr; only 1: now rewrite add_assoc).	0.0361440181732	4
Coq.Numbers.Integer.Abstract.ZAdd.sub_sub_distr	40	0.5.2.0	search with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: now rewrite opp_involutive).	0.304090023041	65
Coq.Numbers.Integer.Abstract.ZAdd.sub_opp_l	40	2.1.3.0.0	search with cache (only 1: intro n; only 1: intro m; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now rewrite add_comm).	0.296449899673	79
Coq.Numbers.Integer.Abstract.ZAdd.sub_opp_r	40	0.0.0	search with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: now rewrite opp_involutive).	0.0261318683624	3
Coq.Numbers.Integer.Abstract.ZAdd.add_sub_swap	40	0.0.3.7.4.13.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: rewrite add_pred_l; only 1: now rewrite pred_inj_wd).	27.1814939976	13423
Coq.Numbers.Integer.Abstract.ZAdd.sub_cancel_l	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_cancel_r	40
Coq.Numbers.Integer.Abstract.ZAdd.add_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.add_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_move_l	40	2.20.0	search with cache (only 1: intros n m p; only 1: rewrite <- add_opp_r; only 1: now apply add_move_l).	3.76997804642	2721
Coq.Numbers.Integer.Abstract.ZAdd.sub_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.add_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.add_move_0_r	40	0.4.0	search with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: now rewrite add_move_l, sub_0_l).	0.0427000522614	7
Coq.Numbers.Integer.Abstract.ZAdd.sub_move_0_l	40	0.3.0	search with cache (only 1: intros n m; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).	0.109031915665	16
Coq.Numbers.Integer.Abstract.ZAdd.sub_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.add_simpl_l	40	10.0	search with cache (only 1: intros n m; only 1: now rewrite add_comm, <- add_sub_assoc, sub_diag, add_0_r).	0.592193126678	169
Coq.Numbers.Integer.Abstract.ZAdd.add_simpl_r	40	0.1.0	search with cache (only 1: intros; only 1: rewrite add_comm; only 1: now rewrite add_sub_swap, sub_diag, add_0_l).	0.0316460132599	4
Coq.Numbers.Integer.Abstract.ZAdd.sub_simpl_l	40	0.0.5.11.0	search with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: apply add_move_l; only 1: rewrite <- 2!add_opp_r; only 1: now rewrite add_comm).	11.0582351685	4269
Coq.Numbers.Integer.Abstract.ZAdd.sub_simpl_r	40	3.0.0.2	search with cache (only 1: nzinduct m; only 1: now nzsimpl; only 1: intro m; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.276052951813	54
Coq.Numbers.Integer.Abstract.ZAdd.sub_add	40	0.0	search with cache (only 1: intros; only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.0274410247803	2
Coq.Numbers.Integer.Abstract.ZAdd.add_add_simpl_l_l	40
Coq.Numbers.Integer.Abstract.ZAdd.add_add_simpl_l_r	40
Coq.Numbers.Integer.Abstract.ZAdd.add_add_simpl_r_l	40	2.19.0	search with cache (only 1: intros n m p; only 1: rewrite add_comm; only 1: apply add_add_simpl_l_l).	2.76279783249	1824
Coq.Numbers.Integer.Abstract.ZAdd.add_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_add_simpl_r_r	40	0.26.0	search with cache (only 1: intros n m p; only 1: rewrite (add_comm p m); only 1: now rewrite <- sub_sub_distr, sub_add_distr, sub_diag, sub_0_l, sub_opp_r).	3.24529099464	2301
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_same	40	1.19.26.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with 0; only 1: now rewrite abs_pos; only 1: now nzsimpl).	31.1396780014	82731
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_same	40	0.1.23.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: now rewrite abs_pos; only 1: now nzsimpl).	1.22865605354	3279
Coq.Numbers.Integer.Abstract.ZDivEucl.div_small	40	0.2.4.0	search with cache (only 1: intros; only 1: intuition; only 1: apply div_small; only 1: intuition).	0.142518043518	89
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_small	40	0.3.2.0	search with cache (only 1: intros; only 1: intuition; only 1: apply mod_small; only 1: intuition).	0.116301059723	70
Coq.Numbers.Integer.Abstract.ZDivEucl.div_0_l	40	0.1.4.5.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.385741949081	361
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_1_r	40	0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: now nzsimpl).	0.0371329784393	9
Coq.Numbers.Integer.Abstract.ZDivEucl.div_1_l	40	0.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0114200115204	5
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_1_l	40	0.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0112669467926	5
Coq.Numbers.Integer.Abstract.ZDivEucl.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_mul	40	0.0.0.0.0.3.4.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).	0.392802000046	344
Coq.Numbers.Integer.Abstract.ZDivEucl.div_unique_exact	40	0.0.9.6.4.6.6	search with cache (only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with 0; only 1: intuition; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: now try split).	38.6222448349	30945
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_pos	40	7	search with cache (only 1: apply div_pos).	0.687201023102	185
Coq.Numbers.Integer.Abstract.ZDivEucl.div_str_pos	40	0.3.0	search with cache (only 1: intros a b (Hb, Hab); only 1: apply div_str_pos; only 1: auto).	0.253360033035	110
Coq.Numbers.Integer.Abstract.ZDivEucl.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_div_le	40	9.0.3.0.6.0	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)); only 1: rewrite <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: now apply mod_always_pos).	5.73713207245	2684
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_succ_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_pred_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_exact	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0197930335999	4
Coq.Numbers.Integer.Abstract.ZDivEucl.div_lt_upper_bound	40	0.0.3.1.0.0.0	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: intuition; only 1: order; only 1: auto).	0.354324102402	117
Coq.Numbers.Integer.Abstract.ZDivEucl.div_le_upper_bound	40	0.0.1.0.0.0	search with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	0.0195651054382	7
Coq.Numbers.Integer.Abstract.ZDivEucl.div_le_lower_bound	40	1.0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0707960128784	6
Coq.Numbers.Integer.Abstract.ZDivEucl.div_le_compat_l	40	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	search with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).	16.2254769802	6893
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_add	40	0.4.0.0.7.5.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_always_pos; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: apply add_cancel_l; only 1: apply mul_comm).	2.48763394356	2400
Coq.Numbers.Integer.Abstract.ZDivEucl.div_add	40	0.1.0.2.0.4.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: intuition; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	1.36044001579	1087
Coq.Numbers.Integer.Abstract.ZDivEucl.div_add_l	40	0.3.4.0	search with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: trivial).	0.243937969208	127
Coq.Numbers.Integer.Abstract.ZDivEucl.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_mul_cancel_l	40	0.0.3.4.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: trivial; only 1: order).	1.93116807938	607
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_mod_distr_l	40	0.3.0.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: trivial; only 1: order; only 1: rewrite <- neq_mul_0; only 1: intuition order).	2.27193593979	729
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_mod_distr_r	40	1.2.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	0.268503904343	46
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_mod_idemp_r	40	0.2.3.0	search with cache (only 1: intros a b n Hn; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: auto).	0.623147964478	142
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_mod	40	0.0.2.1.1.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: rewrite !(mul_comm a); only 1: now rewrite mul_comm; only 1: auto; only 1: auto).	0.0357890129089	10
Coq.Numbers.Integer.Abstract.ZDivEucl.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.add_mod_idemp_r	40	0.2.3.0	search with cache (only 1: intros a b n Hn; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: auto).	0.769719839096	170
Coq.Numbers.Integer.Abstract.ZDivEucl.add_mod	40	0.0.3.0.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: auto; only 1: auto).	0.28898692131	42
Coq.Numbers.Integer.Abstract.ZDivEucl.div_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_mul_r	40	0.0.0.2.0.0.0.2	search with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).	0.587446928024	164
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_mul_le	40	0.1.0.2.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	0.345160007477	152
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_divides	40
Coq.Numbers.Integer.Binary.ZBinary.test	40	1.3	search with cache (only 1: intros a b Ha H; only 1: Z.order).	0.0111360549927	6
Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40
Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40
Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	40	0.0.0.1.0.1.0.0.0	search with cache (only 1: unfold eqb31; only 1: intros x y; only 1: rewrite spec_compare; only 1: case Z.compare_spec; only 1: intuition; only 1: apply Int31_canonic; only 1: auto; only 1: easy; only 1: easy).	0.41984796524	95
Coq.Numbers.Cyclic.Int31.Ring31.test	40	24.12.8	search with cache (only 1: intuition; only 1: destruct (x / 2) as (q, r); only 1: ring).	23.3126909733	22949
Coq.Numbers.Cyclic.Int31.Cyclic31.iszero_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iszero_not_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sneakl_shiftr	40	3.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: reflexivity).	0.0245461463928	6
Coq.Numbers.Cyclic.Int31.Cyclic31.sneakr_shiftl	40	0.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: auto).	0.0243299007416	3
Coq.Numbers.Cyclic.Int31.Cyclic31.twice_zero	40
Coq.Numbers.Cyclic.Int31.Cyclic31.twice_or_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_S	40	0.0	search with cache (only 1: destruct x; only 1: auto).	0.0215651988983	2
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_S_tail	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_n_0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_size	40	0.3.2	search with cache (only 1: destruct x; only 1: simpl; only 1: auto).	0.0269498825073	8
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_above_size	40	3.9.0.0.0.3.11.0	search with cache (only 1: destruct x; only 1: intros n; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl in *; only 1: rewrite IHn; only 1: auto).	11.1333870888	16499
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_S	40	0.0.0.0.0.0.0	search with cache (only 1: intros n; only 1: elim n; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: now f_equal).	0.031464099884	7
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_S_tail	40	0.0.0.0.1.1	search with cache (only 1: intros n; only 1: elim n; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: now f_equal).	0.0304400920868	8
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_n_0	40	0.1.0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHn; only 1: auto).	0.0323300361633	7
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_size	40	0.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: auto).	0.0275280475616	3
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_above_size	40	0.0.1.0.0.4.0.0.0	search with cache (only 1: intros; only 1: replace k with (k - size + size)%nat by lia; only 1: induction (k - size)%nat; only 1: destruct x; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHn; only 1: auto).	6.9466779232	897
Coq.Numbers.Cyclic.Int31.Cyclic31.firstr_firstl	40	0.1.0	search with cache (only 1: intros; only 1: destruct x; only 1: auto).	0.0244429111481	4
Coq.Numbers.Cyclic.Int31.Cyclic31.firstl_firstr	40	1.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: auto).	0.0270409584045	4
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_predsize_0_firstl	40	1.4.3.0	search with cache (only 1: destruct x; only 1: intro H; only 1: injection H; only 1: auto).	2.23331212997	216
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_0_propagates	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.int31_ind_sneakl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.int31_ind_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_aux_eqn	40	1.1.3.0.1	search with cache (only 1: destruct x; only 1: simpl in *; only 1: intros; only 1: rewrite H; only 1: auto).	0.31229186058	145
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_aux_converges	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_eqn	40	0.1.11.0.5.0	search with cache (only 1: intros; only 1: destruct x; only 1: simpl in *; only 1: compute; only 1: rewrite H; only 1: auto).	2.89391303062	1515
Coq.Numbers.Cyclic.Int31.Cyclic31.recrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recrbis_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_equiv	40	6.2	search with cache (only 1: apply recrbis_aux_equiv; only 1: auto).	0.0229620933533	10
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_pos	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_nonneg	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_zero	40	4.4	search with cache (only 1: intros n; only 1: tauto).	0.0338220596313	20
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_le	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_length	40	0.0.2.1	search with cache (only 1: intros; only 1: destruct x; only 1: simpl; only 1: auto with arith).	3.04555797577	24
Coq.Numbers.Cyclic.Int31.Cyclic31.l2i_i2l	40	0.1	search with cache (only 1: destruct x; only 1: auto).	0.033439874649	12
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_sneakr	40	1.0.4.0	search with cache (only 1: intros; only 1: destruct x; only 1: compute; only 1: auto).	2.53214097023	15
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_sneakl	40	0.0.0	search with cache (only 1: destruct x; only 1: compute; only 1: auto).	0.0276660919189	3
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_l2i	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_nshiftl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_i2l	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_shiftr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_incrbis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_double_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_double	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_phi_aux	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2ibis_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2ibis_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_positive_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.double_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.double_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2i_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.positive_to_int31_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.positive_to_int31_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv_negative	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.wB_pos	40	0	search with cache (only 1: auto with zarith).	0.0145030021667	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_zdigits	40	0	search with cache (only 1: auto).	0.0138080120087	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_more_than_1_digit	40	0	search with cache (only 1: reflexivity).	0.053503036499	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_0	40	0	search with cache (only 1: auto).	0.012552022934	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_1	40	0	search with cache (only 1: reflexivity).	0.0125930309296	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_m1	40	0.8	search with cache (only 1: simpl; only 1: reflexivity).	0.387450933456	10
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_compare	40	6	search with cache (only 1: reflexivity).	0.126730918884	71
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_succ_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_succ	40	3.1	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0762639045715	49
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub	40	0.0	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0166230201721	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_carry	40	0.0.5.1	search with cache (only 1: intros; only 1: unfold sub31carryc, sub31, interp_carry; only 1: repeat rewrite phi_phi_inv; only 1: apply Zplus_mod_idemp_l).	0.124651908875	16
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp	40	0.0	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0168709754944	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pred_c	40	0.0	search with cache (only 1: intros; only 1: apply spec_sub_c).	0.0176160335541	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pred	40	0.3.1	search with cache (only 1: intros; only 1: rewrite <- spec_1; only 1: apply phi_phi_inv).	0.376116991043	60
Coq.Numbers.Cyclic.Int31.Cyclic31.phi2_phi_inv2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mul_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mul	40	0.0	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0169460773468	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_square_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_div21	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter_int31_iter_nat	40
Coq.Numbers.Cyclic.Int31.Cyclic31.addmuldiv31_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_mul_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pos_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_head00	40
Coq.Numbers.Cyclic.Int31.Cyclic31.head031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_nz	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_head0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_tail00	40	0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).	0.0301148891449	8
Coq.Numbers.Cyclic.Int31.Cyclic31.tail031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_tail0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.quotient_by_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_main	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_init	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_test_true	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_test_false	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt31_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.div31_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt31_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter31_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sqrt	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_lower_bound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.div312_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter312_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sqrt2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_is_even	40
Coq.Numbers.Cyclic.Int31.Cyclic31.log2_phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_lor	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_land	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_lxor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_more_than_1_digit	40	6	search with cache (only 1: lia).	0.0323469638824	7
Coq.Numbers.Cyclic.ZModulo.ZModulo.wB_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z_2	40	0.0.0.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0289478302002	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z	40	0.1.0.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0307989120483	5
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_of_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_zdigits	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_0	40	0.1.2.0	search with cache (only 1: unfold to_Z; only 1: apply Zmod_small; only 1: unfold wB, base; only 1: auto with zarith).	0.0313069820404	7
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_Bm1	40	0.0.0.9.0.0.0	search with cache (only 1: unfold to_Z, one; only 1: apply Zmod_small; only 1: split; only 1: generalize wB_pos; only 1: lia; only 1: unfold wB, base; only 1: auto with zarith).	1.08948302269	1036
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_compare	40	0	search with cache (only 1: auto).	0.017765045166	1
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_eq0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Zmod_equal	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_succ_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_succ	40	0.5.0.0	search with cache (only 1: intros; only 1: unfold opp, to_Z; only 1: rewrite Zplus_mod_idemp_l; only 1: auto).	0.0418779850006	9
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pred_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pred	40	3.5.0.0	search with cache (only 1: intros; only 1: unfold succ, to_Z, Z.succ; only 1: symmetry; only 1: apply Zplus_mod_idemp_l).	0.605731010437	263
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub	40	2.9.6.0.0	search with cache (only 1: intros; only 1: unfold add, to_Z; only 1: rewrite Zminus_mod_idemp_r; only 1: rewrite <- Zminus_mod_idemp_l; only 1: auto).	2.52148318291	2910
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_mul_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_mul	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_square_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_modulo	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_modulo_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Zgcd_bound	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_gcd	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_gcd_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div21	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_mul_div	40	2.0.1	search with cache (only 1: intros; only 1: unfold add, to_Z; only 1: auto).	0.0829911231995	14
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pos_mod	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_is_even	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sqrt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sqrt2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.two_p_power2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_head00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_head0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Ptail_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Ptail_bounded	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_tail00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_tail0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_lor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_land	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_lxor	40
Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40
Coq.Numbers.Cyclic.Int63.Cyclic63.P	40
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	40	0.0.1.0.1.0.0.0.0.0.0.1	search with cache (only 1: intros n p a H; only 1: rewrite Zmod_eq by auto with zarith; only 1: unfold Z.sub at 1; only 1: rewrite Z_div_plus_full_l by auto with zarith; only 1: replace (2 ^ n) with (2 ^ (n - p) * 2 ^ p) by (rewrite <- Zpower_exp; [ f_equal |  |  ]; lia); only 1: rewrite <- Zdiv_Zdiv, Z_div_mult by auto with zarith; only 1: rewrite (Z.mul_comm (2 ^ (n - p))), Z.mul_assoc; only 1: rewrite Zopp_mult_distr_l; only 1: rewrite Z_div_mult by auto with zarith; only 1: symmetry; only 1: apply Zmod_eq; only 1: auto with zarith).	5.90451288223	1715
Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40
Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	2.18	search with cache (only 1: Z.swap_greater; only 1: now apply Z.pow_pos_nonneg).	1.38802719116	2182
Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40
Coq.Numbers.Cyclic.Int63.Int63.wB_diff_0	40	1.9.0	search with cache (only 1: intros h; only 1: Ztac.normZ; only 1: auto with zarith).	0.130651950836	86
Coq.Numbers.Cyclic.Int63.Int63.wB_pos	40	3	search with cache (only 1: reflexivity).	0.0493040084839	4
Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	17	search with cache (only 1: auto).	0.144528865814	126
Coq.Numbers.Cyclic.Int63.Int63.to_Z_1	40	0	search with cache (only 1: reflexivity).	0.00902915000916	1
Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	90	search with cache (only 1: congruence).	1.50658798218	6367
Coq.Numbers.Cyclic.Int63.Int63.to_Z_inj	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	0.0.0	search with cache (only 1: intros; only 1: rewrite <- not_true_iff_false, eqb_spec; only 1: trivial).	0.107356071472	3
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_correct	40	0.0.1	search with cache (only 1: intros x y; only 1: rewrite eqb_false_spec; only 1: trivial).	0.0188360214233	13
Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40
Coq.Numbers.Cyclic.Int63.Int63.cast_refl	40
Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40	0.0.0.0.0.21.2	search with cache (only 1: intros; only 1: compute; only 1: generalize (eqb_correct i i); only 1: rewrite eqb_refl; only 1: intros; only 1: rewrite (Eqdep_dec.eq_proofs_unicity eq_dec (e eq_refl) eq_refl); only 1: trivial).	1.05944013596	2437
Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40	0.0.1.2.0	search with cache (only 1: intros; only 1: unfold eqo; only 1: generalize (eqb_correct i j); only 1: rewrite H; only 1: trivial).	0.0157368183136	8
Coq.Numbers.Cyclic.Int63.Int63.eqbP	40
Coq.Numbers.Cyclic.Int63.Int63.ltbP	40
Coq.Numbers.Cyclic.Int63.Int63.lebP	40
Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_zero_spec	40	30.1.1	search with cache (only 1: split; only 1: auto using eqb_correct, eqb_complete; only 1: apply f_equal).	2.62259602547	6891
Coq.Numbers.Cyclic.Int63.Int63.diveucl_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succ_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.pred_spec	40
Coq.Numbers.Cyclic.Int63.Int63.predc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.oppc_spec	40	0	search with cache (only 1: apply subc_spec).	0.00842499732971	1
Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40	1	search with cache (only 1: apply sub_spec).	0.0136499404907	2
Coq.Numbers.Cyclic.Int63.Int63.oppcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_gcd	40
Coq.Numbers.Cyclic.Int63.Int63.gcd_spec	40
Coq.Numbers.Cyclic.Int63.Int63.head00_spec	40
Coq.Numbers.Cyclic.Int63.Int63.tail00_spec	40	0	search with cache (only 1: now intros h; rewrite (to_Z_inj _ 0 h)).	0.00970697402954	1
Coq.Numbers.Cyclic.Int63.Int63.eqm_mod	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_sub	40
Coq.Numbers.Cyclic.Int63.Int63.eqmE	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40
Coq.Numbers.Cyclic.Int63.Int63.int_eqm	40	48	search with cache (only 1: now intros ->).	0.602514982224	1890
Coq.Numbers.Cyclic.Int63.Int63.eqmI	40
Coq.Numbers.Cyclic.Int63.Int63.add_assoc	40
Coq.Numbers.Cyclic.Int63.Int63.add_comm	40
Coq.Numbers.Cyclic.Int63.Int63.add_le_r	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_l	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_r	40	0.0.0.0.0.1.0	search with cache (only 1: intros h; only 1: apply int_eqm in h; only 1: rewrite !add_spec in h; only 1: apply eqm_mod, eqm_sub in h; only 1: replace (_ + _ - _) with (φ (y) - φ (z)) in h by lia; only 1: rewrite <- eqm_subE in h; only 1: apply eqmI, h).	0.0236299037933	8
Coq.Numbers.Cyclic.Int63.Int63.lsr0	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	9.0.0	search with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: auto with zarith).	0.130125045776	149
Coq.Numbers.Cyclic.Int63.Int63.lsr_1	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_add	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_M_r	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0_spec	40
Coq.Numbers.Cyclic.Int63.Int63.bit_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.bit_b2i	40
Coq.Numbers.Cyclic.Int63.Int63.bit_1	40	17.0.0	search with cache (only 1: unfold bit; only 1: rewrite lsr_1; only 1: now case eqbP).	1.19317293167	1484
Coq.Numbers.Cyclic.Int63.Int63.to_Z_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_M	40
Coq.Numbers.Cyclic.Int63.Int63.bit_half	40
Coq.Numbers.Cyclic.Int63.Int63.bit_ext	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40
Coq.Numbers.Cyclic.Int63.Int63.lor_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.lor_le	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0	40
Coq.Numbers.Cyclic.Int63.Int63.bit_add_or	40
Coq.Numbers.Cyclic.Int63.Int63.addmuldiv_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_bit	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	6.0	search with cache (only 1: unfold is_even; only 1: auto).	0.0177628993988	23
Coq.Numbers.Cyclic.Int63.Int63.is_even_lsl_1	40
Coq.Numbers.Cyclic.Int63.Int63.quotient_by_2	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_false	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_spec	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_def	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_lower_bound	40
Coq.Numbers.Cyclic.Int63.Int63.diveucl_21_spec_aux	40
Coq.Numbers.Cyclic.Int63.Int63.div2_phi	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_spec	40
Coq.Numbers.Cyclic.Int63.Int63.of_pos_rec_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_int	40
Coq.Numbers.Cyclic.Int63.Int63.of_Z_spec	40
Coq.Numbers.Cyclic.Int63.Int63.negbE	40
Coq.Numbers.Cyclic.Int63.Int63.Z_oddE	40
Coq.Numbers.Cyclic.Int63.Int63.Z_evenE	40
Coq.Numbers.Cyclic.Int63.Int63.is_zeroE	40
Coq.Numbers.Cyclic.Int63.Int63.bitE	40
Coq.Numbers.Cyclic.Int63.Int63.lt_pow_lt_log	40
Coq.Numbers.Cyclic.Int63.Int63.land_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lxor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.landC	40
Coq.Numbers.Cyclic.Int63.Int63.landA	40
Coq.Numbers.Cyclic.Int63.Int63.land0	40
Coq.Numbers.Cyclic.Int63.Int63.land0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lorC	40
Coq.Numbers.Cyclic.Int63.Int63.lorA	40
Coq.Numbers.Cyclic.Int63.Int63.lor0	40
Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lxorC	40
Coq.Numbers.Cyclic.Int63.Int63.lxorA	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0_r	40
Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	40
Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40
Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	40
Coq.Numbers.Cyclic.Int63.Ring63.test	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.spec_WO	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.spec_OW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.spec_WW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.of_pos_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.of_Z_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.add_0_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.add_comm	40	1.38.4.1.0.17	search with cache (only 1: intros p; only 1: intros; only 1: zify; only 1: unfold base; only 1: f_equal; only 1: auto with zarith).	31.6249248981	59046
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.add_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.mul_1_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.mul_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.mul_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.mul_add_distr_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.add_opp_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.add_opp_diag_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.eqb_eq	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.eqb_correct	40	0.0.0.0.0.1.2	search with cache (only 1: intros f w; only 1: unfold eqb, eq; only 1: rewrite ZnZ.spec_compare; only 1: case Z.compare_spec; only 1: easy || lia; only 1: easy || lia; only 1: easy || lia).	0.137034893036	45
Coq.Numbers.Cyclic.Abstract.NZCyclic.eq_equiv	40	8.9.8.8.41.39	search with cache (only 1: generalize 1%positive; only 1: split; only 1: easy; only 1: easy; only 1: red; only 1: congruence).	18.5421290398	29737
Coq.Numbers.Cyclic.Abstract.NZCyclic.gt_wB_1	40	1.0.174	search with cache (only 1: apply Z.pow_gt_1; only 1: now split; only 1: lia).	1.73934292793	17058
Coq.Numbers.Cyclic.Abstract.NZCyclic.gt_wB_0	40	2.0	search with cache (only 1: unfold base; only 1: auto with zarith).	0.0179698467255	15
Coq.Numbers.Cyclic.Abstract.NZCyclic.one_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.succ_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.pred_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZ_to_Z_mod	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.pred_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.one_succ	40	0.4.2.0.1	search with cache (only 1: zify; only 1: rewrite Zmod_small; only 1: lia; only 1: pose proof gt_wB_1; only 1: lia).	0.150932073593	91
Coq.Numbers.Cyclic.Abstract.NZCyclic.two_succ	40	1.0	search with cache (only 1: zify; only 1: lia).	0.0735008716583	3
Coq.Numbers.Cyclic.Abstract.NZCyclic.B0	40	10	search with cache (only 1: auto with zarith).	0.0253901481628	39
Coq.Numbers.Cyclic.Abstract.NZCyclic.BS	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.Zbounded_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.B_holds	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.bi_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.add_0_l	40	0.0.1.0.0	search with cache (only 1: intro n; only 1: zify; only 1: rewrite Zmod_small; only 1: reflexivity; only 1: apply ZnZ.spec_to_Z).	0.0357468128204	6
Coq.Numbers.Cyclic.Abstract.NZCyclic.add_succ_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.sub_0_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.sub_succ_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.mul_0_l	40	0.6.6.4.0	search with cache (only 1: intro n; only 1: zify; only 1: apply Zmod_small; only 1: pose proof gt_wB_1; only 1: lia).	4.68380403519	2827
Coq.Numbers.Cyclic.Abstract.NZCyclic.mul_succ_l	40
Coq.Numbers.DecimalString.uint_of_char_spec	40
Coq.Numbers.DecimalString.usu	40
Coq.Numbers.DecimalString.sus	40
Coq.Numbers.DecimalString.isi	40
Coq.Numbers.DecimalString.sis	40
Coq.Numbers.DecimalString.uint_of_string_nonnil	40
Coq.Numbers.DecimalString.sus	40
Coq.Numbers.DecimalString.usu	40
Coq.Numbers.DecimalString.usu_nil	40	1.3	search with cache (only 1: simpl; only 1: auto).	0.0172128677368	6
Coq.Numbers.DecimalString.usu_gen	40
Coq.Numbers.DecimalString.isi	40
Coq.Numbers.DecimalString.isi_posnil	40	1.0	search with cache (only 1: simpl; only 1: congruence).	0.01606798172	3
Coq.Numbers.DecimalString.isi_negnil	40	1.0	search with cache (only 1: simpl; only 1: auto).	0.0161170959473	3
Coq.Numbers.DecimalString.sis	40
Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40
Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40
Coq.Numbers.Natural.Abstract.NOrder.lt_wf_0	40
Coq.Numbers.Natural.Abstract.NOrder.nlt_0_r	40	0.3.0	search with cache (only 1: intro n; only 1: rewrite nlt_ge; only 1: apply le_0_l).	0.013267993927	6
Coq.Numbers.Natural.Abstract.NOrder.nle_succ_0	40	0.8.23.0	search with cache (only 1: intro n; only 1: rewrite nle_gt; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	4.85652804375	12680
Coq.Numbers.Natural.Abstract.NOrder.le_0_r	40	0.3.0.0.4.3.6.0.6.0	search with cache (only 1: intro n; only 1: cases ltac:(n); only 1: intuition; only 1: split; only 1: intros H; only 1: exfalso; only 1: apply le_succ_l in H; only 1: false_hyp H nlt_0_r; only 1: intros H; only 1: false_hyp H neq_succ_0).	13.1381850243	24010
Coq.Numbers.Natural.Abstract.NOrder.lt_0_succ	40	0.9.0	search with cache (only 1: intro n; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	0.0561020374298	114
Coq.Numbers.Natural.Abstract.NOrder.neq_0_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.eq_0_gt_0_cases	40	0.0.0.0.7.0.7.0	search with cache (only 1: cases ltac:(n); only 1: intuition order; only 1: intro n; only 1: right; only 1: induct ltac:(n); only 1: apply lt_succ_diag_r; only 1: intros n H; only 1: now apply lt_lt_succ_r).	0.826333045959	1358
Coq.Numbers.Natural.Abstract.NOrder.zero_one	40
Coq.Numbers.Natural.Abstract.NOrder.lt_1_r	40	3.0.0.0.1.0.3.3.1	search with cache (only 1: intros n; only 1: setoid_rewrite one_succ; only 1: rewrite lt_succ_r; only 1: split; only 1: intro H; only 1: le_elim H; only 1: false_hyp H nlt_0_r; only 1: assumption; only 1: now apply eq_le_incl).	4.14417314529	6101
Coq.Numbers.Natural.Abstract.NOrder.le_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.lt_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.lt_1_l'	40
Coq.Numbers.Natural.Abstract.NOrder.le_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.lt_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.succ_pred_pos	40	0.0.0.1.0.0	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply lt_irrefl with 0; only 1: intros; only 1: now rewrite pred_succ).	0.0313491821289	7
Coq.Numbers.Natural.Abstract.NOrder.le_pred_l	40	7.1.7.1.0.1.2	search with cache (only 1: cases ltac:(n); only 1: rewrite pred_0; only 1: now apply eq_le_incl; only 1: intro n; only 1: rewrite pred_succ; only 1: apply le_le_succ_r; only 1: now apply eq_le_incl).	2.48152589798	5209
Coq.Numbers.Natural.Abstract.NOrder.lt_pred_l	40
Coq.Numbers.Natural.Abstract.NOrder.le_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.lt_lt_pred	40	1.1.0.0.5.0.0	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: rewrite pred_0; only 1: trivial; only 1: intros; only 1: rewrite pred_succ; only 1: now apply lt_succ_l).	0.503752946854	726
Coq.Numbers.Natural.Abstract.NOrder.lt_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.lt_pred_le	40	1.0.1.0.3.1.1	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: rewrite pred_0; only 1: order; only 1: intros m IH; only 1: rewrite pred_succ; only 1: apply le_succ_l).	0.815693855286	1020
Coq.Numbers.Natural.Abstract.NOrder.lt_pred_lt	40	0.4.2.5.0.0.9.1.0.0.3	search with cache (only 1: intro n; only 1: cases ltac:(m); only 1: rewrite pred_0; only 1: trivial; only 1: cases n; only 1: intros n IH; only 1: rewrite pred_succ in IH; only 1: apply lt_0_succ; only 1: intros n IH; only 1: rewrite pred_succ; only 1: now apply lt_lt_succ_r).	33.9763510227	74314
Coq.Numbers.Natural.Abstract.NOrder.le_pred_le	40	3.2.1.0.2.2.2	search with cache (only 1: cases ltac:(m); only 1: rewrite pred_0; only 1: intro H; only 1: assumption; only 1: intros m IH; only 1: rewrite pred_succ in IH; only 1: now apply le_le_succ_r).	2.88677000999	4705
Coq.Numbers.Natural.Abstract.NOrder.pred_le_mono	40
Coq.Numbers.Natural.Abstract.NOrder.pred_lt_mono	40
Coq.Numbers.Natural.Abstract.NOrder.lt_succ_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.le_succ_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.lt_pred_lt_succ	40	11.1.0.0.12.0.2.0	search with cache (only 1: intros n m; only 1: cases n; only 1: rewrite pred_0; only 1: now apply lt_lt_succ_r; only 1: intros n IH; only 1: rewrite pred_succ in IH; only 1: rewrite pred_lt_mono by apply neq_succ_0; only 1: now do 2 rewrite pred_succ).	14.1554529667	27445
Coq.Numbers.Natural.Abstract.NOrder.le_pred_le_succ	40
Coq.Numbers.Natural.Abstract.NDiv.mod_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.mod_eq	40
Coq.Numbers.Natural.Abstract.NDiv.div_mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.div_unique	40
Coq.Numbers.Natural.Abstract.NDiv.mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.div_unique_exact	40	0.0.16.1.1	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: now try split).	11.1986157894	4545
Coq.Numbers.Natural.Abstract.NDiv.div_same	40	2.3.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: intuition; only 1: now nzsimpl).	0.151172876358	87
Coq.Numbers.Natural.Abstract.NDiv.mod_same	40	1.0.6.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: now nzsimpl).	0.299218893051	209
Coq.Numbers.Natural.Abstract.NDiv.div_small	40	1.0.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: intuition; only 1: now nzsimpl).	0.0392189025879	7
Coq.Numbers.Natural.Abstract.NDiv.mod_small	40	1.0.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto'; only 1: now nzsimpl).	0.0387759208679	7
Coq.Numbers.Natural.Abstract.NDiv.div_0_l	40	0.2.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto').	0.0240669250488	5
Coq.Numbers.Natural.Abstract.NDiv.mod_0_l	40	0.5.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').	0.0240409374237	8
Coq.Numbers.Natural.Abstract.NDiv.div_1_r	40	1.1.11.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with 0; only 1: apply lt_0_1; only 1: now nzsimpl).	0.903532028198	1722
Coq.Numbers.Natural.Abstract.NDiv.mod_1_r	40	1.1.1.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: apply lt_0_1; only 1: now nzsimpl).	0.0736019611359	27
Coq.Numbers.Natural.Abstract.NDiv.div_1_l	40	0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto).	0.0165359973907	3
Coq.Numbers.Natural.Abstract.NDiv.mod_1_l	40	0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto).	0.016478061676	3
Coq.Numbers.Natural.Abstract.NDiv.div_mul	40	7.2.0.2	search with cache (only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: intuition; only 1: apply mul_comm).	0.503384828568	507
Coq.Numbers.Natural.Abstract.NDiv.mod_mul	40	8.0.0.2.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: auto'; only 1: nzsimpl; only 1: apply mul_comm).	1.60218095779	1313
Coq.Numbers.Natural.Abstract.NDiv.mod_le	40	0.0.15.0	search with cache (only 1: intros; only 1: apply mod_le; only 1: auto'; only 1: auto').	0.516696929932	474
Coq.Numbers.Natural.Abstract.NDiv.div_str_pos	40	0.2.0	search with cache (only 1: intros a b (Hb, Hab); only 1: apply div_str_pos; only 1: auto).	0.306625127792	92
Coq.Numbers.Natural.Abstract.NDiv.div_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.mod_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.div_str_pos_iff	40
Coq.Numbers.Natural.Abstract.NDiv.div_lt	40
Coq.Numbers.Natural.Abstract.NDiv.div_le_mono	40
Coq.Numbers.Natural.Abstract.NDiv.mul_div_le	40	0.0.15.0	search with cache (only 1: intros; only 1: apply mul_div_le; only 1: auto'; only 1: auto').	0.885332107544	584
Coq.Numbers.Natural.Abstract.NDiv.mul_succ_div_gt	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').	0.0513207912445	7
Coq.Numbers.Natural.Abstract.NDiv.div_exact	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0336608886719	4
Coq.Numbers.Natural.Abstract.NDiv.div_lt_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.div_le_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.div_le_lower_bound	40
Coq.Numbers.Natural.Abstract.NDiv.div_le_compat_l	40
Coq.Numbers.Natural.Abstract.NDiv.mod_add	40	5.7.0.0.0.0.5.4	search with cache (only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: apply mod_bound_pos; only 1: auto'; only 1: auto'; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: apply add_cancel_l; only 1: now rewrite (mul_comm c)).	15.0020580292	15745
Coq.Numbers.Natural.Abstract.NDiv.div_add	40	0.0.0.6.0	search with cache (only 1: intros; only 1: apply div_add; only 1: auto'; only 1: auto'; only 1: auto').	0.479006052017	153
Coq.Numbers.Natural.Abstract.NDiv.div_add_l	40	0.0.2.0	search with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: intuition).	0.0295000076294	6
Coq.Numbers.Natural.Abstract.NDiv.div_mul_cancel_r	40	1.0.5.0.1.0.2.0	search with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: intuition; only 1: auto'; only 1: intuition; only 1: auto'; only 1: intuition; only 1: auto').	3.92912507057	4196
Coq.Numbers.Natural.Abstract.NDiv.div_mul_cancel_l	40	2.0.0.3.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: auto'; only 1: auto').	0.134705781937	39
Coq.Numbers.Natural.Abstract.NDiv.mul_mod_distr_r	40	0.2.2.0.0.2.0.0.1.2.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: auto'; only 1: auto'; only 1: rewrite <- neq_mul_0; only 1: intuition).	3.72996807098	1952
Coq.Numbers.Natural.Abstract.NDiv.mul_mod_distr_l	40	0.2.2.0.0.2.0.0.2.0	search with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: auto'; only 1: auto'; only 1: rewrite <- neq_mul_0; only 1: intuition).	1.52072405815	860
Coq.Numbers.Natural.Abstract.NDiv.mod_mod	40	1.4.0.0.0	search with cache (only 1: intros; only 1: destruct (mod_bound_pos a n); only 1: auto'; only 1: auto'; only 1: now rewrite Private_NZDiv.mod_small_iff).	0.0261299610138	10
Coq.Numbers.Natural.Abstract.NDiv.mul_mod_idemp_l	40	0.0.0.4.1	search with cache (only 1: intros; only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.158981084824	60
Coq.Numbers.Natural.Abstract.NDiv.mul_mod_idemp_r	40	2.0.1.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: auto').	0.0286769866943	7
Coq.Numbers.Natural.Abstract.NDiv.mul_mod	40	0.0.3.0.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: auto'; only 1: auto').	0.0269749164581	8
Coq.Numbers.Natural.Abstract.NDiv.add_mod_idemp_l	40	0.0.0.5.0	search with cache (only 1: intros; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.046000957489	26
Coq.Numbers.Natural.Abstract.NDiv.add_mod_idemp_r	40	0.0.1.0	search with cache (only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: auto').	0.0282299518585	5
Coq.Numbers.Natural.Abstract.NDiv.add_mod	40	0.0.3.0.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: auto'; only 1: auto').	0.0268959999084	8
Coq.Numbers.Natural.Abstract.NDiv.div_div	40
Coq.Numbers.Natural.Abstract.NDiv.mod_mul_r	40	0.0.2.0.0.0.2	search with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: now apply div_mod).	0.271994113922	52
Coq.Numbers.Natural.Abstract.NDiv.div_mul_le	40	0.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto'; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: auto').	0.0599439144135	9
Coq.Numbers.Natural.Abstract.NDiv.mod_divides	40	8.0.3.0.0.5.0.2.0	search with cache (only 1: split; only 1: exists (a / b); only 1: apply Private_NZDiv.div_exact; only 1: now nzsimpl; only 1: auto; only 1: intros (c, Hc); only 1: rewrite Hc, mul_comm; only 1: apply Private_NZDiv.mod_mul; only 1: auto).	20.0544719696	23267
Coq.Numbers.Natural.Abstract.NBase.neq_succ_0	40
Coq.Numbers.Natural.Abstract.NBase.neq_0_succ	40
Coq.Numbers.Natural.Abstract.NBase.le_0_l	40
Coq.Numbers.Natural.Abstract.NBase.induction	40
Coq.Numbers.Natural.Abstract.NBase.case_analysis	40	0.0.0.0.0.1.0	search with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).	0.013904094696	8
Coq.Numbers.Natural.Abstract.NBase.neq_0	40	17.0	search with cache (only 1: intro n; only 1: now apply (neq_succ_diag_l 0)).	0.189538002014	506
Coq.Numbers.Natural.Abstract.NBase.neq_0_r	40
Coq.Numbers.Natural.Abstract.NBase.zero_or_succ	40
Coq.Numbers.Natural.Abstract.NBase.eq_pred_0	40
Coq.Numbers.Natural.Abstract.NBase.succ_pred	40	0.1.3.0.0	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intro n; only 1: now rewrite pred_succ).	0.0862939357758	9
Coq.Numbers.Natural.Abstract.NBase.pred_inj	40
Coq.Numbers.Natural.Abstract.NBase.pair_induction	40
Coq.Numbers.Natural.Abstract.NBase.two_dim_induction	40
Coq.Numbers.Natural.Abstract.NBase.double_induction	40	9.14.1.11.5	search with cache (only 1: induct ltac:(n); only 1: assumption; only 1: induct ltac:(m); only 1: auto; only 1: auto).	14.3276588917	26764
Coq.Numbers.Natural.Abstract.NDefOps.if_zero_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.if_zero_0	40	0.0.3.1	search with cache (only 1: intros; only 1: unfold if_zero; only 1: rewrite recursion_0; only 1: auto).	0.0205290317535	8
Coq.Numbers.Natural.Abstract.NDefOps.if_zero_succ	40	2.0.3.3.0.0	search with cache (only 1: unfold if_zero; only 1: intros; only 1: rewrite recursion_succ; only 1: reflexivity; only 1: auto; only 1: f_equiv').	0.574639797211	623
Coq.Numbers.Natural.Abstract.NDefOps.def_add_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.def_add_0_l	40	3.0.3	search with cache (only 1: intro H; only 1: unfold def_add; only 1: now rewrite recursion_0).	0.0328719615936	24
Coq.Numbers.Natural.Abstract.NDefOps.def_add_succ_l	40	0.0.0.2.0.4.4	search with cache (only 1: intro y; only 1: intro n; only 1: unfold def_add; only 1: rewrite recursion_succ; only 1: f_equiv'; only 1: order'; only 1: f_equiv').	16.236271143	1211
Coq.Numbers.Natural.Abstract.NDefOps.def_add_add	40
Coq.Numbers.Natural.Abstract.NDefOps.def_mul_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.def_mul_0_r	40	0.23.1	search with cache (only 1: intro; only 1: unfold def_mul; only 1: now rewrite recursion_0).	0.780148983002	1921
Coq.Numbers.Natural.Abstract.NDefOps.def_mul_succ_r	40
Coq.Numbers.Natural.Abstract.NDefOps.def_mul_mul	40
Coq.Numbers.Natural.Abstract.NDefOps.ltb_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.ltb_base	40	0.2.3.1	search with cache (only 1: intros; only 1: unfold ltb; only 1: rewrite recursion_0; only 1: f_equiv').	4.11115098	18
Coq.Numbers.Natural.Abstract.NDefOps.ltb_step	40
Coq.Numbers.Natural.Abstract.NDefOps.ltb_0	40
Coq.Numbers.Natural.Abstract.NDefOps.ltb_0_succ	40	3.4.4.0	search with cache (only 1: intro n; only 1: rewrite ltb_base; only 1: unfold if_zero; only 1: now rewrite recursion_succ).	0.579893112183	540
Coq.Numbers.Natural.Abstract.NDefOps.succ_ltb_mono	40
Coq.Numbers.Natural.Abstract.NDefOps.ltb_lt	40
Coq.Numbers.Natural.Abstract.NDefOps.ltb_ge	40
Coq.Numbers.Natural.Abstract.NDefOps.even_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.even_0	40	0.11	search with cache (only 1: unfold even; only 1: now rewrite recursion_0).	0.030130147934	46
Coq.Numbers.Natural.Abstract.NDefOps.even_succ	40	0.0.0.1.0.1	search with cache (only 1: intro n; only 1: unfold even; only 1: rewrite recursion_succ; only 1: f_equiv; only 1: reflexivity; only 1: f_equiv').	0.0639801025391	17
Coq.Numbers.Natural.Abstract.NDefOps.half_aux_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.half_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.half_aux_0	40	0.1.5	search with cache (only 1: unfold half_aux; only 1: rewrite recursion_0; only 1: trivial).	1.01402616501	9
Coq.Numbers.Natural.Abstract.NDefOps.half_aux_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.half_aux_spec	40
Coq.Numbers.Natural.Abstract.NDefOps.half_aux_spec2	40
Coq.Numbers.Natural.Abstract.NDefOps.half_0	40	0.5.1.0	search with cache (only 1: unfold half; only 1: rewrite half_aux_0; only 1: simpl; only 1: auto with *).	0.0212459564209	10
Coq.Numbers.Natural.Abstract.NDefOps.half_1	40
Coq.Numbers.Natural.Abstract.NDefOps.half_double	40
Coq.Numbers.Natural.Abstract.NDefOps.half_upper_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.half_lower_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.half_nz	40
Coq.Numbers.Natural.Abstract.NDefOps.half_decrease	40
Coq.Numbers.Natural.Abstract.NDefOps.pow_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.pow_0	40	0.18.4	search with cache (only 1: intro n; only 1: unfold pow; only 1: now rewrite recursion_0).	18.0339951515	3376
Coq.Numbers.Natural.Abstract.NDefOps.pow_succ	40	0.0.0.0.1.3	search with cache (only 1: intros m n; only 1: unfold pow; only 1: rewrite recursion_succ; only 1: auto with *; only 1: auto with *; only 1: f_equiv').	0.148226976395	49
Coq.Numbers.Natural.Abstract.NDefOps.log_prewd	40
Coq.Numbers.Natural.Abstract.NDefOps.log_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.log_good_step	40
Coq.Numbers.Natural.Abstract.NDefOps.log_init	40
Coq.Numbers.Natural.Abstract.NDefOps.log_step	40
Coq.Numbers.Natural.Abstract.NDefOps.pow2_log	40
Coq.Numbers.Natural.Abstract.NMulOrder.square_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.square_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.mul_le_mono_l	40	1.3.1.9	search with cache (only 1: intros a b Ha Hb; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: trivial).	1.03491401672	1445
Coq.Numbers.Natural.Abstract.NMulOrder.mul_le_mono_r	40	0.0.0.3.0	search with cache (only 1: intros; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: assumption).	0.0200159549713	8
Coq.Numbers.Natural.Abstract.NMulOrder.mul_lt_mono	40	0.2.3.0.0.0.7.0.1.1	search with cache (only 1: intros n m p q H1 H2; only 1: apply le_lt_trans with (m * p); only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now apply lt_le_incl; only 1: apply -> mul_lt_mono_pos_l; only 1: assumption; only 1: apply le_lt_trans with n; only 1: now apply le_0_l; only 1: now apply le_lt_trans with n).	4.98953509331	4231
Coq.Numbers.Natural.Abstract.NMulOrder.mul_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.lt_0_mul'	40
Coq.Numbers.Natural.Abstract.NMulOrder.eq_mul_1	40
Coq.Numbers.Natural.Abstract.NBits.pow_sub_r	40
Coq.Numbers.Natural.Abstract.NBits.pow_div_l	40
Coq.Numbers.Natural.Abstract.NBits.b2n_proper	40	0.13	search with cache (only 1: intros a a' Ha; only 1: now rewrite ?Ha).	2.7233300209	2401
Coq.Numbers.Natural.Abstract.NBits.exists_div2	40
Coq.Numbers.Natural.Abstract.NBits.testbit_0_r	40
Coq.Numbers.Natural.Abstract.NBits.testbit_succ_r	40
Coq.Numbers.Natural.Abstract.NBits.testbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.testbit_spec	40
Coq.Numbers.Natural.Abstract.NBits.testbit_true	40
Coq.Numbers.Natural.Abstract.NBits.testbit_false	40	0.3.0.0.1.0.0.0.0.0	search with cache (only 1: intros a n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: split; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: now try order'; only 1: split).	2.091755867	1059
Coq.Numbers.Natural.Abstract.NBits.testbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.b2n_inj	40
Coq.Numbers.Natural.Abstract.NBits.add_b2n_double_div2	40
Coq.Numbers.Natural.Abstract.NBits.add_b2n_double_bit0	40
Coq.Numbers.Natural.Abstract.NBits.b2n_div2	40
Coq.Numbers.Natural.Abstract.NBits.b2n_bit0	40	0.0.0.0.22	search with cache (only 1: intros a0; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; order')).	3.03480005264	1858
Coq.Numbers.Natural.Abstract.NBits.testbit_unique	40
Coq.Numbers.Natural.Abstract.NBits.bits_0	40	0.0.0.1.0.0.7.10	search with cache (only 1: intros a0; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: simpl; only 1: order; only 1: order'; only 1: order_nz).	0.550271987915	485
Coq.Numbers.Natural.Abstract.NBits.bit0_odd	40
Coq.Numbers.Natural.Abstract.NBits.bit0_eqb	40
Coq.Numbers.Natural.Abstract.NBits.bit0_mod	40	0.0.0.1.0.0.0.0.0	search with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).	0.137284994125	10
Coq.Numbers.Natural.Abstract.NBits.testbit_odd	40
Coq.Numbers.Natural.Abstract.NBits.bit_log2	40
Coq.Numbers.Natural.Abstract.NBits.bits_above_log2	40
Coq.Numbers.Natural.Abstract.NBits.div2_bits	40	0.7.3.11.16	search with cache (only 1: intros a H; only 1: rewrite testbit_eqb; only 1: rewrite testbit_eqb; only 1: rewrite pow_succ_r', <- div_div by order_nz; only 1: now nzsimpl).	26.8134410381	21726
Coq.Numbers.Natural.Abstract.NBits.div_pow2_bits	40
Coq.Numbers.Natural.Abstract.NBits.double_bits_succ	40	0.0	search with cache (only 1: intros; only 1: apply testbit_even_succ, le_0_l).	0.0146501064301	2
Coq.Numbers.Natural.Abstract.NBits.mul_pow2_bits_add	40
Coq.Numbers.Natural.Abstract.NBits.mul_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.mul_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.mod_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.mod_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.eqf_equiv	40
Coq.Numbers.Natural.Abstract.NBits.testbit_eqf	40
Coq.Numbers.Natural.Abstract.NBits.bits_inj_0	40
Coq.Numbers.Natural.Abstract.NBits.bits_inj	40
Coq.Numbers.Natural.Abstract.NBits.bits_inj_iff	40
Coq.Numbers.Natural.Abstract.NBits.are_bits	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_spec'	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_spec_high'	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_mul_pow2	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_spec_alt	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_wd	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_wd	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_shiftl_l	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_shiftl_r	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_1_l	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_0_r	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_0_r	40	0.0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec'; only 1: now nzsimpl).	0.0528600215912	4
Coq.Numbers.Natural.Abstract.NBits.shiftl_0_l	40	0.0.0.2.0.0.0.0	search with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: bitwise; only 1: apply testbit_false; only 1: nzsimpl; only 1: order'; only 1: order'; only 1: order_nz).	0.101561069489	10
Coq.Numbers.Natural.Abstract.NBits.shiftr_0_l	40	0.0.0.1.0	search with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: order_nz; only 1: order_nz).	0.0388700962067	6
Coq.Numbers.Natural.Abstract.NBits.shiftl_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_eq_0	40	0.0.0.0.0.1	search with cache (only 1: intros a n H; only 1: rewrite shiftr_div_pow2, div_small_iff by order_nz; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: trivial using le_0_l; only 1: trivial using le_0_l).	0.254028081894	63
Coq.Numbers.Natural.Abstract.NBits.div2_div	40
Coq.Numbers.Natural.Abstract.NBits.div2_wd	40	1.6.0.0.0.2.8	search with cache (only 1: intros m; only 1: intros a n; only 1: rewrite div2_spec, shiftr_div_pow2; only 1: rewrite div2_spec, shiftr_div_pow2; only 1: nzsimpl; only 1: f_equiv; only 1: trivial).	18.8771550655	13251
Coq.Numbers.Natural.Abstract.NBits.div2_odd	40
Coq.Numbers.Natural.Abstract.NBits.lxor_wd	40
Coq.Numbers.Natural.Abstract.NBits.land_wd	40	0.2.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0653970241547	5
Coq.Numbers.Natural.Abstract.NBits.lor_wd	40	0.2.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0655641555786	5
Coq.Numbers.Natural.Abstract.NBits.ldiff_wd	40	0.2.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0757658481598	5
Coq.Numbers.Natural.Abstract.NBits.lxor_eq	40
Coq.Numbers.Natural.Abstract.NBits.lxor_nilpotent	40
Coq.Numbers.Natural.Abstract.NBits.lxor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.lxor_0_l	40
Coq.Numbers.Natural.Abstract.NBits.lxor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0259649753571	3
Coq.Numbers.Natural.Abstract.NBits.lxor_comm	40
Coq.Numbers.Natural.Abstract.NBits.lxor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.lor_0_l	40	2.7.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_eq; only 1: apply xorb_nilpotent).	0.220804214478	145
Coq.Numbers.Natural.Abstract.NBits.lor_0_r	40	1.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0253050327301	4
Coq.Numbers.Natural.Abstract.NBits.lor_comm	40
Coq.Numbers.Natural.Abstract.NBits.lor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.lor_diag	40
Coq.Numbers.Natural.Abstract.NBits.lor_eq_0_l	40
Coq.Numbers.Natural.Abstract.NBits.lor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.land_0_l	40	0.3.5.0	search with cache (only 1: intros; only 1: bitwise; only 1: simpl; only 1: now try order').	0.248937129974	93
Coq.Numbers.Natural.Abstract.NBits.land_0_r	40
Coq.Numbers.Natural.Abstract.NBits.land_comm	40
Coq.Numbers.Natural.Abstract.NBits.land_assoc	40
Coq.Numbers.Natural.Abstract.NBits.land_diag	40
Coq.Numbers.Natural.Abstract.NBits.ldiff_0_l	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0238580703735	3
Coq.Numbers.Natural.Abstract.NBits.ldiff_0_r	40	1.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0240378379822	4
Coq.Numbers.Natural.Abstract.NBits.ldiff_diag	40
Coq.Numbers.Natural.Abstract.NBits.lor_land_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.lor_land_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.land_lor_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.land_lor_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.ldiff_ldiff_l	40
Coq.Numbers.Natural.Abstract.NBits.lor_ldiff_and	40
Coq.Numbers.Natural.Abstract.NBits.land_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.setbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.clearbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.setbit_wd	40	0.0.25.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: unfold setbit; only 1: bitwise; only 1: now rewrite Ha, Hb).	12.2006790638	10723
Coq.Numbers.Natural.Abstract.NBits.clearbit_wd	40	0.0.25.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: unfold clearbit; only 1: bitwise; only 1: now rewrite Ha, Hb).	10.8824808598	8307
Coq.Numbers.Natural.Abstract.NBits.pow2_bits_true	40
Coq.Numbers.Natural.Abstract.NBits.pow2_bits_false	40
Coq.Numbers.Natural.Abstract.NBits.pow2_bits_eqb	40
Coq.Numbers.Natural.Abstract.NBits.setbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.setbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.setbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.setbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.clearbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.clearbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.clearbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.clearbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_lxor	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_lxor	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_land	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_land	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_lor	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_lor	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.ones_wd	40
Coq.Numbers.Natural.Abstract.NBits.lnot_wd	40
Coq.Numbers.Natural.Abstract.NBits.ones_equiv	40
Coq.Numbers.Natural.Abstract.NBits.ones_add	40
Coq.Numbers.Natural.Abstract.NBits.ones_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.ones_mod_pow2	40
Coq.Numbers.Natural.Abstract.NBits.ones_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.ones_spec_high	40	0.0.0.1.0.0.0.0.0.0.2.1.7	search with cache (only 1: intros a n H; only 1: rewrite testbit_false; only 1: rewrite div_small; only 1: nzsimpl; only 1: order'; only 1: order'; only 1: rewrite ones_equiv; only 1: apply le_succ_l; only 1: rewrite succ_pred; only 1: apply Private_NZPow.pow_le_mono_r; only 1: order'; only 1: trivial; only 1: order_nz).	16.9876461029	7901
Coq.Numbers.Natural.Abstract.NBits.ones_spec_iff	40
Coq.Numbers.Natural.Abstract.NBits.lnot_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.lnot_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.lnot_involutive	40
Coq.Numbers.Natural.Abstract.NBits.lnot_0_l	40	0.1.1.0	search with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_false_r).	0.0697047710419	17
Coq.Numbers.Natural.Abstract.NBits.lnot_ones	40	1.2.0.0	search with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).	0.0230090618134	7
Coq.Numbers.Natural.Abstract.NBits.lor_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.land_ones	40
Coq.Numbers.Natural.Abstract.NBits.land_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.ldiff_ones_r	40
Coq.Numbers.Natural.Abstract.NBits.ldiff_ones_r_low	40
Coq.Numbers.Natural.Abstract.NBits.ldiff_ones_l_low	40
Coq.Numbers.Natural.Abstract.NBits.lor_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.lor_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.land_lnot_diag	40	0.0.1.0.0.0.1.0.0.0.1	search with cache (only 1: intros a n; only 1: bitwise; only 1: destruct (le_gt_cases n m); only 1: rewrite lnot_spec_high, ones_spec_high; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial; only 1: rewrite lnot_spec_low, ones_spec_low; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial).	1.01687598228	767
Coq.Numbers.Natural.Abstract.NBits.land_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.lnot_lor_low	40
Coq.Numbers.Natural.Abstract.NBits.lnot_land_low	40
Coq.Numbers.Natural.Abstract.NBits.ldiff_land_low	40
Coq.Numbers.Natural.Abstract.NBits.lnot_ldiff_low	40
Coq.Numbers.Natural.Abstract.NBits.lxor_lnot_lnot	40
Coq.Numbers.Natural.Abstract.NBits.lnot_lxor_l	40
Coq.Numbers.Natural.Abstract.NBits.lnot_lxor_r	40	0.0.1.5.3	search with cache (only 1: intros a n; only 1: unfold lnot; only 1: intros; only 1: bitwise; only 1: apply xorb_assoc_reverse).	1.75111103058	1435
Coq.Numbers.Natural.Abstract.NBits.lxor_lor	40
Coq.Numbers.Natural.Abstract.NBits.log2_bits_unique	40
Coq.Numbers.Natural.Abstract.NBits.log2_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.log2_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.log2_lor	40
Coq.Numbers.Natural.Abstract.NBits.log2_land	40
Coq.Numbers.Natural.Abstract.NBits.log2_lxor	40
Coq.Numbers.Natural.Abstract.NBits.add_bit0	40
Coq.Numbers.Natural.Abstract.NBits.add3_bit0	40
Coq.Numbers.Natural.Abstract.NBits.add3_bits_div2	40
Coq.Numbers.Natural.Abstract.NBits.add_carry_div2	40
Coq.Numbers.Natural.Abstract.NBits.add_carry_bits	40
Coq.Numbers.Natural.Abstract.NBits.add_bit1	40
Coq.Numbers.Natural.Abstract.NBits.nocarry_equiv	40
Coq.Numbers.Natural.Abstract.NBits.add_nocarry_lxor	40
Coq.Numbers.Natural.Abstract.NBits.ldiff_le	40
Coq.Numbers.Natural.Abstract.NBits.sub_nocarry_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.add_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.lnot_sub_low	40
Coq.Numbers.Natural.Abstract.NBits.add_nocarry_lt_pow2	40
Coq.Numbers.Natural.Abstract.NBits.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Natural.Abstract.NGcd.divide_add_cancel_r	40
Coq.Numbers.Natural.Abstract.NGcd.divide_sub_r	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_add_mult_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_add_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_sub_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.Bezout_wd	40
Coq.Numbers.Natural.Abstract.NGcd.bezout_1_gcd	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_bezout_pos_pos	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_bezout_pos	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_bezout	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NGcd.gauss	40
Coq.Numbers.Natural.Abstract.NGcd.divide_mul_split	40
Coq.Numbers.Natural.Abstract.NIso.natural_isomorphism_wd	40
Coq.Numbers.Natural.Abstract.NIso.natural_isomorphism_0	40
Coq.Numbers.Natural.Abstract.NIso.natural_isomorphism_succ	40
Coq.Numbers.Natural.Abstract.NIso.hom_nat_iso	40	0.0.1.0.0.0.0.0.9.0	search with cache (only 1: unfold natural_isomorphism; only 1: constructor 1; only 1: now rewrite N1.recursion_0; only 1: intro n; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).	0.467902898788	617
Coq.Numbers.Natural.Abstract.NIso.inverse_nat_iso	40
Coq.Numbers.Natural.Abstract.NIso.iso_nat_iso	40
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_spec'	40
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_square	40	0.1.3.0.1.1.5	search with cache (only 1: intros EQ; only 1: apply sqrt_unique' with 0; only 1: split; only 1: now apply eq_le_incl; only 1: apply lt_succ_r; only 1: apply lt_0_succ; only 1: now nzsimpl).	0.260714054108	376
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_le_square	40
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_lt_square	40
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_le_lin	40
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_mul_above	40
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_succ_le	40
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_succ_or	40
Coq.Numbers.Natural.Abstract.NSqrt.add_sqrt_le	40
Coq.Numbers.Natural.Abstract.NAdd.eq_add_0	40
Coq.Numbers.Natural.Abstract.NAdd.eq_add_succ	40
Coq.Numbers.Natural.Abstract.NAdd.eq_add_1	40
Coq.Numbers.Natural.Abstract.NAdd.succ_add_discr	40
Coq.Numbers.Natural.Abstract.NAdd.add_pred_l	40	5.0.6.0.1.0.8.2	search with cache (only 1: intros n m; only 1: cases n; only 1: intros H; only 1: exfalso; only 1: now apply H; only 1: intros n _; only 1: nzsimpl; only 1: now nzsimpl).	18.0513658524	21896
Coq.Numbers.Natural.Abstract.NAdd.add_pred_r	40
Coq.Numbers.Natural.Abstract.NParity.odd_pred	40	0.2.0.0.8.0.3	search with cache (only 1: cases ltac:(n); only 1: intros; only 1: exfalso; only 1: now apply H; only 1: intros; only 1: rewrite pred_succ; only 1: now rewrite <- negb_odd, odd_succ, negb_even).	23.7400920391	10141
Coq.Numbers.Natural.Abstract.NParity.even_pred	40	2.0.4.1.0.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	1.33923006058	639
Coq.Numbers.Natural.Abstract.NParity.even_sub	40
Coq.Numbers.Natural.Abstract.NParity.odd_sub	40
Coq.Numbers.Natural.Abstract.NAddOrder.le_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.lt_lt_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.lt_lt_add_l	40	0.0.0.0.2.0	search with cache (only 1: intros n m p H; only 1: rewrite add_comm; only 1: rewrite <- (add_0_r n); only 1: apply add_lt_le_mono; only 1: assumption; only 1: apply le_0_l).	0.359699964523	78
Coq.Numbers.Natural.Abstract.NAddOrder.add_pos_l	40	8.2	search with cache (only 1: intros n m; only 1: apply lt_lt_add_r).	1.36222410202	345
Coq.Numbers.Natural.Abstract.NAddOrder.add_pos_r	40	0.0.1.2.0	search with cache (only 1: intros; only 1: rewrite add_comm; only 1: apply add_pos_nonneg; only 1: trivial; only 1: apply le_0_l).	0.147573947906	29
Coq.Numbers.Natural.Abstract.NPow.pow_succ_r'	40	0.9.1.22	search with cache (only 1: intros n m; only 1: nzsimpl; only 1: order'; only 1: apply le_0_l).	13.9957737923	6806
Coq.Numbers.Natural.Abstract.NPow.pow_0_l	40	0.0.1.0.0	search with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: order; only 1: now apply pow_0_l).	0.0306489467621	6
Coq.Numbers.Natural.Abstract.NPow.pow_1_l	40	15.1.5.1	search with cache (only 1: intros; only 1: nzsimpl; only 1: now nzsimpl; only 1: apply le_0_l).	1.64968299866	1018
Coq.Numbers.Natural.Abstract.NPow.pow_add_r	40
Coq.Numbers.Natural.Abstract.NPow.pow_mul_l	40	0.0.0.1.1.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros a b c; only 1: destruct (lt_ge_cases c 0) as [Hc| Hc]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: now nzsimpl; only 1: apply le_ind with (4 := Hc); only 1: solve_proper; only 1: now nzsimpl; only 1: clear c Hc; only 1: intros c Hc IH; only 1: nzsimpl; only 1: rewrite IH; only 1: apply mul_shuffle1; only 1: trivial; only 1: trivial; only 1: trivial).	2.33546590805	872
Coq.Numbers.Natural.Abstract.NPow.pow_mul_r	40
Coq.Numbers.Natural.Abstract.NPow.pow_eq_0	40
Coq.Numbers.Natural.Abstract.NPow.pow_nonzero	40
Coq.Numbers.Natural.Abstract.NPow.pow_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NPow.pow_lt_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.pow_le_mono_l	40	0.0.0.0.0.2.0.0.0.3.0.5	search with cache (only 1: intros; only 1: destruct (lt_trichotomy c 0) as [Hc| [Hc| Hc]]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: order; only 1: rewrite Hc; only 1: now nzsimpl; only 1: apply lt_eq_cases in H; only 1: destruct H as [H| H]; only 1: apply lt_le_incl, Private_NZPow.pow_lt_mono_l; only 1: order; only 1: trivial; only 1: now rewrite <- H).	14.5512127876	9075
Coq.Numbers.Natural.Abstract.NPow.pow_gt_1	40	4.4.0	search with cache (only 1: intros a b Ha; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: wrap Private_NZPow.pow_lt_mono_l).	0.432305812836	108
Coq.Numbers.Natural.Abstract.NPow.pow_lt_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.pow_le_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.pow_le_mono	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: intuition order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: intuition order).	0.0312139987946	7
Coq.Numbers.Natural.Abstract.NPow.pow_inj_l	40	0.3.0.0.2.8.8	search with cache (only 1: intros a b c Ha H; only 1: destruct (lt_trichotomy a b) as [LT| [EQ'| GT]]; only 1: assert (a ^ c < b ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order; only 1: trivial; only 1: assert (b ^ c < a ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order).	2.49256396294	3187
Coq.Numbers.Natural.Abstract.NPow.pow_inj_r	40	0.1.0.0.2.0.1	search with cache (only 1: intros a b c Ha Hc; only 1: destruct (lt_trichotomy b c) as [LT| [EQ'| GT]]; only 1: assert (a ^ b < a ^ c) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order).	0.130211830139	75
Coq.Numbers.Natural.Abstract.NPow.pow_lt_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.pow_le_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.pow_lt_mono_r_iff	40	0.0.8.1.0.5	search with cache (only 1: split; only 1: now apply Private_NZPow.pow_lt_mono_r; only 1: destruct (le_gt_cases c b) as [LE| GT]; only 1: assert (a ^ c <= a ^ b) by (apply Private_NZPow.pow_le_mono_r; order'); only 1: order; only 1: trivial).	4.14213609695	2991
Coq.Numbers.Natural.Abstract.NPow.pow_le_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.pow_gt_lin_r	40
Coq.Numbers.Natural.Abstract.NPow.pow_add_lower	40
Coq.Numbers.Natural.Abstract.NPow.pow_add_upper	40
Coq.Numbers.Natural.Abstract.NPow.even_pow	40
Coq.Numbers.Natural.Abstract.NPow.odd_pow	40
Coq.Numbers.Natural.Abstract.NMaxMin.max_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.max_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.min_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.min_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.succ_max_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.succ_min_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.add_max_distr_l	40	0.0.1.0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now apply add_cancel_l; only 1: assumption; only 1: now apply add_le_mono_l; only 1: rewrite 2!max_l; only 1: now apply add_cancel_l; only 1: assumption; only 1: now apply add_le_mono_l).	0.878249883652	312
Coq.Numbers.Natural.Abstract.NMaxMin.add_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.add_min_distr_l	40	0.0.0.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l).	0.57597899437	196
Coq.Numbers.Natural.Abstract.NMaxMin.add_min_distr_r	40	1.0.0.1.1.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	1.68624997139	758
Coq.Numbers.Natural.Abstract.NMaxMin.mul_max_distr_l	40	0.0.1.0.2.0.0.0.1.0.2.1.3.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l).	12.5432479382	8847
Coq.Numbers.Natural.Abstract.NMaxMin.mul_max_distr_r	40	0.0.0.0.0.0.0.0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!max_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l).	3.09397602081	2128
Coq.Numbers.Natural.Abstract.NMaxMin.mul_min_distr_l	40	2.0.0.1.2.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_l; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_l).	4.77894496918	2352
Coq.Numbers.Natural.Abstract.NMaxMin.mul_min_distr_r	40	0.0.0.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_r).	0.625253915787	252
Coq.Numbers.Natural.Abstract.NMaxMin.sub_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.sub_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.sub_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.sub_min_distr_r	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec_alt	40	0	search with cache (only 1: auto).	0.00636196136475	1
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec0_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec0_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec0_succ	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec_0	40	0.0.0.0.1.0.0.0.4.0	search with cache (only 1: intros; only 1: rewrite !strong_rec_alt; only 1: unfold strong_rec0; only 1: f_equiv; only 1: rewrite recursion_succ; only 1: f_equiv'; only 1: rewrite recursion_0; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').	28.4578039646	305
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec0_more_steps	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec0_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec_0_any	40	1.0.5.3.1	search with cache (only 1: intros; only 1: rewrite strong_rec_alt, strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).	15.357614994	448
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec_any_fst_arg	40
Coq.Numbers.Natural.Abstract.NLcm.mod_divide	40
Coq.Numbers.Natural.Abstract.NLcm.divide_div_mul_exact	40
Coq.Numbers.Natural.Abstract.NLcm.gcd_div_factor	40
Coq.Numbers.Natural.Abstract.NLcm.gcd_div_gcd	40
Coq.Numbers.Natural.Abstract.NLcm.gcd_mod	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_wd	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_equiv1	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_equiv2	40
Coq.Numbers.Natural.Abstract.NLcm.gcd_div_swap	40
Coq.Numbers.Natural.Abstract.NLcm.divide_lcm_l	40	0.9.2	search with cache (only 1: intros n; only 1: intros EQ; only 1: apply divide_mul_l, divide_refl).	0.345182180405	363
Coq.Numbers.Natural.Abstract.NLcm.divide_lcm_r	40
Coq.Numbers.Natural.Abstract.NLcm.divide_div	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_least	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_comm	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_divide_iff	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_unique	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_unique_alt	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_assoc	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_0_l	40	6.0.1.1.4	search with cache (only 1: intros; only 1: apply divide_antisym; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_lcm_l).	0.659605979919	540
Coq.Numbers.Natural.Abstract.NLcm.lcm_0_r	40	0.1.0.1.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	0.0232319831848	10
Coq.Numbers.Natural.Abstract.NLcm.lcm_1_l	40	1.0.0.0.0.10.1.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto'; only 1: exists n; only 1: now nzsimpl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1).	0.643530845642	680
Coq.Numbers.Natural.Abstract.NLcm.lcm_1_r	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_l, divide_refl).	0.0240240097046	7
Coq.Numbers.Natural.Abstract.NLcm.lcm_diag	40	0.0.0.0.0.2	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_refl).	0.0148270130157	8
Coq.Numbers.Natural.Abstract.NLcm.lcm_eq_0	40
Coq.Numbers.Natural.Abstract.NLcm.divide_lcm_eq_r	40	10.3.9.0	search with cache (only 1: intros; only 1: apply divide_antisym; only 1: now apply lcm_least; only 1: apply divide_lcm_r).	6.4552628994	7227
Coq.Numbers.Natural.Abstract.NLcm.divide_lcm_iff	40	1.4.5.1.0.0.0.0.0.0.0.5.6	search with cache (only 1: split; only 1: intros EQ; only 1: apply lcm_unique_alt; only 1: trivial using le_0_l; only 1: intros q; only 1: split; only 1: split; only 1: now transitivity m; only 1: trivial; only 1: now destruct 1; only 1: intros EQ; only 1: rewrite <- EQ; only 1: trivial using divide_lcm_l).	22.6731021404	17202
Coq.Numbers.Natural.Abstract.NLcm.lcm_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NLcm.gcd_1_lcm_mul	40
Coq.Numbers.Natural.Abstract.NSub.sub_0_l	40
Coq.Numbers.Natural.Abstract.NSub.sub_succ	40
Coq.Numbers.Natural.Abstract.NSub.sub_diag	40
Coq.Numbers.Natural.Abstract.NSub.sub_gt	40
Coq.Numbers.Natural.Abstract.NSub.add_sub_assoc	40
Coq.Numbers.Natural.Abstract.NSub.sub_succ_l	40
Coq.Numbers.Natural.Abstract.NSub.add_sub	40	0.7.2.5.0.0.2.3	search with cache (only 1: intro n; only 1: induct ltac:(m); only 1: rewrite sub_0_r; only 1: nzsimpl; only 1: order; only 1: intros m IH; only 1: rewrite add_succ_r; only 1: now rewrite sub_succ).	4.86469101906	6446
Coq.Numbers.Natural.Abstract.NSub.sub_add	40
Coq.Numbers.Natural.Abstract.NSub.add_sub_eq_l	40
Coq.Numbers.Natural.Abstract.NSub.add_sub_eq_r	40
Coq.Numbers.Natural.Abstract.NSub.add_sub_eq_nz	40
Coq.Numbers.Natural.Abstract.NSub.sub_add_distr	40
Coq.Numbers.Natural.Abstract.NSub.add_sub_swap	40	1.7.2.7.0	search with cache (only 1: intros n m p; only 1: rewrite add_comm; only 1: symmetry; only 1: rewrite add_comm; only 1: now apply add_sub_assoc).	11.4477639198	10407
Coq.Numbers.Natural.Abstract.NSub.le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.sub_0_le	40
Coq.Numbers.Natural.Abstract.NSub.sub_add_le	40
Coq.Numbers.Natural.Abstract.NSub.le_sub_le_add_r	40
Coq.Numbers.Natural.Abstract.NSub.le_sub_le_add_l	40
Coq.Numbers.Natural.Abstract.NSub.lt_sub_lt_add_r	40
Coq.Numbers.Natural.Abstract.NSub.lt_sub_lt_add_l	40
Coq.Numbers.Natural.Abstract.NSub.le_add_le_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.le_add_le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.lt_add_lt_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.lt_add_lt_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.sub_lt	40
Coq.Numbers.Natural.Abstract.NSub.sub_le_mono_r	40
Coq.Numbers.Natural.Abstract.NSub.sub_le_mono_l	40
Coq.Numbers.Natural.Abstract.NSub.mul_pred_r	40
Coq.Numbers.Natural.Abstract.NSub.mul_sub_distr_r	40
Coq.Numbers.Natural.Abstract.NSub.mul_sub_distr_l	40
Coq.Numbers.Natural.Abstract.NSub.le_equiv	40
Coq.Numbers.Natural.Abstract.NSub.lt_equiv	40
Coq.Numbers.Natural.Abstract.NSub.le_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.lt_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.le_alt_dichotomy	40
Coq.Numbers.Natural.Abstract.NSub.add_dichotomy	40
Coq.Numbers.DecimalZ.of_to	40
Coq.Numbers.DecimalZ.to_of	40
Coq.Numbers.DecimalZ.to_int_inj	40
Coq.Numbers.DecimalZ.to_int_surj	40
Coq.Numbers.DecimalZ.of_int_norm	40
Coq.Numbers.DecimalZ.of_inj	40
Coq.Numbers.DecimalZ.of_iff	40
Coq.Numbers.NatInt.NZSqrt.sqrt_spec_nonneg	40
Coq.Numbers.NatInt.NZSqrt.sqrt_nonneg	40
Coq.Numbers.NatInt.NZSqrt.sqrt_unique	40
Coq.Numbers.NatInt.NZSqrt.sqrt_wd	40
Coq.Numbers.NatInt.NZSqrt.sqrt_spec_alt	40
Coq.Numbers.NatInt.NZSqrt.sqrt_unique'	40
Coq.Numbers.NatInt.NZSqrt.sqrt_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_pred_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_le_mono	40
Coq.Numbers.NatInt.NZSqrt.sqrt_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.sqrt_le_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_lt_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_0	40	0.12.0.1.12.0.1	search with cache (only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: apply mul_nonneg_nonneg; only 1: apply lt_le_incl, lt_0_2; only 1: order; only 1: now nzsimpl).	5.67103981972	4914
Coq.Numbers.NatInt.NZSqrt.sqrt_1	40	13.0.0.12.0.1	search with cache (only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: nzsimpl; only 1: apply lt_le_incl, lt_0_2; only 1: now nzsimpl').	8.80819988251	5609
Coq.Numbers.NatInt.NZSqrt.sqrt_2	40	2.5.5.2.1.5.1.3.1	search with cache (only 1: rewrite <- (mul_1_l 1)  at 1; only 1: apply sqrt_unique; only 1: split; only 1: nzsimpl; only 1: order'; only 1: nzsimpl; only 1: apply lt_succ_r; only 1: rewrite two_succ; only 1: now apply le_le_succ_r).	33.0649900436	20914
Coq.Numbers.NatInt.NZSqrt.sqrt_pos	40
Coq.Numbers.NatInt.NZSqrt.sqrt_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.sqrt_le_lin	40
Coq.Numbers.NatInt.NZSqrt.sqrt_mul_below	40
Coq.Numbers.NatInt.NZSqrt.sqrt_mul_above	40
Coq.Numbers.NatInt.NZSqrt.sqrt_succ_le	40
Coq.Numbers.NatInt.NZSqrt.sqrt_succ_or	40
Coq.Numbers.NatInt.NZSqrt.sqrt_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_add_le	40
Coq.Numbers.NatInt.NZSqrt.add_sqrt_le	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_eqn0	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_eqn	40	0.0.0.0.4.1	search with cache (only 1: intros a Ha; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.0625579357147	38
Coq.Numbers.NatInt.NZSqrt.sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_nonneg	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_wd	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_unique	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_succ_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_0	40	0.0.0.0.1	search with cache (only 1: unfold sqrt_up; only 1: case compare_spec; only 1: tauto; only 1: order; only 1: order).	0.0220170021057	6
Coq.Numbers.NatInt.NZSqrt.sqrt_up_1	40	1.1.1.3.0.9.2	search with cache (only 1: rewrite sqrt_up_eqn; only 1: rewrite <- (mul_1_l 1)  at 1; only 1: rewrite sqrt_pred_square; only 1: apply (lt_succ_pred 0); only 1: order'; only 1: order'; only 1: order').	1.78856301308	1949
Coq.Numbers.NatInt.NZSqrt.sqrt_up_2	40
Coq.Numbers.NatInt.NZSqrt.le_sqrt_sqrt_up	40
Coq.Numbers.NatInt.NZSqrt.le_sqrt_up_succ_sqrt	40
Coq.Numbers.NatInt.NZSqrt.sqrt_sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.sqrt_sqrt_up_exact	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_le_mono	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_lt_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_le_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_pos	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_le_lin	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_mul_above	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_mul_below	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_succ_le	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_succ_or	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_add_le	40
Coq.Numbers.NatInt.NZSqrt.add_sqrt_up_le	40
Coq.Numbers.NatInt.NZDiv.div_mod_unique	40
Coq.Numbers.NatInt.NZDiv.div_unique	40
Coq.Numbers.NatInt.NZDiv.mod_unique	40	1.0.0.1.0.0.1.0.1.0	search with cache (only 1: intros a b q r Ha (Hb, Hr) EQ; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: apply mod_bound_pos; only 1: order; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).	0.569353103638	359
Coq.Numbers.NatInt.NZDiv.div_unique_exact	40
Coq.Numbers.NatInt.NZDiv.div_same	40	15.0.0.0.1.30.6	search with cache (only 1: intros n m; only 1: symmetry; only 1: apply div_unique with 0; only 1: order; only 1: now try split; only 1: nzsimpl; only 1: order).	4.05208015442	9202
Coq.Numbers.NatInt.NZDiv.mod_same	40
Coq.Numbers.NatInt.NZDiv.div_small	40
Coq.Numbers.NatInt.NZDiv.mod_small	40
Coq.Numbers.NatInt.NZDiv.div_0_l	40	2.0.0.2.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: order; only 1: now nzsimpl).	0.186462879181	91
Coq.Numbers.NatInt.NZDiv.mod_0_l	40	1.0.0.4.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with 0; only 1: order; only 1: intuition; only 1: now nzsimpl).	0.830726146698	448
Coq.Numbers.NatInt.NZDiv.div_1_r	40	1.0.7.2.0.1.2	search with cache (only 1: symmetry; only 1: apply div_unique with 0; only 1: intuition; only 1: intuition; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: now nzsimpl).	3.58403611183	3671
Coq.Numbers.NatInt.NZDiv.mod_1_r	40
Coq.Numbers.NatInt.NZDiv.div_1_l	40	1.0.0.0	search with cache (only 1: intros; only 1: apply div_small; only 1: intuition; only 1: order').	0.0191929340363	5
Coq.Numbers.NatInt.NZDiv.mod_1_l	40	0.0.0.2.0	search with cache (only 1: intros; only 1: apply mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.12952208519	64
Coq.Numbers.NatInt.NZDiv.div_mul	40
Coq.Numbers.NatInt.NZDiv.mod_mul	40	1.0.0.0.0.1.8.2.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with a; only 1: apply mul_nonneg_nonneg; only 1: order; only 1: order; only 1: now try split; only 1: nzsimpl; only 1: apply mul_comm).	4.4678311348	3865
Coq.Numbers.NatInt.NZDiv.mod_le	40
Coq.Numbers.NatInt.NZDiv.div_pos	40
Coq.Numbers.NatInt.NZDiv.div_str_pos	40
Coq.Numbers.NatInt.NZDiv.div_small_iff	40
Coq.Numbers.NatInt.NZDiv.mod_small_iff	40	0.0.2.2.4.0.0.13.2	search with cache (only 1: split; only 1: destruct (mod_bound_pos a b); only 1: order; only 1: trivial; only 1: order; only 1: symmetry; only 1: symmetry; only 1: apply mod_small; only 1: auto).	39.1798729897	49718
Coq.Numbers.NatInt.NZDiv.div_str_pos_iff	40
Coq.Numbers.NatInt.NZDiv.div_lt	40
Coq.Numbers.NatInt.NZDiv.div_le_mono	40
Coq.Numbers.NatInt.NZDiv.mul_div_le	40
Coq.Numbers.NatInt.NZDiv.mul_succ_div_gt	40
Coq.Numbers.NatInt.NZDiv.div_exact	40
Coq.Numbers.NatInt.NZDiv.div_lt_upper_bound	40
Coq.Numbers.NatInt.NZDiv.div_le_upper_bound	40
Coq.Numbers.NatInt.NZDiv.div_le_lower_bound	40
Coq.Numbers.NatInt.NZDiv.div_le_compat_l	40
Coq.Numbers.NatInt.NZDiv.mod_add	40
Coq.Numbers.NatInt.NZDiv.div_add	40
Coq.Numbers.NatInt.NZDiv.div_add_l	40
Coq.Numbers.NatInt.NZDiv.div_mul_cancel_r	40
Coq.Numbers.NatInt.NZDiv.div_mul_cancel_l	40
Coq.Numbers.NatInt.NZDiv.mul_mod_distr_l	40
Coq.Numbers.NatInt.NZDiv.mul_mod_distr_r	40
Coq.Numbers.NatInt.NZDiv.mod_mod	40
Coq.Numbers.NatInt.NZDiv.mul_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.mul_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.mul_mod	40
Coq.Numbers.NatInt.NZDiv.add_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.add_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.add_mod	40
Coq.Numbers.NatInt.NZDiv.div_div	40
Coq.Numbers.NatInt.NZDiv.mod_mul_r	40
Coq.Numbers.NatInt.NZDiv.div_mul_le	40
Coq.Numbers.NatInt.NZDiv.mod_divides	40
Coq.Numbers.NatInt.NZAdd.add_0_r	40
Coq.Numbers.NatInt.NZAdd.add_succ_r	40	0.0.0.0.2.6.1.0	search with cache (only 1: intro; only 1: intro; only 1: nzinduct n; only 1: nzsimpl; only 1: now rewrite succ_inj_wd; only 1: intros; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	1.02629709244	812
Coq.Numbers.NatInt.NZAdd.add_succ_comm	40	0.1.1.0.0.1	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.217833995819	51
Coq.Numbers.NatInt.NZAdd.add_comm	40	2.0.0.0.0.0	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.103729009628	8
Coq.Numbers.NatInt.NZAdd.add_1_l	40
Coq.Numbers.NatInt.NZAdd.add_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0306169986725	2
Coq.Numbers.NatInt.NZAdd.add_assoc	40	0.0.0.0.0.1.4	search with cache (only 1: intros n m; only 1: intro; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	1.33236289024	409
Coq.Numbers.NatInt.NZAdd.add_cancel_l	40
Coq.Numbers.NatInt.NZAdd.add_cancel_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0845549106598	6
Coq.Numbers.NatInt.NZAdd.add_shuffle0	40	0.0.0.0.3.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.245949029922	24
Coq.Numbers.NatInt.NZAdd.add_shuffle1	40
Coq.Numbers.NatInt.NZAdd.add_shuffle2	40	0.0.0.1.9.2.8.0	search with cache (only 1: intros n m p q; only 1: nzinduct p; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: nzsimpl; only 1: apply add_comm; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	14.6729419231	5886
Coq.Numbers.NatInt.NZAdd.add_shuffle3	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.109788179398	6
Coq.Numbers.NatInt.NZAdd.sub_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0283069610596	2
Coq.Numbers.NatInt.NZOrder.le_wd	40
Coq.Numbers.NatInt.NZOrder.lt_le_incl	40
Coq.Numbers.NatInt.NZOrder.le_refl	40
Coq.Numbers.NatInt.NZOrder.lt_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.le_succ_diag_r	40	0.0.23.2.1.0	search with cache (only 1: intro n; only 1: apply lt_eq_cases; only 1: rewrite lt_succ_r; only 1: constructor 1; only 1: apply lt_eq_cases; only 1: now right).	23.2179501057	24168
Coq.Numbers.NatInt.NZOrder.neq_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.neq_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.nlt_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.nle_succ_diag_l	40	2.1.1.3	search with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: tauto).	0.364248037338	107
Coq.Numbers.NatInt.NZOrder.le_succ_l	40
Coq.Numbers.NatInt.NZOrder.le_gt_cases	40
Coq.Numbers.NatInt.NZOrder.lt_trichotomy	40
Coq.Numbers.NatInt.NZOrder.lt_asymm	40
Coq.Numbers.NatInt.NZOrder.lt_trans	40
Coq.Numbers.NatInt.NZOrder.le_trans	40
Coq.Numbers.NatInt.NZOrder.lt_strorder	40	2.1.0.14.8.10.13	search with cache (only 1: split; only 1: intros n H; only 1: false_hyp H lt_irrefl; only 1: compute; only 1: intros n m p; only 1: generalize (lt_trans n m p); only 1: auto with relations).	3.04100513458	12066
Coq.Numbers.NatInt.NZOrder.le_preorder	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.13.0.6.1.10	search with cache (only 1: split; only 1: intro H; only 1: apply lt_eq_cases; only 1: now right; only 1: compute; only 1: intros n m p; only 1: rewrite 3!lt_eq_cases; only 1: intros [LT| EQ] [LT'| EQ']; only 1: generalize (lt_trans n m p); only 1: auto with relations; only 1: rewrite <- EQ'; only 1: generalize (lt_trans n m p); only 1: auto with relations; only 1: rewrite EQ; only 1: generalize (lt_trans n m p); only 1: auto with relations; only 1: rewrite EQ; only 1: rewrite <- EQ'; only 1: generalize (lt_trans n m p); only 1: auto with relations).	22.1232910156	21373
Coq.Numbers.NatInt.NZOrder.le_partialorder	40
Coq.Numbers.NatInt.NZOrder.lt_neq	40	0.0.0.6	search with cache (only 1: intros n m; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl).	0.109587192535	77
Coq.Numbers.NatInt.NZOrder.le_neq	40
Coq.Numbers.NatInt.NZOrder.eq_le_incl	40	0	search with cache (only 1: intuition order).	0.0410528182983	1
Coq.Numbers.NatInt.NZOrder.lt_stepl	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.022027015686	3
Coq.Numbers.NatInt.NZOrder.lt_stepr	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0238928794861	3
Coq.Numbers.NatInt.NZOrder.le_stepl	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.02192902565	3
Coq.Numbers.NatInt.NZOrder.le_stepr	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0241410732269	3
Coq.Numbers.NatInt.NZOrder.le_lt_trans	40	1	search with cache (only 1: order).	0.0306808948517	20
Coq.Numbers.NatInt.NZOrder.lt_le_trans	40	7.0	search with cache (only 1: intros x y z; only 1: order).	0.0249500274658	16
Coq.Numbers.NatInt.NZOrder.le_antisymm	40	0.0.0.0.0.2.0	search with cache (only 1: intros x y; only 1: rewrite 2!lt_eq_cases; only 1: intuition; only 1: elim (StrictOrder_Irreflexive x); only 1: transitivity y; only 1: auto; only 1: auto).	0.289433956146	22
Coq.Numbers.NatInt.NZOrder.le_succ_r	40	0.0.0.1.1.0.2.8.0.2.5	search with cache (only 1: intros n H; only 1: rewrite lt_eq_cases; only 1: rewrite or_cancel_r; only 1: rewrite lt_succ_r; only 1: reflexivity; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl; only 1: intros LE EQ; only 1: rewrite EQ in LE; only 1: false_hyp LE nle_succ_diag_l).	21.9229631424	17434
Coq.Numbers.NatInt.NZOrder.lt_succ_l	40	0.7.5	search with cache (only 1: intros z Base Step; only 1: apply le_succ_l; only 1: now apply lt_le_incl).	0.538867950439	651
Coq.Numbers.NatInt.NZOrder.le_le_succ_r	40	0.5.6.1	search with cache (only 1: intro n; only 1: intros LE EQ; only 1: apply lt_le_incl; only 1: now rewrite lt_succ_r).	1.46932387352	1211
Coq.Numbers.NatInt.NZOrder.lt_lt_succ_r	40	2.4.1.4	search with cache (only 1: intro m; only 1: intro n; only 1: rewrite lt_succ_r; only 1: order).	0.905650854111	866
Coq.Numbers.NatInt.NZOrder.succ_lt_mono	40	0.0.0.0.0.0.0.0.0.0.0.1.2.1.0.0.1.2.0	search with cache (only 1: intro n; only 1: intro m; only 1: rewrite lt_succ_r; only 1: nzinduct m n; only 1: split; only 1: intro H; only 1: false_hyp H lt_irrefl; only 1: intro H; only 1: false_hyp H nle_succ_diag_l; only 1: intro m; only 1: rewrite (lt_eq_cases (S n) (S m)), !lt_succ_r, (lt_eq_cases n m), succ_inj_wd; only 1: rewrite or_cancel_r; only 1: reflexivity; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl; only 1: intros LE EQ; only 1: rewrite EQ in LE; only 1: false_hyp LE nle_succ_diag_l).	9.09250402451	12722
Coq.Numbers.NatInt.NZOrder.succ_le_mono	40
Coq.Numbers.NatInt.NZOrder.lt_0_1	40
Coq.Numbers.NatInt.NZOrder.le_0_1	40	0.11.0	search with cache (only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.120588064194	102
Coq.Numbers.NatInt.NZOrder.lt_1_2	40
Coq.Numbers.NatInt.NZOrder.lt_0_2	40	0.7.0	search with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl, lt_0_1).	0.0351278781891	18
Coq.Numbers.NatInt.NZOrder.le_0_2	40	0.11.1.0.1	search with cache (only 1: transitivity 1; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite two_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.753601074219	861
Coq.Numbers.NatInt.NZOrder.lt_1_l	40
Coq.Numbers.NatInt.NZOrder.lt_ge_cases	40	1.0.0.11.0	search with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intuition).	0.717751979828	790
Coq.Numbers.NatInt.NZOrder.le_ge_cases	40	0.0.0.8.5	search with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: rewrite lt_eq_cases; only 1: intuition order; only 1: intuition order).	1.13036298752	714
Coq.Numbers.NatInt.NZOrder.lt_gt_cases	40	18.0.0	search with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: intuition order).	8.54017519951	2367
Coq.Numbers.NatInt.NZOrder.eq_decidable	40
Coq.Numbers.NatInt.NZOrder.eq_dne	40	1.0.13.7	search with cache (only 1: intros; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.792351007462	695
Coq.Numbers.NatInt.NZOrder.le_ngt	40	1	search with cache (only 1: intuition order).	0.0168731212616	2
Coq.Numbers.NatInt.NZOrder.nlt_ge	40	0	search with cache (only 1: intuition order).	0.0168290138245	1
Coq.Numbers.NatInt.NZOrder.lt_decidable	40	11.4.8.0	search with cache (only 1: intros; only 1: destruct (le_gt_cases m n); only 1: (right; order) || (left; order); only 1: now left).	35.3921911716	10631
Coq.Numbers.NatInt.NZOrder.lt_dne	40	0.0.2.0	search with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.091197013855	52
Coq.Numbers.NatInt.NZOrder.nle_gt	40	0	search with cache (only 1: intuition order).	0.0173370838165	1
Coq.Numbers.NatInt.NZOrder.lt_nge	40	0	search with cache (only 1: intuition order).	0.0167000293732	1
Coq.Numbers.NatInt.NZOrder.le_decidable	40	0.0.2.5.1.0	search with cache (only 1: intros; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: right; only 1: order).	3.17816591263	1208
Coq.Numbers.NatInt.NZOrder.le_dne	40	1.0.0.2.0.0	search with cache (only 1: intros n m; only 1: split; only 1: destruct (le_gt_cases n m); only 1: intuition order; only 1: intuition order; only 1: order).	0.0277581214905	9
Coq.Numbers.NatInt.NZOrder.nlt_succ_r	40	0.13.6	search with cache (only 1: intros n H; only 1: rewrite lt_succ_r; only 1: intuition order).	6.23504209518	5909
Coq.Numbers.NatInt.NZOrder.lt_exists_pred_strong	40
Coq.Numbers.NatInt.NZOrder.lt_exists_pred	40
Coq.Numbers.NatInt.NZOrder.lt_succ_pred	40
Coq.Numbers.NatInt.NZOrder.rs_rs'	40
Coq.Numbers.NatInt.NZOrder.rs'_rs''	40
Coq.Numbers.NatInt.NZOrder.rbase	40	55.1	search with cache (only 1: intros RS' n; only 1: order).	37.6448359489	12876
Coq.Numbers.NatInt.NZOrder.A'A_right	40
Coq.Numbers.NatInt.NZOrder.strong_right_induction	40
Coq.Numbers.NatInt.NZOrder.right_induction	40
Coq.Numbers.NatInt.NZOrder.right_induction'	40
Coq.Numbers.NatInt.NZOrder.strong_right_induction'	40	0.0.7.0.0.0.1.0.0	search with cache (only 1: intros L R n; only 1: destruct (lt_trichotomy n z) as [H| [H| H]]; only 1: apply L; only 1: now apply lt_le_incl; only 1: apply L; only 1: now apply eq_le_incl; only 1: apply strong_right_induction; only 1: assumption; only 1: now apply lt_le_incl).	3.00739192963	3485
Coq.Numbers.NatInt.NZOrder.ls_ls'	40
Coq.Numbers.NatInt.NZOrder.ls'_ls''	40
Coq.Numbers.NatInt.NZOrder.lbase	40
Coq.Numbers.NatInt.NZOrder.A'A_left	40	96	search with cache (only 1: firstorder).	25.8722829819	103412
Coq.Numbers.NatInt.NZOrder.strong_left_induction	40
Coq.Numbers.NatInt.NZOrder.left_induction	40
Coq.Numbers.NatInt.NZOrder.left_induction'	40
Coq.Numbers.NatInt.NZOrder.strong_left_induction'	40	0.0.0.0.0.0.0.6.0.0	search with cache (only 1: intros R L n; only 1: destruct (lt_trichotomy n z) as [H| [H| H]]; only 1: apply strong_left_induction; only 1: assumption; only 1: now apply lt_le_incl; only 1: rewrite H; only 1: apply R; only 1: now apply eq_le_incl; only 1: apply R; only 1: now apply lt_le_incl).	1.77839279175	1434
Coq.Numbers.NatInt.NZOrder.order_induction	40
Coq.Numbers.NatInt.NZOrder.order_induction'	40
Coq.Numbers.NatInt.NZOrder.lt_ind	40
Coq.Numbers.NatInt.NZOrder.le_ind	40	2.26.1	search with cache (only 1: intros Az AS AP n; only 1: apply strong_right_induction; only 1: now apply rs_rs').	14.5787649155	21522
Coq.Numbers.NatInt.NZOrder.Rlt_wd	40
Coq.Numbers.NatInt.NZOrder.Rgt_wd	40
Coq.Numbers.NatInt.NZOrder.lt_wf	40
Coq.Numbers.NatInt.NZOrder.gt_wf	40
Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40
Coq.Numbers.NatInt.NZDomain.itersucc_or_itersucc	40
Coq.Numbers.NatInt.NZDomain.succ_swap_pred	40
Coq.Numbers.NatInt.NZDomain.itersucc_or_iterpred	40
Coq.Numbers.NatInt.NZDomain.itersucc0_or_iterpred0	40
Coq.Numbers.NatInt.NZDomain.initial_alt	40
Coq.Numbers.NatInt.NZDomain.initial_alt2	40
Coq.Numbers.NatInt.NZDomain.initial_unique	40
Coq.Numbers.NatInt.NZDomain.initial_ancestor	40
Coq.Numbers.NatInt.NZDomain.succ_pred_approx	40
Coq.Numbers.NatInt.NZDomain.succ_onto_gives_succ_pred	40
Coq.Numbers.NatInt.NZDomain.succ_onto_pred_injective	40
Coq.Numbers.NatInt.NZDomain.bi_induction_pred	40
Coq.Numbers.NatInt.NZDomain.central_induction_pred	40
Coq.Numbers.NatInt.NZDomain.ofnat_zero	40	4	search with cache (only 1: solve_proper).	0.0101368427277	5
Coq.Numbers.NatInt.NZDomain.ofnat_succ	40	0	search with cache (only 1: reflexivity).	0.0100638866425	1
Coq.Numbers.NatInt.NZDomain.ofnat_pred	40
Coq.Numbers.NatInt.NZDomain.ofnat_S_gt_0	40
Coq.Numbers.NatInt.NZDomain.ofnat_S_neq_0	40
Coq.Numbers.NatInt.NZDomain.ofnat_injective	40
Coq.Numbers.NatInt.NZDomain.ofnat_eq	40
Coq.Numbers.NatInt.NZDomain.ofnat_lt	40
Coq.Numbers.NatInt.NZDomain.ofnat_le	40
Coq.Numbers.NatInt.NZDomain.ofnat_add_l	40
Coq.Numbers.NatInt.NZDomain.ofnat_add	40	0.0.1.0.2.4.3	search with cache (only 1: unfold ofnat; only 1: symmetry; only 1: induction n; only 1: apply add_0_l; only 1: rewrite ofnat_succ, add_succ_l; only 1: simpl; only 1: now f_equiv).	1.22161316872	1234
Coq.Numbers.NatInt.NZDomain.ofnat_mul	40
Coq.Numbers.NatInt.NZDomain.ofnat_sub_r	40
Coq.Numbers.NatInt.NZDomain.ofnat_sub	40
Coq.Numbers.NatInt.NZPow.pow_0_l	40
Coq.Numbers.NatInt.NZPow.pow_0_l'	40
Coq.Numbers.NatInt.NZPow.pow_1_r	40	1.29.9	search with cache (only 1: intros; only 1: rewrite one_succ; only 1: now nzsimpl).	2.53255391121	3253
Coq.Numbers.NatInt.NZPow.pow_1_l	40
Coq.Numbers.NatInt.NZPow.pow_2_r	40
Coq.Numbers.NatInt.NZPow.pow_eq_0	40
Coq.Numbers.NatInt.NZPow.pow_nonzero	40	0.0.1.2.2.0.0.0.0.0.19	search with cache (only 1: intro n; only 1: intros a b Hb; only 1: apply le_ind with (4 := Hb); only 1: solve_proper; only 1: rewrite pow_0_r; only 1: order'; only 1: intros; only 1: rewrite pow_succ_r by trivial; only 1: intro H1; only 1: apply eq_mul_0 in H1; only 1: tauto).	26.7899129391	15746
Coq.Numbers.NatInt.NZPow.pow_eq_0_iff	40
Coq.Numbers.NatInt.NZPow.pow_add_r	40
Coq.Numbers.NatInt.NZPow.pow_mul_l	40
Coq.Numbers.NatInt.NZPow.pow_mul_r	40
Coq.Numbers.NatInt.NZPow.pow_nonneg	40
Coq.Numbers.NatInt.NZPow.pow_pos_nonneg	40	0.7.0.0.0.0.0.0.1.0	search with cache (only 1: intros a b Ha Hb; only 1: apply le_ind with (4 := Hb); only 1: solve_proper; only 1: rewrite pow_0_r; only 1: order'; only 1: clear b Hb; only 1: intros b Hb IH; only 1: nzsimpl; only 1: now apply mul_pos_pos; only 1: trivial).	17.2577009201	2283
Coq.Numbers.NatInt.NZPow.pow_lt_mono_l	40
Coq.Numbers.NatInt.NZPow.pow_le_mono_l	40
Coq.Numbers.NatInt.NZPow.pow_gt_1	40
Coq.Numbers.NatInt.NZPow.pow_lt_mono_r	40
Coq.Numbers.NatInt.NZPow.pow_le_mono_r	40
Coq.Numbers.NatInt.NZPow.pow_le_mono	40
Coq.Numbers.NatInt.NZPow.pow_lt_mono	40
Coq.Numbers.NatInt.NZPow.pow_inj_l	40
Coq.Numbers.NatInt.NZPow.pow_inj_r	40
Coq.Numbers.NatInt.NZPow.pow_lt_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.pow_le_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.pow_lt_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.pow_le_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.pow_gt_lin_r	40
Coq.Numbers.NatInt.NZPow.pow_add_lower	40
Coq.Numbers.NatInt.NZPow.pow_add_upper	40
Coq.Numbers.NatInt.NZGcd.divide_wd	40
Coq.Numbers.NatInt.NZGcd.divide_1_l	40
Coq.Numbers.NatInt.NZGcd.divide_0_r	40	5.2.2	search with cache (only 1: unfold divide; only 1: exists 0; only 1: now nzsimpl).	0.189618110657	163
Coq.Numbers.NatInt.NZGcd.divide_0_l	40
Coq.Numbers.NatInt.NZGcd.eq_mul_1_nonneg	40
Coq.Numbers.NatInt.NZGcd.eq_mul_1_nonneg'	40
Coq.Numbers.NatInt.NZGcd.divide_1_r_nonneg	40
Coq.Numbers.NatInt.NZGcd.divide_refl	40
Coq.Numbers.NatInt.NZGcd.divide_trans	40
Coq.Numbers.NatInt.NZGcd.divide_antisym_nonneg	40
Coq.Numbers.NatInt.NZGcd.mul_divide_mono_l	40
Coq.Numbers.NatInt.NZGcd.mul_divide_mono_r	40	0.0.35.0	search with cache (only 1: intros n m p (q, Hq); only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: exists q; only 1: now rewrite mul_shuffle3, Hq).	9.71463704109	11782
Coq.Numbers.NatInt.NZGcd.mul_divide_cancel_l	40
Coq.Numbers.NatInt.NZGcd.mul_divide_cancel_r	40	0.0.0.2.0.6.0	search with cache (only 1: intros n m p Hp; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: split; only 1: intros (q, Hq); only 1: exists q; only 1: now rewrite mul_shuffle3, mul_cancel_l in Hq; only 1: apply mul_divide_mono_l).	0.898543834686	691
Coq.Numbers.NatInt.NZGcd.divide_add_r	40
Coq.Numbers.NatInt.NZGcd.divide_mul_l	40
Coq.Numbers.NatInt.NZGcd.divide_mul_r	40
Coq.Numbers.NatInt.NZGcd.divide_factor_l	40	0.0.1.14	search with cache (only 1: intros; only 1: apply divide_mul_l; only 1: exists 1; only 1: now nzsimpl).	0.556490898132	541
Coq.Numbers.NatInt.NZGcd.divide_factor_r	40	0.3.0	search with cache (only 1: intros; only 1: rewrite mul_comm; only 1: apply divide_mul_l, divide_refl).	0.0494599342346	17
Coq.Numbers.NatInt.NZGcd.divide_pos_le	40
Coq.Numbers.NatInt.NZGcd.gcd_unique	40
Coq.Numbers.NatInt.NZGcd.gcd_wd	40
Coq.Numbers.NatInt.NZGcd.gcd_divide_iff	40
Coq.Numbers.NatInt.NZGcd.gcd_unique_alt	40
Coq.Numbers.NatInt.NZGcd.gcd_comm	40	1.13.8.7.7.2.13	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: apply gcd_nonneg; only 1: apply gcd_divide_r; only 1: apply gcd_divide_l; only 1: intros; only 1: now apply gcd_greatest).	10.2333090305	22870
Coq.Numbers.NatInt.NZGcd.gcd_assoc	40
Coq.Numbers.NatInt.NZGcd.gcd_0_l_nonneg	40	0.0.6.0.0.1.1.18	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: exists 0; only 1: now nzsimpl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial).	0.84278011322	1600
Coq.Numbers.NatInt.NZGcd.gcd_0_r_nonneg	40	0.1.1.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.02201795578	8
Coq.Numbers.NatInt.NZGcd.gcd_1_l	40	0.0.0.5.0.1.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: apply lt_le_incl, lt_0_1; only 1: apply divide_refl; only 1: exists n; only 1: now nzsimpl; only 1: trivial).	0.347893953323	204
Coq.Numbers.NatInt.NZGcd.gcd_1_r	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).	0.032534122467	7
Coq.Numbers.NatInt.NZGcd.gcd_diag_nonneg	40	2.1.1.0.1.2	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).	0.112340927124	142
Coq.Numbers.NatInt.NZGcd.gcd_eq_0_l	40
Coq.Numbers.NatInt.NZGcd.gcd_eq_0_r	40
Coq.Numbers.NatInt.NZGcd.gcd_eq_0	40
Coq.Numbers.NatInt.NZGcd.gcd_mul_diag_l	40	0.1.1.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: trivial using divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial using divide_refl).	0.0246679782867	8
Coq.Numbers.NatInt.NZGcd.divide_gcd_iff	40
Coq.Numbers.NatInt.NZParity.Even_wd	40
Coq.Numbers.NatInt.NZParity.Odd_wd	40
Coq.Numbers.NatInt.NZParity.even_wd	40
Coq.Numbers.NatInt.NZParity.odd_wd	40
Coq.Numbers.NatInt.NZParity.Even_or_Odd	40
Coq.Numbers.NatInt.NZParity.double_below	40
Coq.Numbers.NatInt.NZParity.double_above	40	0.0.0.0.0.0	search with cache (only 1: intros n m; only 1: rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: now rewrite le_succ_l; only 1: order').	0.22159409523	6
Coq.Numbers.NatInt.NZParity.Even_Odd_False	40
Coq.Numbers.NatInt.NZParity.orb_even_odd	40
Coq.Numbers.NatInt.NZParity.negb_odd	40
Coq.Numbers.NatInt.NZParity.negb_even	40	0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	1.68289899826	511
Coq.Numbers.NatInt.NZParity.even_0	40
Coq.Numbers.NatInt.NZParity.odd_0	40
Coq.Numbers.NatInt.NZParity.odd_1	40
Coq.Numbers.NatInt.NZParity.even_1	40
Coq.Numbers.NatInt.NZParity.even_2	40
Coq.Numbers.NatInt.NZParity.odd_2	40
Coq.Numbers.NatInt.NZParity.Odd_succ	40
Coq.Numbers.NatInt.NZParity.odd_succ	40
Coq.Numbers.NatInt.NZParity.even_succ	40
Coq.Numbers.NatInt.NZParity.Even_succ	40
Coq.Numbers.NatInt.NZParity.Even_succ_succ	40
Coq.Numbers.NatInt.NZParity.Odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.even_succ_succ	40	0.1.0	search with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!even_spec; only 1: now rewrite Even_succ, Odd_succ).	0.0237410068512	4
Coq.Numbers.NatInt.NZParity.odd_succ_succ	40	0.3.0	search with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!odd_spec; only 1: now rewrite Odd_succ, Even_succ).	0.0311870574951	13
Coq.Numbers.NatInt.NZParity.even_add	40
Coq.Numbers.NatInt.NZParity.odd_add	40
Coq.Numbers.NatInt.NZParity.even_mul	40
Coq.Numbers.NatInt.NZParity.odd_mul	40
Coq.Numbers.NatInt.NZParity.even_add_even	40
Coq.Numbers.NatInt.NZParity.odd_add_even	40	0.0.0.0.0	search with cache (only 1: intros n m Hm; only 1: rewrite <- !negb_even; only 1: apply even_spec in Hm; only 1: rewrite even_add, Hm; only 1: now destruct (even n)).	0.0250399112701	5
Coq.Numbers.NatInt.NZParity.even_add_mul_even	40
Coq.Numbers.NatInt.NZParity.odd_add_mul_even	40	5.1.5.6.4.0	search with cache (only 1: intros n m p Hm; only 1: rewrite <- !negb_even; only 1: rewrite even_add; only 1: rewrite even_mul; only 1: apply even_spec in Hm; only 1: now destruct (even n), (even m)).	28.451004982	16025
Coq.Numbers.NatInt.NZParity.even_add_mul_2	40	0.1.9.3	search with cache (only 1: intros; only 1: apply even_add_even; only 1: exists m; only 1: now f_equiv).	2.03319621086	646
Coq.Numbers.NatInt.NZParity.odd_add_mul_2	40	0.1.2.1	search with cache (only 1: intros; only 1: apply odd_add_even; only 1: exists m; only 1: now f_equiv).	0.0262849330902	8
Coq.Numbers.NatInt.NZAddOrder.add_lt_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.add_lt_mono_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	0.137901067734	6
Coq.Numbers.NatInt.NZAddOrder.add_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.add_le_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.add_le_mono_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).	0.115347146988	6
Coq.Numbers.NatInt.NZAddOrder.add_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.add_lt_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.add_le_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.add_pos_pos	40
Coq.Numbers.NatInt.NZAddOrder.add_pos_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.add_nonneg_pos	40
Coq.Numbers.NatInt.NZAddOrder.add_nonneg_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.lt_add_pos_l	40
Coq.Numbers.NatInt.NZAddOrder.lt_add_pos_r	40
Coq.Numbers.NatInt.NZAddOrder.le_lt_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.lt_le_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.le_le_add_le	40
Coq.Numbers.NatInt.NZAddOrder.add_lt_cases	40
Coq.Numbers.NatInt.NZAddOrder.add_le_cases	40
Coq.Numbers.NatInt.NZAddOrder.add_neg_cases	40
Coq.Numbers.NatInt.NZAddOrder.add_pos_cases	40	0.0.0	search with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: now nzsimpl).	0.0319490432739	3
Coq.Numbers.NatInt.NZAddOrder.add_nonpos_cases	40
Coq.Numbers.NatInt.NZAddOrder.add_nonneg_cases	40	0.0.0	search with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0330369472504	3
Coq.Numbers.NatInt.NZAddOrder.le_exists_sub	40
Coq.Numbers.NatInt.NZMul.mul_0_r	40	1.0.0.6	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: now nzsimpl').	0.199640989304	54
Coq.Numbers.NatInt.NZMul.mul_succ_r	40
Coq.Numbers.NatInt.NZMul.mul_comm	40	2.0.0.0.0.0	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: nzsimpl; only 1: now rewrite add_cancel_r).	0.0623109340668	8
Coq.Numbers.NatInt.NZMul.mul_add_distr_r	40
Coq.Numbers.NatInt.NZMul.mul_add_distr_l	40
Coq.Numbers.NatInt.NZMul.mul_assoc	40
Coq.Numbers.NatInt.NZMul.mul_1_l	40	0.0.0.2.0	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0459041595459	7
Coq.Numbers.NatInt.NZMul.mul_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0263690948486	2
Coq.Numbers.NatInt.NZMul.mul_shuffle0	40	0.0.0.2.0.7.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite mul_add_distr_r; only 1: now rewrite add_cancel_r).	5.80225205421	2027
Coq.Numbers.NatInt.NZMul.mul_shuffle1	40
Coq.Numbers.NatInt.NZMul.mul_shuffle2	40
Coq.Numbers.NatInt.NZMul.mul_shuffle3	40
Coq.Numbers.NatInt.NZLog.log2_nonneg	40
Coq.Numbers.NatInt.NZLog.log2_unique	40
Coq.Numbers.NatInt.NZLog.log2_wd	40
Coq.Numbers.NatInt.NZLog.log2_spec_alt	40
Coq.Numbers.NatInt.NZLog.log2_unique'	40
Coq.Numbers.NatInt.NZLog.log2_pow2	40
Coq.Numbers.NatInt.NZLog.log2_pred_pow2	40
Coq.Numbers.NatInt.NZLog.log2_1	40
Coq.Numbers.NatInt.NZLog.log2_2	40	1.0.0.1.0.1	search with cache (only 1: apply log2_unique' with 0; only 1: order'; only 1: split; only 1: order_pos; only 1: order_pos; only 1: now nzsimpl).	0.0411958694458	9
Coq.Numbers.NatInt.NZLog.log2_pos	40
Coq.Numbers.NatInt.NZLog.log2_null	40
Coq.Numbers.NatInt.NZLog.log2_le_mono	40
Coq.Numbers.NatInt.NZLog.log2_lt_cancel	40
Coq.Numbers.NatInt.NZLog.log2_le_pow2	40
Coq.Numbers.NatInt.NZLog.log2_lt_pow2	40
Coq.Numbers.NatInt.NZLog.log2_lt_lin	40
Coq.Numbers.NatInt.NZLog.log2_le_lin	40
Coq.Numbers.NatInt.NZLog.log2_mul_below	40
Coq.Numbers.NatInt.NZLog.log2_mul_above	40
Coq.Numbers.NatInt.NZLog.log2_mul_pow2	40
Coq.Numbers.NatInt.NZLog.log2_double	40
Coq.Numbers.NatInt.NZLog.log2_same	40
Coq.Numbers.NatInt.NZLog.log2_succ_le	40
Coq.Numbers.NatInt.NZLog.log2_succ_or	40
Coq.Numbers.NatInt.NZLog.log2_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.log2_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.log2_succ_double	40
Coq.Numbers.NatInt.NZLog.log2_add_le	40
Coq.Numbers.NatInt.NZLog.add_log2_lt	40
Coq.Numbers.NatInt.NZLog.log2_up_eqn0	40
Coq.Numbers.NatInt.NZLog.log2_up_eqn	40	0.0.0.0.1.1	search with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.0294017791748	8
Coq.Numbers.NatInt.NZLog.log2_up_spec	40
Coq.Numbers.NatInt.NZLog.log2_up_nonpos	40	0.4.0.0.0.0	search with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order'; only 1: order'; only 1: order).	0.0288519859314	10
Coq.Numbers.NatInt.NZLog.log2_up_wd	40
Coq.Numbers.NatInt.NZLog.log2_up_nonneg	40
Coq.Numbers.NatInt.NZLog.log2_up_unique	40
Coq.Numbers.NatInt.NZLog.log2_up_pow2	40
Coq.Numbers.NatInt.NZLog.log2_up_succ_pow2	40
Coq.Numbers.NatInt.NZLog.log2_up_1	40	0.0.3.0.1	search with cache (only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.0253789424896	9
Coq.Numbers.NatInt.NZLog.log2_up_2	40
Coq.Numbers.NatInt.NZLog.le_log2_log2_up	40
Coq.Numbers.NatInt.NZLog.le_log2_up_succ_log2	40
Coq.Numbers.NatInt.NZLog.log2_log2_up_spec	40
Coq.Numbers.NatInt.NZLog.log2_log2_up_exact	40
Coq.Numbers.NatInt.NZLog.log2_up_pos	40	0.1.3.2.0.1.2.2.0	search with cache (only 1: intros a Ha; only 1: pose proof (log2_up_nonneg a) as Hc; only 1: apply (pow_lt_mono_r_iff 2); only 1: order'; only 1: destruct (log2_up_spec a Ha) as (LTc, LEc); only 1: order'; only 1: nzsimpl; only 1: destruct (log2_up_spec a Ha) as (LTc, LEc); only 1: order').	10.4016530514	6030
Coq.Numbers.NatInt.NZLog.log2_up_null	40
Coq.Numbers.NatInt.NZLog.log2_up_le_mono	40
Coq.Numbers.NatInt.NZLog.log2_up_lt_cancel	40
Coq.Numbers.NatInt.NZLog.log2_up_lt_pow2	40
Coq.Numbers.NatInt.NZLog.log2_up_le_pow2	40
Coq.Numbers.NatInt.NZLog.log2_up_lt_lin	40
Coq.Numbers.NatInt.NZLog.log2_up_le_lin	40
Coq.Numbers.NatInt.NZLog.log2_up_mul_above	40
Coq.Numbers.NatInt.NZLog.log2_up_mul_below	40
Coq.Numbers.NatInt.NZLog.log2_up_mul_pow2	40
Coq.Numbers.NatInt.NZLog.log2_up_double	40
Coq.Numbers.NatInt.NZLog.log2_up_same	40
Coq.Numbers.NatInt.NZLog.log2_up_succ_le	40
Coq.Numbers.NatInt.NZLog.log2_up_succ_or	40
Coq.Numbers.NatInt.NZLog.log2_up_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.log2_up_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.log2_up_succ_double	40
Coq.Numbers.NatInt.NZLog.log2_up_add_le	40
Coq.Numbers.NatInt.NZLog.add_log2_up_lt	40
Coq.Numbers.NatInt.NZBase.eq_sym_iff	40	3.1.1	search with cache (only 1: red; only 1: intros; only 1: intuition).	0.0109879970551	13
Coq.Numbers.NatInt.NZBase.neq_sym	40	4.0	search with cache (only 1: intros; only 1: simpl_relation).	0.00923299789429	6
Coq.Numbers.NatInt.NZBase.eq_stepl	40	0.1.0.29.0.0	search with cache (only 1: intros x y H; only 1: symmetry; only 1: transitivity x; only 1: symmetry; only 1: auto; only 1: tauto).	22.8238749504	85073
Coq.Numbers.NatInt.NZBase.succ_inj	40
Coq.Numbers.NatInt.NZBase.succ_inj_wd	40
Coq.Numbers.NatInt.NZBase.succ_inj_wd_neg	40
Coq.Numbers.NatInt.NZBase.central_induction	40
Coq.Numbers.NatInt.NZMulOrder.mul_lt_pred	40
Coq.Numbers.NatInt.NZMulOrder.mul_lt_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_lt_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.mul_lt_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_lt_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_nonneg_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_nonpos_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_nonneg_r	40	4.0.0.0.0.3.0.0.0.0.0	search with cache (only 1: intros n m p H1 H2; only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_lt_mono_pos_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: apply eq_le_incl; only 1: rewrite <- H1; only 1: now nzsimpl).	15.3385181427	4389
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_nonpos_r	40	0.1.0.0.0.1.0.0.1.0.0	search with cache (only 1: intros n m p H1 H2; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_neg_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: apply eq_le_incl; only 1: rewrite H1; only 1: now do 2 rewrite mul_0_l).	3.58486294746	1294
Coq.Numbers.NatInt.NZMulOrder.mul_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.mul_id_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_id_r	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_pos_r	40	0.0.0.4.0	search with cache (only 1: intros n m p H; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_pos_l p n m) by assumption; only 1: now rewrite (mul_cancel_l n m p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl)).	0.0721249580383	24
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_neg_r	40	0.0.0.1.2.0.0	search with cache (only 1: intros n m p H; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_neg_l p n m); only 1: rewrite (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl); only 1: now setoid_replace (n == m) with (m == n) by split; now intro; only 1: assumption).	0.092386007309	10
Coq.Numbers.NatInt.NZMulOrder.mul_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.mul_pos_pos	40
Coq.Numbers.NatInt.NZMulOrder.mul_neg_neg	40
Coq.Numbers.NatInt.NZMulOrder.mul_pos_neg	40	1.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).	0.0326039791107	4
Coq.Numbers.NatInt.NZMulOrder.mul_neg_pos	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r).	0.0261518955231	3
Coq.Numbers.NatInt.NZMulOrder.mul_nonneg_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.mul_pos_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_pos_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.mul_nonneg_cancel_l	40	0.4.0.6.0	search with cache (only 1: intros; only 1: rewrite <- (mul_0_r n)  at 1; only 1: symmetry; only 1: apply mul_le_mono_pos_l; only 1: trivial).	1.31113982201	759
Coq.Numbers.NatInt.NZMulOrder.mul_nonneg_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.lt_1_mul_pos	40
Coq.Numbers.NatInt.NZMulOrder.eq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.neq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.eq_square_0	40
Coq.Numbers.NatInt.NZMulOrder.eq_mul_0_l	40	0.4.2.0	search with cache (only 1: intros n m; only 1: intro H1; only 1: apply eq_mul_0 in H1; only 1: tauto).	0.250488996506	100
Coq.Numbers.NatInt.NZMulOrder.eq_mul_0_r	40	1.0.0	search with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: tauto).	0.028792142868	13
Coq.Numbers.NatInt.NZMulOrder.lt_0_mul	40
Coq.Numbers.NatInt.NZMulOrder.square_lt_mono_nonneg	40	9.1	search with cache (only 1: intros p n m Hp; only 1: now apply mul_lt_mono_nonneg).	0.0646040439606	89
Coq.Numbers.NatInt.NZMulOrder.square_le_mono_nonneg	40	0.1.0.1.1.1	search with cache (only 1: intros n m H1 H2; only 1: apply mul_le_mono_nonneg; only 1: order; only 1: intuition order; only 1: order; only 1: intuition order).	0.0232229232788	10
Coq.Numbers.NatInt.NZMulOrder.square_lt_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.square_le_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.mul_2_mono_l	40
Coq.Numbers.NatInt.NZMulOrder.add_le_mul	40
Coq.Numbers.NatInt.NZMulOrder.square_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.crossmul_le_addsquare	40
Coq.Numbers.NatInt.NZMulOrder.add_square_le	40
Coq.Numbers.NatInt.NZMulOrder.square_add_le	40
Coq.Numbers.NatInt.NZMulOrder.quadmul_le_squareadd	40
Coq.Structures.OrdersTac.eq_refl	40	3	search with cache (only 1: solve_proper).	0.00755286216736	4
Coq.Structures.OrdersTac.le_refl	40
Coq.Structures.OrdersTac.lt_irrefl	40
Coq.Structures.OrdersTac.eq_sym	40	8.8	search with cache (only 1: intros; only 1: simpl_relation).	0.0445499420166	162
Coq.Structures.OrdersTac.le_antisym	40
Coq.Structures.OrdersTac.neq_sym	40	0	search with cache (only 1: auto with *).	0.00947594642639	1
Coq.Structures.OrdersTac.trans	40
Coq.Structures.OrdersTac.eq_neq	40
Coq.Structures.OrdersTac.neq_eq	40	0	search with cache (only 1: eauto using eq_trans, eq_sym).	0.00949811935425	1
Coq.Structures.OrdersTac.not_neq_eq	40
Coq.Structures.OrdersTac.not_ge_lt	40
Coq.Structures.OrdersTac.not_gt_le	40	0.2.1.2.0.0	search with cache (only 1: intros x y H; only 1: destruct (P.lt_total x y); only 1: rewrite P.le_lteq; only 1: auto; only 1: rewrite P.le_lteq; only 1: intuition).	0.235721111298	206
Coq.Structures.OrdersTac.le_neq_lt	40	2.0.4	search with cache (only 1: intros x y; only 1: rewrite P.le_lteq; only 1: intuition).	0.0662889480591	46
Coq.Structures.OrdersEx.lt_strorder	40
Coq.Structures.OrdersEx.lt_compat	40
Coq.Structures.OrdersEx.compare_spec	40
Coq.Structures.OrdersEx.bits_lt_antirefl	40
Coq.Structures.OrdersEx.bits_lt_trans	40
Coq.Structures.OrdersEx.lt_compat	40	1	search with cache (only 1: solve_proper).	0.104801893234	2
Coq.Structures.OrdersEx.lt_strorder	40
Coq.Structures.OrdersEx.compare_spec	40
Coq.Structures.OrderedTypeEx.lt_trans	40
Coq.Structures.OrderedTypeEx.lt_not_eq	40
Coq.Structures.OrderedTypeEx.compare	40
Coq.Structures.OrderedTypeEx.lt_trans	40	35.3	search with cache (only 1: intros; only 1: now try rewrite H).	2.42821502686	3705
Coq.Structures.OrderedTypeEx.lt_not_eq	40
Coq.Structures.OrderedTypeEx.compare	40
Coq.Structures.OrderedTypeEx.lt_not_eq	40
Coq.Structures.OrderedTypeEx.compare	40
Coq.Structures.OrderedTypeEx.compare	40
Coq.Structures.OrderedTypeEx.eq_refl	40	7.11	search with cache (only 1: intros H'; only 1: now subst).	0.403611183167	538
Coq.Structures.OrderedTypeEx.eq_sym	40
Coq.Structures.OrderedTypeEx.eq_trans	40	13.15.5.1.0.16	search with cache (only 1: intros x y; only 1: intros (x1, x2); only 1: unfold eq; only 1: intuition; only 1: MO1.order; only 1: MO2.order).	13.7806460857	34628
Coq.Structures.OrderedTypeEx.lt_trans	40
Coq.Structures.OrderedTypeEx.lt_not_eq	40	2.1.3.2.0	search with cache (only 1: intros (x1, x2); only 1: unfold eq, lt; only 1: intuition; only 1: MO1.order; only 1: MO2.order).	1.39702415466	889
Coq.Structures.OrderedTypeEx.compare	40
Coq.Structures.OrderedTypeEx.eq_dec	40
Coq.Structures.OrderedTypeEx.bits_lt_trans	40
Coq.Structures.OrderedTypeEx.lt_trans	40
Coq.Structures.OrderedTypeEx.bits_lt_antirefl	40
Coq.Structures.OrderedTypeEx.lt_not_eq	40
Coq.Structures.OrderedTypeEx.compare	40
Coq.Structures.OrderedTypeEx.eq_dec	40
Coq.Structures.OrderedTypeEx.nat_of_ascii_inverse	40
Coq.Structures.OrderedTypeEx.lts_tail_unique	40
Coq.Structures.OrderedTypeEx.lt_trans	40
Coq.Structures.OrderedTypeEx.lt_not_eq	40
Coq.Structures.OrderedTypeEx.compare	40
Coq.Structures.Orders.eqb_eq	40
Coq.Structures.Orders.le_lteq	40	5.1	search with cache (only 1: Bool.destr_bool; only 1: firstorder).	0.0265939235687	27
Coq.Structures.Orders.lt_total	40
Coq.Structures.Orders.leb_le	40
Coq.Structures.Orders.leb_total	40
Coq.Structures.Orders.leb_trans	40
Coq.Structures.Orders.compare_spec	40
Coq.Structures.Orders.eqb_eq	40
Coq.Structures.Orders.eq_equiv	40
Coq.Structures.Orders.lt_strorder	40
Coq.Structures.Orders.lt_compat	40
Coq.Structures.Orders.le_lteq	40	0.0.0.3.6.3.0	search with cache (only 1: intros; only 1: unfold eq, lt, le in *; only 1: case leb; only 1: case leb; only 1: intuition; only 1: intuition; only 1: intuition).	15.6137838364	13794
Coq.Structures.DecidableTypeEx.eq_refl	40	8.0	search with cache (only 1: intros EQ; only 1: now subst).	0.0553982257843	10
Coq.Structures.DecidableTypeEx.eq_sym	40	1.2.0.10	search with cache (only 1: induction y; only 1: red; only 1: intros (x1, x2); only 1: auto).	0.279278993607	411
Coq.Structures.DecidableTypeEx.eq_trans	40	6.2.0.1	search with cache (only 1: destruct z; only 1: red; only 1: intros (x1, x2) (y1, y2); only 1: eauto).	0.553698778152	330
Coq.Structures.DecidableTypeEx.eq_dec	40
Coq.Structures.DecidableTypeEx.eq_dec	40
Coq.Structures.Equalities.eq_equiv	40
Coq.Structures.Equalities.eqb_eq	40
Coq.Structures.Equalities.eq_dec	40
Coq.Structures.Equalities.eqb_compat	40
Coq.Structures.Equalities.eqb_spec	40
Coq.Structures.Equalities.eqb_neq	40
Coq.Structures.Equalities.eqb_refl	40	10.0	search with cache (only 1: apply eqb_eq; only 1: simpl_relation).	0.34442615509	272
Coq.Structures.Equalities.eqb_sym	40	1.0.1.6.1.0.1.6.1.0	search with cache (only 1: apply eq_true_iff_eq; only 1: intuition; only 1: apply eqb_eq; only 1: symmetry; only 1: apply eqb_eq; only 1: intuition; only 1: apply eqb_eq; only 1: symmetry; only 1: apply eqb_eq; only 1: intuition).	23.0503690243	18549
Coq.Structures.OrderedType.eq_dec	40
Coq.Structures.OrderedType.eq_equiv	40
Coq.Structures.OrderedType.lt_antirefl	40
Coq.Structures.OrderedType.lt_strorder	40
Coq.Structures.OrderedType.lt_eq	40
Coq.Structures.OrderedType.eq_lt	40
Coq.Structures.OrderedType.lt_compat	40
Coq.Structures.OrderedType.lt_total	40
Coq.Structures.OrderedType.le_lteq	40	1.1.23	search with cache (only 1: split; only 1: auto; only 1: auto).	6.1771800518	6495
Coq.Structures.OrderedType.le_eq	40
Coq.Structures.OrderedType.eq_le	40	2.2.2.0	search with cache (only 1: destruct (compare x z) as [Hlt| Heq| Hlt]; only 1: order; only 1: order; only 1: order).	0.157045841217	10
Coq.Structures.OrderedType.neq_eq	40	2	search with cache (only 1: order).	0.015487909317	3
Coq.Structures.OrderedType.eq_neq	40	0	search with cache (only 1: order).	0.0152430534363	1
Coq.Structures.OrderedType.le_lt_trans	40	1	search with cache (only 1: order).	0.154768943787	22
Coq.Structures.OrderedType.lt_le_trans	40	0	search with cache (only 1: order).	0.134114980698	1
Coq.Structures.OrderedType.le_neq	40	3	search with cache (only 1: order).	0.0516331195831	25
Coq.Structures.OrderedType.le_trans	40	0	search with cache (only 1: order).	0.014456987381	1
Coq.Structures.OrderedType.le_antisym	40	0	search with cache (only 1: order).	0.0141220092773	1
Coq.Structures.OrderedType.neq_sym	40	0	search with cache (only 1: order).	0.0135247707367	1
Coq.Structures.OrderedType.lt_le	40	0	search with cache (only 1: order).	0.013041973114	1
Coq.Structures.OrderedType.gt_not_eq	40	2	search with cache (only 1: order).	0.0157470703125	3
Coq.Structures.OrderedType.eq_not_lt	40	0	search with cache (only 1: order).	0.0137851238251	1
Coq.Structures.OrderedType.eq_not_gt	40	0	search with cache (only 1: order).	0.0137169361115	1
Coq.Structures.OrderedType.lt_not_gt	40	0	search with cache (only 1: order).	0.013011932373	1
Coq.Structures.OrderedType.elim_compare_eq	40	8.35.8.26.14	search with cache (only 1: intros; only 1: destruct (compare x y); only 1: order; only 1: eauto; only 1: order).	9.74210095406	34643
Coq.Structures.OrderedType.elim_compare_lt	40	0.0.0.0.0.0.0.1.0.2.0	search with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exists H'; only 1: auto; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order).	0.52596116066	551
Coq.Structures.OrderedType.elim_compare_gt	40	0.1.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).	0.420081853867	335
Coq.Structures.OrderedType.lt_dec	40	0.5.5.0.2.1	search with cache (only 1: intros; only 1: destruct (compare x y); only 1: auto; only 1: auto with ordered_type; only 1: right; only 1: order).	1.18224692345	1150
Coq.Structures.OrderedType.eqb_alt	40
Coq.Structures.OrderedType.In_eq	40
Coq.Structures.OrderedType.ListIn_In	40
Coq.Structures.OrderedType.Inf_lt	40	0.0.0.0.1	search with cache (only 1: destruct l; only 1: constructor; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: order).	0.0295889377594	6
Coq.Structures.OrderedType.Inf_eq	40	0.2	search with cache (only 1: intros; only 1: now rewrite H).	0.0413119792938	4
Coq.Structures.OrderedType.Sort_Inf_In	40	2.0.0.0.1.6	search with cache (only 1: eapply SortA_InfA_InA; only 1: auto with *; only 1: split; only 1: exact lt_antirefl; only 1: exact lt_trans; only 1: auto with *).	1.38341188431	955
Coq.Structures.OrderedType.ListIn_Inf	40	0.0.0.0.0.1.0.2	search with cache (only 1: simple induction l; only 1: simpl; only 1: intros; only 1: constructor; only 1: simpl; only 1: intros; only 1: constructor; only 1: auto).	0.101193904877	58
Coq.Structures.OrderedType.In_Inf	40	1.18	search with cache (only 1: apply InA_InfA; only 1: auto with *).	0.694700956345	822
Coq.Structures.OrderedType.Inf_alt	40
Coq.Structures.OrderedType.Sort_NoDup	40
Coq.Structures.OrderedType.eqke_eqk	40	2.14	search with cache (only 1: induction 1; only 1: auto).	0.314815044403	274
Coq.Structures.OrderedType.ltk_right_r	40	1.0	search with cache (only 1: intros; only 1: auto).	0.0148041248322	3
Coq.Structures.OrderedType.ltk_right_l	40	0	search with cache (only 1: auto).	0.0119180679321	1
Coq.Structures.OrderedType.eqk_refl	40	6.1	search with cache (only 1: unfold eqk, eqke; only 1: order).	0.0862028598785	14
Coq.Structures.OrderedType.eqke_refl	40	0	search with cache (only 1: auto with ordered_type).	0.0117621421814	1
Coq.Structures.OrderedType.eqk_sym	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0877668857574	2
Coq.Structures.OrderedType.eqke_sym	40	0.1	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0273809432983	3
Coq.Structures.OrderedType.eqk_trans	40	10.23	search with cache (only 1: compute; only 1: order).	0.602944850922	1350
Coq.Structures.OrderedType.eqke_trans	40
Coq.Structures.OrderedType.ltk_trans	40	1	search with cache (only 1: eauto with ordered_type).	0.0181210041046	2
Coq.Structures.OrderedType.ltk_not_eqk	40	1.0	search with cache (only 1: unfold eqk, eqke; only 1: auto with ordered_type).	0.0148530006409	3
Coq.Structures.OrderedType.ltk_not_eqke	40	0.0.2.1.0	search with cache (only 1: unfold eqk, ltk; only 1: unfold eqk, eqke; only 1: compute; only 1: intuition; only 1: order).	0.0779900550842	14
Coq.Structures.OrderedType.eqk_equiv	40	6.0.0.9	search with cache (only 1: split; only 1: auto with ordered_type; only 1: auto with ordered_type; only 1: eauto with ordered_type).	0.2157330513	351
Coq.Structures.OrderedType.eqke_equiv	40	0.0.0.0	search with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.0384700298309	4
Coq.Structures.OrderedType.ltk_strorder	40	0.10.16.0.18.1	search with cache (only 1: constructor; only 1: intro; only 1: unfold eqk, ltk; only 1: intro; only 1: order; only 1: eauto with ordered_type).	7.20471715927	17086
Coq.Structures.OrderedType.ltk_compat	40	9.1.7.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: unfold eqk, ltk; only 1: intros x x' Hx y y' Hy H; only 1: order).	10.5056509972	11437
Coq.Structures.OrderedType.ltk_compat'	40	0.0.1.0.0.3.0.0.0.0.0.0.1	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: intros (x, e) (x', e') Hxx' (y, f) (y', f') Hyy'; only 1: compute; only 1: compute in Hxx'; only 1: compute in Hyy'; only 1: intuition; only 1: apply eq_lt with x; only 1: auto with ordered_type; only 1: apply lt_eq with y; only 1: auto; only 1: auto).	11.0920000076	6838
Coq.Structures.OrderedType.eqk_not_ltk	40	0.0	search with cache (only 1: unfold eqk, ltk; only 1: auto with ordered_type).	0.0145668983459	2
Coq.Structures.OrderedType.ltk_eqk	40	1	search with cache (only 1: eauto with ordered_type).	0.014643907547	2
Coq.Structures.OrderedType.eqk_ltk	40	0	search with cache (only 1: eauto with ordered_type).	0.0142910480499	1
Coq.Structures.OrderedType.InA_eqke_eqk	40
Coq.Structures.OrderedType.In_alt	40
Coq.Structures.OrderedType.MapsTo_eq	40
Coq.Structures.OrderedType.In_eq	40
Coq.Structures.OrderedType.Inf_eq	40	4.8	search with cache (only 1: firstorder; only 1: now rewrite H).	0.175997972488	120
Coq.Structures.OrderedType.Inf_lt	40	7.0.2.1.8	search with cache (only 1: destruct l; only 1: constructor; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with *).	3.44091701508	1120
Coq.Structures.OrderedType.Sort_Inf_In	40
Coq.Structures.OrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrderedType.Sort_NoDupA	40	0.0.0.0.9.0.1.0.0.0.7.13	search with cache (only 1: simple induction l; only 1: intuition; only 1: intros x l' H H0; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: constructor; only 1: intro; only 1: apply (StrictOrder_Irreflexive x); only 1: eapply Sort_Inf_In; only 1: eauto; only 1: eauto; only 1: eauto; only 1: auto).	17.1297409534	19526
Coq.Structures.OrderedType.Sort_In_cons_1	40
Coq.Structures.OrderedType.Sort_In_cons_2	40
Coq.Structures.OrderedType.Sort_In_cons_3	40
Coq.Structures.OrderedType.In_inv	40
Coq.Structures.OrderedType.In_inv_2	40	0.11.0	search with cache (only 1: inversion_clear 1; only 1: firstorder; only 1: eauto with *).	0.244113206863	149
Coq.Structures.OrderedType.In_inv_3	40	1.0.9.9	search with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: eauto with *).	9.58819890022	2708
Coq.Structures.OrdersFacts.compare_eq_iff	40
Coq.Structures.OrdersFacts.compare_eq	40	1.0.1.0.1.0.0	search with cache (only 1: case compare_spec; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).	0.0302999019623	10
Coq.Structures.OrdersFacts.compare_lt_iff	40
Coq.Structures.OrdersFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.compare_nlt_iff	40
Coq.Structures.OrdersFacts.compare_ngt_iff	40
Coq.Structures.OrdersFacts.compare_compat	40
Coq.Structures.OrdersFacts.compare_refl	40	1.0	search with cache (only 1: autorewrite with order; only 1: easy).	0.0157589912415	3
Coq.Structures.OrdersFacts.compare_antisym	40
Coq.Structures.OrdersFacts.le_compat	40
Coq.Structures.OrdersFacts.le_preorder	40
Coq.Structures.OrdersFacts.le_order	40	0.1.1	search with cache (only 1: red; only 1: compute; only 1: iorder).	0.0240499973297	5
Coq.Structures.OrdersFacts.le_antisym	40	17.8.0	search with cache (only 1: compute; only 1: intro H; only 1: order).	6.48138999939	19534
Coq.Structures.OrdersFacts.le_not_gt_iff	40	16.15	search with cache (only 1: repeat red; only 1: iorder).	2.31794214249	3945
Coq.Structures.OrdersFacts.lt_not_ge_iff	40	0	search with cache (only 1: iorder).	0.016725063324	1
Coq.Structures.OrdersFacts.le_or_gt	40
Coq.Structures.OrdersFacts.lt_or_ge	40	0.0.1.0.0.0	search with cache (only 1: intros; only 1: rewrite le_lteq; only 1: destruct (compare_spec x y); only 1: intuition; only 1: auto; only 1: auto).	0.0334520339966	7
Coq.Structures.OrdersFacts.eq_is_le_ge	40	3.9	search with cache (only 1: intro H; only 1: iorder).	0.800290822983	663
Coq.Structures.OrdersFacts.compare_le_iff	40	1.0	search with cache (only 1: rewrite compare_gt_iff; only 1: iorder).	0.0206208229065	3
Coq.Structures.OrdersFacts.compare_ge_iff	40	0.0.0	search with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).	0.0225200653076	3
Coq.Structures.OrdersFacts.lt_dec	40
Coq.Structures.OrdersFacts.if_eq_dec	40
Coq.Structures.OrdersFacts.eqb_alt	40
Coq.Structures.OrdersFacts.eqb_compat	40
Coq.Structures.OrdersFacts.lt_not_eq	40	2.0	search with cache (only 1: intro H; only 1: order).	0.0153050422668	4
Coq.Structures.OrdersFacts.lt_eq	40	0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0222749710083	1
Coq.Structures.OrdersFacts.eq_lt	40	0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0197420120239	1
Coq.Structures.OrdersFacts.le_eq	40	1	search with cache (only 1: order).	1.01252794266	2
Coq.Structures.OrdersFacts.eq_le	40	1	search with cache (only 1: order).	1.01388382912	2
Coq.Structures.OrdersFacts.neq_eq	40	2	search with cache (only 1: eauto using OrderTac.eq_trans, OrderTac.eq_sym).	1.01211094856	3
Coq.Structures.OrdersFacts.eq_neq	40	0	search with cache (only 1: order).	0.0135791301727	1
Coq.Structures.OrdersFacts.le_lt_trans	40	2.0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	0.0219631195068	4
Coq.Structures.OrdersFacts.lt_le_trans	40	0	search with cache (only 1: order).	0.0125598907471	1
Coq.Structures.OrdersFacts.le_trans	40	1	search with cache (only 1: order).	1.01205015182	2
Coq.Structures.OrdersFacts.le_antisym	40	1.1.0.2	search with cache (only 1: destruct (OrderTac.TO.compare_spec x y); only 1: intuition; only 1: order; only 1: order).	0.0467648506165	17
Coq.Structures.OrdersFacts.le_neq	40	0	search with cache (only 1: order).	0.0128350257874	1
Coq.Structures.OrdersFacts.neq_sym	40	1	search with cache (only 1: order).	0.0123510360718	2
Coq.Structures.OrdersFacts.lt_le	40	0	search with cache (only 1: order).	0.0117869377136	1
Coq.Structures.OrdersFacts.gt_not_eq	40	1.0	search with cache (only 1: intro H; only 1: order).	0.0146570205688	3
Coq.Structures.OrdersFacts.eq_not_lt	40	0	search with cache (only 1: order).	0.0126411914825	1
Coq.Structures.OrdersFacts.eq_not_gt	40	0	search with cache (only 1: order).	0.0125179290771	1
Coq.Structures.OrdersFacts.lt_not_gt	40	0	search with cache (only 1: order).	0.0118389129639	1
Coq.Structures.OrdersFacts.eq_is_nlt_ngt	40	2.5.5.5	search with cache (only 1: intuition; only 1: order; only 1: order; only 1: order).	1.42685699463	1262
Coq.Structures.OrdersFacts.lt_strorder	40
Coq.Structures.OrdersFacts.lt_compat	40
Coq.Structures.OrdersFacts.le_lteq	40
Coq.Structures.OrdersFacts.compare_spec	40
Coq.Structures.OrdersFacts.compare_spec	40
Coq.Structures.OrdersFacts.compare_eq	40	0	search with cache (only 1: now apply compare_eq_iff).	0.0115962028503	1
Coq.Structures.OrdersFacts.compare_refl	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: now apply compare_eq_iff).	0.0345621109009	11
Coq.Structures.OrdersFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.compare_ge_iff	40
Coq.Structures.OrdersFacts.compare_ngt_iff	40	0	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0162761211395	1
Coq.Structures.OrdersFacts.compare_nlt_iff	40	3	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0221869945526	4
Coq.Structures.OrdersFacts.compare_nle_iff	40
Coq.Structures.OrdersFacts.compare_nge_iff	40
Coq.Structures.OrdersFacts.lt_irrefl	40
Coq.Structures.OrdersFacts.lt_eq_cases	40
Coq.Structures.OrdersFacts.leb_spec0	40
Coq.Structures.OrdersFacts.leb_spec	40
Coq.Structures.OrdersFacts.ltb_spec0	40
Coq.Structures.OrdersFacts.ltb_spec	40
Coq.Structures.OrdersFacts.leb_nle	40	0.0.5.1	search with cache (only 1: symmetry; only 1: case leb_spec0; only 1: intuition; only 1: tauto).	0.107434988022	30
Coq.Structures.OrdersFacts.leb_gt	40	2.7.5	search with cache (only 1: case leb_spec0; only 1: now rewrite <- compare_lt_iff, compare_nge_iff; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	1.71043992043	710
Coq.Structures.OrdersFacts.ltb_nlt	40	0.1.5	search with cache (only 1: case ltb_spec0; only 1: intuition; only 1: intuition).	0.0981078147888	32
Coq.Structures.OrdersFacts.ltb_ge	40	0.2.9	search with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).	0.657525062561	209
Coq.Structures.OrdersFacts.leb_refl	40	0.0.10.0	search with cache (only 1: apply leb_le; only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- compare_lt_iff, compare_refl).	0.380664825439	282
Coq.Structures.OrdersFacts.leb_antisym	40	3.1.5.0.8	search with cache (only 1: case ltb_spec0; only 1: now rewrite leb_nle, <- compare_lt_iff, compare_nge_iff; only 1: case leb_spec0; only 1: trivial; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	1.64003300667	1470
Coq.Structures.OrdersFacts.ltb_irrefl	40	0.12.24	search with cache (only 1: case ltb_spec0; only 1: now rewrite <- compare_lt_iff, compare_refl; only 1: now rewrite <- compare_lt_iff, compare_refl).	5.47237205505	7944
Coq.Structures.OrdersFacts.ltb_antisym	40	3.1.7.0.11	search with cache (only 1: case leb_spec0; only 1: now rewrite ltb_nlt, <- compare_le_iff, compare_ngt_iff; only 1: case ltb_spec0; only 1: trivial; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	5.27944993973	4082
Coq.Structures.OrdersFacts.eqb_compare	40
Coq.Structures.OrdersFacts.ltb_compare	40
Coq.Structures.OrdersFacts.leb_compare	40
Coq.Structures.OrdersLists.In_eq	40	7.7.1.0.5	search with cache (only 1: induction l; only 1: intros; only 1: invlist InA; only 1: destruct 1; only 1: auto).	3.09185123444	4188
Coq.Structures.OrdersLists.ListIn_In	40	0.2.2.3	search with cache (only 1: intuition; only 1: apply In_InA; only 1: intuition; only 1: intuition).	0.0809111595154	105
Coq.Structures.OrdersLists.Inf_lt	40	4.0.0.0.0	search with cache (only 1: destruct l; only 1: constructor; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: now rewrite H).	0.0215468406677	9
Coq.Structures.OrdersLists.Inf_eq	40	1.3	search with cache (only 1: intros; only 1: now rewrite H).	0.183662891388	41
Coq.Structures.OrdersLists.Sort_Inf_In	40
Coq.Structures.OrdersLists.ListIn_Inf	40	0.0.0.0.0.1.0.4	search with cache (only 1: simple induction l; only 1: simpl; only 1: intros; only 1: constructor; only 1: simpl; only 1: intros; only 1: constructor; only 1: auto).	0.102803945541	118
Coq.Structures.OrdersLists.In_Inf	40	12.1.3.5	search with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intuition).	0.966235160828	1478
Coq.Structures.OrdersLists.Inf_alt	40
Coq.Structures.OrdersLists.Sort_NoDup	40
Coq.Structures.OrdersLists.ltk_compat	40	8.13.14.52	search with cache (only 1: intros x x' Hx l l' Hl; only 1: setoid_rewrite Hl; only 1: setoid_rewrite Hx; only 1: intuition).	19.3555860519	22504
Coq.Structures.OrdersLists.ltk_compat'	40
Coq.Structures.OrdersLists.pair_compat	40	7	search with cache (only 1: firstorder).	1.14091491699	11
Coq.Structures.OrdersLists.ltk_not_eqk	40
Coq.Structures.OrdersLists.ltk_not_eqke	40	0.0.0	search with cache (only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: elim (StrictOrder_Irreflexive _ LT)).	0.0242559909821	3
Coq.Structures.OrdersLists.Inf_eq	40	6	search with cache (only 1: now intros <-).	0.0290539264679	14
Coq.Structures.OrdersLists.Inf_lt	40
Coq.Structures.OrdersLists.Sort_Inf_In	40	0.0.0.3.11	search with cache (only 1: eapply SortA_InfA_InA; only 1: auto with *; only 1: auto with *; only 1: unfold eqk, ltk; only 1: auto with *).	2.16935992241	1717
Coq.Structures.OrdersLists.Sort_Inf_NotIn	40
Coq.Structures.OrdersLists.Sort_NoDupA	40
Coq.Structures.OrdersLists.Sort_In_cons_1	40
Coq.Structures.OrdersLists.Sort_In_cons_2	40
Coq.Structures.OrdersLists.Sort_In_cons_3	40
Coq.Structures.EqualitiesFacts.eqke_eqk	40	0	search with cache (only 1: firstorder).	0.0140471458435	1
Coq.Structures.EqualitiesFacts.eqke_def	40	0	search with cache (only 1: firstorder).	0.0121879577637	1
Coq.Structures.EqualitiesFacts.eqke_def'	40	0	search with cache (only 1: reflexivity).	0.0119969844818	1
Coq.Structures.EqualitiesFacts.eqke_1	40	1	search with cache (only 1: firstorder).	0.014760017395	2
Coq.Structures.EqualitiesFacts.eqke_2	40	1	search with cache (only 1: now destruct 1).	0.0138058662415	2
Coq.Structures.EqualitiesFacts.eqk_def	40	1	search with cache (only 1: reflexivity).	0.0118849277496	2
Coq.Structures.EqualitiesFacts.eqk_def'	40	0	search with cache (only 1: reflexivity).	0.0116379261017	1
Coq.Structures.EqualitiesFacts.eqk_1	40	2	search with cache (only 1: firstorder).	0.013533115387	3
Coq.Structures.EqualitiesFacts.InA_eqke_eqk	40	2.0.0.0.3	search with cache (only 1: do 2 rewrite InA_alt; only 1: intros (y, H); only 1: exists y; only 1: intuition; only 1: firstorder).	0.0645108222961	17
Coq.Structures.EqualitiesFacts.InA_eqk_eqke	40	0.0.0	search with cache (only 1: induction 1; only 1: firstorder; only 1: firstorder).	0.0285089015961	3
Coq.Structures.EqualitiesFacts.InA_eqk	40
Coq.Structures.EqualitiesFacts.In_alt	40
Coq.Structures.EqualitiesFacts.In_alt'	40
Coq.Structures.EqualitiesFacts.In_alt2	40
Coq.Structures.EqualitiesFacts.In_nil	40	4.3.1	search with cache (only 1: unfold In, MapsTo; only 1: setoid_rewrite InA_alt; only 1: firstorder).	0.283890008926	88
Coq.Structures.EqualitiesFacts.In_cons	40
Coq.Structures.EqualitiesFacts.MapsTo_compat	40
Coq.Structures.EqualitiesFacts.In_compat	40
Coq.Structures.EqualitiesFacts.MapsTo_eq	40	36.0	search with cache (only 1: unfold MapsTo; only 1: now intros <-).	5.49580812454	6698
Coq.Structures.EqualitiesFacts.In_eq	40	0	search with cache (only 1: now intros <-).	0.0301480293274	1
Coq.Structures.EqualitiesFacts.In_inv	40	0.0	search with cache (only 1: rewrite !In_alt2, Exists_cons; only 1: intuition).	0.049880027771	2
Coq.Structures.EqualitiesFacts.In_inv_2	40	2.0.34.8	search with cache (only 1: firstorder; only 1: invlist InA; only 1: now compute; only 1: firstorder).	7.03385996819	5343
Coq.Structures.EqualitiesFacts.In_inv_3	40	3.3.16.4	search with cache (only 1: firstorder; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: firstorder; only 1: firstorder).	10.4401381016	9183
Coq.Structures.EqualitiesFacts.eq_dec	40
Coq.Structures.EqualitiesFacts.eq_dec	40
Coq.Structures.DecidableType.eqke_eqk	40	0.4	search with cache (only 1: induction 1; only 1: auto).	0.0146889686584	6
Coq.Structures.DecidableType.eqk_refl	40	9.0	search with cache (only 1: unfold eqk, eqke; only 1: auto).	0.0464560985565	65
Coq.Structures.DecidableType.eqke_refl	40	0	search with cache (only 1: auto).	0.0112030506134	1
Coq.Structures.DecidableType.eqk_sym	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0164110660553	2
Coq.Structures.DecidableType.eqke_sym	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0229201316833	2
Coq.Structures.DecidableType.eqk_trans	40	20.9	search with cache (only 1: compute; only 1: eauto).	1.0165579319	1710
Coq.Structures.DecidableType.eqke_trans	40	0.3.6.10.10	search with cache (only 1: compute; only 1: intuition; only 1: eauto; only 1: subst b; only 1: intuition).	15.8719060421	4800
Coq.Structures.DecidableType.eqk_equiv	40	2.1.1.8.3	search with cache (only 1: unfold eqk, eqke; only 1: constructor; only 1: intuition; only 1: intuition; only 1: eauto).	0.26748919487	312
Coq.Structures.DecidableType.eqke_equiv	40	0.0.0.0	search with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).	0.0363569259644	4
Coq.Structures.DecidableType.InA_eqke_eqk	40
Coq.Structures.DecidableType.InA_eqk	40
Coq.Structures.DecidableType.In_alt	40
Coq.Structures.DecidableType.MapsTo_eq	40
Coq.Structures.DecidableType.In_eq	40
Coq.Structures.DecidableType.In_inv	40
Coq.Structures.DecidableType.In_inv_2	40	1.3.2	search with cache (only 1: inversion 1; only 1: intuition; only 1: intuition).	0.043445110321	9
Coq.Structures.DecidableType.In_inv_3	40	0.0.5.0.0.4	search with cache (only 1: inversion_clear 1; only 1: unfold eqke; only 1: induction 1; only 1: inversion_clear H0; only 1: intuition; only 1: auto using eqk_equiv).	3.39269685745	486
Coq.Structures.OrdersAlt.lt_strorder	40
Coq.Structures.OrdersAlt.lt_compat	40
Coq.Structures.OrdersAlt.compare_spec	40
Coq.Structures.OrdersAlt.lt_not_eq	40
Coq.Structures.OrdersAlt.lt_trans	40	4.4.14.1	search with cache (only 1: intros x y L E; only 1: transitivity y; only 1: intuition; only 1: auto).	0.445741891861	747
Coq.Structures.OrdersAlt.compare	40
Coq.Structures.OrdersAlt.eq_equiv	40
Coq.Structures.OrdersAlt.lt_strorder	40	0.0.0.0.0.0.0.1.0.0.0.50.0.8	search with cache (only 1: split; only 1: red; only 1: compute; only 1: intros x; only 1: pose proof (compare_sym x x) as H; only 1: destruct (x ?= x); only 1: simpl in *; only 1: discriminate; only 1: simpl in *; only 1: discriminate; only 1: simpl in *; only 1: discriminate; only 1: red; only 1: apply compare_trans).	5.49678587914	23571
Coq.Structures.OrdersAlt.lt_eq	40
Coq.Structures.OrdersAlt.eq_lt	40
Coq.Structures.OrdersAlt.lt_compat	40
Coq.Structures.OrdersAlt.compare_spec	40
Coq.Structures.OrdersAlt.eq_dec	40
Coq.Structures.OrdersAlt.compare_sym	40
Coq.Structures.OrdersAlt.compare_Eq	40
Coq.Structures.OrdersAlt.compare_Lt	40
Coq.Structures.OrdersAlt.compare_Gt	40	0.0.0.2.0.0.0.0.6.0.0.0.0.0	search with cache (only 1: unfold compare; only 1: intros x y; only 1: destruct (compare_spec x y); only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition).	11.9388439655	9385
Coq.Structures.OrdersAlt.compare_trans	40
Coq.Structures.GenericMinMax.ge_not_lt	40
Coq.Structures.GenericMinMax.max_l	40
Coq.Structures.GenericMinMax.max_r	40
Coq.Structures.GenericMinMax.min_l	40
Coq.Structures.GenericMinMax.min_r	40	0.0.0.1.0.0.0.0	search with cache (only 1: unfold min, gmin; only 1: case compare_spec; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt x y); only 1: auto; only 1: auto; only 1: auto with relations).	0.0223259925842	9
Coq.Structures.GenericMinMax.max_spec	40
Coq.Structures.GenericMinMax.max_spec_le	40	1.0.0.0.0.0.0.0.0.0.3.1.0	search with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).	7.72662997246	3588
Coq.Structures.GenericMinMax.Proper_instance_0	40
Coq.Structures.GenericMinMax.max_compat	40
Coq.Structures.GenericMinMax.max_unicity	40
Coq.Structures.GenericMinMax.max_unicity_ext	40
Coq.Structures.GenericMinMax.max_mono	40
Coq.Structures.GenericMinMax.max_id	40	2.1.1.4	search with cache (only 1: apply max_r; only 1: rewrite le_lteq; only 1: right; only 1: reflexivity).	0.0425939559937	54
Coq.Structures.GenericMinMax.max_assoc	40
Coq.Structures.GenericMinMax.max_comm	40	1.4.1.3.12	search with cache (only 1: apply max_unicity; only 1: pose proof (max_spec n m) as Hm; only 1: destruct (lt_total n m); only 1: intuition order; only 1: intuition order).	10.2495651245	6300
Coq.Structures.GenericMinMax.le_max_l	40	4.1.3.6	search with cache (only 1: pose proof (max_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).	0.606687068939	495
Coq.Structures.GenericMinMax.le_max_r	40	0	search with cache (only 1: solve_max).	0.0182268619537	1
Coq.Structures.GenericMinMax.max_l_iff	40	6	search with cache (only 1: solve_max).	0.0837850570679	34
Coq.Structures.GenericMinMax.max_r_iff	40	0	search with cache (only 1: solve_max).	0.0298891067505	1
Coq.Structures.GenericMinMax.max_le	40
Coq.Structures.GenericMinMax.max_le_iff	40	1.1.1.0.2.1.1.1.0.1.0	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: right; only 1: order; only 1: order; only 1: order; only 1: intuition; only 1: left; only 1: order; only 1: order; only 1: order).	13.0541708469	8546
Coq.Structures.GenericMinMax.max_lt_iff	40	1.1.0.0.1.0.0.3.0	search with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).	1.44600009918	894
Coq.Structures.GenericMinMax.max_lub_l	40	0	search with cache (only 1: solve_max).	0.0200109481812	1
Coq.Structures.GenericMinMax.max_lub_r	40	0	search with cache (only 1: solve_max).	0.0199589729309	1
Coq.Structures.GenericMinMax.max_lub	40	1	search with cache (only 1: solve_max).	0.0202300548553	2
Coq.Structures.GenericMinMax.max_lub_iff	40	1.1.0	search with cache (only 1: split; only 1: solve_max; only 1: solve_max).	0.0415439605713	5
Coq.Structures.GenericMinMax.max_lub_lt	40	0.0.0.0.0	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order)).	0.0256471633911	5
Coq.Structures.GenericMinMax.max_lub_lt_iff	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.0491650104523	9
Coq.Structures.GenericMinMax.max_le_compat_l	40
Coq.Structures.GenericMinMax.max_le_compat_r	40	0.1.0	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0311381816864	4
Coq.Structures.GenericMinMax.max_le_compat	40	0.1.0	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0354428291321	4
Coq.Structures.GenericMinMax.min_spec	40
Coq.Structures.GenericMinMax.min_spec_le	40	1.0.0.0.0.0.0.0.0.0.3.0.0	search with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply min_l; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply min_r).	18.7535741329	7868
Coq.Structures.GenericMinMax.min_compat	40
Coq.Structures.GenericMinMax.min_unicity	40
Coq.Structures.GenericMinMax.min_unicity_ext	40
Coq.Structures.GenericMinMax.min_mono	40
Coq.Structures.GenericMinMax.min_id	40	0.0	search with cache (only 1: apply min_l; only 1: order).	0.0104129314423	2
Coq.Structures.GenericMinMax.min_assoc	40
Coq.Structures.GenericMinMax.min_comm	40
Coq.Structures.GenericMinMax.le_min_r	40	4.1.2.6	search with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).	0.496871948242	322
Coq.Structures.GenericMinMax.le_min_l	40	0	search with cache (only 1: solve_min).	0.0345962047577	1
Coq.Structures.GenericMinMax.min_l_iff	40	8	search with cache (only 1: solve_min).	0.0387501716614	14
Coq.Structures.GenericMinMax.min_r_iff	40	0	search with cache (only 1: solve_min).	0.0219662189484	1
Coq.Structures.GenericMinMax.min_le	40	1.1.3.6.5	search with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order || (right; order) || (left; order); only 1: right; only 1: order).	14.6110031605	9892
Coq.Structures.GenericMinMax.min_le_iff	40	1.1.1.0.2.1.1.1.0.1.0	search with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: left; only 1: order; only 1: order; only 1: order; only 1: intuition; only 1: right; only 1: order; only 1: order; only 1: order).	22.4340758324	17055
Coq.Structures.GenericMinMax.min_lt_iff	40	0.0.0.0.1.0.0.5.1	search with cache (only 1: intuition; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: intuition; only 1: order || (right; order) || (left; order); only 1: solve_min; only 1: solve_min).	7.55573987961	3421
Coq.Structures.GenericMinMax.min_glb_l	40	0	search with cache (only 1: solve_min).	0.0191328525543	1
Coq.Structures.GenericMinMax.min_glb_r	40	0	search with cache (only 1: solve_min).	0.0190811157227	1
Coq.Structures.GenericMinMax.min_glb	40	0	search with cache (only 1: solve_min).	0.0196011066437	1
Coq.Structures.GenericMinMax.min_glb_iff	40	0.0.0	search with cache (only 1: split; only 1: solve_min; only 1: solve_min).	0.056960105896	3
Coq.Structures.GenericMinMax.min_glb_lt	40	0.0.0.0.0	search with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order)).	0.0264780521393	5
Coq.Structures.GenericMinMax.min_glb_lt_iff	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.049122095108	9
Coq.Structures.GenericMinMax.min_le_compat_l	40
Coq.Structures.GenericMinMax.min_le_compat_r	40	0.1.0	search with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.0300691127777	4
Coq.Structures.GenericMinMax.min_le_compat	40	0.3.0	search with cache (only 1: intros Hnm Hpq; only 1: apply min_glb_iff; only 1: solve_min).	0.0425961017609	17
Coq.Structures.GenericMinMax.min_max_absorption	40	0.6	search with cache (only 1: apply max_l; only 1: solve_min).	0.0303931236267	8
Coq.Structures.GenericMinMax.max_min_absorption	40	0.5	search with cache (only 1: apply min_l; only 1: solve_max).	0.103497028351	38
Coq.Structures.GenericMinMax.max_min_distr	40
Coq.Structures.GenericMinMax.min_max_distr	40
Coq.Structures.GenericMinMax.max_min_modular	40
Coq.Structures.GenericMinMax.min_max_modular	40
Coq.Structures.GenericMinMax.max_min_disassoc	40
Coq.Structures.GenericMinMax.max_min_antimono	40	0.2.0.1.0.0.0.2.1.0.0.0	search with cache (only 1: intros Eqf Lef x y; only 1: destruct (min_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: auto; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: auto; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).	4.20375394821	2968
Coq.Structures.GenericMinMax.min_max_antimono	40
Coq.Structures.GenericMinMax.max_case_strong	40
Coq.Structures.GenericMinMax.max_case	40
Coq.Structures.GenericMinMax.max_dec	40
Coq.Structures.GenericMinMax.min_case_strong	40
Coq.Structures.GenericMinMax.min_case	40
Coq.Structures.GenericMinMax.min_dec	40
Coq.Structures.GenericMinMax.max_monotone	40	0.14	search with cache (only 1: apply max_mono; only 1: eauto with *).	0.21024107933	168
Coq.Structures.GenericMinMax.min_monotone	40	0.15	search with cache (only 1: apply min_mono; only 1: eauto with *).	0.281991004944	316
Coq.Structures.GenericMinMax.min_max_antimonotone	40
Coq.Structures.GenericMinMax.max_min_antimonotone	40
Coq.Structures.GenericMinMax.max_case_strong	40	3.0.1.6.1	search with cache (only 1: intros Compat Hl Hr; only 1: apply max_case_strong; only 1: intros; only 1: subst; only 1: auto with relations).	0.356176137924	349
Coq.Structures.GenericMinMax.max_case	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: auto; only 1: auto).	0.014447927475	4
Coq.Structures.GenericMinMax.max_dec	40	0.0.0.2	search with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).	0.0165610313416	6
Coq.Structures.GenericMinMax.min_case_strong	40	0.0.0.7.0	search with cache (only 1: intros; only 1: apply min_case_strong; only 1: congruence; only 1: auto; only 1: auto).	0.164601802826	148
Coq.Structures.GenericMinMax.min_case	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: auto; only 1: auto).	0.0145599842072	4
Coq.Structures.GenericMinMax.min_dec	40	0.0.0.1	search with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).	0.0163669586182	5
Coq.Structures.GenericMinMax.compare_spec	40
Coq.Structures.OrderedTypeAlt.eq_refl	40
Coq.Structures.OrderedTypeAlt.eq_sym	40
Coq.Structures.OrderedTypeAlt.lt_not_eq	40	1.3.2.1	search with cache (only 1: intros; only 1: unfold eq; only 1: rewrite H; only 1: discriminate).	0.280168056488	99
Coq.Structures.OrderedTypeAlt.compare	40
Coq.Structures.OrderedTypeAlt.eq_dec	40
Coq.Structures.OrderedTypeAlt.compare_sym	40	1.1.0.0.1.1.5.2.14	search with cache (only 1: compute; only 1: intros; only 1: elim_comp; only 1: elim_comp; only 1: auto with ordered_type; only 1: elim_comp; only 1: auto; only 1: elim_comp; only 1: auto with ordered_type).	8.20470905304	11966
Coq.Structures.OrderedTypeAlt.compare_trans	40
Coq.ZArith.Znat.nat_N_Z	40	0.0.1.0.1	search with cache (only 1: induction n; only 1: simpl; only 1: Z.order; only 1: simpl; only 1: trivial).	0.0229649543762	7
Coq.ZArith.Znat.N_nat_Z	40	0.0.0.0.0.0.2.2.1.10	search with cache (only 1: induction n; only 1: trivial; only 1: simpl N.to_nat; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	0.706436872482	915
Coq.ZArith.Znat.positive_nat_Z	40	0.0.0.0.0	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.0244479179382	5
Coq.ZArith.Znat.positive_N_Z	40	0	search with cache (only 1: trivial).	0.0124409198761	1
Coq.ZArith.Znat.positive_N_nat	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0144760608673	2
Coq.ZArith.Znat.positive_nat_N	40	0.0.0.0.0.0.1	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	0.0275208950043	8
Coq.ZArith.Znat.Z_N_nat	40	0.0.0.11	search with cache (only 1: induction n; only 1: trivial; only 1: reflexivity; only 1: reflexivity).	0.056911945343	79
Coq.ZArith.Znat.Z_nat_N	40	0.6.0.17	search with cache (only 1: destruct n; only 1: trivial; only 1: Nat2N.nat2N; only 1: trivial).	0.74134516716	567
Coq.ZArith.Znat.Zabs_N_nat	40	0	search with cache (only 1: now destruct n).	0.0141589641571	1
Coq.ZArith.Znat.Zabs_nat_N	40	1.0.1.0.0.0.1	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply positive_nat_N; only 1: simpl; only 1: apply positive_nat_N).	0.0284659862518	10
Coq.ZArith.Znat.id	40	0.0.1.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: trivial).	0.0187277793884	5
Coq.ZArith.Znat.inj	40
Coq.ZArith.Znat.inj_iff	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: split; only 1: destruct n, m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: destruct n, m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	6.36373901367	9840
Coq.ZArith.Znat.is_nonneg	40	1	search with cache (only 1: now destruct n).	0.0354959964752	15
Coq.ZArith.Znat.inj_0	40	0	search with cache (only 1: trivial).	0.0117709636688	1
Coq.ZArith.Znat.inj_pos	40	0	search with cache (only 1: reflexivity).	0.0118851661682	1
Coq.ZArith.Znat.inj_compare	40	0.0.0.0.0.0.0.0.3	search with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.186829090118	104
Coq.ZArith.Znat.inj_le	40	0	search with cache (only 1: now destruct n, m).	0.0158321857452	1
Coq.ZArith.Znat.inj_lt	40	2	search with cache (only 1: now destruct n, m).	0.0165457725525	3
Coq.ZArith.Znat.inj_ge	40	3	search with cache (only 1: now destruct n, m).	0.0166258811951	4
Coq.ZArith.Znat.inj_gt	40	4	search with cache (only 1: now destruct n, m).	0.0167100429535	5
Coq.ZArith.Znat.inj_abs_N	40
Coq.ZArith.Znat.inj_add	40	0	search with cache (only 1: now destruct n, m).	0.0155410766602	1
Coq.ZArith.Znat.inj_mul	40	0	search with cache (only 1: now destruct n, m).	0.0155248641968	1
Coq.ZArith.Znat.inj_sub_max	40
Coq.ZArith.Znat.inj_sub	40
Coq.ZArith.Znat.inj_succ	40	0.1.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.0220828056335	5
Coq.ZArith.Znat.inj_pred_max	40	0.0.1.1.27.0.0.4	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial).	2.33508300781	7086
Coq.ZArith.Znat.inj_pred	40	0.0.0.0.0.0.3.0.0.4	search with cache (only 1: destruct n; only 1: unfold Z.pred; only 1: now rewrite N.pred_sub, inj_sub_max; only 1: destruct p; only 1: unfold Z.pred; only 1: now rewrite N.pred_sub, inj_sub_max; only 1: unfold Z.pred; only 1: now rewrite N.pred_sub, inj_sub_max; only 1: unfold Z.pred; only 1: now rewrite N.pred_sub, inj_sub_max).	1.48520302773	994
Coq.ZArith.Znat.inj_min	40
Coq.ZArith.Znat.inj_max	40
Coq.ZArith.Znat.inj_div	40
Coq.ZArith.Znat.inj_mod	40
Coq.ZArith.Znat.inj_quot	40
Coq.ZArith.Znat.inj_rem	40
Coq.ZArith.Znat.inj_div2	40	3.3.3.38.19.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial).	33.7858958244	157188
Coq.ZArith.Znat.inj_quot2	40	1.0.0	search with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: now destruct p).	0.0188250541687	4
Coq.ZArith.Znat.inj_pow	40
Coq.ZArith.Znat.inj_testbit	40
Coq.ZArith.Znat.id	40	2	search with cache (only 1: now destruct n).	0.0152719020844	3
Coq.ZArith.Znat.inj	40
Coq.ZArith.Znat.inj_iff	40	2.0.0.1.0.3	search with cache (only 1: split; only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now f_equal; only 1: intros; only 1: now f_equal).	0.771464109421	285
Coq.ZArith.Znat.inj_0	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0130519866943	2
Coq.ZArith.Znat.inj_pos	40	0.0	search with cache (only 1: simpl; only 1: f_equal).	0.0138339996338	2
Coq.ZArith.Znat.inj_neg	40	0	search with cache (only 1: reflexivity).	0.0114281177521	1
Coq.ZArith.Znat.inj_add	40	13.3.1	search with cache (only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now destruct n, m).	0.99858212471	506
Coq.ZArith.Znat.inj_mul	40	1.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2).	0.676671981812	211
Coq.ZArith.Znat.inj_succ	40	1.0.3.1.9	search with cache (only 1: destruct n; only 1: now destruct 1 || trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: now destruct 1 || trivial).	0.73855805397	457
Coq.ZArith.Znat.inj_sub	40
Coq.ZArith.Znat.inj_pred	40	0.0.0.0.0.0.0.6.0.5	search with cache (only 1: destruct n; only 1: Nat2N.nat2N; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: Nat2N.nat2N; only 1: simpl; only 1: trivial).	1.88532996178	1182
Coq.ZArith.Znat.inj_compare	40	1.3.1	search with cache (only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now destruct n, m).	0.0411739349365	8
Coq.ZArith.Znat.inj_le	40	13.1.6.0	search with cache (only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: unfold Z.le; only 1: now destruct n, m).	22.5497159958	17438
Coq.ZArith.Znat.inj_lt	40	9.1.7.1	search with cache (only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: unfold Z.lt; only 1: now destruct n, m).	4.97631311417	3477
Coq.ZArith.Znat.inj_min	40
Coq.ZArith.Znat.inj_max	40
Coq.ZArith.Znat.inj_div	40
Coq.ZArith.Znat.inj_mod	40
Coq.ZArith.Znat.inj_quot	40
Coq.ZArith.Znat.inj_rem	40
Coq.ZArith.Znat.inj_div2	40	0.0.3.0.8	search with cache (only 1: destruct n; only 1: Nat2N.nat2N; only 1: now destruct p; only 1: simpl; only 1: trivial).	0.469120025635	158
Coq.ZArith.Znat.inj_quot2	40	1.1.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	0.0237729549408	6
Coq.ZArith.Znat.inj_pow	40
Coq.ZArith.Znat.inj_testbit	40
Coq.ZArith.Znat.abs_N_spec	40	0.0.0.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal).	0.0256948471069	7
Coq.ZArith.Znat.abs_N_nonneg	40	0	search with cache (only 1: now destruct n).	0.0151660442352	1
Coq.ZArith.Znat.id_abs	40	1	search with cache (only 1: now destruct n).	0.0134840011597	2
Coq.ZArith.Znat.id	40	0	search with cache (only 1: now destruct n).	0.0129890441895	1
Coq.ZArith.Znat.inj_0	40	0	search with cache (only 1: trivial).	0.0115919113159	1
Coq.ZArith.Znat.inj_pos	40	0.0	search with cache (only 1: simpl; only 1: f_equal).	0.014543056488	2
Coq.ZArith.Znat.inj_neg	40	0	search with cache (only 1: reflexivity).	0.0117809772491	1
Coq.ZArith.Znat.inj_opp	40	2	search with cache (only 1: now destruct n).	0.0136489868164	3
Coq.ZArith.Znat.inj_succ	40	1.0.4.0.4	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: now destruct 1).	1.02414298058	572
Coq.ZArith.Znat.inj_add	40	0.1.0.1.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).	0.953948020935	410
Coq.ZArith.Znat.inj_mul	40	0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: simpl; only 1: congruence).	0.455840110779	230
Coq.ZArith.Znat.inj_sub	40
Coq.ZArith.Znat.inj_pred	40	2.10.4.3.3.1	search with cache (only 1: intros; only 1: destruct n; only 1: Nat2N.nat2N; only 1: now destruct Hn || now destruct Hm || clear; only 1: now destruct p; only 1: easy).	33.284165144	47518
Coq.ZArith.Znat.inj_compare	40	5.1	search with cache (only 1: intros Hn Hm; only 1: now destruct n, m).	0.0331008434296	11
Coq.ZArith.Znat.inj_le	40	2.0.0	search with cache (only 1: unfold Z.le, N.le; only 1: intros; only 1: now rewrite Z2N.inj_compare).	0.0251641273499	11
Coq.ZArith.Znat.inj_lt	40	0.2.0	search with cache (only 1: unfold Z.lt, N.lt; only 1: intros; only 1: now rewrite inj_compare).	0.0348989963531	5
Coq.ZArith.Znat.inj_min	40
Coq.ZArith.Znat.inj_max	40
Coq.ZArith.Znat.inj_quot	40
Coq.ZArith.Znat.inj_rem	40
Coq.ZArith.Znat.inj_pow	40
Coq.ZArith.Znat.inj_succ_abs	40	0.2.0.2.2.9	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: simpl; only 1: now rewrite Pos.add_1_r).	1.84859395027	1527
Coq.ZArith.Znat.inj_add_abs	40	3	search with cache (only 1: now destruct n, m).	0.177690982819	70
Coq.ZArith.Znat.inj_mul_abs	40	0	search with cache (only 1: now destruct n, m).	0.0196599960327	1
Coq.ZArith.Znat.inj_0	40	0	search with cache (only 1: trivial).	0.0115969181061	1
Coq.ZArith.Znat.inj_succ	40	0.1.0.0.0.3	search with cache (only 1: destruct n; only 1: reflexivity; only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.0561258792877	27
Coq.ZArith.Znat.is_nonneg	40	0	search with cache (only 1: now destruct n).	0.0198891162872	1
Coq.ZArith.Znat.id	40	1.0.1.2	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.0230059623718	8
Coq.ZArith.Znat.inj	40	0.15.2	search with cache (only 1: intros; only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial; only 1: now f_equal).	1.14987015724	1739
Coq.ZArith.Znat.inj_iff	40	0.1.0.1.2	search with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H).	0.0271739959717	9
Coq.ZArith.Znat.inj_compare	40
Coq.ZArith.Znat.inj_le	40
Coq.ZArith.Znat.inj_lt	40
Coq.ZArith.Znat.inj_ge	40
Coq.ZArith.Znat.inj_gt	40
Coq.ZArith.Znat.inj_abs_nat	40
Coq.ZArith.Znat.inj_add	40
Coq.ZArith.Znat.inj_mul	40
Coq.ZArith.Znat.inj_sub_max	40
Coq.ZArith.Znat.inj_sub	40
Coq.ZArith.Znat.inj_pred_max	40
Coq.ZArith.Znat.inj_pred	40
Coq.ZArith.Znat.inj_min	40
Coq.ZArith.Znat.inj_max	40
Coq.ZArith.Znat.id	40	0.1.0.0.0.1.0.3.7.0.0	search with cache (only 1: destruct n; only 1: now destruct 1 || trivial; only 1: intros; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: now destruct 1 || trivial).	5.25786209106	8355
Coq.ZArith.Znat.inj	40	0.3.1	search with cache (only 1: intros; only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial; only 1: now f_equal).	0.0379180908203	7
Coq.ZArith.Znat.inj_iff	40	2.0.0.1.0.2	search with cache (only 1: split; only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now f_equal; only 1: intros; only 1: now f_equal).	0.850503921509	188
Coq.ZArith.Znat.inj_0	40	0.4.2	search with cache (only 1: symmetry; only 1: simpl; only 1: trivial).	0.0262351036072	14
Coq.ZArith.Znat.inj_pos	40	0	search with cache (only 1: now destruct n).	0.0144820213318	1
Coq.ZArith.Znat.inj_neg	40	0	search with cache (only 1: reflexivity).	0.0120041370392	1
Coq.ZArith.Znat.inj_add	40	0.1.0.1.1.2.1.0.0.0.0.3	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros Hn Hm; only 1: now destruct Hn || now destruct Hm || clear; only 1: apply Pos2Nat.inj_add; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).	12.8849627972	12365
Coq.ZArith.Znat.inj_mul	40	1.0.0.0.0.2.1.0.0.0.0.2	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros Hn Hm; only 1: now destruct Hn || now destruct Hm || clear; only 1: apply Pos2Nat.inj_mul; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2).	6.32981610298	6032
Coq.ZArith.Znat.inj_succ	40
Coq.ZArith.Znat.inj_sub	40
Coq.ZArith.Znat.inj_pred	40
Coq.ZArith.Znat.inj_compare	40
Coq.ZArith.Znat.inj_le	40
Coq.ZArith.Znat.inj_lt	40
Coq.ZArith.Znat.inj_min	40
Coq.ZArith.Znat.inj_max	40
Coq.ZArith.Znat.abs_nat_spec	40	0	search with cache (only 1: now destruct n).	0.0135679244995	1
Coq.ZArith.Znat.abs_nat_nonneg	40	0	search with cache (only 1: now destruct n).	0.0151679515839	1
Coq.ZArith.Znat.id_abs	40	1.0.0.0.1.0.1.0.0.0.1.0.0.0.4	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	3.35732102394	5375
Coq.ZArith.Znat.id	40	4.0.0.3	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.0536329746246	45
Coq.ZArith.Znat.inj_0	40	0	search with cache (only 1: trivial).	0.0111680030823	1
Coq.ZArith.Znat.inj_pos	40	0	search with cache (only 1: trivial).	0.0115151405334	1
Coq.ZArith.Znat.inj_neg	40	0	search with cache (only 1: reflexivity).	0.0113878250122	1
Coq.ZArith.Znat.inj_succ	40
Coq.ZArith.Znat.inj_add	40	1.1.0.1.1.2.1.0.0.0.0.4	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros Hn Hm; only 1: now destruct Hn || now destruct Hm || clear; only 1: apply Pos2Nat.inj_add; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: now destruct 1 || now destruct 2).	11.7014119625	13009
Coq.ZArith.Znat.inj_mul	40	0.0.0.1.4.0.1.0.4.2.2.3.5	search with cache (only 1: destruct n, m; only 1: trivial; only 1: reflexivity; only 1: reflexivity; only 1: trivial; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul).	5.20154905319	9134
Coq.ZArith.Znat.inj_sub	40
Coq.ZArith.Znat.inj_pred	40
Coq.ZArith.Znat.inj_compare	40
Coq.ZArith.Znat.inj_le	40	0.2.0	search with cache (only 1: unfold Z.le; only 1: intros; only 1: now rewrite nat_compare_le, Z2Nat.inj_compare).	0.0399808883667	5
Coq.ZArith.Znat.inj_lt	40	0.3.0	search with cache (only 1: unfold Z.lt; only 1: intros; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).	0.039806842804	6
Coq.ZArith.Znat.inj_min	40
Coq.ZArith.Znat.inj_max	40
Coq.ZArith.Znat.inj_succ_abs	40	0.0.0.3	search with cache (only 1: destruct n; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ).	0.0453550815582	7
Coq.ZArith.Znat.inj_add_abs	40	1.0.1.0.1.1.0.1.1.1.1.1.3	search with cache (only 1: destruct n, m; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: simpl; only 1: apply Pos2Nat.inj_add).	14.9348859787	11105
Coq.ZArith.Znat.inj_mul_abs	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul).	3.36615514755	3899
Coq.ZArith.Znat.inj_neq	40
Coq.ZArith.Znat.inj_minus2	40
Coq.ZArith.Wf_Z.Z_of_nat_complete	40
Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40	0.1.0	search with cache (only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	0.0105710029602	4
Coq.ZArith.Wf_Z.Z_of_nat_prop	40
Coq.ZArith.Wf_Z.Z_of_nat_set	40
Coq.ZArith.Wf_Z.natlike_ind	40
Coq.ZArith.Wf_Z.natlike_rec	40
Coq.ZArith.Wf_Z.R_wf	40
Coq.ZArith.Wf_Z.natlike_rec2	40
Coq.ZArith.Wf_Z.natlike_rec3	40	0.1.0.0.0.2.4.5.0.0.0.1.0.1.0.0.0	search with cache (only 1: intros P Ho Hrec; only 1: induction z as [z IH] using (well_founded_induction_type R_wf); only 1: destruct z; only 1: intros Hz; only 1: apply Ho; only 1: intros Hz; only 1: set (y := Z.pred (Z.pos p)); only 1: assert (LE : 0 <= y) by (unfold y; now apply Z.lt_le_pred); only 1: assert (EQ : Z.pos p = Z.succ y) by (unfold y; now rewrite Z.succ_pred); only 1: apply Hrec, IH; only 1: split; only 1: split; only 1: trivial; only 1: apply Z.lt_pred_l; only 1: trivial; only 1: intros Hz; only 1: now destruct Hz).	19.8894610405	40289
Coq.ZArith.Wf_Z.Zlt_0_rec	40
Coq.ZArith.Wf_Z.Zlt_0_ind	40	0.1.1.0.1.0.0	search with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial).	0.0812809467316	61
Coq.ZArith.Wf_Z.Z_lt_rec	40	0.1.1.1.0.0.0.1.0.0.0.0.1.0.0.1	search with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: destruct x; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: assert (0 < 0) by now apply Z.le_lt_trans with y; only 1: discriminate; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: intros Hx; only 1: now destruct Hx).	5.41797709465	6860
Coq.ZArith.Wf_Z.Z_lt_induction	40	0.0.0	search with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: auto).	0.00874996185303	3
Coq.ZArith.Wf_Z.Zlt_lower_bound_rec	40
Coq.ZArith.Wf_Z.Zlt_lower_bound_ind	40	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: intros P z Hrec x Hx; only 1: rewrite <- (Z.sub_simpl_r x z); only 1: apply Z.le_0_sub in Hx; only 1: pattern (x - z); only 1: apply Zlt_0_rec; only 1: clear x Hx; only 1: intros x IH Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: rewrite <- (Z.sub_simpl_r y z); only 1: apply IH; only 1: split; only 1: now rewrite Z.le_0_sub; only 1: now apply Z.lt_sub_lt_add_r; only 1: now rewrite <- (Z.add_le_mono_r 0 x z); only 1: trivial).	12.3366658688	12420
Coq.ZArith.Zpow_facts.Zpower_pos_1_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_pos	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone	40
Coq.ZArith.Zpow_facts.Zpower_lt_monotone	40
Coq.ZArith.Zpow_facts.Zpower_gt_1	40
Coq.ZArith.Zpow_facts.Zmult_power	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	40
Coq.ZArith.Zpow_facts.Zpower2_lt_lin	40
Coq.ZArith.Zpow_facts.Zpower2_le_lin	40	1.28.0	search with cache (only 1: intros; only 1: apply Z.lt_le_incl; only 1: now apply Z.pow_gt_lin_r).	0.764591932297	1989
Coq.ZArith.Zpow_facts.Zpower2_Psize	40
Coq.ZArith.Zpow_facts.Zpower_mod	40
Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	40
Coq.ZArith.Zpow_facts.Zpow_mod_correct	40
Coq.ZArith.Zpow_facts.Zpower_divide	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower	40
Coq.ZArith.Zpow_facts.prime_power_prime	40
Coq.ZArith.Zpow_facts.Zdivide_power_2	40
Coq.ZArith.Zpow_def.Zpower_theory	40
Coq.ZArith.Zcompare.Zcompare_Gt_trans	40
Coq.ZArith.Zcompare.Zcompare_opp	40	1.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite <- Pos.compare_antisym; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite <- Pos.compare_antisym).	15.4319489002	19794
Coq.ZArith.Zcompare.Zcompare_Gt_spec	40
Coq.ZArith.Zcompare.Zcompare_plus_compat	40
Coq.ZArith.Zcompare.Zplus_compare_compat	40
Coq.ZArith.Zcompare.Zcompare_succ_Gt	40
Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40
Coq.ZArith.Zcompare.Zcompare_succ_compat	40
Coq.ZArith.Zcompare.Zcompare_mult_compat	40
Coq.ZArith.Zcompare.Zmult_compare_compat_l	40
Coq.ZArith.Zcompare.Zmult_compare_compat_r	40
Coq.ZArith.Zcompare.Zcompare_elim	40
Coq.ZArith.Zcompare.Zcompare_eq_case	40	2.0.0.1.9	search with cache (only 1: intros a b n Hn H; only 1: case Z.compare_spec; only 1: trivial; only 1: Z.order_pos; only 1: Z.order_pos).	3.40955901146	3165
Coq.ZArith.Zcompare.Zle_compare	40
Coq.ZArith.Zcompare.Zlt_compare	40	4.2.2.0.0	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.order; only 1: trivial; only 1: Z.order).	0.457556962967	289
Coq.ZArith.Zcompare.Zge_compare	40	2.2.0.0.0	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: trivial).	0.0136120319366	9
Coq.ZArith.Zcompare.Zgt_compare	40	0.0	search with cache (only 1: intros x y H; only 1: now rewrite H).	0.0155780315399	2
Coq.ZArith.Zquot.Zquot_0_r	40
Coq.ZArith.Zquot.Zrem_0_r	40	11	search with cache (only 1: now destruct a).	0.0556011199951	33
Coq.ZArith.Zquot.Zrem_0_l	40	0	search with cache (only 1: now destruct a).	0.0176930427551	1
Coq.ZArith.Zquot.Zquot_0_l	40	0	search with cache (only 1: now destruct a).	0.0175828933716	1
Coq.ZArith.Zquot.Z_rem_same	40
Coq.ZArith.Zquot.Z_rem_mult	40
Coq.ZArith.Zquot.Zquot_opp_l	40
Coq.ZArith.Zquot.Zquot_opp_r	40
Coq.ZArith.Zquot.Zrem_opp_l	40
Coq.ZArith.Zquot.Zrem_opp_r	40
Coq.ZArith.Zquot.Zquot_opp_opp	40
Coq.ZArith.Zquot.Zrem_opp_opp	40
Coq.ZArith.Zquot.Zrem_sgn	40
Coq.ZArith.Zquot.Zrem_sgn2	40
Coq.ZArith.Zquot.Zrem_lt_pos	40
Coq.ZArith.Zquot.Zrem_lt_neg	40
Coq.ZArith.Zquot.Zrem_lt_pos_pos	40	0.3.2.0	search with cache (only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: intros; only 1: generalize (Z.rem_nonneg a b), (Z.rem_bound_abs a b); only 1: lia).	1.51429796219	67
Coq.ZArith.Zquot.Zrem_lt_pos_neg	40	0.1.0	search with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: lia).	0.029776096344	4
Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.1.1.0	search with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).	0.0428490638733	6
Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.3.1.1.0	search with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: intros; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).	0.0741150379181	12
Coq.ZArith.Zquot.Remainder_equiv	40
Coq.ZArith.Zquot.Zquot_mod_unique_full	40
Coq.ZArith.Zquot.Zquot_unique_full	40
Coq.ZArith.Zquot.Zrem_unique_full	40	3.0.0.3.2	search with cache (only 1: intros; only 1: destruct (Zquot_mod_unique_full a b q r); only 1: auto; only 1: auto; only 1: auto).	0.91212105751	456
Coq.ZArith.Zquot.Z_quot_pos	40
Coq.ZArith.Zquot.Z_quot_lt	40
Coq.ZArith.Zquot.Z_quot_monotone	40
Coq.ZArith.Zquot.Z_mult_quot_le	40
Coq.ZArith.Zquot.Z_mult_quot_ge	40
Coq.ZArith.Zquot.Z_quot_exact_full	40
Coq.ZArith.Zquot.Zrem_le	40
Coq.ZArith.Zquot.Zquot_le_upper_bound	40
Coq.ZArith.Zquot.Zquot_lt_upper_bound	40
Coq.ZArith.Zquot.Zquot_le_lower_bound	40
Coq.ZArith.Zquot.Zquot_sgn	40
Coq.ZArith.Zquot.Z_rem_plus	40
Coq.ZArith.Zquot.Z_quot_plus	40
Coq.ZArith.Zquot.Z_quot_plus_l	40
Coq.ZArith.Zquot.Zquot_mult_cancel_r	40
Coq.ZArith.Zquot.Zquot_mult_cancel_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_r	40
Coq.ZArith.Zquot.Zrem_rem	40
Coq.ZArith.Zquot.Zmult_rem	40
Coq.ZArith.Zquot.Zplus_rem	40
Coq.ZArith.Zquot.Zplus_rem_idemp_l	40
Coq.ZArith.Zquot.Zplus_rem_idemp_r	40
Coq.ZArith.Zquot.Zmult_rem_idemp_l	40
Coq.ZArith.Zquot.Zmult_rem_idemp_r	40
Coq.ZArith.Zquot.Zquot_Zquot	40
Coq.ZArith.Zquot.Zquot_mult_le	40
Coq.ZArith.Zquot.Zrem_divides	40
Coq.ZArith.Zquot.Zquot2_odd_remainder	40
Coq.ZArith.Zquot.Zrem_odd	40
Coq.ZArith.Zquot.Zrem_even	40
Coq.ZArith.Zquot.Zeven_rem	40	1.0.1.0.0.1.0.9	search with cache (only 1: intros [| p| p]; only 1: rewrite Zrem_odd, Zodd_even_bool; only 1: simpl; only 1: tauto; only 1: rewrite Zrem_odd, Zodd_even_bool; only 1: now destruct Z.even; only 1: rewrite Zrem_odd, Zodd_even_bool; only 1: now destruct Z.even).	1.78680205345	2420
Coq.ZArith.Zquot.Zodd_rem	40	1.1.0.0.0.0	search with cache (only 1: intros a; only 1: rewrite Zrem_even; only 1: destruct a as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	0.0366141796112	8
Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	40
Coq.ZArith.Zquot.Zquot_Zdiv_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_pos	40	0.1.5.24	search with cache (only 1: intros a b Ha Hb; only 1: generalize (Zquotrem_Zdiv_eucl_pos a b Ha Hb); only 1: generalize (Zquotrem_Zdiv_eucl_pos a b Ha Hb); only 1: intuition).	16.3932349682	9620
Coq.ZArith.Zquot.Zrem_Zmod_zero	40
Coq.ZArith.Zdigits.binary_value	40	55.59.2	search with cache (only 1: intros; only 1: generalize 1%positive; only 1: constructor).	3.98334908485	27647
Coq.ZArith.Zdigits.two_compl_value	40	0.0.0.1.0.1	search with cache (only 1: refine (nat_rect _ _ _); only 1: intros; only 1: exact 0%Z; only 1: intros; only 1: inversion H0; only 1: exact (bit_value h + 2 * H H2)%Z).	0.0309171676636	17
Coq.ZArith.Zdigits.Zmod2_twice	40
Coq.ZArith.Zdigits.Z_to_binary	40
Coq.ZArith.Zdigits.Z_to_two_compl	40
Coq.ZArith.Zdigits.binary_value_Sn	40	1.0	search with cache (only 1: simpl; only 1: trivial).	0.0188579559326	3
Coq.ZArith.Zdigits.Z_to_binary_Sn	40
Coq.ZArith.Zdigits.binary_value_pos	40
Coq.ZArith.Zdigits.two_compl_value_Sn	40	2.1.1.1.0	search with cache (only 1: destruct b; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0312898159027	10
Coq.ZArith.Zdigits.Z_to_two_compl_Sn	40
Coq.ZArith.Zdigits.Z_to_binary_Sn_z	40	2.0.0.0.0.0.1	search with cache (only 1: destruct z; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0321140289307	10
Coq.ZArith.Zdigits.Z_div2_value	40	0.1.0.0.1.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct z; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: auto; only 1: simpl; only 1: intro H; only 1: elim H; only 1: trivial).	4.41110491753	3909
Coq.ZArith.Zdigits.Pdiv2	40	0.0.0.0.3.2.0.0	search with cache (only 1: destruct z as [| p| p]; only 1: discriminate; only 1: cbn; only 1: destruct p; only 1: auto; only 1: auto; only 1: discriminate; only 1: auto).	1.25669598579	1018
Coq.ZArith.Zdigits.Zdiv2_two_power_nat	40
Coq.ZArith.Zdigits.Z_to_two_compl_Sn_z	40	0.1.1.0.0.0.1	search with cache (only 1: destruct z as [| p| p]; only 1: auto; only 1: auto; only 1: destruct p as [p| p| ]; only 1: auto; only 1: auto; only 1: auto).	0.0931870937347	28
Coq.ZArith.Zdigits.Zeven_bit_value	40
Coq.ZArith.Zdigits.Zodd_bit_value	40	0.0.0.0.0.0.0.0.0.0.7.0.0	search with cache (only 1: destruct z; only 1: unfold bit_value; only 1: tauto || (intro H; elim H); only 1: unfold bit_value; only 1: destruct p; only 1: tauto || (intro H; elim H); only 1: tauto || (intro H; elim H); only 1: auto; only 1: unfold bit_value; only 1: destruct p; only 1: tauto || (intro H; elim H); only 1: tauto || (intro H; elim H); only 1: tauto || (intro H; elim H)).	5.40119194984	5099
Coq.ZArith.Zdigits.Zge_minus_two_power_nat_S	40
Coq.ZArith.Zdigits.Zlt_two_power_nat_S	40	1.0.1.0.0.0.0.1	search with cache (only 1: intros n z; only 1: rewrite (two_power_nat_S n); only 1: generalize (Zmod2_twice z); only 1: destruct (Zeven_odd_dec z) as [H| H]; only 1: rewrite (Zeven_bit_value z H); only 1: lia; only 1: rewrite (Zodd_bit_value z H); only 1: lia).	0.370553970337	133
Coq.ZArith.Zdigits.binary_to_Z_to_binary	40
Coq.ZArith.Zdigits.two_compl_to_Z_to_two_compl	40
Coq.ZArith.Zdigits.Z_to_binary_to_Z	40
Coq.ZArith.Zdigits.Z_to_two_compl_to_Z	40
Coq.ZArith.BinInt.eq_dec	40
Coq.ZArith.BinInt.pos_sub_spec	40
Coq.ZArith.BinInt.pos_sub_discr	40
Coq.ZArith.BinInt.pos_sub_diag	40	0.0.3.1.0.3.1.0.4	search with cache (only 1: induction p; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: trivial; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: trivial; only 1: simpl; only 1: trivial).	0.47776889801	959
Coq.ZArith.BinInt.pos_sub_lt	40
Coq.ZArith.BinInt.pos_sub_gt	40
Coq.ZArith.BinInt.pos_sub_opp	40
Coq.ZArith.BinInt.add_0_r	40
Coq.ZArith.BinInt.mul_0_r	40	5	search with cache (only 1: now destruct n).	0.00583004951477	6
Coq.ZArith.BinInt.mul_1_l	40	0	search with cache (only 1: now destruct n).	0.00510716438293	1
Coq.ZArith.BinInt.add_comm	40
Coq.ZArith.BinInt.opp_add_distr	40
Coq.ZArith.BinInt.opp_inj	40
Coq.ZArith.BinInt.pos_sub_add	40
Coq.ZArith.BinInt.add_assoc_pos	40
Coq.ZArith.BinInt.add_assoc	40
Coq.ZArith.BinInt.add_opp_diag_r	40	0.2.0.0.0.2.29	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl).	3.66854906082	6880
Coq.ZArith.BinInt.mul_opp_r	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	26.5456750393	32886
Coq.ZArith.BinInt.mul_add_distr_pos	40
Coq.ZArith.BinInt.mul_add_distr_r	40
Coq.ZArith.BinInt.one_succ	40	4	search with cache (only 1: trivial).	0.00544023513794	5
Coq.ZArith.BinInt.two_succ	40	0	search with cache (only 1: reflexivity).	0.00417304039001	1
Coq.ZArith.BinInt.add_0_l	40	0	search with cache (only 1: now destruct n).	0.00540995597839	1
Coq.ZArith.BinInt.add_succ_l	40
Coq.ZArith.BinInt.opp_0	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.00565195083618	2
Coq.ZArith.BinInt.opp_succ	40	0.1.0.0.0.2.0.0.0.0.1	search with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: trivial; only 1: simpl; only 1: induction p; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	1.25009799004	1568
Coq.ZArith.BinInt.succ_pred	40
Coq.ZArith.BinInt.pred_succ	40	0.0	search with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).	0.00675201416016	2
Coq.ZArith.BinInt.sub_0_r	40	0	search with cache (only 1: now destruct n).	0.00502800941467	1
Coq.ZArith.BinInt.sub_succ_r	40
Coq.ZArith.BinInt.mul_0_l	40	0	search with cache (only 1: now destruct n).	0.00548815727234	1
Coq.ZArith.BinInt.mul_succ_l	40
Coq.ZArith.BinInt.eqb_eq	40
Coq.ZArith.BinInt.ltb_lt	40
Coq.ZArith.BinInt.leb_le	40
Coq.ZArith.BinInt.compare_eq_iff	40
Coq.ZArith.BinInt.compare_sub	40
Coq.ZArith.BinInt.compare_antisym	40
Coq.ZArith.BinInt.compare_lt_iff	40	0.2.0.0.0	search with cache (only 1: unfold ltb, lt; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	0.0156948566437	16
Coq.ZArith.BinInt.compare_le_iff	40	0.0	search with cache (only 1: unfold leb, le; only 1: now rewrite N.compare_antisym, CompOpp_iff).	0.00964212417603	2
Coq.ZArith.BinInt.lt_succ_r	40
Coq.ZArith.BinInt.max_l	40
Coq.ZArith.BinInt.max_r	40
Coq.ZArith.BinInt.min_l	40
Coq.ZArith.BinInt.min_r	40	0.0.0.0.1.0	search with cache (only 1: unfold le, min; only 1: rewrite (compare_antisym n m); only 1: case compare_spec; only 1: intuition; only 1: intuition; only 1: intuition).	0.217925071716	116
Coq.ZArith.BinInt.peano_ind	40
Coq.ZArith.BinInt.bi_induction	40
Coq.ZArith.BinInt.abs_eq	40
Coq.ZArith.BinInt.abs_neq	40	0.1.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1; only 1: trivial).	0.00964593887329	5
Coq.ZArith.BinInt.sgn_null	40
Coq.ZArith.BinInt.sgn_pos	40	16.0.5.44	search with cache (only 1: destruct n; only 1: now subst; only 1: trivial; only 1: now subst).	4.37080979347	8346
Coq.ZArith.BinInt.sgn_neg	40	0	search with cache (only 1: now destruct n).	0.00921297073364	1
Coq.ZArith.BinInt.pow_0_r	40	0	search with cache (only 1: now destruct n).	0.00526094436646	1
Coq.ZArith.BinInt.pow_succ_r	40
Coq.ZArith.BinInt.pow_neg_r	40	0.10.0.0.2.1	search with cache (only 1: destruct m as [| m| m]; only 1: simpl; only 1: now destruct n; only 1: simpl; only 1: now destruct n; only 1: reflexivity).	0.981612920761	1196
Coq.ZArith.BinInt.pow_pos_fold	40	0	search with cache (only 1: trivial).	0.0046660900116	1
Coq.ZArith.BinInt.square_spec	40
Coq.ZArith.BinInt.sqrtrem_spec	40
Coq.ZArith.BinInt.sqrt_spec	40
Coq.ZArith.BinInt.sqrt_neg	40	4	search with cache (only 1: now destruct n).	0.0721859931946	71
Coq.ZArith.BinInt.sqrtrem_sqrt	40
Coq.ZArith.BinInt.log2_spec	40
Coq.ZArith.BinInt.log2_nonpos	40	0	search with cache (only 1: now destruct n).	0.00651001930237	1
Coq.ZArith.BinInt.even_spec	40
Coq.ZArith.BinInt.odd_spec	40
Coq.ZArith.BinInt.double_spec	40	0	search with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.00725603103638	1
Coq.ZArith.BinInt.succ_double_spec	40	9	search with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.0491411685944	81
Coq.ZArith.BinInt.pred_double_spec	40	0	search with cache (only 1: now destruct n).	0.00510215759277	1
Coq.ZArith.BinInt.pos_div_eucl_eq	40
Coq.ZArith.BinInt.div_eucl_eq	40
Coq.ZArith.BinInt.div_mod	40
Coq.ZArith.BinInt.pos_div_eucl_bound	40
Coq.ZArith.BinInt.mod_pos_bound	40
Coq.ZArith.BinInt.mod_neg_bound	40
Coq.ZArith.BinInt.quotrem_eq	40
Coq.ZArith.BinInt.quot_rem'	40
Coq.ZArith.BinInt.quot_rem	40	0.0.1.0.0.0.0.0	search with cache (only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: now destruct quotrem).	0.0480971336365	24
Coq.ZArith.BinInt.rem_bound_pos	40
Coq.ZArith.BinInt.rem_opp_l'	40
Coq.ZArith.BinInt.rem_opp_r'	40
Coq.ZArith.BinInt.rem_opp_l	40
Coq.ZArith.BinInt.rem_opp_r	40
Coq.ZArith.BinInt.divide_Zpos	40
Coq.ZArith.BinInt.divide_Zpos_Zneg_r	40
Coq.ZArith.BinInt.divide_Zpos_Zneg_l	40
Coq.ZArith.BinInt.ggcd_gcd	40
Coq.ZArith.BinInt.ggcd_correct_divisors	40
Coq.ZArith.BinInt.gcd_divide_l	40
Coq.ZArith.BinInt.gcd_divide_r	40
Coq.ZArith.BinInt.gcd_greatest	40
Coq.ZArith.BinInt.gcd_nonneg	40
Coq.ZArith.BinInt.ggcd_opp	40
Coq.ZArith.BinInt.testbit_of_N	40
Coq.ZArith.BinInt.testbit_of_N'	40	1.0.0.0.1.0.0.0.0.0.0.0.0	search with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a).	3.2425699234	3759
Coq.ZArith.BinInt.testbit_Zpos	40	1.0.0.0.0.2.0	search with cache (only 1: rewrite <- testbit_of_N; only 1: intro Hn; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).	0.0149669647217	10
Coq.ZArith.BinInt.testbit_Zneg	40
Coq.ZArith.BinInt.div2_spec	40	1	search with cache (only 1: reflexivity).	0.00481295585632	2
Coq.ZArith.BinInt.testbit_0_l	40	0.3.0.4.0.0.7	search with cache (only 1: destruct n as [| n| n]; only 1: unfold testbit; only 1: easy; only 1: simpl; only 1: trivial; only 1: unfold testbit; only 1: trivial).	0.321014881134	682
Coq.ZArith.BinInt.testbit_neg_r	40	0	search with cache (only 1: now destruct n).	0.0692160129547	1
Coq.ZArith.BinInt.testbit_odd_0	40
Coq.ZArith.BinInt.testbit_even_0	40	0	search with cache (only 1: now destruct a as [| a| [a| a| ]]).	0.00620198249817	1
Coq.ZArith.BinInt.testbit_odd_succ	40
Coq.ZArith.BinInt.testbit_even_succ	40
Coq.ZArith.BinInt.shiftr_spec_aux	40
Coq.ZArith.BinInt.shiftl_spec_low	40
Coq.ZArith.BinInt.shiftl_spec_high	40
Coq.ZArith.BinInt.shiftr_spec	40
Coq.ZArith.BinInt.lor_spec	40
Coq.ZArith.BinInt.land_spec	40
Coq.ZArith.BinInt.ldiff_spec	40
Coq.ZArith.BinInt.lxor_spec	40
Coq.ZArith.BinInt.gt_lt_iff	40
Coq.ZArith.BinInt.gt_lt	40	0.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.00840210914612	2
Coq.ZArith.BinInt.lt_gt	40	0.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.00713801383972	2
Coq.ZArith.BinInt.ge_le_iff	40
Coq.ZArith.BinInt.ge_le	40	0.0	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.00983190536499	2
Coq.ZArith.BinInt.le_ge	40	0.0	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.00797200202942	2
Coq.ZArith.BinInt.gtb_ltb	40
Coq.ZArith.BinInt.geb_leb	40
Coq.ZArith.BinInt.gtb_lt	40	1.2.1.0	search with cache (only 1: unfold gtb, ltb; only 1: unfold lt, gt; only 1: rewrite compare_antisym; only 1: now case compare).	0.0537099838257	21
Coq.ZArith.BinInt.geb_le	40	1.2.3.0	search with cache (only 1: unfold geb, leb; only 1: unfold le, ge; only 1: rewrite compare_antisym; only 1: now case compare).	0.0478711128235	16
Coq.ZArith.BinInt.gtb_spec	40
Coq.ZArith.BinInt.geb_spec	40
Coq.ZArith.BinInt.add_reg_l	40
Coq.ZArith.BinInt.mul_reg_l	40
Coq.ZArith.BinInt.mul_reg_r	40
Coq.ZArith.BinInt.opp_eq_mul_m1	40
Coq.ZArith.BinInt.add_diag	40
Coq.ZArith.BinInt.compare_opp	40
Coq.ZArith.BinInt.add_compare_mono_l	40
Coq.ZArith.BinInt.testbit_mod_pow2	40
Coq.ZArith.BinInt.testbit_ones	40
Coq.ZArith.BinInt.testbit_ones_nonneg	40	0.0.0.0.3	search with cache (only 1: destruct (ltb_spec i n); only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial).	0.152500152588	93
Coq.ZArith.BinInt.id	40	1	search with cache (only 1: trivial).	0.00566697120667	2
Coq.ZArith.BinInt.inj	40
Coq.ZArith.BinInt.inj_iff	40	1.7.8.0.5	search with cache (only 1: split; only 1: now injection 1; only 1: symmetry; only 1: rewrite ?Z.add_0_l, ?Z.add_0_r, ?H; only 1: reflexivity).	0.192051887512	781
Coq.ZArith.BinInt.is_pos	40	1	search with cache (only 1: split).	0.00762891769409	2
Coq.ZArith.BinInt.is_nonneg	40	37	search with cache (only 1: now Z.nzsimpl').	0.432407140732	696
Coq.ZArith.BinInt.inj_1	40	0	search with cache (only 1: split).	0.0043420791626	1
Coq.ZArith.BinInt.inj_xO	40	6.0	search with cache (only 1: change 2 with (1 + 1); only 1: split).	0.00703001022339	8
Coq.ZArith.BinInt.inj_xI	40	0	search with cache (only 1: reflexivity).	0.00375294685364	1
Coq.ZArith.BinInt.inj_succ	40
Coq.ZArith.BinInt.inj_add	40	1	search with cache (only 1: now f_equal).	0.00490093231201	2
Coq.ZArith.BinInt.inj_sub	40
Coq.ZArith.BinInt.inj_sub_max	40
Coq.ZArith.BinInt.inj_pred	40
Coq.ZArith.BinInt.inj_mul	40	0	search with cache (only 1: reflexivity).	0.00450706481934	1
Coq.ZArith.BinInt.inj_pow_pos	40
Coq.ZArith.BinInt.inj_pow	40	0	search with cache (only 1: now apply Pos.iter_swap_gen).	0.00510191917419	1
Coq.ZArith.BinInt.inj_square	40	2.0	search with cache (only 1: simpl; only 1: now f_equal).	0.00466084480286	4
Coq.ZArith.BinInt.inj_compare	40	0.1	search with cache (only 1: simpl; only 1: trivial).	0.0226991176605	21
Coq.ZArith.BinInt.inj_leb	40	0	search with cache (only 1: reflexivity).	0.00399208068848	1
Coq.ZArith.BinInt.inj_ltb	40	0	search with cache (only 1: reflexivity).	0.00355505943298	1
Coq.ZArith.BinInt.inj_eqb	40	0	search with cache (only 1: reflexivity).	0.0032970905304	1
Coq.ZArith.BinInt.inj_max	40
Coq.ZArith.BinInt.inj_min	40
Coq.ZArith.BinInt.inj_sqrt	40	0	search with cache (only 1: reflexivity).	0.00450706481934	1
Coq.ZArith.BinInt.inj_gcd	40	1	search with cache (only 1: reflexivity).	0.00325989723206	2
Coq.ZArith.BinInt.inj_divide	40
Coq.ZArith.BinInt.inj_testbit	40
Coq.ZArith.BinInt.inj_neg	40	1	search with cache (only 1: now injection 1).	0.00836896896362	2
Coq.ZArith.BinInt.inj_neg_iff	40	1.3.0.1	search with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.00984597206116	9
Coq.ZArith.BinInt.inj_pos	40	1	search with cache (only 1: now injection 1).	0.00647616386414	2
Coq.ZArith.BinInt.inj_pos_iff	40	0.2.1.0	search with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.0131020545959	7
Coq.ZArith.BinInt.neg_is_neg	40	0	search with cache (only 1: reflexivity).	0.00428700447083	1
Coq.ZArith.BinInt.neg_is_nonpos	40	1	search with cache (only 1: easy).	0.00617790222168	2
Coq.ZArith.BinInt.pos_is_pos	40	0	search with cache (only 1: reflexivity).	0.00362300872803	1
Coq.ZArith.BinInt.pos_is_nonneg	40	0	search with cache (only 1: easy).	0.00568890571594	1
Coq.ZArith.BinInt.neg_le_pos	40	0	search with cache (only 1: easy).	0.0063259601593	1
Coq.ZArith.BinInt.neg_lt_pos	40	0	search with cache (only 1: easy).	0.00382804870605	1
Coq.ZArith.BinInt.neg_le_neg	40	2.1.59	search with cache (only 1: unfold Z.le, Z.ge; only 1: simpl; only 1: now rewrite <- Pos.compare_antisym).	4.98004388809	7130
Coq.ZArith.BinInt.neg_lt_neg	40	0.0.75	search with cache (only 1: unfold Z.lt, Z.gt; only 1: simpl; only 1: now rewrite <- Pos.compare_antisym).	7.78893709183	11712
Coq.ZArith.BinInt.pos_le_pos	40	6.0.1	search with cache (only 1: unfold Z.le; only 1: simpl; only 1: trivial).	0.0210449695587	36
Coq.ZArith.BinInt.pos_lt_pos	40	6.1.0	search with cache (only 1: intros; only 1: unfold Z.lt; only 1: easy).	0.00950789451599	18
Coq.ZArith.BinInt.neg_xO	40	0	search with cache (only 1: reflexivity).	0.00358486175537	1
Coq.ZArith.BinInt.neg_xI	40	0	search with cache (only 1: reflexivity).	0.00352716445923	1
Coq.ZArith.BinInt.pos_xO	40	0	search with cache (only 1: reflexivity).	0.00341391563416	1
Coq.ZArith.BinInt.pos_xI	40	0	search with cache (only 1: reflexivity).	0.00335192680359	1
Coq.ZArith.BinInt.opp_neg	40	0	search with cache (only 1: reflexivity).	0.00333309173584	1
Coq.ZArith.BinInt.opp_pos	40	0	search with cache (only 1: reflexivity).	0.00311207771301	1
Coq.ZArith.BinInt.add_neg_neg	40	0	search with cache (only 1: reflexivity).	0.00344896316528	1
Coq.ZArith.BinInt.add_pos_neg	40	2	search with cache (only 1: reflexivity).	0.111458778381	25
Coq.ZArith.BinInt.add_neg_pos	40	0	search with cache (only 1: reflexivity).	0.00470590591431	1
Coq.ZArith.BinInt.add_pos_pos	40	0	search with cache (only 1: reflexivity).	0.00327301025391	1
Coq.ZArith.BinInt.divide_pos_neg_r	40
Coq.ZArith.BinInt.divide_pos_neg_l	40
Coq.ZArith.BinInt.testbit_neg	40
Coq.ZArith.BinInt.testbit_pos	40	0	search with cache (only 1: apply Z.testbit_Zpos).	0.00476098060608	1
Coq.ZArith.BinInt.id	40
Coq.ZArith.BinInt.inj	40
Coq.ZArith.BinInt.inj_iff	40
Coq.ZArith.BinInt.to_pos_nonpos	40	3	search with cache (only 1: now destruct x).	0.0124900341034	4
Coq.ZArith.BinInt.inj_1	40	0	search with cache (only 1: trivial).	0.0038321018219	1
Coq.ZArith.BinInt.inj_double	40	5.2	search with cache (only 1: intros; only 1: now destruct x).	0.0187170505524	13
Coq.ZArith.BinInt.inj_succ_double	40	0	search with cache (only 1: now destruct x).	0.00787401199341	1
Coq.ZArith.BinInt.inj_succ	40	1.0.0.0.3.4	search with cache (only 1: destruct x; only 1: now f_equal; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: simpl; only 1: easy).	0.27993106842	202
Coq.ZArith.BinInt.inj_add	40
Coq.ZArith.BinInt.inj_sub	40
Coq.ZArith.BinInt.inj_pred	40	0.0.0.0.0.0.0.0	search with cache (only 1: destruct x; only 1: easy; only 1: simpl; only 1: destruct p; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: easy).	0.0841979980469	8
Coq.ZArith.BinInt.inj_mul	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0275850296021	4
Coq.ZArith.BinInt.inj_pow	40
Coq.ZArith.BinInt.inj_pow_pos	40
Coq.ZArith.BinInt.inj_compare	40	0.0.1.0.1.3	search with cache (only 1: destruct x; only 1: simpl; only 1: easy; only 1: easy || now destruct y; only 1: simpl; only 1: easy).	0.187512159348	77
Coq.ZArith.BinInt.inj_leb	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.027645111084	4
Coq.ZArith.BinInt.inj_ltb	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0276780128479	4
Coq.ZArith.BinInt.inj_eqb	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0640671253204	4
Coq.ZArith.BinInt.inj_max	40
Coq.ZArith.BinInt.inj_min	40
Coq.ZArith.BinInt.inj_sqrt	40	0.0.0.0	search with cache (only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: trivial).	0.00886297225952	4
Coq.ZArith.BinInt.inj_gcd	40	0.0.0.1.0	search with cache (only 1: intros; only 1: destruct x; only 1: easy; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0193638801575	6
Coq.ZArith.BinInt.Zplus_minus_eq	40
Coq.ZArith.BinInt.Zpos_eq	40	0.3	search with cache (only 1: intros; only 1: now f_equal).	0.0108861923218	5
Coq.ZArith.BinInt.ZL0	40	3	search with cache (only 1: now Z.nzsimpl).	0.0349628925323	4
Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40
Coq.ZArith.BinInt.Z_eq_mult	40
Coq.ZArith.Zcomplements.floor_gt0	40	1.1.0	search with cache (only 1: intros; only 1: Z.swap_greater; only 1: easy).	0.0182499885559	5
Coq.ZArith.Zcomplements.floor_ok	40
Coq.ZArith.Zcomplements.Z_lt_abs_rec	40
Coq.ZArith.Zcomplements.Z_lt_abs_induction	40
Coq.ZArith.Zcomplements.Zcase_sign	40
Coq.ZArith.Zcomplements.sqr_pos	40	2.0.9.27.1	search with cache (only 1: Z.swap_greater; only 1: destruct n; only 1: auto with zarith; only 1: auto with zarith; only 1: now destruct p).	6.86668395996	11550
Coq.ZArith.Zcomplements.Zlength_correct	40
Coq.ZArith.Zcomplements.Zlength_nil	40	0.1	search with cache (only 1: unfold Zlength; only 1: auto with zarith).	0.162646055222	84
Coq.ZArith.Zcomplements.Zlength_cons	40
Coq.ZArith.Zcomplements.Zlength_nil_inv	40	5.0.2.0.0.0.0.0.0.0.0.0.2	search with cache (only 1: assert (H : forall (l : list A) acc, Zlength_aux acc A l = acc + Z.of_nat (length l)); only 1: clear l; only 1: induction l; only 1: auto with zarith; only 1: intros; only 1: simpl length; only 1: simpl Zlength_aux; only 1: rewrite IHl, Nat2Z.inj_succ, Z.add_succ_comm; only 1: auto; only 1: unfold Zlength; only 1: induction l; only 1: now rewrite H; only 1: now rewrite H).	6.53343296051	9346
Coq.ZArith.Zeven.Zeven_equiv	40
Coq.ZArith.Zeven.Zodd_equiv	40
Coq.ZArith.Zeven.Zeven_bool_iff	40
Coq.ZArith.Zeven.Zodd_bool_iff	40
Coq.ZArith.Zeven.Zodd_even_bool	40
Coq.ZArith.Zeven.Zeven_odd_bool	40
Coq.ZArith.Zeven.Zeven_odd_dec	40
Coq.ZArith.Zeven.Zeven_dec	40	0.0.0.0.1.0.0.0.0.1.0.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: destruct p; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right; only 1: simpl; only 1: destruct p; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	2.54409098625	2332
Coq.ZArith.Zeven.Zodd_dec	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right).	7.17972612381	7959
Coq.ZArith.Zeven.Zeven_not_Zodd	40	1.0.1.0.1.0.0.1.0.1.0.1.0.0.1.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	8.9938120842	17524
Coq.ZArith.Zeven.Zodd_not_Zeven	40	0.0.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: intuition).	0.0186960697174	5
Coq.ZArith.Zeven.Zeven_Sn	40
Coq.ZArith.Zeven.Zodd_Sn	40
Coq.ZArith.Zeven.Zeven_pred	40
Coq.ZArith.Zeven.Zodd_pred	40
Coq.ZArith.Zeven.Zeven_div2	40
Coq.ZArith.Zeven.Zodd_div2	40
Coq.ZArith.Zeven.Zquot2_odd_eqn	40
Coq.ZArith.Zeven.Zeven_quot2	40	0	search with cache (only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.00949597358704	1
Coq.ZArith.Zeven.Zodd_quot2	40	2.1.0	search with cache (only 1: boolify_even_odd; only 1: intros Hn; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.45676112175	41
Coq.ZArith.Zeven.Zodd_quot2_neg	40	5.1.0	search with cache (only 1: intros Hn Hn'; only 1: apply Zodd_bool_iff in Hn'; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.230268001556	44
Coq.ZArith.Zeven.Zquot2_opp	40	0.12	search with cache (only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.0725889205933	121
Coq.ZArith.Zeven.Zquot2_quot	40
Coq.ZArith.Zeven.Z_modulo_2	40
Coq.ZArith.Zeven.Zsplit2	40
Coq.ZArith.Zeven.Zeven_ex	40	0.0.2	search with cache (only 1: intros Hn; only 1: exists (Z.div2 n); only 1: exact (Zeven_div2 n Hn)).	0.0210690498352	20
Coq.ZArith.Zeven.Zodd_ex	40	0.0.6	search with cache (only 1: intros Hn; only 1: exists (Z.div2 n); only 1: exact (Zodd_div2 n Hn)).	0.109621047974	56
Coq.ZArith.Zeven.Zeven_2p	40	0.0.0.0.0.0.3.13.5	search with cache (only 1: boolify_even_odd; only 1: change 2 with (1 + 1); only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	1.02089810371	2357
Coq.ZArith.Zeven.Zodd_2p_plus_1	40	5.4.3.9.3.3.11.18.4	search with cache (only 1: boolify_even_odd; only 1: simpl; only 1: destruct p; only 1: now destruct Hn || easy; only 1: now destruct Hn || easy; only 1: destruct p; only 1: reflexivity; only 1: now destruct Hn || easy; only 1: now destruct Hn || easy).	9.82544612885	29786
Coq.ZArith.Zeven.Zeven_plus_Zodd	40
Coq.ZArith.Zeven.Zeven_plus_Zeven	40	1.0.0.2.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0462198257446	20
Coq.ZArith.Zeven.Zodd_plus_Zeven	40	1.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0273969173431	5
Coq.ZArith.Zeven.Zodd_plus_Zodd	40	1.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0266530513763	5
Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40
Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40	0.1.0.32	search with cache (only 1: rewrite Z.mul_comm; only 1: boolify_even_odd; only 1: intros Ha; only 1: now rewrite Z.even_mul, Ha).	22.0421149731	34481
Coq.ZArith.Zeven.Zodd_mult_Zodd	40
Coq.ZArith.Zmisc.iter_nat_of_Z	40
Coq.ZArith.Znumtheory.Zdivide_opp_r	40
Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0	search with cache (only 1: apply Z.divide_opp_r).	0.0149159431458	1
Coq.ZArith.Znumtheory.Zdivide_opp_l	40
Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	40	0	search with cache (only 1: apply Z.divide_opp_l).	0.0145192146301	1
Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40
Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	40	0	search with cache (only 1: apply Z.divide_abs_l).	0.0139360427856	1
Coq.ZArith.Znumtheory.Zmult_one	40
Coq.ZArith.Znumtheory.Zdivide_bounds	40
Coq.ZArith.Znumtheory.Zmod_divide	40	0.0.14.12.11.3	search with cache (only 1: intros a b; only 1: zero_or_not b; only 1: easy; only 1: rewrite Z.mod_divide; only 1: trivial; only 1: trivial).	24.9841609001	36990
Coq.ZArith.Znumtheory.Zdivide_mod	40	0.7.7.1	search with cache (only 1: intros a b; only 1: zero_or_not b; only 1: apply Z.mod_divide; only 1: trivial).	3.12124705315	3196
Coq.ZArith.Znumtheory.Zdivide_dec	40
Coq.ZArith.Znumtheory.Z_lt_neq	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40
Coq.ZArith.Znumtheory.Zdivide_le	40	2.14	search with cache (only 1: intros x P Hzero Hpos Hneg; only 1: now apply Z.divide_pos_le).	0.956867933273	513
Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	40
Coq.ZArith.Znumtheory.Zmod_div_mod	40
Coq.ZArith.Znumtheory.Zmod_divide_minus	40
Coq.ZArith.Znumtheory.Zdivide_mod_minus	40
Coq.ZArith.Znumtheory.Zis_gcd_sym	40
Coq.ZArith.Znumtheory.Zis_gcd_0	40	0.21.0.0.1	search with cache (only 1: intros a; only 1: constructor; only 1: intuition; only 1: auto with zarith; only 1: intuition).	4.32591199875	10556
Coq.ZArith.Znumtheory.Zis_gcd_1	40	0.4.7.11	search with cache (only 1: constructor; only 1: auto with zarith; only 1: now destruct Z.odd; only 1: auto with zarith).	4.04270982742	4985
Coq.ZArith.Znumtheory.Zis_gcd_refl	40	0.0.0.0	search with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: intuition).	0.0209040641785	4
Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.0.0.0.0	search with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.0500159263611	5
Coq.ZArith.Znumtheory.Zis_gcd_opp	40	0.0.0.0.0	search with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.349935054779	5
Coq.ZArith.Znumtheory.Zis_gcd_0_abs	40
Coq.ZArith.Znumtheory.Zis_gcd_unique	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	40
Coq.ZArith.Znumtheory.euclid_rec	40
Coq.ZArith.Znumtheory.euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.0.0.0.0.0	search with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: assert (c | d) by auto; only 1: assert (d | c) by auto; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).	0.0284531116486	6
Coq.ZArith.Znumtheory.Zis_gcd_bezout	40
Coq.ZArith.Znumtheory.Zis_gcd_mult	40
Coq.ZArith.Znumtheory.rel_prime_bezout	40
Coq.ZArith.Znumtheory.bezout_rel_prime	40
Coq.ZArith.Znumtheory.Gauss	40
Coq.ZArith.Znumtheory.rel_prime_mult	40
Coq.ZArith.Znumtheory.rel_prime_cross_prod	40
Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_sym	40	0.1	search with cache (only 1: intros a b; only 1: now apply Zis_gcd_sym).	0.0151448249817	3
Coq.ZArith.Znumtheory.rel_prime_div	40
Coq.ZArith.Znumtheory.rel_prime_1	40	0.0.0.0.1.0	search with cache (only 1: intros; only 1: apply Zis_gcd_sym; only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).	0.0248041152954	7
Coq.ZArith.Znumtheory.not_rel_prime_0	40
Coq.ZArith.Znumtheory.rel_prime_mod	40
Coq.ZArith.Znumtheory.rel_prime_mod_rev	40
Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	40
Coq.ZArith.Znumtheory.prime_divisors	40
Coq.ZArith.Znumtheory.prime_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_le_prime	40	5.15	search with cache (only 1: simple induction 1; only 1: auto).	0.623723983765	852
Coq.ZArith.Znumtheory.prime_mult	40
Coq.ZArith.Znumtheory.not_prime_0	40	4.2	search with cache (only 1: intros [q Hq]; only 1: discriminate).	0.0173830986023	8
Coq.ZArith.Znumtheory.not_prime_1	40	11.3	search with cache (only 1: intros [q Hq]; only 1: discriminate).	0.115903139114	226
Coq.ZArith.Znumtheory.prime_2	40
Coq.ZArith.Znumtheory.prime_3	40
Coq.ZArith.Znumtheory.prime_ge_2	40
Coq.ZArith.Znumtheory.Z_0_1_more	40
Coq.ZArith.Znumtheory.prime_alt	40
Coq.ZArith.Znumtheory.square_not_prime	40
Coq.ZArith.Znumtheory.prime_div_prime	40
Coq.ZArith.Znumtheory.Zgcd_is_gcd	40
Coq.ZArith.Znumtheory.Zgcd_spec	40
Coq.ZArith.Znumtheory.Zdivide_Zgcd	40	0.1.0.6	search with cache (only 1: intros a b c Hb Hc; only 1: apply Z.gcd_greatest; only 1: intuition; only 1: auto using Z_lt_neq).	0.526485204697	127
Coq.ZArith.Znumtheory.Zis_gcd_gcd	40
Coq.ZArith.Znumtheory.Zgcd_div_swap0	40
Coq.ZArith.Znumtheory.Zgcd_div_swap	40
Coq.ZArith.Znumtheory.Zgcd_ass	40
Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_dec	40
Coq.ZArith.Znumtheory.prime_dec_aux	40
Coq.ZArith.Znumtheory.prime_dec	40
Coq.ZArith.Znumtheory.not_prime_divide	40
Coq.ZArith.Zdiv.Z_div_mod_POS	40
Coq.ZArith.Zdiv.Z_div_mod	40
Coq.ZArith.Zdiv.Remainder_equiv	40
Coq.ZArith.Zdiv.Z_div_mod_full	40
Coq.ZArith.Zdiv.Z_mod_remainder	40	0.0.0.0.0.0.0.2.0.0.1.0.4	search with cache (only 1: unfold Z.modulo; only 1: intros Hb; only 1: generalize (Z.div_eucl_eq a b Hb), (Z.mod_pos_bound a b), (Z.mod_neg_bound a b); only 1: unfold Z.modulo; only 1: destruct Z.div_eucl as (q, r); only 1: intros EQ POS NEG; only 1: red; only 1: destruct b; only 1: now destruct Hb; only 1: left; only 1: now apply POS; only 1: right; only 1: now apply NEG).	16.3541200161	9674
Coq.ZArith.Zdiv.Z_div_mod_eq	40
Coq.ZArith.Zdiv.Zmod_eq_full	40
Coq.ZArith.Zdiv.Zmod_eq	40	1.11.2.0	search with cache (only 1: intros; only 1: rewrite Z.mul_comm; only 1: assert (Hb' : b <> 0) by now destruct b; only 1: now apply Z.mod_eq).	3.90111303329	2638
Coq.ZArith.Zdiv.Zdiv_eucl_exist	40
Coq.ZArith.Zdiv.Zdiv_mod_unique	40
Coq.ZArith.Zdiv.Zdiv_unique	40
Coq.ZArith.Zdiv.Zmod_unique	40
Coq.ZArith.Zdiv.Zmod_0_l	40	14	search with cache (only 1: trivial).	0.205711841583	481
Coq.ZArith.Zdiv.Zmod_0_r	40	0.0.0.0	search with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0206780433655	4
Coq.ZArith.Zdiv.Zdiv_0_l	40	0.0.2.0	search with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0207822322845	6
Coq.ZArith.Zdiv.Zdiv_0_r	40	0.0.0.0	search with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0206339359283	4
Coq.ZArith.Zdiv.Zmod_1_r	40
Coq.ZArith.Zdiv.Zdiv_1_r	40
Coq.ZArith.Zdiv.Z_mod_same_full	40
Coq.ZArith.Zdiv.Z_mod_mult	40
Coq.ZArith.Zdiv.Z_div_pos	40
Coq.ZArith.Zdiv.Z_div_ge0	40	0.0.0.10.0	search with cache (only 1: intros; only 1: Z.swap_greater; only 1: apply Z.div_pos; only 1: auto using Z.gt_lt; only 1: auto using Z.gt_lt).	0.716463088989	391
Coq.ZArith.Zdiv.Z_div_lt	40
Coq.ZArith.Zdiv.Z_div_ge	40
Coq.ZArith.Zdiv.Z_div_le	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).	0.0204679965973	4
Coq.ZArith.Zdiv.Z_mult_div_ge	40
Coq.ZArith.Zdiv.Z_mult_div_ge_neg	40
Coq.ZArith.Zdiv.Z_div_exact_full_1	40
Coq.ZArith.Zdiv.Z_div_exact_full_2	40	1.0.0.1.1	search with cache (only 1: intros a b; only 1: intros; only 1: rewrite Z.div_exact; only 1: auto; only 1: auto).	0.0743551254272	35
Coq.ZArith.Zdiv.Zmod_le	40
Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40
Coq.ZArith.Zdiv.Zdiv_le_compat_l	40
Coq.ZArith.Zdiv.Zdiv_sgn	40
Coq.ZArith.Zdiv.Z_mod_plus_full	40
Coq.ZArith.Zdiv.Zdiv_opp_opp	40
Coq.ZArith.Zdiv.Zmod_opp_opp	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_r	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_r	40
Coq.ZArith.Zdiv.Z_div_zero_opp_full	40
Coq.ZArith.Zdiv.Z_div_nz_opp_full	40
Coq.ZArith.Zdiv.Z_div_zero_opp_r	40
Coq.ZArith.Zdiv.Z_div_nz_opp_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_r	40
Coq.ZArith.Zdiv.Zmod_mod	40
Coq.ZArith.Zdiv.Zmult_mod	40
Coq.ZArith.Zdiv.Zplus_mod	40
Coq.ZArith.Zdiv.Zminus_mod	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.0.0	search with cache (only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: auto).	0.0201098918915	3
Coq.ZArith.Zdiv.Zminus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zminus_mod_idemp_r	40	0.0.0	search with cache (only 1: intros; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: auto).	0.0198731422424	3
Coq.ZArith.Zdiv.Zmult_mod_idemp_l	40
Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.0.0	search with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: auto).	0.0197777748108	3
Coq.ZArith.Zdiv.eqm_refl	40	7	search with cache (only 1: reflexivity).	0.0300350189209	25
Coq.ZArith.Zdiv.eqm_sym	40	5.1	search with cache (only 1: intros; only 1: now destruct b).	0.033243894577	16
Coq.ZArith.Zdiv.eqm_trans	40	0.1.2.0.0.5.2.0.0	search with cache (only 1: intros a b; only 1: unfold eqm; only 1: unfold Z.modulo; only 1: intros EQ POS NEG; only 1: destruct Z.div_eucl as (q, r); only 1: destruct Z.div_eucl; only 1: destruct Z.div_eucl; only 1: subst; only 1: trivial).	1.29029607773	1605
Coq.ZArith.Zdiv.eqm_setoid	40
Coq.ZArith.Zdiv.Zplus_eqm	40
Coq.ZArith.Zdiv.Zminus_eqm	40
Coq.ZArith.Zdiv.Zmult_eqm	40
Coq.ZArith.Zdiv.Zopp_eqm	40
Coq.ZArith.Zdiv.Zmod_eqm	40	0.9.1.0	search with cache (only 1: unfold eqm; only 1: intros; only 1: repeat rewrite Zmod_mod; only 1: auto).	0.217226982117	370
Coq.ZArith.Zdiv.Zdiv_Zdiv	40
Coq.ZArith.Zdiv.Zmod_div	40
Coq.ZArith.Zdiv.Zdiv_mult_le	40
Coq.ZArith.Zdiv.Zmod_divides	40
Coq.ZArith.Zdiv.Zmod_odd	40
Coq.ZArith.Zdiv.Zmod_even	40
Coq.ZArith.Zdiv.Zodd_mod	40	0.2.0	search with cache (only 1: intros a; only 1: rewrite Zmod_odd, Zodd_even_bool; only 1: now destruct Z.even).	0.0233519077301	5
Coq.ZArith.Zdiv.Zeven_mod	40	0.2.0	search with cache (only 1: intros a; only 1: rewrite Zmod_odd, Zodd_even_bool; only 1: now destruct Z.even).	0.0325541496277	13
Coq.ZArith.Zdiv.Z_mod_same	40	0.0.3.1	search with cache (only 1: intros; only 1: zero_or_not a; only 1: apply Z.mod_same; only 1: auto).	0.0223588943481	8
Coq.ZArith.Zdiv.Z_div_same	40
Coq.ZArith.Zdiv.Z_div_plus	40
Coq.ZArith.Zdiv.Z_div_mult	40
Coq.ZArith.Zdiv.Z_mod_plus	40	1.0.0	search with cache (only 1: intros; only 1: apply Z.mod_add; only 1: now intros ->).	0.027575969696	4
Coq.ZArith.Zdiv.Z_div_exact_1	40	0.0.0.0.0	search with cache (only 1: intros a b; only 1: zero_or_not b; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).	0.033931016922	5
Coq.ZArith.Zdiv.Z_div_exact_2	40	0.0.0.4.1.1	search with cache (only 1: intros a b; only 1: zero_or_not b; only 1: now rewrite Z.mul_0_r; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).	0.291750907898	174
Coq.ZArith.Zdiv.Z_mod_zero_opp	40	0.0.0.0.0	search with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: auto; only 1: auto).	0.024286031723	5
Coq.ZArith.Zdiv.Zmod_POS_correct	40
Coq.ZArith.Zdiv.Zmod'_correct	40
Coq.ZArith.Zdiv.Zdiv_eucl_extended	40
Coq.ZArith.Zdiv.div_Zdiv	40
Coq.ZArith.Zdiv.mod_Zmod	40	0.0.0.0.0.27.10.32.2	search with cache (only 1: intros; only 1: eapply Zmod_unique_full; only 1: red; only 1: left; only 1: split; only 1: auto with zarith; only 1: now apply inj_lt, Nat.mod_upper_bound; only 1: rewrite <- Nat2Z.inj_mul, <- Nat2Z.inj_add; only 1: now apply inj_eq, Nat.div_mod).	8.29676103592	19392
Coq.ZArith.Zeuclid.mod_wd	40	0	search with cache (only 1: solve_proper).	0.0734667778015	1
Coq.ZArith.Zeuclid.div_wd	40	0	search with cache (only 1: congruence).	0.0135791301727	1
Coq.ZArith.Zeuclid.div_mod	40
Coq.ZArith.Zeuclid.mod_always_pos	40
Coq.ZArith.Zeuclid.mod_bound_pos	40
Coq.ZArith.Zabs.Zabs_ind	40
Coq.ZArith.Zabs.Zabs_intro	40	9	search with cache (only 1: now destruct n).	0.0230009555817	19
Coq.ZArith.Zabs.Zabs_dec	40
Coq.ZArith.Zabs.Zabs_spec	40
Coq.ZArith.Zabs.Zsgn_spec	40
Coq.ZArith.Zabs.Zabs_nat_le	40
Coq.ZArith.Zabs.Zabs_nat_lt	40
Coq.ZArith.Int.eqb_eq	40
Coq.ZArith.Int.eqb_neq	40
Coq.ZArith.Int.ltb_lt	40
Coq.ZArith.Int.ltb_nlt	40
Coq.ZArith.Int.leb_le	40
Coq.ZArith.Int.leb_nle	40
Coq.ZArith.Int.norm_ei_correct	40
Coq.ZArith.Int.norm_ez_correct	40
Coq.ZArith.Int.norm_ep_correct	40
Coq.ZArith.Int.norm_ep_correct2	40
Coq.ZArith.Int.gt_le_dec	40
Coq.ZArith.Int.ge_lt_dec	40
Coq.ZArith.Int.i2z_eq	40	1	search with cache (only 1: now f_equal).	0.0288689136505	2
Coq.ZArith.Int.i2z_0	40	4	search with cache (only 1: split).	0.0292041301727	5
Coq.ZArith.Int.i2z_1	40	0	search with cache (only 1: reflexivity).	0.0114648342133	1
Coq.ZArith.Int.i2z_2	40	0	search with cache (only 1: reflexivity).	0.0110790729523	1
Coq.ZArith.Int.i2z_3	40	0	search with cache (only 1: reflexivity).	0.0109980106354	1
Coq.ZArith.Int.i2z_add	40	0	search with cache (only 1: trivial).	0.0112309455872	1
Coq.ZArith.Int.i2z_opp	40	0	search with cache (only 1: trivial).	0.0113189220428	1
Coq.ZArith.Int.i2z_sub	40	0	search with cache (only 1: reflexivity).	0.0112271308899	1
Coq.ZArith.Int.i2z_mul	40	0	search with cache (only 1: reflexivity).	0.0113561153412	1
Coq.ZArith.Int.i2z_max	40	0	search with cache (only 1: reflexivity).	0.0110499858856	1
Coq.ZArith.Int.i2z_eqb	40	0	search with cache (only 1: trivial).	0.0112471580505	1
Coq.ZArith.Int.i2z_leb	40	0	search with cache (only 1: reflexivity).	0.0108969211578	1
Coq.ZArith.Int.i2z_ltb	40	0	search with cache (only 1: reflexivity).	0.0113301277161	1
Coq.ZArith.Zpower.Zpower_nat_0_r	40	0	search with cache (only 1: constructor).	0.012943983078	1
Coq.ZArith.Zpower.Zpower_nat_succ_r	40	1	search with cache (only 1: reflexivity).	0.0131721496582	2
Coq.ZArith.Zpower.Zpower_nat_is_exp	40
Coq.ZArith.Zpower.Zpower_pos_nat	40
Coq.ZArith.Zpower.Zpower_nat_Z	40
Coq.ZArith.Zpower.Zpower_nat_Zpower	40	11.6.3.2.1.5	search with cache (only 1: intros; only 1: induction n; only 1: trivial; only 1: apply Pos2Nat.inj_iter; only 1: simpl; only 1: easy).	10.4269180298	22051
Coq.ZArith.Zpower.Zpower_pos_is_exp	40
Coq.ZArith.Zpower.Zpower_exp	40
Coq.ZArith.Zpower.shift_nat_equiv	40	0.2.0.0	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: now f_equal).	0.0239050388336	6
Coq.ZArith.Zpower.shift_pos_equiv	40	0	search with cache (only 1: reflexivity).	0.0128710269928	1
Coq.ZArith.Zpower.shift_equiv	40
Coq.ZArith.Zpower.two_power_nat_equiv	40
Coq.ZArith.Zpower.two_power_pos_equiv	40	3	search with cache (only 1: now apply Pos.iter_swap_gen).	0.0146870613098	4
Coq.ZArith.Zpower.two_p_equiv	40	1.0.1.28	search with cache (only 1: destruct x; only 1: trivial; only 1: now apply Pos.iter_swap_gen; only 1: trivial).	0.316586017609	564
Coq.ZArith.Zpower.two_power_nat_S	40	1.0.0	search with cache (only 1: induction n; only 1: trivial; only 1: now f_equal).	0.0216619968414	4
Coq.ZArith.Zpower.shift_nat_plus	40	7.1.2.3	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: now f_equal).	0.32821893692	303
Coq.ZArith.Zpower.shift_nat_correct	40
Coq.ZArith.Zpower.two_power_nat_correct	40
Coq.ZArith.Zpower.shift_pos_nat	40	3	search with cache (only 1: apply Pos2Nat.inj_iter).	0.0140860080719	4
Coq.ZArith.Zpower.two_power_pos_nat	40
Coq.ZArith.Zpower.shift_pos_correct	40
Coq.ZArith.Zpower.two_power_pos_correct	40	1	search with cache (only 1: now apply Pos.iter_swap_gen).	0.0151159763336	2
Coq.ZArith.Zpower.two_power_pos_is_exp	40
Coq.ZArith.Zpower.two_p_is_exp	40
Coq.ZArith.Zpower.two_p_gt_ZERO	40	1.7.0.0	search with cache (only 1: destruct x; only 1: easy; only 1: easy; only 1: now destruct 1).	0.14239692688	130
Coq.ZArith.Zpower.two_p_S	40
Coq.ZArith.Zpower.two_p_pred	40
Coq.ZArith.Zpower.Zdiv_rest_correct1	40
Coq.ZArith.Zpower.Zdiv_rest_correct2	40
Coq.ZArith.Zpower.Zdiv_rest_correct	40
Coq.ZArith.Zpower.Zdiv_rest_ok	40
Coq.ZArith.Zpower.Zdiv_rest_shiftr	40
Coq.ZArith.Zwf.Zwf_well_founded	40
Coq.ZArith.Zwf.Zwf_up_well_founded	40
Coq.ZArith.auxiliary.Zne_left	40
Coq.ZArith.auxiliary.Zegal_left	40	0	search with cache (only 1: now rewrite <- Z.sub_move_0_r).	0.0206048488617	1
Coq.ZArith.auxiliary.Zle_left	40	4	search with cache (only 1: apply Z.le_0_sub).	0.0168461799622	5
Coq.ZArith.auxiliary.Zle_left_rev	40	0	search with cache (only 1: apply Z.le_0_sub).	0.0139000415802	1
Coq.ZArith.auxiliary.Zlt_left_rev	40	3	search with cache (only 1: apply Z.lt_0_sub).	0.0161678791046	4
Coq.ZArith.auxiliary.Zlt_left_lt	40	0	search with cache (only 1: apply Z.lt_0_sub).	0.0131649971008	1
Coq.ZArith.auxiliary.Zlt_left	40
Coq.ZArith.auxiliary.Zge_left	40	1.0.1.6	search with cache (only 1: intros; only 1: apply Z.le_0_sub; only 1: unfold Z.le, Z.ge; only 1: now case Z.compare_spec).	0.103183984756	46
Coq.ZArith.auxiliary.Zgt_left	40	0.3.1.0.1	search with cache (only 1: intros; only 1: change (-1) with (- Z.succ 0); only 1: Z.swap_greater; only 1: rewrite Z.add_shuffle0; only 1: now apply Z.le_0_sub, Z.le_succ_l, Z.lt_0_sub).	0.145931005478	44
Coq.ZArith.auxiliary.Zgt_left_gt	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0320858955383	2
Coq.ZArith.auxiliary.Zgt_left_rev	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0325999259949	2
Coq.ZArith.auxiliary.Zle_mult_approx	40	43.0.2	search with cache (only 1: intros; only 1: Z.swap_greater; only 1: Z.order_pos).	27.7290301323	29719
Coq.ZArith.auxiliary.Zmult_le_approx	40
Coq.ZArith.Zmax.Zmax_spec	40
Coq.ZArith.Zmax.Zmax_left	40
Coq.ZArith.Zmax.Zpos_max_1	40	0.0.0.133	search with cache (only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	6.72791695595	21037
Coq.ZArith.Zmin.Zmin_spec	40
Coq.ZArith.Zmin.Zmin_irreducible	40
Coq.ZArith.Zmin.Zmin_le_prime_inf	40
Coq.ZArith.Zmin.Zpos_min_1	40	0.0.0.106	search with cache (only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	9.75341200829	28351
Coq.ZArith.Zgcd_alt.Zgcdn_pos	40
Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	40
Coq.ZArith.Zgcd_alt.fibonacci_pos	40
Coq.ZArith.Zgcd_alt.fibonacci_incr	40
Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	40	17.2.1.53	search with cache (only 1: destruct a; only 1: eauto; only 1: auto with zarith; only 1: auto).	18.4421958923	15851
Coq.ZArith.Zgcd_alt.Zgcdn_opp	40	2.0.2.15	search with cache (only 1: destruct n; only 1: simpl; only 1: lia; only 1: now destruct a).	0.334299087524	271
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	40
Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	40
Coq.ZArith.Zorder.Ztrichotomy_inf	40
Coq.ZArith.Zorder.Ztrichotomy	40	0.1.0.0.0.0.1.2.0.0.0	search with cache (only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: left; only 1: auto; only 1: left; only 1: auto; only 1: right; only 1: right; only 1: auto).	2.56846785545	2406
Coq.ZArith.Zorder.dec_Zne	40
Coq.ZArith.Zorder.dec_Zgt	40
Coq.ZArith.Zorder.dec_Zge	40
Coq.ZArith.Zorder.not_Zeq	40
Coq.ZArith.Zorder.Zle_not_lt	40	1	search with cache (only 1: Z.order).	0.0156638622284	2
Coq.ZArith.Zorder.Zlt_not_le	40	2	search with cache (only 1: Z.order).	0.017110824585	3
Coq.ZArith.Zorder.Zle_not_gt	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_ngt).	0.027734041214	2
Coq.ZArith.Zorder.Zgt_not_le	40	0.3	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_nge).	0.0271129608154	5
Coq.ZArith.Zorder.Znot_ge_lt	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_nge).	0.0251231193542	2
Coq.ZArith.Zorder.Znot_lt_ge	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_ngt).	0.0269131660461	2
Coq.ZArith.Zorder.Znot_gt_le	40	0	search with cache (only 1: trivial).	0.0130598545074	1
Coq.ZArith.Zorder.Znot_le_gt	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).	0.0274751186371	2
Coq.ZArith.Zorder.not_Zne	40	8.0.0.4	search with cache (only 1: destruct (Z.eq_decidable n m); only 1: subst; only 1: auto; only 1: now subst).	0.51908993721	371
Coq.ZArith.Zorder.Zgt_asym	40	2.4.6.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: apply Z.le_ngt; only 1: Z.order).	0.48655796051	206
Coq.ZArith.Zorder.Zgt_irrefl	40	12	search with cache (only 1: easy || now destruct 1).	0.155001878738	152
Coq.ZArith.Zorder.Zle_lt_or_eq	40
Coq.ZArith.Zorder.Zgt_trans	40	0.0	search with cache (only 1: Z.swap_greater; only 1: now transitivity m).	0.0988399982452	2
Coq.ZArith.Zorder.Zle_gt_trans	40	3.1	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0420899391174	6
Coq.ZArith.Zorder.Zgt_le_trans	40	0.0	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0350351333618	2
Coq.ZArith.Zorder.Zge_trans	40	4.6	search with cache (only 1: Z.swap_greater; only 1: now transitivity m).	0.150795936584	73
Coq.ZArith.Zorder.Zsucc_le_compat	40
Coq.ZArith.Zorder.Zsucc_lt_compat	40
Coq.ZArith.Zorder.Zsucc_gt_compat	40	0.3	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0626389980316	16
Coq.ZArith.Zorder.Zsucc_gt_reg	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0318667888641	2
Coq.ZArith.Zorder.Zsucc_le_reg	40	0	search with cache (only 1: apply Z.succ_le_mono).	0.0132040977478	1
Coq.ZArith.Zorder.Zsucc_lt_reg	40	0	search with cache (only 1: apply Z.succ_lt_mono).	0.0131340026855	1
Coq.ZArith.Zorder.Zgt_succ	40	0.1	search with cache (only 1: apply Z.lt_gt; only 1: apply Z.lt_succ_diag_r).	0.0147140026093	3
Coq.ZArith.Zorder.Znot_le_succ	40	0.0	search with cache (only 1: apply Z.nle_gt; only 1: apply Z.lt_succ_diag_r).	0.015154838562	2
Coq.ZArith.Zorder.Zgt_le_succ	40	6.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.0313198566437	9
Coq.ZArith.Zorder.Zle_gt_succ	40
Coq.ZArith.Zorder.Zle_lt_succ	40	0	search with cache (only 1: apply Z.lt_succ_r).	0.0133368968964	1
Coq.ZArith.Zorder.Zlt_le_succ	40	0	search with cache (only 1: apply Z.le_succ_l).	0.0133590698242	1
Coq.ZArith.Zorder.Zgt_succ_le	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	0.0239191055298	2
Coq.ZArith.Zorder.Zlt_succ_le	40	0	search with cache (only 1: apply Z.lt_succ_r).	0.0140399932861	1
Coq.ZArith.Zorder.Zle_succ_gt	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.0253949165344	2
Coq.ZArith.Zorder.Zle_succ_le	40
Coq.ZArith.Zorder.Zgt_succ_pred	40
Coq.ZArith.Zorder.Zlt_succ_pred	40	0	search with cache (only 1: apply Z.lt_succ_lt_pred).	0.0137720108032	1
Coq.ZArith.Zorder.Zlt_0_le_0_pred	40
Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	0.2	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.0250999927521	4
Coq.ZArith.Zorder.Zle_neg_pos	40	0	search with cache (only 1: easy).	0.0256989002228	1
Coq.ZArith.Zorder.Zgt_pos_0	40	5.0	search with cache (only 1: symmetry; only 1: now subst).	0.0280079841614	15
Coq.ZArith.Zorder.Zle_0_pos	40	0	search with cache (only 1: easy).	0.0214591026306	1
Coq.ZArith.Zorder.Zlt_neg_0	40	0	search with cache (only 1: reflexivity).	0.0136909484863	1
Coq.ZArith.Zorder.Zle_0_nat	40	8.3.2.23	search with cache (only 1: induction n; only 1: easy; only 1: cbn; only 1: easy).	0.629274129868	1082
Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40	2.0.0.6.0	search with cache (only 1: Z.swap_greater; only 1: intro; only 1: apply Z.lt_eq_cases; only 1: apply Z.lt_succ_r; only 1: auto).	0.69628405571	390
Coq.ZArith.Zorder.Zplus_gt_compat_l	40
Coq.ZArith.Zorder.Zplus_gt_compat_r	40
Coq.ZArith.Zorder.Zplus_le_compat_l	40
Coq.ZArith.Zorder.Zplus_le_compat_r	40
Coq.ZArith.Zorder.Zplus_lt_compat_l	40	0	search with cache (only 1: apply Z.add_lt_mono_l).	0.0138831138611	1
Coq.ZArith.Zorder.Zplus_lt_compat_r	40	1	search with cache (only 1: apply Z.add_lt_mono_r).	0.0155620574951	2
Coq.ZArith.Zorder.Zplus_le_reg_l	40	1	search with cache (only 1: apply Z.add_le_mono_l).	0.0150589942932	2
Coq.ZArith.Zorder.Zplus_le_reg_r	40	0	search with cache (only 1: apply Z.add_le_mono_r).	0.0131161212921	1
Coq.ZArith.Zorder.Zplus_lt_reg_l	40	0	search with cache (only 1: apply Z.add_lt_mono_l).	0.0131099224091	1
Coq.ZArith.Zorder.Zplus_lt_reg_r	40	1	search with cache (only 1: apply Z.add_lt_mono_r).	0.0147638320923	2
Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	0.0305089950562	2
Coq.ZArith.Zorder.Zplus_gt_reg_r	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	0.0325260162354	3
Coq.ZArith.Zorder.Zmult_le_compat_r	40
Coq.ZArith.Zorder.Zmult_le_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_r	40
Coq.ZArith.Zorder.Zmult_gt_compat_r	40	0.10	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.747284889221	592
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40	0.5	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.302468776703	129
Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40	0.5.0.3.0	search with cache (only 1: intros; only 1: destruct p; only 1: discriminate; only 1: now apply Z.mul_le_mono_nonneg_r; only 1: discriminate).	0.669304847717	480
Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0146780014038	1
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_l	40	0	search with cache (only 1: apply Z.mul_lt_mono_pos_l).	0.0144329071045	1
Coq.ZArith.Zorder.Zmult_gt_compat_l	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.0429408550262	2
Coq.ZArith.Zorder.Zmult_ge_compat_r	40	2.6.0	search with cache (only 1: intros; only 1: Z.swap_greater; only 1: now apply Z.mul_le_mono_nonneg_r).	0.254218816757	99
Coq.ZArith.Zorder.Zmult_ge_compat_l	40	1.0.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_l).	0.0432670116425	4
Coq.ZArith.Zorder.Zmult_ge_compat	40
Coq.ZArith.Zorder.Zmult_le_compat	40	1.0	search with cache (only 1: intros; only 1: now apply Z.mul_le_mono_nonneg).	0.0156500339508	3
Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0261189937592	3
Coq.ZArith.Zorder.Zmult_lt_reg_r	40	1	search with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.0150980949402	2
Coq.ZArith.Zorder.Zmult_le_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0248250961304	2
Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	0	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0133600234985	1
Coq.ZArith.Zorder.Zmult_ge_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0418999195099	2
Coq.ZArith.Zorder.Zmult_gt_reg_r	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0428221225739	3
Coq.ZArith.Zorder.Zmult_lt_compat	40
Coq.ZArith.Zorder.Zmult_lt_compat2	40
Coq.ZArith.Zorder.Zmult_gt_0_compat	40	1.0.9	search with cache (only 1: rewrite Z.mul_comm; only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.687271118164	183
Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0248317718506	3
Coq.ZArith.Zorder.Zmult_le_0_reg_r	40
Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40
Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	0.0246870517731	3
Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40	1.0.14	search with cache (only 1: rewrite Z.mul_comm; only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	1.05148887634	561
Coq.ZArith.Zorder.Zlt_square_simpl	40
Coq.ZArith.Zorder.Zgt_square_simpl	40	0.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).	0.0401418209076	3
Coq.ZArith.Zorder.Zeq_plus_swap	40
Coq.ZArith.Zorder.Zlt_0_minus_lt	40
Coq.ZArith.Zorder.Zle_0_minus_le	40
Coq.ZArith.Zorder.Zle_minus_le_0	40	0	search with cache (only 1: apply Z.le_0_sub).	0.012640953064	1
Coq.ZArith.Zbool.Zle_cases	40
Coq.ZArith.Zbool.Zlt_cases	40
Coq.ZArith.Zbool.Zge_cases	40
Coq.ZArith.Zbool.Zgt_cases	40
Coq.ZArith.Zbool.Zle_bool_imp_le	40	0.1.0	search with cache (only 1: case Z.leb_spec; only 1: now Z.swap_greater; only 1: discriminate).	0.0213389396667	4
Coq.ZArith.Zbool.Zle_imp_le_bool	40	0	search with cache (only 1: apply Z.leb_le).	0.0125789642334	1
Coq.ZArith.Zbool.Zle_bool_antisym	40
Coq.ZArith.Zbool.Zle_bool_trans	40	0.0	search with cache (only 1: rewrite !Z.leb_le; only 1: Z.order).	0.0393750667572	2
Coq.ZArith.Zbool.Zle_bool_total	40
Coq.ZArith.Zbool.Zle_bool_plus_mono	40
Coq.ZArith.Zbool.Zone_pos	40	10	search with cache (only 1: trivial).	0.0310320854187	24
Coq.ZArith.Zbool.Zone_min_pos	40
Coq.ZArith.Zbool.Zle_is_le_bool	40	0.8	search with cache (only 1: symmetry; only 1: apply Z.leb_le).	0.0363450050354	20
Coq.ZArith.Zbool.Zge_is_le_bool	40	0.6.1	search with cache (only 1: symmetry; only 1: Z.swap_greater; only 1: apply Z.leb_le).	0.130966901779	38
Coq.ZArith.Zbool.Zlt_is_lt_bool	40
Coq.ZArith.Zbool.Zgt_is_gt_bool	40	0.4.1.0	search with cache (only 1: rewrite Z.gtb_ltb; only 1: symmetry; only 1: Z.swap_greater; only 1: apply Z.ltb_lt).	0.11530995369	27
Coq.ZArith.Zbool.Zlt_is_le_bool	40
Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.1.0	search with cache (only 1: rewrite Z.leb_le; only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.0235319137573	4
Coq.ZArith.Zbool.Zeq_is_eq_bool	40
Coq.ZArith.Zbool.Zeq_bool_eq	40	2.1.0.0.0.0	search with cache (only 1: unfold Zeq_bool; only 1: rewrite <- Z.compare_eq_iff; only 1: destruct Z.compare; only 1: now split; only 1: discriminate; only 1: discriminate).	0.0307309627533	9
Coq.ZArith.Zbool.Zeq_bool_neq	40
Coq.ZArith.Zbool.Zeq_bool_if	40
Coq.ZArith.ZArith_dec.Dcompare_inf	40
Coq.ZArith.ZArith_dec.Zcompare_rect	40	0.0.0.0	search with cache (only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.0213069915771	4
Coq.ZArith.ZArith_dec.Zcompare_rec	40	0.0.0.0	search with cache (only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.0212700366974	4
Coq.ZArith.ZArith_dec.Z_lt_dec	40
Coq.ZArith.ZArith_dec.Z_le_dec	40
Coq.ZArith.ZArith_dec.Z_gt_dec	40
Coq.ZArith.ZArith_dec.Z_ge_dec	40
Coq.ZArith.ZArith_dec.Z_lt_ge_dec	40	0.0.0.0.2.1	search with cache (only 1: unfold Z.ge; only 1: unfold Z.lt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	0.132280111313	30
Coq.ZArith.ZArith_dec.Z_lt_le_dec	40
Coq.ZArith.ZArith_dec.Z_le_gt_dec	40	0.0.0.0.2.6	search with cache (only 1: unfold Z.le; only 1: unfold Z.gt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	2.52779507637	1124
Coq.ZArith.ZArith_dec.Z_gt_le_dec	40
Coq.ZArith.ZArith_dec.Z_ge_lt_dec	40	1.0.2.0.2	search with cache (only 1: elim Z_lt_ge_dec; only 1: right; only 1: trivial; only 1: unfold Z.ge; only 1: now left || (right; tauto)).	0.0728387832642	37
Coq.ZArith.ZArith_dec.Z_le_lt_eq_dec	40
Coq.ZArith.ZArith_dec.Zlt_cotrans	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	40
Coq.ZArith.ZArith_dec.not_Zeq_inf	40
Coq.ZArith.ZArith_dec.Z_dec	40	3.0.0.0.0.2.0.0.0.0	search with cache (only 1: intros; only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: auto; only 1: left; only 1: left; only 1: auto; only 1: auto).	4.54258298874	2809
Coq.ZArith.ZArith_dec.Z_dec'	40
Coq.ZArith.ZArith_dec.Z_zerop	40
Coq.ZArith.Zpow_alt.Piter_mul_acc	40
Coq.ZArith.Zpow_alt.Piter_op_square	40
Coq.ZArith.Zpow_alt.Zpower_equiv	40
Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	0	search with cache (only 1: trivial).	0.0123450756073	1
Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40	0.2.4.1.3.0	search with cache (only 1: destruct b as [| p| p]; only 1: unfold Zpower_alt, Z.pow, Z.pow_pos; only 1: Z.order_pos; only 1: intros Hb; only 1: now elim Hb; only 1: trivial).	1.38392710686	976
Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40
Coq.Program.Wf.Fix_F_eq	40	0.4	search with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).	0.0335559844971	30
Coq.Program.Wf.Fix_F_inv	40	0.11.16.1.0	search with cache (only 1: destruct r using Acc_inv_dep; only 1: intros; only 1: rewrite <- Wf.Fix_F_eq; only 1: rewrite <- Wf.Fix_F_eq; only 1: auto).	4.58893203735	11371
Coq.Program.Wf.Fix_eq	40
Coq.Program.Wf.fix_sub_eq	40	0.0.0.0.0.0	search with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.0191259384155	6
Coq.Program.Wf.measure_wf	40
Coq.Program.Wf.F_unfold	40	0.0	search with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).	0.012748003006	2
Coq.Program.Wf.Fix_F_sub_rect	40	0.7.10.0	search with cache (only 1: intros; only 1: induction (Rwf x); only 1: rewrite <- Fix_F_eq; only 1: auto).	0.340527057648	597
Coq.Program.Wf.eq_Fix_F_sub	40	0.0.3.0	search with cache (only 1: induction (Rwf x); only 1: rewrite F_unfold; only 1: rewrite F_unfold; only 1: auto).	0.0234808921814	7
Coq.Program.Wf.Fix_sub_rect	40
Coq.Program.Wf.fix_sub_eq_ext	40
Coq.Program.Subset.subset_eq	40
Coq.Program.Subset.match_eq_rewrite	40	0.1.2.28.8.1.6.23	search with cache (only 1: intro p; only 1: intro; only 1: intro Streicher_K; only 1: intro; only 1: intro H; only 1: destruct H; only 1: subst; only 1: auto).	12.8645567894	103746
Coq.Program.Equality.JMeq_eq_refl	40	16	search with cache (only 1: apply UIP).	0.027626991272	108
Coq.Program.Equality.UIP_refl_refl	40	5	search with cache (only 1: apply UIP_refl).	0.0172810554504	31
Coq.Program.Equality.inj_pairT2_refl	40	11	search with cache (only 1: apply UIP).	0.0477569103241	69
Coq.Program.Equality.solution_left	40	1.14.15	search with cache (only 1: intros; only 1: rewrite H; only 1: assumption).	0.223792791367	997
Coq.Program.Equality.solution_right	40	11.0.0	search with cache (only 1: intros; only 1: subst; only 1: assumption).	0.0364379882812	140
Coq.Program.Equality.deletion	40	2.1	search with cache (only 1: intros; only 1: assumption).	0.00699687004089	5
Coq.Program.Equality.simplification_heq	40	0.6.9.41	search with cache (only 1: intros h1 h2; only 1: subst; only 1: apply h1; only 1: trivial).	0.751780033112	4235
Coq.Program.Equality.simplification_existT2	40	0.0.0.14.15	search with cache (only 1: intros H J; only 1: apply H; only 1: apply eq_dep_eq; only 1: apply eq_sigT_eq_dep; only 1: assumption).	0.420926809311	1294
Coq.Program.Equality.simplification_existT1	40	4.4.7.13.17.44	search with cache (only 1: intro eq_dep_eq; only 1: intros; only 1: apply eq_dep_eq; only 1: dependent rewrite H; only 1: reflexivity; only 1: assumption).	5.60601711273	39525
Coq.Program.Equality.simplification_K	40	0.0.3.2	search with cache (only 1: intro eq_dep_eq; only 1: intros; only 1: rewrite UIP_refl; only 1: assumption).	0.0117089748383	9
Coq.Program.Combinators.compose_id_left	40	0	search with cache (only 1: reflexivity).	0.00576901435852	1
Coq.Program.Combinators.compose_id_right	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00711894035339	2
Coq.Program.Combinators.compose_assoc	40	3	search with cache (only 1: trivial).	0.00633311271667	4
Coq.Program.Combinators.flip_flip	40	1.0	search with cache (only 1: intros; only 1: reflexivity).	0.00731086730957	3
Coq.Program.Combinators.prod_uncurry_curry	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00773000717163	2
Coq.Program.Combinators.prod_curry_uncurry	40
Coq.Sorting.PermutEq.multiplicity_In	40
Coq.Sorting.PermutEq.multiplicity_In_O	40
Coq.Sorting.PermutEq.multiplicity_In_S	40	0.0.0.0.0	search with cache (only 1: intros; only 1: eapply In_InA, multiplicity_InA in H; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances).	0.0323669910431	5
Coq.Sorting.PermutEq.multiplicity_NoDup	40
Coq.Sorting.PermutEq.NoDup_permut	40
Coq.Sorting.PermutEq.permut_In_In	40
Coq.Sorting.PermutEq.permut_cons_In	40
Coq.Sorting.PermutEq.permut_nil	40
Coq.Sorting.PermutEq.permutation_Permutation	40
Coq.Sorting.PermutEq.permut_length_1	40	0.30	search with cache (only 1: apply permut_length_1; only 1: auto with typeclass_instances).	2.4589509964	4136
Coq.Sorting.PermutEq.permut_length_2	40
Coq.Sorting.PermutEq.permut_length	40	0.0.0.1.0.0.0.0.1.0.5.0.0.0.0.1	search with cache (only 1: induction l1; only 1: intros l2 H; only 1: rewrite (PermutSetoid.permut_nil (eqA:=permut_sym (eqA_dec:=H))); only 1: auto; only 1: intros l2 H; only 1: destruct (in_split _ _ (permut_cons_In H)) as (h2, (t2, H1)); only 1: subst l2; only 1: rewrite app_length; only 1: simpl; only 1: rewrite <- plus_n_Sm; only 1: f_equal; only 1: rewrite <- app_length; only 1: apply IHl1; only 1: apply permut_remove_hd with a; only 1: auto with typeclass_instances; only 1: auto with typeclass_instances).	13.2065370083	14496
Coq.Sorting.PermutEq.permutation_map	40
Coq.Sorting.Mergesort.Sorted_merge	40
Coq.Sorting.Mergesort.Permuted_merge	40
Coq.Sorting.Mergesort.Sorted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Permuted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sorted_merge_stack	40	2.0.0.0.3.1.0.6.0	search with cache (only 1: induction stack as [| [| ]]; only 1: constructor; only 1: intros; only 1: simpl; only 1: destruct H; only 1: apply Sorted_merge; only 1: auto; only 1: auto; only 1: apply IHstack).	2.09956288338	3516
Coq.Sorting.Mergesort.Permuted_merge_stack	40
Coq.Sorting.Mergesort.Sorted_iter_merge	40
Coq.Sorting.Mergesort.Permuted_iter_merge	40
Coq.Sorting.Mergesort.Sorted_sort	40
Coq.Sorting.Mergesort.LocallySorted_sort	40
Coq.Sorting.Mergesort.Permuted_sort	40
Coq.Sorting.Mergesort.StronglySorted_sort	40
Coq.Sorting.Mergesort.leb_total	40
Coq.Sorting.Permutation.Permutation_nil	40
Coq.Sorting.Permutation.Permutation_nil_cons	40
Coq.Sorting.Permutation.Permutation_refl	40
Coq.Sorting.Permutation.Permutation_sym	40	8.0.0.0.40	search with cache (only 1: induction 1; only 1: constructor; only 1: discriminate || auto; only 1: discriminate || auto; only 1: eauto with arith).	12.0094327927	40668
Coq.Sorting.Permutation.Permutation_trans	40	0.0.3.4	search with cache (only 1: intros; only 1: apply perm_trans with (l' := l'); only 1: assumption; only 1: assumption).	0.0193798542023	27
Coq.Sorting.Permutation.Permutation_cons	40	0.0.2.14	search with cache (only 1: intros l l' Hperm; only 1: induction Hperm; only 1: constructor; only 1: auto).	0.441176176071	354
Coq.Sorting.Permutation.Permutation_in	40
Coq.Sorting.Permutation.Permutation_in'	40	0.0.0.0.0.0.0.5.3.12.12	search with cache (only 1: intros l l' x Hperm; only 1: subst; only 1: intros l HF; only 1: induction HF; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto; only 1: tauto).	8.76764202118	11782
Coq.Sorting.Permutation.Permutation_app_tail	40
Coq.Sorting.Permutation.Permutation_app_head	40	0.0.2.0.23	search with cache (only 1: induction l; only 1: simpl; only 1: auto using perm_skip; only 1: simpl; only 1: auto).	1.33319020271	2368
Coq.Sorting.Permutation.Permutation_app	40
Coq.Sorting.Permutation.Permutation_app'	40
Coq.Sorting.Permutation.Permutation_add_inside	40
Coq.Sorting.Permutation.Permutation_cons_append	40
Coq.Sorting.Permutation.Permutation_app_comm	40
Coq.Sorting.Permutation.Permutation_cons_app	40
Coq.Sorting.Permutation.Permutation_Add	40
Coq.Sorting.Permutation.Permutation_middle	40	1.1.1	search with cache (only 1: intros; only 1: rewrite app_comm_cons, Permutation_cons_append; only 1: now rewrite <- app_assoc).	0.0721650123596	6
Coq.Sorting.Permutation.Permutation_rev	40	1.0.1.1.6.0.2.6	search with cache (only 1: induction l; only 1: simpl; only 1: constructor; only 1: simpl; only 1: induction l; only 1: auto; only 1: rewrite <- IHl; only 1: auto).	21.3693010807	1710
Coq.Sorting.Permutation.Permutation_rev'	40
Coq.Sorting.Permutation.Permutation_length	40
Coq.Sorting.Permutation.Permutation_length'	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: repeat red; only 1: intros l l' Hperm; only 1: induction Hperm; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).	0.0253109931946	10
Coq.Sorting.Permutation.Permutation_ind_bis	40
Coq.Sorting.Permutation.Permutation_nil_app_cons	40
Coq.Sorting.Permutation.Permutation_Add_inv	40
Coq.Sorting.Permutation.Permutation_app_inv	40
Coq.Sorting.Permutation.Permutation_cons_inv	40
Coq.Sorting.Permutation.Permutation_cons_app_inv	40
Coq.Sorting.Permutation.Permutation_app_inv_l	40
Coq.Sorting.Permutation.Permutation_app_inv_r	40
Coq.Sorting.Permutation.Permutation_length_1_inv	40
Coq.Sorting.Permutation.Permutation_length_1	40
Coq.Sorting.Permutation.Permutation_length_2_inv	40
Coq.Sorting.Permutation.Permutation_length_2	40
Coq.Sorting.Permutation.NoDup_Permutation	40
Coq.Sorting.Permutation.NoDup_Permutation_bis	40
Coq.Sorting.Permutation.Permutation_NoDup	40
Coq.Sorting.Permutation.Permutation_NoDup'	40
Coq.Sorting.Permutation.Permutation_map	40	13.1.1.1.2.4.1	search with cache (only 1: induction 1; only 1: trivial; only 1: simpl; only 1: auto; only 1: simpl; only 1: trivial; only 1: eauto).	20.2389988899	7560
Coq.Sorting.Permutation.Permutation_map'	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: intros Su; only 1: induction 1; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: eauto).	1.04803109169	19
Coq.Sorting.Permutation.nat_bijection_Permutation	40
Coq.Sorting.Permutation.adapt_injective	40
Coq.Sorting.Permutation.adapt_ok	40
Coq.Sorting.Permutation.Permutation_nth_error	40
Coq.Sorting.Permutation.Permutation_nth_error_bis	40
Coq.Sorting.Permutation.Permutation_nth	40
Coq.Sorting.PermutSetoid.list_contents_app	40
Coq.Sorting.PermutSetoid.permut_refl	40	13	search with cache (only 1: split).	0.0987279415131	136
Coq.Sorting.PermutSetoid.permut_sym	40	0.5	search with cache (only 1: unfold permutation; only 1: auto with datatypes).	0.0288710594177	13
Coq.Sorting.PermutSetoid.permut_trans	40	0.26.1.4	search with cache (only 1: unfold permutation, meq; only 1: intros; only 1: rewrite <- H0; only 1: trivial).	23.2791879177	34026
Coq.Sorting.PermutSetoid.permut_cons_eq	40
Coq.Sorting.PermutSetoid.permut_cons	40	1.0.0.0	search with cache (only 1: unfold permutation; only 1: simpl; only 1: intros; only 1: auto with datatypes).	0.0285818576813	5
Coq.Sorting.PermutSetoid.permut_app	40
Coq.Sorting.PermutSetoid.permut_add_inside_eq	40
Coq.Sorting.PermutSetoid.permut_add_inside	40
Coq.Sorting.PermutSetoid.permut_add_cons_inside_eq	40
Coq.Sorting.PermutSetoid.permut_add_cons_inside	40
Coq.Sorting.PermutSetoid.permut_middle	40
Coq.Sorting.PermutSetoid.permut_sym_app	40	11.11.7.0.11	search with cache (only 1: unfold permutation, meq; only 1: intros; only 1: repeat rewrite list_contents_app in *; only 1: simpl; only 1: auto with arith).	38.300825119	22625
Coq.Sorting.PermutSetoid.permut_rev	40
Coq.Sorting.PermutSetoid.permut_conv_inv	40	0.0.1.0.0.0.0.0.6.18	search with cache (only 1: intro a; only 1: unfold permutation, meq; only 1: intros; only 1: generalize (H a0); only 1: clear H; only 1: simpl; only 1: destruct (eqA_dec a a0); only 1: auto with arith; only 1: simpl; only 1: trivial).	26.779640913	30131
Coq.Sorting.PermutSetoid.permut_app_inv1	40
Coq.Sorting.PermutSetoid.if_eqA_then	40	18.0.12.5.9	search with cache (only 1: clear - eqA_equiv; only 1: intuition; only 1: destruct (eqA_dec a a') as [HeqA| ]; only 1: trivial; only 1: congruence).	6.39327597618	13943
Coq.Sorting.PermutSetoid.permut_app_inv2	40	0.1.1.0.0.0.0.0.0.0.0	search with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: intros; only 1: apply plus_reg_l with (multiplicity (list_contents l) a); only 1: rewrite H; only 1: trivial).	1.93514990807	603
Coq.Sorting.PermutSetoid.permut_remove_hd_eq	40
Coq.Sorting.PermutSetoid.permut_remove_hd	40
Coq.Sorting.PermutSetoid.if_eqA_else	40
Coq.Sorting.PermutSetoid.if_eqA_refl	40	32.0.0.0.0	search with cache (only 1: intros; only 1: destruct eqA_dec as [_| NEQ]; only 1: auto; only 1: contradict NEQ; only 1: reflexivity).	6.95158290863	12157
Coq.Sorting.PermutSetoid.if_eqA	40
Coq.Sorting.PermutSetoid.if_eqA_rewrite_l	40
Coq.Sorting.PermutSetoid.if_eqA_rewrite_r	40
Coq.Sorting.PermutSetoid.multiplicity_eqA	40
Coq.Sorting.PermutSetoid.multiplicity_InA	40
Coq.Sorting.PermutSetoid.multiplicity_InA_O	40
Coq.Sorting.PermutSetoid.multiplicity_InA_S	40	0.0.0.0.1	search with cache (only 1: intros l a; only 1: rewrite multiplicity_InA; only 1: destruct (multiplicity (list_contents l) a); only 1: auto with arith; only 1: auto with arith).	0.584608078003	58
Coq.Sorting.PermutSetoid.multiplicity_NoDupA	40
Coq.Sorting.PermutSetoid.permut_InA_InA	40
Coq.Sorting.PermutSetoid.permut_cons_InA	40	7.0.0.4.1.4.0.2.17	search with cache (only 1: intros l1 l2; only 1: unfold permutation, meq; only 1: intro a; only 1: simpl; only 1: rewrite multiplicity_InA; only 1: intros; only 1: specialize (H a); only 1: rewrite if_eqA_refl in H; only 1: omega).	31.9618358612	38655
Coq.Sorting.PermutSetoid.permut_nil	40
Coq.Sorting.PermutSetoid.permut_length_1	40
Coq.Sorting.PermutSetoid.permut_length_2	40
Coq.Sorting.PermutSetoid.permut_length	40
Coq.Sorting.PermutSetoid.NoDupA_equivlistA_permut	40
Coq.Sorting.PermutSetoid.permut_map	40
Coq.Sorting.PermutSetoid.Permutation_impl_permutation	40
Coq.Sorting.PermutSetoid.permut_eqA	40	4.0.4.2.0.0	search with cache (only 1: induction 1; only 1: apply permut_refl; only 1: apply permut_cons_eq; only 1: auto using Equivalence_Reflexive, permut_refl; only 1: auto using Equivalence_Reflexive; only 1: auto using Equivalence_Reflexive, permut_refl).	0.575906991959	394
Coq.Sorting.PermutSetoid.permutation_Permutation	40
Coq.Sorting.Sorted.HdRel_inv	40	0.3.0	search with cache (only 1: intros; only 1: inversion H; only 1: trivial).	0.0250399112701	6
Coq.Sorting.Sorted.Sorted_inv	40	1.0	search with cache (only 1: inversion 1; only 1: auto).	0.0195651054382	3
Coq.Sorting.Sorted.Sorted_rect	40
Coq.Sorting.Sorted.Sorted_LocallySorted_iff	40
Coq.Sorting.Sorted.StronglySorted_inv	40	0.1	search with cache (only 1: inversion 1; only 1: auto).	0.058436870575	29
Coq.Sorting.Sorted.StronglySorted_rect	40
Coq.Sorting.Sorted.StronglySorted_rec	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).	0.0206089019775	3
Coq.Sorting.Sorted.StronglySorted_Sorted	40	2.2.3.0.2	search with cache (only 1: induction 1 as [| a l [| ]]; only 1: auto using Sorted, LocallySorted, HdRel; only 1: auto using Sorted, LocallySorted, HdRel; only 1: inversion H1; only 1: auto using Sorted, LocallySorted, HdRel).	1.31460309029	691
Coq.Sorting.Sorted.Sorted_extends	40
Coq.Sorting.Sorted.Sorted_StronglySorted	40
Coq.Sorting.Heap.leA_Tree_Leaf	40	0.2	search with cache (only 1: simpl; only 1: auto with arith).	0.0132920742035	4
Coq.Sorting.Heap.leA_Tree_Node	40	0.0	search with cache (only 1: simpl; only 1: auto with datatypes).	0.0115571022034	2
Coq.Sorting.Heap.invert_heap	40	0.17	search with cache (only 1: inversion_clear 1; only 1: auto with datatypes).	0.200309038162	194
Coq.Sorting.Heap.is_heap_rect	40
Coq.Sorting.Heap.is_heap_rec	40	0.4.1.0.0.2.0.1.0.0	search with cache (only 1: simple induction T; only 1: auto with datatypes; only 1: intros a G PG D PD PN; only 1: elim (invert_heap a G D); only 1: intros H1 H2; only 1: elim H2; only 1: intros H3 H4; only 1: elim H4; only 1: auto with datatypes; only 1: auto with datatypes).	1.77264904976	1602
Coq.Sorting.Heap.low_trans	40
Coq.Sorting.Heap.Equivalence_instance_0	40
Coq.Sorting.Heap.Proper_instance_0	40	2.0.2.2.1.1	search with cache (only 1: red; only 1: red; only 1: red; only 1: red; only 1: simpl; only 1: auto with datatypes).	0.264631032944	180
Coq.Sorting.Heap.merge	40
Coq.Sorting.Heap.insert	40	2.0.29	search with cache (only 1: fix merge0 1; only 1: intros; only 1: auto with datatypes).	2.05106401443	4406
Coq.Sorting.Heap.list_to_heap	40	1.31	search with cache (only 1: fix merge0 1; only 1: auto using node_is_heap with datatypes).	0.377583026886	1076
Coq.Sorting.Heap.heap_to_list	40	1.39	search with cache (only 1: fix merge0 1; only 1: auto using node_is_heap, nil_is_heap, leA_Tree_Leaf with datatypes).	1.26692485809	3225
Coq.Sorting.Heap.treesort	40	4.26	search with cache (only 1: fix merge0 1; only 1: auto with datatypes).	0.349948883057	740
Coq.Init.Wf.Acc_inv	40	0.1.28	search with cache (only 1: intro H; only 1: destruct 1; only 1: trivial).	0.150690078735	1417
Coq.Init.Wf.well_founded_induction_type	40
Coq.Init.Wf.well_founded_induction	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.00729393959045	4
Coq.Init.Wf.well_founded_ind	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.00734090805054	4
Coq.Init.Wf.Fix_F_eq	40	0.7.45.10	search with cache (only 1: intro; only 1: intro H; only 1: destruct H; only 1: auto).	0.878551006317	9817
Coq.Init.Wf.Fix_F_inv	40
Coq.Init.Wf.Fix_eq	40
Coq.Init.Wf.well_founded_induction_type_2	40
Coq.Init.Tactics.decide_left	40	2.17.0.2.16.1.10	search with cache (only 1: intro p; only 1: intro H; only 1: destruct H; only 1: auto; only 1: intro H; only 1: induction n; only 1: exact H).	3.68937420845	39607
Coq.Init.Tactics.decide_right	40	1.0.0.0	search with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	0.00795388221741	5
Coq.Init.Peano.pred_Sn	40	0	search with cache (only 1: reflexivity).	0.00485706329346	1
Coq.Init.Peano.not_eq_S	40	3.4.7.0	search with cache (only 1: red; only 1: intro A; only 1: unfold not; only 1: auto).	0.14356803894	1003
Coq.Init.Peano.O_S	40	2	search with cache (only 1: discriminate).	0.00525808334351	3
Coq.Init.Peano.n_Sn	40
Coq.Init.Peano.plus_n_O	40	0.10.2.2.0.1	search with cache (only 1: induction n; only 1: auto; only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	0.272505998611	1590
Coq.Init.Peano.plus_O_n	40	1.0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.00738382339478	6
Coq.Init.Peano.plus_n_Sm	40	0.0.0.2	search with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	0.00748205184937	6
Coq.Init.Peano.plus_Sn_m	40	0.0.0.0.0.0	search with cache (only 1: intros n m; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.00799798965454	6
Coq.Init.Peano.mult_n_O	40	0.0.0.3	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: auto).	0.00713896751404	7
Coq.Init.Peano.mult_n_Sm	40
Coq.Init.Peano.le_pred	40
Coq.Init.Peano.le_S_n	40
Coq.Init.Peano.le_0_n	40	1.0.3	search with cache (only 1: induction n; only 1: auto; only 1: auto).	0.00648999214172	7
Coq.Init.Peano.le_n_S	40	0.1.0.0.2	search with cache (only 1: induction 1; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).	0.014358997345	40
Coq.Init.Peano.nat_case	40	3.5.2	search with cache (only 1: induction n; only 1: auto; only 1: auto).	0.0436050891876	231
Coq.Init.Peano.nat_double_ind	40	0.0.15.32.0.5	search with cache (only 1: induction n; only 1: auto; only 1: intros; only 1: elim m; only 1: auto; only 1: auto).	1.99823307991	23537
Coq.Init.Peano.max_l	40
Coq.Init.Peano.max_r	40	0.1.2.0.6.0.3.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: trivial; only 1: destruct m; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	28.2768478394	80830
Coq.Init.Peano.min_l	40	0.1.2.0.1.0.0.2.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	5.74290084839	13517
Coq.Init.Peano.min_r	40	0.1.2.0.0.0.0.1.0.0.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	4.5644659996	11316
Coq.Init.Peano.nat_rect_succ_r	40	4.6.4.0.26	search with cache (only 1: induction n as [| p H]; only 1: auto; only 1: simpl; only 1: destruct H; only 1: trivial).	0.641139030457	4575
Coq.Init.Peano.nat_rect_plus	40	1.1.0.1.1.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: rewrite <- ?IHn; only 1: trivial).	0.0168318748474	17
Coq.Init.Datatypes.andb_prop	40	1.1.2.44.3.5.42	search with cache (only 1: intro H; only 1: destruct H; only 1: auto; only 1: intro H; only 1: destruct H; only 1: auto; only 1: auto).	37.8409099579	463842
Coq.Init.Datatypes.andb_true_intro	40	1.2.3.28.45	search with cache (only 1: intro H; only 1: destruct 1; only 1: destruct H; only 1: assumption; only 1: assumption).	2.76789712906	39071
Coq.Init.Datatypes.eq_true_ind_r	40	1.20.5.15.18	search with cache (only 1: intro H; only 1: intro A; only 1: intro H1; only 1: destruct 1; only 1: assumption).	0.520495891571	7645
Coq.Init.Datatypes.eq_true_rec_r	40	0.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00630497932434	3
Coq.Init.Datatypes.eq_true_rect_r	40	0.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00700211524963	3
Coq.Init.Datatypes.surjective_pairing	40	2.55	search with cache (only 1: destruct p; only 1: reflexivity).	0.808457136154	8772
Coq.Init.Datatypes.injective_projections	40	0.3.5.14.35.64	search with cache (only 1: intros A B [H1 H2]; only 1: intros [? ?]; only 1: simpl in *; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	24.5792188644	343275
Coq.Init.Datatypes.pair_equal_spec	40
Coq.Init.Datatypes.rew_pair	40	2.7	search with cache (only 1: destruct H; only 1: reflexivity).	0.0144991874695	23
Coq.Init.Datatypes.comparison_eq_stable	40
Coq.Init.Datatypes.CompOpp_involutive	40	2.2.2.1.18	search with cache (only 1: intro H; only 1: destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H).	0.136910915375	875
Coq.Init.Datatypes.CompOpp_inj	40	1.3.3.3.1.3.3.3.1.0	search with cache (only 1: destruct c, c'; only 1: reflexivity || destruct H; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: reflexivity || destruct H; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: reflexivity || destruct H).	9.76635408401	57133
Coq.Init.Datatypes.CompOpp_iff	40
Coq.Init.Datatypes.CompareSpec2Type	40
Coq.Init.Datatypes.CompSpec2Type	40	0.9.0.1.0.9.0.1.0.9.0.1.3.15	search with cache (only 1: intro H1; only 1: destruct c; only 1: red; only 1: constructor; only 1: inversion_clear H; only 1: trivial; only 1: red; only 1: constructor; only 1: inversion_clear H; only 1: trivial; only 1: red; only 1: constructor; only 1: inversion_clear H; only 1: trivial).	13.8452358246	148139
Coq.Init.Logic.proj1	40
Coq.Init.Logic.proj2	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00300812721252	2
Coq.Init.Logic.iff_refl	40
Coq.Init.Logic.iff_trans	40	2.2.0.1.1	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.0101020336151	37
Coq.Init.Logic.iff_sym	40	0.0.0.2	search with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.00400114059448	6
Coq.Init.Logic.and_iff_compat_l	40	2.0.2.0.2.0.2.0.1.4	search with cache (only 1: destruct 1; only 1: split; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto).	0.0748779773712	1055
Coq.Init.Logic.and_iff_compat_r	40	0.0.1.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply Hl; only 1: assumption; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply Hr; only 1: assumption; only 1: assumption).	0.0440039634705	519
Coq.Init.Logic.or_iff_compat_l	40
Coq.Init.Logic.or_iff_compat_r	40	0.1.0.5.1.1.0.1.0.0.1.1.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: apply Hl; only 1: assumption; only 1: right; only 1: assumption; only 1: intros [?| ?]; only 1: left; only 1: apply Hr; only 1: assumption; only 1: right; only 1: assumption).	0.318255901337	6551
Coq.Init.Logic.imp_iff_compat_l	40	10.10.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	0.0639359951019	951
Coq.Init.Logic.imp_iff_compat_r	40	12.12.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	0.114692926407	1968
Coq.Init.Logic.not_iff_compat	40	0.0.0.0	search with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: auto; only 1: auto).	0.00531721115112	4
Coq.Init.Logic.neg_false	40	1.6.8.1.1.0	search with cache (only 1: split; only 1: split; only 1: trivial; only 1: destruct 1; only 1: intros [? ?]; only 1: auto).	0.152563810349	1654
Coq.Init.Logic.and_cancel_l	40
Coq.Init.Logic.and_cancel_r	40
Coq.Init.Logic.and_comm	40	0.0.1.0.0.0.1.0.2	search with cache (only 1: split; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial).	0.0367600917816	247
Coq.Init.Logic.and_assoc	40
Coq.Init.Logic.or_cancel_l	40
Coq.Init.Logic.or_cancel_r	40
Coq.Init.Logic.or_comm	40	0.0.0.1.2.0.0.0.1.2.2	search with cache (only 1: split; only 1: intros [?| ?]; only 1: right; only 1: exact H; only 1: left; only 1: trivial; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: exact H).	0.132019042969	1309
Coq.Init.Logic.or_assoc	40
Coq.Init.Logic.iff_and	40	4.1	search with cache (only 1: intros; only 1: auto).	0.00718188285828	14
Coq.Init.Logic.iff_to_and	40	5.5.4	search with cache (only 1: split; only 1: trivial; only 1: trivial).	0.196580886841	975
Coq.Init.Logic.inst	40	12	search with cache (only 1: trivial).	0.0148088932037	47
Coq.Init.Logic.gen	40	0.0	search with cache (only 1: unfold all; only 1: auto).	0.00505900382996	2
Coq.Init.Logic.absurd	40	0.17.3.5.0.0	search with cache (only 1: intro A; only 1: unfold not; only 1: intro H1; only 1: intro H; only 1: destruct 1; only 1: exact H).	0.516358852386	10588
Coq.Init.Logic.eq_sym	40	0.3	search with cache (only 1: destruct 1; only 1: trivial).	0.00711989402771	5
Coq.Init.Logic.eq_trans	40	0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.00566697120667	3
Coq.Init.Logic.eq_trans_r	40	0.0	search with cache (only 1: destruct 2; only 1: trivial).	0.00490999221802	2
Coq.Init.Logic.f_equal	40	0.1	search with cache (only 1: destruct 1; only 1: trivial).	0.00591206550598	3
Coq.Init.Logic.not_eq_sym	40	0.35.2	search with cache (only 1: destruct 2; only 1: apply H; only 1: trivial).	0.40110707283	4548
Coq.Init.Logic.eq_sind_r	40	2.1.1	search with cache (only 1: intros ? ? ? Fl Fr; only 1: destruct 1; only 1: auto).	0.00637006759644	7
Coq.Init.Logic.eq_ind_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00541496276855	3
Coq.Init.Logic.eq_rec_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00531387329102	3
Coq.Init.Logic.eq_rect_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00569009780884	3
Coq.Init.Logic.f_equal_dep	40
Coq.Init.Logic.f_equal_dep2	40	0.3.4	search with cache (only 1: destruct H; only 1: destruct 1; only 1: reflexivity).	0.00995302200317	10
Coq.Init.Logic.rew_opp_r	40	0.0	search with cache (only 1: destruct H; only 1: reflexivity).	0.00565409660339	2
Coq.Init.Logic.rew_opp_l	40	0.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.00634002685547	3
Coq.Init.Logic.f_equal2	40	0.2.1	search with cache (only 1: destruct 2; only 1: destruct H; only 1: trivial).	0.00659918785095	6
Coq.Init.Logic.f_equal3	40	0.1.0.0.5.3	search with cache (only 1: intro H; only 1: intro H1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0399050712585	184
Coq.Init.Logic.f_equal4	40	0.1.0.0.0.5.3	search with cache (only 1: intro H; only 1: intro H1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.060558795929	252
Coq.Init.Logic.f_equal5	40	0.1.0.0.0.0.5.3	search with cache (only 1: intro H; only 1: intro H1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.155710935593	336
Coq.Init.Logic.f_equal_compose	40	0.2.31.41	search with cache (only 1: intros A x P H y H0; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).	2.68475008011	39126
Coq.Init.Logic.eq_trans_refl_l	40	5.1	search with cache (only 1: destruct e; only 1: reflexivity).	0.00652384757996	8
Coq.Init.Logic.eq_trans_refl_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00556778907776	2
Coq.Init.Logic.eq_sym_involutive	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00557589530945	2
Coq.Init.Logic.eq_trans_sym_inv_l	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.0056209564209	2
Coq.Init.Logic.eq_trans_sym_inv_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00565886497498	2
Coq.Init.Logic.eq_trans_assoc	40	0.3.10.0	search with cache (only 1: destruct e; only 1: intros h1 h2; only 1: destruct h2; only 1: trivial).	0.0542049407959	356
Coq.Init.Logic.rew_map	40	0.4	search with cache (only 1: destruct H; only 1: reflexivity).	0.0071439743042	6
Coq.Init.Logic.eq_trans_map	40	0.14.1.0.10.52.7	search with cache (only 1: intro H; only 1: intros A C h1 h2; only 1: intros ? ? ? Fl Fr; only 1: destruct 1; only 1: destruct 1; only 1: destruct Fr; only 1: reflexivity).	16.8691878319	204324
Coq.Init.Logic.map_subst	40	0.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.00676012039185	3
Coq.Init.Logic.map_subst_map	40	0.1	search with cache (only 1: destruct H; only 1: reflexivity).	0.00702905654907	3
Coq.Init.Logic.rew_swap	40	0.1.3.1	search with cache (only 1: destruct H; only 1: intros; only 1: destruct H; only 1: reflexivity).	0.00909805297852	26
Coq.Init.Logic.rew_compose	40	2.0.0	search with cache (only 1: intros; only 1: destruct H2; only 1: reflexivity).	0.00668096542358	5
Coq.Init.Logic.eq_id_comm_l	40
Coq.Init.Logic.eq_id_comm_r	40
Coq.Init.Logic.eq_refl_map_distr	40	0	search with cache (only 1: reflexivity).	0.00592708587646	1
Coq.Init.Logic.eq_trans_map_distr	40	0.1.2.12.3	search with cache (only 1: destruct e; only 1: intros; only 1: rewrite eq_trans_refl_l; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).	0.230067014694	961
Coq.Init.Logic.eq_sym_map_distr	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00601100921631	2
Coq.Init.Logic.eq_trans_sym_distr	40	0.2.0	search with cache (only 1: destruct e'; only 1: destruct e; only 1: reflexivity).	0.00709891319275	5
Coq.Init.Logic.eq_trans_rew_distr	40	0.7.5.5	search with cache (only 1: destruct e; only 1: intros; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).	0.160860061646	536
Coq.Init.Logic.rew_const	40	0.19.6.11	search with cache (only 1: intro H; only 1: intros ? ? ? Fl Fr; only 1: destruct Fl; only 1: reflexivity).	0.418987035751	5446
Coq.Init.Logic.unique_existence	40
Coq.Init.Logic.forall_exists_unique_domain_coincide	40
Coq.Init.Logic.forall_exists_coincide_unique_domain	40
Coq.Init.Logic.exists_inhabited	40	7.9	search with cache (only 1: intros A B []; only 1: auto).	0.0437641143799	480
Coq.Init.Logic.inhabited_covariant	40	1.16.18	search with cache (only 1: intro H; only 1: destruct 1; only 1: auto).	0.189090013504	2486
Coq.Init.Logic.eq_stepl	40	0.4.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.00416207313538	7
Coq.Init.Logic.iff_stepl	40	4.4.1.4.0.18	search with cache (only 1: intro H; only 1: intros A B [H1 H2]; only 1: intros [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	1.89201784134	12863
Coq.Init.Logic.eq_ex_uncurried	40
Coq.Init.Logic.rew_ex	40
Coq.Init.Logic.eq_ex2_uncurried	40	0.0.5.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct H; only 1: destruct p; only 1: reflexivity).	0.00974702835083	19
Coq.Init.Logic.rew_ex2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.00661897659302	2
Coq.Init.Logic_Type.identity_sym	40	0.2	search with cache (only 1: destruct 1; only 1: trivial).	0.00522994995117	4
Coq.Init.Logic_Type.identity_trans	40	0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.00525212287903	3
Coq.Init.Logic_Type.identity_congr	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00425601005554	2
Coq.Init.Logic_Type.not_identity_sym	40	0.1.4.4	search with cache (only 1: intros h1 h2; only 1: apply h1; only 1: destruct h2; only 1: trivial).	0.046660900116	231
Coq.Init.Logic_Type.identity_ind_r	40	4.4.4	search with cache (only 1: intros ? ? ? Fl Fr; only 1: destruct 1; only 1: auto).	0.0494799613953	259
Coq.Init.Logic_Type.identity_rec_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.00485301017761	3
Coq.Init.Logic_Type.identity_rect_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.00491309165955	3
Coq.Init.Specif.sigT_eta	40	2.5	search with cache (only 1: destruct p; only 1: split).	0.00975012779236	9
Coq.Init.Specif.sig_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.00723099708557	2
Coq.Init.Specif.sigT2_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.00832891464233	2
Coq.Init.Specif.sig2_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.00875091552734	2
Coq.Init.Specif.exists_to_inhabited_sig	40	0.0.20.6	search with cache (only 1: destruct 1; only 1: split; only 1: exists x; only 1: assumption).	0.124892950058	1221
Coq.Init.Specif.inhabited_sig_to_exists	40	3.2.0.59.48	search with cache (only 1: intro H1; only 1: elim H1; only 1: intros [x y]; only 1: exists x; only 1: assumption).	1.35397076607	28684
Coq.Init.Specif.eq_existT_uncurried	40	0.0.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0142800807953	4
Coq.Init.Specif.eq_sigT_uncurried	40
Coq.Init.Specif.eq_existT_curried	40	0.0.0	search with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.00976896286011	3
Coq.Init.Specif.eq_existT_curried_map	40	0.0	search with cache (only 1: destruct p, q; only 1: reflexivity).	0.0142810344696	2
Coq.Init.Specif.eq_existT_curried_trans	40
Coq.Init.Specif.eq_existT_curried_congr	40	0.6.12.2.8	search with cache (only 1: destruct r, q, p; only 1: simpl in *; only 1: symmetry; only 1: destruct H; only 1: reflexivity).	1.84187412262	5093
Coq.Init.Specif.eq_sigT_uncurried_iff	40
Coq.Init.Specif.eq_sigT_rect	40
Coq.Init.Specif.rew_sigT	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.01176404953	2
Coq.Init.Specif.eq_exist_uncurried	40	0.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct p, q; only 1: reflexivity).	0.0134170055389	3
Coq.Init.Specif.eq_sig_uncurried	40	0.0.0.0.0.2	search with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.029228925705	8
Coq.Init.Specif.eq_sig_rect	40
Coq.Init.Specif.eq_sig_uncurried_iff	40	0.0.0.1.2.4.3.4	search with cache (only 1: split; only 1: intro p; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: apply eq_exist_uncurried).	0.687476158142	1885
Coq.Init.Specif.rew_sig	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0135848522186	2
Coq.Init.Specif.eq_existT2_uncurried	40
Coq.Init.Specif.eq_sigT2_uncurried	40	0.0.0.3.5.0	search with cache (only 1: destruct pqr as [p q r]; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.2049741745	246
Coq.Init.Specif.eq_sigT2_uncurried_iff	40	0.0.0.0.0.6.4.7.2	search with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: apply eq_existT2_uncurried).	3.14880108833	7919
Coq.Init.Specif.eq_sigT2_rect	40
Coq.Init.Specif.rew_sigT2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0139999389648	2
Coq.Init.Specif.eq_exist2_uncurried	40	0.0.0.0	search with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl in *; only 1: reflexivity).	0.0155980587006	4
Coq.Init.Specif.eq_sig2_uncurried	40	0.0.0.0.0.2	search with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.0229589939117	8
Coq.Init.Specif.eq_sig2_uncurried_iff	40	0.0.0.0.0.2.2.4.2	search with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: apply eq_exist2_uncurried).	1.5867960453	2579
Coq.Init.Specif.eq_sig2_rect	40
Coq.Init.Specif.rew_sig2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0136559009552	2
Coq.Init.Specif.Choice	40
Coq.Init.Specif.Choice2	40
Coq.Init.Specif.bool_choice	40
Coq.Init.Specif.dependent_choice	40
Coq.Init.Specif.absurd_set	40	0.0.0	search with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).	0.00849390029907	3
Coq.QArith.QOrderedType.lt_strorder	40	0.0.0.0.0.0.0.3.35.37	search with cache (only 1: split; only 1: intro; only 1: apply Z.nlt_ge; only 1: auto with zarith; only 1: red; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: auto).	8.49447011948	18531
Coq.QArith.QOrderedType.lt_compat	40	0.0.0	search with cache (only 1: intros p q H r s H'; only 1: rewrite 2!Qlt_alt, H, H'; only 1: auto with *).	0.0316529273987	3
Coq.QArith.Qreduction.Qred_correct	40
Coq.QArith.Qreduction.Qred_complete	40
Coq.QArith.Qreduction.Qred_eq_iff	40
Coq.QArith.Qreduction.Qred_comp_Proper	40
Coq.QArith.Qreduction.Qplus'_correct	40
Coq.QArith.Qreduction.Qmult'_correct	40	1.0	search with cache (only 1: intros; only 1: apply Qred_correct).	0.0117988586426	3
Coq.QArith.Qreduction.Qminus'_correct	40	1.0	search with cache (only 1: intros; only 1: apply Qred_correct).	0.011910200119	3
Coq.QArith.Qreduction.Qplus'_comp_Proper	40
Coq.QArith.Qreduction.Qmult'_comp_Proper	40	0.0.5.0.8	search with cache (only 1: intro p; only 1: intros; only 1: unfold Qmult'; only 1: rewrite H, H0; only 1: auto with qarith).	1.68137001991	582
Coq.QArith.Qreduction.Qminus'_comp_Proper	40	0.0.6.0.9	search with cache (only 1: intro p; only 1: intros; only 1: unfold Qminus'; only 1: rewrite H, H0; only 1: auto with qarith).	1.93948101997	779
Coq.QArith.Qreduction.Qred_opp	40
Coq.QArith.Qreduction.Qred_compare	40	0.0	search with cache (only 1: intros; only 1: now rewrite !Qred_correct).	0.0618889331818	2
Coq.QArith.Qreduction.Qred_le	40	9	search with cache (only 1: now rewrite !Qred_correct).	0.189517021179	53
Coq.QArith.Qreduction.Qred_lt	40	10	search with cache (only 1: now rewrite !Qred_correct).	0.296281099319	79
Coq.QArith.Qcabs.Qred_abs	40
Coq.QArith.Qcabs.Qcabs_canon	40
Coq.QArith.Qcabs.Qcabs_case	40
Coq.QArith.Qcabs.Qcabs_pos	40	1.0.1.0.1.0.1.33.1.1	search with cache (only 1: unfold Qcle, Qcminus; only 1: intros; only 1: apply Qc_is_canon; only 1: simpl in *; only 1: apply Qabs_case; only 1: reflexivity; only 1: intros H0; only 1: setoid_replace x with 0; only 1: reflexivity; only 1: auto with qarith).	8.87928795815	14413
Coq.QArith.Qcabs.Qcabs_neg	40
Coq.QArith.Qcabs.Qcabs_nonneg	40	0.1.0.0.0	search with cache (only 1: Qc_unfolds; only 1: apply Qabs_case; only 1: auto; only 1: rewrite <- (Qred_correct 0); only 1: apply (Qopp_le_compat x 0)).	0.0355718135834	6
Coq.QArith.Qcabs.Qcabs_opp	40
Coq.QArith.Qcabs.Qcabs_triangle	40	0.8.7	search with cache (only 1: Qc_unfolds; only 1: repeat rewrite Qred_correct; only 1: apply Qabs_triangle).	1.42797994614	600
Coq.QArith.Qcabs.Qcabs_Qcmult	40
Coq.QArith.Qcabs.Qcabs_Qcminus	40
Coq.QArith.Qcabs.Qcle_Qcabs	40
Coq.QArith.Qcabs.Qcabs_triangle_reverse	40
Coq.QArith.Qcabs.Qcabs_Qcle_condition	40	0.2.9.8	search with cache (only 1: Qc_unfolds; only 1: repeat rewrite Qred_correct; only 1: rewrite Qabs_Qle_condition; only 1: intuition).	6.15972208977	2478
Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_null	40
Coq.QArith.Qpower.Qpower_positive_1	40
Coq.QArith.Qpower.Qpower_1	40
Coq.QArith.Qpower.Qpower_positive_0	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: simpl; only 1: reflexivity).	0.0231750011444	9
Coq.QArith.Qpower.Qpower_0	40
Coq.QArith.Qpower.Qpower_not_0_positive	40
Coq.QArith.Qpower.Qpower_pos_positive	40
Coq.QArith.Qpower.Qpower_pos	40
Coq.QArith.Qpower.Qmult_power_positive	40
Coq.QArith.Qpower.Qmult_power	40
Coq.QArith.Qpower.Qinv_power_positive	40
Coq.QArith.Qpower.Qinv_power	40
Coq.QArith.Qpower.Qdiv_power	40
Coq.QArith.Qpower.Qinv_power_n	40
Coq.QArith.Qpower.Qpower_plus_positive	40
Coq.QArith.Qpower.Qpower_opp	40
Coq.QArith.Qpower.Qpower_minus_positive	40
Coq.QArith.Qpower.Qpower_plus	40
Coq.QArith.Qpower.Qpower_plus'	40
Coq.QArith.Qpower.Qpower_mult_positive	40
Coq.QArith.Qpower.Qpower_mult	40
Coq.QArith.Qpower.Zpower_Qpower	40
Coq.QArith.Qpower.Qsqr_nonneg	40
Coq.QArith.Qpower.Qpower_decomp	40
Coq.QArith.Qfield.Qsrt	40
Coq.QArith.Qfield.Qsft	40
Coq.QArith.Qfield.Qpower_theory	40	1.2.1.0.0.0.3	search with cache (only 1: constructor; only 1: intros; only 1: destruct n; only 1: simpl; only 1: auto with *; only 1: red; only 1: auto with qarith).	0.488410949707	308
Coq.QArith.Qfield.ex1	40	0	search with cache (only 1: exact Qmult_plus_distr_l).	0.0144650936127	1
Coq.QArith.Qfield.ex2	40	3.1	search with cache (only 1: intros; only 1: ring).	0.029100894928	6
Coq.QArith.Qfield.ex3	40	0.1	search with cache (only 1: intros; only 1: ring).	0.0343251228333	3
Coq.QArith.Qfield.ex4	40	1	search with cache (only 1: ring).	0.0235719680786	2
Coq.QArith.Qfield.ex5	40	0	search with cache (only 1: ring).	0.0240271091461	1
Coq.QArith.Qfield.ex6	40	0	search with cache (only 1: ring).	0.0238831043243	1
Coq.QArith.Qfield.ex7	40	0.1	search with cache (only 1: intros; only 1: ring).	0.0274519920349	3
Coq.QArith.Qfield.ex8	40	1.0	search with cache (only 1: intro; only 1: ring).	0.0273661613464	3
Coq.QArith.Qfield.ex9	40	1.0	search with cache (only 1: intro; only 1: ring).	0.0271990299225	3
Coq.QArith.Qfield.ex10	40
Coq.QArith.Qfield.Qopp_plus	40	2.1.0.0.2	search with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	0.0585329532623	11
Coq.QArith.Qfield.Qopp_opp	40	0.0.0.0	search with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).	0.0339710712433	4
Coq.QArith.Qcanon.Qred_identity	40
Coq.QArith.Qcanon.Qred_identity2	40
Coq.QArith.Qcanon.Qred_iff	40
Coq.QArith.Qcanon.Qc_is_canon	40
Coq.QArith.Qcanon.Qc_decomp	40	0.0.0.0.0.0.0	search with cache (only 1: intros (q, hq) (q', hq') H; only 1: simpl in *; only 1: subst q'; only 1: f_equal; only 1: apply eq_proofs_unicity; only 1: intros; only 1: repeat decide equality).	0.0925438404083	7
Coq.QArith.Qcanon.Qred_involutive	40	2.0.16	search with cache (only 1: intros E; only 1: apply Qred_complete; only 1: apply Qred_correct).	1.02272391319	1888
Coq.QArith.Qcanon.Q2Qc_eq_iff	40
Coq.QArith.Qcanon.Qceq_alt	40
Coq.QArith.Qcanon.Qclt_alt	40	1.2.0.3	search with cache (only 1: split; only 1: unfold Qccompare; only 1: now intros <-; only 1: auto).	0.136373996735	73
Coq.QArith.Qcanon.Qcgt_alt	40
Coq.QArith.Qcanon.Qcle_alt	40	4.4.3.0.2	search with cache (only 1: unfold Qccompare; only 1: intros; only 1: split; only 1: auto; only 1: auto).	0.745483875275	1045
Coq.QArith.Qcanon.Qcge_alt	40
Coq.QArith.Qcanon.Qc_eq_dec	40
Coq.QArith.Qcanon.Q_apart_0_1	40	7	search with cache (only 1: discriminate).	0.0443699359894	24
Coq.QArith.Qcanon.Qcplus_assoc	40
Coq.QArith.Qcanon.Qcplus_0_l	40
Coq.QArith.Qcanon.Qcplus_0_r	40
Coq.QArith.Qcanon.Qcplus_comm	40	30.9.18	search with cache (only 1: intros (a, b) (c, d); only 1: qc; only 1: ring).	36.8466100693	60435
Coq.QArith.Qcanon.Qcopp_involutive	40
Coq.QArith.Qcanon.Qcplus_opp_r	40
Coq.QArith.Qcanon.Qcmult_assoc	40	20.15.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring_simplify; only 1: intuition).	5.56558513641	7155
Coq.QArith.Qcanon.Qcmult_0_l	40	2.7.2	search with cache (only 1: intros; only 1: apply Qc_is_canon; only 1: auto with qarith).	0.603299856186	437
Coq.QArith.Qcanon.Qcmult_0_r	40
Coq.QArith.Qcanon.Qcmult_1_l	40
Coq.QArith.Qcanon.Qcmult_1_r	40	0.1.0.0	search with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_1_l).	0.0340399742126	5
Coq.QArith.Qcanon.Qcmult_comm	40	14.15.1.0	search with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: auto with qarith).	2.04672598839	3603
Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	12.26.0.1	search with cache (only 1: intros; only 1: qc; only 1: ring_simplify; only 1: split).	15.8515169621	15329
Coq.QArith.Qcanon.Qcmult_plus_distr_l	40	12.27.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring_simplify; only 1: split).	15.498609066	14941
Coq.QArith.Qcanon.Qcmult_integral	40
Coq.QArith.Qcanon.Qcmult_integral_l	40
Coq.QArith.Qcanon.Qcmult_inv_r	40
Coq.QArith.Qcanon.Qcmult_inv_l	40	0.0.2.0.0	search with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).	0.0362529754639	7
Coq.QArith.Qcanon.Qcinv_mult_distr	40
Coq.QArith.Qcanon.Qcdiv_mult_l	40
Coq.QArith.Qcanon.Qcmult_div_r	40
Coq.QArith.Qcanon.Qcle_refl	40	3.101.3	search with cache (only 1: intro H; only 1: red; only 1: auto with qarith).	29.8627018929	134458
Coq.QArith.Qcanon.Qcle_antisym	40	24.0	search with cache (only 1: intros (q, hq) (q', hq') H; only 1: auto with qarith).	1.63439702988	1699
Coq.QArith.Qcanon.Qcle_trans	40
Coq.QArith.Qcanon.Qclt_not_eq	40
Coq.QArith.Qcanon.Qclt_le_weak	40	1.5.1	search with cache (only 1: unfold Qclt; only 1: unfold Qcle; only 1: auto with qarith).	0.127104043961	40
Coq.QArith.Qcanon.Qcle_lt_trans	40
Coq.QArith.Qcanon.Qclt_le_trans	40
Coq.QArith.Qcanon.Qclt_trans	40	3.0.2.1	search with cache (only 1: intros; only 1: eapply Qlt_le_trans; only 1: eauto; only 1: auto with qarith).	0.0300769805908	18
Coq.QArith.Qcanon.Qcnot_lt_le	40	3.0	search with cache (only 1: unfold Qcle, Qclt; only 1: auto with qarith).	0.181359052658	33
Coq.QArith.Qcanon.Qcnot_le_lt	40	4.0	search with cache (only 1: unfold Qcle, Qclt; only 1: auto with qarith).	0.0317239761353	20
Coq.QArith.Qcanon.Qclt_not_le	40	5.0	search with cache (only 1: unfold Qcle, Qclt; only 1: auto with qarith).	0.0241339206696	15
Coq.QArith.Qcanon.Qcle_not_lt	40	6.0	search with cache (only 1: unfold Qcle, Qclt; only 1: auto with qarith).	0.0239479541779	16
Coq.QArith.Qcanon.Qcle_lt_or_eq	40
Coq.QArith.Qcanon.Qc_dec	40
Coq.QArith.Qcanon.Qclt_le_dec	40
Coq.QArith.Qcanon.Qcopp_le_compat	40
Coq.QArith.Qcanon.Qcle_minus_iff	40
Coq.QArith.Qcanon.Qclt_minus_iff	40
Coq.QArith.Qcanon.Qcplus_le_compat	40
Coq.QArith.Qcanon.Qcmult_le_compat_r	40
Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40
Coq.QArith.Qcanon.Qcmult_lt_compat_r	40
Coq.QArith.Qcanon.Qcpower_1	40
Coq.QArith.Qcanon.Qcpower_0	40	1.0.4.5.0	search with cache (only 1: induction n; only 1: unfold Q2Qc; only 1: tauto; only 1: simpl; only 1: auto with qarith).	0.730313062668	864
Coq.QArith.Qcanon.Qcpower_pos	40
Coq.QArith.Qcanon.Qc_eq_bool_correct	40
Coq.QArith.Qcanon.Qcrt	40
Coq.QArith.Qcanon.Qcft	40
Coq.QArith.Qcanon.test_field	40	0.0.4.3.0.0	search with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_r; only 1: auto).	0.437496900558	320
Coq.QArith.Qreals.IZR_nz	40	0	search with cache (only 1: auto with real).	0.015722990036	1
Coq.QArith.Qreals.eqR_Qeq	40
Coq.QArith.Qreals.Qeq_eqR	40
Coq.QArith.Qreals.Rle_Qle	40
Coq.QArith.Qreals.Qle_Rle	40
Coq.QArith.Qreals.Rlt_Qlt	40
Coq.QArith.Qreals.Qlt_Rlt	40
Coq.QArith.Qreals.Q2R_plus	40
Coq.QArith.Qreals.Q2R_mult	40	0.1.1.0.0.0.11.0	search with cache (only 1: unfold Qplus, Qeq, Q2R; only 1: simpl; only 1: intros (x1, x2) (y1, y2); only 1: unfold Qnum, Qden; only 1: simpl_mult; only 1: do 2 rewrite mult_IZR; only 1: field; only 1: auto).	6.77300882339	5934
Coq.QArith.Qreals.Q2R_opp	40
Coq.QArith.Qreals.Q2R_minus	40
Coq.QArith.Qreals.Q2R_inv	40
Coq.QArith.Qreals.Q2R_div	40
Coq.QArith.QArith_base.inject_Z_injective	40
Coq.QArith.QArith_base.Qeq_alt	40
Coq.QArith.QArith_base.Qlt_alt	40	6.1	search with cache (only 1: symmetry; only 1: reflexivity).	0.0760519504547	21
Coq.QArith.QArith_base.Qgt_alt	40
Coq.QArith.QArith_base.Qle_alt	40	3.1.1.1	search with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: reflexivity).	0.0688419342041	12
Coq.QArith.QArith_base.Qge_alt	40
Coq.QArith.QArith_base.Qcompare_antisym	40
Coq.QArith.QArith_base.Qcompare_spec	40
Coq.QArith.QArith_base.Qeq_refl	40	2.1.0	search with cache (only 1: apply Z.compare_eq_iff; only 1: apply Z.compare_eq_iff; only 1: trivial).	0.0236999988556	6
Coq.QArith.QArith_base.Qeq_sym	40	5.1	search with cache (only 1: symmetry; only 1: trivial).	0.0209050178528	8
Coq.QArith.QArith_base.Qeq_trans	40
Coq.QArith.QArith_base.Q_Setoid	40
Coq.QArith.QArith_base.Qeq_dec	40
Coq.QArith.QArith_base.Qeq_bool_iff	40
Coq.QArith.QArith_base.Qeq_bool_eq	40	1	search with cache (only 1: apply Zeq_is_eq_bool).	0.339239835739	154
Coq.QArith.QArith_base.Qeq_eq_bool	40	0	search with cache (only 1: apply Qeq_bool_iff).	0.0156950950623	1
Coq.QArith.QArith_base.Qeq_bool_neq	40
Coq.QArith.QArith_base.Qle_bool_iff	40
Coq.QArith.QArith_base.Qle_bool_imp_le	40	0	search with cache (only 1: apply Zle_is_le_bool).	0.0158030986786	1
Coq.QArith.QArith_base.Qnot_eq_sym	40	1	search with cache (only 1: auto with qarith).	0.0155029296875	2
Coq.QArith.QArith_base.Qeq_bool_comm	40
Coq.QArith.QArith_base.Qeq_bool_refl	40	0.0	search with cache (only 1: apply Qeq_bool_iff; only 1: auto with qarith).	0.018383026123	2
Coq.QArith.QArith_base.Qeq_bool_sym	40	1.0	search with cache (only 1: rewrite !Qeq_bool_iff; only 1: now symmetry).	0.0318210124969	3
Coq.QArith.QArith_base.Qeq_bool_trans	40	4.7	search with cache (only 1: rewrite !Qeq_bool_iff; only 1: eauto with qarith).	0.294372081757	100
Coq.QArith.QArith_base.Qmake_Qdiv	40	4.11.0.0	search with cache (only 1: unfold Qeq; only 1: simpl; only 1: rewrite !Z.mul_1_r; only 1: trivial).	0.911401033401	1055
Coq.QArith.QArith_base.Qplus_comp	40
Coq.QArith.QArith_base.Qopp_comp	40
Coq.QArith.QArith_base.Qminus_comp	40
Coq.QArith.QArith_base.Qmult_comp	40
Coq.QArith.QArith_base.Qinv_comp	40
Coq.QArith.QArith_base.Qdiv_comp	40
Coq.QArith.QArith_base.Qcompare_comp	40
Coq.QArith.QArith_base.Qle_comp	40
Coq.QArith.QArith_base.Qlt_compat	40
Coq.QArith.QArith_base.Qeqb_comp	40	7.1.3.8.6	search with cache (only 1: intros x x' Hx y y' Hy; only 1: apply eq_true_iff_eq; only 1: rewrite !Qeq_bool_iff; only 1: rewrite Hx, Hy; only 1: now symmetry).	19.536550045	19826
Coq.QArith.QArith_base.Qleb_comp	40
Coq.QArith.QArith_base.Q_apart_0_1	40	3.1.0.1.0	search with cache (only 1: rewrite <- Qeq_bool_iff; only 1: rewrite Qeq_bool_iff; only 1: rewrite <- Qeq_bool_iff; only 1: rewrite Qeq_bool_iff; only 1: now subst).	0.0993239879608	14
Coq.QArith.QArith_base.Qplus_assoc	40
Coq.QArith.QArith_base.Qplus_0_l	40	0.6.1.5	search with cache (only 1: unfold Qeq; only 1: simpl; only 1: intros; only 1: ring).	1.99408578873	215
Coq.QArith.QArith_base.Qplus_0_r	40	0.3.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.0537610054016	8
Coq.QArith.QArith_base.Qplus_comm	40	1.4.1.14.0.3	search with cache (only 1: unfold Qeq, Qplus; only 1: simpl in *; only 1: intros XY YZ; only 1: simpl_mult; only 1: ring_simplify; only 1: now constructor).	34.2413449287	25941
Coq.QArith.QArith_base.Qopp_involutive	40	0.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.0347919464111	4
Coq.QArith.QArith_base.Qplus_opp_r	40	0.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.300159931183	4
Coq.QArith.QArith_base.Qplus_inj_r	40
Coq.QArith.QArith_base.Qplus_inj_l	40
Coq.QArith.QArith_base.Qmult_assoc	40	1.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.0611999034882	6
Coq.QArith.QArith_base.Qmult_0_l	40	1.0.4	search with cache (only 1: unfold Qeq; only 1: simpl; only 1: auto with qarith).	0.0204360485077	8
Coq.QArith.QArith_base.Qmult_0_r	40	0.0.6.0	search with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: ring).	0.0592570304871	18
Coq.QArith.QArith_base.Qmult_1_l	40
Coq.QArith.QArith_base.Qmult_1_r	40	0.1.0.0.0.0.0.0	search with cache (only 1: intro; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).	0.0668270587921	15
Coq.QArith.QArith_base.Qmult_comm	40	1.0.0.0.0.0.2	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).	0.0561890602112	11
Coq.QArith.QArith_base.Qmult_plus_distr_r	40	1.10.0.0.0	search with cache (only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: simpl_mult; only 1: ring).	8.60500407219	2498
Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.0853490829468	5
Coq.QArith.QArith_base.Qmult_integral	40
Coq.QArith.QArith_base.Qmult_integral_l	40
Coq.QArith.QArith_base.inject_Z_plus	40	3.0.0.2.14.1.0	search with cache (only 1: generalize x, y; only 1: intro; only 1: unfold Qeq, Qplus; only 1: intros; only 1: simpl; only 1: rewrite !Z.mul_1_r; only 1: now subst).	9.65068221092	17167
Coq.QArith.QArith_base.inject_Z_mult	40	0.0.1.0	search with cache (only 1: unfold Qplus, inject_Z; only 1: unfold Qeq, Qmult; only 1: simpl; only 1: f_equal).	0.0233738422394	5
Coq.QArith.QArith_base.inject_Z_opp	40	0.2.0	search with cache (only 1: unfold Qplus, inject_Z; only 1: compute; only 1: f_equal).	0.0207619667053	5
Coq.QArith.QArith_base.Qinv_involutive	40
Coq.QArith.QArith_base.Qmult_inv_r	40
Coq.QArith.QArith_base.Qinv_mult_distr	40
Coq.QArith.QArith_base.Qdiv_mult_l	40
Coq.QArith.QArith_base.Qmult_div_r	40
Coq.QArith.QArith_base.Qinv_plus_distr	40	1.8.0.0.0	search with cache (only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: simpl_mult; only 1: ring).	0.85005903244	826
Coq.QArith.QArith_base.Qinv_minus_distr	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	0.0471639633179	5
Coq.QArith.QArith_base.Qmult_inj_r	40
Coq.QArith.QArith_base.Qmult_inj_l	40
Coq.QArith.QArith_base.Qle_refl	40	23.1.0	search with cache (only 1: apply Qle_bool_iff; only 1: apply Zle_is_le_bool; only 1: now subst).	13.7306108475	22309
Coq.QArith.QArith_base.Qle_antisym	40
Coq.QArith.QArith_base.Qle_trans	40
Coq.QArith.QArith_base.Qlt_irrefl	40	0.45	search with cache (only 1: apply Z.ge_le_iff; only 1: auto with zarith).	1.64003705978	3284
Coq.QArith.QArith_base.Qlt_not_eq	40
Coq.QArith.QArith_base.Zle_Qle	40	1.1.1.0.10	search with cache (only 1: unfold Qle; only 1: simpl; only 1: f_equal; only 1: ring; only 1: ring).	0.993000984192	806
Coq.QArith.QArith_base.Zlt_Qlt	40
Coq.QArith.QArith_base.Qle_lteq	40
Coq.QArith.QArith_base.Qlt_le_weak	40
Coq.QArith.QArith_base.Qle_lt_trans	40
Coq.QArith.QArith_base.Qlt_le_trans	40
Coq.QArith.QArith_base.Qlt_trans	40
Coq.QArith.QArith_base.Qnot_lt_le	40	13	search with cache (only 1: apply Z.ge_le_iff).	0.652380943298	60
Coq.QArith.QArith_base.Qnot_le_lt	40
Coq.QArith.QArith_base.Qlt_not_le	40	0	search with cache (only 1: apply Z.nle_gt).	0.0148320198059	1
Coq.QArith.QArith_base.Qle_not_lt	40	0	search with cache (only 1: apply Z.nlt_ge).	0.0148661136627	1
Coq.QArith.QArith_base.Qle_lt_or_eq	40
Coq.QArith.QArith_base.Q_dec	40
Coq.QArith.QArith_base.Qlt_le_dec	40
Coq.QArith.QArith_base.Qarchimedean	40
Coq.QArith.QArith_base.Qopp_le_compat	40
Coq.QArith.QArith_base.Qle_minus_iff	40
Coq.QArith.QArith_base.Qlt_minus_iff	40
Coq.QArith.QArith_base.Qplus_le_compat	40
Coq.QArith.QArith_base.Qplus_lt_le_compat	40
Coq.QArith.QArith_base.Qplus_le_l	40
Coq.QArith.QArith_base.Qplus_le_r	40	0.1.0.0.0.1.2.0.7.0	search with cache (only 1: split; only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_le_compat; only 1: auto with *; only 1: auto with *; only 1: apply Qplus_le_compat; only 1: auto with *).	19.2741110325	4997
Coq.QArith.QArith_base.Qplus_lt_l	40
Coq.QArith.QArith_base.Qplus_lt_r	40	0.0.1.0.0.0.1.0.2.0.0.6	search with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *).	15.8336498737	5696
Coq.QArith.QArith_base.Qmult_le_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	40
Coq.QArith.QArith_base.Qmult_le_r	40
Coq.QArith.QArith_base.Qmult_le_l	40	0.0.1.2.0.2.0.5	search with cache (only 1: rewrite (Qmult_comm z x), (Qmult_comm z y); only 1: split; only 1: intro; only 1: now apply Qmult_lt_0_le_reg_r with z; only 1: intro; only 1: apply Qmult_le_compat_r; only 1: auto with qarith; only 1: auto with qarith).	3.25405311584	1763
Coq.QArith.QArith_base.Qmult_lt_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_r	40
Coq.QArith.QArith_base.Qmult_lt_l	40
Coq.QArith.QArith_base.Qmult_le_0_compat	40
Coq.QArith.QArith_base.Qinv_le_0_compat	40	1.0.1.0.1.0.10	search with cache (only 1: intros [[| n| n] d]; only 1: red; only 1: auto with zarith; only 1: red; only 1: auto with zarith; only 1: red; only 1: auto with zarith).	4.2668569088	3741
Coq.QArith.QArith_base.Qle_shift_div_l	40
Coq.QArith.QArith_base.Qle_shift_inv_l	40
Coq.QArith.QArith_base.Qle_shift_div_r	40
Coq.QArith.QArith_base.Qle_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_0_compat	40	0.0.0.0	search with cache (only 1: intros [[| n| n] d] Ha; only 1: assumption; only 1: assumption; only 1: assumption).	0.0192558765411	4
Coq.QArith.QArith_base.Qlt_shift_div_l	40
Coq.QArith.QArith_base.Qlt_shift_inv_l	40	1.0.2.0.1.4.3.0.2.1	search with cache (only 1: intros a c Hc H; only 1: apply Qnot_le_lt; only 1: setoid_replace (/ c) with (1 * / c) by symmetry; apply Qmult_1_l; only 1: intros H0; only 1: apply (Qlt_not_le _ _ H); only 1: apply Qmult_lt_0_le_reg_r with (/ c); only 1: apply Qinv_lt_0_compat; only 1: assumption; only 1: setoid_replace (a * c / c) with a by apply Qdiv_mult_l; auto with *; only 1: assumption).	10.1970498562	8905
Coq.QArith.QArith_base.Qlt_shift_div_r	40
Coq.QArith.QArith_base.Qlt_shift_inv_r	40	1.0.2.0.1.4.4.0.4.2	search with cache (only 1: intros b c Hc H; only 1: apply Qnot_le_lt; only 1: setoid_replace (/ b) with (1 * / b) by symmetry; apply Qmult_1_l; only 1: intros H0; only 1: apply (Qlt_not_le _ _ H); only 1: apply Qmult_lt_0_le_reg_r with (/ b); only 1: apply Qinv_lt_0_compat; only 1: assumption; only 1: setoid_replace (c * b / b) with c by apply Qdiv_mult_l; auto with *; only 1: assumption).	7.29447197914	8244
Coq.QArith.QArith_base.Qinv_lt_contravar	40
Coq.QArith.QArith_base.Qpower_positive_comp	40
Coq.QArith.QArith_base.Qpower_comp	40
Coq.QArith.Qminmax.plus_max_distr_l	40
Coq.QArith.Qminmax.plus_max_distr_r	40
Coq.QArith.Qminmax.plus_min_distr_l	40	0.0.0.0.1.12.0	search with cache (only 1: intros; only 1: apply min_monotone; only 1: eauto with *; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).	3.75360488892	620
Coq.QArith.Qminmax.plus_min_distr_r	40	0.0.0.0.1.0.2.0	search with cache (only 1: intros; only 1: rewrite (Qplus_comm n p), (Qplus_comm m p), (Qplus_comm _ p); only 1: apply min_monotone; only 1: eauto with *; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).	0.898365974426	82
Coq.QArith.Qround.Qopp_lt_compat	40
Coq.QArith.Qround.Qfloor_Z	40	20.0.26	search with cache (only 1: simpl; only 1: intros; only 1: eauto with zarith).	2.25920820236	6392
Coq.QArith.Qround.Qceiling_Z	40
Coq.QArith.Qround.Qfloor_le	40
Coq.QArith.Qround.Qle_ceiling	40
Coq.QArith.Qround.Qle_floor_ceiling	40	0.0.2.1.0.0	search with cache (only 1: intros x; only 1: apply Qle_trans with (- - x); only 1: rewrite Qopp_involutive; only 1: auto with *; only 1: change (Qceiling x : Q) with (- Qfloor (- x)); only 1: auto with *).	0.0714230537415	15
Coq.QArith.Qround.Qlt_floor	40
Coq.QArith.Qround.Qceiling_lt	40
Coq.QArith.Qround.Qfloor_resp_le	40
Coq.QArith.Qround.Qceiling_resp_le	40
Coq.QArith.Qround.Qfloor_comp_Proper	40
Coq.QArith.Qround.Qceiling_comp_Proper	40	1.2.1.0.0	search with cache (only 1: intros x y H; only 1: apply Z.le_antisymm; only 1: auto with *; only 1: symmetry in H; only 1: auto with *).	0.250808000565	48
Coq.QArith.Qround.Zdiv_Qdiv	40
Coq.QArith.Qabs.Qabs_case	40
Coq.QArith.Qabs.Qabs_wd_Proper	40
Coq.QArith.Qabs.Qabs_pos	40
Coq.QArith.Qabs.Qabs_neg	40	0.0.0.0.0.1.0.0.0	search with cache (only 1: intros x H; only 1: apply Qabs_case; only 1: intros H0; only 1: setoid_replace x with 0; only 1: reflexivity; only 1: apply Qle_antisym; only 1: assumption; only 1: assumption; only 1: reflexivity).	0.0377061367035	10
Coq.QArith.Qabs.Qabs_nonneg	40	4.7.12.14.2.0	search with cache (only 1: intros x H; only 1: simpl in *; only 1: destruct x as [[| xn| xn] xd]; only 1: discriminate; only 1: discriminate; only 1: discriminate).	11.7388100624	31014
Coq.QArith.Qabs.Zabs_Qabs	40	4.1	search with cache (only 1: intros x H; only 1: reflexivity).	0.0236549377441	11
Coq.QArith.Qabs.Qabs_opp	40	2.2.1.0.5.10	search with cache (only 1: intros x; only 1: destruct x as [[| xn| xn] xd]; only 1: simpl; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	12.0866420269	13654
Coq.QArith.Qabs.Qabs_triangle	40
Coq.QArith.Qabs.Qabs_Qmult	40	1.4.0.2.1	search with cache (only 1: intros [xn xd] [yn yd]; only 1: unfold Qeq in *; only 1: simpl in *; only 1: repeat rewrite <- Z.abs_mul; only 1: congruence).	0.480553150177	276
Coq.QArith.Qabs.Qabs_Qinv	40
Coq.QArith.Qabs.Qabs_Qminus	40
Coq.QArith.Qabs.Qle_Qabs	40
Coq.QArith.Qabs.Qabs_triangle_reverse	40
Coq.QArith.Qabs.Qabs_Qle_condition	40
Coq.QArith.Qabs.Qabs_diff_Qle_condition	40
Coq.Classes.CMorphisms.eq_proper_proxy	40	14	search with cache (only 1: split).	0.0113101005554	75
Coq.Classes.CMorphisms.reflexive_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00479507446289	1
Coq.Classes.CMorphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00468397140503	1
Coq.Classes.CMorphisms.pointwise_pointwise	40	8.6.12.17.4	search with cache (only 1: split; only 1: intros; only 1: destruct 1; only 1: firstorder; only 1: firstorder).	24.4940929413	103093
Coq.Classes.CMorphisms.subrelation_id_proper	40	0	search with cache (only 1: firstorder).	0.00539207458496	1
Coq.Classes.CMorphisms.subrelation_respectful	40	0	search with cache (only 1: firstorder).	0.00860595703125	1
Coq.Classes.CMorphisms.subrelation_refl	40	0	search with cache (only 1: firstorder).	0.00590109825134	1
Coq.Classes.CMorphisms.subrelation_proper	40	0.0	search with cache (only 1: hnf; only 1: firstorder).	0.00787401199341	2
Coq.Classes.CMorphisms.proper_subrelation_proper_arrow	40	4	search with cache (only 1: simpl_crelation).	0.0382330417633	5
Coq.Classes.CMorphisms.pointwise_subrelation	40	0	search with cache (only 1: simpl_crelation).	0.012855052948	1
Coq.Classes.CMorphisms.forall_subrelation	40	4.0	search with cache (only 1: reduce; only 1: firstorder).	0.0124619007111	6
Coq.Classes.CMorphisms.iff_impl_subrelation	40	0.2.1	search with cache (only 1: hnf; only 1: intros A B []; only 1: trivial).	0.0152590274811	15
Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00702500343323	1
Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	1	search with cache (only 1: firstorder).	0.0096230506897	11
Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0	search with cache (only 1: firstorder).	0.00733804702759	1
Coq.Classes.CMorphisms.respectful_per_obligation_2	40
Coq.Classes.CMorphisms.flip_proper_obligation_1	40	4	search with cache (only 1: firstorder).	0.0246081352234	5
Coq.Classes.CMorphisms.trans_contra_co_type_morphism_obligation_1	40	13	search with cache (only 1: firstorder).	0.755858898163	141
Coq.Classes.CMorphisms.trans_contra_inv_impl_type_morphism_obligation_1	40	15	search with cache (only 1: firstorder).	38.1469659805	33618
Coq.Classes.CMorphisms.trans_co_impl_type_morphism_obligation_1	40
Coq.Classes.CMorphisms.trans_sym_co_inv_impl_type_morphism_obligation_1	40	12	search with cache (only 1: firstorder).	4.51475405693	4044
Coq.Classes.CMorphisms.trans_sym_contra_arrow_morphism_obligation_1	40	12	search with cache (only 1: firstorder).	11.4137899876	8483
Coq.Classes.CMorphisms.per_partial_app_type_morphism_obligation_1	40	6	search with cache (only 1: firstorder).	0.111783981323	15
Coq.Classes.CMorphisms.trans_co_eq_inv_arrow_morphism_obligation_1	40	6.9.1	search with cache (only 1: transitivity y; only 1: assumption; only 1: auto).	20.5401260853	28705
Coq.Classes.CMorphisms.PER_type_morphism_obligation_1	40	11	search with cache (only 1: firstorder).	6.46322798729	2772
Coq.Classes.CMorphisms.symmetric_equiv_flip	40	6.1	search with cache (only 1: hnf; only 1: firstorder).	0.0170049667358	9
Coq.Classes.CMorphisms.compose_proper_obligation_1	40	6	search with cache (only 1: firstorder).	0.0334410667419	7
Coq.Classes.CMorphisms.reflexive_eq_dom_reflexive	40	2.0	search with cache (only 1: intros; only 1: simpl_crelation).	0.0182440280914	4
Coq.Classes.CMorphisms.respectful_morphism	40
Coq.Classes.CMorphisms.Reflexive_partial_app_morphism	40	0	search with cache (only 1: simpl_crelation).	0.0177900791168	1
Coq.Classes.CMorphisms.flip_respectful	40	0.0	search with cache (only 1: unfold respectful, relation_equivalence in *; only 1: simpl_crelation).	0.0290610790253	2
Coq.Classes.CMorphisms.flip1	40	3.0	search with cache (only 1: reduce; only 1: auto).	0.0123221874237	5
Coq.Classes.CMorphisms.flip2	40	0	search with cache (only 1: firstorder).	0.00957298278809	1
Coq.Classes.CMorphisms.eq_subrelation	40	1	search with cache (only 1: simpl_crelation).	0.0147888660431	2
Coq.Classes.CMorphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.00944089889526	1
Coq.Classes.CMorphisms.proper_eq	40	1	search with cache (only 1: firstorder).	0.00953006744385	2
Coq.Classes.CMorphisms.proper_proper	40	1.1.1.0.0	search with cache (only 1: reduce; only 1: subst; only 1: constructor; only 1: firstorder; only 1: firstorder).	0.0214400291443	8
Coq.Classes.CMorphisms.proper_normalizes_proper	40	5.2	search with cache (only 1: simpl_crelation; only 1: firstorder).	0.020250082016	9
Coq.Classes.CMorphisms.flip_atom	40	1	search with cache (only 1: firstorder).	0.0127930641174	2
Coq.Classes.CMorphisms.flip_arrow	40
Coq.Classes.CMorphisms.proper_sym_flip	40	1.5.1	search with cache (only 1: intros x y H'; only 1: reduce; only 1: auto).	0.0166449546814	10
Coq.Classes.CMorphisms.proper_sym_flip_2	40	2.0.4.0	search with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: unfold flip, respectful; only 1: intros x x' Hxx'; only 1: firstorder).	0.160676956177	31
Coq.Classes.CMorphisms.proper_sym_impl_iff	40	4.14.1	search with cache (only 1: intros x x' Hxx'; only 1: simpl_crelation; only 1: firstorder).	8.0024189949	2782
Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.0.1.0.0	search with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0233569145203	6
Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40	0.0.1.0.0	search with cache (only 1: intros A R Sym B R' Sym' f Hf x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0285499095917	6
Coq.Classes.CMorphisms.PartialOrder_proper_type	40
Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40
Coq.Classes.CMorphisms.StrictOrder_PreOrder	40
Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40
Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40
Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40
Coq.Classes.Morphisms_Prop.well_founded_morphism	40
Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	0.0.4.9	search with cache (only 1: intros; only 1: transitivity y; only 1: auto; only 1: auto).	0.300237894058	457
Coq.Classes.CEquivalence.respecting_equiv_obligation_3	40
Coq.Classes.CEquivalence.pointwise_reflexive	40	0	search with cache (only 1: simpl_crelation).	0.0144991874695	1
Coq.Classes.CEquivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.010468006134	1
Coq.Classes.CEquivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.0120918750763	1
Coq.Classes.CEquivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.414448976517	1
Coq.Classes.CRelationClasses.complement_inverse	40	5	search with cache (only 1: auto).	0.00906586647034	11
Coq.Classes.CRelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.CRelationClasses.subrelation_symmetric	40	1	search with cache (only 1: firstorder).	0.00698304176331	2
Coq.Classes.CRelationClasses.flip_Reflexive	40	5.0	search with cache (only 1: hnf; only 1: firstorder).	0.0083429813385	7
Coq.Classes.CRelationClasses.flip_Antisymmetric	40	5.4.1	search with cache (only 1: hnf; only 1: intro z; only 1: auto).	0.0597920417786	134
Coq.Classes.CRelationClasses.flip_PreOrder	40	4	search with cache (only 1: firstorder).	0.0176210403442	5
Coq.Classes.CRelationClasses.flip_StrictOrder	40	1	search with cache (only 1: firstorder).	0.0183608531952	2
Coq.Classes.CRelationClasses.flip_PER	40	1	search with cache (only 1: firstorder).	0.0263161659241	2
Coq.Classes.CRelationClasses.flip_Equivalence	40	1	search with cache (only 1: firstorder).	0.0338499546051	2
Coq.Classes.CRelationClasses.complement_Irreflexive	40	2	search with cache (only 1: firstorder).	0.00890493392944	3
Coq.Classes.CRelationClasses.complement_Symmetric	40	0	search with cache (only 1: firstorder).	0.00882482528687	1
Coq.Classes.CRelationClasses.iffT_Reflexive	40	0	search with cache (only 1: firstorder).	0.00834488868713	1
Coq.Classes.CRelationClasses.iffT_Symmetric	40	0	search with cache (only 1: firstorder).	0.00907301902771	1
Coq.Classes.CRelationClasses.iffT_Transitive	40	0	search with cache (only 1: firstorder).	0.0105299949646	1
Coq.Classes.CRelationClasses.relation_equivalence_equivalence	40
Coq.Classes.CRelationClasses.relation_implication_preorder	40	9	search with cache (only 1: firstorder).	0.0164589881897	11
Coq.Classes.CRelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.0155050754547	1
Coq.Classes.CRelationClasses.PartialOrder_inverse	40	0	search with cache (only 1: firstorder).	0.0385119915009	1
Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	0.0.4.9	search with cache (only 1: intros; only 1: transitivity y; only 1: auto; only 1: auto).	0.695510864258	993
Coq.Classes.Equivalence.respecting_equiv_obligation_3	40
Coq.Classes.Equivalence.pointwise_reflexive	40	0	search with cache (only 1: simpl_relation).	0.0129568576813	1
Coq.Classes.Equivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.0102231502533	1
Coq.Classes.Equivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.0116798877716	1
Coq.Classes.Equivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.396833896637	1
Coq.Classes.EquivDec.unit_eqdec_obligation_1	40
Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40
Coq.Classes.EquivDec.list_eqdec_obligation_5	40
Coq.Classes.RelationClasses.complement_inverse	40	5	search with cache (only 1: auto).	0.00843214988708	11
Coq.Classes.RelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.RelationClasses.subrelation_symmetric	40	1	search with cache (only 1: firstorder).	0.00665593147278	2
Coq.Classes.RelationClasses.flip_Reflexive	40	4.1.0.0	search with cache (only 1: hnf; only 1: intros; only 1: hnf; only 1: firstorder).	0.0105369091034	9
Coq.Classes.RelationClasses.flip_Antisymmetric	40	5.4.1	search with cache (only 1: hnf; only 1: intro z; only 1: auto).	0.0443079471588	112
Coq.Classes.RelationClasses.flip_PreOrder	40	4	search with cache (only 1: firstorder).	0.0207860469818	5
Coq.Classes.RelationClasses.flip_StrictOrder	40	1	search with cache (only 1: firstorder).	0.0211801528931	2
Coq.Classes.RelationClasses.flip_PER	40	1	search with cache (only 1: firstorder).	0.0313539505005	2
Coq.Classes.RelationClasses.flip_Equivalence	40	1	search with cache (only 1: firstorder).	0.0329279899597	2
Coq.Classes.RelationClasses.complement_Irreflexive	40	2	search with cache (only 1: firstorder).	0.00877499580383	3
Coq.Classes.RelationClasses.complement_Symmetric	40	0	search with cache (only 1: firstorder).	0.00866508483887	1
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	0.0.1.0	search with cache (only 1: induction l; only 1: apply (symmetry (x:=_)); only 1: trivial; only 1: firstorder).	0.0217711925507	5
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0160222053528	3
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.0.0.0.0.1	search with cache (only 1: induction l; only 1: firstorder; only 1: intros; only 1: simpl in *; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).	0.0682191848755	7
Coq.Classes.RelationClasses.relation_equivalence_equivalence	40
Coq.Classes.RelationClasses.relation_implication_preorder	40	7	search with cache (only 1: firstorder).	0.0141878128052	8
Coq.Classes.RelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.0180699825287	1
Coq.Classes.RelationClasses.PartialOrder_inverse	40	0.2	search with cache (only 1: reduce_goal; only 1: firstorder).	0.0495290756226	4
Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	1	search with cache (only 1: firstorder).	0.0186789035797	2
Coq.Classes.Morphisms.eq_proper_proxy	40	14	search with cache (only 1: split).	0.0149831771851	75
Coq.Classes.Morphisms.reflexive_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00498604774475	1
Coq.Classes.Morphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00475287437439	1
Coq.Classes.Morphisms.pointwise_pointwise	40	11.4.23.0.3	search with cache (only 1: unfold relation_equivalence in *; only 1: compute; only 1: firstorder; only 1: elim eq_sym with (1 := H0); only 1: firstorder).	2.21614098549	9606
Coq.Classes.Morphisms.subrelation_id_proper	40	3.3	search with cache (only 1: reduce; only 1: firstorder).	0.00775909423828	8
Coq.Classes.Morphisms.subrelation_respectful	40	0	search with cache (only 1: firstorder).	0.00752115249634	1
Coq.Classes.Morphisms.subrelation_refl	40	1.0.1	search with cache (only 1: hnf; only 1: intros; only 1: assumption).	0.00797986984253	5
Coq.Classes.Morphisms.subrelation_proper	40	0.0	search with cache (only 1: hnf; only 1: firstorder).	0.00717997550964	2
Coq.Classes.Morphisms.proper_subrelation_proper	40	0.2.6	search with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.240426063538	42
Coq.Classes.Morphisms.pointwise_subrelation	40	1.1	search with cache (only 1: unfold subrelation in *; only 1: firstorder).	0.00786685943604	4
Coq.Classes.Morphisms.forall_subrelation	40	4.2.0	search with cache (only 1: reduce; only 1: apply H; only 1: firstorder).	0.0096549987793	9
Coq.Classes.Morphisms.iff_impl_subrelation	40	0.0	search with cache (only 1: reduce; only 1: firstorder).	0.00749111175537	2
Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00634503364563	1
Coq.Classes.Morphisms.respectful_per_obligation_2	40
Coq.Classes.Morphisms.complement_proper_obligation_1	40
Coq.Classes.Morphisms.flip_proper_obligation_1	40	7	search with cache (only 1: firstorder).	0.0147590637207	8
Coq.Classes.Morphisms.trans_contra_co_morphism_obligation_1	40	12	search with cache (only 1: firstorder).	0.149410963058	52
Coq.Classes.Morphisms.trans_contra_inv_impl_morphism_obligation_1	40	13	search with cache (only 1: firstorder).	9.52645587921	7873
Coq.Classes.Morphisms.trans_co_impl_morphism_obligation_1	40	14	search with cache (only 1: firstorder).	26.8735141754	32245
Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism_obligation_1	40	16	search with cache (only 1: firstorder).	24.4572999477	33389
Coq.Classes.Morphisms.trans_sym_contra_impl_morphism_obligation_1	40
Coq.Classes.Morphisms.per_partial_app_morphism_obligation_1	40	16	search with cache (only 1: firstorder).	5.60382413864	5927
Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism_obligation_1	40	7.9.1	search with cache (only 1: transitivity y; only 1: auto; only 1: auto).	22.4501750469	42106
Coq.Classes.Morphisms.PER_morphism_obligation_1	40	18	search with cache (only 1: firstorder).	21.560614109	25583
Coq.Classes.Morphisms.symmetric_equiv_flip	40	6	search with cache (only 1: firstorder).	0.0420701503754	45
Coq.Classes.Morphisms.compose_proper_obligation_1	40	6	search with cache (only 1: firstorder).	0.0122690200806	7
Coq.Classes.Morphisms.reflexive_eq_dom_reflexive	40	1.1.1	search with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.0135231018066	6
Coq.Classes.Morphisms.respectful_morphism	40
Coq.Classes.Morphisms.Reflexive_partial_app_morphism	40	1	search with cache (only 1: firstorder).	0.00906801223755	2
Coq.Classes.Morphisms.flip_respectful	40	0.0.0	search with cache (only 1: simpl_relation; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: simpl_relation).	0.0518169403076	3
Coq.Classes.Morphisms.flip1	40	7.0	search with cache (only 1: reduce; only 1: firstorder).	0.0172290802002	21
Coq.Classes.Morphisms.flip2	40	0	search with cache (only 1: firstorder).	0.00797915458679	1
Coq.Classes.Morphisms.eq_subrelation	40	0.1.0.1	search with cache (only 1: unfold subrelation; only 1: firstorder; only 1: subst; only 1: firstorder).	0.0154418945312	6
Coq.Classes.Morphisms.reflexive_proper	40	0	search with cache (only 1: simpl_relation).	0.0142328739166	1
Coq.Classes.Morphisms.proper_eq	40	1	search with cache (only 1: firstorder).	0.00829410552979	2
Coq.Classes.Morphisms.proper_proper	40	3.0.0.0.0	search with cache (only 1: reduce; only 1: subst; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: compute; only 1: firstorder).	0.122630119324	12
Coq.Classes.Morphisms.proper_normalizes_proper	40	6.2	search with cache (only 1: simpl_relation; only 1: firstorder).	0.0492548942566	10
Coq.Classes.Morphisms.flip_atom	40	1	search with cache (only 1: firstorder).	0.0105609893799	2
Coq.Classes.Morphisms.flip_arrow	40
Coq.Classes.Morphisms.proper_sym_flip	40	0	search with cache (only 1: simpl_relation).	0.0168371200562	1
Coq.Classes.Morphisms.proper_sym_flip_2	40	6.0.3.0	search with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: unfold flip, respectful; only 1: intros x x' Hxx'; only 1: simpl_relation).	0.89152598381	403
Coq.Classes.Morphisms.proper_sym_impl_iff	40	7.3	search with cache (only 1: simpl_relation; only 1: firstorder).	0.674947977066	262
Coq.Classes.Morphisms.proper_sym_impl_iff_2	40
Coq.Classes.Morphisms.PartialOrder_proper	40
Coq.Classes.Morphisms.PartialOrder_StrictOrder	40
Coq.Classes.Morphisms.StrictOrder_PreOrder	40
Coq.Classes.Morphisms.StrictOrder_PartialOrder	40
Coq.Classes.RelationPairs.RelCompFun_Reflexive	40	3.17	search with cache (only 1: repeat red; only 1: intuition).	0.188916921616	342
Coq.Classes.RelationPairs.RelCompFun_Symmetric	40	0	search with cache (only 1: firstorder).	0.0129959583282	1
Coq.Classes.RelationPairs.RelCompFun_Transitive	40	0	search with cache (only 1: firstorder).	0.0444931983948	1
Coq.Classes.RelationPairs.RelCompFun_Irreflexive	40	0	search with cache (only 1: firstorder).	0.0125591754913	1
Coq.Classes.RelationPairs.RelProd_Reflexive	40	0	search with cache (only 1: firstorder).	0.013650894165	1
Coq.Classes.RelationPairs.RelProd_Symmetric	40	0	search with cache (only 1: firstorder).	0.0217750072479	1
Coq.Classes.RelationPairs.RelProd_Transitive	40	0	search with cache (only 1: firstorder).	0.342488050461	1
Coq.Classes.RelationPairs.FstRel_ProdRel	40	0	search with cache (only 1: firstorder).	0.0168271064758	1
Coq.Classes.RelationPairs.SndRel_ProdRel	40	0	search with cache (only 1: firstorder).	0.0169949531555	1
Coq.Classes.RelationPairs.FstRel_sub	40	0	search with cache (only 1: firstorder).	0.0141799449921	1
Coq.Classes.RelationPairs.SndRel_sub	40	0	search with cache (only 1: firstorder).	0.0139920711517	1
Coq.Classes.RelationPairs.pair_compat	40	0	search with cache (only 1: firstorder).	0.0147960186005	1
Coq.Classes.RelationPairs.fst_compat	40	0	search with cache (only 1: firstorder).	0.0147759914398	1
Coq.Classes.RelationPairs.snd_compat	40	0	search with cache (only 1: firstorder).	0.0146131515503	1
Coq.Classes.RelationPairs.RelCompFun_compat	40	1.0	search with cache (only 1: compute in *; only 1: firstorder).	0.0176861286163	3
Coq.Classes.DecidableClass.Decidable_sound	40	1.2.1.2.4.1.6.16.7	search with cache (only 1: intros n m; only 1: elim m; only 1: simpl; only 1: intro H; only 1: destruct H; only 1: intros [? ?]; only 1: assumption; only 1: intros [? ?]; only 1: assumption).	1.97644400597	17368
Coq.Classes.DecidableClass.Decidable_complete	40	1.2.1.4.1.8.18.7	search with cache (only 1: intros n m; only 1: elim m; only 1: simpl; only 1: intro H; only 1: destruct H; only 1: auto; only 1: intros [? ?]; only 1: assumption).	2.16825604439	14993
Coq.Classes.DecidableClass.Decidable_sound_alt	40
Coq.Classes.DecidableClass.Decidable_complete_alt	40
Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	40
Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40
Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40
Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40
Coq.Classes.SetoidDec.unit_eqdec_obligation_1	40	0.45.106	search with cache (only 1: destruct y; only 1: destruct x; only 1: now BinInt.Z.swap_greater).	2.36324000359	21483
Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	40
Coq.Classes.SetoidClass.setoid_refl	40	1	search with cache (only 1: auto with *).	0.0123479366302	2
Coq.Classes.SetoidClass.setoid_sym	40	0	search with cache (only 1: typeclasses eauto).	0.011442899704	1
Coq.Classes.SetoidClass.setoid_trans	40	0	search with cache (only 1: typeclasses eauto).	0.0115458965302	1
Coq.Classes.SetoidClass.nequiv_equiv_trans	40
Coq.Classes.SetoidClass.equiv_nequiv_trans	40	6.0.31	search with cache (only 1: intros m n v1; only 1: intros; only 1: now rewrite H).	21.3041090965	59794
Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40
Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	0	search with cache (only 1: firstorder).	0.372604131699	1
Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	0	search with cache (only 1: firstorder).	0.0074679851532	1
Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	1.0	search with cache (only 1: do 2 red; only 1: auto).	0.00754404067993	3
Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	2.0	search with cache (only 1: do 2 red; only 1: auto).	0.00841093063354	4
Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	3.2.0	search with cache (only 1: intro; only 1: do 2 red; only 1: auto).	0.0380549430847	26
Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	4	search with cache (only 1: now simpl).	0.0730550289154	30
Coq.PArith.Pnat.inj_succ	40	1.13.17	search with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial).	1.08849811554	1966
Coq.PArith.Pnat.inj_add	40
Coq.PArith.Pnat.inj_mul	40
Coq.PArith.Pnat.inj_1	40	1.0	search with cache (only 1: unfold to_nat; only 1: trivial).	0.0138010978699	3
Coq.PArith.Pnat.inj_xO	40
Coq.PArith.Pnat.inj_xI	40
Coq.PArith.Pnat.is_succ	40	1.22.1	search with cache (only 1: unfold to_nat; only 1: fix sqrtrem_spec 1; only 1: trivial).	0.846210002899	2897
Coq.PArith.Pnat.is_pos	40	0.14.11.1.3.12.3	search with cache (only 1: induction p using peano_ind; only 1: auto; only 1: unfold to_nat; only 1: rewrite iter_op_succ; only 1: simpl; only 1: auto; only 1: apply Nat.add_assoc).	4.50641894341	11438
Coq.PArith.Pnat.id	40
Coq.PArith.Pnat.inj	40
Coq.PArith.Pnat.inj_iff	40	0.1.0.1.28	search with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H).	1.98110604286	4725
Coq.PArith.Pnat.inj_compare	40
Coq.PArith.Pnat.inj_lt	40
Coq.PArith.Pnat.inj_le	40
Coq.PArith.Pnat.inj_gt	40
Coq.PArith.Pnat.inj_ge	40
Coq.PArith.Pnat.inj_sub	40
Coq.PArith.Pnat.inj_sub_max	40
Coq.PArith.Pnat.inj_pred	40
Coq.PArith.Pnat.inj_pred_max	40	7.15.13.8.14	search with cache (only 1: induction p using peano_ind; only 1: reflexivity; only 1: rewrite inj_succ; only 1: rewrite pred_succ; only 1: now destruct (is_succ p) as (n, ->)).	11.6682510376	33390
Coq.PArith.Pnat.inj_min	40
Coq.PArith.Pnat.inj_max	40
Coq.PArith.Pnat.inj_iter	40
Coq.PArith.Pnat.id	40
Coq.PArith.Pnat.id_max	40	0.0.0.0.0.10.7.7	search with cache (only 1: induction n as [| n H]; only 1: trivial; only 1: simpl; only 1: destruct n; only 1: trivial; only 1: rewrite Pos2Nat.inj_succ; only 1: f_equal; only 1: now apply H).	0.845069885254	1976
Coq.PArith.Pnat.inj	40
Coq.PArith.Pnat.inj_iff	40
Coq.PArith.Pnat.inj_succ	40	0.1.0	search with cache (only 1: destruct n; only 1: now destruct 1; only 1: trivial).	0.0181238651276	4
Coq.PArith.Pnat.inj_pred	40
Coq.PArith.Pnat.inj_add	40
Coq.PArith.Pnat.inj_mul	40
Coq.PArith.Pnat.inj_compare	40
Coq.PArith.Pnat.inj_sub	40
Coq.PArith.Pnat.inj_min	40
Coq.PArith.Pnat.inj_max	40
Coq.PArith.Pnat.id_succ	40
Coq.PArith.Pnat.pred_id	40
Coq.PArith.Pnat.id_succ	40	3.6.0.0.1	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite Pos2Nat.inj_succ; only 1: now rewrite IHn).	0.349220991135	641
Coq.PArith.Pnat.pred_id	40
Coq.PArith.Pnat.inj	40
Coq.PArith.Pnat.inj_iff	40	4.9.0.0.0.1.0.4	search with cache (only 1: split; only 1: intro H; only 1: apply (f_equal Pos.to_nat) in H; only 1: rewrite !id_succ in H; only 1: now injection H; only 1: intro H; only 1: f_equal; only 1: auto with relations).	1.01413297653	2243
Coq.PArith.Pnat.inv	40	14.17.8.8	search with cache (only 1: unfold Pos.to_nat; only 1: intro H; only 1: apply Pos2Nat.inj; only 1: now rewrite id_succ).	28.1750490665	92392
Coq.PArith.Pnat.inj_succ	40	3.0.0.1	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: f_equal).	0.0242440700531	13
Coq.PArith.Pnat.inj_compare	40
Coq.PArith.Pnat.Pmult_nat_mult	40	1.45.11	search with cache (only 1: intros H; only 1: fix sqrtrem_spec 1; only 1: trivial).	21.4935979843	87864
Coq.PArith.Pnat.Pmult_nat_succ_morphism	40
Coq.PArith.Pnat.Pmult_nat_l_plus_morphism	40
Coq.PArith.Pnat.Pmult_nat_plus_carry_morphism	40
Coq.PArith.Pnat.Pmult_nat_r_plus_morphism	40
Coq.PArith.Pnat.ZL6	40
Coq.PArith.Pnat.le_Pmult_nat	40
Coq.PArith.BinPos.eq_dec	40
Coq.PArith.BinPos.xI_succ_xO	40	25	search with cache (only 1: trivial).	0.238007068634	1634
Coq.PArith.BinPos.succ_discr	40
Coq.PArith.BinPos.pred_double_spec	40	0	search with cache (only 1: reflexivity).	0.00548100471497	1
Coq.PArith.BinPos.succ_pred_double	40
Coq.PArith.BinPos.pred_double_succ	40	0.0.0.0.1.1.2	search with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	0.049665927887	42
Coq.PArith.BinPos.double_succ	40	0	search with cache (only 1: reflexivity).	0.00427985191345	1
Coq.PArith.BinPos.pred_double_xO_discr	40	2.0.0.0.1.0.0	search with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	0.0191640853882	10
Coq.PArith.BinPos.succ_not_1	40	0	search with cache (only 1: now destruct p).	0.0131230354309	1
Coq.PArith.BinPos.pred_succ	40	0.0.0.0.1.0.0.0.0.1.1.0.2	search with cache (only 1: induction p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	1.20631408691	950
Coq.PArith.BinPos.succ_pred_or	40
Coq.PArith.BinPos.succ_pred	40
Coq.PArith.BinPos.succ_inj	40
Coq.PArith.BinPos.pred_N_succ	40	0.0.0.0.1.7.2.3	search with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: apply pred_double_succ; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	1.81700801849	2052
Coq.PArith.BinPos.add_1_r	40	0	search with cache (only 1: now destruct p).	0.00565600395203	1
Coq.PArith.BinPos.add_1_l	40	0	search with cache (only 1: now destruct p).	0.00439119338989	1
Coq.PArith.BinPos.add_carry_spec	40
Coq.PArith.BinPos.add_comm	40
Coq.PArith.BinPos.add_succ_r	40
Coq.PArith.BinPos.add_succ_l	40
Coq.PArith.BinPos.add_no_neutral	40
Coq.PArith.BinPos.add_carry_add	40
Coq.PArith.BinPos.add_reg_r	40
Coq.PArith.BinPos.add_reg_l	40
Coq.PArith.BinPos.add_cancel_r	40
Coq.PArith.BinPos.add_cancel_l	40
Coq.PArith.BinPos.add_carry_reg_r	40
Coq.PArith.BinPos.add_carry_reg_l	40
Coq.PArith.BinPos.add_assoc	40
Coq.PArith.BinPos.add_xO	40	7	search with cache (only 1: now destruct p).	0.0472660064697	48
Coq.PArith.BinPos.add_xI_pred_double	40
Coq.PArith.BinPos.add_xO_pred_double	40
Coq.PArith.BinPos.add_diag	40	0.1.0.0.0.2.1.0.1	search with cache (only 1: induction p; only 1: simpl; only 1: rewrite ?add_carry_spec, ?pred_double_succ, ?add_xI_pred_double; only 1: rewrite IHp; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	0.24568104744	273
Coq.PArith.BinPos.peano_rect_succ	40
Coq.PArith.BinPos.peano_rect_base	40	0.0	search with cache (only 1: revert P a f; only 1: trivial).	0.00653314590454	2
Coq.PArith.BinPos.peano_case	40
Coq.PArith.BinPos.eq_dep_eq_positive	40
Coq.PArith.BinPos.PeanoViewUnique	40
Coq.PArith.BinPos.peano_equiv	40
Coq.PArith.BinPos.mul_1_l	40	0	search with cache (only 1: now destruct p).	0.00613808631897	1
Coq.PArith.BinPos.mul_1_r	40	0.7.4.6.4.5	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: reflexivity).	5.96899604797	12401
Coq.PArith.BinPos.mul_xO_r	40	0.1.0.5.0.7	search with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?add_carry_spec, ?IHp; only 1: simpl; only 1: now f_equal; only 1: now f_equal).	0.428143024445	422
Coq.PArith.BinPos.mul_xI_r	40
Coq.PArith.BinPos.mul_comm	40
Coq.PArith.BinPos.mul_add_distr_l	40
Coq.PArith.BinPos.mul_add_distr_r	40
Coq.PArith.BinPos.mul_assoc	40
Coq.PArith.BinPos.mul_succ_l	40
Coq.PArith.BinPos.mul_succ_r	40
Coq.PArith.BinPos.mul_xI_mul_xO_discr	40
Coq.PArith.BinPos.mul_xO_discr	40
Coq.PArith.BinPos.mul_reg_r	40
Coq.PArith.BinPos.mul_reg_l	40
Coq.PArith.BinPos.mul_cancel_r	40	8.1.1.0	search with cache (only 1: revert q r; only 1: split; only 1: apply mul_reg_r; only 1: congruence).	1.04534912109	1470
Coq.PArith.BinPos.mul_cancel_l	40	1.2.3.0	search with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).	0.0574748516083	73
Coq.PArith.BinPos.mul_eq_1_l	40	4.0.0.0.0.1.3.22.1	search with cache (only 1: induction p; only 1: induction q as [q IHq| q IHq| ]; only 1: discriminate; only 1: discriminate; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: reflexivity).	13.9906110764	35146
Coq.PArith.BinPos.mul_eq_1_r	40	0	search with cache (only 1: now destruct p, q).	0.0162110328674	1
Coq.PArith.BinPos.square_xO	40	0.1.7	search with cache (only 1: rewrite mul_xO_r; only 1: simpl; only 1: trivial).	0.169672012329	134
Coq.PArith.BinPos.square_xI	40
Coq.PArith.BinPos.iter_swap_gen	40
Coq.PArith.BinPos.iter_swap	40	2.1.0.0.1.0.0.0	search with cache (only 1: induction p; only 1: simpl; only 1: intros; only 1: now rewrite ?H, ?IHp; only 1: simpl; only 1: intros; only 1: now rewrite ?H, ?IHp; only 1: trivial).	0.375721931458	288
Coq.PArith.BinPos.iter_succ	40
Coq.PArith.BinPos.iter_add	40
Coq.PArith.BinPos.iter_invariant	40
Coq.PArith.BinPos.pow_1_r	40	34	search with cache (only 1: apply mul_comm).	2.3938601017	6433
Coq.PArith.BinPos.pow_succ_r	40
Coq.PArith.BinPos.square_spec	40
Coq.PArith.BinPos.sub_mask_succ_r	40
Coq.PArith.BinPos.sub_mask_carry_spec	40
Coq.PArith.BinPos.sub_mask_spec	40
Coq.PArith.BinPos.sub_mask_nul_iff	40
Coq.PArith.BinPos.sub_mask_diag	40	0.0.0.0.0.0.0	search with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp).	0.0115051269531	7
Coq.PArith.BinPos.sub_mask_add	40
Coq.PArith.BinPos.sub_mask_add_diag_l	40
Coq.PArith.BinPos.sub_mask_pos_iff	40
Coq.PArith.BinPos.sub_mask_add_diag_r	40
Coq.PArith.BinPos.sub_mask_neg_iff	40
Coq.PArith.BinPos.eqb_eq	40
Coq.PArith.BinPos.ltb_lt	40
Coq.PArith.BinPos.leb_le	40
Coq.PArith.BinPos.compare_cont_spec	40
Coq.PArith.BinPos.compare_cont_Eq	40
Coq.PArith.BinPos.compare_cont_Lt_Gt	40
Coq.PArith.BinPos.compare_cont_Lt_Lt	40	0.0.0.0.1.0.1.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: rewrite compare_cont_spec; only 1: unfold leb, le; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: now split).	0.0270810127258	10
Coq.PArith.BinPos.compare_cont_Gt_Lt	40	0.0.0.0.3.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold ltb, lt; only 1: destruct (p ?= q); only 1: easy'; only 1: now split; only 1: easy').	0.117982149124	30
Coq.PArith.BinPos.compare_cont_Gt_Gt	40
Coq.PArith.BinPos.compare_cont_Lt_not_Lt	40	0.0.0.0.0.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold gt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.0855090618134	6
Coq.PArith.BinPos.compare_cont_Lt_not_Gt	40	0.0.0.0.0.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold le; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.08220911026	6
Coq.PArith.BinPos.compare_cont_Gt_not_Lt	40	0.0.0.0.0.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold ge; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.0231878757477	6
Coq.PArith.BinPos.compare_cont_Gt_not_Gt	40	0.0.0.0.0.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.0251610279083	6
Coq.PArith.BinPos.compare_xO_xO	40	5.4	search with cache (only 1: unfold compare; only 1: now destruct compare_cont; split; try apply comparison_eq_stable).	0.0325269699097	53
Coq.PArith.BinPos.compare_xI_xI	40	0	search with cache (only 1: reflexivity).	0.00402188301086	1
Coq.PArith.BinPos.compare_xI_xO	40	0.0.6.6.0.0.5	search with cache (only 1: unfold compare; only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: now destruct compare_cont; split; try apply comparison_eq_stable).	1.92987799644	3158
Coq.PArith.BinPos.compare_xO_xI	40	0.0.6.6.1.0.6	search with cache (only 1: unfold compare; only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: now destruct compare_cont; split; try apply comparison_eq_stable).	2.0664229393	3209
Coq.PArith.BinPos.compare_sub_mask	40
Coq.PArith.BinPos.lt_iff_add	40
Coq.PArith.BinPos.gt_iff_add	40
Coq.PArith.BinPos.compare_cont_refl	40	2.2.0.1.0.1.1.0.2	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: induction p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.6403028965	1323
Coq.PArith.BinPos.compare_cont_antisym	40
Coq.PArith.BinPos.compare_eq_iff	40
Coq.PArith.BinPos.compare_antisym	40
Coq.PArith.BinPos.compare_lt_iff	40	1.0.0.0.0	search with cache (only 1: unfold lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.0426108837128	33
Coq.PArith.BinPos.compare_le_iff	40	0.2.1.0.1	search with cache (only 1: unfold le; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: easy').	0.0179319381714	13
Coq.PArith.BinPos.gt_lt_iff	40	3.3	search with cache (only 1: unfold gt; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.144003152847	63
Coq.PArith.BinPos.gt_lt	40	0.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.00890707969666	2
Coq.PArith.BinPos.lt_gt	40	0.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.00849509239197	2
Coq.PArith.BinPos.ge_le_iff	40	0.2.2	search with cache (only 1: unfold ge; only 1: unfold le; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0104978084564	7
Coq.PArith.BinPos.ge_le	40	0.0	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.00846290588379	2
Coq.PArith.BinPos.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.00382900238037	1
Coq.PArith.BinPos.compare_succ_r	40
Coq.PArith.BinPos.compare_succ_l	40
Coq.PArith.BinPos.lt_succ_r	40
Coq.PArith.BinPos.lt_succ_diag_r	40
Coq.PArith.BinPos.compare_succ_succ	40
Coq.PArith.BinPos.le_1_l	40	8.3.4.0	search with cache (only 1: apply ge_le_iff; only 1: unfold ge, lt, compare; only 1: rewrite compare_cont_spec; only 1: apply compare_succ_l || apply compare_succ_r || now destruct p || now destruct q).	3.36311197281	5293
Coq.PArith.BinPos.nlt_1_r	40	7	search with cache (only 1: now destruct p).	0.1310338974	17
Coq.PArith.BinPos.lt_1_succ	40	0	search with cache (only 1: now destruct p).	0.00640511512756	1
Coq.PArith.BinPos.le_nlt	40	0.0	search with cache (only 1: unfold lt, le; only 1: now rewrite compare_antisym, CompOpp_iff).	0.00658488273621	2
Coq.PArith.BinPos.lt_nle	40	5.3	search with cache (only 1: unfold ge, lt, compare; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).	0.40074801445	138
Coq.PArith.BinPos.lt_le_incl	40	0.0.0.2.2	search with cache (only 1: unfold lt, le; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.274142980576	126
Coq.PArith.BinPos.lt_lt_succ	40
Coq.PArith.BinPos.succ_lt_mono	40
Coq.PArith.BinPos.succ_le_mono	40	1.23	search with cache (only 1: unfold gt, le, compare; only 1: now rewrite compare_succ_succ).	0.783612966537	2129
Coq.PArith.BinPos.lt_trans	40
Coq.PArith.BinPos.lt_ind	40
Coq.PArith.BinPos.lt_strorder	40
Coq.PArith.BinPos.lt_compat	40	9.25	search with cache (only 1: unfold ge, lt, compare; only 1: now intuition).	4.66884207726	6863
Coq.PArith.BinPos.lt_total	40
Coq.PArith.BinPos.le_refl	40	1.1	search with cache (only 1: apply lt_eq_cases; only 1: now right).	0.0126841068268	4
Coq.PArith.BinPos.le_lt_trans	40
Coq.PArith.BinPos.lt_le_trans	40
Coq.PArith.BinPos.le_trans	40
Coq.PArith.BinPos.le_succ_l	40
Coq.PArith.BinPos.le_antisym	40	8.0.8.0.0.1	search with cache (only 1: case (compare_spec p q); only 1: intuition; only 1: unfold lt; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff; only 1: unfold lt; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff).	23.6219348907	31254
Coq.PArith.BinPos.le_preorder	40
Coq.PArith.BinPos.le_partorder	40
Coq.PArith.BinPos.add_compare_mono_l	40
Coq.PArith.BinPos.add_compare_mono_r	40
Coq.PArith.BinPos.lt_add_diag_r	40
Coq.PArith.BinPos.add_lt_mono_l	40	0.0.1.0.0.0.2.2	search with cache (only 1: revert p q r; only 1: unfold lt; only 1: induction p using peano_ind; only 1: intros q r; only 1: rewrite 2!add_1_l; only 1: now rewrite compare_succ_succ; only 1: intros q r; only 1: now rewrite 2!add_succ_l, compare_succ_succ).	0.298079013824	357
Coq.PArith.BinPos.add_lt_mono_r	40	0.0.1.0	search with cache (only 1: unfold lt; only 1: rewrite 2!(add_comm _ p); only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	0.00958800315857	5
Coq.PArith.BinPos.add_lt_mono	40
Coq.PArith.BinPos.add_le_mono_l	40	0.0.0.0.0.1.1.5	search with cache (only 1: revert p q r; only 1: unfold le; only 1: induction p using peano_ind; only 1: intros q r; only 1: rewrite 2!add_1_l; only 1: now rewrite compare_succ_succ; only 1: intros q r; only 1: now rewrite 2!add_succ_l, compare_succ_succ).	0.368007183075	378
Coq.PArith.BinPos.add_le_mono_r	40	0.1.0	search with cache (only 1: unfold le; only 1: rewrite add_compare_mono_r; only 1: apply iff_refl).	0.00748705863953	4
Coq.PArith.BinPos.add_le_mono	40
Coq.PArith.BinPos.mul_compare_mono_l	40
Coq.PArith.BinPos.mul_compare_mono_r	40
Coq.PArith.BinPos.mul_lt_mono_l	40
Coq.PArith.BinPos.mul_lt_mono_r	40	0.0.3.0	search with cache (only 1: unfold lt; only 1: rewrite 2!(mul_comm _ p); only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.0196709632874	18
Coq.PArith.BinPos.mul_lt_mono	40
Coq.PArith.BinPos.mul_le_mono_l	40	0.1.0	search with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.0083589553833	4
Coq.PArith.BinPos.mul_le_mono_r	40	0.1.0	search with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).	0.00737619400024	4
Coq.PArith.BinPos.mul_le_mono	40
Coq.PArith.BinPos.lt_add_r	40	0.0	search with cache (only 1: rewrite lt_iff_add; only 1: now exists q).	0.00651407241821	2
Coq.PArith.BinPos.lt_not_add_l	40	0.1.0.2.0.0.0.4.6.6	search with cache (only 1: unfold lt; only 1: rewrite compare_sub_mask; only 1: case sub_mask_spec; only 1: discriminate; only 1: intros r H; only 1: apply add_cancel_l in H; only 1: now f_equal; only 1: intros r H; only 1: rewrite <- add_assoc, add_comm in H; only 1: elim (add_no_neutral _ _ H)).	5.03315997124	10084
Coq.PArith.BinPos.pow_gt_1	40
Coq.PArith.BinPos.sub_1_r	40	0.0.0.2.21	search with cache (only 1: induction p; only 1: reflexivity || apply f_equal || exfalso; only 1: simpl; only 1: trivial; only 1: trivial).	0.137542009354	405
Coq.PArith.BinPos.pred_sub	40	0	search with cache (only 1: now destruct p).	0.00467586517334	1
Coq.PArith.BinPos.sub_succ_r	40
Coq.PArith.BinPos.sub_mask_pos'	40
Coq.PArith.BinPos.sub_mask_pos	40	4.0.2.0	search with cache (only 1: rewrite lt_iff_add; only 1: intros (r, Hr); only 1: exists r; only 1: now apply sub_mask_pos_iff).	0.0160980224609	13
Coq.PArith.BinPos.sub_add	40
Coq.PArith.BinPos.add_sub	40
Coq.PArith.BinPos.mul_sub_distr_l	40
Coq.PArith.BinPos.mul_sub_distr_r	40
Coq.PArith.BinPos.sub_lt_mono_l	40
Coq.PArith.BinPos.sub_compare_mono_l	40
Coq.PArith.BinPos.sub_compare_mono_r	40
Coq.PArith.BinPos.sub_lt_mono_r	40
Coq.PArith.BinPos.sub_decr	40
Coq.PArith.BinPos.add_sub_assoc	40
Coq.PArith.BinPos.sub_add_distr	40
Coq.PArith.BinPos.sub_sub_distr	40
Coq.PArith.BinPos.sub_xO_xO	40
Coq.PArith.BinPos.sub_xI_xI	40	0.3.0.0	search with cache (only 1: unfold sub; only 1: simpl; only 1: intros H; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.00940203666687	7
Coq.PArith.BinPos.sub_xI_xO	40	0.5.0.0	search with cache (only 1: unfold sub; only 1: simpl; only 1: intros H; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0136520862579	9
Coq.PArith.BinPos.sub_xO_xI	40
Coq.PArith.BinPos.sub_mask_neg_iff'	40	0.2.0.0.0.0.0.0.9	search with cache (only 1: rewrite lt_iff_add; only 1: split; only 1: case sub_mask_spec; only 1: discriminate; only 1: discriminate; only 1: intros r Hr _; only 1: now exists r; only 1: intros (r, <-); only 1: apply sub_mask_add_diag_r).	1.49863910675	2192
Coq.PArith.BinPos.sub_mask_neg	40	1.0	search with cache (only 1: rewrite lt_iff_add; only 1: apply sub_mask_neg_iff).	0.0125420093536	11
Coq.PArith.BinPos.sub_le	40
Coq.PArith.BinPos.sub_lt	40	0.0.0.0.0.11.0	search with cache (only 1: unfold le, sub; only 1: unfold lt; only 1: rewrite compare_sub_mask; only 1: destruct sub_mask; only 1: easy'; only 1: easy'; only 1: easy').	1.51297688484	2096
Coq.PArith.BinPos.sub_diag	40
Coq.PArith.BinPos.size_nat_monotone	40
Coq.PArith.BinPos.size_gt	40	0.1.0.1.4.0.2.1.4.0.10.4.11	search with cache (only 1: rewrite lt_iff_add; only 1: apply sub_mask_neg_iff; only 1: induction p; only 1: simpl; only 1: rewrite pow_succ_r; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: rewrite pow_succ_r; only 1: simpl; only 1: now rewrite ?IHp; only 1: apply sub_mask_neg_iff'; only 1: now rewrite pow_1_r).	22.2050361633	50388
Coq.PArith.BinPos.size_le	40
Coq.PArith.BinPos.max_l	40
Coq.PArith.BinPos.max_r	40	0.2.0.5	search with cache (only 1: intros x y; only 1: unfold max; only 1: rewrite <- compare_le_iff; only 1: now destruct compare).	0.428446054459	380
Coq.PArith.BinPos.min_l	40
Coq.PArith.BinPos.min_r	40	1.0.0.2.0.0.3.1	search with cache (only 1: intros x y H; only 1: unfold le, min; only 1: case compare_spec; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H; only 1: auto).	1.56049895287	1755
Coq.PArith.BinPos.max_1_l	40
Coq.PArith.BinPos.max_1_r	40	0.0.0.2.0.0.0.0	search with cache (only 1: unfold max; only 1: case compare_spec; only 1: easy'; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.0137450695038	10
Coq.PArith.BinPos.min_1_l	40	0.0.2.0.1.0.0.23	search with cache (only 1: unfold min; only 1: case compare_spec; only 1: auto with relations; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l).	2.30590677261	3617
Coq.PArith.BinPos.min_1_r	40	0.0.0.2.0.0.0.0	search with cache (only 1: unfold min; only 1: case compare_spec; only 1: easy'; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.0131330490112	10
Coq.PArith.BinPos.succ_max_distr	40
Coq.PArith.BinPos.succ_min_distr	40	0.0.1.12.1	search with cache (only 1: symmetry; only 1: apply min_mono; only 1: eauto with *; only 1: intros x x'; only 1: apply succ_le_mono).	0.835206031799	620
Coq.PArith.BinPos.add_max_distr_l	40	2.4.0	search with cache (only 1: apply max_monotone; only 1: intros x x'; only 1: now apply add_le_mono_l).	0.0196990966797	28
Coq.PArith.BinPos.add_max_distr_r	40
Coq.PArith.BinPos.add_min_distr_l	40	0.0.3	search with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	0.00881099700928	6
Coq.PArith.BinPos.add_min_distr_r	40	0.0.0.2	search with cache (only 1: rewrite 3!(add_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	0.00987601280212	6
Coq.PArith.BinPos.mul_max_distr_l	40	3.0.4	search with cache (only 1: apply max_monotone; only 1: intros x x'; only 1: now apply mul_le_mono_l).	0.0127599239349	11
Coq.PArith.BinPos.mul_max_distr_r	40
Coq.PArith.BinPos.mul_min_distr_l	40	0.0.6	search with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.00908017158508	9
Coq.PArith.BinPos.mul_min_distr_r	40	0.0.0.1	search with cache (only 1: rewrite 3!(mul_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.00973296165466	5
Coq.PArith.BinPos.iter_op_succ	40
Coq.PArith.BinPos.of_nat_succ	40
Coq.PArith.BinPos.pred_of_succ_nat	40
Coq.PArith.BinPos.succ_of_nat	40	1.2.3.0.9.1	search with cache (only 1: induction n; only 1: easy'; only 1: simpl; only 1: induction n; only 1: trivial; only 1: now rewrite IHn).	0.547436952591	1233
Coq.PArith.BinPos.sqrtrem_step_spec	40
Coq.PArith.BinPos.sqrtrem_spec	40
Coq.PArith.BinPos.sqrt_spec	40
Coq.PArith.BinPos.divide_add_cancel_l	40
Coq.PArith.BinPos.divide_xO_xI	40
Coq.PArith.BinPos.divide_xO_xO	40
Coq.PArith.BinPos.divide_mul_l	40
Coq.PArith.BinPos.divide_mul_r	40
Coq.PArith.BinPos.ggcdn_gcdn	40
Coq.PArith.BinPos.ggcd_gcd	40	2.39.18	search with cache (only 1: intros GT; only 1: fix sqrtrem_spec 1; only 1: trivial).	13.1291079521	54616
Coq.PArith.BinPos.ggcdn_correct_divisors	40
Coq.PArith.BinPos.ggcd_correct_divisors	40
Coq.PArith.BinPos.gcd_divide_l	40	2.0.34.0.39	search with cache (only 1: intros H; only 1: unfold ggcd, gcd; only 1: fix sqrtrem_spec 1; only 1: intros; only 1: trivial).	12.3532178402	67661
Coq.PArith.BinPos.gcd_divide_r	40
Coq.PArith.BinPos.gcdn_greatest	40
Coq.PArith.BinPos.gcd_greatest	40
Coq.PArith.BinPos.ggcd_greatest	40
Coq.PArith.BinPos.Peqb_true_eq	40	11.256	search with cache (only 1: fix sqrtrem_spec 1; only 1: auto with relations).	37.5860319138	471426
Coq.PArith.BinPos.Pcompare_eq_Gt	40	3.3.2	search with cache (only 1: split; only 1: auto; only 1: auto).	0.082267999649	31
Coq.PArith.BinPos.Pminus_mask_Gt	40
Coq.PArith.BinPos.Pplus_minus	40
Coq.PArith.BinPos.Dcompare	40	2.2.1.2.12.59	search with cache (only 1: destruct r; only 1: intuition; only 1: right; only 1: auto; only 1: right; only 1: auto).	8.92438101768	45651
Coq.Arith.Le.le_n_0_eq	40	0.1.0.27	search with cache (only 1: Nat.induct ltac:(n); only 1: now repeat split; only 1: intros Ha Hb; only 1: now repeat split).	0.402504920959	722
Coq.Arith.Le.le_elim_rel	40
Coq.Arith.Even.even_equiv	40
Coq.Arith.Even.odd_equiv	40	10.2	search with cache (only 1: fix even_equiv 1; only 1: trivial).	0.247745990753	324
Coq.Arith.Even.even_or_odd	40	2.12.15.102	search with cache (only 1: Morphisms.f_equiv; only 1: intros f Hf; only 1: fix even_equiv 1; only 1: trivial).	4.89457011223	29419
Coq.Arith.Even.even_odd_dec	40	0.0.0.0.0	search with cache (only 1: induction n; only 1: auto with arith; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith).	0.0198810100555	5
Coq.Arith.Even.not_even_and_odd	40	1.5	search with cache (only 1: fix even_equiv 1; only 1: auto with arith).	0.019572019577	17
Coq.Arith.Even.even_plus_split	40
Coq.Arith.Even.odd_plus_split	40	0	search with cache (only 1: parity_binop).	0.140925168991	1
Coq.Arith.Even.even_even_plus	40	0	search with cache (only 1: parity_binop).	0.0637168884277	1
Coq.Arith.Even.odd_plus_l	40	0	search with cache (only 1: parity_binop).	0.0637021064758	1
Coq.Arith.Even.odd_plus_r	40	0	search with cache (only 1: parity_binop).	0.164789199829	1
Coq.Arith.Even.odd_even_plus	40	0	search with cache (only 1: parity_binop).	0.0631439685822	1
Coq.Arith.Even.even_plus_aux	40	10	search with cache (only 1: parity_binop).	0.223307132721	21
Coq.Arith.Even.even_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.0757808685303	1
Coq.Arith.Even.even_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0645608901978	1
Coq.Arith.Even.even_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.062903881073	1
Coq.Arith.Even.even_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.0675258636475	1
Coq.Arith.Even.odd_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0634210109711	1
Coq.Arith.Even.odd_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.0633931159973	1
Coq.Arith.Even.odd_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.0637378692627	1
Coq.Arith.Even.odd_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.0630948543549	1
Coq.Arith.Even.even_mult_aux	40	0	search with cache (only 1: parity_binop).	0.152675151825	1
Coq.Arith.Even.even_mult_l	40	6	search with cache (only 1: parity_binop).	0.0428640842438	7
Coq.Arith.Even.even_mult_r	40	0	search with cache (only 1: parity_binop).	0.041965007782	1
Coq.Arith.Even.even_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.0990772247314	1
Coq.Arith.Even.even_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.0632998943329	1
Coq.Arith.Even.odd_mult	40	0	search with cache (only 1: parity_binop).	0.0633180141449	1
Coq.Arith.Even.odd_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.0485050678253	1
Coq.Arith.Even.odd_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.041864156723	1
Coq.Arith.Minus.minus_n_O	40	2.81	search with cache (only 1: Nat.nzsimpl; only 1: trivial).	2.23027896881	19938
Coq.Arith.Minus.minus_Sn_m	40
Coq.Arith.Minus.pred_of_minus	40	21	search with cache (only 1: now Nat.nzsimpl').	0.216491937637	547
Coq.Arith.Minus.minus_diag_reverse	40
Coq.Arith.Minus.minus_plus_simpl_l_reverse	40
Coq.Arith.Minus.plus_minus	40
Coq.Arith.Minus.minus_plus	40	2	search with cache (only 1: now apply Nat.add_sub_eq_l).	0.0119190216064	3
Coq.Arith.Minus.le_plus_minus_r	40
Coq.Arith.Minus.le_plus_minus	40	0.1.8.0	search with cache (only 1: rewrite Nat.add_comm; only 1: symmetry; only 1: apply Nat.sub_add; only 1: Nat.order).	0.257488965988	300
Coq.Arith.Minus.lt_O_minus_lt	40
Coq.Arith.Minus.not_le_minus_0	40
Coq.Arith.Between.bet_eq	40	18.27.4.0.5.1	search with cache (only 1: intro n; only 1: intros m; only 1: intros EQ; only 1: rewrite EQ; only 1: clear EQ; only 1: now left).	6.62557291985	32467
Coq.Arith.Between.between_le	40
Coq.Arith.Between.between_Sk_l	40	0.0.25.0.9.9.8	search with cache (only 1: intro n; only 1: intros m Le; only 1: elim Le; only 1: auto with arith; only 1: induction 1; only 1: auto with arith; only 1: auto with arith).	7.07518386841	22263
Coq.Arith.Between.between_restr	40	2.0.0.6	search with cache (only 1: induction 1 as [| * [| ]]; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.131387233734	92
Coq.Arith.Between.exists_le_S	40	15.0.0.2	search with cache (only 1: induction 1 as [| * [| ]]; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.411513090134	817
Coq.Arith.Between.exists_S_le	40
Coq.Arith.Between.in_int_intro	40	2.1.30	search with cache (only 1: split; only 1: auto with arith; only 1: PeanoNat.Nat.order_nz).	2.43402409554	7348
Coq.Arith.Between.in_int_lt	40	7.21	search with cache (only 1: induction 1; only 1: PeanoNat.Nat.order_nz).	0.746459960938	2062
Coq.Arith.Between.in_int_p_Sq	40
Coq.Arith.Between.in_int_S	40	1.0.0.0.0.0.0.0	search with cache (only 1: intros p q r []; only 1: destruct (le_lt_or_eq r q); only 1: auto with arith; only 1: destruct (le_lt_or_eq r q); only 1: auto with arith; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.0398919582367	12
Coq.Arith.Between.in_int_Sp_q	40	0.0	search with cache (only 1: intros * []; only 1: auto with arith).	0.0139219760895	2
Coq.Arith.Between.between_in_int	40
Coq.Arith.Between.in_int_between	40	1.0.2.0.0	search with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: intros; only 1: auto with arith).	0.0230829715729	8
Coq.Arith.Between.exists_in_int	40
Coq.Arith.Between.in_int_exists	40
Coq.Arith.Between.between_or_exists	40
Coq.Arith.Between.between_not_exists	40
Coq.Arith.Between.nth_le	40	13.3.10	search with cache (only 1: induction 1; only 1: trivial; only 1: eauto with arith).	0.885560035706	2384
Coq.Arith.Between.event_O	40
Coq.Arith.Peano_dec.O_or_S	40
Coq.Arith.Peano_dec.dec_eq_nat	40
Coq.Arith.Peano_dec.le_unique	40
Coq.Arith.Mult.mult_assoc_reverse	40
Coq.Arith.Mult.mult_is_O	40
Coq.Arith.Mult.mult_is_one	40
Coq.Arith.Mult.mult_O_le	40
Coq.Arith.Mult.mult_le_compat_l	40
Coq.Arith.Mult.mult_le_compat_r	40
Coq.Arith.Mult.mult_le_compat	40
Coq.Arith.Mult.mult_S_lt_compat_l	40	0.8.11.2.0.2.1.0.3.14.0	search with cache (only 1: intros; only 1: simpl; only 1: apply Nat.add_lt_le_mono; only 1: trivial; only 1: apply Nat.mul_le_mono_nonneg; only 1: apply Nat.le_0_l; only 1: trivial; only 1: apply Nat.le_0_l; only 1: apply Nat.lt_eq_cases; only 1: left; only 1: trivial).	39.8886699677	72073
Coq.Arith.Mult.mult_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_r	40
Coq.Arith.Mult.mult_S_le_reg_l	40
Coq.Arith.Mult.odd_even_lem	40
Coq.Arith.Mult.mult_acc_aux	40
Coq.Arith.Mult.mult_tail_mult	40
Coq.Arith.Div2.ind_0_1_SS	40
Coq.Arith.Div2.lt_div2	40	2.66	search with cache (only 1: fix even_equiv 1; only 1: trivial).	0.994130134583	7885
Coq.Arith.Div2.even_div2	40	1.22	search with cache (only 1: fix even_equiv 1; only 1: auto with arith).	1.04900312424	1203
Coq.Arith.Div2.odd_div2	40
Coq.Arith.Div2.div2_even	40	1.20.0	search with cache (only 1: rewrite even_equiv; only 1: fix even_equiv 1; only 1: auto with arith).	1.17248296738	1573
Coq.Arith.Div2.div2_odd	40
Coq.Arith.Div2.even_odd_div2	40
Coq.Arith.Div2.double_S	40
Coq.Arith.Div2.double_plus	40
Coq.Arith.Div2.even_odd_double	40
Coq.Arith.Div2.even_2n	40	2.3	search with cache (only 1: fix even_odd_double 1; only 1: auto with arith).	0.0282728672028	14
Coq.Arith.Div2.odd_S2n	40	0.0.0	search with cache (only 1: intros n H; only 1: exists (Nat.div2 n); only 1: auto with arith).	0.0189950466156	3
Coq.Arith.Div2.div2_double	40	0	search with cache (only 1: apply Nat.div2_double).	0.0120069980621	1
Coq.Arith.Div2.div2_double_plus_one	40	2.12	search with cache (only 1: rewrite Nat.div2_succ_double; only 1: trivial).	0.216536998749	293
Coq.Arith.Plus.plus_assoc_reverse	40
Coq.Arith.Plus.plus_reg_l	40
Coq.Arith.Plus.plus_le_reg_l	40
Coq.Arith.Plus.plus_lt_reg_l	40
Coq.Arith.Plus.plus_le_compat_l	40	0	search with cache (only 1: apply Nat.add_le_mono_l).	0.00939202308655	1
Coq.Arith.Plus.plus_le_compat_r	40
Coq.Arith.Plus.plus_lt_compat_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.00945401191711	1
Coq.Arith.Plus.plus_lt_compat_r	40
Coq.Arith.Plus.plus_le_compat	40
Coq.Arith.Plus.plus_le_lt_compat	40
Coq.Arith.Plus.plus_lt_le_compat	40	0	search with cache (only 1: apply Nat.add_le_mono).	0.00761413574219	1
Coq.Arith.Plus.plus_lt_compat	40	22.0.30	search with cache (only 1: intros H; only 1: apply Nat.add_le_lt_mono; only 1: Nat.order).	2.32615184784	6047
Coq.Arith.Plus.le_plus_l	40
Coq.Arith.Plus.le_plus_r	40
Coq.Arith.Plus.le_plus_trans	40
Coq.Arith.Plus.lt_plus_trans	40
Coq.Arith.Plus.plus_is_O	40	6.4.3.1.0.3.0.0.1.1.0.1.3.5	search with cache (only 1: revert m; only 1: induction n as [| n IH]; only 1: simpl; only 1: intros a b; only 1: split; only 1: split; only 1: trivial; only 1: simpl; only 1: clear IH; only 1: intros a b; only 1: split; only 1: discriminate; only 1: Nat.bitwise; only 1: discriminate).	13.6307280064	45432
Coq.Arith.Plus.plus_is_one	40
Coq.Arith.Plus.plus_tail_plus	40
Coq.Arith.Plus.succ_plus_discr	40
Coq.Arith.Lt.lt_le_S	40	5	search with cache (only 1: trivial).	0.0198168754578	6
Coq.Arith.Lt.lt_n_Sm_le	40
Coq.Arith.Lt.le_lt_n_Sm	40	0	search with cache (only 1: apply Nat.lt_succ_r).	0.0120580196381	1
Coq.Arith.Lt.le_not_lt	40	13	search with cache (only 1: Nat.order).	0.0887038707733	67
Coq.Arith.Lt.lt_not_le	40	13	search with cache (only 1: Nat.order).	0.125762939453	110
Coq.Arith.Lt.neq_0_lt	40
Coq.Arith.Lt.lt_0_neq	40	2.0	search with cache (only 1: intros; only 1: Nat.order).	0.0181450843811	4
Coq.Arith.Lt.lt_n_S	40	2	search with cache (only 1: apply Nat.lt_succ_r).	0.0134279727936	3
Coq.Arith.Lt.lt_S_n	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.0125648975372	1
Coq.Arith.Lt.S_pred	40	4.0.0.147	search with cache (only 1: Nat.induct ltac:(n); only 1: now Nat.nzsimpl'; only 1: intros a n; only 1: trivial).	17.1408839226	57603
Coq.Arith.Lt.S_pred_pos	40
Coq.Arith.Lt.lt_pred	40
Coq.Arith.Lt.lt_pred_n_n	40
Coq.Arith.Lt.le_lt_or_eq	40
Coq.Arith.Lt.nat_total_order	40
Coq.Arith.Wf_nat.well_founded_ltof	40
Coq.Arith.Wf_nat.well_founded_gtof	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: assert (H : forall (n : nat) (a : A), f a < n -> Acc ltof a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	4.77940797806	4075
Coq.Arith.Wf_nat.induction_ltof1	40
Coq.Arith.Wf_nat.induction_gtof1	40
Coq.Arith.Wf_nat.induction_ltof2	40	1	search with cache (only 1: exact induction_ltof1).	0.230319023132	154
Coq.Arith.Wf_nat.induction_gtof2	40	0	search with cache (only 1: exact induction_ltof1).	0.00934791564941	1
Coq.Arith.Wf_nat.well_founded_lt_compat	40
Coq.Arith.Wf_nat.lt_wf	40
Coq.Arith.Wf_nat.lt_wf_rec1	40
Coq.Arith.Wf_nat.lt_wf_rec	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.0098991394043	1
Coq.Arith.Wf_nat.lt_wf_ind	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).	0.00983810424805	1
Coq.Arith.Wf_nat.gt_wf_rec	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).	0.00976490974426	1
Coq.Arith.Wf_nat.lt_wf_double_rec	40
Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.0.0.0.0.0.0	search with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rec; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rec; only 1: auto with arith).	0.0246789455414	7
Coq.Arith.Wf_nat.acc_lt_rel	40
Coq.Arith.Wf_nat.well_founded_inv_lt_rel_compat	40
Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40
Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40
Coq.Arith.Factorial.lt_O_fact	40
Coq.Arith.Factorial.fact_neq_0	40	0.0.0.0.0.4.33	search with cache (only 1: apply Nat.lt_gt_cases; only 1: right; only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	33.0491030216	49820
Coq.Arith.Factorial.fact_le	40
Coq.Arith.Compare_dec.zerop	40
Coq.Arith.Compare_dec.lt_eq_lt_dec	40
Coq.Arith.Compare_dec.gt_eq_gt_dec	40	0.0.0.0.1.0.0.0.0.0.0	search with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: destruct H; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.66631603241	259
Coq.Arith.Compare_dec.le_lt_dec	40	0.0.1.0.2.0.4.0.12.0.2	search with cache (only 1: destruct n; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: induction n in m |- *; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: auto with arith; only 1: auto with arith).	6.32071614265	3608
Coq.Arith.Compare_dec.le_le_S_dec	40	1.1.0.0.0.0.0.3.0.1.11	search with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	37.1066198349	7765
Coq.Arith.Compare_dec.le_ge_dec	40	0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	0.341753005981	145
Coq.Arith.Compare_dec.le_gt_dec	40	0.0.5	search with cache (only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).	0.0479798316956	24
Coq.Arith.Compare_dec.le_lt_eq_dec	40
Coq.Arith.Compare_dec.le_dec	40	0.0.3	search with cache (only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).	0.157289981842	65
Coq.Arith.Compare_dec.lt_dec	40	1.0.1.0.5	search with cache (only 1: destruct m; only 1: auto with arith; only 1: destruct (le_gt_dec n m); only 1: auto with arith; only 1: auto with arith).	0.828407049179	645
Coq.Arith.Compare_dec.gt_dec	40	1	search with cache (only 1: apply le_dec).	0.0057590007782	2
Coq.Arith.Compare_dec.ge_dec	40	1	search with cache (only 1: apply le_dec).	0.00555205345154	2
Coq.Arith.Compare_dec.dec_le	40	0.4.0.1.1.2.0.0.0.2.21	search with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	2.88901901245	4191
Coq.Arith.Compare_dec.dec_lt	40	0	search with cache (only 1: apply Nat.le_decidable).	0.00539708137512	1
Coq.Arith.Compare_dec.dec_gt	40	6	search with cache (only 1: apply Nat.lt_decidable).	0.0357429981232	23
Coq.Arith.Compare_dec.dec_ge	40	3	search with cache (only 1: apply Nat.le_decidable).	0.10330080986	42
Coq.Arith.Compare_dec.not_eq	40	0	search with cache (only 1: apply Nat.lt_gt_cases).	0.00695610046387	1
Coq.Arith.Compare_dec.not_le	40	0	search with cache (only 1: apply Nat.lt_nge).	0.00620102882385	1
Coq.Arith.Compare_dec.not_gt	40	0	search with cache (only 1: apply Nat.le_ngt).	0.00609397888184	1
Coq.Arith.Compare_dec.not_ge	40	5	search with cache (only 1: apply Nat.lt_nge).	0.130309820175	32
Coq.Arith.Compare_dec.not_lt	40	3	search with cache (only 1: apply Nat.le_ngt).	0.0302579402924	15
Coq.Arith.Compare_dec.nat_compare_lt	40
Coq.Arith.Compare_dec.nat_compare_gt	40
Coq.Arith.Compare_dec.nat_compare_le	40
Coq.Arith.Compare_dec.nat_compare_ge	40
Coq.Arith.Compare_dec.nat_compare_eq	40
Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	0	search with cache (only 1: apply Nat.compare_lt_iff).	0.00789308547974	1
Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	0	search with cache (only 1: apply Nat.compare_gt_iff).	0.0069580078125	1
Coq.Arith.Compare_dec.nat_compare_equiv	40
Coq.Arith.Compare_dec.leb_iff_conv	40
Coq.Arith.Compare_dec.leb_correct	40
Coq.Arith.Compare_dec.leb_complete	40	0	search with cache (only 1: apply Nat.leb_le).	0.00807118415833	1
Coq.Arith.Compare_dec.leb_correct_conv	40	0.0	search with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.lt_nge).	0.0669538974762	2
Coq.Arith.Compare_dec.leb_complete_conv	40	0	search with cache (only 1: apply leb_iff_conv).	0.0625891685486	1
Coq.Arith.Compare_dec.leb_compare	40
Coq.Arith.EqNat.eq_nat_refl	40	1.0.19.77	search with cache (only 1: induction n as [| n IH]; only 1: now Nat.nzsimpl; only 1: simpl; only 1: congruence).	0.765845060349	5363
Coq.Arith.EqNat.eq_nat_is_eq	40
Coq.Arith.EqNat.eq_eq_nat	40	0.0.0.0.0.1	search with cache (only 1: intros <-; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0865981578827	80
Coq.Arith.EqNat.eq_nat_eq	40	6.0	search with cache (only 1: revert m; only 1: apply eq_nat_is_eq).	0.401354074478	106
Coq.Arith.EqNat.eq_nat_elim	40
Coq.Arith.EqNat.eq_nat_decide	40	0.0.0.0.1.1.42.0.26	search with cache (only 1: induction n as [| n IH]; only 1: destruct m; only 1: now left; only 1: auto; only 1: destruct m; only 1: simpl; only 1: contradiction || auto; only 1: simpl; only 1: auto).	28.4406318665	132245
Coq.Arith.EqNat.beq_nat_refl	40	13.13.47	search with cache (only 1: induction n; only 1: split; only 1: trivial).	0.588245153427	3506
Coq.Arith.EqNat.beq_nat_true	40	0.0.7.0.0.5.0.13.7.20.33	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: split; only 1: simpl; only 1: discriminate; only 1: destruct m; only 1: simpl; only 1: discriminate; only 1: simpl; only 1: contradiction || auto).	19.0791289806	133703
Coq.Arith.EqNat.beq_nat_false	40	0.0.0.0.0.0.1.3.4.12.28.34	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: discriminate; only 1: simpl; only 1: contradiction || auto; only 1: destruct m; only 1: simpl; only 1: contradiction || auto; only 1: simpl; only 1: contradiction || auto).	3.66323494911	20818
Coq.Arith.EqNat.beq_nat_eq	40	0.0.1	search with cache (only 1: intros; only 1: apply Nat.eqb_eq; only 1: now rewrite H).	0.0185561180115	4
Coq.Arith.Euclid.eucl_dev	40
Coq.Arith.Euclid.quotient	40
Coq.Arith.Euclid.modulo	40
Coq.Arith.PeanoNat.bi_induction	40
Coq.Arith.PeanoNat.recursion_wd	40
Coq.Arith.PeanoNat.recursion_0	40	2.1.1	search with cache (only 1: intros; only 1: simpl; only 1: firstorder).	0.00659012794495	7
Coq.Arith.PeanoNat.recursion_succ	40	1.0.3.20	search with cache (only 1: compute; only 1: induction n; only 1: auto; only 1: auto).	12.898786068	34274
Coq.Arith.PeanoNat.pred_succ	40	1.0.0.1	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: auto).	0.00695204734802	6
Coq.Arith.PeanoNat.pred_0	40	0	search with cache (only 1: reflexivity).	0.0032479763031	1
Coq.Arith.PeanoNat.one_succ	40	0	search with cache (only 1: reflexivity).	0.00339484214783	1
Coq.Arith.PeanoNat.two_succ	40	0	search with cache (only 1: reflexivity).	0.00318717956543	1
Coq.Arith.PeanoNat.add_0_l	40	0	search with cache (only 1: reflexivity).	0.00345802307129	1
Coq.Arith.PeanoNat.add_succ_l	40	0	search with cache (only 1: reflexivity).	0.00362300872803	1
Coq.Arith.PeanoNat.sub_0_r	40	0.0.2	search with cache (only 1: induction n; only 1: reflexivity; only 1: reflexivity).	0.00523209571838	5
Coq.Arith.PeanoNat.sub_succ_r	40
Coq.Arith.PeanoNat.mul_0_l	40	0	search with cache (only 1: reflexivity).	0.00467395782471	1
Coq.Arith.PeanoNat.mul_succ_l	40
Coq.Arith.PeanoNat.lt_succ_r	40
Coq.Arith.PeanoNat.eqb_eq	40
Coq.Arith.PeanoNat.leb_le	40
Coq.Arith.PeanoNat.ltb_lt	40
Coq.Arith.PeanoNat.eq_dec	40
Coq.Arith.PeanoNat.compare_eq_iff	40
Coq.Arith.PeanoNat.compare_lt_iff	40
Coq.Arith.PeanoNat.compare_le_iff	40
Coq.Arith.PeanoNat.compare_antisym	40	4.1.0.0.0.0.0.1.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: easy; only 1: simpl; only 1: destruct m; only 1: easy; only 1: simpl; only 1: easy).	3.71400403976	7504
Coq.Arith.PeanoNat.compare_succ	40	0.2.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: simpl; only 1: easy; only 1: trivial).	0.0101099014282	7
Coq.Arith.PeanoNat.max_l	40
Coq.Arith.PeanoNat.max_r	40
Coq.Arith.PeanoNat.min_l	40
Coq.Arith.PeanoNat.min_r	40
Coq.Arith.PeanoNat.pow_neg_r	40	11.13	search with cache (only 1: intro H; only 1: false_hyp ltac:(H) nle_succ_0).	0.261942148209	735
Coq.Arith.PeanoNat.pow_0_r	40	11	search with cache (only 1: split).	0.0408790111542	33
Coq.Arith.PeanoNat.pow_succ_r	40	7.0.0	search with cache (only 1: inversion 1; only 1: reflexivity; only 1: reflexivity).	0.0469970703125	15
Coq.Arith.PeanoNat.square_spec	40	4	search with cache (only 1: reflexivity).	0.0364580154419	5
Coq.Arith.PeanoNat.Even_1	40
Coq.Arith.PeanoNat.Even_2	40
Coq.Arith.PeanoNat.Odd_0	40	0.0.0.12	search with cache (only 1: intros ([| ], H); only 1: discriminate; only 1: simpl in H; only 1: now rewrite <- plus_n_Sm in H).	0.0302920341492	95
Coq.Arith.PeanoNat.Odd_2	40
Coq.Arith.PeanoNat.even_spec	40
Coq.Arith.PeanoNat.odd_spec	40	10.0	search with cache (only 1: fix even_spec 1; only 1: trivial).	0.171095848083	274
Coq.Arith.PeanoNat.divmod_spec	40
Coq.Arith.PeanoNat.div_mod	40
Coq.Arith.PeanoNat.mod_bound_pos	40
Coq.Arith.PeanoNat.sqrt_iter_spec	40
Coq.Arith.PeanoNat.sqrt_specif	40
Coq.Arith.PeanoNat.sqrt_neg	40	0	search with cache (only 1: inversion 1).	0.00649499893188	1
Coq.Arith.PeanoNat.log2_iter_spec	40
Coq.Arith.PeanoNat.log2_spec	40
Coq.Arith.PeanoNat.log2_nonpos	40	2.3.9	search with cache (only 1: inversion 1; only 1: inversion H; only 1: auto).	0.24093914032	339
Coq.Arith.PeanoNat.gcd_divide	40
Coq.Arith.PeanoNat.gcd_divide_l	40	6.0.5.10.13	search with cache (only 1: intros n m; only 1: induct n; only 1: now exists 0; only 1: fix gcd_divide 1; only 1: auto).	1.90790605545	6543
Coq.Arith.PeanoNat.gcd_divide_r	40	0.0	search with cache (only 1: intros; only 1: apply gcd_divide).	0.00484681129456	2
Coq.Arith.PeanoNat.gcd_greatest	40
Coq.Arith.PeanoNat.gcd_nonneg	40	4	search with cache (only 1: apply le_0_l).	0.00641298294067	5
Coq.Arith.PeanoNat.div2_double	40	4.5.2.1.11.0.20.2.4.80	search with cache (only 1: induct n; only 1: simpl; only 1: now subst; only 1: intros; only 1: simpl in H; only 1: simpl; only 1: inversion H; only 1: rewrite add_succ_r; only 1: f_equal; only 1: intuition).	34.4243919849	98110
Coq.Arith.PeanoNat.div2_succ_double	40	0.0.0.1.0.0	search with cache (only 1: induction n; only 1: trivial; only 1: simpl mul; only 1: rewrite add_succ_r; only 1: simpl; only 1: now f_equal).	0.0127680301666	7
Coq.Arith.PeanoNat.le_div2	40
Coq.Arith.PeanoNat.lt_div2	40	1.5	search with cache (only 1: fix le_div2 1; only 1: now f_equal).	0.101121902466	119
Coq.Arith.PeanoNat.div2_decr	40	1.1.0	search with cache (only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	0.0101628303528	11
Coq.Arith.PeanoNat.double_twice	40	3.16.4	search with cache (only 1: simpl; only 1: intros; only 1: now rewrite !add_0_r).	4.31263303757	5575
Coq.Arith.PeanoNat.testbit_0_l	40	4.6	search with cache (only 1: fix even_spec 1; only 1: trivial).	0.0282399654388	76
Coq.Arith.PeanoNat.testbit_odd_0	40
Coq.Arith.PeanoNat.testbit_even_0	40
Coq.Arith.PeanoNat.testbit_odd_succ'	40	0.8.10.7.2.8.5.0	search with cache (only 1: unfold testbit; only 1: unfold testbit, odd; only 1: simpl; only 1: f_equal; only 1: rewrite add_succ_r; only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	33.4860439301	82303
Coq.Arith.PeanoNat.testbit_even_succ'	40
Coq.Arith.PeanoNat.shiftr_specif	40	2.6	search with cache (only 1: fix even_spec 1; only 1: trivial).	0.0407390594482	68
Coq.Arith.PeanoNat.shiftl_specif_high	40	2.9	search with cache (only 1: fix even_spec 1; only 1: intuition).	0.207455873489	326
Coq.Arith.PeanoNat.shiftl_spec_low	40	13.6.1	search with cache (only 1: unfold testbit, odd; only 1: fix odd_spec 1; only 1: now f_equal).	3.01527690887	5425
Coq.Arith.PeanoNat.div2_bitwise	40	5.8.21.33	search with cache (only 1: intros; only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	23.9462687969	61807
Coq.Arith.PeanoNat.odd_bitwise	40
Coq.Arith.PeanoNat.testbit_bitwise_1	40
Coq.Arith.PeanoNat.testbit_bitwise_2	40
Coq.Arith.PeanoNat.land_spec	40
Coq.Arith.PeanoNat.ldiff_spec	40	0.0.1	search with cache (only 1: apply testbit_bitwise_1; only 1: trivial; only 1: trivial).	0.00721192359924	4
Coq.Arith.PeanoNat.lor_spec	40	4.11.33.2.2	search with cache (only 1: apply testbit_bitwise_1; only 1: simpl; only 1: fix even_spec 1; only 1: apply even_spec; only 1: solve_max).	15.0189919472	65624
Coq.Arith.PeanoNat.lxor_spec	40	1.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.4	search with cache (only 1: apply testbit_bitwise_2; only 1: trivial; only 1: destruct (compare_spec a b); only 1: rewrite max_l; only 1: subst; only 1: trivial; only 1: subst; only 1: trivial; only 1: apply lt_le_incl in H; only 1: now rewrite max_r; only 1: apply lt_le_incl in H; only 1: now rewrite max_l; only 1: destruct (compare_spec a b); only 1: rewrite max_r; only 1: subst; only 1: trivial; only 1: subst; only 1: trivial; only 1: apply lt_le_incl in H; only 1: now rewrite max_r; only 1: apply lt_le_incl in H; only 1: now rewrite max_l).	11.4691090584	18185
Coq.Arith.PeanoNat.div2_spec	40	3	search with cache (only 1: trivial).	0.00539708137512	4
Coq.Arith.PeanoNat.testbit_neg_r	40	0	search with cache (only 1: inversion H).	0.00503993034363	1
Coq.Arith.PeanoNat.tail_add_spec	40
Coq.Arith.PeanoNat.tail_addmul_spec	40
Coq.Arith.PeanoNat.tail_mul_spec	40
Coq.Arith.PeanoNat.test	40	2.2.1	search with cache (only 1: intro n; only 1: intros a H; only 1: Nat.order).	0.00960397720337	8
Coq.Arith.Compare.discrete_nat	40
Coq.Arith.Gt.gt_n_S	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.0133390426636	1
Coq.Arith.Gt.gt_S_n	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.0127038955688	1
Coq.Arith.Gt.gt_S	40	3.1.0.0.1.1.0.10	search with cache (only 1: intros; only 1: apply Nat.lt_eq_cases; only 1: apply Nat.lt_succ_r; only 1: apply Nat.succ_lt_mono; only 1: apply Nat.succ_lt_mono; only 1: apply Nat.succ_lt_mono; only 1: apply Nat.lt_succ_r; only 1: auto with arith).	0.848398923874	731
Coq.Arith.Gt.gt_pred	40	3	search with cache (only 1: apply Nat.lt_succ_lt_pred).	0.148067951202	55
Coq.Arith.Gt.le_not_gt	40	0.3.2	search with cache (only 1: intro H'; only 1: apply Nat.le_ngt; only 1: Nat.order).	0.0250668525696	8
Coq.Arith.Gt.gt_not_le	40	2	search with cache (only 1: apply Nat.lt_nge).	0.0773630142212	33
Coq.Arith.Gt.le_S_gt	40	3	search with cache (only 1: apply Nat.le_succ_l).	0.0170230865479	4
Coq.Arith.Gt.gt_S_le	40	4	search with cache (only 1: apply Nat.lt_succ_r).	0.0193660259247	5
Coq.Arith.Gt.gt_le_S	40	0	search with cache (only 1: apply Nat.le_succ_l).	0.0127780437469	1
Coq.Arith.Gt.le_gt_S	40	0	search with cache (only 1: apply Nat.succ_le_mono).	0.0133130550385	1
Coq.Arith.Gt.le_gt_trans	40
Coq.Arith.Gt.gt_le_trans	40
Coq.Arith.Gt.gt_trans	40
Coq.Arith.Gt.gt_trans_S	40	1.6.1	search with cache (only 1: intros; only 1: apply Nat.succ_le_mono; only 1: now apply Nat.le_lt_trans with m).	0.138571023941	42
Coq.Arith.Gt.gt_0_eq	40	69.8	search with cache (only 1: apply Nat.lt_eq_cases; only 1: auto with arith).	13.147261858	34853
Coq.Arith.Gt.plus_gt_reg_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.0126800537109	1
Coq.Arith.Gt.plus_gt_compat_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.01358294487	1
Coq.Logic.SetoidChoice.setoid_choice	40
Coq.Logic.SetoidChoice.representative_choice	40
Coq.Logic.PropFacts.injection_is_involution_in_Prop	40
Coq.Logic.JMeq.JMeq_sym	40	3.14.9.10	search with cache (only 1: intros H x0; only 1: intros n m; only 1: inversion 1; only 1: reflexivity).	0.495494842529	2849
Coq.Logic.JMeq.JMeq_trans	40	1.0.1.21	search with cache (only 1: intro H1; only 1: intros; only 1: destruct H; only 1: trivial).	0.109722137451	434
Coq.Logic.JMeq.JMeq_ind	40
Coq.Logic.JMeq.JMeq_rec	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.00913906097412	3
Coq.Logic.JMeq.JMeq_rect	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.00933408737183	3
Coq.Logic.JMeq.JMeq_ind_r	40	0.0.9.32.18.11.33	search with cache (only 1: intro H1; only 1: intro; only 1: intros n m; only 1: intros H H'; only 1: revert m; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	18.7725820541	220020
Coq.Logic.JMeq.JMeq_rec_r	40	0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.00995302200317	4
Coq.Logic.JMeq.JMeq_rect_r	40	0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0100769996643	4
Coq.Logic.JMeq.JMeq_congr	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0102732181549	3
Coq.Logic.JMeq.JMeq_eq_dep_id	40	0.1	search with cache (only 1: destruct 1; only 1: auto).	0.00889301300049	3
Coq.Logic.JMeq.eq_dep_id_JMeq	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.0086669921875	2
Coq.Logic.JMeq.eq_dep_JMeq	40	2.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00876903533936	4
Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40
Coq.Logic.JMeq.JMeq_eq_dep	40	3.7.2.0	search with cache (only 1: destruct 1; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro).	0.361263036728	383
Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	2.22.2	search with cache (only 1: intro; only 1: intros [HypL HypR]; only 1: trivial).	0.186751127243	1032
Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40
Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.0.0.0	search with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).	0.011815071106	4
Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40
Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40
Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40
Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40
Coq.Logic.Classical_Prop.NNPP	40
Coq.Logic.Classical_Prop.Peirce	40	5.1.2.9	search with cache (only 1: intros HR; only 1: unshelve refine (let F := exist (fun P => ~ ~ P -> P) False _ in _); only 1: auto; only 1: tauto).	0.480680942535	486
Coq.Logic.Classical_Prop.not_imply_elim	40	11.2.1	search with cache (only 1: intros A; only 1: intro HC; only 1: tauto).	2.30174803734	2282
Coq.Logic.Classical_Prop.not_imply_elim2	40	4.1	search with cache (only 1: unfold not; only 1: auto).	0.0120551586151	17
Coq.Logic.Classical_Prop.imply_to_or	40	12.0.0.0.1.0.0	search with cache (only 1: intros A; only 1: pose (P := fun n : nat => n = 0 /\ A \/ n = 1); only 1: intuition; only 1: assert (h : P 1); only 1: unfold P; only 1: intuition; only 1: tauto).	7.94693803787	8506
Coq.Logic.Classical_Prop.imply_to_and	40	0.11	search with cache (only 1: intros; only 1: tauto).	0.469467878342	542
Coq.Logic.Classical_Prop.or_to_imply	40	2.2.0	search with cache (only 1: intros; only 1: pose (R := fun b1 b2 : bool => b1 = b2 \/ P); only 1: intuition).	0.0421869754791	44
Coq.Logic.Classical_Prop.not_and_or	40	1.6.11	search with cache (only 1: intro HP; only 1: intros; only 1: tauto).	0.243141889572	224
Coq.Logic.Classical_Prop.or_not_and	40	5.0	search with cache (only 1: intros; only 1: tauto).	0.0853328704834	59
Coq.Logic.Classical_Prop.not_or_and	40	1.0.0.0	search with cache (only 1: intros; only 1: elim (classic P); only 1: auto; only 1: auto).	0.0111429691315	5
Coq.Logic.Classical_Prop.and_not_or	40	0	search with cache (only 1: tauto).	0.00785493850708	1
Coq.Logic.Classical_Prop.imply_and_or	40	0	search with cache (only 1: tauto).	0.0068838596344	1
Coq.Logic.Classical_Prop.imply_and_or2	40	5.1	search with cache (only 1: intros a b; only 1: tauto).	0.01518201828	15
Coq.Logic.Classical_Prop.eq_rect_eq	40
Coq.Logic.Hurkens.Omega	40
Coq.Logic.Hurkens.lemma1	40
Coq.Logic.Hurkens.lemma2	40
Coq.Logic.Hurkens.paradox	40
Coq.Logic.Hurkens.paradox	40
Coq.Logic.Hurkens.strength	40
Coq.Logic.Hurkens.modal	40	0.5.2.33	search with cache (only 1: intro H; only 1: destruct H; only 1: simpl in *; only 1: eauto).	0.712779045105	5175
Coq.Logic.Hurkens.Forall	40	1.13	search with cache (only 1: red; only 1: eauto).	0.0289449691772	92
Coq.Logic.Hurkens.paradox	40
Coq.Logic.Hurkens.paradox	40
Coq.Logic.Hurkens.mparadox	40
Coq.Logic.Hurkens.paradox	40
Coq.Logic.Hurkens.paradox	40
Coq.Logic.Hurkens.up_down	40
Coq.Logic.Hurkens.paradox	40
Coq.Logic.Hurkens.paradox	40
Coq.Logic.ClassicalChoice.singleton_choice	40
Coq.Logic.ClassicalChoice.choice	40
Coq.Logic.Eqdep_dec.trans_sym_eq	40	0.10.35.64	search with cache (only 1: intros Hfst Hsnd; only 1: intro H; only 1: destruct H; only 1: reflexivity).	3.32761001587	44991
Coq.Logic.Eqdep_dec.nu_constant	40
Coq.Logic.Eqdep_dec.nu_left_inv_on	40
Coq.Logic.Eqdep_dec.eq_proofs_unicity_on	40
Coq.Logic.Eqdep_dec.K_dec_on	40
Coq.Logic.Eqdep_dec.inj_right_pair_on	40
Coq.Logic.Eqdep_dec.K_dec_type	40
Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	2.0.0.0.0.0.0.0.3	search with cache (only 1: intros A eq_dec x P H p; only 1: elim p using K_dec; only 1: intros; only 1: case (eq_dec x0 y); only 1: left; only 1: assumption; only 1: right; only 1: assumption; only 1: trivial).	0.328175067902	352
Coq.Logic.Eqdep_dec.inj_pairP2	40
Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40
Coq.Logic.Eqdep_dec.UIP_refl_unit	40
Coq.Logic.Eqdep_dec.UIP_refl_bool	40
Coq.Logic.Eqdep_dec.UIP_refl_nat	40
Coq.Logic.ConstructiveEpsilon.linear_search_smallest	40
Coq.Logic.ConstructiveEpsilon.epsilon_smallest	40
Coq.Logic.ConstructiveEpsilon.P_implies_acc	40
Coq.Logic.ConstructiveEpsilon.P_eventually_implies_acc	40
Coq.Logic.ConstructiveEpsilon.P_eventually_implies_acc_ex	40
Coq.Logic.ConstructiveEpsilon.acc_implies_P_eventually	40
Coq.Logic.ConstructiveEpsilon.constructive_indefinite_ground_description_nat_Acc	40
Coq.Logic.ConstructiveEpsilon.P'_decidable	40
Coq.Logic.ConstructiveEpsilon.constructive_indefinite_ground_description	40
Coq.Logic.ConstructiveEpsilon.constructive_definite_ground_description	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40
Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40
Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40	0.0.0.0.0.0.39	search with cache (only 1: intros D_iota A P H; only 1: destruct D_iota with (P := P) as (x, H1); only 1: destruct H; only 1: auto; only 1: exists x; only 1: apply H1; only 1: assumption).	2.90564489365	13686
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40	3.19	search with cache (only 1: compute; only 1: auto).	0.337609052658	1166
Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40	0.2.0.5.5	search with cache (only 1: intros D_epsilon A P H; only 1: destruct D_epsilon with (P := P) as (x, H1); only 1: assumption; only 1: exists x; only 1: apply H1).	0.166229009628	197
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40
Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40
Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40
Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40
Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40	0.0.0.16	search with cache (only 1: intros AC_depfun A B R H; only 1: destruct (AC_depfun A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	0.4695789814	1443
Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.7	search with cache (only 1: repeat split; only 1: intros AC_fun A B R H; only 1: pose (B' := {x : A & B x}); only 1: pose (R' := fun (x : A) (y : B') => projT1 y = x /\ R (projT1 y) (projT2 y)); only 1: destruct (AC_fun A B' R') as (f, Hf); only 1: intros x; only 1: destruct (H x) as (y, (Hy, Huni)); only 1: exists (existT (fun x => B x) x y); only 1: repeat split; only 1: trivial; only 1: intros (x', y') (Heqx', Hy'); only 1: simpl in *; only 1: destruct Heqx'; only 1: rewrite (Huni y'); only 1: trivial; only 1: trivial; only 1: exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))); only 1: intro x; only 1: destruct (Hf x) as (Heq, HR) using and_indd; only 1: destruct (f x); only 1: simpl in *; only 1: destruct Heq using eq_indd; only 1: trivial; only 1: intros DepFunReify A B R H; only 1: destruct (DepFunReify A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	5.65511202812	9642
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40
Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40	0.0.5.36	search with cache (only 1: intros IndefDescr A B R H; only 1: exists (fun x => proj1_sig (IndefDescr B (R x) (H x))); only 1: intro x; only 1: apply (proj2_sig (IndefDescr B (R x) (H x)))).	19.6925938129	64524
Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40
Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40
Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	40
Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40	16	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	3.19536304474	279
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40
Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	40	7.0.0.3	search with cache (only 1: intros A B GenSetoidFunChoice R T Hequiv Hcompat Hex; only 1: apply GenSetoidFunChoice; only 1: easy; only 1: firstorder).	10.8225059509	769
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	40	0.0.6.0.0.0.1	search with cache (only 1: intros A B SetoidFunChoice T Hexists; only 1: destruct SetoidFunChoice with (R := eq) (T := T) as (f, Hf); only 1: apply eq_equivalence; only 1: now intros * ->; only 1: firstorder; only 1: exists f; only 1: firstorder).	1.03497004509	408
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	40
Coq.Logic.PropExtensionality.proof_irrelevance	40
Coq.Logic.StrictProp.Spr1_inj	40	1.28.15.108	search with cache (only 1: destruct a, b; only 1: simpl in *; only 1: subst; only 1: reflexivity).	1.40560817719	22858
Coq.Logic.ClassicalFacts.prop_degen_ext	40
Coq.Logic.ClassicalFacts.prop_degen_em	40
Coq.Logic.ClassicalFacts.prop_ext_em_degen	40
Coq.Logic.ClassicalFacts.provable_prop_ext	40	13.0.0.11.10	search with cache (only 1: intros Ext EM A; only 1: apply Ext; only 1: split; only 1: exact (fun _ => I); only 1: trivial).	0.283006191254	2003
Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40
Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40
Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40
Coq.Logic.ClassicalFacts.aux	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_gen	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cc	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cic	40
Coq.Logic.ClassicalFacts.p2p1	40
Coq.Logic.ClassicalFacts.p2p2	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.wp2p1	40
Coq.Logic.ClassicalFacts.wp2p2	40
Coq.Logic.ClassicalFacts.wproof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.wem_proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40	5.1.4.10.8	search with cache (only 1: intros H A; only 1: destruct (H A); only 1: auto; only 1: left; only 1: easy).	1.15006613731	5665
Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40
Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40
Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40
Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40
Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40
Coq.Logic.ClassicalFacts.unrestricted_minimization_entails_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_entails_unrestricted_minimization	40
Coq.Logic.ClassicalFacts.undecidable_predicate_with_the_minimization_property	40
Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40
Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40
Coq.Logic.Classical_Pred_Type.not_all_not_ex	40
Coq.Logic.Classical_Pred_Type.not_all_ex_not	40
Coq.Logic.Classical_Pred_Type.not_ex_all_not	40	0.0.1.8.0	search with cache (only 1: intros P notall; only 1: intros n H; only 1: apply notall; only 1: exists n; only 1: exact H).	0.388571977615	495
Coq.Logic.Classical_Pred_Type.not_ex_not_all	40	0.0.2.1.5.22.1	search with cache (only 1: intros P notall; only 1: intro; only 1: apply NNPP; only 1: intro abs; only 1: apply notall; only 1: exists n; only 1: trivial).	26.3098239899	98822
Coq.Logic.Classical_Pred_Type.ex_not_not_all	40	3.18.1	search with cache (only 1: unfold not; only 1: intros x [n fxn]; only 1: auto).	7.31233596802	17950
Coq.Logic.Classical_Pred_Type.all_not_not_ex	40
Coq.Logic.ProofIrrelevanceFacts.eq_rect_eq	40
Coq.Logic.ProofIrrelevanceFacts.subset_eq_compat	40
Coq.Logic.ProofIrrelevanceFacts.subsetT_eq_compat	40	0.0.5.0	search with cache (only 1: intros; only 1: rewrite M.proof_irrelevance with (p1 := q) (p2 := (eq_rect x P p y H)); only 1: elim H using eq_indd; only 1: reflexivity).	0.0194361209869	14
Coq.Logic.FinFun.Finite_alt	40
Coq.Logic.FinFun.Injective_map_NoDup	40
Coq.Logic.FinFun.Injective_list_carac	40
Coq.Logic.FinFun.Injective_carac	40
Coq.Logic.FinFun.Surjective_list_carac	40
Coq.Logic.FinFun.Surjective_carac	40
Coq.Logic.FinFun.Endo_Injective_Surjective	40
Coq.Logic.FinFun.Finite_Empty_or_not	40	17.0.22.6	search with cache (only 1: intros (l, F); only 1: induction l as [| a l IH]; only 1: intuition; only 1: now constructor).	2.61707496643	5014
Coq.Logic.FinFun.Surjective_inverse	40
Coq.Logic.FinFun.Injective_Surjective_Bijective	40
Coq.Logic.FinFun.Fin_Finite	40
Coq.Logic.FinFun.extend_ok	40
Coq.Logic.FinFun.extend_f2n	40
Coq.Logic.FinFun.extend_n2f	40
Coq.Logic.FinFun.restrict_f2n	40
Coq.Logic.FinFun.restrict_n2f	40
Coq.Logic.FinFun.extend_surjective	40
Coq.Logic.FinFun.extend_injective	40
Coq.Logic.FinFun.restrict_surjective	40
Coq.Logic.FinFun.restrict_injective	40
Coq.Logic.FinFun.bInjective_bSurjective	40
Coq.Logic.FinFun.bSurjective_bBijective	40
Coq.Logic.Diaconescu.prop_ext	40
Coq.Logic.Diaconescu.proof_irrel	40
Coq.Logic.Diaconescu.guarded_rel_choice	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: red; only 1: intros A B P R H; only 1: destruct (rel_choice _ _ (fun (x : {x : _ & P x}) (y : B) => R (projT1 x) y)) as (R', (HR'R, H0)); only 1: intros (x, HPx); only 1: destruct (H x HPx) as (y, HRxy); only 1: exists y; only 1: exact HRxy; only 1: set (R'' := fun (x : A) (y : B) => exists H : P x, R' (existT P x H) y); only 1: exists R''; only 1: Notations.split; only 1: intros x y (HPx, HR'xy); only 1: change x with (projT1 (existT P x HPx)); only 1: apply HR'R; only 1: exact HR'xy; only 1: intros x HPx; only 1: destruct (H0 (existT P x HPx)) as (y, (HR'xy, Huniq)); only 1: exists y; only 1: Notations.split; only 1: exists HPx; only 1: exact HR'xy; only 1: intros y' (H'Px, HR'xy'); only 1: apply Huniq; only 1: rewrite proof_irrel with (a1 := HPx) (a2 := H'Px); only 1: exact HR'xy').	6.3377840519	8651
Coq.Logic.Diaconescu.AC_bool_subset_to_bool	40
Coq.Logic.Diaconescu.pred_ext_and_rel_choice_imp_EM	40
Coq.Logic.Diaconescu.a1'	40	94.39	search with cache (only 1: red; only 1: eauto).	6.11002779007	13600
Coq.Logic.Diaconescu.a2'	40	0.0	search with cache (only 1: exists a1; only 1: auto).	0.0173280239105	2
Coq.Logic.Diaconescu.projT1_injective	40
Coq.Logic.Diaconescu.decide	40
Coq.Logic.Diaconescu.proof_irrel_rel_choice_imp_eq_dec	40
Coq.Logic.Diaconescu.proof_irrel_rel_choice_imp_eq_dec'	40	0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0	search with cache (only 1: destruct (rel_choice A' bool (fun x y => projT1 x = a1 /\ y = true \/ projT1 x = a2 /\ y = false)) as (R, (HRsub, HR)); only 1: apply decide; only 1: destruct (HR a1') as (b1, (Ha1'b1, _Huni1)); only 1: destruct (HRsub a1' b1 Ha1'b1) as [(_, Hb1true)| (Ha1a2, _Hb1false)]; only 1: destruct (HR a2') as (b2, (Ha2'b2, Huni2)); only 1: destruct (HRsub a2' b2 Ha2'b2) as [(Ha2a1, _Hb2true)| (_, Hb2false)]; only 1: left; only 1: symmetry; only 1: assumption; only 1: right; only 1: intro H; only 1: subst b1; only 1: subst b2; only 1: rewrite (projT1_injective H) in Ha1'b1; only 1: assert (false = true) by auto using Huni2; only 1: discriminate; only 1: left; only 1: assumption).	14.2725930214	12533
Coq.Logic.Diaconescu.extensional_epsilon_imp_EM	40
Coq.Logic.FunctionalExtensionality.equal_f	40	0.1.0	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.00777387619019	4
Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.0.1	search with cache (only 1: intros; only 1: rewrite H; only 1: auto).	0.00769400596619	4
Coq.Logic.FunctionalExtensionality.functional_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	0.0.0	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.00986480712891	3
Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	0.0.0	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.00992512702942	3
Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40
Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40
Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40	2.15.0	search with cache (only 1: apply forall_eq_rect with (H := H); only 1: rewrite functional_extensionality_dep_good_refl; only 1: reflexivity).	0.371307134628	771
Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	0	search with cache (only 1: reflexivity).	0.00685501098633	1
Coq.Logic.FunctionalExtensionality.eta_expansion	40	1	search with cache (only 1: reflexivity).	0.00681209564209	2
Coq.Logic.HLevels.forall_hprop	40
Coq.Logic.HLevels.and_hprop	40
Coq.Logic.HLevels.impl_hprop	40	0.0.1.0	search with cache (only 1: intros A P H p q; only 1: apply functional_extensionality_dep; only 1: intro x; only 1: apply H).	0.0111150741577	5
Coq.Logic.HLevels.false_hprop	40	28.0	search with cache (only 1: intro x; only 1: contradiction).	0.420254945755	2013
Coq.Logic.HLevels.true_hprop	40	5.0.0	search with cache (only 1: intros p q; only 1: destruct p, q; only 1: trivial).	0.010146856308	8
Coq.Logic.HLevels.not_hprop	40	0.4.2.0	search with cache (only 1: intros p q; only 1: intro x; only 1: apply functional_extensionality_dep; only 1: contradiction).	0.0117499828339	10
Coq.Logic.HLevels.hset_hprop	40
Coq.Logic.HLevels.eq_trans_cancel	40
Coq.Logic.HLevels.hset_hOneType	40
Coq.Logic.HLevels.hprop_hprop	40
Coq.Logic.HLevels.hprop_hset	40
Coq.Logic.ClassicalUniqueChoice.unique_choice	40
Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40
Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40
Coq.Logic.WKL.is_path_from_characterization	40
Coq.Logic.WKL.is_path_from_restrict	40
Coq.Logic.WKL.inductively_barred_at_monotone	40
Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40
Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	40
Coq.Logic.WKL.find_left_path	40
Coq.Logic.WKL.Y_unique	40
Coq.Logic.WKL.Y_approx	40
Coq.Logic.WKL.PreWeakKonigsLemma	40
Coq.Logic.WKL.inductively_barred_at_decidable	40
Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	40
Coq.Logic.WKL.WeakKonigsLemma	40
Coq.Logic.Epsilon.constructive_indefinite_description	40
Coq.Logic.Epsilon.small_drinkers'_paradox	40
Coq.Logic.Epsilon.iota_statement	40
Coq.Logic.Epsilon.constructive_definite_description	40	0.0.0.0.0.1	search with cache (only 1: intros; only 1: destruct epsilon_statement with (P := P); only 1: destruct H; only 1: red in H; only 1: auto; only 1: firstorder).	0.0551011562347	7
Coq.Logic.ClassicalDescription.excluded_middle_informative	40
Coq.Logic.ClassicalDescription.classical_definite_description	40
Coq.Logic.ClassicalDescription.dependent_unique_choice	40
Coq.Logic.ClassicalDescription.unique_choice	40	0.0.0.0.0.4.2	search with cache (only 1: intros A B R H; only 1: assert (Hexuni : forall x, exists ! y, R x y); only 1: intro x; only 1: apply H; only 1: exists (fun x => proj1_sig (constructive_definite_description (R x) (Hexuni x))); only 1: intro x; only 1: apply (proj2_sig (constructive_definite_description (R x) (Hexuni x)))).	0.256250143051	97
Coq.Logic.EqdepFacts.eq_dep_sym	40	0.21.21	search with cache (only 1: intros H x0; only 1: induction 1; only 1: auto).	0.278994083405	1868
Coq.Logic.EqdepFacts.eq_dep_trans	40	0.0.18.13	search with cache (only 1: intros x' x'' Hx' Hx''; only 1: induction 1; only 1: destruct 1; only 1: auto).	0.305484056473	1358
Coq.Logic.EqdepFacts.eq_dep1_dep	40
Coq.Logic.EqdepFacts.eq_dep_dep1	40	2.66.1	search with cache (only 1: destruct 1; only 1: exists eq_refl; only 1: reflexivity).	1.14261603355	11855
Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	2.46	search with cache (only 1: inversion 1; only 1: reflexivity).	0.660792827606	3964
Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	2.18	search with cache (only 1: destruct 1; only 1: reflexivity).	0.122086048126	442
Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40	0.11.0.0.10.10	search with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	0.575872182846	2697
Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.1.0	search with cache (only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro).	0.00998902320862	4
Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	2.3	search with cache (only 1: destruct 1; only 1: reflexivity).	0.0102610588074	16
Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40	0.10.0.0.9.2	search with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	0.535931110382	1614
Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40
Coq.Logic.EqdepFacts.eq_sigT_fst	40	3.4.2.0	search with cache (only 1: intros; only 1: change x2 with (projT1 (existT P x2 H2)); only 1: destruct H; only 1: reflexivity).	0.0797929763794	188
Coq.Logic.EqdepFacts.eq_sigT_snd	40
Coq.Logic.EqdepFacts.eq_sig_fst	40	3.7.0	search with cache (only 1: intros; only 1: dependent rewrite H; only 1: reflexivity).	0.371475934982	599
Coq.Logic.EqdepFacts.eq_sig_snd	40
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep1_eq_on	40	41.1.3.54	search with cache (only 1: intro A; only 1: destruct 1; only 1: rewrite H; only 1: auto).	16.6434710026	87851
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep_eq_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__UIP_on	40
Coq.Logic.EqdepFacts.UIP_on__UIP_refl_on	40	10.0	search with cache (only 1: red; only 1: auto).	0.0514290332794	157
Coq.Logic.EqdepFacts.UIP_refl_on__Streicher_K_on	40	1.5.2.1.5	search with cache (only 1: intro; only 1: intro UIP; only 1: intro eq_dep_eq; only 1: rewrite H; only 1: apply UIP).	0.545030117035	2161
Coq.Logic.EqdepFacts.Streicher_K_on__eq_rect_eq_on	40	23.0.0	search with cache (only 1: intro; only 1: intro; only 1: auto).	0.437029123306	1367
Coq.Logic.EqdepFacts.UIP_shift_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__inj_pair2_on	40	1.0	search with cache (only 1: red; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0100040435791	3
Coq.Logic.EqdepFacts.f_eq_dep	40	2.0	search with cache (only 1: destruct 1; only 1: reflexivity).	0.0101039409637	4
Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.5	search with cache (only 1: destruct 1; only 1: trivial).	0.0295128822327	41
Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.1	search with cache (only 1: destruct 1; only 1: reflexivity).	0.0170719623566	14
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	4.3	search with cache (only 1: intros Ext A P Q Eq; only 1: auto).	0.0151948928833	31
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	6.0.1.0.0	search with cache (only 1: intros Ext A Ha; only 1: apply Ext; only 1: split; only 1: trivial; only 1: apply False_rec).	0.0843889713287	194
Coq.Logic.IndefiniteDescription.constructive_definite_description	40
Coq.Logic.IndefiniteDescription.functional_choice	40
Coq.Logic.Berardi.AC_IF	40
Coq.Logic.Berardi.AC	40	1.11.41	search with cache (only 1: intro H; only 1: destruct H; only 1: assumption).	9.72545099258	58125
Coq.Logic.Berardi.L1	40
Coq.Logic.Berardi.retract_pow_U_U	40
Coq.Logic.Berardi.not_has_fixpoint	40
Coq.Logic.Berardi.classical_proof_irrelevance	40
Coq.Logic.ClassicalEpsilon.constructive_definite_description	40
Coq.Logic.ClassicalEpsilon.excluded_middle_informative	40
Coq.Logic.ClassicalEpsilon.classical_indefinite_description	40
Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40
Coq.Logic.ClassicalEpsilon.choice	40
Coq.Logic.Decidable.dec_not_not	40	1.3.2.1.3.12.3	search with cache (only 1: intros h1 h2; only 1: destruct h2; only 1: auto; only 1: unfold not; only 1: intro H1; only 1: elim H1; only 1: trivial).	2.09402489662	18509
Coq.Logic.Decidable.dec_True	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00499176979065	2
Coq.Logic.Decidable.dec_False	40	0.0	search with cache (only 1: unfold decidable; only 1: auto).	0.00385689735413	2
Coq.Logic.Decidable.dec_or	40	4.5.4.1	search with cache (only 1: intro H; only 1: unfold decidable; only 1: unfold not; only 1: tauto).	0.39414691925	1166
Coq.Logic.Decidable.dec_and	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0173199176788	2
Coq.Logic.Decidable.dec_not	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00870084762573	2
Coq.Logic.Decidable.dec_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0132551193237	2
Coq.Logic.Decidable.dec_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0217819213867	2
Coq.Logic.Decidable.not_not	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00692009925842	2
Coq.Logic.Decidable.not_or	40	0	search with cache (only 1: tauto).	0.0076949596405	1
Coq.Logic.Decidable.not_and	40	0.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.0165450572968	3
Coq.Logic.Decidable.not_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0157971382141	2
Coq.Logic.Decidable.imp_simp	40	2.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.010901927948	4
Coq.Logic.Decidable.not_iff	40	0.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.0626080036163	3
Coq.Logic.Decidable.not_true_iff	40	10	search with cache (only 1: tauto).	0.0148000717163	52
Coq.Logic.Decidable.not_false_iff	40	0	search with cache (only 1: tauto).	0.00621199607849	1
Coq.Logic.Decidable.not_not_iff	40	1.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0111048221588	3
Coq.Logic.Decidable.contrapositive	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0144591331482	2
Coq.Logic.Decidable.or_not_l_iff_1	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0175640583038	2
Coq.Logic.Decidable.or_not_l_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0178401470184	2
Coq.Logic.Decidable.or_not_r_iff_1	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0177619457245	2
Coq.Logic.Decidable.or_not_r_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0562479496002	2
Coq.Logic.Decidable.imp_not_l	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.017970085144	2
Coq.Logic.Decidable.not_or_iff	40	0	search with cache (only 1: tauto).	0.0144860744476	1
Coq.Logic.Decidable.not_and_iff	40	3	search with cache (only 1: tauto).	0.0128500461578	4
Coq.Logic.Decidable.not_imp_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0222887992859	2
Coq.Logic.Decidable.not_imp_rev_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0224039554596	2
Coq.Logic.Decidable.dec_functional_relation	40
Coq.Logic.WeakFan.Y_unique	40
Coq.Logic.WeakFan.Y_approx	40
Coq.Logic.WeakFan.WeakFanTheorem	40
Coq.MSets.MSetRBT.singleton_spec	40
Coq.MSets.MSetRBT.singleton_ok	40	0.0	search with cache (only 1: unfold singleton; only 1: intuition_in).	0.0153710842133	2
Coq.MSets.MSetRBT.makeBlack_spec	40
Coq.MSets.MSetRBT.makeRed_spec	40	0.0.0.0.0	search with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.0658860206604	5
Coq.MSets.MSetRBT.makeBlack_ok	40	0.0.2.0.0	search with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.0640110969543	7
Coq.MSets.MSetRBT.makeRed_ok	40	0.0.0.0.0	search with cache (only 1: destruct s; only 1: simpl; only 1: ok; only 1: simpl; only 1: intuition_in).	0.0642130374908	5
Coq.MSets.MSetRBT.rmatch	40
Coq.MSets.MSetRBT.rrmatch	40
Coq.MSets.MSetRBT.rrmatch'	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).	0.65083694458	654
Coq.MSets.MSetRBT.lbal_match	40
Coq.MSets.MSetRBT.rbal_match	40	0	search with cache (only 1: exact (rrmatch _ _ _)).	0.0110011100769	1
Coq.MSets.MSetRBT.rbal'_match	40
Coq.MSets.MSetRBT.lbalS_match	40
Coq.MSets.MSetRBT.rbalS_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.0112709999084	1
Coq.MSets.MSetRBT.lbal_spec	40
Coq.MSets.MSetRBT.lbal_ok	40
Coq.MSets.MSetRBT.rbal_spec	40
Coq.MSets.MSetRBT.rbal_ok	40
Coq.MSets.MSetRBT.rbal'_spec	40
Coq.MSets.MSetRBT.rbal'_ok	40
Coq.MSets.MSetRBT.ins_spec	40
Coq.MSets.MSetRBT.ins_ok	40
Coq.MSets.MSetRBT.add_spec'	40
Coq.MSets.MSetRBT.add_spec	40	0.0	search with cache (only 1: unfold add; only 1: now autorew).	0.042240858078	2
Coq.MSets.MSetRBT.add_ok	40	1.0.1.2.1	search with cache (only 1: unfold add; only 1: destruct s; only 1: simpl; only 1: auto; only 1: ok).	0.724110126495	43
Coq.MSets.MSetRBT.lbalS_spec	40
Coq.MSets.MSetRBT.lbalS_ok	40
Coq.MSets.MSetRBT.rbalS_spec	40
Coq.MSets.MSetRBT.rbalS_ok	40
Coq.MSets.MSetRBT.append_rr_match	40	7	search with cache (only 1: exact (rmatch _ _ _)).	0.0482089519501	35
Coq.MSets.MSetRBT.append_bb_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.0125458240509	1
Coq.MSets.MSetRBT.append_spec	40
Coq.MSets.MSetRBT.append_ok	40
Coq.MSets.MSetRBT.del_spec	40
Coq.MSets.MSetRBT.del_ok	40
Coq.MSets.MSetRBT.remove_spec	40
Coq.MSets.MSetRBT.remove_ok	40	2.0	search with cache (only 1: unfold remove; only 1: auto_tc).	0.0814850330353	24
Coq.MSets.MSetRBT.delmin_spec	40
Coq.MSets.MSetRBT.remove_min_spec1	40
Coq.MSets.MSetRBT.remove_min_spec2	40	4.0.0.0.0.0	search with cache (only 1: unfold remove_min; only 1: destruct s as [| c l y r]; only 1: easy; only 1: generalize (delmin_spec l y r c); only 1: destruct delmin as (x0, s0); only 1: easy).	0.0491359233856	12
Coq.MSets.MSetRBT.remove_min_ok	40
Coq.MSets.MSetRBT.treeify_zero_spec	40	0.1.12	search with cache (only 1: intros s Hs; only 1: simpl; only 1: auto).	0.0598330497742	97
Coq.MSets.MSetRBT.treeify_one_spec	40	2.4.12.0.2.14	search with cache (only 1: intros s Hs; only 1: induction s; only 1: simpl; only 1: easy; only 1: red; only 1: now rewrite elements_node, app_assoc_reverse).	0.852761983871	3126
Coq.MSets.MSetRBT.treeify_cont_spec	40
Coq.MSets.MSetRBT.treeify_aux_spec	40
Coq.MSets.MSetRBT.plength_aux_spec	40
Coq.MSets.MSetRBT.plength_spec	40
Coq.MSets.MSetRBT.treeify_elements	40
Coq.MSets.MSetRBT.treeify_spec	40
Coq.MSets.MSetRBT.treeify_ok	40
Coq.MSets.MSetRBT.filter_aux_elements	40
Coq.MSets.MSetRBT.filter_elements	40
Coq.MSets.MSetRBT.filter_spec	40
Coq.MSets.MSetRBT.filter_ok	40
Coq.MSets.MSetRBT.partition_aux_spec	40
Coq.MSets.MSetRBT.partition_spec	40
Coq.MSets.MSetRBT.partition_spec1	40	0.3.0	search with cache (only 1: intros Hf; only 1: unfold partition, filter; only 1: now rewrite partition_aux_spec).	0.0461690425873	6
Coq.MSets.MSetRBT.partition_spec2	40	0	search with cache (only 1: now rewrite partition_spec).	0.0159249305725	1
Coq.MSets.MSetRBT.partition_ok1	40
Coq.MSets.MSetRBT.partition_ok2	40	0.0	search with cache (only 1: rewrite partition_spec; only 1: now apply filter_ok).	0.0166118144989	2
Coq.MSets.MSetRBT.INV_init	40
Coq.MSets.MSetRBT.INV_sym	40	1.4.5.2.2.2.10	search with cache (only 1: inversion_clear 1; only 1: split; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: auto with relations).	0.846005916595	1926
Coq.MSets.MSetRBT.INV_drop	40
Coq.MSets.MSetRBT.INV_eq	40
Coq.MSets.MSetRBT.INV_lt	40
Coq.MSets.MSetRBT.INV_rev	40
Coq.MSets.MSetRBT.union_list_ok	40
Coq.MSets.MSetRBT.linear_union_ok	40
Coq.MSets.MSetRBT.fold_add_ok	40
Coq.MSets.MSetRBT.union_ok	40
Coq.MSets.MSetRBT.union_list_spec	40
Coq.MSets.MSetRBT.linear_union_spec	40
Coq.MSets.MSetRBT.fold_add_spec	40
Coq.MSets.MSetRBT.union_spec'	40
Coq.MSets.MSetRBT.union_spec	40	0.1.0.1.1.0.10.0	search with cache (only 1: unfold union; only 1: intros; only 1: destruct compare_height; only 1: apply linear_union_spec; only 1: rewrite fold_add_spec; only 1: tauto; only 1: rewrite fold_add_spec; only 1: tauto).	1.91448879242	1245
Coq.MSets.MSetRBT.inter_list_ok	40
Coq.MSets.MSetRBT.linear_inter_ok	40
Coq.MSets.MSetRBT.inter_ok	40
Coq.MSets.MSetRBT.inter_list_spec	40
Coq.MSets.MSetRBT.linear_inter_spec	40
Coq.MSets.MSetRBT.mem_proper	40
Coq.MSets.MSetRBT.inter_spec	40
Coq.MSets.MSetRBT.diff_list_ok	40
Coq.MSets.MSetRBT.diff_inter_ok	40
Coq.MSets.MSetRBT.fold_remove_ok	40	0.0.0.0.0.0.0.0	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.0291831493378	8
Coq.MSets.MSetRBT.diff_ok	40
Coq.MSets.MSetRBT.diff_list_spec	40
Coq.MSets.MSetRBT.linear_diff_spec	40
Coq.MSets.MSetRBT.fold_remove_spec	40
Coq.MSets.MSetRBT.diff_spec	40
Coq.MSets.MSetRBT.rr_nrr_rb	40
Coq.MSets.MSetRBT.arb_nrr_rb	40	4.4.32	search with cache (only 1: inversion 1; only 1: auto; only 1: auto).	1.83061099052	4989
Coq.MSets.MSetRBT.arb_nr_rb	40	2.0.14.0.0	search with cache (only 1: destruct 1; only 1: auto; only 1: revert H; only 1: destruct 1 as [l x r Hl Hr]; only 1: invrb).	0.461681127548	641
Coq.MSets.MSetRBT.rb_maxdepth	40
Coq.MSets.MSetRBT.rb_mindepth	40
Coq.MSets.MSetRBT.maxdepth_upperbound	40
Coq.MSets.MSetRBT.maxdepth_lowerbound	40
Coq.MSets.MSetRBT.singleton_rb	40
Coq.MSets.MSetRBT.makeBlack_rb	40
Coq.MSets.MSetRBT.makeRed_rr	40	0.3.1.1.0	search with cache (only 1: destruct t; only 1: invrb; only 1: invrb; only 1: simpl; only 1: auto).	0.0889699459076	25
Coq.MSets.MSetRBT.lbal_rb	40
Coq.MSets.MSetRBT.rbal_rb	40
Coq.MSets.MSetRBT.rbal'_rb	40
Coq.MSets.MSetRBT.lbalS_rb	40
Coq.MSets.MSetRBT.lbalS_arb	40
Coq.MSets.MSetRBT.rbalS_rb	40
Coq.MSets.MSetRBT.rbalS_arb	40
Coq.MSets.MSetRBT.ifred_notred	40	0.0.2.4.0.2.6.29	search with cache (only 1: destruct s as [| c l y r]; only 1: simpl; only 1: destruct 1 as [l x r Hl Hr]; only 1: tauto; only 1: simpl; only 1: descolor; only 1: tauto; only 1: tauto).	37.4582941532	57313
Coq.MSets.MSetRBT.ifred_or	40	3.0.0.1.3.1.0	search with cache (only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: descolor; only 1: intuition; only 1: intuition).	0.643511772156	599
Coq.MSets.MSetRBT.ins_rr_rb	40
Coq.MSets.MSetRBT.ins_arb	40
Coq.MSets.MSetRBT.add_rb	40
Coq.MSets.MSetRBT.append_arb_rb	40
Coq.MSets.MSetRBT.del_arb	40	0	search with cache (only 1: auto).	0.0143780708313	1
Coq.MSets.MSetRBT.remove_rb	40
Coq.MSets.MSetRBT.treeify_zero_rb	40	31	search with cache (only 1: now auto_tc).	0.153326034546	483
Coq.MSets.MSetRBT.treeify_one_rb	40
Coq.MSets.MSetRBT.treeify_cont_rb	40
Coq.MSets.MSetRBT.treeify_aux_rb	40
Coq.MSets.MSetRBT.treeify_rb	40
Coq.MSets.MSetRBT.filter_rb	40	21.4	search with cache (only 1: unfold partition, filter; only 1: now inA).	9.15626192093	19795
Coq.MSets.MSetRBT.partition_rb1	40	0.4.1.0	search with cache (only 1: rewrite partition_spec; only 1: unfold partition, filter; only 1: simpl; only 1: auto_tc).	0.0245261192322	14
Coq.MSets.MSetRBT.partition_rb2	40	0.5.1.0	search with cache (only 1: rewrite partition_spec; only 1: unfold partition, filter; only 1: simpl; only 1: auto_tc).	0.0232260227203	15
Coq.MSets.MSetRBT.fold_add_rb	40	0.0.0.1.0.0.0.0	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: tauto; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.0308971405029	17
Coq.MSets.MSetRBT.fold_remove_rb	40	0.0.0.1.0.0.0.1	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.0923321247101	68
Coq.MSets.MSetRBT.union_rb	40	2.2.5.0.0.0	search with cache (only 1: unfold union; only 1: destruct compare_height; only 1: unfold linear_union; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.572292089462	517
Coq.MSets.MSetRBT.inter_rb	40	0.0.1.0.0.0	search with cache (only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.0192849636078	7
Coq.MSets.MSetRBT.diff_rb	40	0.0.0.6.0.0	search with cache (only 1: unfold diff; only 1: destruct compare_height; only 1: unfold linear_diff; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.237524986267	205
Coq.MSets.MSetRBT.remove_min_spec1	40
Coq.MSets.MSetRBT.remove_min_spec2	40
Coq.MSets.MSetPositive.In_compat	40	0.0.0	search with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx, Hy; only 1: intuition).	0.0358710289001	3
Coq.MSets.MSetPositive.eq_equiv	40
Coq.MSets.MSetPositive.mem_spec	40	34	search with cache (only 1: firstorder).	0.357969999313	1306
Coq.MSets.MSetPositive.mem_Leaf	40	1	search with cache (only 1: trivial).	0.0140671730042	2
Coq.MSets.MSetPositive.empty_spec	40	5.0	search with cache (only 1: intros a b; only 1: discriminate).	0.0160000324249	7
Coq.MSets.MSetPositive.mem_node	40
Coq.MSets.MSetPositive.is_empty_spec	40
Coq.MSets.MSetPositive.subset_Leaf_s	40	6.8.3	search with cache (only 1: intro; only 1: intros a b; only 1: discriminate).	0.477027893066	624
Coq.MSets.MSetPositive.subset_spec	40
Coq.MSets.MSetPositive.equal_subset	40
Coq.MSets.MSetPositive.equal_spec	40
Coq.MSets.MSetPositive.eq_dec	40
Coq.MSets.MSetPositive.lex_Opp	40	0.2.0.2.0.0.1.15.6	search with cache (only 1: intros x l o r; only 1: intros; only 1: destruct o; only 1: subst; only 1: trivial; only 1: subst; only 1: trivial; only 1: subst; only 1: trivial).	8.37287783623	19525
Coq.MSets.MSetPositive.compare_bool_inv	40
Coq.MSets.MSetPositive.compare_inv	40
Coq.MSets.MSetPositive.lex_Eq	40
Coq.MSets.MSetPositive.compare_bool_Eq	40
Coq.MSets.MSetPositive.compare_equal	40
Coq.MSets.MSetPositive.compare_gt	40
Coq.MSets.MSetPositive.compare_eq	40
Coq.MSets.MSetPositive.compare_spec	40
Coq.MSets.MSetPositive.ct_cxe	40
Coq.MSets.MSetPositive.ct_xce	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0195062160492	4
Coq.MSets.MSetPositive.ct_lxl	40	0.4.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0204679965973	8
Coq.MSets.MSetPositive.ct_gxg	40	6.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.020770072937	10
Coq.MSets.MSetPositive.ct_xll	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0189990997314	4
Coq.MSets.MSetPositive.ct_xgg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.018935918808	4
Coq.MSets.MSetPositive.ct_lex	40
Coq.MSets.MSetPositive.ct_compare_bool	40
Coq.MSets.MSetPositive.compare_x_Leaf	40	0.0.0.0.0.0.3	search with cache (only 1: induction s as [| l IHl o r IHr]; only 1: simpl; only 1: trivial; only 1: unfold compare, equal; only 1: case is_empty; only 1: intuition discriminate; only 1: intuition discriminate).	0.0362768173218	21
Coq.MSets.MSetPositive.compare_empty_x	40
Coq.MSets.MSetPositive.compare_x_empty	40
Coq.MSets.MSetPositive.ct_compare	40
Coq.MSets.MSetPositive.lt_strorder	40
Coq.MSets.MSetPositive.compare_compat_1	40
Coq.MSets.MSetPositive.compare_compat	40
Coq.MSets.MSetPositive.lt_compat	40	0.0.0.0.13	search with cache (only 1: unfold lt; only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx; only 1: rewrite compare_inv, Hy, <- compare_inv; only 1: reflexivity).	4.9864089489	1278
Coq.MSets.MSetPositive.add_spec	40
Coq.MSets.MSetPositive.remove_spec	40
Coq.MSets.MSetPositive.singleton_spec	40
Coq.MSets.MSetPositive.union_spec	40
Coq.MSets.MSetPositive.inter_spec	40
Coq.MSets.MSetPositive.diff_spec	40
Coq.MSets.MSetPositive.fold_spec	40
Coq.MSets.MSetPositive.cardinal_spec	40
Coq.MSets.MSetPositive.xfilter_spec	40
Coq.MSets.MSetPositive.filter_spec	40
Coq.MSets.MSetPositive.xforall_spec	40
Coq.MSets.MSetPositive.for_all_spec	40
Coq.MSets.MSetPositive.xexists_spec	40
Coq.MSets.MSetPositive.exists_spec	40
Coq.MSets.MSetPositive.partition_filter	40
Coq.MSets.MSetPositive.partition_spec1	40
Coq.MSets.MSetPositive.partition_spec2	40	0.0.0	search with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).	0.0200140476227	3
Coq.MSets.MSetPositive.xelements_spec	40
Coq.MSets.MSetPositive.elements_spec1	40
Coq.MSets.MSetPositive.lt_rev_append	40
Coq.MSets.MSetPositive.elements_spec2	40
Coq.MSets.MSetPositive.elements_spec2w	40
Coq.MSets.MSetPositive.choose_spec1	40
Coq.MSets.MSetPositive.choose_spec2	40
Coq.MSets.MSetPositive.choose_empty	40
Coq.MSets.MSetPositive.choose_spec3'	40
Coq.MSets.MSetPositive.choose_spec3	40
Coq.MSets.MSetPositive.min_elt_spec1	40
Coq.MSets.MSetPositive.min_elt_spec3	40
Coq.MSets.MSetPositive.min_elt_spec2	40
Coq.MSets.MSetPositive.max_elt_spec1	40
Coq.MSets.MSetPositive.max_elt_spec3	40
Coq.MSets.MSetPositive.max_elt_spec2	40
Coq.MSets.MSetFacts.In_1	40	1.20.1	search with cache (only 1: intro; only 1: rewrite H; only 1: auto).	0.537728071213	1554
Coq.MSets.MSetFacts.mem_1	40
Coq.MSets.MSetFacts.mem_2	40
Coq.MSets.MSetFacts.equal_1	40
Coq.MSets.MSetFacts.equal_2	40
Coq.MSets.MSetFacts.subset_1	40
Coq.MSets.MSetFacts.subset_2	40
Coq.MSets.MSetFacts.is_empty_1	40
Coq.MSets.MSetFacts.is_empty_2	40
Coq.MSets.MSetFacts.add_1	40
Coq.MSets.MSetFacts.add_2	40	0.1.0	search with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto).	0.0224139690399	4
Coq.MSets.MSetFacts.add_3	40
Coq.MSets.MSetFacts.remove_1	40
Coq.MSets.MSetFacts.remove_2	40	0.2.1	search with cache (only 1: intros; only 1: rewrite remove_spec; only 1: intuition).	0.0262248516083	6
Coq.MSets.MSetFacts.remove_3	40	7.2	search with cache (only 1: rewrite remove_spec; only 1: intuition).	0.100028991699	59
Coq.MSets.MSetFacts.singleton_1	40
Coq.MSets.MSetFacts.singleton_2	40	0.0	search with cache (only 1: rewrite singleton_spec; only 1: auto with relations).	0.0262291431427	2
Coq.MSets.MSetFacts.union_1	40
Coq.MSets.MSetFacts.union_2	40	2.0	search with cache (only 1: rewrite union_spec; only 1: auto).	0.0253920555115	4
Coq.MSets.MSetFacts.union_3	40	1.0	search with cache (only 1: rewrite union_spec; only 1: auto).	0.0252749919891	3
Coq.MSets.MSetFacts.inter_1	40
Coq.MSets.MSetFacts.inter_2	40	1.0	search with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0245070457458	3
Coq.MSets.MSetFacts.inter_3	40	0.0	search with cache (only 1: rewrite inter_spec; only 1: auto).	0.0278589725494	2
Coq.MSets.MSetFacts.diff_1	40
Coq.MSets.MSetFacts.diff_2	40	0.0	search with cache (only 1: rewrite diff_spec; only 1: intuition).	0.13546204567	2
Coq.MSets.MSetFacts.diff_3	40	0.0	search with cache (only 1: rewrite diff_spec; only 1: intuition).	0.0317840576172	2
Coq.MSets.MSetFacts.filter_1	40
Coq.MSets.MSetFacts.filter_2	40	0.0.1.0	search with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.0326659679413	5
Coq.MSets.MSetFacts.filter_3	40	0.0.1.0	search with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.040246963501	5
Coq.MSets.MSetFacts.for_all_1	40
Coq.MSets.MSetFacts.for_all_2	40
Coq.MSets.MSetFacts.exists_1	40
Coq.MSets.MSetFacts.exists_2	40
Coq.MSets.MSetFacts.elements_1	40
Coq.MSets.MSetFacts.elements_2	40
Coq.MSets.MSetFacts.In_eq_iff	40	0.0.1	search with cache (only 1: intros E; only 1: rewrite E; only 1: intuition).	0.0232081413269	4
Coq.MSets.MSetFacts.mem_iff	40	10	search with cache (only 1: intuition).	0.0913619995117	21
Coq.MSets.MSetFacts.not_mem_iff	40	1.17.12	search with cache (only 1: compute; only 1: Ndec.eqb2eq; only 1: intuition).	1.8932158947	1370
Coq.MSets.MSetFacts.equal_iff	40	6	search with cache (only 1: intuition).	0.083976984024	11
Coq.MSets.MSetFacts.subset_iff	40	7	search with cache (only 1: intuition).	0.0836749076843	11
Coq.MSets.MSetFacts.empty_iff	40
Coq.MSets.MSetFacts.is_empty_iff	40	8	search with cache (only 1: intuition).	0.0436270236969	11
Coq.MSets.MSetFacts.singleton_iff	40	3.0	search with cache (only 1: rewrite singleton_spec; only 1: intuition).	0.0223319530487	5
Coq.MSets.MSetFacts.add_iff	40	2.0	search with cache (only 1: rewrite add_spec; only 1: intuition).	0.0339720249176	4
Coq.MSets.MSetFacts.add_neq_iff	40	0.1.2.0	search with cache (only 1: rewrite add_spec; only 1: intuition; only 1: elim H; only 1: auto with relations).	0.0569770336151	7
Coq.MSets.MSetFacts.remove_iff	40	0.4	search with cache (only 1: rewrite remove_spec; only 1: intuition).	0.0932819843292	12
Coq.MSets.MSetFacts.remove_neq_iff	40	1.0	search with cache (only 1: rewrite remove_spec; only 1: intuition).	0.0335597991943	3
Coq.MSets.MSetFacts.for_all_iff	40	6.1	search with cache (only 1: intros; only 1: intuition).	0.0574741363525	9
Coq.MSets.MSetFacts.exists_iff	40	7.0	search with cache (only 1: intros; only 1: intuition).	0.0549161434174	9
Coq.MSets.MSetFacts.elements_iff	40	8	search with cache (only 1: intuition).	0.0398008823395	14
Coq.MSets.MSetFacts.mem_b	40
Coq.MSets.MSetFacts.empty_b	40
Coq.MSets.MSetFacts.add_b	40
Coq.MSets.MSetFacts.add_neq_b	40	0.0.0.0.0.0.0.0	search with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.128371953964	8
Coq.MSets.MSetFacts.remove_b	40
Coq.MSets.MSetFacts.remove_neq_b	40	0.0.0.0.0.0.0.0	search with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	0.438501834869	8
Coq.MSets.MSetFacts.singleton_b	40
Coq.MSets.MSetFacts.union_b	40
Coq.MSets.MSetFacts.inter_b	40
Coq.MSets.MSetFacts.diff_b	40
Coq.MSets.MSetFacts.elements_b	40
Coq.MSets.MSetFacts.filter_b	40
Coq.MSets.MSetFacts.for_all_b	40
Coq.MSets.MSetFacts.exists_b	40
Coq.MSets.MSetFacts.In_m	40	8.17.6.1.0.3	search with cache (only 1: intros P; only 1: intuition; only 1: intros E; only 1: intros; only 1: rewrite <- H; only 1: auto).	7.44021296501	6772
Coq.MSets.MSetFacts.Empty_m	40	39.7	search with cache (only 1: intros P; only 1: firstorder).	12.0862631798	16682
Coq.MSets.MSetFacts.is_empty_m	40
Coq.MSets.MSetFacts.mem_m	40
Coq.MSets.MSetFacts.singleton_m	40
Coq.MSets.MSetFacts.add_m	40
Coq.MSets.MSetFacts.remove_m	40	0.2.1.7.0	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite remove_spec; only 1: rewrite remove_spec; only 1: rewrite Hs, Hx  at 1; only 1: intuition).	33.6708459854	4619
Coq.MSets.MSetFacts.union_m	40	0.1.6.0	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite union_spec; only 1: rewrite Hs, Hx  at 1; only 1: intuition).	1.20655608177	86
Coq.MSets.MSetFacts.inter_m	40	0.3.0.7.1	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite inter_spec; only 1: rewrite inter_spec; only 1: rewrite Hs, Hx  at 1; only 1: intuition).	3.71533107758	766
Coq.MSets.MSetFacts.diff_m	40	0.3.0.8.1	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite diff_spec; only 1: rewrite diff_spec; only 1: rewrite Hs, Hx  at 1; only 1: intuition).	4.62746310234	942
Coq.MSets.MSetFacts.Subset_m	40	5.2	search with cache (only 1: unfold Equal; only 1: firstorder).	0.0520880222321	25
Coq.MSets.MSetFacts.subset_m	40
Coq.MSets.MSetFacts.equal_m	40
Coq.MSets.MSetFacts.SubsetSetoid	40	0.0.2.26.3	search with cache (only 1: unfold Equal, Subset; only 1: split; only 1: auto; only 1: intros x y H s s' H0; only 1: intuition).	0.419543027878	1113
Coq.MSets.MSetFacts.In_s_m	40
Coq.MSets.MSetFacts.Empty_s_m	40	10.2	search with cache (only 1: intros x y H a; only 1: firstorder).	0.726810932159	386
Coq.MSets.MSetFacts.add_s_m	40	0.0.0	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !add_iff, Hx, Hs; only 1: intuition).	0.0619859695435	3
Coq.MSets.MSetFacts.remove_s_m	40	0.0.0	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !remove_iff, Hx, Hs; only 1: intuition).	0.0603170394897	3
Coq.MSets.MSetFacts.union_s_m	40	0.0.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !union_spec, Hs1, Hs2; only 1: intuition).	0.0894010066986	3
Coq.MSets.MSetFacts.inter_s_m	40	0.0.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !inter_spec, Hs1, Hs2; only 1: intuition).	0.0566620826721	3
Coq.MSets.MSetFacts.diff_s_m	40	0.0.1	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !diff_spec, Hs1, Hs2; only 1: intuition).	0.132124900818	4
Coq.MSets.MSetFacts.filter_equal	40
Coq.MSets.MSetFacts.filter_subset	40	0.0.0	search with cache (only 1: intros f Hf s s' Hs a; only 1: rewrite !filter_spec, Hs by auto; only 1: intuition).	0.0509650707245	3
Coq.MSets.MSetFacts.filter_ext	40
Coq.MSets.MSetProperties.In_dec	40	0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.0515389442444	5
Coq.MSets.MSetProperties.Add_Equal	40
Coq.MSets.MSetProperties.equal_refl	40	5	search with cache (only 1: intuition).	0.0280499458313	18
Coq.MSets.MSetProperties.equal_sym	40	1	search with cache (only 1: fsetdec).	0.0559859275818	2
Coq.MSets.MSetProperties.equal_trans	40	10	search with cache (only 1: fsetdec).	0.10435295105	82
Coq.MSets.MSetProperties.subset_refl	40	1	search with cache (only 1: fsetdec).	0.01238489151	2
Coq.MSets.MSetProperties.subset_trans	40	0	search with cache (only 1: fsetdec).	0.0262019634247	1
Coq.MSets.MSetProperties.subset_antisym	40	8	search with cache (only 1: fsetdec).	0.0353240966797	16
Coq.MSets.MSetProperties.subset_equal	40	12	search with cache (only 1: fsetdec).	0.414753198624	236
Coq.MSets.MSetProperties.subset_empty	40	0	search with cache (only 1: fsetdec).	0.0144000053406	1
Coq.MSets.MSetProperties.subset_remove_3	40	0	search with cache (only 1: fsetdec).	0.123095035553	1
Coq.MSets.MSetProperties.subset_diff	40	1	search with cache (only 1: fsetdec).	0.0266311168671	2
Coq.MSets.MSetProperties.subset_add_3	40	0	search with cache (only 1: fsetdec).	0.0409610271454	1
Coq.MSets.MSetProperties.subset_add_2	40	0	search with cache (only 1: fsetdec).	0.0214529037476	1
Coq.MSets.MSetProperties.in_subset	40	0	search with cache (only 1: fsetdec).	0.0202991962433	1
Coq.MSets.MSetProperties.double_inclusion	40	0.0.0.10	search with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	6.91580605507	839
Coq.MSets.MSetProperties.empty_is_empty_1	40	4.1	search with cache (only 1: intros; only 1: fsetdec).	0.0329420566559	7
Coq.MSets.MSetProperties.empty_is_empty_2	40	0	search with cache (only 1: fsetdec).	0.0225939750671	1
Coq.MSets.MSetProperties.add_equal	40	3.0	search with cache (only 1: red; only 1: fsetdec).	0.059376001358	5
Coq.MSets.MSetProperties.add_add	40	6	search with cache (only 1: fsetdec).	0.132902860641	24
Coq.MSets.MSetProperties.remove_equal	40	0	search with cache (only 1: fsetdec).	0.055920124054	1
Coq.MSets.MSetProperties.Equal_remove	40	4	search with cache (only 1: fsetdec).	0.0738339424133	5
Coq.MSets.MSetProperties.add_remove	40	0	search with cache (only 1: fsetdec).	0.0820159912109	1
Coq.MSets.MSetProperties.remove_add	40	0	search with cache (only 1: fsetdec).	0.0721390247345	1
Coq.MSets.MSetProperties.singleton_equal_add	40	0	search with cache (only 1: fsetdec).	0.0564961433411	1
Coq.MSets.MSetProperties.remove_singleton_empty	40	0	search with cache (only 1: fsetdec).	0.161022901535	1
Coq.MSets.MSetProperties.union_sym	40	1	search with cache (only 1: fsetdec).	0.0595200061798	2
Coq.MSets.MSetProperties.union_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0375690460205	1
Coq.MSets.MSetProperties.union_equal_1	40	0	search with cache (only 1: fsetdec).	0.0679879188538	1
Coq.MSets.MSetProperties.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.0549669265747	1
Coq.MSets.MSetProperties.union_assoc	40	0	search with cache (only 1: fsetdec).	0.0926268100739	1
Coq.MSets.MSetProperties.add_union_singleton	40	0	search with cache (only 1: fsetdec).	0.0572118759155	1
Coq.MSets.MSetProperties.union_add	40	0	search with cache (only 1: fsetdec).	0.0890469551086	1
Coq.MSets.MSetProperties.union_remove_add_1	40	0	search with cache (only 1: fsetdec).	0.171775102615	1
Coq.MSets.MSetProperties.union_remove_add_2	40	0	search with cache (only 1: fsetdec).	0.166743993759	1
Coq.MSets.MSetProperties.union_subset_1	40	0	search with cache (only 1: fsetdec).	0.0170941352844	1
Coq.MSets.MSetProperties.union_subset_2	40	0	search with cache (only 1: fsetdec).	0.0169808864594	1
Coq.MSets.MSetProperties.union_subset_3	40	0	search with cache (only 1: fsetdec).	0.0310230255127	1
Coq.MSets.MSetProperties.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.0392019748688	1
Coq.MSets.MSetProperties.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.0293438434601	1
Coq.MSets.MSetProperties.empty_union_1	40	0	search with cache (only 1: fsetdec).	0.0384941101074	1
Coq.MSets.MSetProperties.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.0513801574707	1
Coq.MSets.MSetProperties.not_in_union	40	1.0	search with cache (only 1: rewrite union_spec; only 1: intuition).	0.0211539268494	3
Coq.MSets.MSetProperties.inter_sym	40	1	search with cache (only 1: fsetdec).	0.045126914978	2
Coq.MSets.MSetProperties.inter_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0462920665741	1
Coq.MSets.MSetProperties.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.0509951114655	1
Coq.MSets.MSetProperties.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.0623359680176	1
Coq.MSets.MSetProperties.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.0711829662323	1
Coq.MSets.MSetProperties.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.107100963593	1
Coq.MSets.MSetProperties.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.113434076309	1
Coq.MSets.MSetProperties.inter_add_1	40	0	search with cache (only 1: fsetdec).	0.0914180278778	1
Coq.MSets.MSetProperties.inter_add_2	40	0	search with cache (only 1: fsetdec).	0.0744791030884	1
Coq.MSets.MSetProperties.empty_inter_1	40	1	search with cache (only 1: fsetdec).	0.0267639160156	2
Coq.MSets.MSetProperties.empty_inter_2	40	0	search with cache (only 1: fsetdec).	0.0266070365906	1
Coq.MSets.MSetProperties.inter_subset_1	40	0	search with cache (only 1: fsetdec).	0.0175590515137	1
Coq.MSets.MSetProperties.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.0168130397797	1
Coq.MSets.MSetProperties.inter_subset_3	40	0	search with cache (only 1: fsetdec).	0.0296490192413	1
Coq.MSets.MSetProperties.empty_diff_1	40	1	search with cache (only 1: fsetdec).	0.0315618515015	2
Coq.MSets.MSetProperties.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.0541019439697	1
Coq.MSets.MSetProperties.diff_subset	40	0	search with cache (only 1: fsetdec).	0.0203421115875	1
Coq.MSets.MSetProperties.diff_subset_equal	40	0	search with cache (only 1: fsetdec).	0.05908203125	1
Coq.MSets.MSetProperties.remove_diff_singleton	40	0	search with cache (only 1: fsetdec).	0.0589139461517	1
Coq.MSets.MSetProperties.diff_inter_empty	40	0	search with cache (only 1: fsetdec).	0.102985143661	1
Coq.MSets.MSetProperties.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.0780680179596	1
Coq.MSets.MSetProperties.Add_add	40	1.0.0.5	search with cache (only 1: red; only 1: red; only 1: intuition; only 1: fsetdec).	0.0772891044617	10
Coq.MSets.MSetProperties.Add_remove	40	0.1	search with cache (only 1: expAdd; only 1: fsetdec).	0.12651014328	3
Coq.MSets.MSetProperties.union_Add	40	0.2	search with cache (only 1: expAdd; only 1: fsetdec).	0.159148931503	4
Coq.MSets.MSetProperties.inter_Add	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.257153987885	2
Coq.MSets.MSetProperties.union_Equal	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.224065065384	2
Coq.MSets.MSetProperties.inter_Add_2	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.203353881836	2
Coq.MSets.MSetProperties.elements_Empty	40
Coq.MSets.MSetProperties.elements_empty	40
Coq.MSets.MSetProperties.of_list_1	40
Coq.MSets.MSetProperties.of_list_2	40
Coq.MSets.MSetProperties.of_list_3	40
Coq.MSets.MSetProperties.fold_spec_right	40
Coq.MSets.MSetProperties.fold_rec	40
Coq.MSets.MSetProperties.fold_rec_bis	40
Coq.MSets.MSetProperties.fold_rec_nodep	40	2.0.1.1.0	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: intros; only 1: auto with set; only 1: eauto).	0.0946710109711	43
Coq.MSets.MSetProperties.fold_rec_weak	40
Coq.MSets.MSetProperties.fold_rel	40
Coq.MSets.MSetProperties.set_induction	40
Coq.MSets.MSetProperties.set_induction_bis	40
Coq.MSets.MSetProperties.fold_identity	40	2.0.1.0.1.0	search with cache (only 1: intros; only 1: apply fold_rec; only 1: fsetdec; only 1: intros; only 1: rewrite Add_Equal in H1; only 1: fsetdec).	0.294169187546	21
Coq.MSets.MSetProperties.fold_0	40
Coq.MSets.MSetProperties.fold_1	40	16.0.0.8.0	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: intro x; only 1: intuition; only 1: fsetdec).	30.3651161194	18523
Coq.MSets.MSetProperties.fold_2	40
Coq.MSets.MSetProperties.fold_1b	40	0.0.0.0.0.1.0.2.0.1.0.0.0.0.0	search with cache (only 1: unfold Empty; only 1: intros; only 1: destruct (fold_0 s i f) as (l, (H1, (H2, H3))); only 1: rewrite H3; only 1: clear H3; only 1: generalize H, H2; only 1: clear H H2; only 1: case l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: elim (H e); only 1: elim (H2 e); only 1: intuition).	4.40959191322	4921
Coq.MSets.MSetProperties.fold_commutes	40
Coq.MSets.MSetProperties.fold_init	40
Coq.MSets.MSetProperties.fold_equal	40
Coq.MSets.MSetProperties.fold_empty	40	4.1.1.0.0	search with cache (only 1: symmetry; only 1: symmetry; only 1: apply fold_1; only 1: eauto with *; only 1: intuition).	0.146568059921	140
Coq.MSets.MSetProperties.fold_add	40	7.0.0.0.0.12.1	search with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: eauto with *).	34.3356389999	9679
Coq.MSets.MSetProperties.add_fold	40
Coq.MSets.MSetProperties.remove_fold_1	40	0.14.0.0.0.0.16.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: eauto with *; only 1: auto with set).	39.6928699017	52846
Coq.MSets.MSetProperties.remove_fold_2	40	0.2.1.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: apply fold_equal; only 1: auto with set relations).	0.0334548950195	13
Coq.MSets.MSetProperties.fold_union_inter	40
Coq.MSets.MSetProperties.fold_diff_inter	40
Coq.MSets.MSetProperties.fold_union	40
Coq.MSets.MSetProperties.fold_plus	40	0.0.5.2.1.0.9.1	search with cache (only 1: intros; only 1: rewrite 2!fold_spec_right; only 1: set (l := rev (elements s)); only 1: clearbody l; only 1: induction l; only 1: split; only 1: simpl; only 1: auto with relations).	2.14722895622	3926
Coq.MSets.MSetProperties.cardinal_fold	40
Coq.MSets.MSetProperties.cardinal_0	40
Coq.MSets.MSetProperties.cardinal_1	40	0.0.2.8.2.0	search with cache (only 1: intros; only 1: rewrite cardinal_spec; only 1: rewrite elements_Empty in H; only 1: rewrite H; only 1: simpl; only 1: auto).	0.80305314064	814
Coq.MSets.MSetProperties.cardinal_2	40
Coq.MSets.MSetProperties.cardinal_Empty	40
Coq.MSets.MSetProperties.cardinal_inv_1	40
Coq.MSets.MSetProperties.cardinal_inv_2	40
Coq.MSets.MSetProperties.cardinal_inv_2b	40	0.0.5.0.0.0.0	search with cache (only 1: intros; only 1: rewrite cardinal_spec in H; only 1: generalize (elements_2 (s:=s)); only 1: destruct (elements s); only 1: intuition; only 1: exists e; only 1: auto with relations).	0.394379854202	278
Coq.MSets.MSetProperties.Equal_cardinal	40
Coq.MSets.MSetProperties.cardinal_m	40
Coq.MSets.MSetProperties.empty_cardinal	40	0.0.0.2	search with cache (only 1: rewrite cardinal_fold; only 1: apply fold_1; only 1: auto with *; only 1: auto with set).	0.0116069316864	6
Coq.MSets.MSetProperties.singleton_cardinal	40
Coq.MSets.MSetProperties.diff_inter_cardinal	40
Coq.MSets.MSetProperties.union_cardinal	40
Coq.MSets.MSetProperties.subset_cardinal	40
Coq.MSets.MSetProperties.subset_cardinal_lt	40
Coq.MSets.MSetProperties.union_inter_cardinal	40
Coq.MSets.MSetProperties.union_cardinal_inter	40
Coq.MSets.MSetProperties.union_cardinal_le	40	2.4.0	search with cache (only 1: intros; only 1: rewrite <- union_inter_cardinal; only 1: auto with arith).	0.0282890796661	34
Coq.MSets.MSetProperties.add_cardinal_1	40	1	search with cache (only 1: auto with set).	0.00813484191895	2
Coq.MSets.MSetProperties.add_cardinal_2	40	0.0.1.2	search with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: auto with set; only 1: auto with set).	0.048642873764	32
Coq.MSets.MSetProperties.remove_cardinal_1	40	0.0.4.10.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply cardinal_2 with x; only 1: auto with set relations; only 1: auto with set relations).	3.42208003998	3502
Coq.MSets.MSetProperties.remove_cardinal_2	40	2.0	search with cache (only 1: intros; only 1: auto with set relations).	0.066691160202	38
Coq.MSets.MSetProperties.sort_equivlistA_eqlistA	40
Coq.MSets.MSetProperties.gtb_1	40
Coq.MSets.MSetProperties.leb_1	40
Coq.MSets.MSetProperties.gtb_compat	40	29.9.1	search with cache (only 1: intros s s' H; only 1: unfold leb, gtb; only 1: Dec.fsetdec).	5.40865898132	4355
Coq.MSets.MSetProperties.leb_compat	40	0.0.2.6	search with cache (only 1: unfold leb, gtb; only 1: intros a b H; only 1: rewrite H; only 1: auto).	0.408043861389	95
Coq.MSets.MSetProperties.elements_split	40
Coq.MSets.MSetProperties.elements_Add	40
Coq.MSets.MSetProperties.elements_Add_Above	40
Coq.MSets.MSetProperties.elements_Add_Below	40
Coq.MSets.MSetProperties.set_induction_max	40
Coq.MSets.MSetProperties.set_induction_min	40
Coq.MSets.MSetProperties.fold_3	40
Coq.MSets.MSetProperties.fold_4	40
Coq.MSets.MSetProperties.fold_equal	40
Coq.MSets.MSetProperties.add_fold	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0150451660156	3
Coq.MSets.MSetProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.014976978302	3
Coq.MSets.MSetProperties.choose_equal	40
Coq.MSets.MSetAVL.singleton_spec	40
Coq.MSets.MSetAVL.singleton_ok	40	0.0	search with cache (only 1: unfold singleton; only 1: intuition_in).	0.0148241519928	2
Coq.MSets.MSetAVL.create_spec	40
Coq.MSets.MSetAVL.create_ok	40	0.0.0.0.7	search with cache (only 1: constructor; only 1: ok; only 1: ok; only 1: ok; only 1: ok).	1.20112490654	42
Coq.MSets.MSetAVL.bal_spec	40
Coq.MSets.MSetAVL.bal_ok	40
Coq.MSets.MSetAVL.add_spec'	40
Coq.MSets.MSetAVL.add_spec	40	0.0.0.0.0.0.1.0.0.0	search with cache (only 1: induct ltac:(s) ltac:(x); only 1: intuition_in; only 1: intuition_in; only 1: eauto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: eauto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: eauto).	2.80539011955	255
Coq.MSets.MSetAVL.add_ok	40
Coq.MSets.MSetAVL.join_spec	40
Coq.MSets.MSetAVL.join_ok	40
Coq.MSets.MSetAVL.remove_min_spec	40
Coq.MSets.MSetAVL.remove_min_ok	40
Coq.MSets.MSetAVL.remove_min_gt_tree	40
Coq.MSets.MSetAVL.merge_spec	40
Coq.MSets.MSetAVL.merge_ok	40
Coq.MSets.MSetAVL.remove_spec	40
Coq.MSets.MSetAVL.remove_ok	40
Coq.MSets.MSetAVL.concat_spec	40
Coq.MSets.MSetAVL.concat_ok	40
Coq.MSets.MSetAVL.split_spec1	40
Coq.MSets.MSetAVL.split_spec2	40
Coq.MSets.MSetAVL.split_spec3	40
Coq.MSets.MSetAVL.split_ok	40
Coq.MSets.MSetAVL.split_ok1	40
Coq.MSets.MSetAVL.split_ok2	40	0.0.1	search with cache (only 1: destruct (@split_ok s x); only 1: auto; only 1: auto).	0.0282518863678	4
Coq.MSets.MSetAVL.inter_spec_ok	40
Coq.MSets.MSetAVL.inter_spec	40
Coq.MSets.MSetAVL.inter_ok	40	1.0.0.0	search with cache (only 1: destruct (@inter_spec_ok s1 s2); only 1: auto; only 1: auto; only 1: auto with *).	0.182160139084	36
Coq.MSets.MSetAVL.diff_spec_ok	40
Coq.MSets.MSetAVL.diff_spec	40
Coq.MSets.MSetAVL.diff_ok	40	1.0.0.0	search with cache (only 1: destruct (@diff_spec_ok s1 s2); only 1: auto; only 1: auto; only 1: auto with *).	0.163336992264	36
Coq.MSets.MSetAVL.union_spec	40
Coq.MSets.MSetAVL.union_ok	40
Coq.MSets.MSetAVL.filter_spec	40
Coq.MSets.MSetAVL.filter_weak_spec	40
Coq.MSets.MSetAVL.filter_ok	40
Coq.MSets.MSetAVL.partition_spec1'	40
Coq.MSets.MSetAVL.partition_spec2'	40	0.0.0.0.0.0	search with cache (only 1: induction s as [| h l Hl x r Hr]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Hl, <- Hr; only 1: now destruct (partition f l), (partition f r), (f x)).	0.0431571006775	6
Coq.MSets.MSetAVL.partition_spec1	40
Coq.MSets.MSetAVL.partition_spec2	40
Coq.MSets.MSetAVL.partition_ok1	40
Coq.MSets.MSetAVL.partition_ok2	40
Coq.MSets.MSetEqProperties.mem_eq	40
Coq.MSets.MSetEqProperties.equal_mem_1	40
Coq.MSets.MSetEqProperties.equal_mem_2	40
Coq.MSets.MSetEqProperties.subset_mem_1	40
Coq.MSets.MSetEqProperties.subset_mem_2	40
Coq.MSets.MSetEqProperties.empty_mem	40
Coq.MSets.MSetEqProperties.is_empty_equal_empty	40
Coq.MSets.MSetEqProperties.choose_mem_1	40	1.1	search with cache (only 1: generalize (FM.mem_iff s x), (FM.elements_iff s x), (existsb_exists (FM.eqb x) (elements s)); only 1: intuition).	0.828294038773	165
Coq.MSets.MSetEqProperties.choose_mem_2	40	0	search with cache (only 1: auto with set).	0.0133740901947	1
Coq.MSets.MSetEqProperties.add_mem_1	40	1.2	search with cache (only 1: generalize (FM.mem_iff s x), (FM.elements_iff s x), (existsb_exists (FM.eqb x) (elements s)); only 1: intuition).	0.645696878433	97
Coq.MSets.MSetEqProperties.add_mem_2	40
Coq.MSets.MSetEqProperties.remove_mem_1	40	2.0	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set relations).	0.0127398967743	4
Coq.MSets.MSetEqProperties.remove_mem_2	40
Coq.MSets.MSetEqProperties.singleton_equal_add	40	0	search with cache (only 1: auto with set).	0.0076060295105	1
Coq.MSets.MSetEqProperties.union_mem	40	0.0.0.0.0.0.0.3.0.0	search with cache (only 1: generalize (FM.mem_iff (union s s') x), (FM.mem_iff s x), (FM.mem_iff s' x), (union_spec s s' x); only 1: destruct (mem x s); only 1: intuition; only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition).	34.2040400505	5966
Coq.MSets.MSetEqProperties.inter_mem	40
Coq.MSets.MSetEqProperties.diff_mem	40
Coq.MSets.MSetEqProperties.mem_3	40	0.0	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.0152750015259	2
Coq.MSets.MSetEqProperties.mem_4	40	0.1	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto).	0.219691038132	57
Coq.MSets.MSetEqProperties.equal_refl	40	0	search with cache (only 1: auto with set).	0.00809693336487	1
Coq.MSets.MSetEqProperties.equal_sym	40
Coq.MSets.MSetEqProperties.equal_trans	40	2.5.4.7	search with cache (only 1: do 2 rewrite <- equal_iff; only 1: intros; only 1: apply equal_1; only 1: Dec.fsetdec).	1.94593000412	955
Coq.MSets.MSetEqProperties.equal_equal	40	0.0.1	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0148630142212	4
Coq.MSets.MSetEqProperties.equal_cardinal	40	0.0.1	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0134170055389	4
Coq.MSets.MSetEqProperties.subset_refl	40	1	search with cache (only 1: auto with set).	0.00803184509277	2
Coq.MSets.MSetEqProperties.subset_antisym	40	1	search with cache (only 1: auto with set).	0.0128901004791	2
Coq.MSets.MSetEqProperties.subset_trans	40
Coq.MSets.MSetEqProperties.subset_equal	40	2.0	search with cache (only 1: intros; only 1: auto with set).	0.0109250545502	4
Coq.MSets.MSetEqProperties.choose_mem_3	40
Coq.MSets.MSetEqProperties.choose_mem_4	40
Coq.MSets.MSetEqProperties.add_mem_3	40	11	search with cache (only 1: auto with set).	0.0335879325867	69
Coq.MSets.MSetEqProperties.add_equal	40	0	search with cache (only 1: auto with set).	0.00869679450989	1
Coq.MSets.MSetEqProperties.remove_mem_3	40	1.21	search with cache (only 1: do 2 rewrite <- mem_iff; only 1: eauto with set relations).	1.16531014442	643
Coq.MSets.MSetEqProperties.remove_equal	40	0.1	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.0264279842377	3
Coq.MSets.MSetEqProperties.add_remove	40	7.16.2.1	search with cache (only 1: intros; only 1: apply equal_1; only 1: generalize (FM.mem_iff s x); only 1: intuition).	17.3782968521	4843
Coq.MSets.MSetEqProperties.remove_add	40	0.1.0.15	search with cache (only 1: rewrite <- not_mem_iff; only 1: intros; only 1: apply equal_1; only 1: Dec.fsetdec).	21.3738899231	6779
Coq.MSets.MSetEqProperties.is_empty_cardinal	40	0.0.0.0.0.0.2.0	search with cache (only 1: apply eq_true_iff_eq; only 1: rewrite <- is_empty_iff; only 1: rewrite elements_Empty, cardinal_spec; only 1: destruct (elements s); only 1: intuition; only 1: intuition; only 1: discriminate; only 1: discriminate).	0.135149002075	31
Coq.MSets.MSetEqProperties.singleton_mem_1	40	1	search with cache (only 1: auto with set relations).	0.0822789669037	2
Coq.MSets.MSetEqProperties.singleton_mem_2	40	0.8	search with cache (only 1: rewrite <- not_mem_iff; only 1: eauto with set).	0.149849891663	22
Coq.MSets.MSetEqProperties.singleton_mem_3	40	1.2.0.5.0.0	search with cache (only 1: rewrite singleton_b; only 1: unfold eqb; only 1: generalize (FM.mem_iff s x); only 1: destruct (FM.eq_dec x y); only 1: auto with set; only 1: discriminate).	1.55931901932	1522
Coq.MSets.MSetEqProperties.union_sym	40	0	search with cache (only 1: auto with set).	0.00769400596619	1
Coq.MSets.MSetEqProperties.union_subset_equal	40	0	search with cache (only 1: auto with set).	0.0159039497375	1
Coq.MSets.MSetEqProperties.union_equal_1	40	0.0	search with cache (only 1: do 2 rewrite <- equal_iff; only 1: Dec.fsetdec).	0.0747590065002	2
Coq.MSets.MSetEqProperties.union_equal_2	40	0	search with cache (only 1: auto with set).	0.00869703292847	1
Coq.MSets.MSetEqProperties.union_assoc	40	0	search with cache (only 1: auto with set).	0.00767803192139	1
Coq.MSets.MSetEqProperties.add_union_singleton	40	2	search with cache (only 1: auto with set relations).	0.02219581604	3
Coq.MSets.MSetEqProperties.union_add	40	0	search with cache (only 1: auto with set).	0.00806617736816	1
Coq.MSets.MSetEqProperties.union_subset_1	40	1	search with cache (only 1: auto with set).	0.00768303871155	2
Coq.MSets.MSetEqProperties.union_subset_2	40	0	search with cache (only 1: auto with set).	0.00742197036743	1
Coq.MSets.MSetEqProperties.union_subset_3	40	0.0	search with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.0560989379883	2
Coq.MSets.MSetEqProperties.inter_sym	40	0	search with cache (only 1: auto with set).	0.00838088989258	1
Coq.MSets.MSetEqProperties.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.00958395004272	1
Coq.MSets.MSetEqProperties.inter_equal_1	40	0	search with cache (only 1: auto with set).	0.00881314277649	1
Coq.MSets.MSetEqProperties.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.00894093513489	1
Coq.MSets.MSetEqProperties.inter_assoc	40	0	search with cache (only 1: auto with set).	0.00841784477234	1
Coq.MSets.MSetEqProperties.union_inter_1	40	1	search with cache (only 1: auto with set).	0.0220949649811	2
Coq.MSets.MSetEqProperties.union_inter_2	40	0	search with cache (only 1: auto with set).	0.00775599479675	1
Coq.MSets.MSetEqProperties.inter_add_1	40	0	search with cache (only 1: auto with set).	0.00902795791626	1
Coq.MSets.MSetEqProperties.inter_add_2	40	1.17	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	3.45561003685	533
Coq.MSets.MSetEqProperties.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.00810790061951	1
Coq.MSets.MSetEqProperties.inter_subset_2	40	0	search with cache (only 1: auto with set).	0.00765085220337	1
Coq.MSets.MSetEqProperties.inter_subset_3	40	1.1.0	search with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).	0.0259010791779	5
Coq.MSets.MSetEqProperties.diff_subset	40	0	search with cache (only 1: auto with set).	0.00744104385376	1
Coq.MSets.MSetEqProperties.diff_subset_equal	40	0	search with cache (only 1: auto with set).	0.0100708007812	1
Coq.MSets.MSetEqProperties.remove_inter_singleton	40	1	search with cache (only 1: auto with set).	0.0201680660248	2
Coq.MSets.MSetEqProperties.diff_inter_empty	40	0	search with cache (only 1: auto with set).	0.00761795043945	1
Coq.MSets.MSetEqProperties.diff_inter_all	40	0	search with cache (only 1: auto with set).	0.00768613815308	1
Coq.MSets.MSetEqProperties.set_rec	40
Coq.MSets.MSetEqProperties.exclusive_set	40
Coq.MSets.MSetEqProperties.fold_empty	40	0.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.0155899524689	2
Coq.MSets.MSetEqProperties.fold_equal	40	2.0.0.0.5.6	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	6.31037402153	4524
Coq.MSets.MSetEqProperties.fold_add	40	0.6.0.0.0.0.3	search with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: eauto with *; only 1: auto with set).	4.19247817993	2924
Coq.MSets.MSetEqProperties.add_fold	40
Coq.MSets.MSetEqProperties.remove_fold_1	40	0.3.0.0.0.3.2	search with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set relations; only 1: auto with set relations).	1.80493998528	1048
Coq.MSets.MSetEqProperties.remove_fold_2	40
Coq.MSets.MSetEqProperties.fold_union	40
Coq.MSets.MSetEqProperties.add_cardinal_1	40	0	search with cache (only 1: auto with set).	0.00821995735168	1
Coq.MSets.MSetEqProperties.add_cardinal_2	40	0.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).	0.0259370803833	9
Coq.MSets.MSetEqProperties.remove_cardinal_1	40	0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).	0.0256018638611	9
Coq.MSets.MSetEqProperties.remove_cardinal_2	40	3.0.0.2.15.2.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: apply MP.fold_equal; only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto with set).	16.0463359356	3293
Coq.MSets.MSetEqProperties.union_cardinal	40	0.0.4.5.0.0.5.2.0.0.0	search with cache (only 1: intros; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: split; only 1: auto; only 1: auto; only 1: congruence; only 1: congruence; only 1: auto; only 1: auto).	2.47453308105	3426
Coq.MSets.MSetEqProperties.subset_cardinal	40	2.0	search with cache (only 1: intros; only 1: auto with set).	0.0363941192627	17
Coq.MSets.MSetEqProperties.Comp'	40	1.14.0.0.0	search with cache (only 1: red; only 1: red; only 1: intros; only 1: rewrite H; only 1: auto).	3.67057204247	693
Coq.MSets.MSetEqProperties.filter_mem	40
Coq.MSets.MSetEqProperties.for_all_filter	40
Coq.MSets.MSetEqProperties.exists_filter	40
Coq.MSets.MSetEqProperties.partition_filter_1	40	0.6.1.0	search with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: red; only 1: auto with set).	0.403566122055	210
Coq.MSets.MSetEqProperties.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.0113859176636	1
Coq.MSets.MSetEqProperties.filter_add_1	40
Coq.MSets.MSetEqProperties.filter_add_2	40
Coq.MSets.MSetEqProperties.add_filter_1	40
Coq.MSets.MSetEqProperties.add_filter_2	40	0.0.0.0.0.0.1.1.0.2.0	search with cache (only 1: red; only 1: unfold Add, MP.Add; only 1: intros; only 1: do 2 (rewrite filter_spec; auto); only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate).	9.67247891426	1579
Coq.MSets.MSetEqProperties.union_filter	40
Coq.MSets.MSetEqProperties.filter_union	40	0.0.0.0.1.1.0.0.3	search with cache (only 1: unfold Add, MP.Add, Equal; only 1: intros; only 1: set_iff; only 1: repeat rewrite filter_spec; only 1: set_iff; only 1: intuition; only 1: auto; only 1: auto; only 1: auto).	8.08944916725	652
Coq.MSets.MSetEqProperties.for_all_mem_1	40	2.1.4.0.5.1	search with cache (only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intros; only 1: intuition).	0.689561128616	572
Coq.MSets.MSetEqProperties.for_all_mem_2	40	0.6.12.0	search with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: intuition; only 1: auto).	0.655267000198	462
Coq.MSets.MSetEqProperties.for_all_mem_3	40
Coq.MSets.MSetEqProperties.for_all_mem_4	40
Coq.MSets.MSetEqProperties.for_all_exists	40
Coq.MSets.MSetEqProperties.Comp'	40	0.0.0.0	search with cache (only 1: repeat red; only 1: intros; only 1: f_equal; only 1: auto).	0.0155251026154	4
Coq.MSets.MSetEqProperties.exists_mem_1	40
Coq.MSets.MSetEqProperties.exists_mem_2	40
Coq.MSets.MSetEqProperties.exists_mem_3	40
Coq.MSets.MSetEqProperties.exists_mem_4	40
Coq.MSets.MSetEqProperties.sum_plus	40
Coq.MSets.MSetEqProperties.sum_filter	40
Coq.MSets.MSetEqProperties.fold_compat	40	1.1.0.20.4.1.10.0	search with cache (only 1: intros; only 1: apply fold_rel with (R := eqA); only 1: auto with set relations; only 1: intros; only 1: rewrite <- H; only 1: auto; only 1: auto with set relations; only 1: auto with set relations).	17.4425430298	27013
Coq.MSets.MSetEqProperties.sum_compat	40
Coq.MSets.MSetDecide.test_push	40	0	search with cache (only 1: auto).	0.0131750106812	1
Coq.MSets.MSetDecide.test_pull	40	0.0.0	search with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.135750055313	3
Coq.MSets.MSetDecide.eq_refl_iff	40	5	search with cache (only 1: intuition).	0.0208580493927	6
Coq.MSets.MSetDecide.dec_In	40	0.0.0.9.12.4	search with cache (only 1: red; only 1: firstorder; only 1: rewrite <- mem_spec; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	4.57608509064	2337
Coq.MSets.MSetDecide.dec_eq	40
Coq.MSets.MSetDecide.test_eq_trans_1	40
Coq.MSets.MSetDecide.test_eq_trans_2	40	15	search with cache (only 1: fsetdec).	1.38794088364	555
Coq.MSets.MSetDecide.test_eq_neq_trans_1	40	0	search with cache (only 1: fsetdec).	0.0985062122345	1
Coq.MSets.MSetDecide.test_eq_neq_trans_2	40	0	search with cache (only 1: fsetdec).	0.56313586235	1
Coq.MSets.MSetDecide.test_In_singleton	40	0	search with cache (only 1: fsetdec).	0.0208041667938	1
Coq.MSets.MSetDecide.test_add_In	40	1	search with cache (only 1: fsetdec).	0.0526270866394	2
Coq.MSets.MSetDecide.test_Subset_add_remove	40	0	search with cache (only 1: fsetdec).	0.0541729927063	1
Coq.MSets.MSetDecide.test_eq_disjunction	40	0	search with cache (only 1: fsetdec).	0.083153963089	1
Coq.MSets.MSetDecide.test_not_In_disj	40	0	search with cache (only 1: fsetdec).	0.118973970413	1
Coq.MSets.MSetDecide.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.136607885361	1
Coq.MSets.MSetDecide.test_iff_conj	40	2	search with cache (only 1: fsetdec).	0.0660810470581	3
Coq.MSets.MSetDecide.test_set_ops_1	40	0	search with cache (only 1: fsetdec).	0.213780879974	1
Coq.MSets.MSetDecide.eq_chain_test	40	0	search with cache (only 1: fsetdec).	0.273452997208	1
Coq.MSets.MSetDecide.test_too_complex	40	0.7.5	search with cache (only 1: intros x y H s s' H0; only 1: rewrite singleton_spec; only 1: intuition).	0.521956205368	218
Coq.MSets.MSetDecide.function_test_1	40	3	search with cache (only 1: fsetdec).	0.0965960025787	14
Coq.MSets.MSetDecide.function_test_2	40	0	search with cache (only 1: fsetdec).	0.080904006958	1
Coq.MSets.MSetDecide.test_baydemir	40	0	search with cache (only 1: fsetdec).	0.0580139160156	1
Coq.MSets.MSetGenTree.ltb_tree_iff	40
Coq.MSets.MSetGenTree.gtb_tree_iff	40
Coq.MSets.MSetGenTree.isok_iff	40
Coq.MSets.MSetGenTree.isok_Ok	40
Coq.MSets.MSetGenTree.In_1	40
Coq.MSets.MSetGenTree.In_compat	40
Coq.MSets.MSetGenTree.In_node_iff	40	0	search with cache (only 1: intuition_in).	0.034893989563	1
Coq.MSets.MSetGenTree.In_leaf_iff	40	0	search with cache (only 1: intuition_in).	0.015496969223	1
Coq.MSets.MSetGenTree.lt_leaf	40	0.0	search with cache (only 1: unfold lt_tree; only 1: intuition_in).	0.011314868927	2
Coq.MSets.MSetGenTree.gt_leaf	40	0.0	search with cache (only 1: unfold gt_tree; only 1: inversion 1).	0.00988388061523	2
Coq.MSets.MSetGenTree.lt_tree_node	40	0.0.8	search with cache (only 1: unfold lt_tree; only 1: intuition_in; only 1: order).	0.156080007553	88
Coq.MSets.MSetGenTree.gt_tree_node	40	0.0.9	search with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: order).	0.177870035172	92
Coq.MSets.MSetGenTree.lt_tree_not_in	40	0.9.2	search with cache (only 1: intuition_in; only 1: apply (StrictOrder_Irreflexive x); only 1: auto).	0.427042007446	233
Coq.MSets.MSetGenTree.lt_tree_trans	40	0.1.1.3	search with cache (only 1: intuition_in; only 1: intro; only 1: intro; only 1: order).	0.0197529792786	9
Coq.MSets.MSetGenTree.gt_tree_not_in	40	0.0.0	search with cache (only 1: intros; only 1: intro; only 1: order).	0.0103039741516	3
Coq.MSets.MSetGenTree.gt_tree_trans	40	0	search with cache (only 1: eauto).	0.00799012184143	1
Coq.MSets.MSetGenTree.lt_tree_compat	40	0.0.0.1.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: subst; only 1: order).	0.0259189605713	8
Coq.MSets.MSetGenTree.gt_tree_compat	40	0.0.0.2.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros x x' Hx s s' Hs H y Hy; only 1: subst; only 1: setoid_rewrite  <- Hx; only 1: auto).	0.0351641178131	19
Coq.MSets.MSetGenTree.empty_spec	40	6.21	search with cache (only 1: intro H; only 1: auto).	0.308165073395	429
Coq.MSets.MSetGenTree.empty_ok	40	2	search with cache (only 1: intuition_in).	0.00633597373962	3
Coq.MSets.MSetGenTree.is_empty_spec	40
Coq.MSets.MSetGenTree.mem_spec	40
Coq.MSets.MSetGenTree.min_elt_spec1	40
Coq.MSets.MSetGenTree.min_elt_spec2	40
Coq.MSets.MSetGenTree.min_elt_spec3	40
Coq.MSets.MSetGenTree.max_elt_spec1	40
Coq.MSets.MSetGenTree.max_elt_spec2	40
Coq.MSets.MSetGenTree.max_elt_spec3	40	0.0.1.0.1.2	search with cache (only 1: functional induction (max_elt s); only 1: inversion 2; only 1: inversion 1; only 1: intro H0; only 1: destruct (IHo H0 _x3); only 1: auto).	0.114530086517	116
Coq.MSets.MSetGenTree.choose_spec1	40	0.2.9.0.1.29	search with cache (only 1: intro; only 1: functional induction (min_elt s); only 1: discriminate; only 1: inversion 1; only 1: auto; only 1: auto).	9.9554438591	15962
Coq.MSets.MSetGenTree.choose_spec2	40
Coq.MSets.MSetGenTree.choose_spec3	40
Coq.MSets.MSetGenTree.elements_spec1'	40
Coq.MSets.MSetGenTree.elements_spec1	40
Coq.MSets.MSetGenTree.elements_spec2'	40
Coq.MSets.MSetGenTree.elements_spec2	40
Coq.MSets.MSetGenTree.elements_spec2w	40
Coq.MSets.MSetGenTree.elements_aux_cardinal	40
Coq.MSets.MSetGenTree.elements_cardinal	40
Coq.MSets.MSetGenTree.elements_app	40
Coq.MSets.MSetGenTree.elements_node	40
Coq.MSets.MSetGenTree.rev_elements_app	40
Coq.MSets.MSetGenTree.rev_elements_node	40
Coq.MSets.MSetGenTree.rev_elements_rev	40
Coq.MSets.MSetGenTree.sorted_app_inv	40
Coq.MSets.MSetGenTree.elements_sort_ok	40
Coq.MSets.MSetGenTree.for_all_spec	40
Coq.MSets.MSetGenTree.exists_spec	40
Coq.MSets.MSetGenTree.fold_spec'	40
Coq.MSets.MSetGenTree.fold_spec	40
Coq.MSets.MSetGenTree.subsetl_spec	40
Coq.MSets.MSetGenTree.subsetr_spec	40
Coq.MSets.MSetGenTree.subset_spec	40
Coq.MSets.MSetGenTree.eq_equiv	40
Coq.MSets.MSetGenTree.eq_Leq	40
Coq.MSets.MSetGenTree.lt_strorder	40
Coq.MSets.MSetGenTree.lt_compat	40
Coq.MSets.MSetGenTree.flatten_e_elements	40	5.10.1.1	search with cache (only 1: simpl; only 1: intros; only 1: rewrite elements_node; only 1: now rewrite !app_assoc_reverse).	3.66087913513	3137
Coq.MSets.MSetGenTree.cons_1	40
Coq.MSets.MSetGenTree.compare_end_Cmp	40
Coq.MSets.MSetGenTree.compare_more_Cmp	40	2.8.2.3.2.15.0.1	search with cache (only 1: simpl; only 1: intros; only 1: elim_compare x1 x2; only 1: auto with relations; only 1: constructor; only 1: auto with relations; only 1: constructor; only 1: auto with relations).	26.4055130482	23614
Coq.MSets.MSetGenTree.compare_cont_Cmp	40
Coq.MSets.MSetGenTree.compare_Cmp	40
Coq.MSets.MSetGenTree.compare_spec	40
Coq.MSets.MSetGenTree.equal_spec	40
Coq.MSets.MSetGenTree.mindepth_maxdepth	40
Coq.MSets.MSetGenTree.maxdepth_cardinal	40
Coq.MSets.MSetGenTree.mindepth_cardinal	40
Coq.MSets.MSetGenTree.maxdepth_log_cardinal	40
Coq.MSets.MSetGenTree.mindepth_log_cardinal	40
Coq.MSets.MSetInterface.In_compat	40
Coq.MSets.MSetInterface.eq_equiv	40
Coq.MSets.MSetInterface.eq_dec	40
Coq.MSets.MSetInterface.mem_spec	40
Coq.MSets.MSetInterface.equal_spec	40
Coq.MSets.MSetInterface.subset_spec	40
Coq.MSets.MSetInterface.empty_spec	40
Coq.MSets.MSetInterface.is_empty_spec	40
Coq.MSets.MSetInterface.add_spec	40
Coq.MSets.MSetInterface.remove_spec	40
Coq.MSets.MSetInterface.singleton_spec	40
Coq.MSets.MSetInterface.union_spec	40
Coq.MSets.MSetInterface.inter_spec	40
Coq.MSets.MSetInterface.diff_spec	40
Coq.MSets.MSetInterface.fold_spec	40
Coq.MSets.MSetInterface.cardinal_spec	40
Coq.MSets.MSetInterface.filter_spec	40
Coq.MSets.MSetInterface.for_all_spec	40
Coq.MSets.MSetInterface.exists_spec	40
Coq.MSets.MSetInterface.partition_spec1	40
Coq.MSets.MSetInterface.partition_spec2	40
Coq.MSets.MSetInterface.elements_spec1	40
Coq.MSets.MSetInterface.elements_spec2w	40
Coq.MSets.MSetInterface.choose_spec1	40
Coq.MSets.MSetInterface.choose_spec2	40
Coq.MSets.MSetInterface.lt_strorder	40
Coq.MSets.MSetInterface.lt_compat	40
Coq.MSets.MSetInterface.compare_spec	40
Coq.MSets.MSetInterface.elements_spec2	40
Coq.MSets.MSetInterface.min_elt_spec1	40
Coq.MSets.MSetInterface.min_elt_spec2	40
Coq.MSets.MSetInterface.min_elt_spec3	40
Coq.MSets.MSetInterface.max_elt_spec1	40
Coq.MSets.MSetInterface.max_elt_spec2	40
Coq.MSets.MSetInterface.max_elt_spec3	40
Coq.MSets.MSetInterface.choose_spec3	40
Coq.MSets.MSetInterface.eq_equiv	40
Coq.MSets.MSetInterface.Proper_instance_0	40	1.14.4.13	search with cache (only 1: intros x l' H H0; only 1: intro EQ; only 1: rewrite H; only 1: eauto).	1.72677111626	2207
Coq.MSets.MSetInterface.Proper_instance_1	40
Coq.MSets.MSetInterface.Proper_instance_2	40
Coq.MSets.MSetInterface.Proper_instance_3	40
Coq.MSets.MSetInterface.Proper_instance_4	40
Coq.MSets.MSetInterface.lt_compat	40
Coq.MSets.MSetInterface.lt_strorder	40
Coq.MSets.MSetInterface.lt_empty_r	40	15.47	search with cache (only 1: intro H; only 1: firstorder).	5.49354290962	12589
Coq.MSets.MSetInterface.lt_empty_l	40
Coq.MSets.MSetInterface.lt_add_lt	40
Coq.MSets.MSetInterface.lt_add_eq	40
Coq.MSets.MSetInterface.lt_strorder	40
Coq.MSets.MSetInterface.lt_compat'	40
Coq.MSets.MSetInterface.eq_cons	40	0.1.53	search with cache (only 1: intros l1 l1' l2 l2' H H'; only 1: rewrite H, H'; only 1: reflexivity).	36.0014600754	68917
Coq.MSets.MSetInterface.cons_CompSpec	40
Coq.MSets.MSetToFiniteSet.In_In	40	1.2.0.1	search with cache (only 1: intros; only 1: rewrite elements_iff; only 1: symmetry; only 1: apply elements_iff).	0.0287940502167	8
Coq.MSets.MSetToFiniteSet.Subset_Included	40	1.0	search with cache (only 1: intros; only 1: intuition).	0.0189361572266	3
Coq.MSets.MSetToFiniteSet.Equal_Same_set	40	5.5.2.0.1	search with cache (only 1: compute; only 1: intros s Hsame; only 1: intuition; only 1: eauto with *; only 1: eauto with *).	7.26270508766	1850
Coq.MSets.MSetToFiniteSet.empty_Empty_Set	40	3.0.1.0.2	search with cache (only 1: unfold Subset, Included, Same_set, In, mkEns; only 1: intuition; only 1: unfold Subset, Included, In, mkEns; only 1: intro x; only 1: Dec.fsetdec).	0.0769770145416	58
Coq.MSets.MSetToFiniteSet.Empty_Empty_set	40	1.0.8.0.0.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: Dec.fsetdec; only 1: intro; only 1: inversion 1).	0.987987041473	1013
Coq.MSets.MSetToFiniteSet.singleton_Singleton	40	1.0.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: Dec.fsetdec).	0.042759180069	4
Coq.MSets.MSetToFiniteSet.union_Union	40
Coq.MSets.MSetToFiniteSet.inter_Intersection	40	1.0.2.0.0.0.6.0.2.0.0.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro a; only 1: set_iff; only 1: inversion 1; only 1: constructor 1; only 1: auto; only 1: auto; only 1: intro a; only 1: set_iff; only 1: inversion 1; only 1: tauto).	15.4023160934	6456
Coq.MSets.MSetToFiniteSet.add_Add	40
Coq.MSets.MSetToFiniteSet.Add_Add	40
Coq.MSets.MSetToFiniteSet.remove_Subtract	40
Coq.MSets.MSetToFiniteSet.mkEns_Finite	40
Coq.MSets.MSetToFiniteSet.mkEns_cardinal	40
Coq.MSets.MSetToFiniteSet.Ens_to_MSet	40
Coq.MSets.MSetWeakList.In_compat	40
Coq.MSets.MSetWeakList.mem_spec	40
Coq.MSets.MSetWeakList.isok_iff	40
Coq.MSets.MSetWeakList.isok_Ok	40	1.3.0.1.4.3.4.0.0.0.0.1	search with cache (only 1: induction l; only 1: intuition; only 1: simpl; only 1: rewrite andb_true_iff; only 1: rewrite negb_true_iff; only 1: intros H; only 1: destruct H; only 1: constructors; only 1: rewrite <- mem_spec; only 1: congruence; only 1: auto; only 1: auto).	20.073125124	23611
Coq.MSets.MSetWeakList.add_spec	40
Coq.MSets.MSetWeakList.add_ok	40
Coq.MSets.MSetWeakList.remove_spec	40
Coq.MSets.MSetWeakList.remove_ok	40
Coq.MSets.MSetWeakList.singleton_ok	40	2.1.0	search with cache (only 1: intros; only 1: apply <- isok_iff; only 1: intuition).	0.0261600017548	6
Coq.MSets.MSetWeakList.singleton_spec	40	1.1.0.3.0.10	search with cache (only 1: unfold singleton; only 1: constructors; only 1: intuition; only 1: inv; only 1: eauto; only 1: eauto).	2.30683207512	1890
Coq.MSets.MSetWeakList.empty_ok	40	2	search with cache (only 1: intuition).	0.0171492099762	3
Coq.MSets.MSetWeakList.empty_spec	40	1.3.8.0	search with cache (only 1: unfold empty; only 1: intro; only 1: intro; only 1: inv).	0.165158987045	186
Coq.MSets.MSetWeakList.is_empty_spec	40
Coq.MSets.MSetWeakList.elements_spec1	40	1.1.3.1	search with cache (only 1: intros; only 1: split; only 1: auto; only 1: auto).	0.0947699546814	46
Coq.MSets.MSetWeakList.elements_spec2w	40	5.1.0.0	search with cache (only 1: induction s; only 1: intuition; only 1: intros; only 1: auto).	0.0429120063782	13
Coq.MSets.MSetWeakList.fold_spec	40	4.0.2.0	search with cache (only 1: unfold elements; only 1: induction s; only 1: intuition; only 1: split).	0.0476050376892	18
Coq.MSets.MSetWeakList.union_ok	40
Coq.MSets.MSetWeakList.union_spec	40
Coq.MSets.MSetWeakList.inter_ok	40
Coq.MSets.MSetWeakList.inter_spec	40
Coq.MSets.MSetWeakList.diff_ok	40
Coq.MSets.MSetWeakList.diff_spec	40
Coq.MSets.MSetWeakList.subset_spec	40
Coq.MSets.MSetWeakList.equal_spec	40
Coq.MSets.MSetWeakList.choose_spec1	40
Coq.MSets.MSetWeakList.choose_spec2	40	0.0.0.0.0.7.0.1.1	search with cache (only 1: intros; only 1: inversion H; only 1: unfold Empty; only 1: destruct s; only 1: red; only 1: intros; only 1: inv; only 1: intros; only 1: discriminate).	5.46272301674	3467
Coq.MSets.MSetWeakList.cardinal_spec	40	0	search with cache (only 1: reflexivity).	0.0146510601044	1
Coq.MSets.MSetWeakList.filter_spec'	40
Coq.MSets.MSetWeakList.filter_spec	40
Coq.MSets.MSetWeakList.filter_ok	40
Coq.MSets.MSetWeakList.for_all_spec	40
Coq.MSets.MSetWeakList.exists_spec	40
Coq.MSets.MSetWeakList.partition_spec1	40
Coq.MSets.MSetWeakList.partition_spec2	40
Coq.MSets.MSetWeakList.partition_ok1'	40
Coq.MSets.MSetWeakList.partition_ok2'	40	0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction s; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: inv; only 1: generalize (IHs H1 f x); only 1: destruct (f a); only 1: destruct (partition f s); only 1: simpl in *; only 1: auto; only 1: destruct (partition f s); only 1: simpl in *; only 1: inversion_clear H; only 1: auto; only 1: auto).	21.9976990223	7287
Coq.MSets.MSetWeakList.partition_ok1	40
Coq.MSets.MSetWeakList.partition_ok2	40
Coq.MSets.MSetList.inf_iff	40
Coq.MSets.MSetList.isok_iff	40
Coq.MSets.MSetList.isok_Ok	40	0	search with cache (only 1: tauto).	0.0126311779022	1
Coq.MSets.MSetList.mem_spec	40
Coq.MSets.MSetList.add_inf	40	5.3.1.0.2.0.2.0.5.10	search with cache (only 1: induction s; only 1: constructor; only 1: order; only 1: intros; only 1: simpl; only 1: inv; only 1: elim_compare x a; only 1: auto; only 1: eauto; only 1: intuition).	10.4864830971	10291
Coq.MSets.MSetList.add_ok	40
Coq.MSets.MSetList.add_spec	40
Coq.MSets.MSetList.remove_inf	40
Coq.MSets.MSetList.remove_ok	40	0.0.0.2.0.0.0.1.0.0.0	search with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s x; only 1: simple induction s; only 1: intuition; only 1: simpl; only 1: intros; only 1: inv; only 1: elim_compare x a; only 1: auto; only 1: auto; only 1: auto).	1.3426220417	682
Coq.MSets.MSetList.remove_spec	40
Coq.MSets.MSetList.singleton_ok	40	1	search with cache (only 1: intuition).	0.0160348415375	2
Coq.MSets.MSetList.singleton_spec	40	2.1.0.7.1	search with cache (only 1: intros x Hs; only 1: unfold singleton; only 1: intuition; only 1: inv; only 1: order).	0.446269989014	336
Coq.MSets.MSetList.union_inf	40
Coq.MSets.MSetList.union_ok	40
Coq.MSets.MSetList.union_spec	40
Coq.MSets.MSetList.inter_inf	40
Coq.MSets.MSetList.inter_ok	40
Coq.MSets.MSetList.inter_spec	40
Coq.MSets.MSetList.diff_inf	40
Coq.MSets.MSetList.diff_ok	40	0.0.0	search with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).	0.0963389873505	3
Coq.MSets.MSetList.diff_spec	40
Coq.MSets.MSetList.equal_spec	40
Coq.MSets.MSetList.subset_spec	40
Coq.MSets.MSetList.empty_ok	40	10	search with cache (only 1: intuition).	0.0227251052856	21
Coq.MSets.MSetList.empty_spec	40	29	search with cache (only 1: easy).	1.17529702187	1103
Coq.MSets.MSetList.is_empty_spec	40
Coq.MSets.MSetList.elements_spec1	40	13	search with cache (only 1: intuition).	0.235780954361	283
Coq.MSets.MSetList.elements_spec2	40	0.0.1.1.0.2.0.0	search with cache (only 1: intro l; only 1: intro H; only 1: induction l as [| x xs]; only 1: constructor; only 1: inv; only 1: constructor; only 1: tauto; only 1: tauto).	0.404498100281	224
Coq.MSets.MSetList.elements_spec2w	40	2.0.0	search with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).	0.0250599384308	5
Coq.MSets.MSetList.min_elt_spec1	40
Coq.MSets.MSetList.min_elt_spec2	40
Coq.MSets.MSetList.min_elt_spec3	40	0.0.0.1	search with cache (only 1: destruct s; only 1: inversion 2; only 1: simpl; only 1: inversion 1).	0.031289100647	14
Coq.MSets.MSetList.max_elt_spec1	40
Coq.MSets.MSetList.max_elt_spec2	40
Coq.MSets.MSetList.max_elt_spec3	40
Coq.MSets.MSetList.choose_spec3	40
Coq.MSets.MSetList.fold_spec	40	1.0	search with cache (only 1: intro s; only 1: auto).	0.0438749790192	3
Coq.MSets.MSetList.cardinal_spec	40	0	search with cache (only 1: intuition).	0.0426859855652	1
Coq.MSets.MSetList.filter_inf	40
Coq.MSets.MSetList.filter_ok	40
Coq.MSets.MSetList.filter_spec	40
Coq.MSets.MSetList.for_all_spec	40
Coq.MSets.MSetList.exists_spec	40
Coq.MSets.MSetList.partition_inf1	40
Coq.MSets.MSetList.partition_inf2	40
Coq.MSets.MSetList.partition_ok1	40
Coq.MSets.MSetList.partition_ok2	40
Coq.MSets.MSetList.partition_spec1	40
Coq.MSets.MSetList.partition_spec2	40
Coq.MSets.MSetList.In_compat	40	3.3	search with cache (only 1: intros x x' Hxx' y y' Hyy'; only 1: now rewrite Hxx', Hyy').	0.0246109962463	8
Coq.MSets.MSetList.lt_strorder	40
Coq.MSets.MSetList.lt_compat	40
Coq.MSets.MSetList.compare_spec_aux	40
Coq.MSets.MSetList.compare_spec	40
Coq.MSets.MSetList.eq_leibniz_list	40
Coq.MSets.MSetList.eq_leibniz	40
Coq.Floats.FloatAxioms.Prim2SF_inj	40
Coq.Floats.FloatAxioms.SF2Prim_inj	40
Coq.Floats.FloatLemmas.shift_value	40	9	search with cache (only 1: easy).	0.0227200984955	15
Coq.Floats.FloatLemmas.frexp_spec	40
Coq.Floats.FloatLemmas.ldexp_spec	40
Coq.Relations.Operators_Properties.clos_rt_is_preorder	40
Coq.Relations.Operators_Properties.clos_rt_idempotent	40
Coq.Relations.Operators_Properties.clos_rt_clos_rst	40
Coq.Relations.Operators_Properties.clos_r_clos_rt	40	0.0.0.0	search with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.00961422920227	4
Coq.Relations.Operators_Properties.clos_rt_t	40
Coq.Relations.Operators_Properties.clos_rst_is_equiv	40	0.0.0.1.6.2.0.12	search with cache (only 1: constructor; only 1: auto with sets; only 1: red; only 1: intros; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	1.59335112572	1548
Coq.Relations.Operators_Properties.clos_rst_idempotent	40	0.0.3.0.0.0.2.0	search with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets).	0.32429599762	457
Coq.Relations.Operators_Properties.clos_t1n_trans	40
Coq.Relations.Operators_Properties.clos_trans_t1n	40
Coq.Relations.Operators_Properties.clos_trans_t1n_iff	40
Coq.Relations.Operators_Properties.clos_tn1_trans	40	0.0.1.0.0.0.0	search with cache (only 1: induction 1; only 1: left; only 1: auto; only 1: right with y; only 1: auto; only 1: left; only 1: auto).	0.0154221057892	13
Coq.Relations.Operators_Properties.clos_trans_tn1	40
Coq.Relations.Operators_Properties.clos_trans_tn1_iff	40
Coq.Relations.Operators_Properties.clos_rt1n_step	40	1.0.5.0	search with cache (only 1: intros; only 1: right with y; only 1: auto; only 1: left).	0.0105938911438	10
Coq.Relations.Operators_Properties.clos_rtn1_step	40	4.0.2.22	search with cache (only 1: intro y0; only 1: right with y0; only 1: auto; only 1: left).	0.66517996788	3031
Coq.Relations.Operators_Properties.clos_rt1n_rt	40	2.0.14.0.0	search with cache (only 1: induction 1; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	2.37912106514	3026
Coq.Relations.Operators_Properties.clos_rt_rt1n	40
Coq.Relations.Operators_Properties.clos_rt_rt1n_iff	40
Coq.Relations.Operators_Properties.clos_rtn1_rt	40	0.0.2.1.0.1	search with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: auto; only 1: constructor 1; only 1: auto).	0.0311589241028	52
Coq.Relations.Operators_Properties.clos_rt_rtn1	40
Coq.Relations.Operators_Properties.clos_rt_rtn1_iff	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_left	40
Coq.Relations.Operators_Properties.rt1n_ind_right	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_right	40	0.0.1.0.0.0.0.2.3.1.0.1.0.4.1	search with cache (only 1: induction 3; only 1: apply H0 with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply IHclos_refl_trans1; only 1: auto with sets; only 1: intros; only 1: apply H0 with y0; only 1: auto with sets; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	10.9012839794	25963
Coq.Relations.Operators_Properties.clos_rst1n_rst	40
Coq.Relations.Operators_Properties.clos_rst1n_trans	40	0.0.10.3.0.25	search with cache (only 1: intros x y H; only 1: induction 1; only 1: auto with sets; only 1: right with y; only 1: auto; only 1: auto).	2.50784397125	10500
Coq.Relations.Operators_Properties.clos_rst1n_sym	40
Coq.Relations.Operators_Properties.clos_rst_rst1n	40
Coq.Relations.Operators_Properties.clos_rst_rst1n_iff	40
Coq.Relations.Operators_Properties.clos_rstn1_rst	40	0.0.1.0.0.0.1.0.0.0	search with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 4 with y; only 1: auto; only 1: case H; only 1: constructor 1; only 1: auto; only 1: constructor 3; only 1: constructor 1; only 1: auto).	0.765167951584	728
Coq.Relations.Operators_Properties.clos_rstn1_trans	40
Coq.Relations.Operators_Properties.clos_rstn1_sym	40
Coq.Relations.Operators_Properties.clos_rst_rstn1	40
Coq.Relations.Operators_Properties.clos_rst_rstn1_iff	40
Coq.Relations.Operators_Properties.clos_trans_transp_permute	40
Coq.Relations.Relations.inverse_image_of_equivalence	40
Coq.Relations.Relations.inverse_image_of_eq	40	0.1.2.5.0.1.8	search with cache (only 1: split; only 1: red; only 1: trivial; only 1: destruct 1; only 1: trivial; only 1: red; only 1: auto).	0.445670127869	1579
Coq.Sets.Uniset.leb_refl	40	1	search with cache (only 1: destr_bool).	0.0063681602478	2
Coq.Sets.Uniset.incl_left	40	2.9.14.10.10.5	search with cache (only 1: intro H; only 1: intro z; only 1: destruct H; only 1: intros Hfst Hsnd; only 1: rewrite Hfst; only 1: auto).	7.62763094902	30380
Coq.Sets.Uniset.incl_right	40	0.0.0.0	search with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.00976800918579	4
Coq.Sets.Uniset.seq_refl	40	4	search with cache (only 1: auto).	0.00622010231018	5
Coq.Sets.Uniset.seq_trans	40	0.0.2.10.1	search with cache (only 1: destruct x; only 1: intro H; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.495213985443	965
Coq.Sets.Uniset.seq_sym	40	0.0.2	search with cache (only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.0097382068634	5
Coq.Sets.Uniset.union_empty_left	40	0.0.0	search with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).	0.0096869468689	3
Coq.Sets.Uniset.union_empty_right	40	16.0.0.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: intuition).	1.41714000702	3948
Coq.Sets.Uniset.union_comm	40	19.3.1	search with cache (only 1: unfold seq; only 1: simpl; only 1: intuition).	5.96986317635	17301
Coq.Sets.Uniset.union_ass	40	2.2.0.0.0.0	search with cache (only 1: unfold seq; only 1: unfold charac; only 1: unfold union; only 1: destruct y; only 1: simpl; only 1: auto with bool).	0.0204269886017	11
Coq.Sets.Uniset.seq_left	40	0.0.4.0.0.0.0	search with cache (only 1: unfold seq; only 1: destruct x; only 1: destruct y; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: auto).	0.389565944672	235
Coq.Sets.Uniset.seq_right	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto).	0.022323846817	9
Coq.Sets.Uniset.union_rotate	40
Coq.Sets.Uniset.seq_congr	40
Coq.Sets.Uniset.union_perm_left	40
Coq.Sets.Uniset.uniset_twist1	40
Coq.Sets.Uniset.uniset_twist2	40
Coq.Sets.Uniset.treesort_twist1	40
Coq.Sets.Uniset.treesort_twist2	40
Coq.Sets.Multiset.meq_refl	40	1.4	search with cache (only 1: intros a b; only 1: PeanoNat.Nat.order').	0.0170891284943	7
Coq.Sets.Multiset.meq_trans	40
Coq.Sets.Multiset.meq_sym	40	5.0.0	search with cache (only 1: destruct y; only 1: unfold meq; only 1: auto).	0.0207509994507	8
Coq.Sets.Multiset.munion_empty_left	40	0.0.0	search with cache (only 1: destruct x; only 1: unfold meq; only 1: reflexivity).	0.0186450481415	3
Coq.Sets.Multiset.munion_empty_right	40	0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).	0.0218698978424	4
Coq.Sets.Multiset.munion_comm	40	16.3.0	search with cache (only 1: unfold meq; only 1: simpl; only 1: auto with arith).	7.49610185623	12664
Coq.Sets.Multiset.munion_ass	40	1.4.1.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: auto with arith).	0.21467089653	81
Coq.Sets.Multiset.meq_left	40	1.0.0.3.0	search with cache (only 1: unfold meq; only 1: simpl; only 1: destruct x; only 1: destruct y; only 1: auto with arith).	0.182230949402	71
Coq.Sets.Multiset.meq_right	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto with arith).	0.0381460189819	9
Coq.Sets.Multiset.munion_rotate	40
Coq.Sets.Multiset.meq_congr	40	3.1.4.0	search with cache (only 1: unfold munion; only 1: unfold meq; only 1: unfold multiplicity; only 1: auto with arith).	0.845417976379	564
Coq.Sets.Multiset.munion_perm_left	40
Coq.Sets.Multiset.multiset_twist1	40
Coq.Sets.Multiset.multiset_twist2	40
Coq.Sets.Multiset.treesort_twist1	40
Coq.Sets.Multiset.treesort_twist2	40
Coq.Sets.Multiset.meq_singleton	40
Coq.Sets.Integers.le_reflexive	40	1	search with cache (only 1: auto with sets).	0.0115160942078	2
Coq.Sets.Integers.le_antisym	40	2.2.0	search with cache (only 1: red; only 1: intros Y c2 H'0; only 1: auto with sets arith).	0.218475818634	30
Coq.Sets.Integers.le_trans	40	0.2.0.4.0.2.0	search with cache (only 1: red; only 1: intro H'5; only 1: intros x y H H'; only 1: elim H'; only 1: auto; only 1: intro n'; only 1: auto with sets).	0.537928104401	526
Coq.Sets.Integers.le_Order	40	0.0.0.0.0.0.0.0.0.0.0.0.0.103	search with cache (only 1: split; only 1: red; only 1: auto with arith; only 1: red; only 1: intros; only 1: apply PeanoNat.Nat.le_trans with y; only 1: auto; only 1: auto; only 1: red; only 1: intros x y H H'; only 1: rewrite (PeanoNat.Nat.le_antisymm x y); only 1: auto; only 1: auto; only 1: auto).	3.329682827	13448
Coq.Sets.Integers.triv_nat	40	15.5	search with cache (only 1: intro f; only 1: split).	0.220590114594	489
Coq.Sets.Integers.nat_po	40
Coq.Sets.Integers.le_total_order	40
Coq.Sets.Integers.Finite_subset_has_lub	40
Coq.Sets.Integers.Integers_has_no_ub	40
Coq.Sets.Integers.Integers_infinite	40
Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	2.13.3	search with cache (only 1: intros; only 1: intros x' x'' Hx' Hx''; only 1: auto).	0.0918209552765	491
Coq.Sets.Relations_1_facts.Equiv_from_preorder	40
Coq.Sets.Relations_1_facts.Equiv_from_order	40	4.1.0.0	search with cache (only 1: intros U R H'; only 1: elim H'; only 1: intros H'0 H'1; only 1: auto  10 with sets).	0.0740420818329	32
Coq.Sets.Relations_1_facts.contains_is_preorder	40	18	search with cache (only 1: auto  10 with sets).	0.0908081531525	248
Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40	1.2.0.3.0.2.4.0.0.3.0.8	search with cache (only 1: intro h; only 1: apply Definition_of_equivalence; only 1: red; only 1: auto  10 with sets; only 1: red; only 1: intro z; only 1: destruct 2; only 1: destruct H; only 1: auto  10 with sets; only 1: red; only 1: induction 1; only 1: auto with sets).	4.97787904739	13663
Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	0.2.5.1.4	search with cache (only 1: red; only 1: unfold same_relation at 1; only 1: intros H'0 H'1; only 1: destruct 1; only 1: auto  10 with sets).	0.419553041458	748
Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.0	search with cache (only 1: unfold same_relation; only 1: intuition).	0.0108070373535	2
Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	0.1	search with cache (only 1: unfold same_relation; only 1: intuition).	0.0635068416595	74
Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40
Coq.Sets.Relations_2_facts.Rstar_reflexive	40	3.3	search with cache (only 1: red; only 1: auto  10 with sets).	0.0148029327393	23
Coq.Sets.Relations_2_facts.Rplus_contains_R	40	0	search with cache (only 1: auto  10 with sets).	0.00574493408203	1
Coq.Sets.Relations_2_facts.Rstar_contains_R	40
Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40	0.1.0.0.0.0.7.2.14	search with cache (only 1: intro z; only 1: intros U R; only 1: induction 1; only 1: apply Rstar_n with y; only 1: auto  10 with sets; only 1: auto with sets; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets).	11.401070118	33505
Coq.Sets.Relations_2_facts.Rstar_transitive	40
Coq.Sets.Relations_2_facts.Rstar_cases	40
Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40
Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40
Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40	0.0.0.0.1.3.2.1.1.17.3.3	search with cache (only 1: intro T; only 1: intuition; only 1: intros x y H'; only 1: elim H'; only 1: auto with sets; only 1: intros x0 y0 z H'0 H'1 H'2; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: apply T1 with y0; only 1: auto with sets; only 1: auto with sets).	25.0546998978	79264
Coq.Sets.Relations_2_facts.star_monotone	40	0.0.4.5.0.0.6.2	search with cache (only 1: intuition; only 1: intros x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).	2.54743385315	7434
Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40
Coq.Sets.Relations_2_facts.Lemma1	40
Coq.Sets.Permut.cong_congr	40
Coq.Sets.Permut.comm_right	40	3.1.4	search with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).	0.0239019393921	32
Coq.Sets.Permut.comm_left	40	0.3.0	search with cache (only 1: intros; only 1: apply cong_left; only 1: apply op_comm).	0.00915598869324	6
Coq.Sets.Permut.perm_right	40
Coq.Sets.Permut.perm_left	40
Coq.Sets.Permut.op_rotate	40
Coq.Sets.Permut.twist	40
Coq.Sets.Image.Im_def	40
Coq.Sets.Image.Im_add	40
Coq.Sets.Image.image_empty	40	2.4.2.1.0.0.0.5	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: destruct 1; only 1: auto using Im_def with sets).	0.698070049286	811
Coq.Sets.Image.finite_image	40
Coq.Sets.Image.Im_inv	40	0.5.6.1.9.0.0.8	search with cache (only 1: intros H'5 H'8; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros; only 1: rewrite H0; only 1: elim H'0; only 1: exists x; only 1: auto using Im_def with sets).	8.76870703697	25030
Coq.Sets.Image.not_injective_elim	40
Coq.Sets.Image.cardinal_Im_intro	40
Coq.Sets.Image.In_Image_elim	40
Coq.Sets.Image.injective_preserves_cardinal	40
Coq.Sets.Image.cardinal_decreases	40
Coq.Sets.Image.Pigeonhole	40
Coq.Sets.Image.Pigeonhole_principle	40
Coq.Sets.Infinite_sets.make_new_approximant	40
Coq.Sets.Infinite_sets.approximants_grow	40
Coq.Sets.Infinite_sets.approximants_grow'	40
Coq.Sets.Infinite_sets.approximant_can_be_any_size	40
Coq.Sets.Infinite_sets.Image_set_continuous	40
Coq.Sets.Infinite_sets.Image_set_continuous'	40
Coq.Sets.Infinite_sets.Pigeonhole_bis	40
Coq.Sets.Infinite_sets.Pigeonhole_ter	40
Coq.Sets.Powerset.Empty_set_minimal	40	23.5.5	search with cache (only 1: red; only 1: red; only 1: destruct 1).	0.747776031494	4077
Coq.Sets.Powerset.Power_set_Inhabited	40	11.4.73	search with cache (only 1: intro x; only 1: exists x; only 1: auto with sets).	1.21061515808	16109
Coq.Sets.Powerset.Inclusion_is_an_order	40	23	search with cache (only 1: auto  10 with sets).	0.1642100811	448
Coq.Sets.Powerset.Inclusion_is_transitive	40	0	search with cache (only 1: auto  6 with sets).	0.00628113746643	1
Coq.Sets.Powerset.Power_set_PO	40
Coq.Sets.Powerset.Strict_Rel_is_Strict_Included	40	1	search with cache (only 1: auto with sets).	0.00652408599854	2
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion_left	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive	40	0.4.0.0.1.0.0.0.0.7	search with cache (only 1: red; only 1: intros x y z H' H'0; only 1: elim Strict_Rel_is_Strict_Included; only 1: unfold contains; only 1: intros H'1 H'2; only 1: apply H'1; only 1: apply Strict_Rel_Transitive_with_Rel with (y := y); only 1: auto with sets; only 1: apply H'1; only 1: auto with sets).	7.17980098724	3531
Coq.Sets.Powerset.Empty_set_is_Bottom	40	0.2.2.0.0.0.53.1	search with cache (only 1: intro X; only 1: repeat split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: red; only 1: simpl; only 1: auto with sets).	1.84132194519	9158
Coq.Sets.Powerset.Union_minimal	40
Coq.Sets.Powerset.Intersection_maximal	40	2.0.0.0	search with cache (only 1: intros a b X H' H'0; only 1: red; only 1: intros x H'1; only 1: auto with sets).	0.0127289295197	6
Coq.Sets.Powerset.Union_increases_l	40	1	search with cache (only 1: auto with sets).	0.00780892372131	2
Coq.Sets.Powerset.Union_increases_r	40	0	search with cache (only 1: auto with sets).	0.00723910331726	1
Coq.Sets.Powerset.Intersection_decreases_l	40	0.0.0.1.2.1	search with cache (only 1: intro X; only 1: intro A; only 1: red; only 1: intros x H'1; only 1: elim H'1; only 1: auto with sets).	0.030858039856	25
Coq.Sets.Powerset.Intersection_decreases_r	40	0.0.0.0.0	search with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.014121055603	5
Coq.Sets.Powerset.Union_is_Lub	40
Coq.Sets.Powerset.Intersection_is_Glb	40
Coq.Sets.Classical_sets.not_included_empty_Inhabited	40
Coq.Sets.Classical_sets.not_empty_Inhabited	40
Coq.Sets.Classical_sets.Inhabited_Setminus	40
Coq.Sets.Classical_sets.Strict_super_set_contains_new_element	40
Coq.Sets.Classical_sets.Subtract_intro	40	0.2.3	search with cache (only 1: red; only 1: red; only 1: auto  7 using Inhabited_Setminus with sets).	0.26423406601	62
Coq.Sets.Classical_sets.Subtract_inv	40
Coq.Sets.Classical_sets.Included_Strict_Included	40
Coq.Sets.Classical_sets.Strict_Included_inv	40
Coq.Sets.Classical_sets.not_SIncl_empty	40	0.25	search with cache (only 1: destruct 1; only 1: auto with sets).	2.66903495789	6626
Coq.Sets.Classical_sets.Complement_Complement	40
Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40	3.0.9.2.1.1	search with cache (only 1: intro T; only 1: generalize Rstar_contains_R; only 1: intros U R; only 1: intros x0 a H'1; only 1: exists a; only 1: auto with sets).	3.67042303085	9675
Coq.Sets.Relations_3_facts.coherent_symmetric	40
Coq.Sets.Relations_3_facts.Strong_confluence	40
Coq.Sets.Relations_3_facts.Strong_confluence_direct	40
Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40
Coq.Sets.Relations_3_facts.Newman	40
Coq.Sets.Powerset_Classical_facts.sincl_add_x	40
Coq.Sets.Powerset_Classical_facts.incl_soustr_in	40	0.0.0.4.0	search with cache (only 1: red; only 1: intro H'3; only 1: intros A x y H'; only 1: elim H'; only 1: auto with sets).	0.0548779964447	35
Coq.Sets.Powerset_Classical_facts.incl_soustr	40	0.6.14.0	search with cache (only 1: intros X Y I NI; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	4.12444901466	1949
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_l	40
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_r	40
Coq.Sets.Powerset_Classical_facts.add_soustr_2	40
Coq.Sets.Powerset_Classical_facts.add_soustr_1	40
Coq.Sets.Powerset_Classical_facts.add_soustr_xy	40
Coq.Sets.Powerset_Classical_facts.incl_st_add_soustr	40
Coq.Sets.Powerset_Classical_facts.Sub_Add_new	40
Coq.Sets.Powerset_Classical_facts.Simplify_add	40
Coq.Sets.Powerset_Classical_facts.Included_Add	40
Coq.Sets.Powerset_Classical_facts.setcover_inv	40
Coq.Sets.Powerset_Classical_facts.Add_covers	40
Coq.Sets.Powerset_Classical_facts.covers_Add	40
Coq.Sets.Powerset_Classical_facts.covers_is_Add	40
Coq.Sets.Powerset_Classical_facts.Singleton_atomic	40
Coq.Sets.Powerset_Classical_facts.less_than_singleton	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel_left	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive	40
Coq.Sets.Powerset_facts.Empty_set_zero	40	80	search with cache (only 1: auto  10 with sets).	3.90749001503	16648
Coq.Sets.Powerset_facts.Empty_set_zero_right	40	0	search with cache (only 1: auto  6 with sets).	0.00827383995056	1
Coq.Sets.Powerset_facts.Empty_set_zero'	40	0.22	search with cache (only 1: unfold Add at 1; only 1: auto  6 with sets).	0.33612704277	1049
Coq.Sets.Powerset_facts.less_than_empty	40	0	search with cache (only 1: auto using Noone_in_empty with sets).	0.0082311630249	1
Coq.Sets.Powerset_facts.Union_commutative	40	0	search with cache (only 1: auto with sets).	0.00794291496277	1
Coq.Sets.Powerset_facts.Union_associative	40	15.4.2.1	search with cache (only 1: intro IT; only 1: red in IT; only 1: generalize Inclusion_is_transitive; only 1: auto  10 with sets).	2.98414921761	3161
Coq.Sets.Powerset_facts.Union_idempotent	40	0	search with cache (only 1: auto  6 with sets).	0.00908994674683	1
Coq.Sets.Powerset_facts.Union_absorbs	40	1	search with cache (only 1: auto  7 with sets).	0.0132689476013	2
Coq.Sets.Powerset_facts.Couple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_Couple	40	0.0.0.0.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.371806144714	602
Coq.Sets.Powerset_facts.Triple_as_Couple_Singleton	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	5.80685305595	6763
Coq.Sets.Powerset_facts.Intersection_commutative	40	0.1.3.2.0.1.3.2.0.8.9	search with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets).	6.86617612839	9338
Coq.Sets.Powerset_facts.Distributivity	40
Coq.Sets.Powerset_facts.Distributivity_l	40
Coq.Sets.Powerset_facts.Distributivity'	40
Coq.Sets.Powerset_facts.Union_add	40	0.1.23	search with cache (only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).	21.085832119	31500
Coq.Sets.Powerset_facts.Non_disjoint_union	40	0.0.0.0.0.0.1.7.2.13.1.6	search with cache (only 1: unfold Add at 1; only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: auto with sets).	23.6142129898	47094
Coq.Sets.Powerset_facts.Non_disjoint_union'	40
Coq.Sets.Powerset_facts.singlx	40	0.3.1.1.1.0	search with cache (only 1: unfold Add at 1; only 1: intros x y H'; only 1: elim H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto using Empty_set_zero with sets).	0.156833171844	222
Coq.Sets.Powerset_facts.incl_add	40	1.0	search with cache (only 1: unfold Add; only 1: auto using Union_associative with sets).	0.00738382339478	3
Coq.Sets.Powerset_facts.incl_add_x	40
Coq.Sets.Powerset_facts.Add_commutative	40	1.2	search with cache (only 1: unfold Add; only 1: auto  9 with sets).	0.0298669338226	5
Coq.Sets.Powerset_facts.Add_commutative'	40
Coq.Sets.Powerset_facts.Add_distributes	40
Coq.Sets.Powerset_facts.setcover_intro	40	2.1	search with cache (only 1: intros y H'1; only 1: auto with sets).	0.00813508033752	5
Coq.Sets.Powerset_facts.Disjoint_Intersection	40
Coq.Sets.Powerset_facts.Intersection_Empty_set_l	40	1.1.0.0.1	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intuition; only 1: intuition).	0.00976920127869	8
Coq.Sets.Powerset_facts.Intersection_Empty_set_r	40	0.0	search with cache (only 1: intros; only 1: auto with sets).	0.00814700126648	2
Coq.Sets.Powerset_facts.Seminus_Empty_set_l	40	0.0.0.1.1.1.1.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets).	0.199266910553	155
Coq.Sets.Powerset_facts.Seminus_Empty_set_r	40	0.2.0.1.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: auto with sets; only 1: intuition).	0.0201900005341	15
Coq.Sets.Powerset_facts.Setminus_Union_l	40
Coq.Sets.Powerset_facts.Setminus_Union_r	40
Coq.Sets.Powerset_facts.Setminus_Disjoint_noop	40
Coq.Sets.Powerset_facts.Setminus_Included_empty	40	0.0.1.4.0.0.0.4.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: inversion_clear H1; only 1: contradict H; only 1: intuition; only 1: intros x H1; only 1: inversion_clear H1).	0.745392799377	1060
Coq.Sets.Constructive_sets.Extension	40	6.1.6.1.0.7.2	search with cache (only 1: red; only 1: intros A B []; only 1: split; only 1: intro H; only 1: trivial; only 1: intro H; only 1: trivial).	1.14918208122	5797
Coq.Sets.Constructive_sets.Noone_in_empty	40	17.2	search with cache (only 1: red; only 1: contradiction).	0.114547967911	640
Coq.Sets.Constructive_sets.Included_Empty	40	1.0.0	search with cache (only 1: red; only 1: red; only 1: destruct 1).	0.00707316398621	4
Coq.Sets.Constructive_sets.Add_intro1	40	2.25.0.4	search with cache (only 1: intro; only 1: intros x H; only 1: left; only 1: auto with sets).	9.34722995758	54880
Coq.Sets.Constructive_sets.Add_intro2	40	0.0	search with cache (only 1: unfold Add at 1; only 1: auto with sets).	0.00696206092834	2
Coq.Sets.Constructive_sets.Inhabited_add	40	0.7.0.1.5	search with cache (only 1: intro; only 1: intro; only 1: unfold Add at 1; only 1: exists x; only 1: auto with sets).	0.24699306488	968
Coq.Sets.Constructive_sets.Inhabited_not_empty	40
Coq.Sets.Constructive_sets.Add_not_Empty	40
Coq.Sets.Constructive_sets.not_Empty_Add	40	10.9.15.2.2.0	search with cache (only 1: intros A x; only 1: red; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).	10.068267107	62807
Coq.Sets.Constructive_sets.Singleton_inv	40	0.6.1	search with cache (only 1: intros x H'0; only 1: destruct 1; only 1: trivial).	0.0150370597839	13
Coq.Sets.Constructive_sets.Singleton_intro	40	0.0.0	search with cache (only 1: intros x y H'; only 1: elim H'; only 1: trivial with sets).	0.010440826416	3
Coq.Sets.Constructive_sets.Union_inv	40	8.0.6.7.5	search with cache (only 1: intros x H'0; only 1: intros; only 1: destruct H; only 1: auto with sets; only 1: auto with sets).	2.4246430397	7555
Coq.Sets.Constructive_sets.Add_inv	40
Coq.Sets.Constructive_sets.Intersection_inv	40	0.0.0	search with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets).	0.0108659267426	3
Coq.Sets.Constructive_sets.Couple_inv	40	3.3.0.6	search with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).	0.309772968292	501
Coq.Sets.Constructive_sets.Setminus_intro	40	2.0	search with cache (only 1: intros B C x H'; only 1: auto with sets).	0.00931406021118	4
Coq.Sets.Constructive_sets.Strict_Included_intro	40	0.0	search with cache (only 1: intros B C H'; only 1: auto with sets).	0.00866484642029	2
Coq.Sets.Constructive_sets.Strict_Included_strict	40	0.18.1	search with cache (only 1: intros x H; only 1: apply H; only 1: auto with sets).	0.276212930679	900
Coq.Sets.Finite_sets_facts.finite_cardinal	40
Coq.Sets.Finite_sets_facts.cardinal_finite	40	0.1.8.9.4	search with cache (only 1: intro H'; only 1: intros x H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets).	1.07800793648	2407
Coq.Sets.Finite_sets_facts.Add_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Singleton_is_finite	40	1.24.46	search with cache (only 1: intuition; only 1: rewrite <- (Empty_set_zero' U x); only 1: auto with sets).	1.8776409626	12882
Coq.Sets.Finite_sets_facts.Union_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_downward_closed	40
Coq.Sets.Finite_sets_facts.Intersection_preserves_finite	40
Coq.Sets.Finite_sets_facts.cardinalO_empty	40	0.10.27	search with cache (only 1: intros x H1; only 1: inversion_clear H1; only 1: auto with sets).	5.84722518921	6403
Coq.Sets.Finite_sets_facts.inh_card_gt_O	40
Coq.Sets.Finite_sets_facts.card_soustr_1	40
Coq.Sets.Finite_sets_facts.cardinal_is_functional	40
Coq.Sets.Finite_sets_facts.cardinal_Empty	40
Coq.Sets.Finite_sets_facts.cardinal_unicity	40
Coq.Sets.Finite_sets_facts.card_Add_gen	40
Coq.Sets.Finite_sets_facts.incl_st_card_lt	40
Coq.Sets.Finite_sets_facts.incl_card_le	40
Coq.Sets.Finite_sets_facts.G_aux	40
Coq.Sets.Finite_sets_facts.Generalized_induction_on_finite_sets	40
Coq.Sets.Finite_sets.cardinal_invert	40
Coq.Sets.Finite_sets.cardinal_elim	40	5.1.0.0.0.0.0.0.4	search with cache (only 1: intro H'1; only 1: intros X H'; only 1: elim H'; only 1: auto using Noone_in_empty with sets; only 1: induction 1; only 1: intros x H'0; only 1: auto using Noone_in_empty with sets; only 1: exists x; only 1: auto with sets).	1.17710518837	2623