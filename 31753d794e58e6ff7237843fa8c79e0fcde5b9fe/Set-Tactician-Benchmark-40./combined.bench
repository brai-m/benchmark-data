coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_neg	40	3.745697	1718	201	1.17.2	synth with cache (only 1: intros H; only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_mult	40	0.066084	7	3	0.4.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Rsrt	40	0.024241	1	1	0	synth with cache (only 1: exact RTheory).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.Rmax_l	40	0.058069	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.Rmax_r	40	0.062660	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.Rmin_l	40	0.057436	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.Rmin_r	40	0.060149	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.12.dev	Coq.Reals.ROrderedType.Req_dec	40	0.348710	49	32	0.0.2.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_plus	40	7.291592	2904	404	3.0.14.9	synth with cache (only 1: intro; only 1: unfold Rsqr; only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_minus	40	0.053005	2	2	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_neg_minus	40	1.577416	492	53	13.3	synth with cache (only 1: intros H1 H2; only 1: ring_Rsqr).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_1	40	0.027054	2	2	0.0	synth with cache (only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy_prod.sum_N_predN	40	0.763978	104	61	0.4.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: elim (Nat.lt_irrefl _ H); only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy_prod.sum_plus	40	0.133444	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Fourier_util.Rlt_mult_inv_pos	40	2.055425	355	180	0.0.0.1.4	synth with cache (only 1: intros a b Ha Hb; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: apply Rinv_0_lt_compat; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.exp_cof_no_R0	40	7.787553	1872	348	2.6.0.6.0	synth with cache (only 1: intro; only 1: apply Rlt_dichotomy_converse; only 1: right; only 1: apply Rinv_0_lt_compat; only 1: apply INR_fact_lt_0).
coq-tactician-stdlib.8.12.dev	Coq.Floats.FloatLemmas.shift_value	40	0.087225	2	1	1	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.tan_PI	40	2.648327	427	177	0.4.5.0	synth with cache (only 1: unfold tan; only 1: rewrite sin_PI; only 1: unfold Rminus, Rdiv; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.P_Rmin	40	0.668384	177	48	2.3.0.1	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto with real; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.IZN_var	40	1.020303	381	76	0.1.0.8	synth with cache (only 1: intros x IH; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.eps2_Rgt_R0	40	13.695474	5754	1054	0.2.2.19.0	synth with cache (only 1: intros n1 H'; only 1: unfold Rgt; only 1: apply Rmult_lt_0_compat; only 1: auto with real; only 1: apply Rinv_0_lt_compat, Rlt_0_2).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.eps2	40	0.749113	155	42	0.0.0.0.8	synth with cache (only 1: intro; only 1: rewrite <- double; only 1: rewrite <- Rmult_assoc; only 1: apply Rinv_r_simpl_m; only 1: now apply not_0_IZR).
coq-tactician-stdlib.8.12.dev	Coq.Reals.ArithProp.minus_neq_O	40	40.095034	34419	3373
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.INR_fact_neq_0	40	40.057750	17951	2216
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.fact_simpl	40	0.027389	2	2	0.0	synth with cache (only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.tech_up	40	40.084719	31632	3313
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_case	40	40.079717	30887	3579
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsigma.Sigma.sigma_split	40	40.050643	17024	2183
coq-tactician-stdlib.8.12.dev	Coq.Reals.Binomial.pascal_step1	40	40.047795	13371	1901
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_case_strong	40	4.035128	2425	565	3.0.0.0.0.4.6.1	synth with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2); only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: unfold Rle; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.eps4	40	10.159458	3315	399	23.6	synth with cache (only 1: intros n; only 1: field).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.Rlt_eps2_eps	40	0.043060	2	2	0.0	synth with cache (only 1: intros; only 1: lra).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.Rlt_eps4_eps	40	0.190834	73	16	0.0.5.3	synth with cache (only 1: intros; only 1: unfold IZR, IPR; only 1: simpl; only 1: lra).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqSeries.sum_maj1	40	40.048175	15162	3757
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.growing_cv	40	40.097696	35800	4784
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Rsor	40	40.087759	31247	3567
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_fun.Alembert_exp	40	40.038709	11047	3647
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.R.plus_max_distr_l	40	40.060058	7323	1767
coq-tactician-stdlib.8.12.dev	Coq.Reals.ROrderedType.Reqb_eq	40	40.043282	7776	1628
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_R.Rsth	40	0.286827	9	7	1.0.0.0.2	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.EUn_noempty	40	40.101697	35395	3997
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.in_holed_interval_dec	40	40.078912	27177	3557
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Rsth	40	0.134205	9	7	1.0.0.0.2	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_locally_ext	40	40.048990	15046	4148
coq-tactician-stdlib.8.12.dev	Coq.Reals.Alembert.Alembert_C1	40	40.118612	45084	4299
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rprod.prod_SO_split	40	40.042573	12014	2467
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Rinv_1	40	4.534422	1652	265	1.2.15.0	synth with cache (only 1: intro; only 1: elim archimed with x; only 1: intros H1 _; only 1: field).
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.CV_ALT_step0	40	40.042918	13419	1671
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.Un_in_EUn	40	2.808584	4962	308	0.31.8	synth with cache (only 1: intros; only 1: exists n; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.formule	40	40.027922	7555	1585
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_gt_0_0	40	40.060177	6726	1462
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis3.derivable_pt_lim_div	40	40.052626	17507	3158
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_pos_lt	40	0.095801	25	10	4.2	synth with cache (only 1: intros a Ha; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy_prod.cauchy_finite	40	40.055694	18099	1544
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.interior_P1	40	40.135606	55028	4920
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.interior_P2	40	0.022671	8	3	3.2.0	synth with cache (only 1: unfold interior; only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_alt.pre_sin_bound	40	40.056997	15642	2372
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cos_rel.cos_plus_form	40	40.044858	13732	2356
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cos_plus.Majxy_cv_R0	40	40.045998	13014	4038
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.MVT	40	40.080695	30085	3141
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_pos	40	40.076280	25665	4028
coq-tactician-stdlib.8.12.dev	Coq.Reals.Sqrt_reg.sqrt_var_maj	40	40.098595	36370	2992
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.MaxRlist_P1	40	40.327797	18772	4385
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rderiv.cont_deriv	40	40.075774	25939	3769
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech1	40	40.079828	27691	3634
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rcomplete.R_complete	40	40.093001	28533	4614
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.distance_refl	40	40.029634	7659	2570
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_reg.continuity_sin	40	40.039825	12446	3135
coq-tactician-stdlib.8.12.dev	Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	40	40.042954	10257	3804
coq-tactician-stdlib.8.12.dev	Coq.Reals.Exp_prop.E1_cvg	40	40.034054	10200	3158
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.exist_exp	40	40.034864	9327	3022
coq-tactician-stdlib.8.12.dev	Coq.Floats.FloatLemmas.frexp_spec	40	40.176982	78049	1683
coq-tactician-stdlib.8.12.dev	Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	0.153506	13	7	3.1.0	synth with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_comp	40	40.047163	12513	3305
coq-tactician-stdlib.8.12.dev	Coq.micromega.Fourier_util.Rle_mult_inv_pos	40	0.154539	5	4	0.1.0.0	synth with cache (only 1: intros x y H H0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.Boule_convex	40	40.071018	23175	4097
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_3PI2	40	40.034123	9690	2241
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_inv	40	40.064670	23587	2703
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.pr_nu_var	40	0.144825	20	8	0.0.0.1	synth with cache (only 1: unfold derivable_pt; only 1: intros f x1 x2 H1 H2 Heq; only 1: subst; only 1: apply pr_nu).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.exp_le_3	40	40.050371	15893	3456
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.CVN_R_cos	40	40.126683	48740	3192
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.sin2_bound	40	40.035907	10729	2684
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.pow_i	40	6.406013	3169	336	2.0.0.1.2.13.6	synth with cache (only 1: intro; only 1: intros [| n]; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: rewrite Rmult_0_l; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis_reg.AppVar	40	40.043407	13334	3410
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.Nzorn	40	40.141773	55251	3262
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.phi_sequence_prop	40	40.030273	9041	2504
coq-tactician-stdlib.8.12.dev	Coq.Reals.ArithProp.le_minusni_n	40	40.080743	27709	3053
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.IZR_nz	40	0.012236	2	1	1	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.f_incr_implies_g_incr_interv	40	40.043058	15800	2008
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derivable_pt_id_interv	40	0.048050	2	2	0.0	synth with cache (only 1: intros; only 1: apply derivable_pt_id).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.simpl_fact	40	40.073301	24909	3165
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_O	40	0.026401	2	2	0.0	synth with cache (only 1: intros p0; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_1	40	0.044537	6	4	0.1.0.1	synth with cache (only 1: intros; only 1: simpl; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_add	40	0.084710	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: rewrite H'; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.up_tech	40	40.056868	21757	2043
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Boule_half_to_interval	40	40.029579	7682	3094
coq-tactician-stdlib.8.12.dev	Coq.Reals.Binomial.pascal_step2	40	40.033156	9429	2373
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_div	40	31.221577	5330	984	0.0.22.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: field; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsigma.Sigma.sigma_diff	40	40.039307	8772	3062
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsigma.Sigma.sigma_diff_neg	40	0.162985	11	11	0.1.0.0.0.0.0	synth with cache (only 1: intros low high k H1 H2; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: rewrite (sigma_split H1 H2); only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_eq_0	40	0.280326	79	27	1.1.2.0.0	synth with cache (only 1: unfold Rsqr; only 1: intros; only 1: apply Rsqr_0_uniq; only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_Rgt_l	40	40.065646	19458	5055
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.prop_eps	40	40.048634	11865	2882
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_minus_plus	40	1.263886	449	89	0.8.4	synth with cache (only 1: intro; only 1: intros z; only 1: ring_Rsqr).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_plus_minus	40	0.047062	2	2	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.decreasing_growing	40	40.053146	18305	1544
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqSeries.Rseries_CV_comp	40	40.052451	17497	3568
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.R.plus_max_distr_r	40	40.035214	9702	1537
coq-tactician-stdlib.8.12.dev	Coq.Reals.Machin.atan_sub_correct	40	40.026006	8297	1316
coq-tactician-stdlib.8.12.dev	Coq.Reals.ROrderedType.Rcompare_spec	40	40.097957	33136	3404
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.FTCN_step1	40	40.077073	27629	2280
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_R.Rri	40	40.052363	19038	2160
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.FTC_Newton	40	0.672504	163	32	10.0	synth with cache (only 1: intros; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_Rgt_r	40	5.348194	5033	770	0.2.0.0.0.18	synth with cache (only 1: intuition; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: intro; only 1: assumption; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.middle_in_interval	40	40.079414	25067	4360
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Rri	40	40.055833	18413	2171
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_plus	40	40.062253	19097	5000
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.R_one_zero	40	0.033357	1	1	0	synth with cache (only 1: exact R1_neq_R0).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Qeq_true	40	40.057465	20234	1896
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rprod.prod_SO_pos	40	40.064195	20733	4320
coq-tactician-stdlib.8.12.dev	Coq.Reals.Alembert.Alembert_C2	40	40.033716	9473	3409
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.CV_ALT_step1	40	40.054437	19624	2378
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.Un_bound_imp	40	40.084409	27914	4440
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.maj_term1	40	40.043076	12873	3436
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_refl	40	0.391695	205	37	4.7	synth with cache (only 1: right; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_refl	40	0.025188	3	3	0.0.0	synth with cache (only 1: intro; only 1: right; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.DiscrR.Rlt_R0_R2	40	0.071885	8	7	0.0.0.0.1.0.0	synth with cache (only 1: apply Rlt_trans with (0 + 1); only 1: apply Rlt_n_Sn; only 1: rewrite Rplus_comm; only 1: apply Rplus_lt_compat_l; only 1: replace R1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Reals.DiscrR.IZR_eq	40	0.089507	12	4	0.1	synth with cache (only 1: intros n m H; only 1: now Morphisms.f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.adherence_P1	40	40.115563	46294	5075
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.included_trans	40	0.201311	99	27	0.8.0	synth with cache (only 1: intros; only 1: intros H'3; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cos_rel.pow_sqr	40	40.052934	17587	2403
coq-tactician-stdlib.8.12.dev	Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40	6.985118	8934	829	0.0.22.0.0.0.12.10.53	synth with cache (only 1: constructor; only 1: intros H; only 1: intros Eq0; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto; only 1: intro abs; only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  2).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_alt.pre_cos_bound	40	40.046415	13225	3630
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cos_plus.reste1_maj	40	40.056226	17404	2903
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.MVT_cor1	40	40.080427	32684	3202
coq-tactician-stdlib.8.12.dev	Coq.Reals.ROrderedType.R_as_OT.lt_compat	40	2.203658	617	160	0.10.2	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx, Hy; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.Reals.ROrderedType.R_as_OT.le_lteq	40	0.233961	19	7	3.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.R.plus_min_distr_l	40	10.504086	2670	455	0.0.0.0.19	synth with cache (only 1: intros a m H; only 1: apply min_mono; only 1: eauto with *; only 1: intros x y; only 1: apply Rplus_le_compat_l).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_positivity	40	40.046333	13329	3567
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.R.plus_min_distr_r	40	0.065560	8	5	0.0.0.3.0	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm n p), (Rplus_comm m p), (Rplus_comm _ p); only 1: apply min_monotone; only 1: intros x y; only 1: apply Rplus_le_compat_l).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.R.opp_max_distr	40	0.060912	4	4	0.0.0.0	synth with cache (only 1: intros x y; only 1: apply Rmax_case_strong; only 1: now intros w; rewrite Rmin_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmin_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40	40.055612	17820	3282
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.R.opp_min_distr	40	0.065377	4	4	0.0.0.0	synth with cache (only 1: intros x y; only 1: apply Rmin_case_strong; only 1: now intros w; rewrite Rmax_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmax_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis3.derivable_pt_div	40	40.059411	18603	4059
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.MinRlist_P1	40	40.044905	12068	3862
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech2	40	40.045776	8992	1887
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rderiv.Dconst	40	40.061327	19028	3520
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.distance_symm	40	40.055111	17839	2556
coq-tactician-stdlib.8.12.dev	Coq.Reals.Exp_prop.exp_form	40	40.043327	14284	2102
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_reg.CVN_R_sin	40	40.024134	6594	1985
coq-tactician-stdlib.8.12.dev	Coq.Floats.FloatLemmas.ldexp_spec	40	40.284846	23214	1850
coq-tactician-stdlib.8.12.dev	Coq.Reals.Exp_prop.div2_double	40	0.053549	2	2	0.0	synth with cache (only 1: intros a; only 1: apply Nat.div2_double).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_lb_growing	40	40.046253	13804	3223
coq-tactician-stdlib.8.12.dev	Coq.Reals.Exp_prop.div2_S_double	40	0.049809	3	2	1.0	synth with cache (only 1: intro; only 1: apply Nat.div2_succ_double).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.boule_of_interval	40	40.068831	23794	3327
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_R.Rcri	40	15.471329	4416	394	5.14.6.35	synth with cache (only 1: intro H5; only 1: intros; only 1: rewrite Rmult_comm; only 1: let rec norm := gen_rewrite in norm).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_R.R_one_zero	40	0.032974	1	1	0	synth with cache (only 1: exact R1_neq_R0).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.tan_2PI	40	40.052448	17291	2467
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.pr_nu_var2	40	40.051092	17484	2479
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.exp_increasing	40	40.040371	12561	2788
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.continuity_cos	40	40.035395	10663	3010
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.exist_exp0	40	40.073271	24973	4180
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.cos2_bound	40	40.047332	9630	2563
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P1	40	40.031702	8549	2843
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P1	40	40.159274	14042	1909
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.eqR_Qeq	40	40.074699	18514	2507
coq-tactician-stdlib.8.12.dev	Coq.Reals.ArithProp.lt_minus_O_lt	40	40.093495	19537	2673
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.pr_nu_var2_interv	40	40.031687	10781	2402
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.Rpow_mult_distr	40	40.064670	19765	3638
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.fp_R0	40	40.211889	65224	1326
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Boule_lt	40	40.071111	21726	2754
coq-tactician-stdlib.8.12.dev	Coq.Reals.Binomial.pascal_step3	40	40.032890	8951	2190
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsigma.Sigma.sigma_first	40	40.050903	17041	3380
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.mul_factor_wd	40	40.062806	9408	2309
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_incr_0	40	40.065004	15570	5722
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.decreasing_cv	40	40.140838	53054	5044
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqSeries.Cesaro	40	40.036551	10714	2932
coq-tactician-stdlib.8.12.dev	Coq.Reals.Machin.tech	40	40.026030	6272	1916
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.NewtonInt_P1	40	40.052664	17989	1986
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_Rgt	40	40.081492	29546	6495
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_opp	40	40.054450	17924	4446
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.point_in_holed_interval_works	40	40.070612	19827	3049
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Rcri	40	40.037359	8769	978
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rprod.prod_SO_Rle	40	40.063214	21939	3152
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Qeq_false	40	40.088975	7785	1192
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.growing_prop	40	40.063258	20835	2608
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.CV_ALT_step2	40	40.047480	15544	2651
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.maj_term2	40	40.043800	13393	2673
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlogic.Arithmetical_dec.sig_forall_dec	40	40.090578	29803	5408
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_irrefl	40	40.148937	59851	3094
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_irrefl	40	0.038560	4	4	0.0.0.0	synth with cache (only 1: intros r H; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.interior_P3	40	40.079856	27572	4964
coq-tactician-stdlib.8.12.dev	Coq.Reals.Alembert.AlembertC3_step1	40	40.080386	28842	3834
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cos_rel.A1_cvg	40	40.046110	14418	4063
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cos_plus.reste2_maj	40	40.050588	14857	3358
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.MVT_cor2	40	40.041405	12847	3876
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_sqrt	40	40.058673	19916	2275
coq-tactician-stdlib.8.12.dev	Coq.Reals.Sqrt_reg.sqrt_continuity_pt	40	40.069012	23023	3823
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis3.derivable_div	40	40.086102	31303	4783
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.R.minus_max_distr_l	40	40.133031	9078	1558
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.AbsList_P1	40	40.065815	20897	3132
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.RisLinearOrder	40	40.070328	24223	269
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech3	40	40.048268	14758	2095
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rderiv.Dx	40	40.061109	19392	3838
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.law_cosines	40	40.034687	10726	1571
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_up_decreasing	40	40.048162	14456	3164
coq-tactician-stdlib.8.12.dev	Coq.Reals.Exp_prop.div2_not_R0	40	40.061398	22184	2257
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	40	40.053181	12464	2759
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.boule_in_interval	40	40.073982	26211	3666
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_R.Rdi	40	40.050170	16645	1830
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_cos_PI4	40	40.079268	23600	2292
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_inv	40	40.064073	15204	2503
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.exp_lt_inv	40	40.058847	6734	2669
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_gt_cos_7_8	40	40.057783	17612	3240
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.cos_sin	40	40.029591	7759	2140
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.exp_0	40	40.118219	27362	2859
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P2	40	40.054617	17892	2605
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_not_eq	40	23.348283	15912	2229	0.0.0.14.11.3	synth with cache (only 1: intros r H; only 1: red; only 1: firstorder  (subst; auto); only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P2	40	40.030521	7640	2043
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.Qeq_eqR	40	40.050954	17345	1818
coq-tactician-stdlib.8.12.dev	Coq.Reals.ArithProp.even_odd_cor	40	40.073331	27572	2460
coq-tactician-stdlib.8.12.dev	Coq.Reals.ArithProp.le_double	40	0.020326	2	2	0.0	synth with cache (only 1: intros n m; only 1: apply Nat.mul_le_mono_pos_l, Nat.lt_0_succ).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv	40	40.135271	19926	2135
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_not_eq	40	3.177497	1261	346	11.0.0.0.0	synth with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply (Rlt_irrefl r1); only 1: rewrite H0; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_nonzero	40	40.044816	7189	1230
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.for_base_fp	40	40.069458	22779	4788
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Un_cv_ext	40	40.036575	12706	2373
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.RealField.RTheory	40	40.087813	29028	3062
coq-tactician-stdlib.8.12.dev	Coq.Reals.Binomial.pascal	40	40.040531	11989	2619
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsigma.Sigma.sigma_last	40	40.026532	5475	3753
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_0	40	40.050884	13781	1540
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.mul_factor_gt	40	40.062063	17272	4249
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rdefinitions.total_order_T	40	40.081072	27580	3381
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_incr_0_var	40	40.054422	13599	4872
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsigma.Sigma.sigma_eq_arg	40	1.672155	1049	145	8.0.0.0.5	synth with cache (only 1: intros H1; only 1: unfold sigma; only 1: rewrite <- minus_n_n; only 1: simpl; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.ub_to_lub	40	40.154304	54548	4810
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqSeries.Cesaro_1	40	40.045532	15003	3340
coq-tactician-stdlib.8.12.dev	Coq.Reals.Machin.Machin_2_3	40	40.029106	8104	2066
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.NewtonInt_P2	40	40.041221	13790	1539
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_l	40	40.050537	16957	4962
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_minus	40	40.073596	26686	4320
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.first_in_holed_interval	40	40.095111	33236	3050
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Rdi	40	40.036042	9988	1763
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_r	40	0.545772	108	53	4.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro H1; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_left	40	0.100016	16	8	1.0.0.0.1	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_right	40	0.047175	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rprod.fact_prodSO	40	40.060598	21859	1270
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rprod.le_n_2n	40	0.030259	10	4	0.4.0	synth with cache (only 1: simpl; only 1: intros; only 1: trivial using Nat.le_add_r).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Qle_true	40	40.069558	26628	2010
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.Un_cv_crit_lub	40	40.084397	28540	3353
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.CV_ALT_step3	40	40.045157	12822	3612
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.maj_term3	40	40.037728	10509	2672
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlogic.not_not_archimedean	40	40.090502	30470	2362
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.complementary_P1	40	40.091137	33922	3827
coq-tactician-stdlib.8.12.dev	Coq.Reals.Alembert.AlembertC3_step2	40	40.069466	24130	4194
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_incr_1	40	7.554904	2219	932	3.1.2.3	synth with cache (only 1: intros x y; only 1: unfold Rsqr; only 1: intros a b; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40	40.146655	57537	3085
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cos_rel.C1_cvg	40	40.041906	12039	4524
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cos_plus.reste1_cv_R0	40	40.031239	7452	3661
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.MVT_cor3	40	40.027639	6532	3567
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_0	40	40.093746	35511	3966
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis3.derive_pt_div	40	40.043589	13434	3218
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.R.minus_max_distr_r	40	40.045040	12535	1980
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.MinRlist_P2	40	40.070649	22405	4319
coq-tactician-stdlib.8.12.dev	Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	40	40.059234	20135	3117
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.RdisjunctEpsilon	40	40.108947	42254	3074
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech4	40	40.049339	13121	4019
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rderiv.Dadd	40	40.049103	14386	3366
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech5	40	0.035909	2	2	0.0	synth with cache (only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.triangle	40	40.036500	9838	3664
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_lb_maj_y	40	40.048951	12142	3576
coq-tactician-stdlib.8.12.dev	Coq.Reals.Exp_prop.Reste_E_maj	40	40.026743	6848	2664
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.translation_0	40	0.171601	29	10	1.3.0.1	synth with cache (only 1: intros; only 1: split; only 1: auto with real; only 1: eauto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.Ball_in_inter	40	40.054100	17481	3625
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	40	40.013911	2985	1909
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_PI3_cos_PI6	40	40.035720	10241	2365
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derive_pt_inv	40	40.024459	3932	1114
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.exp_ineq1	40	40.092035	2634	1065
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.PI_2_aux	40	40.090801	33933	2712
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.cos_sin_opp	40	40.043105	8428	2025
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.cosh_0	40	40.057499	17609	3609
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.R.minus_min_distr_l	40	11.398210	3292	730	1.0.5.1.8	synth with cache (only 1: intros n m H; only 1: apply min_max_antimonotone; only 1: unfold Rminus, Rdiv; only 1: do 3 red; only 1: auto using Rnot_lt_le with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P3	40	40.042947	13051	2405
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P3	40	40.023625	4755	1683
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.Rle_Qle	40	40.064484	21896	2906
coq-tactician-stdlib.8.12.dev	Coq.Reals.ArithProp.euclidian_division	40	40.101016	35884	4334
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.AbsList_P2	40	19.364274	8265	1443	1.0.2.0.2.1.0.1.2.0.1.2.6.0	synth with cache (only 1: intros; only 1: induction l; only 1: simpl; only 1: set (k0 := match Rcase_abs y with | left _ => (1 - up (x / - y))%Z | right _ => (up (x / y) - 1)%Z end); only 1: exists (x - IZR k0 * y); only 1: elim H; only 1: elim H; only 1: simpl; only 1: intros; only 1: exists a; only 1: auto; only 1: simpl; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.ArithProp.tech8	40	0.046249	7	2	5.0	synth with cache (only 1: intros; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40	40.030178	10518	2138
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_dichotomy_converse	40	40.073264	22280	4468
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_RN_plus	40	40.041059	11257	2394
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Q2R_0	40	28.581101	23793	2652	0.0.0.0.1.0.3.0.30.8	synth with cache (only 1: generalize (Rlt_irrefl 0); only 1: unfold IZR; only 1: rewrite R0_def; only 1: unfold Qinv, Q2R, Qeq; only 1: intros; only 1: simpl in *; only 1: rewrite Rmult_0_l; only 1: unfold IZR; only 1: rewrite R0_def; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.base_fp	40	40.058595	18287	5553
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Alt_first_term_bound	40	40.036016	12458	2324
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.RealField.Rfield	40	40.115224	17422	3540
coq-tactician-stdlib.8.12.dev	Coq.Reals.Binomial.binomial	40	40.051435	15879	2350
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_1	40	40.050277	15641	1464
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.mul_factor_gt_f	40	40.117469	13012	3828
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rdefinitions.Req_appart_dec	40	40.110267	42707	2789
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.lb_to_glb	40	40.120784	44340	3734
coq-tactician-stdlib.8.12.dev	Coq.Reals.Machin.Machin_4_5_239	40	40.062954	11816	1558
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.NewtonInt_P3	40	40.023345	6376	2446
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_mult	40	40.072839	25773	4464
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.first_in_holed_interval_works	40	40.155239	60688	2931
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rle_min_compat_r	40	40.041187	9527	2072
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rle_min_compat_l	40	0.049036	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 (apply Rmin_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Qri	40	40.064520	23787	1839
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rprod.RfactN_fact2N_factk	40	40.033062	10768	1753
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Q_one_zero	40	0.040929	3	1	2	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.CV_ALT_step4	40	40.067691	23216	3874
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rprod.INR_fact_lt_0	40	0.483384	120	52	0.0.1.0.0.1.2	synth with cache (only 1: intros n; only 1: apply lt_0_INR; only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.maj_term4	40	40.036647	8834	3129
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.Un_cv_crit	40	40.125120	48286	4746
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.adherence_P2	40	40.114570	43894	4343
coq-tactician-stdlib.8.12.dev	Coq.Reals.Alembert.Alembert_C3	40	40.024170	5883	2689
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlogic.sig_not_dec	40	40.053518	17139	2013
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_incrst_0	40	40.058241	14654	5574
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.lowerCutBelow	40	40.194302	56508	2510
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cos_rel.B1_cvg	40	40.050550	13557	4031
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_Z.Zcri	40	0.016597	2	2	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_Z.Z_one_zero	40	0.034482	10	2	4	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cos_plus.reste2_cv_R0	40	40.028737	6635	3572
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.Rolle	40	40.047008	15511	3432
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.NewtonInt_P4	40	8.095187	3295	396	0.9.7.2.5	synth with cache (only 1: intros r1 r2; only 1: intros x; only 1: intros (?, ?); only 1: simpl; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_1	40	40.067462	21187	4441
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.split_couple_eq	40	7.334769	3216	675	19.0	synth with cache (only 1: intros; only 1: now injection H as [=->]).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Sqrt_reg.derivable_pt_sqrt	40	40.059496	20159	3565
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.Req_constr_refl	40	40.149877	60538	3469
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech6	40	40.049074	13075	3481
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rderiv.Dmult	40	40.047493	13611	3341
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_lb_maj	40	40.046156	12991	3912
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.isometric_translation	40	40.055671	18281	2423
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_non_negative	40	40.096709	35712	3471
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.avl_node	40	0.035886	2	2	0.0	synth with cache (only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.Boule_center	40	40.067520	22907	3882
coq-tactician-stdlib.8.12.dev	Coq.Reals.Exp_prop.maj_Reste_cv_R0	40	40.021740	5563	2706
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	40	40.029009	7869	2611
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_PI6_cos_PI3	40	40.047135	9846	2232
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.PI6_RGT_0	40	0.090439	6	5	0.1.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.PI6_RLT_PI2	40	0.048501	3	2	0.1	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.Rabs_derive_1	40	40.041847	4273	1399
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_pi2	40	40.038235	10537	2792
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.cos_sin_Rabs	40	40.026332	6163	2690
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.sinh_0	40	40.104455	39590	2758
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.ln_exists1	40	40.075523	14306	1892
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.R.minus_min_distr_r	40	40.037100	11067	1794
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P4	40	40.116394	28763	1968
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveRcomplete.seq_cv_proper	40	40.047325	11907	1604
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.maj_ss	40	28.668556	21405	2897	30.1.5	synth with cache (only 1: intros x n; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_exists	40	40.036593	12146	1757
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.Qle_Rle	40	40.063660	20894	2396
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.MaxRlist_P2	40	40.054254	16707	3646
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.IVT_interv_prelim0	40	40.039275	12675	2433
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Req_dec	40	40.128214	30788	4488
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_lt	40	40.065307	18262	5083
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Q2R_1	40	40.082022	30484	2667
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.pos_Rl_P1	40	1.414772	251	99	2.1.4.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.base_Int_part	40	40.047413	15509	2597
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Alt_CVU	40	40.026499	6332	2671
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.RealField.Rlt_n_Sn	40	40.123806	53099	2395
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_plus	40	40.198132	18733	2090
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.tech_limit	40	40.062639	18680	2092
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rdefinitions.Rrepr_appart_0	40	40.065002	5883	386
coq-tactician-stdlib.8.12.dev	Coq.nsatz.NsatzTactic.nsatz1.psos_r1b	40	40.030818	7509	1164
coq-tactician-stdlib.8.12.dev	Coq.nsatz.NsatzTactic.nsatz1.psos_r1	40	0.354450	8	6	1.0.0.0.1.0	synth with cache (only 1: intros x y H; only 1: assert (0 == - (0 : R)); only 1: cring; only 1: rewrite ring_sub_def; only 1: rewrite <- H; only 1: cring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Machin.Machin_2_3_7	40	40.034436	10087	1814
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_const	40	40.081474	30498	4321
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_comm	40	40.052062	18033	1404
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Qcri	40	40.020996	6547	529
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rprod.C_maj	40	40.029212	9118	1635
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.CV_ALT	40	40.057829	18546	3832
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.adherence_P3	40	40.059678	17495	5379
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.finite_greater	40	40.083269	29514	3455
coq-tactician-stdlib.8.12.dev	Coq.Reals.Alembert.Alembert_C4	40	40.029475	7311	3102
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.Req_constr_leibniz	40	32.858997	12349	2129	7.0.7.0.8.0	synth with cache (only 1: intros; only 1: destruct (total_order_T x y); only 1: destruct s; only 1: now elim H; only 1: exact e; only 1: now elim H).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.D_x_no_cond	40	40.052419	16876	2030
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_incrst_1	40	40.067196	18477	5276
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.lowerCutAbove	40	40.051291	12625	3616
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_Z.Zdi	40	40.025541	7735	917
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cos_plus.reste_cv_R0	40	40.030572	7009	3619
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.nonneg_derivative_1	40	40.055271	17006	3752
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.NewtonInt_P5	40	40.052692	16616	2470
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_eq_0	40	40.051818	16748	1765
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.first_two_in_interval_works	40	40.087649	29194	3017
coq-tactician-stdlib.8.12.dev	Coq.Reals.Sqrt_reg.derive_pt_sqrt	40	40.037510	11253	2899
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech7	40	40.050743	5820	1374
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rderiv.Dmult_const	40	40.040904	10833	3481
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_up_min_x	40	40.042673	12166	3233
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.rotation_0	40	40.054471	16603	2357
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_0	40	40.065941	22105	2963
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.empty_avl	40	0.019574	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.CVN_CVU	40	40.058796	20755	3033
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_avl	40	0.143747	19	7	0.3.0	synth with cache (only 1: intros; only 1: unfold create; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_height	40	0.024972	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Exp_prop.Reste_E_cv	40	40.020015	5167	2422
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	40	40.021856	5281	2383
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_PI6	40	40.036452	10297	2718
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.Rabs_derive_2	40	40.022748	6171	2243
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.pi2_int	40	40.041690	11065	2991
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.sin_cos	40	40.028642	7795	2475
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.simpl_cos_n	40	40.066847	17265	2601
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.ln_exists	40	40.019686	4414	2725
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P5	40	40.074118	22515	2535
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveRcomplete.seq_cv_morph	40	40.078582	11373	1280
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.min_ss	40	40.126037	38483	4245
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_Q.Qri	40	40.031298	10013	716
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rdefinitions.up	40	31.011521	72564	1539	192	synth with cache (only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P4	40	40.024478	7386	2060
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.Rlt_Qlt	40	40.096897	34922	2744
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RinvN_pos	40	0.027260	4	1	3	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.IVT_interv_prelim1	40	40.046293	16506	2725
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rtotal_order	40	40.075814	24017	3252
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.Rlt_pow_R1	40	40.070823	21431	5085
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rdichotomy	40	0.142723	36	13	0.0.1	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Q2R_inv_ext	40	40.066734	23968	1957
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_le	40	0.085368	21	9	0.0.1.1.0	synth with cache (only 1: red; only 1: left; only 1: rewrite Rlt_def; only 1: rewrite Rlt_def in H; only 1: exact H).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.pos_Rl_P2	40	40.074613	25836	3780
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.Int_part_INR	40	40.070116	25589	2667
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CauchyAbsStable	40	40.097619	32883	3038
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_ge	40	1.399635	413	132	0.0.0.10	synth with cache (only 1: unfold Rgt; only 1: red; only 1: intros; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.pow2_ge_0	40	40.030304	8812	2627
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.RealField.Rlt_0_2	40	40.108454	43280	2989
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Integral_domain.integral_domain.integral_domain_minus_one_zero	40	40.055723	11250	345
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_opp	40	40.077302	23677	1611
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.tech_limit_contr	40	40.038512	10001	2294
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_ge	40	4.910495	1690	393	8.4.4	synth with cache (only 1: intros x y H; only 1: red; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_le	40	0.054760	5	5	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: red; only 1: tauto; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_gt	40	0.025482	2	2	0.0	synth with cache (only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_lt	40	0.013554	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.nsatz.NsatzTactic.nsatz1.nsatzR_diff	40	40.034583	2625	721
coq-tactician-stdlib.8.12.dev	Coq.Reals.Machin.PI_2_3_7_ineq	40	40.044255	15498	2651
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_In	40	0.172521	85	30	1.1.0.2.3	synth with cache (only 1: induction 1; only 1: constructor; only 1: eauto; only 1: auto; only 1: auto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.nsatz.NsatzTactic.nsatz1.P0Z_correct	40	0.363793	30	9	7.0	synth with cache (only 1: intro; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_scal	40	40.055894	16869	4303
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.fp_nat	40	9.329483	12219	1314	11.5.21	synth with cache (only 1: intro Dec; only 1: unfold IZR, IPR; only 1: intuition eauto  4 with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40	40.068105	19854	4182
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_Q.Qcri	40	14.876458	2273	348	1.0.1.5.2.11	synth with cache (only 1: intro EQ; only 1: intros; only 1: apply Ncring_initial.Zsth; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_Q.Q_one_zero	40	0.023502	1	1	0	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Qdi	40	40.035616	9466	885
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Z_one_zero	40	0.089344	4	2	0.2	synth with cache (only 1: intro EQ; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Cring.cring.cring_eq_ext	40	40.046342	15444	397
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Zcri	40	0.061267	2	2	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_pos	40	0.935502	256	116	0.0.0.0.1.1.1	synth with cache (only 1: intros x y; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intros; only 1: assumption; only 1: intros; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_glb	40	0.065360	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intros H'; only 1: eauto using Rle_trans, Rle_refl; only 1: intro H1; only 1: eauto using Rle_trans, Rle_refl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_glb_lt	40	0.060319	8	7	1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro; only 1: auto; only 1: intros Eq0; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.alternated_series	40	40.061166	20842	4081
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.open_set_P1	40	40.075180	26386	4852
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.cauchy_bound	40	40.100099	36567	5601
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.Rabs_4	40	40.059970	18960	3162
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40	40.051069	12808	5062
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.IQR_zero_quot	40	40.107189	44942	1528
coq-tactician-stdlib.8.12.dev	Coq.Reals.Alembert.Alembert_C5	40	40.025098	5812	2808
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40	40.121087	45643	2243
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmin_lt_r	40	40.088190	18286	2295
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cos_plus.cos_plus	40	40.043761	11213	2840
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.nonpos_derivative_0	40	40.045584	14309	3897
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_lem_0	40	40.035735	9998	2762
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.tearing_sequences	40	40.127019	46699	4141
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.antiderivative_P1	40	40.032612	10845	2106
coq-tactician-stdlib.8.12.dev	Coq.Reals.Sqrt_reg.continuity_pt_sqrt	40	40.051540	14846	3640
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_tac.Zeqb_ok	40	8.105666	4707	397	0.0.15.2.26	synth with cache (only 1: intro n; only 1: intros; only 1: red; only 1: apply Zeq_bool_eq; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech11	40	40.046966	14451	2358
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech12	40	0.022557	2	2	0.0	synth with cache (only 1: intros; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rderiv.Dopp	40	40.055577	17003	3496
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_up_min	40	40.067568	23214	3748
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.rotation_PI2	40	40.038346	10490	3393
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.CVU_continuity	40	40.044512	11274	3356
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_avl	40	40.061476	21569	2467
coq-tactician-stdlib.8.12.dev	Coq.Reals.Exp_prop.exp_plus	40	40.049614	15947	2124
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_reg.derivable_pt_sin	40	40.044206	13583	3193
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sqrt2_neq_0	40	40.070737	24871	1780
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmin_morph_Proper	40	9.209687	2468	885	0.0.0.4.0.0.0.4.1.0	synth with cache (only 1: intros; only 1: split; only 1: apply CRmult_morph; only 1: rewrite H, H0; only 1: reflexivity; only 1: reflexivity; only 1: apply CRmult_morph; only 1: rewrite H, H0; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmin_morphT	40	0.546268	33	18	1.4.0	synth with cache (only 1: intros R x y exy z t ezt; only 1: rewrite exy, ezt; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.Rderivable_pt_abs	40	40.070531	26718	2583
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_minus	40	40.046742	14132	2369
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.pow2_abs	40	26.691202	7497	1387	0.4.0.1.17.1	synth with cache (only 1: intros; only 1: unfold Rabs; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: simpl; only 1: ring; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.sin_cos_opp	40	40.029453	7555	2251
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.archimed_cor1	40	40.123397	46628	4672
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.exp_ln	40	40.036547	11512	2157
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P6	40	40.042101	12653	2052
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.Rlt_4	40	19.549125	8124	1420	0.3.0.2.2.4.0.0.2.6.4	synth with cache (only 1: intros f1 a x X; only 1: elim (Rplus_ne 1); only 1: cut (0 < 1); only 1: rewrite Rplus_0_r; only 1: intros r n H'; only 1: elim (Rplus_ne 1); only 1: intro; only 1: intro; only 1: intros; only 1: Lra.lra; only 1: apply Rlt_0_1).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.quadruple	40	0.055075	6	2	4.0	synth with cache (only 1: intro; only 1: field).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveRcomplete.Rfloor	40	40.066930	21265	860
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.quadruple_var	40	2.163815	1651	149	11.3.11	synth with cache (only 1: intro H; only 1: unfold Rdiv; only 1: field).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.Wn_decreasing	40	40.084004	23740	2696
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.Qlt_Rlt	40	40.090318	30965	2744
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RinvN_cv	40	40.018757	4881	2017
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.IVT_interv	40	40.020108	5496	2017
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.Rlt_pow	40	40.051981	15516	3674
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.tech_pow_Rmult	40	0.008784	1	1	0	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.QSORaddon	40	40.035229	8933	3712
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.Rlist_P1	40	40.077677	28351	3600
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_neg_nth	40	40.041744	10662	2195
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.RealField.Rgen_phiPOS	40	40.084900	32380	3337
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.tech_pow_Rplus	40	2.138104	546	160	0.1.3.3.0	synth with cache (only 1: intro; only 1: intro; only 1: intros H1; only 1: repeat rewrite S_INR; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Integral_domain.integral_domain.pow_not_zero	40	40.276690	5674	440
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_minus	40	40.060188	7628	917
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40	18.742716	2035	870	0.0.0.0.0.0.0.0.0.2.0.1.0.0	synth with cache (only 1: apply Rmult_integral_contrapositive_currified; only 1: exact R1_neq_R0; only 1: assert (Hyp : 0 < 2); only 1: prove_sup0; only 1: apply Rinv_neq_0_compat; only 1: generalize (Rlt_le 0 2 Hyp); only 1: intro H1; only 1: red; only 1: intro H2; only 1: generalize (sqrt_eq_0 2 H1 H2); only 1: intro H; only 1: absurd (2 = 0); only 1: discrR; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.lim_x	40	40.106330	37322	3594
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rnot_le_lt	40	40.075143	18219	2058
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_MapsTo	40	40.164437	67943	4500
coq-tactician-stdlib.8.12.dev	Coq.nsatz.NsatzTactic.nsatz1.Rext	40	40.043863	2415	874
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_inv	40	40.053947	16117	3988
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.div_eq_inv	40	0.017732	2	2	0.0	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.nsatz.NsatzTactic.nsatz1.Rset	40	0.078583	7	4	1.1.1.0	synth with cache (only 1: constructor; only 1: apply ring_setoid; only 1: apply ring_setoid; only 1: apply ring_setoid).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.R0_fp_O	40	40.026975	7056	1703
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_Q.Qdi	40	40.047641	5723	899
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Cring.cring.cring_almost_ring_theory	40	40.023189	7614	117
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Zdi	40	40.022618	6973	713
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_case	40	40.073306	24423	6165
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_case_strong	40	0.043961	6	5	0.0.0.1.0	synth with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.alternated_series_ineq	40	40.047760	15432	2868
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.closed_set_P1	40	40.066913	20736	5497
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_neg_pos_le_1	40	40.051083	13770	3931
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.Rring	40	40.116357	41241	1842
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.GP_infinite	40	40.070826	23016	4063
coq-tactician-stdlib.8.12.dev	Coq.Reals.Alembert.Alembert_C6	40	40.028374	6766	3257
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.DRealQlim	40	40.147820	60171	1648
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	40	0.991594	612	108	2.4.10	synth with cache (only 1: intros a b; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_lem_1	40	40.045171	11152	2637
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_def	40	0.063795	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.increasing_decreasing_opp	40	40.060084	19026	3407
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.PI_tg_pos	40	5.398524	2647	519	8.2.1.3.0	synth with cache (only 1: intros; only 1: left; only 1: apply Rinv_0_lt_compat; only 1: apply lt_0_INR; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.tearing_sequences_projsig	40	40.062478	13840	1121
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.NewtonInt_P6	40	40.043598	16596	1969
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_tac.comm	40	40.034398	5402	358
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rnot_ge_gt	40	13.733518	9257	1281	1.0.8.0.9.4.0.1	synth with cache (only 1: intros; only 1: red; only 1: generalize (Rtotal_order r1 r2); only 1: induction 1; only 1: trivial; only 1: destruct H; only 1: red; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rnot_le_gt	40	0.065170	4	4	0.0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.scal_sum	40	40.078271	27030	2496
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rnot_ge_lt	40	0.025076	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rderiv.Dminus	40	40.033626	7514	3388
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructivePower.CRpow_ge_one	40	40.069623	12591	3848
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_lb_cv	40	40.054639	16637	3600
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.isometric_rotation_0	40	40.041811	13063	1955
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40	40.045667	14075	3404
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rnot_lt_le	40	3.055899	707	245	3.1.2.0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: intros n m; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rnot_gt_le	40	0.068745	10	5	0.3.0.0	synth with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_1	40	40.031415	9076	2179
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rnot_gt_ge	40	0.635664	174	60	2.4.0.1	synth with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rnot_lt_ge	40	0.145616	13	9	0.2.1.0	synth with cache (only 1: intros r1 r2 H; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Exp_prop.exp_pos_pos	40	40.057341	11698	2550
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_reg.derivable_pt_cos	40	40.039216	11758	2476
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_reg.derivable_sin	40	0.082990	7	4	0.0.3.0	synth with cache (only 1: intro; only 1: unfold derivable_pt; only 1: exists (cos x); only 1: apply derivable_pt_lim_sin).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmin_l	40	40.039028	9350	3655
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.Rcontinuity_abs	40	40.031566	9944	2640
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin2_cos2	40	40.057425	17237	2934
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.derivable_pt_tan	40	40.119739	13383	2411
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.sin_cos_Rabs	40	40.024062	5272	2407
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.Alembert_cos	40	40.032423	8603	3233
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.exp_inv	40	40.031108	9640	2449
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.neighbourhood_P1	40	17.082631	16217	2098	3.1.0.1.2.0.0.0.2.1.12	synth with cache (only 1: intros f x X; only 1: intro; only 1: unfold neighbourhood; only 1: intros; only 1: elim H0; only 1: intros; only 1: unfold included; only 1: exists x0; only 1: intros; only 1: unfold included in H0; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.cosn_no_R0	40	0.929293	176	68	0.0.0.0.6.0	synth with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.open_set_P2	40	0.811368	546	106	3.8.4	synth with cache (only 1: intros; only 1: intros P; only 1: firstorder  auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P7	40	40.031611	7596	2233
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.Zsth	40	0.065355	12	4	6	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.continuous_neq_0	40	40.084955	30293	3527
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.Vn_growing	40	40.116391	30164	2696
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveRcomplete.FQ_dense	40	40.040424	2109	896
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.Q2R_plus	40	40.055121	14591	3033
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.Riemann_integrable_ext	40	40.027419	8626	1882
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.is_neg_true	40	40.106509	42176	2183
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.f_interv_is_interv	40	40.025291	7752	2422
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P0	40	40.057814	17321	3524
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_nonneg	40	40.199771	26261	3209
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	40	40.115026	46094	3641
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.poly	40	40.064505	19930	4145
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Integral_domain.integral_domain.Rintegral_domain_pow	40	40.038956	4141	630
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_mult	40	40.163985	21410	1542
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sqrt3_2_neq_0	40	40.029070	7598	2484
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.limit_plus	40	40.147998	11755	2565
coq-tactician-stdlib.8.12.dev	Coq.Floats.FloatAxioms.Prim2SF_inj	40	40.573136	34692	3440
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_alt	40	40.092557	32486	4626
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_div	40	40.048692	14507	3183
coq-tactician-stdlib.8.12.dev	Coq.nsatz.NsatzTactic.nsatz1.Rtheory	40	40.034482	2656	1276
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.Rminus_Int_part1	40	40.037532	11031	1890
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Cring.cring.cring_morph	40	40.024543	4092	825
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_Rle	40	40.045938	12825	2654
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.neg_pos_Rsqr_le	40	40.052595	14456	4000
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.RringExt	40	40.092493	41324	281
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.CV_shift	40	40.081566	28727	4415
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40	40.086103	23541	3939
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	40	0.066000	30	7	7	synth with cache (only 1: auto using eqb_correct, eqb_complete).
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.DRealAbstr	40	40.182776	77070	1769
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	40	40.066143	18635	3804
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_square	40	40.066056	22909	2907
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.046355	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.nonpos_derivative_1	40	40.034489	9058	3423
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.PI_tg_decreasing	40	40.075813	27217	2853
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.tearing_sequences_inc_dec	40	40.056843	16381	3289
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Cring.cring.cring_power_theory	40	7.200932	876	40	0.0.39	synth with cache (only 1: split; only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.antiderivative_P2	40	40.022985	6744	1934
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.decomp_sum	40	40.048494	16161	2037
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rderiv.Dx_pow_n	40	40.063816	20177	3737
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_pow2	40	4.350317	1677	330	1.3.1.9	synth with cache (only 1: intros x; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: apply sqrt_square).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructivePower.CRpow_ge_zero	40	40.034195	6944	2513
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_up_cv	40	40.053082	16407	3101
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.isometric_rotation	40	40.035457	10211	2433
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.split_lt_succ	40	4.759763	1592	256	2.3.14	synth with cache (only 1: inversion 1; only 1: auto; only 1: now left).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.SFL_continuity_pt	40	40.038511	12050	2846
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_not_le	40	40.064983	18787	2742
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_not_le	40	0.093253	9	3	1.0	synth with cache (only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Exp_prop.exp_pos	40	40.020874	4911	2734
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_reg.derivable_cos	40	40.032427	9091	2567
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_2	40	40.037381	10790	1842
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmin_r	40	40.026813	6103	2786
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.continuity_finite_sum	40	40.033972	10143	2504
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos2	40	40.055720	17030	2185
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin2	40	0.043065	3	3	0.0.0	synth with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.derive_pt_tan	40	40.039437	12926	1869
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.tan_sin	40	40.032117	8567	2305
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.exp_Ropp	40	40.052681	17645	2149
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.exist_cos	40	40.047090	15359	2681
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.open_set_P3	40	40.132850	39271	4317
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.open_set_P4	40	0.052257	21	7	0.5.0	synth with cache (only 1: unfold open_set, complementary, point_adherent; only 1: intros; only 1: contradiction).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P8	40	40.032443	9819	1950
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.Zr	40	40.033883	8666	361
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.Vn_Un_Wn_order	40	40.081372	17980	2016
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.pow2_sqrt	40	14.169479	4810	1021	0.0.0.0.2.0.2.10	synth with cache (only 1: simpl; only 1: unfold sqrt; only 1: intro; only 1: rewrite Rmult_1_r; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.CRsum_eq	40	40.164878	35781	2614
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.Q2R_mult	40	40.041074	10755	2272
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveRcomplete.Qabs_Rabs	40	40.055094	10363	2307
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P5	40	40.052233	15446	1733
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.is_neg_false	40	40.076174	21749	3180
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.continuity_pt_recip_prelim	40	40.040367	8942	2258
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P1	40	40.055223	17349	3318
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_right	40	40.059444	17525	2058
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.RealField.Rdef_pow_add	40	40.037937	12559	1984
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.plus_sum	40	20.902192	5181	1725	4.0.0.0.0.1.6	synth with cache (only 1: intros n; only 1: intro; only 1: induction N as [| N HrecN]; only 1: reflexivity; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.Power_monotonic	40	40.055984	16874	3578
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.Q2R_opp	40	4.564770	2175	275	2.0.2.14.1.6	synth with cache (only 1: intro n; only 1: unfold Qmult, Qeq, Q2R; only 1: ring_simplify; only 1: rewrite <- opp_IZR; only 1: simpl; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_inv	40	40.485129	48246	2669
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40	40.049459	14999	2883
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.limit_Ropp	40	40.154946	17061	3259
coq-tactician-stdlib.8.12.dev	Coq.Floats.FloatAxioms.SF2Prim_inj	40	40.095004	31595	3692
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40	40.089046	32403	1735
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_1	40	40.113709	42422	3173
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_comp	40	40.064048	19807	3697
coq-tactician-stdlib.8.12.dev	Coq.nsatz.NsatzTactic.nsatz1.PolZadd_correct	40	40.012905	2515	795
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.Rminus_Int_part2	40	40.036094	9737	5151
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_comm	40	40.075790	30637	2567
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.neg_pos_Rsqr_lt	40	40.098593	30311	5014
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.Rleft_inverse	40	40.088269	30098	4013
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.CV_shift'	40	40.105303	30111	4148
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Ring63.TestRing.test	40	40.066792	16225	4279
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.Un_growing_shift	40	1.371910	568	126	3.7.0.1	synth with cache (only 1: intro; only 1: intros a Ha; only 1: intros eps; only 1: now Nat.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	40	40.057117	13646	1064
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.UpperAboveLower	40	40.117903	27054	2768
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.positive_derivative	40	40.044725	13803	3967
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.PI_tg_cv	40	40.073419	25259	4676
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Cring.cring.cring_div_theory	40	40.044331	13887	444
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_increasing_inv	40	40.363126	19763	1483
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.antiderivative_P3	40	40.096770	16363	2385
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rderiv.Dcomp	40	40.052930	14650	3521
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructivePower.CRpow_gt_zero	40	40.067454	7827	1015
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_lb_dicho_up	40	40.046638	13670	2931
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.isometric_rot_trans	40	40.043039	12281	1917
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.increase_seq_transit	40	40.090509	33086	3454
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.SFL_continuity	40	40.054368	17988	3108
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40	40.055151	8591	1436
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40	1.009569	651	111	2.4.11	synth with cache (only 1: intros a b; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_not_ge	40	40.087120	28170	4128
coq-tactician-stdlib.8.12.dev	Coq.Reals.Exp_prop.derivable_pt_lim_exp_0	40	40.043437	5907	1354
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_not_ge	40	0.098854	5	5	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_reg.derive_pt_sin	40	40.035843	9369	2677
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_not_lt	40	0.049700	4	4	0.0.0.0	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: unfold not; only 1: intuition eauto  3).
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	40	8.815946	6270	939	1.0.6.10.16	synth with cache (only 1: red; only 1: intros x y H'; only 1: intros Eq0; only 1: unfold opp_fct, limit1_in, limit_in, dist; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40	3.502646	702	120	0.2.0.10	synth with cache (only 1: intros Eq2; only 1: red; only 1: apply pow_nonzero; only 1: discrR).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_not_lt	40	0.204132	39	16	0.0.0.0.1	synth with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_reg.derive_pt_cos	40	0.494296	43	23	1.4.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cos).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_not_gt	40	0.263381	54	22	0.2.0.0.0.1	synth with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intros; only 1: red; only 1: apply Rle_not_lt; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl_1	40	40.100231	19801	2106
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_not_gt	40	0.188642	27	13	0.0.2	synth with cache (only 1: intros; only 1: apply Rle_not_lt; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Req_le	40	0.034481	3	3	0.0.0	synth with cache (only 1: intros; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40	40.039242	8430	2118
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Req_ge	40	0.046356	14	5	0.0.3	synth with cache (only 1: intros; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRnegPartAbsMin	40	40.025255	6081	1707
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Req_le_sym	40	0.038096	4	3	0.1.0	synth with cache (only 1: unfold Rle; only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Req_ge_sym	40	0.029502	3	2	1.0	synth with cache (only 1: unfold Rge; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_PI2	40	40.059740	20339	2766
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_asym	40	0.044430	4	3	0.1.0	synth with cache (only 1: do 2 intro; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.QCauchySeq_bounded_prop	40	40.064018	11876	1710
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.tan_sin_opp	40	40.031105	8095	2423
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.derive_increasing_interv	40	40.043023	13466	2067
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.ln_increasing	40	40.040441	10403	2843
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.simpl_sin_n	40	40.061463	18763	3322
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.open_set_P5	40	40.099278	35702	5428
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P9	40	40.043419	14403	1904
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_gen	40	40.069056	24488	1079
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_Rsqr_abs	40	40.053596	16324	3711
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.Rsqr_sqrt	40	0.028564	3	3	0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x H)).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.min_maj	40	40.105440	39712	4379
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.sum_eq_R0	40	40.077616	26014	2743
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_cv_self	40	40.062038	10209	1558
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.maxN	40	40.039040	11966	2797
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Q2R_m_Proper	40	40.032426	8313	3672
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P2	40	40.078902	27682	3455
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_le_abs	40	40.059371	17584	2696
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.RealField.R_power_theory	40	40.069827	23697	1876
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.sum_eq	40	40.068200	23716	2813
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.RPow_abs	40	40.063277	18980	3969
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.continuity_pt_recip_interv	40	40.034085	5552	2856
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.Q2R_minus	40	40.041321	10236	2491
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.factorDenom	40	15.191636	5858	1449	0.0.4.7.1.11	synth with cache (only 1: intros x y z; only 1: rewrite Qmult_comm; only 1: unfold Qeq, Qmult; only 1: rewrite Pos.mul_comm; only 1: simpl in *; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_le	40	40.098397	11756	2234
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.Rlt_sqrt3_0	40	40.042115	5310	1412
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.limit_minus	40	40.037246	8923	3650
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	0.192003	5	5	0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40	40.754561	26929	1346
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_1	40	40.128962	47157	3066
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_plus	40	40.072761	24123	3880
coq-tactician-stdlib.8.12.dev	Coq.nsatz.NsatzTactic.nsatz1.PolZmul_correct	40	40.021424	4382	513
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.Rminus_fp1	40	40.037569	10046	2591
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_l	40	40.058941	18165	7482
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_r	40	0.069350	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro H1; only 1: auto with real; only 1: intro H1; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_left	40	0.048515	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_right	40	0.038563	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_bounds_le	40	40.052690	15712	2509
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.Rinv_pos	40	40.092713	34745	2274
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.pow_2_n_growing	40	27.636184	11485	979	0.2.8.12.22.49	synth with cache (only 1: intro n; only 1: replace (S n) with (1 + n)%nat; only 1: unfold pow_2_n; only 1: red; only 1: auto with real; only 1: now Nat.nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_node_iff	40	5.731712	771	124	2.1.1.0.7.4	synth with cache (only 1: split; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	40	40.066249	16741	5605
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_leaf	40	1.495112	1367	138	18.7.0	synth with cache (only 1: intros; only 1: intros Heq; only 1: inversion_clear 1).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_leaf	40	0.024366	6	3	0.0.3	synth with cache (only 1: red; only 1: intros; only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.DRealRepr	40	40.219494	77689	1692
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Cring.Zcri	40	40.040702	12231	661
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.exist_PI	40	40.038906	11450	2712
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_node	40	3.004661	724	112	0.0.5.12	synth with cache (only 1: red; only 1: intuition; only 1: intuition_in; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.antiderivative_P4	40	40.016666	4085	2146
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_unique	40	41.586336	23580	2080
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructivePower.CRpow_mult	40	40.044552	12431	1912
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rderiv.D_pow_n	40	40.038465	11308	2386
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_node	40	3.757010	550	97	0.0.6.2.6	synth with cache (only 1: intros; only 1: unfold gt_tree; only 1: intros; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_left	40	0.022940	2	2	0.0	synth with cache (only 1: compute; only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_right	40	0.016066	1	1	0	synth with cache (only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_left	40	0.014177	1	1	0	synth with cache (only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_right	40	0.013524	1	1	0	synth with cache (only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.isometric_trans_rot	40	40.057665	8639	2151
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.decrease_seq_transit	40	40.079726	27547	3727
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.CVN_R_CVS	40	40.049412	16810	3208
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	40	40.045501	13050	2132
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.negative_derivative	40	40.030949	7745	3421
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl	40	40.048525	15211	3500
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmin_sym	40	40.044267	11855	3126
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40	40.036707	11635	2401
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_pos_tech	40	40.056221	18153	2949
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_antisym	40	40.075450	22638	2949
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_antisym	40	0.041073	4	3	1.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_le_eq	40	0.120252	21	8	2.1	synth with cache (only 1: intros a b; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_ge_eq	40	0.043483	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.tan_cos	40	40.049646	10965	2263
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_eq_compat	40	0.232669	56	16	0.1.5	synth with cache (only 1: intros n m H1 H2; only 1: intros; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_eq_compat	40	0.046511	5	5	0.0.0.0.0	synth with cache (only 1: intros x x' y y'; only 1: intros; only 1: replace x with x'; only 1: replace y with y'; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.plus_Rsqr_gt_0	40	40.037818	6768	2620
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.ln_exp	40	40.059204	19736	2743
coq-tactician-stdlib.8.12.dev	Coq.Reals.Exp_prop.derivable_pt_lim_exp	40	40.080043	4850	1333
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.disc_P1	40	40.096211	33623	5288
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.Alembert_sin	40	40.033076	8261	3388
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P10	40	40.051656	18635	2779
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_Psucc	40	40.026817	7649	776
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Decidable_sound	40	0.037352	3	3	0.0.0	synth with cache (only 1: intros P H Hp; only 1: apply -> Decidable_spec; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Decidable_complete	40	0.028589	3	3	0.0.0	synth with cache (only 1: intros P H Hp; only 1: apply <- Decidable_spec; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Decidable_sound_alt	40	0.073097	5	5	0.0.0.0.0	synth with cache (only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Decidable_complete_alt	40	0.038156	3	3	0.0.0	synth with cache (only 1: intros P [wit spec] Hd Hc; only 1: simpl in *; only 1: intuition congruence).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_mult_alt	40	40.047855	14576	2435
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.sin_no_R0	40	4.423024	1196	319	0.0.0.0.11.0	synth with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.maj_min	40	40.060746	19889	4673
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Computational.Decidable_PosEq_obligation_1	40	0.683672	124	70	2.0.4	synth with cache (only 1: split; only 1: apply Pos.eqb_eq; only 1: apply Pos.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.sum_const	40	40.069998	24082	2149
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLUB.CRlt_lpo_dec	40	40.196918	23476	3321
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveRcomplete.Rcauchy_limit	40	40.035820	10222	1208
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.Heine_cor1	40	40.026371	7941	2364
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Computational.Decidable_PosLt_obligation_1	40	3.534444	1649	377	18.0	synth with cache (only 1: unfold Pos.ltb, Pos.lt; only 1: now case Pos.compare).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Q2R_pow_pos	40	40.053372	16781	2516
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P3	40	40.037245	9878	3775
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_eq0	40	40.053702	21158	977
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_pos	40	40.068814	14766	2403
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.uniqueness_sum	40	40.073670	23830	2599
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.Pow_x_infinity	40	40.093296	33176	4942
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derivable_pt_lim_recip_interv	40	40.021885	6620	1972
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.minus_sum	40	0.121983	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.Q2R_inv	40	40.099713	38850	2568
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_cauchy	40	40.250741	15942	2005
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult	40	0.181777	134	14	12.0	synth with cache (only 1: destruct x as [xn limx]; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.limit_free	40	40.084749	27775	4119
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.cos_PI4	40	40.075690	14726	1399
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_appart	40	41.761181	9867	1259
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_ne_zero	40	4.336992	1035	231	1.1.0.6.1.1	synth with cache (only 1: simple induction n; only 1: simpl; only 1: now destruct 1; only 1: simpl; only 1: intros a b Hb; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40	40.118832	19528	2365
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_opp	40	40.062561	21237	4003
coq-tactician-stdlib.8.12.dev	Coq.nsatz.NsatzTactic.nsatz1.R_power_theory	40	40.086143	2568	898
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalQ.of_to	40	40.846099	44179	2341
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.Rminus_fp2	40	40.039049	9069	2281
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rle_max_compat_r	40	40.044568	14342	3587
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rle_max_compat_l	40	0.052689	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 (apply Rmax_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_bounds_lt	40	40.090963	31367	4229
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.pow_2_n_infty	40	40.161780	69573	3166
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.Rmult_pos	40	40.111922	43396	2064
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	40	40.078165	20330	6872
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_more_than_1_digit	40	0.080270	10	3	1	synth with cache (only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.Rle_antisym	40	40.058569	15136	1298
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.RmaxRmult	40	5.726764	2337	478	1.1.1.1.1.1.7.2.0	synth with cache (only 1: intros x y z; only 1: intro; only 1: do 2 (apply Rmax_case_strong; intro); only 1: case H0; only 1: auto with real; only 1: auto with real; only 1: auto with real; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.Alt_PI_ineq	40	40.048975	16366	1744
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.NewtonInt_P7	40	40.036554	10061	2776
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Translation.poly_of_formula_eval_compat	40	40.101956	39196	2460
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.Endomorph_id	40	40.041015	8956	2338
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructivePower.CRpow_one	40	40.047082	14475	1018
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Computational.Decidable_PosLe_obligation_1	40	22.083418	7140	1254	8.13.0.6	synth with cache (only 1: revert q; only 1: unfold Pos.leb, Pos.le; only 1: intro m; only 1: now case Pos.compare).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_not_eq0	40	21.442664	14159	1156	0.24.22	synth with cache (only 1: intro; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x | _ => intro | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end; only 1: discriminate || simpl).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_not_in	40	40.100065	29174	2589
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakl_shiftr	40	0.228923	65	12	3.5	synth with cache (only 1: destruct x; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakr_shiftl	40	0.051318	27	5	7.0	synth with cache (only 1: intros; only 1: now destruct x).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.tearing_sequences_ordered_forall	40	40.094211	34464	2642
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.CVU_cv	40	40.050513	15963	3701
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_trans	40	1.699256	1182	187	7.3.6.1.0	synth with cache (only 1: intros m x y; only 1: intros H'; only 1: red; only 1: generalize y; only 1: eauto with *).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_not_in	40	0.026855	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_trans	40	0.023346	1	1	0	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_bst	40	0.009757	3	1	2	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	40	40.012438	1066	246
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_1	40	0.415680	134	41	4.4.0	synth with cache (only 1: intros H1; only 1: intro; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.null_derivative_0	40	40.039695	12351	3473
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl_1	40	40.033920	10057	2063
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmin_mult	40	40.040181	12710	1661
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_PI2	40	40.048697	14389	2398
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_finite_sum	40	40.078900	10168	1933
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.tan_cos_opp	40	40.031998	8758	2509
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_trans	40	40.188875	14188	2469
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.PI2_lower_bound	40	40.037888	12333	2127
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.ln_1	40	40.708932	18161	1501
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.continuity_P1	40	40.067591	25451	3065
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_add	40	40.020018	3198	782
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P11	40	40.029808	7563	1922
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_mult	40	40.035581	8741	3618
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.exist_sin	40	40.070841	24333	3651
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.cauchy_maj	40	40.051152	15664	4418
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.multiTriangleIneg	40	40.096645	36976	2485
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_dec	40	40.074117	23444	2930
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Q2R_pow_N	40	40.099655	38269	2703
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.Heine_cor2	40	40.034113	11709	2333
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Qmult_integral	40	0.066453	4	4	0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qmult; only 1: simpl; only 1: now rewrite <- Z.mul_eq_0, !Z.mul_1_r).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P1	40	0.065334	3	3	0.0.0	synth with cache (only 1: simpl; only 1: intros r1 r2 H H0; only 1: reflexivity || apply Rle_antisym).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P4	40	40.080714	21109	3081
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_opp	40	40.040144	8930	2397
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveRcomplete.Rcauchy_complete	40	41.986324	19824	1653
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.sum_decomposition	40	40.053094	15634	1845
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.Q2R_div	40	40.034425	9229	1473
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_comm	40	40.081820	22884	1808
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.limit_mul	40	40.037123	8805	3231
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_PI4	40	40.049466	15011	2780
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim0	40	40.020693	6022	1996
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rappart_repr	40	40.082883	28101	3026
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.Rinv_pow	40	40.054722	16622	3010
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40	40.057098	17081	2449
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1	40	1.173371	183	64	5.0.0.2	synth with cache (only 1: intros f a b pr H; only 1: intros; only 1: elim H1; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1_decr	40	0.120730	5	5	0.0.0.0.0	synth with cache (only 1: intros f g lb ub x lb_lt_ub x_encad g_wf f_deriv; only 1: apply f_deriv; only 1: apply g_wf; only 1: lra; only 1: lra).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_minus	40	40.049585	14524	4389
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_extens	40	40.651855	38918	2364
coq-tactician-stdlib.8.12.dev	Coq.nsatz.NsatzTactic.nsatz1.norm_correct	40	40.019485	4570	596
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.plus_Int_part1	40	40.042719	15652	2879
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_finite_sum	40	23.064703	8597	1878	0.0.0.0.0.0.0.21.0	synth with cache (only 1: intros; only 1: intro; only 1: unfold derivable_pt; only 1: pose proof (derivable_pt_lim_finite_sum An x N) as H; only 1: induction N as [| N HrecN]; only 1: exists 0; only 1: apply H; only 1: exists (sum_f_R0 (fun k : nat => INR (S k) * An (S k) * x ^ k) (Init.Nat.pred (S N))); only 1: apply H).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalQ.dnorme_spec	40	40.150724	64848	2165
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_abs	40	40.071804	22073	4386
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalQ.of_to	40	40.183218	57558	3442
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.cv_dicho	40	40.052068	16957	3180
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.Rplus_reg_l	40	40.107260	38271	4393
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	40	40.034859	10151	1304
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.wB_pos	40	40.105844	38030	2130
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.lowerUpper	40	40.066016	19485	2632
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40	40.121887	48529	5721
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.Alt_PI_RGT_0	40	40.124685	48313	4291
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.NewtonInt_P8	40	40.028607	8047	2898
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_proper	40	40.259095	22329	2339
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Translation.poly_of_formula_valid_compat	40	40.183267	77424	1423
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Computational.Decidable_eq_poly_obligation_1	40	40.067272	21914	4228
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructivePower.CRpow_proper	40	40.168918	25538	4397
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_lub	40	3.229380	841	237	0.0.0.0.0.2.8	synth with cache (only 1: intros l' d d' Hlen Hnth; only 1: apply Rmax_case_strong; only 1: intros; only 1: clear H; only 1: auto; only 1: intros; only 1: eauto using Rle_trans, Rle_refl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_lub_lt	40	0.057865	8	7	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro; only 1: assumption; only 1: intro; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_zero	40	40.042311	6885	1569
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.CVU_ext_lim	40	40.095130	15381	3053
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.torn_number	40	40.149583	62206	403
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40	40.120053	52021	947
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	40	40.055229	15921	2783
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_1	40	40.043293	11595	943
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.increasing_decreasing	40	40.064093	21264	3441
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_2	40	0.853032	432	100	4.1.1.3.1	synth with cache (only 1: destruct m; only 1: easy; only 1: simpl; only 1: intro H; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.PI_RGT_0	40	40.029333	6351	3263
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmin_plus	40	40.031096	8552	1402
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl	40	40.032726	8986	2897
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.sin_tan	40	40.032123	8472	2194
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_trans	40	40.083519	25522	3264
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.PI2_3_2	40	40.055963	18375	2048
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.ln_lt_inv	40	40.033737	10133	3089
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.continuity_P2	40	40.097683	30878	4315
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_lt_R0	40	40.043468	12552	3349
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.cos_sym	40	40.065624	22062	2248
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.Rlt_mult_inv_pos	40	0.452627	69	40	0.0.0.1.2	synth with cache (only 1: intros a b Ha Hb; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: apply Rinv_0_lt_compat; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.Rle_mult_inv_pos	40	0.226067	15	12	0.0.1.0	synth with cache (only 1: intros x y H H0; only 1: apply Rmult_le_pos; only 1: assumption; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.cauchy_opp	40	40.090002	32396	4392
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.sum_assoc	40	40.041579	10932	1736
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P12	40	40.052971	16075	1820
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_epsilon	40	40.308790	43884	2364
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Qpower_positive_eq_zero	40	40.059623	15831	2578
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P2	40	40.044408	15010	2523
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P5	40	40.046703	13369	3278
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_mult	40	40.021815	3477	566
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_left	40	40.038488	3241	1163
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.sum_Rle	40	40.059063	19344	2488
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveRcomplete.CRealLtIsLinear	40	40.047075	8256	2806
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_trans	40	13.980500	10637	1324	10.1.1.4.9.0	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intros EQ; only 1: intros n m H1 H2; only 1: intros le_mn0; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Computational.Decidable_null_obligation_3	40	22.191324	20944	1321	6.0.0.0.24.26.5	synth with cache (only 1: split; only 1: destruct p; only 1: destruct b; only 1: easy; only 1: easy; only 1: first [ intuition congruence | auto ]; only 1: now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_proper_0_l	40	40.561733	12441	2334
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.tan_PI4	40	40.051184	15572	2645
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.single_limit	40	40.057391	16699	2418
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rplus_comm	40	40.143273	57299	3214
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_lt_1_zero	40	40.077408	25138	4372
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40	40.030112	8961	1221
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derivable_pt_recip_interv	40	40.035281	13051	1960
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_mult	40	40.051854	15180	4291
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	1.035832	344	95	3.0.0.0.2.0.4	synth with cache (only 1: destruct n; only 1: intros; only 1: easy; only 1: Z.swap_greater; only 1: now apply Z.pow_pos_nonneg; only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40	0.027884	2	2	0.0	synth with cache (only 1: intros LT; only 1: Z.order_nz).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.wB_diff_0	40	0.063476	14	7	6	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.wB_pos	40	0.358244	182	13	19	synth with cache (only 1: now try split).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	0.008459	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_1	40	0.009632	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_opp	40	40.801332	33909	2103
coq-tactician-stdlib.8.12.dev	Coq.nsatz.NsatzTactic.nsatz1.PolZeq_correct	40	40.023546	5759	895
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_cosh	40	40.027733	8548	2393
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.plus_Int_part2	40	40.038761	11664	5323
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalQ.dnormf_spec	40	40.613125	57569	691
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_le_abs_0	40	40.052883	12768	5594
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalQ.hnorme_spec	40	40.101132	37921	1898
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.continuity_seq	40	40.045829	13156	3905
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.binary_value	40	2.009486	2717	248	18.17	synth with cache (only 1: intro H; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.Rzero_lt_one	40	40.203627	89657	525
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	40	40.089598	30860	2090
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_1	40	40.065908	21989	1621
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_2	40	0.056286	4	4	0.0.0.0	synth with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z	40	0.059633	8	5	0.0.0.3.0	synth with cache (only 1: unfold to_Z; only 1: generalize digits_ne_1; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.DRealOpen	40	40.127045	47574	4070
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.two_compl_value	40	3.557904	3579	392	3.14.4.6	synth with cache (only 1: intro H; only 1: inversion 1; only 1: generalize dependent n; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.NewtonInt_P9	40	40.043278	14987	2060
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_compose	40	40.159032	69281	498
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_le	40	0.036460	10	6	1.0.0.1	synth with cache (only 1: intros; only 1: intro abs; only 1: apply CRmorph_increasing_inv in abs; only 1: contradiction).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Translation.poly_of_formula_sound	40	40.035176	8899	1001
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructivePower.CRpow_inv	40	40.074361	24487	2116
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_Rlt	40	40.063997	21613	7100
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_or_twice_plus_one	40	40.045452	9443	799
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S	40	0.028809	2	2	0.0	synth with cache (only 1: intros n m; only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.CVU_derivable	40	40.049845	15837	2977
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.torn_number_above_first_sequence	40	40.124310	50175	1962
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_1	40	40.148980	59884	1461
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_le_inv	40	3.390152	2101	405	10.1.0.3.2.0	synth with cache (only 1: intros; only 1: intro abs; only 1: destruct H; only 1: apply CRmorph_increasing; only 1: destruct (CRltLinear R1); only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_zero	40	0.140004	15	5	1.1.0	synth with cache (only 1: split; only 1: apply CRmorph_rat; only 1: apply CRmorph_rat).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S_tail	40	1.196390	368	115	4.1.0.0.1.0.0	synth with cache (only 1: intros; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_one	40	0.017846	2	2	0.0	synth with cache (only 1: intros; only 1: apply CRmorph_rat).
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.null_derivative_1	40	40.038224	10071	4234
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Ring31.TestRing.test	40	41.099939	7561	1329
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_1	40	40.036533	7402	602
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.PI_4	40	40.060687	19095	3042
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl_1	40	40.047470	13587	2176
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmin_left	40	40.025377	5617	2436
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.cos_tan	40	40.017428	3753	1849
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	20.119428	53495	478	280	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.sin_pi_minus	40	0.117884	5	5	0.0.0.0.0	synth with cache (only 1: intro x; only 1: rewrite sin_minus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.PI2_1	40	40.047699	9715	2442
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.sin_pi_plus	40	0.160158	5	5	0.0.0.0.0	synth with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.ln_inv	40	40.035674	9862	2556
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.continuity_P3	40	40.039815	11905	3443
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.sin_antisym	40	40.064249	20384	2687
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_div_alt	40	40.044989	11439	3170
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.PI_neq0	40	8.450553	2230	257	0.0.0.2.9.10	synth with cache (only 1: apply Rlt_dichotomy_converse; only 1: unfold Rgt; only 1: right; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.cauchy_min	40	40.082771	27936	5496
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P13	40	40.017369	4164	1632
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.sum_Rle	40	40.848065	35416	2402
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.cos_pi_minus	40	7.729283	2065	455	0.5.0.0.0.9.0	synth with cache (only 1: intro x; only 1: unfold Rminus; only 1: rewrite cos_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: rewrite <- cos_sym; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_const	40	29.866790	9762	2769	0.0.0.0.0.0.0.0.0.0.0.0.0.6.0.0	synth with cache (only 1: unfold continuity; only 1: unfold constant, continuity_pt; only 1: red; only 1: unfold limit1_in; only 1: unfold limit_in; only 1: intros; only 1: exists 1; only 1: split; only 1: apply Rlt_0_1; only 1: intros; only 1: generalize (H x x0); only 1: intro; only 1: rewrite H2; only 1: simpl; only 1: rewrite R_dist_eq; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.cos_pi_plus	40	0.130285	5	5	0.0.0.0.0	synth with cache (only 1: intro x; only 1: rewrite cos_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.append_assoc_0	40	40.075717	23211	2712
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_not_epsilon	40	40.158024	59174	3497
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Qpower_positive_zero	40	40.030757	10539	1566
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P3	40	40.053732	18332	2051
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P6	40	40.058916	17640	4340
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_appart_0	40	40.040459	7518	2600
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.Rsum_abs	40	40.047391	13545	3036
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_genZ	40	40.036089	11764	946
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveRcomplete.CRealAbsLUB	40	40.030805	4968	912
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_lt_trans	40	40.132411	14217	2873
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_le_trans	40	0.251915	51	25	0.0.1	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Computational.Decidable_valid_obligation_1	40	40.053111	15679	2324
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_0_r	40	40.072930	26293	1999
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.cos_3PI4	40	40.043862	13128	2339
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rplus_assoc	40	40.105706	39613	4435
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.limit_comp	40	40.043806	10533	3625
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_R1	40	40.071470	24019	3083
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_0_l	40	2.450699	1160	122	21	synth with cache (only 1: easy').
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derivable_pt_recip_interv_decr	40	40.014920	3870	1524
coq-tactician-stdlib.8.12.dev	Coq.nsatz.NsatzTactic.nsatz1.mult_l_correct	40	40.022730	5734	902
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_plus	40	40.248223	39312	2767
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_sinh	40	40.025992	5600	2733
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.plus_frac_part1	40	40.029651	8861	3628
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalQ.dnorme_invol	40	40.135957	55898	2398
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_le_abs_1	40	40.056425	14364	4927
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Validity.valid_le_compat	40	8.849331	7666	1048	5.0.2.4.7.0.0.10.0	synth with cache (only 1: intros x y z; only 1: destruct 1; only 1: intro E; only 1: trivial; only 1: constructor; only 1: Pos.Private_Tac.order; only 1: now f_equal; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalQ.hnorme_invol	40	40.433138	33705	1814
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_lb_car	40	40.064702	22475	3184
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40	40.080944	27295	2697
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	0.009780	1	1	0	synth with cache (only 1: RelationClasses.simpl_relation).
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.plus_IQR	40	40.077019	22545	2639
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_of_pos	40	40.050039	16010	1504
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.ENCODING_VALUE.Zmod2_twice	40	40.050430	16327	1341
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.DRealReprQ	40	40.379746	21633	1441
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	40	4.151752	831	249	0.0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n p a H; only 1: rewrite Zmod_eq by auto with zarith; only 1: unfold Z.sub at 1; only 1: rewrite Z_div_plus_full_l by auto with zarith; only 1: replace (2 ^ n) with (2 ^ (n - p) * 2 ^ p) by (rewrite <- Zpower_exp; [ f_equal |  |  ]; lia); only 1: rewrite <- Zdiv_Zdiv, Z_div_mult by auto with zarith; only 1: rewrite (Z.mul_comm (2 ^ (n - p))), Z.mul_assoc; only 1: rewrite Zopp_mult_distr_l; only 1: rewrite Z_div_mult by auto with zarith; only 1: symmetry; only 1: apply Zmod_eq; only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Validity.linear_le_compat	40	6.101568	4017	592	0.2.0.4.5.6.0.2.2	synth with cache (only 1: intros x y H; only 1: simple destruct 1; only 1: trivial; only 1: right; only 1: intuition; only 1: Pos.Private_Tac.order || (right; Pos.Private_Tac.order) || (left; Pos.Private_Tac.order); only 1: eauto; only 1: trivial; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound	40	40.080142	26553	2776
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Completeness.list_nth_base	40	0.061281	5	2	2.1	synth with cache (only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructivePower.CRpow_plus_distr	40	40.026621	6347	1609
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_neg	40	40.052400	15662	7889
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.torn_number_below_second_sequence	40	40.055489	10980	4212
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_0	40	40.125667	52816	1594
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_n_0	40	40.069050	18724	3476
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_opp	40	40.326335	24791	1796
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_size	40	0.050636	8	3	0.5.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.derive_increasing_interv_ax	40	40.058820	20562	3586
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_2	40	40.095214	34433	3910
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl	40	40.045669	14850	2470
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmin_right	40	40.026691	5655	2802
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_inj	40	40.098077	37335	2605
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.tan_increasing	40	40.045806	13152	1931
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.ln_mult	40	40.035334	11203	2227
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.Rsepare	40	40.042081	11224	3371
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.sin_0	40	40.084417	29393	2769
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_PI	40	40.052643	16136	2952
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_div	40	40.039246	9282	3332
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.maj_cv	40	40.076361	26421	4366
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P14	40	40.026459	7671	1720
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.Abs_sum_maj	40	40.153893	37835	2720
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_scal	40	40.083148	29610	4302
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.tan_pi_minus	40	40.046249	14064	1900
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.append_assoc_1	40	40.106160	33033	4102
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLUB.DDlow_below_up	40	40.088422	21606	2421
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Q2RpowerRZ	40	40.042782	12509	2576
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P4	40	40.044196	14083	2254
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P7	40	40.049840	14849	3615
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_morph_Proper	40	40.045582	4467	1865
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Completeness.list_nth_succ	40	20.395222	13353	2144	0.0.7.17	synth with cache (only 1: intros m Hm; only 1: intros; only 1: unfold list_nth; only 1: now rewrite Pos.peano_rect_succ).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.sum_cte	40	40.053158	15258	2974
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_Zeqb_ok	40	40.030395	8931	1823
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveRcomplete.CRealComplete	40	40.264073	19992	1852
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_gt_trans	40	40.074185	23371	3096
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_3PI4	40	40.055085	17041	2162
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rplus_opp_r	40	40.116853	47763	2251
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.limit_inv	40	40.045669	11947	3404
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_Rsqr	40	40.037114	10026	3374
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CRealLt_0_aboveSig	40	40.087545	9705	1406
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_le	40	0.402107	51	25	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim0	40	40.023626	6365	1453
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_inv	40	11.008450	3123	1186	1.4.0.10	synth with cache (only 1: intros a b n Hn; only 1: apply continuity_pt_inv; only 1: auto with real; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.sum_growing	40	7.062910	3170	749	10.0.3.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: apply H; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (sum_f_R0 An N + Bn (S N)); only 1: apply Rplus_le_compat_l; only 1: apply H; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.nsatz.NsatzTactic.nsatz1.compute_list_correct	40	40.051815	14840	1078
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_unique	40	40.076658	23919	2430
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_exp	40	40.027472	7096	2766
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.plus_frac_part2	40	40.034493	10134	3990
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.Rabs_triang_gen	40	1.449743	276	138	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_lt_abs_0	40	40.078152	22253	5300
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalQ.dnormf_invol	40	40.210749	31409	3322
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_up_car	40	40.035510	9949	2427
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalQ.to_of	40	40.072240	24015	2040
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.mult_IQR	40	40.106635	15738	1852
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyBool.Z_of_bool_bound	40	40.076622	28301	1955
coq-tactician-stdlib.8.12.dev	Coq.Classes.DecidableClass.Decidable_sound	40	7.473467	18869	1618	0.44.3	synth with cache (only 1: intro H; only 1: intros (x, (Hx, Huni)); only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_zdigits	40	40.081471	26965	1802
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_0	40	0.077627	7	6	0.1.0.0.0.0	synth with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: unfold wB, base; only 1: split; only 1: auto with zarith; only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_binary	40	40.117684	39081	3779
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WO	40	40.040216	13445	1337
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.DRealReprQup	40	40.069297	21877	2472
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	40	40.098326	34882	3486
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Validity.linear_valid_incl	40	40.116606	42577	3424
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalZ.of_to	40	40.079917	26381	3554
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructivePower.CR_double	40	40.024202	6027	1075
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rcase_abs	40	40.046713	13949	4537
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Evaluation.eval_null_zero	40	3.058381	3258	333	1.6.8.10	synth with cache (only 1: intros a0 a; only 1: intros m; only 1: destruct m; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.limit_index_above_all_indices	40	40.065530	15189	1262
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40	40.079377	24915	1231
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_above_size	40	40.045403	14023	1898
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	40	40.071266	17091	2424
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S	40	0.007816	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.derive_increasing_interv	40	40.023101	5132	2684
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_1	40	40.060882	19908	3231
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Evaluation.eval_extensional_eq_compat	40	2.945146	2297	290	5.0.4.0.3.5	synth with cache (only 1: intros; only 1: induction p; only 1: simpl in *; only 1: trivial; only 1: simpl; only 1: first [ intuition congruence | auto ]).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl_1	40	40.330140	23314	2308
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmin_lt	40	40.028884	6715	2513
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40	40.104039	35922	2500
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.tan_inj	40	40.023198	6008	2232
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.ln_Rinv	40	40.026202	7230	2057
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.restriction_family	40	40.071223	24944	4996
coq-tactician-stdlib.8.12.dev	Coq.Classes.DecidableClass.Decidable_complete	40	14.464575	32067	2335	0.34.6.13	synth with cache (only 1: intro x; only 1: intros; only 1: apply H; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.succ_mod_wB	40	6.222136	1760	219	6.2.1.16	synth with cache (only 1: intros a; only 1: symmetry; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S_tail	40	9.002435	3540	814	0.2.0.0.1.1.5.3.2	synth with cache (only 1: intros n m; only 1: revert m; only 1: intros H; only 1: elim n; only 1: split; only 1: simpl; only 1: intros m IH; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_PI	40	40.036377	7062	2230
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_lt_0_alt	40	40.055211	17329	3951
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.exist_cos0	40	40.040135	11347	3430
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.min_cv	40	40.111348	45474	2629
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.cond_pos_sum	40	40.037239	11926	1187
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.tan_pi_plus	40	40.045815	14819	1200
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.append_neutral_r	40	40.154803	58584	3045
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P15	40	40.029084	9032	2259
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.append_neutral_l	40	0.084296	7	7	0.0.0.0.0.0.0	synth with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gempty	40	0.048489	15	3	7	synth with cache (only 1: now intros []).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLUB.DDcut_limit_fix	40	40.276905	33918	1943
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Qpower0	40	40.026140	8557	1353
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P5	40	40.030172	9090	2255
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P8	40	40.047517	14675	2935
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Completeness.list_nth_nil	40	40.065504	18998	4705
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ1_add_pos_neg	40	40.019800	1927	444
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_le	40	40.134214	15770	2664
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_ge_trans	40	40.047082	12278	1622
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_dec	40	1.938407	465	113	0.0.1.0.1.8	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rplus_0_l	40	40.077113	24987	1494
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.cos_PI6	40	40.057114	17884	1604
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.match_compOpp	40	2.967108	1172	254	2.0.7.2.0.0.4	synth with cache (only 1: destruct x; only 1: intros x y H7; only 1: reflexivity; only 1: intro x; only 1: reflexivity; only 1: intros x y H7; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_dec	40	0.738764	45	17	0.0.3	synth with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_dec	40	0.203376	5	3	1.0.1	synth with cache (only 1: do 2 intro; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_dec	40	0.235314	4	3	1.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_1_even	40	40.033683	10111	2201
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_le_dec	40	0.829535	90	33	0.4.1.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_ge_dec	40	0.089832	5	3	1.1.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat_correct	40	40.396877	8090	1273
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_lt_dec	40	0.126012	3	3	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_div	40	40.051858	15425	4247
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_0	40	40.018550	3740	1561
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_gt_dec	40	0.891544	130	64	0.1.0.1.1.0	synth with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_or_le	40	0.076889	3	3	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.nsatz.NsatzTactic.nsatz1.check_correct	40	40.026279	7305	582
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_or_ge	40	0.119021	25	15	0.1.0.0.1.0	synth with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: left; only 1: eauto with rorders; only 1: right; only 1: eauto with rorders).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_or_lt	40	0.308537	30	13	0.0.1	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_cosh	40	40.035846	10526	2648
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_or_gt	40	0.147571	34	19	0.1.0.1.0.0	synth with cache (only 1: intros; only 1: edestruct Rlt_or_le; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_eq	40	40.358654	24974	2895
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.cond_pos_sum	40	40.062114	18939	4050
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40	3.595766	187	100	1.0.0.0.0.1.0	synth with cache (only 1: intros f g lb ub x lb_lt_ub x_encad f_incr g_wf f_eq_g; only 1: apply g_wf; only 1: pose proof (f_incr_implies_g_incr_interv f g lb ub lb_lt_ub f_incr f_eq_g g_wf) as Temp; only 1: pose proof (leftinv_is_rightinv_interv f g lb ub f_incr f_eq_g g_wf) as Left_inv; only 1: unfold comp, id in Left_inv; only 1: intuition; only 1: lra).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_lt_abs_1	40	40.062932	15892	5990
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.cv_pow_half	40	40.030836	9194	2735
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.family_P1	40	25.054934	23803	2938	7.10.9.12	synth with cache (only 1: intros x y H; only 1: intro abs; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1_decr	40	2.318939	209	72	2.2.3.0	synth with cache (only 1: intros f g lb ub x lb_lt_ub x_encad f_incr g_wf f_eq_g; only 1: apply g_wf; only 1: lra; only 1: lra).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.to_lu_succ	40	0.006814	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.IQR_lt	40	40.097201	35337	2162
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyBool.Z_eqb_isZero	40	40.084020	29590	3002
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalQ.to_of	40	40.807557	17117	2057
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_1	40	40.060454	15931	3680
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalQ.to_hexadecimal_inj	40	40.150261	59977	2909
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_Bm1	40	0.136074	22	10	0.2.0.0	synth with cache (only 1: unfold to_Z, one; only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: lia).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_two_compl	40	40.203825	82453	3799
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_compare	40	0.083699	27	6	6	synth with cache (only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_Sn	40	0.073944	18	5	0.1	synth with cache (only 1: intros n m Hn; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_OW	40	40.060848	23458	971
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalZ.to_of	40	40.076080	25107	3828
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.DRealQuot1	40	41.425606	34787	3015
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructivePower.GeoCvZero	40	40.061227	19834	2399
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_R0	40	40.091056	36760	2373
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_lt_or_eq_dec	40	12.063102	4087	965	2.0.3.2.0.3.6	synth with cache (only 1: intros x y; only 1: unfold Rle; only 1: destruct (total_order_T x y); only 1: intro; only 1: auto; only 1: right; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.first_indices_increasing	40	40.066619	23601	1813
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	40	40.038766	9423	1851
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.derive_increasing_interv_var	40	40.023323	5149	2711
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_2	40	40.097538	32683	3867
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Evaluation.eval_suffix_compat	40	40.069843	22162	2572
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl	40	40.035904	10640	2697
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_spec	40	40.098414	32320	3858
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.exists_atan_in_frame	40	40.027492	8595	1975
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.ln_continue	40	40.034222	11032	2713
coq-tactician-stdlib.8.12.dev	Coq.Classes.DecidableClass.Decidable_sound_alt	40	40.186769	65303	7685
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40	40.053519	10062	1154
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmin_contract	40	40.043507	12847	2374
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_n_0	40	40.104507	8927	1804
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_bound	40	40.023795	4520	2723
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_lt_0	40	40.041216	11331	3835
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.cos_0	40	40.059256	18017	3228
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.cond_eq	40	40.053769	17707	3249
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.not_Rlt	40	0.023981	1	1	0	synth with cache (only 1: eauto using Rnot_gt_ge with rorders).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalZ.to_int_inj	40	16.626897	17821	949	3.63.0	synth with cache (only 1: intro E; only 1: Z.bitwise; only 1: now rewrite <- (Signed.of_to n), <- (Signed.of_to n'), E).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyComparison.Z_of_comparison_bound	40	40.082012	30382	2171
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.pos_sum_more	40	40.086496	29283	3004
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P16	40	40.022147	5788	2030
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gss	40	40.119172	43855	3635
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLUB.DDcut_limit	40	40.149389	53790	2878
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Q_of_RcstR	40	40.068980	22017	4266
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P6	40	40.024316	6655	2012
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P9	40	40.060998	12045	2395
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Completeness.make_last_nth_1	40	40.068653	24037	3206
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.open_set_P6	40	27.966441	29597	3836	21.18.1	synth with cache (only 1: intros; only 1: intros HP; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_morph	40	40.043095	7628	1891
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_minus_sym	40	40.034701	4821	1728
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalZ.of_to	40	40.151496	65359	2980
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rmult_comm	40	40.059557	10836	1009
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.tan_PI6	40	40.036781	10136	2596
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_add	40	40.019482	5351	1496
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_1_odd	40	40.050704	12788	2921
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_comp	40	40.048977	12874	3875
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_bound_indep	40	40.084865	19641	2439
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_size	40	16.158738	2670	182	0.0.0.40	synth with cache (only 1: intros n; only 1: induction n; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_sinh	40	40.041637	12751	2728
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_exp	40	0.142243	5	5	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (exp x); only 1: apply derivable_pt_lim_exp).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.cauchy_abs	40	40.080015	28901	3782
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cauchy_eq	40	40.909812	31793	2030
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_inj	40	40.050366	13453	3859
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.IVT	40	40.058795	20174	3538
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv	40	40.011815	2816	1251
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.to_little_uint_succ	40	40.079373	28409	2629
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyBool.Z_leb_sub	40	40.069430	23571	3865
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.lt_IQR	40	40.110586	41428	2814
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalQ.to_hexadecimal_surj	40	40.060872	13622	3433
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_eq0	40	40.072783	15347	2937
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn	40	40.045546	15176	1652
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WW	40	40.089066	12596	1481
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalQ.to_decimal_inj	40	40.114962	43745	2286
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	40	40.061994	16505	2381
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_R1	40	40.051982	17656	2383
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P10	40	21.007501	9724	1956	4.5.1.0.2.1.0.0.6.1	synth with cache (only 1: intros; only 1: induction l as [| r l Hrecl]; only 1: apply S_pred with 0%nat; only 1: simpl; only 1: Nat.order'; only 1: simpl; only 1: case (Rle_dec r a); only 1: simpl; only 1: auto; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.inser_trans_R	40	40.081893	16519	2595
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructivePower.GeoFiniteSum	40	40.047895	14922	1205
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_0_r	40	0.459113	8	5	0.3.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_0; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_ne	40	0.459107	21	8	0.0.0.1.2	synth with cache (only 1: split; only 1: ring; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_0; only 1: apply CReal_plus_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_plus_rat	40	40.067582	16399	6030
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_opp_l	40	0.304461	7	5	0.2.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_opp, Rrepr_0; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_opp_r).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.R_uncountable	40	40.077132	27363	3109
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.IAF	40	40.046498	14488	3492
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gleaf	40	26.029356	39165	1741	0.0.0.0.0.0.4.107	synth with cache (only 1: intros n; only 1: case n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_iff	40	40.059966	13267	2994
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_add_compat	40	40.093973	35157	2339
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl_1	40	40.049397	15903	2732
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_false_spec	40	40.085603	29143	3510
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	0.136812	22	9	0.0.2	synth with cache (only 1: intros x y; only 1: rewrite <- not_true_iff_false, eqb_spec; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_false_correct	40	0.024231	3	3	0.0.0	synth with cache (only 1: intros x y; only 1: rewrite eqb_false_spec; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.tan_1_gt_1	40	40.039139	11927	3063
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rpower_plus	40	40.041892	12194	3021
coq-tactician-stdlib.8.12.dev	Coq.Classes.DecidableClass.Decidable_complete_alt	40	40.197885	71614	6507
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40	40.127482	28414	2383
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmin_glb	40	40.026669	6465	2583
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_bound	40	40.037457	10015	2656
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_lt_1_alt	40	40.047867	13869	3681
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.approx_maj	40	40.127648	46675	4276
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_lt_1	40	1.363974	276	135	0.0.0.1.0.0.0.1	synth with cache (only 1: intros; only 1: apply Rsqr_incrst_0; only 1: rewrite 2!Rsqr_sqrt; only 1: assumption; only 1: assumption; only 1: assumption; only 1: apply sqrt_pos; only 1: apply sqrt_pos).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalZ.to_int_surj	40	40.088207	30113	4914
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyComparison.Zcompare_spec	40	40.052111	16376	3246
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.sum_opp	40	40.066508	20536	2547
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P17	40	40.032275	9672	2143
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLUB.glb_dec_Q	40	40.148343	56802	2210
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P7	40	40.034410	10571	2586
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Reval_formula_compat	40	40.744711	36973	2992
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Completeness.make_last_nth_2	40	40.092340	25428	2365
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.compact_P1	40	40.100392	34729	4195
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_morph_prop_Proper	40	40.047163	10214	3754
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_lt	40	40.053471	14564	1856
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalZ.to_of	40	40.070205	23628	4967
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalZ.to_int_inj	40	0.054796	10	3	0.2	synth with cache (only 1: intros E; only 1: now rewrite <- (Unsigned.of_to n), <- (Unsigned.of_to n'), E).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_positive_1	40	40.024766	7595	965
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rmult_assoc	40	40.041990	11542	1596
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_PI3	40	40.053561	16300	3266
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_opp	40	40.032253	10459	714
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_1_abs	40	40.064140	19398	4122
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.uniqueness_step1	40	40.034034	10226	2346
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40	40.195166	10867	1372
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_above_size	40	40.089202	8226	919
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_cosh	40	40.031985	10282	2493
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_sinh	40	0.139314	5	5	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (cosh x); only 1: apply derivable_pt_lim_sinh).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.cv_cauchy_1	40	40.043683	12395	3330
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_proper	40	40.084629	21519	2117
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_eq_abs_0	40	40.051917	14186	3673
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.IVT_cor	40	40.065456	20841	3347
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derive_pt_exp	40	3.758490	1960	342	0.1.15	synth with cache (only 1: intro H5; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_exp).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_decr	40	40.021311	6261	2089
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.to_lu_equiv	40	40.080670	26508	4137
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derive_pt_cosh	40	0.149983	21	10	1.0.5	synth with cache (only 1: intro eps; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cosh).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyBool.Z_ltb_leb	40	40.042134	13125	2340
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derive_pt_sinh	40	0.492304	35	29	2.0.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.IQR_plus_quot	40	40.077204	24993	3454
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstr_firstl	40	7.072681	656	85	5.12	synth with cache (only 1: intro n; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalQ.of_hexadecimal_hnorme	40	40.053875	15836	3981
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstl_firstr	40	0.104991	3	3	0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_c	40	40.066740	12753	2670
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_pos	40	40.109687	41302	3703
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.two_compl_value_Sn	40	0.097639	12	4	1.2.0	synth with cache (only 1: simpl; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_pos_correct	40	40.060958	22145	1089
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_predsize_0_firstl	40	1.730088	228	45	0.0.8.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: intros; only 1: injection H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLtEpsilon	40	40.898434	19682	1341
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalQ.to_decimal_surj	40	40.054848	19689	2084
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Heap.defs.leA_Tree_Leaf	40	0.013246	5	1	4	synth with cache (only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Heap.defs.leA_Tree_Node	40	0.036430	2	2	0.0	synth with cache (only 1: simpl; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.DRealQuot2	40	40.052830	3054	1301
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_no_R0	40	40.026480	5947	2013
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P11	40	40.057491	17653	2404
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Heap.defs.invert_heap	40	1.415054	734	90	0.5.4.10	synth with cache (only 1: intros l l1 l2; only 1: intros; only 1: inversion_clear H; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructivePower.GeoHalfBelowTwo	40	40.061241	19229	1717
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLtForget	40	3.472922	2038	259	10.12	synth with cache (only 1: intros [xn xd] [yn yd] Hxy; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_opp_r_uniq	40	40.039730	11823	1828
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_plus	40	40.082938	24653	2502
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_eq_compat_l	40	0.059669	9	4	1.4.0	synth with cache (only 1: Bool.destr_bool; only 1: rewrite H; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.IAF_var	40	40.051946	16534	3552
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_eq_compat_r	40	0.128698	48	14	1.4.1	synth with cache (only 1: Bool.destr_bool; only 1: rewrite H; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in	40	40.042690	12580	1490
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gso	40	40.072804	23268	2904
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_compat	40	40.105708	38286	2908
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.ub_lt_2_pos	40	11.192348	2384	812	2.0.0.2.2.4	synth with cache (only 1: intro H1; only 1: intro; only 1: intro H10; only 1: intros; only 1: unfold Rdiv; only 1: lra).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40	40.074944	24881	2286
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl	40	40.043687	14001	2498
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.frame_tan	40	40.055773	20361	2430
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rpower_mult	40	40.054092	18752	2421
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_succ	40	40.104226	38907	2246
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmin_assoc	40	40.032918	8746	1824
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.neg_cos	40	40.058825	13894	2583
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_le_0	40	40.038324	9248	4055
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.ub_opp	40	5.063496	1941	270	18.4	synth with cache (only 1: intro; only 1: lra).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalZ.of_int_norm	40	40.053380	14799	3686
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.pos_opp_lt	40	0.063635	5	2	3.0	synth with cache (only 1: intros; only 1: lra).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.approx_min	40	40.033237	8961	2973
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.sum_scale	40	40.053226	16670	1820
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P18	40	40.054824	17062	1848
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P8	40	40.034767	10644	2456
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Reval_nformula_dec	40	40.276933	18686	1747
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Completeness.list_replace_nth_1	40	40.059688	19406	2308
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_glb	40	40.134148	46975	4487
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.compact_P2	40	40.052079	10473	4077
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_right	40	40.049631	12593	2404
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_triang	40	40.050677	15771	2024
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_eq_asb_1	40	31.288758	13720	3499	15.4.0.1.0	synth with cache (only 1: intros; only 1: rewrite (Rsqr_abs y); only 1: unfold Rabs; only 1: rewrite (Rsqr_abs x); only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalZ.to_int_surj	40	40.147102	62203	601
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_1	40	40.053809	4206	638
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_positive_0	40	0.085998	9	7	1.0.0.0.1.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rinv_l	40	40.059780	21483	1856
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.cos_PI3	40	40.060837	19312	1701
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_mul	40	40.015008	3514	1904
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.rleaf	40	20.528393	22551	1037	48.25	synth with cache (only 1: intro p; only 1: now try destruct p).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_mult	40	40.054066	16917	3113
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.uniqueness_step2	40	40.042640	12741	3841
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalZ.of_int_norm	40	4.687793	1927	485	5.0.11.0.0.1	synth with cache (only 1: destruct d; only 1: simpl; only 1: now induction d; only 1: generalize (DecimalPos.Unsigned.to_of d); only 1: simpl; only 1: now induction d).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40	40.028303	6119	2540
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.cv_cauchy_2	40	40.123027	47400	4559
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_morph	40	40.086006	17519	2270
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalZ.of_inj	40	3.032772	1800	341	4.13.0.0	synth with cache (only 1: intros; only 1: rewrite <- !Unsigned.to_of; only 1: rewrite H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.Rsqrt_exists	40	40.084921	30520	3210
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.to_uint_alt	40	40.103266	36905	3812
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	40	40.086652	26829	3629
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.sinh_lt	40	40.039893	12633	2866
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.IQR_mult_quot	40	40.243971	9101	1082
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalQ.of_inj	40	40.060455	19632	2672
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp	40	40.078945	10501	4013
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn	40	40.040783	12978	1667
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_Z_correct	40	40.061511	22989	1473
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn_z	40	0.008963	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_propagates	40	40.047676	16102	2218
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalQ.of_decimal_dnorme	40	40.535988	18475	1666
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_left	40	40.046243	12027	5625
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P12	40	40.045225	13043	3473
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Heap.defs.is_heap_rect	40	40.114048	41948	2252
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructivePower.GeoHalfTwo	40	40.034692	3080	872
coq-tactician-stdlib.8.12.dev	Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	40	40.054426	15939	2536
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_lpo_dec	40	40.487545	38828	3666
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.null_derivative_loc	40	40.048080	15083	3231
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_pos	40	40.102633	24974	2995
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_eq_reg_l	40	40.105319	24683	2298
coq-tactician-stdlib.8.12.dev	Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40	0.730444	408	73	15	synth with cache (only 1: apply Nat.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Heap.defs.is_heap_rec	40	2.597915	495	167	0.2.0.0.0.0.1.0.1.0.0	synth with cache (only 1: simple induction T; only 1: auto with datatypes; only 1: intros a G PG D PD PN; only 1: elim (invert_heap a G D); only 1: intros H1 H2; only 1: elim H2; only 1: intros H3 H4; only 1: elim H4; only 1: intros; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40	0.077729	17	5	4	synth with cache (only 1: apply Nat.leb_le).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.in_find	40	40.036528	10756	2026
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_div2_value	40	7.520480	2650	622	1.1.0.0.0.0.0.0.2.0.0.0.2.0	synth with cache (only 1: destruct z; only 1: intros Hn; only 1: simpl; only 1: Z.order; only 1: simpl; only 1: intros; only 1: destruct p; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: reflexivity; only 1: now destruct 1 || trivial).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_mul_mon_compat	40	40.099308	35571	2723
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.mkposreal_lb_ub	40	40.047847	16382	2557
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.cast_refl	40	40.185233	73973	3492
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.concat_avl	40	40.039210	12566	1926
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rpower_O	40	40.031606	9472	2128
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40	40.104591	42990	1364
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.two_succ	40	0.006876	1	1	0	synth with cache (only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B0	40	0.182159	437	23	29	synth with cache (only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRlt_min	40	40.199606	25686	7468
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_cos	40	40.057144	17361	2361
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmax_morph_Proper	40	1.326878	267	75	0.0.0.0.6.0	synth with cache (only 1: intros; only 1: apply CRmult_morph; only 1: unfold CRminus; only 1: rewrite H, H0; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.multiplicity_In	40	40.051978	16130	2708
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_le_1_alt	40	40.033816	7838	2573
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmax_morphT	40	0.303651	26	12	0.5.0	synth with cache (only 1: intros R x y exy z t ezt; only 1: rewrite exy, ezt; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.tech_opp_tan	40	40.044538	14952	3020
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalZ.of_inj	40	40.077605	24713	3420
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.UL_sequence	40	40.054464	17875	3660
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Heap.defs.low_trans	40	12.032517	5159	1171	13.0.3.0.0.0.1	synth with cache (only 1: simple induction T; only 1: intros; only 1: simpl; only 1: auto with datatypes; only 1: simpl; only 1: intros; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.sum_plus	40	40.051622	15993	2433
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P19	40	40.048214	16042	1951
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P9	40	40.033665	10961	2251
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.RWeakChecker_sound	40	40.105164	32193	3556
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Completeness.list_replace_nth_2	40	40.053531	17375	1991
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_closed	40	40.108317	36176	4848
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_opp	40	40.057744	8371	1783
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.compact_EMP	40	40.196683	85994	4689
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_triang_inv	40	40.071502	12099	2623
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.triangle_rectangle	40	40.066789	20055	3624
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalN.Unsigned.of_to	40	40.079136	23868	4712
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_0	40	40.036628	10455	1665
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rmult_1_l	40	40.067313	24250	1256
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.tan_PI3	40	40.045473	13537	2164
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.grs	40	40.086672	29025	3296
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_ext	40	40.026482	7869	2001
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_incr	40	40.057488	16617	4577
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.uniqueness_step3	40	40.044302	13991	3211
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_right	40	27.436999	12511	2515	0.0.19.0.1.0.1.0	synth with cache (only 1: intros; only 1: unfold Rabs; only 1: case (Rcase_abs r); only 1: intro; only 1: absurd (r >= 0); only 1: auto with real; only 1: assumption; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	40	40.038295	3696	649
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.sum_eq_R0	40	40.063599	20659	2693
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.Un_cv_nat_real	40	40.410889	36056	2353
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalZ.of_iff	40	40.119360	21788	3427
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_eq	40	1.052973	95	67	5	synth with cache (only 1: Dec.fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.Rsqrt_positivity	40	40.067011	19435	4039
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.of_lu_eqn	40	40.037285	6246	195
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40	40.092271	32581	4103
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.Rabove_pos	40	40.259204	101320	3527
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalQ.of_iff	40	40.144725	15783	2867
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_carry	40	40.051970	12738	3751
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_0_l	40	40.106067	43435	1391
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_firstl	40	40.064586	23217	2565
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalQ.of_decimal_dnormf	40	40.038784	11662	2112
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P13	40	40.053902	17801	2462
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_not_lt	40	40.093908	15771	2118
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.antiderivative_Ucte	40	40.050370	16162	3420
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_eq_reg_r	40	40.069731	16926	5234
coq-tactician-stdlib.8.12.dev	Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40	40.063193	17706	3585
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.NatOfZ	40	40.145335	60473	2051
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_iff	40	40.037487	9648	1817
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Pdiv2	40	40.074241	24558	1683
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_mul_compat	40	40.076832	23837	3295
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P14	40	5.049386	1564	473	8.3.0.0.0.0.1	synth with cache (only 1: induction l; only 1: intro; only 1: simpl; only 1: trivial using Nat.le_add_r; only 1: simpl; only 1: symmetry; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derivable_pt_lim_CVU	40	40.026910	8492	2438
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40	40.134383	48051	2510
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.split_avl	40	40.040897	12754	2767
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map.map_height	40	0.050939	7	4	0.3.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rpower_1	40	40.039684	12298	2091
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.BS	40	40.093682	27328	2422
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_plus	40	40.047597	13850	2661
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_le_1	40	40.038006	9200	3625
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.multiplicity_In_O	40	40.068279	21428	2736
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmax_lub	40	40.068922	20278	5549
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.multiplicity_In_S	40	0.105160	6	6	0.0.0.0.0.0	synth with cache (only 1: intros l a; only 1: intro H; only 1: eapply In_InA, multiplicity_InA in H; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.pre_atan	40	40.028580	9149	2108
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalZ.of_iff	40	40.092542	31154	3687
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.CV_plus	40	40.091853	34095	4173
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Heap.defs.Equivalence_instance_0	40	40.086313	30317	2290
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.decomp_sum	40	40.048261	16377	1907
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Heap.defs.Proper_instance_0	40	0.704048	144	43	1.2.1.0.0.1	synth with cache (only 1: red; only 1: red; only 1: red; only 1: red; only 1: simpl; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P20	40	40.037874	11313	2165
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P6	40	40.041132	13243	2339
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.RTautoChecker_sound	40	40.224992	33876	3219
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Completeness.boolean_witness_nonzero	40	40.040215	11819	1689
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_minus_sym	40	40.030612	6171	1626
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLUB.sig_lub	40	40.788764	23350	2463
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.compact_eqDom	40	40.070554	17710	4138
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_triang_inv2	40	40.281617	13659	1710
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.triangle_rectangle_lt	40	40.093304	31460	4703
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalN.Unsigned.to_of	40	40.055854	14307	3612
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_not_0_positive	40	40.070103	16682	2238
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.R1_neq_R0	40	40.183057	82003	2045
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_2PI3	40	40.044224	12847	2067
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gro	40	40.039066	6484	1602
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_morph	40	40.016136	4711	1051
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.cO	40	0.247795	350	20	26	synth with cache (only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.cI	40	0.011911	1	1	0	synth with cache (only 1: exact ring0).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_R1_Rle	40	40.057107	17059	4085
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.uniqueness_limite	40	40.050526	15929	3182
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_left1	40	40.048537	16609	2654
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_proper_l	40	40.246755	9024	1613
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.sum_incr	40	40.070948	23745	3655
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalZ.of_uint_iter_D0	40	40.062343	24472	1373
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.Un_cv_real_nat	40	40.176803	52642	2836
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_1	40	40.107082	19333	1737
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40	40.067050	21382	2774
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.of_lu_succ	40	40.071077	24246	3155
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	40	40.056993	17580	4014
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.Rarchimedean	40	40.321358	27792	2426
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcdn_pos	40	40.079942	29441	2778
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zmod_equal	40	40.064647	18012	2325
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40	40.081810	31134	1640
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_sneakl	40	40.224920	99174	3313
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_diff	40	40.196618	12540	2391
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.MVT_abs	40	40.024588	4934	3298
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_0_r_uniq	40	40.050871	14494	2038
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_int	40	40.031675	6002	2857
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.not_find_iff	40	40.044884	11577	1910
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zdiv2_two_power_nat	40	40.083342	28231	3149
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn_z	40	0.076180	11	7	1.0.0.0.0	synth with cache (only 1: intros; only 1: destruct z as [| p| p]; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P15	40	40.056372	18297	3079
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_add_valid_compat	40	40.061471	21972	2695
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40	40.287189	119277	3680
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map.map_avl	40	40.038859	11996	2700
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rpower_pow	40	40.028332	7562	2190
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_height	40	0.065623	5	5	0.0.0.0.0	synth with cache (only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.Zbounded_induction	40	40.092315	33962	3510
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_minus	40	40.053284	16931	2892
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_neg_0	40	40.055580	16714	3125
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.multiplicity_NoDup	40	40.057912	17255	3144
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalZ.of_hex_uint_iter_D0	40	40.046553	15939	1019
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.atan_bound	40	40.037652	12104	2568
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmax_l	40	40.022251	4956	2069
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.cv_cvabs	40	40.051308	16790	3756
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.reverse_sum	40	40.082514	28782	2647
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Heap.defs.merge	40	40.131412	39794	2825
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P21	40	40.040467	13015	2515
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P7	40	40.068088	27000	2227
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound_alt	40	40.065881	21745	2292
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_left	40	40.060227	14396	5276
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLUB.CR_sig_lub	40	40.092897	29709	5421
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.compact_P3	40	40.074655	23058	2810
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_gt	40	40.073574	8696	867
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.triangle_rectangle_le	40	40.080722	23245	6301
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalN.Unsigned.to_uint_inj	40	40.111091	42005	2893
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_pos_positive	40	40.056099	18316	2406
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rmult_plus_distr_l	40	40.107418	41259	3119
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_inv	40	1.396828	359	137	0.0.3.4	synth with cache (only 1: intros r b; only 1: unfold Rsqr; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.cos_2PI3	40	40.038220	9890	2032
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_correct	40	40.080936	26950	3678
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_eq	40	40.064506	21560	3318
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Peq_ok	40	40.060159	21313	1686
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.Rle_pow	40	40.043043	11511	3289
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_eq_0	40	0.344698	58	32	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_eq_1	40	0.052370	13	6	0.0.0.0.2	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derive_pt in H; only 1: rewrite H in H1; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_pos	40	40.076887	26605	3883
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower_pos_1_l	40	40.097764	37093	1515
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.In_In	40	0.014541	3	2	0.1	synth with cache (only 1: intros n m; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0.157592	18	5	4.1	synth with cache (only 1: compute; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRlt_asym	40	40.897359	13882	1203
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_proper_r	40	40.037082	6654	2406
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.sum_cv_maj	40	40.062572	19907	3592
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalZ.of_int_iter_D0	40	40.046147	11947	3847
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_2	40	40.156047	4060	1431
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_minus	40	40.759871	12496	1223
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_0_r	40	40.063377	23809	2723
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.of_to_lu	40	40.088487	33546	2963
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyBool.Z_eqb_ZSpec_ok	40	40.067117	24392	2169
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40	40.059760	21467	2085
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.RabsLUB	40	40.070476	20892	2424
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ_c	40	40.044589	9212	3486
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_assoc	40
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_1_l	40	0.396351	48	16	0.0.4.0.0	synth with cache (only 1: intro n; only 1: zify; only 1: Z.nzsimpl; only 1: apply Zmod_small; only 1: apply ZnZ.spec_to_Z).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_twice	40	40.042985	11910	1200
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_eqn	40	1.117135	293	91	0.10.0	synth with cache (only 1: intros; only 1: simpl; only 1: now rewrite H).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40	13.998079	9878	924	0.0.0.3.1.1.0.0.2.22.1	synth with cache (only 1: unfold Z.pow_pos; only 1: set (y := Z.pred (Z.pos p)); only 1: generalize 1; only 1: induction p; only 1: intros; only 1: reflexivity; only 1: simpl in *; only 1: intros; only 1: trivial; only 1: simpl; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.Rplus_le_pos	40	26.513855	9885	1578	0.18.0.8.5	synth with cache (only 1: intros R x y H; only 1: rewrite <- CRplus_0_r, CRplus_assoc; only 1: apply CRplus_le_compat_l; only 1: rewrite CRplus_0_l; only 1: exact H).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_aboveSig	40	40.217454	11105	1353
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_find	40	40.066053	21779	3401
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_eq_0_l	40	40.059316	12022	2042
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_inv	40	40.146457	4688	1336
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zeven_bit_value	40	40.079840	26815	4078
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P16	40	40.055955	18731	1971
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_valid_compat	40	40.103637	38114	4452
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eq_le_iff	40	0.463584	94	34	0.0.1.3.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros; only 1: now subst; only 1: destruct 1; only 1: Z.order').
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_0_r	40	13.628447	14437	1056	45	synth with cache (only 1: now destruct a).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.lt_le_iff	40	0.011864	2	2	0.0	synth with cache (only 1: intros a; only 1: apply Z.lt_le_pred).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_0_l	40	0.020636	2	1	1	synth with cache (only 1: now destruct a).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40	40.098369	33145	2939
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_0_l	40	0.034127	2	1	1	synth with cache (only 1: now destruct a).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	18.297916	3395	1322	16	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.le_0_iff	40	1.904851	1286	248	0.1.7.8	synth with cache (only 1: intros a b; only 1: split; only 1: apply Z.le_0_sub; only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_avl	40	40.033194	10197	2206
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_comm	40	11.828549	7262	822	4.12.0.4.13	synth with cache (only 1: intros A l; only 1: red; only 1: zify; only 1: f_equal; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rpower_lt	40	40.055254	16404	2302
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zodd_bit_value	40	4.973893	1953	434	0.0.0.3.0.0.0.0.0.1.0.0.1.2	synth with cache (only 1: destruct z; only 1: intros Hb; only 1: simpl; only 1: easy; only 1: destruct p; only 1: unfold bit_value; only 1: tauto || (intro H; elim H); only 1: unfold bit_value; only 1: tauto || (intro H; elim H); only 1: auto; only 1: destruct p; only 1: tauto || (intro H; elim H); only 1: tauto || (intro H; elim H); only 1: tauto || (intro H; elim H)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B_holds	40	40.137130	55730	3333
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.tan_plus	40	40.037397	10880	2286
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zwf.wf_proof.Zwf_well_founded	40	40.071595	12219	1184
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.143697	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_inj	40	40.035087	9004	3492
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalZ.of_hex_int_iter_D0	40	40.044424	11987	2729
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.NoDup_permut	40	40.062195	18979	3696
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.tan_atan	40	40.035909	11009	2604
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmax_r	40	40.024389	5288	2528
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.CV_Cauchy	40	40.076635	25241	4599
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.of_lu_eqn	40	40.076031	11451	841
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.permut_In_In	40	0.551745	62	16	3.0.2	synth with cache (only 1: intros l1 l2 e; only 1: do 2 rewrite multiplicity_In; only 1: now intros ->).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.le_neg	40	7.471288	5696	738	3.7.0.11.4.1.0	synth with cache (only 1: intro n; only 1: split; only 1: intros H; only 1: rewrite ?Z.opp_pos_neg; only 1: Z.order; only 1: intros; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_eq	40	2.119896	838	217	12.0	synth with cache (only 1: intros; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Heap.defs.insert	40	40.211100	89577	2333
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P22	40	40.046743	15142	2493
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.list_contents_app	40	40.053901	17666	3087
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_refl	40	0.053700	9	4	2.0.2	synth with cache (only 1: red; only 1: red; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_sym	40	0.042864	7	3	0.2.2	synth with cache (only 1: unfold permutation; only 1: intros; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.continuity_implies_RiemannInt	40	40.022079	5743	2067
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_triang	40	40.053323	11658	4626
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.Rabs_def1	40	40.037956	7492	1650
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.compact_P4	40	40.097836	36515	5047
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalN.Unsigned.to_uint_surj	40	40.070921	21309	3705
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalN.Unsigned.of_uint_norm	40	0.026789	1	1	0	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalN.Unsigned.of_inj	40	0.039629	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- !HexadecimalPos.Unsigned.to_of; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rlt_asym	40	40.066030	18566	1529
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_pos	40	40.063195	17697	1944
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalN.Unsigned.of_iff	40	0.142643	11	8	0.0.1.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- !to_of; only 1: now f_equal; only 1: intros E; only 1: rewrite <- HexadecimalPos.Unsigned.of_uint_norm, E; only 1: apply HexadecimalPos.Unsigned.of_uint_norm).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.canonical_Rsqr	40	40.039708	12510	1770
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow1	40	37.885341	12738	3348	3.0.3.2.1.12.2.3	synth with cache (only 1: intros [| n]; only 1: auto with real; only 1: pattern 1 at 1; only 1: induction n as [| n Hrecn]; only 1: auto with real; only 1: simpl; only 1: rewrite Rmult_1_l; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.tan_2PI3	40	40.054119	17757	2011
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_correct	40	40.062262	18972	3484
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_D_in	40	40.063887	21565	3593
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi0	40	40.033222	7155	675
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rle_abs	40	40.061107	20457	6305
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_assoc	40	40.034568	8733	2049
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRlt_proper	40	40.665781	10775	1212
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_1	40	40.091568	25534	1040
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_nonneg	40	40.062021	20394	2461
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.of_lu_revapp	40	40.023337	6575	897
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyBool.leZeroSpec_ok	40	40.095186	28600	2085
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	40	40.074613	26482	2691
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_c	40	40.053538	12126	3115
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.Rcomplete	40	40.057182	13534	2553
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_converges	40	40.117953	4215	960
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower_pos_pos	40	40.072113	23608	3212
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.selectOneInSum	40	40.101775	36392	2988
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_mapsto_equiv	40	40.041212	8444	4649
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_eq_R0	40	40.045246	12145	1764
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_rat	40	40.134980	6154	1810
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_above	40	40.090822	33962	2374
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P17	40	40.056920	17891	2771
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qred_abs	40	40.098516	33004	2312
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_mul_mon_null_compat	40	40.186819	75501	3938
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P18	40	0.097104	11	6	0.0.1.0.0	synth with cache (only 1: induction l as [| r r0 H]; only 1: auto; only 1: simpl; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqbP	40	40.082373	15002	1616
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_rem_same	40	40.064082	23265	3108
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	40.126613	51638	2274
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	1.078388	361	133	5.0.1.0.0.0	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: Dec.fsetdec; only 1: intro; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_assoc	40	40.075902	27055	2336
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map_option.map_option_avl	40	40.045263	14721	2404
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rpower_sqrt	40	40.023928	6590	2009
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zge_minus_two_power_nat_S	40	40.042886	14324	2443
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.bi_induction	40	40.325076	139313	2970
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_0_l	40	0.669422	264	45	1.0.9	synth with cache (only 1: intros a; only 1: zify; only 1: apply NZ_to_Z_mod).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_2a	40	40.056465	17110	2096
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Add_Equal	40	40.021053	4726	3327
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_less_alt	40	40.057712	15975	4370
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zwf.wf_proof_up.Zwf_up_well_founded	40	40.121335	9204	4805
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_refl	40	0.245729	92	10	0.13	synth with cache (only 1: red; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_sym	40	0.012062	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalZ.double_norm	40	40.064409	18034	4356
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.atan_opp	40	40.040854	13164	1927
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.maj_by_pos	40	40.039521	9936	3124
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRposPartAbsMax	40	40.031552	8503	1779
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.of_lu_revapp	40	40.036250	12642	867
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.permut_cons_In	40	40.090892	30641	3402
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eq_cnf	40	40.055989	16887	2457
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_trans	40	2.108111	1246	155	11.8.3	synth with cache (only 1: constructor; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_refl	40	0.027992	38	4	10	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_trans	40	0.072955	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_1	40	40.053939	2693	1504
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_antisym	40	0.049752	15	5	3.0.2	synth with cache (only 1: repeat red; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_equal	40	0.131019	10	3	2.0	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_empty	40	0.129129	64	8	12	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_remove_3	40	0.066974	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Heap.defs.list_to_heap	40	40.268292	119779	2532
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_diff	40	0.080996	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_3	40	0.101170	3	2	0.1	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_2	40	0.052209	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.in_subset	40	0.047403	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_trans	40	40.057972	18307	3885
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.double_inclusion	40	0.837534	116	44	0.1.2.0.6	synth with cache (only 1: intuition; only 1: generalize (F.equal_iff s1 s2); only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_1	40	0.071722	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.Nadd_simpl	40	3.403510	1392	125	1.0.0.41	synth with cache (only 1: destruct n; only 1: N.nzsimpl; only 1: now N.nzsimpl'; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_2	40	0.055731	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_equal	40	0.168971	12	5	2.0	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P8	40	40.046028	15288	1958
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_le	40	40.126754	14601	1503
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P23	40	40.037961	11998	2584
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.of_uint_acc_eqn	40	2.243561	624	197	16	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_mult	40	40.090224	6179	1091
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.compact_P5	40	40.074126	25554	5750
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rlt_trans	40	40.101123	33181	2619
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalN.Signed.of_to	40	40.081008	25217	2739
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qmult_power_positive	40	40.189803	7551	1336
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_eq	40	40.066700	19668	4835
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_Rabs	40	40.054011	15293	4886
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_less	40	11.126924	2813	604	0.1.0.0.0.1.0.1.2.3.5	synth with cache (only 1: intro; only 1: intro; only 1: intros Hx; only 1: pose proof (Rle_lt_trans _ _ _ Rle_0_1 Hx) as Hx1; only 1: apply Rsqr_incrst_0; only 1: rewrite Rsqr_sqrt; only 1: rewrite <- (Rmult_1_l x)  at 1; only 1: now apply Rmult_lt_compat_r; only 1: trivial; only 1: apply sqrt_pos; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.cos_5PI4	40	40.028996	8020	2384
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_r	40	21.878902	3725	613	0.15.0.0.0.0.0.1	synth with cache (only 1: intros; only 1: rewrite RinvImpl.Rinv_def; only 1: destruct (Req_appart_dec r R0); only 1: contradiction; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rquot2, Rrepr_1; only 1: rewrite CReal_mult_comm; only 1: apply CReal_inv_l).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_l_sym	40	0.068371	4	3	0.0.1	synth with cache (only 1: intros; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_r_sym	40	0.067749	4	3	0.0.1	synth with cache (only 1: intros; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_0_r	40	0.043548	3	2	0.1	synth with cache (only 1: intros; only 1: field).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_0_l	40	0.042455	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xfind_left	40	40.067899	22798	2857
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi1	40	40.066863	23549	927
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	40	40.048839	16478	3408
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_le	40	40.048242	16870	2621
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRle_refl	40	40.097339	15667	1568
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_1_l	40	40.024309	2495	429
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmax_sym	40	16.540661	3306	1431	0.1.2.0.1.10.0	synth with cache (only 1: intros; only 1: apply CRmult_morph; only 1: rewrite CRabs_minus_sym; only 1: unfold CRminus; only 1: rewrite (CRplus_comm x y); only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_2	40	40.080636	16131	2684
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_scale	40	40.050630	15097	2118
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.of_uint_acc_spec	40	40.029500	7048	1485
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.fibonacci_pos	40	40.085093	28482	2772
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry_c	40	40.044986	10561	2727
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.Rrepr_morphism	40	40.128227	52770	732
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_eqn	40	40.010137	3376	323
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	31.567763	13655	1016	14.0.0.18.0.17	synth with cache (only 1: intros a; only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: Dec.fsetdec; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower_le_monotone	40	40.064061	20743	2698
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_equiv	40	40.069121	21873	4150
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.splitSum	40	40.050387	15372	1643
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	40	40.066125	11215	2073
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_bst	40	0.467870	303	46	1.8.3	synth with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: compute; only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_in	40	0.201138	10	5	0.1.0	synth with cache (only 1: unfold create; only 1: intros m a b Ha Hb; only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_above_same	40	40.330441	22636	1813
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_add	40	25.884470	6764	462	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_mul_mon_valid_compat	40	40.082070	26662	4556
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_canon	40	40.138182	52790	1794
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P19	40	40.096662	34325	3493
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_equal	40	0.534878	18	5	0.1	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.ltbP	40	40.225108	92837	1190
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_rem_mult	40	40.054526	17093	4903
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Equal_remove	40	0.597130	31	10	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_remove	40	0.627412	20	5	0.3	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_add_distr_r	40	40.043130	13680	1461
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map2_opt.map2_opt_avl	40	40.065769	24809	2078
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_add	40	0.566125	20	7	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rpower_Ropp	40	40.038953	11195	1972
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.singleton_equal_add	40	0.221757	9	3	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zlt_two_power_nat_S	40	40.081491	28315	3096
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_succ_l	40	40.133430	52805	4251
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_2a	40	40.052762	15621	2240
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalZ.of_hex_int_double	40	40.095487	26229	3217
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.derivable_pt_atan	40	40.023833	6432	2221
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.CV_mult	40	40.043776	8022	3518
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.permut_nil	40	40.071445	21334	2547
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zsor	40	40.061128	18738	2696
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_2	40	40.027655	5560	1882
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Heap.defs.heap_to_list	40	40.196481	82947	2108
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_cons_eq	40	40.054650	16043	3486
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_cons	40	0.057649	4	4	0.0.0.0	synth with cache (only 1: unfold permutation; only 1: simpl; only 1: intros; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qabs_case	40	40.160572	64938	3289
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_triang_inv	40	40.061031	13862	4561
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P24	40	40.025394	6217	2580
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P9	40	40.047385	17057	2137
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.of_uint_acc_rev	40	40.045646	12740	1776
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.compact_carac	40	40.049449	12640	5765
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rplus_lt_compat_l	40	40.188170	33283	2271
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalN.Signed.to_of	40	40.115802	41201	2577
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qmult_power	40	40.098372	10551	2095
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_maj_Rabs	40	40.052919	13964	5339
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_more	40	40.053032	16223	2899
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_5PI4	40	40.034094	9542	2376
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_def2	40	40.103941	16140	1549
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.Rsqr_pow2	40	1.285580	366	106	10.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_ne	40	40.054548	12451	3114
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ii	40	40.057140	17711	3418
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_1_r	40	0.172311	15	14	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkPX_ok	40	40.018017	5558	663
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_eq_compat_l	40	0.027071	2	2	0.0	synth with cache (only 1: intros r r1 r2; only 1: apply f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_ext	40	40.051652	16782	2909
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_pos_eq	40	40.051863	14847	2912
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_eq_compat_r	40	1.550316	399	108	1.5.4	synth with cache (only 1: intros r1 r2 H H0; only 1: subst; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_Rabsolu	40	2.819118	922	292	0.0.0.1.0.0.3.5.1	synth with cache (only 1: intros; only 1: rewrite Rabs_right; only 1: auto with real; only 1: unfold Rabs; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRle_lt_trans	40	40.370271	19219	2084
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_isRingExt	40	40.107422	17028	2713
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmax_plus	40	40.019197	4130	1947
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.empty_mem	40	40.078683	29917	422
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_const	40	40.095617	35255	2245
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_0_r	40	24.726678	7684	1117	0.20.4.1.0.0	synth with cache (only 1: intros; only 1: zify; only 1: rewrite Zmod_small; only 1: now Z.nzsimpl; only 1: Z.nzsimpl; only 1: apply ZnZ.spec_to_Z).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.fibonacci_incr	40	40.074908	25426	2876
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ	40	40.051504	12579	3191
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.of_uint_alt	40	40.059855	14346	3098
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.Rabst_morphism	40	40.120890	50799	536
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.union_Union	40	40.046207	12103	1078
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_aux_equiv	40	40.054158	16613	3344
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower_lt_monotone	40	40.071442	27347	1268
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_bst	40	40.080835	25776	2638
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_maj	40	40.673710	44226	1865
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	40	40.068721	21926	2151
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_asym	40	40.801643	21300	1817
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_case	40	40.154102	60334	2456
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P20	40	40.075796	25719	3103
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_mul_valid_compat	40	40.065000	21502	3667
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P21	40	0.049746	4	3	0.1.0	synth with cache (only 1: intros a b [=]; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lebP	40	40.102862	39841	2015
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_opp_l	40	40.043903	14464	2813
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qred_identity	40	40.069078	24192	1853
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_r	40	40.073293	27357	1672
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.powerRZ_Rpower	40	40.028340	7344	2078
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map2.map2_avl	40	40.222352	28584	1949
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_singleton_empty	40	40.032536	2587	482
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.Qsor	40	40.055073	18929	584
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.COHERENT_VALUE.binary_to_Z_to_binary	40	40.072323	24939	2935
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_sym	40	0.543017	39	14	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_equal	40	0.096932	1	1	0	synth with cache (only 1: intuition fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_1	40	0.570547	21	13	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P22	40	5.444036	1723	329	0.1.5.3.10	synth with cache (only 1: intros l H; only 1: elim l; only 1: easy || now destruct 1; only 1: intros; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_2a_cos	40	40.043457	11370	2562
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_2	40	0.532403	21	5	0.2	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_assoc	40	1.186340	34	10	0.3	synth with cache (only 1: generalize (F.mem_iff s x); only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalZ.double_to_hex_int	40	40.097648	33671	3339
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_union_singleton	40	0.612414	52	16	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.atan_increasing	40	40.028416	8210	2564
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.permutation_Permutation	40	40.068237	21798	3804
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_add	40	0.873564	66	15	0.0.0.9	synth with cache (only 1: split; only 1: intros; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.ZSORaddon	40	40.051524	11531	2537
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_2a_sin	40	3.825001	767	228	0.0.4.0.0.1.0.0.0	synth with cache (only 1: intro x; only 1: rewrite double; only 1: unfold Rminus; only 1: rewrite cos_plus; only 1: generalize (sin2_cos2 x); only 1: intro H1; only 1: rewrite double; only 1: rewrite <- H1; only 1: ring_Rsqr).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.tech9	40	40.065180	18931	2956
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_1	40	40.106698	41861	1658
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Heap.defs.treesort	40	40.066500	25067	1261
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_app	40	40.046807	14638	3379
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qabs_wd_Proper	40	40.061595	21958	2153
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_triang_inv2	40	40.048170	10211	3139
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P10	40	40.215856	21085	2442
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qabs_pos	40	2.558960	916	182	4.0.0.3.1.4.0.1.1	synth with cache (only 1: intros [[| n| n] d] Ha; only 1: red; only 1: simpl; only 1: ring; only 1: simpl; only 1: unfold Qred, Qeq in *; only 1: simpl; only 1: reflexivity; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	0.026826	3	2	1.0	synth with cache (only 1: red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0.041731	1	1	0	synth with cache (only 1: Dec.fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qabs_neg	40	0.220080	35	21	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x H; only 1: apply Qabs_case; only 1: intros H0; only 1: setoid_replace x with 0; only 1: reflexivity; only 1: apply Qle_antisym; only 1: assumption; only 1: assumption; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.of_uint_alt	40	40.065836	19301	4324
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.continuity_compact	40	40.091523	27877	4307
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rmult_lt_compat_l	40	40.112488	43811	2777
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P25	40	40.026178	6010	2784
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalN.Signed.to_int_inj	40	40.084713	29594	2187
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qinv_power_positive	40	40.349063	11218	1498
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.inv_sqrt	40	40.080348	28302	2740
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_cos5PI4	40	40.046817	13715	1937
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_morph_Proper	40	40.033038	3436	1124
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40	0.291768	23	12	0.0.0.0.1.2	synth with cache (only 1: replace (3 * (PI / 2)) with (PI + PI / 2); only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra; only 1: pattern PI at 1; only 1: rewrite (double_var PI); only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.Z_compl.intP	40	40.079283	31751	598
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.Rgt_2PI_0	40	0.073159	3	3	0.0.0	synth with cache (only 1: apply Rmult_lt_0_compat; only 1: prove_sup0; only 1: apply PI_RGT_0).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.permut_length_1	40	9.981590	6386	876	0.22.4.2	synth with cache (only 1: unfold PermutSetoid.permutation, meq; only 1: intros H x; only 1: apply permut_length_1; only 1: eauto with typeclass_instances).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40	0.359724	118	19	2.9	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_io	40	40.062029	16467	2954
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40	40.052414	17366	3109
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddCl_ok	40	40.030969	7615	946
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_eq_reg_l	40	40.096657	14227	2202
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	5.574399	1715	337	18	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_pos_lt	40	40.070848	24804	3822
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRlt_le_trans	40	40.255835	20879	2110
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_isRing	40	40.303231	6092	2620
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmax_left	40	40.020904	4271	2240
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_equal_empty	40	40.143332	55960	2776
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qabs_nonneg	40	9.506219	3444	394	0.0.0.0.14.13	synth with cache (only 1: intros (c, Hc); only 1: simpl; only 1: unfold Qle in *; only 1: simpl in *; only 1: Z.nzsimpl; only 1: Z.order_pos').
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Zabs_Qabs	40	0.066491	13	5	1.2.1	synth with cache (only 1: intros p Hp; only 1: simpl; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_1	40	0.707240	120	25	10	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_2	40	0.040998	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.ZNpower	40	18.643255	4489	1755	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: unfold Z.pow_pos; only 1: rewrite <- (Z.mul_1_r (pow_pos _ _ _)); only 1: generalize 1; only 1: induction p; only 1: simpl; only 1: intros; only 1: rewrite ?IHp, ?Z.mul_assoc; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite ?IHp, ?Z.mul_assoc; only 1: trivial; only 1: simpl; only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.Rcv_cauchy_mod	40	40.053994	17361	2180
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40	40.043113	14153	1962
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	40	40.046092	13541	2656
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_1	40	3.094316	3203	169	50	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add	40	40.057288	14685	3191
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.of_to	40	40.101910	37611	2851
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_2	40	0.899384	75	52	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	40	7.117631	830	523	0.0.2.0.1.0.0.0.0.0	synth with cache (only 1: intros x y H z t H0; only 1: apply (CRealEq_trans _ (x * t)); only 1: apply CReal_mult_proper_l; only 1: apply H0; only 1: apply (CRealEq_trans _ (t * y)); only 1: apply (CRealEq_trans _ (t * x)); only 1: apply CReal_mult_comm; only 1: apply CReal_mult_proper_l; only 1: apply H; only 1: apply CReal_mult_comm).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40	40.052460	15122	1722
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_equiv	40	40.869590	16239	902
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_morph_T	40	2.377539	263	165	0.8	synth with cache (only 1: intros EQ; only 1: apply CReal_isRingExt).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower_gt_1	40	40.077503	26591	2798
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.In_dec	40	0.133644	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_in	40	40.042384	13276	1326
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_abs_lt	40	40.152905	51463	3331
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult	40	40.054421	14434	4125
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_irrefl	40	40.084478	29309	5704
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_pos	40	40.055556	18326	1465
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	10.195591	6277	536	1.1.0.30	synth with cache (only 1: intros EQ; only 1: zify; only 1: pose proof gt_wB_1; only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40	40.080882	26146	2895
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_add_linear_compat	40	40.049650	14301	3829
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_opp_r	40	40.052097	18390	1474
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_1	40	9.210959	1801	913	0.13.0	synth with cache (only 1: rewrite <- not_mem_iff; only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: auto with set relations).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qred_identity2	40	40.072315	19869	3045
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_2	40	0.908822	71	54	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_equal_add	40	0.123185	14	5	4.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40	40.066683	24453	1616
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.is_zero_spec	40	2.265139	1073	280	0.7.0.5	synth with cache (only 1: split; only 1: auto using eqb_correct, eqb_complete; only 1: <Coq.Strings.String.t_eqb>; only 1: now apply Pos.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rle_Rpower	40	40.041770	12214	2628
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.QSORaddon	40	40.029108	7566	773
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.COHERENT_VALUE.two_compl_to_Z_to_two_compl	40	40.050404	16418	2630
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_opp_l	40	3.293365	697	361	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.Qeval_expr_simpl	40	1.086735	846	91	1.6.18	synth with cache (only 1: intro H; only 1: intros p; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.QNpower	40	0.030741	3	3	0.0.0	synth with cache (only 1: intros r [| n]; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P24	40	40.053016	15020	2677
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_opp_r	40	1.701119	341	182	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_refl	40	7.413542	3078	402	2.9.9.1.0.6	synth with cache (only 1: intros; only 1: apply CRealLe_not_lt; only 1: intros; only 1: Z.nzsimpl'; only 1: ring_simplify; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.MapsTo_1	40	40.120269	45980	3650
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_refl	40	1.603055	246	34	0.0.0.0.12	synth with cache (only 1: constructor; only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs); only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs)).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.atan_0	40	40.489799	22513	1655
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_1	40	40.036742	4419	738
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.tan_2a	40	40.044413	12930	2519
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_neg	40	0.099481	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intro; only 1: unfold sin; only 1: replace (- x)² with x²; only 1: case (exist_sin x²); only 1: intros; only 1: ring; only 1: apply Rsqr_neg).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_neg	40	0.051771	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold cos; only 1: replace (- x)² with x²; only 1: reflexivity; only 1: apply Rsqr_neg).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.tech13	40	40.126098	49151	3399
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_2	40	40.016849	3173	1416
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_inside_eq	40	40.070571	16208	2749
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qabs_opp	40	27.812122	12951	2473	13.1.0.8	synth with cache (only 1: red; only 1: simpl; only 1: intros (n, d); only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CR_of_Q_abs	40	40.030884	6759	1411
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRle_abs	40	0.019770	3	3	0.0.0	synth with cache (only 1: intros; only 1: pose proof (CRabs_def R x (CRabs R x)) as [_ H1]; only 1: apply H1, CRle_refl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P11	40	40.029134	9190	1876
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.of_lu_rev	40	40.056491	15418	3564
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.prolongement_C0	40	40.077396	29229	3386
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_INR	40	40.051764	15755	2575
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P26	40	40.063284	21196	2902
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalN.Signed.to_int_pos_surj	40	40.075940	21250	4190
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40	22.107602	1336	812	1.2.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: apply (CReal_plus_eq_reg_l x); only 1: apply (CRealEq_trans _ 0); only 1: apply CReal_plus_opp_r; only 1: apply CRealEq_sym; only 1: apply (CRealEq_trans _ (y + - y)); only 1: apply CReal_plus_proper_r; only 1: apply H; only 1: apply CReal_plus_opp_r).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_cauchy	40	40.061545	20237	3368
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qinv_power	40	40.111556	18386	1425
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_morph_Proper	40	40.044729	2264	682
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.permut_length_2	40	40.068927	18585	2578
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_sym	40	11.313849	5026	684	3.0.3.0.7.8	synth with cache (only 1: intro n; only 1: repeat split; only 1: destruct H; only 1: trivial; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40	40.034666	9618	2590
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.Zpower_NR0	40	40.090006	31369	3425
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oo	40	40.030747	6488	3012
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_O	40	0.009461	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_derive	40	40.093124	34063	3202
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_2	40	10.479351	464	83	0.0.3.0.1.9	synth with cache (only 1: constructor; only 1: fsetdec; only 1: intros; only 1: rewrite union_spec; only 1: rewrite remove_spec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_1	40	0.134972	43	11	1.5.0	synth with cache (only 1: intros; only 1: simpl; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_1	40	0.045327	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_2	40	0.041052	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_3	40	0.071799	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_4	40	0.082508	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_5	40	0.074834	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_1	40	0.088593	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_2	40	0.093320	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	40.087661	27327	1573
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_eq_reg_r	40	40.070676	5225	1148
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.not_in_union	40	0.167718	8	2	0.6	synth with cache (only 1: intro Dec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_sym	40	0.220865	9	2	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_equal	40	0.092034	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_aux_ok	40	40.018229	2214	656
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	1.048719	284	97	0.0.0.0.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: rewrite elements_Empty in H; only 1: rewrite elements_iff in H0; only 1: rewrite InA_alt in H0; only 1: destruct H0; only 1: rewrite H in H0; only 1: destruct H0 as (_, H0); only 1: inversion H0).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_1	40	0.513592	10	3	0.3	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_minus_sym	40	40.038862	12476	1780
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_2	40	0.515344	11	3	1.2	synth with cache (only 1: intros; only 1: intuition fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRle_trans	40	40.428888	19153	2051
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_assoc	40	0.650682	29	6	1.3	synth with cache (only 1: generalize (F.mem_iff s x); only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmax_right	40	40.024338	5294	2727
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oi	40	5.952507	1329	513	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct o; only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: destruct (in_inv H0); only 1: congruence; only 1: apply (IHm2 _ _ _ H1); only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: apply (IHm2 _ _ _ H0)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zeval_expr_compat	40	40.083473	29060	2175
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_growing_transit	40	40.064437	22017	2526
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	40	40.051322	11872	1835
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	7.318074	4845	473	7.5.18.0.6	synth with cache (only 1: intro n; only 1: unfold Same_set, Included, mkEns, In; only 1: repeat split; only 1: Dec.fsetdec; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry	40	40.057720	12550	2945
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.to_lu_sixteenfold	40	40.060417	13668	943
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qopp_lt_compat	40	40.088070	30101	2893
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_1	40	7.191504	991	51	0.0.5.35	synth with cache (only 1: intro n; only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.add_Add	40	40.037861	6801	1139
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qfloor_Z	40	1.703663	931	129	5.0.13	synth with cache (only 1: simpl; only 1: intros; only 1: apply Z.div_1_r).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_2	40	0.761750	51	10	0.0.9	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incrbis_aux_equiv	40	40.178228	52482	1742
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zmult_power	40	40.055803	22838	1156
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Add_Equal	40	40.063777	18252	2700
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_refl	40	0.058521	27	8	5	synth with cache (only 1: let rec add_permut := let rec add_permut_rec := let rec add_push := Ring_theory.gen_add_push radd Rsth Reqe ARth in fun t => match t with | radd ?x ?y => add_permut_rec y || add_permut_rec x | _ => add_push t; apply (Ring_theory.Radd_ext Reqe); [  | reflexivity ] end in repeat reflexivity || match goal with | |- req ?t _ => add_permut_rec t end in add_permut).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_sym	40	0.059168	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_trans	40	0.082936	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_refl	40	0.033472	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_trans	40	0.057974	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_antisym	40	0.078230	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_equal	40	0.051890	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_empty	40	0.025090	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_remove_3	40	0.065015	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_diff	40	0.062898	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_3	40	0.101706	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_abs	40	40.361378	8938	374
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_2	40	0.058599	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_appart	40	40.111426	26350	2978
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.in_subset	40	0.052323	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_mapsto	40	40.022294	5560	807
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.double_inclusion	40	0.243877	20	10	0.0.0.0.4	synth with cache (only 1: split; only 1: split; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_1	40	0.077680	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_2	40	0.078296	5	3	0.0.2	synth with cache (only 1: intro n; only 1: intros g_eq; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_equal	40	0.096022	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_neg	40	40.052725	11248	5688
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_succ_l	40	40.080294	7201	1479
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qred_iff	40	40.078047	26601	2721
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Reduce.reduce_aux_eval_compat	40	40.044505	12588	2028
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_mem	40	40.027719	2617	1933
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.CyclicRing	40	40.024590	7605	138
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.diveucl_spec	40	40.598671	42254	659
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.ln_lt_2	40	40.079524	27910	2410
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_binary_to_Z	40	40.036618	11675	1982
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_opp_morph_T	40	26.732876	1474	961	1.2.0.0.1.0.0.0.0	synth with cache (only 1: intros x y H; only 1: apply (CReal_plus_eq_reg_l x); only 1: apply (CRealEq_trans _ 0); only 1: apply CReal_plus_opp_r; only 1: apply CRealEq_sym; only 1: apply (CRealEq_trans _ (y + - y)); only 1: apply CReal_plus_proper_r; only 1: apply H; only 1: apply CReal_plus_opp_r).
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.Qeval_expr_compat	40	40.146919	15887	1392
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_opp_opp	40	40.049992	16710	2640
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P25	40	40.073460	24595	3555
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_1	40	12.082439	733	176	1.2.0.10.1	synth with cache (only 1: intuition; only 1: split; only 1: rewrite inter_spec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_2	40	0.790672	29	11	0.5	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_1	40	0.062961	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_2	40	0.059204	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_1	40	0.043627	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_2	40	0.048251	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_3	40	0.065531	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.mem_1	40	40.053083	14099	1467
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_1	40	0.077640	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_2	40	0.098822	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset	40	0.047575	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.atan_eq0	40	40.047519	15055	1928
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset_equal	40	0.539776	17	4	0.4	synth with cache (only 1: intros Hab; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.tan_0	40	40.505782	28570	1372
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_diff_singleton	40	0.545918	39	5	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.growing_ineq	40	40.063552	20980	3951
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.empty_mem	40	40.227388	12479	1949
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_opp_opp	40	5.493935	1857	643	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.1	synth with cache (only 1: destruct a, b; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: trivial; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: simpl; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_nonneg	40	12.361438	7316	613	0.1.0.0.6.7.10.46	synth with cache (only 1: eapply Qle_trans; only 1: auto with *; only 1: apply Qle_minus_iff; only 1: simpl; only 1: rewrite <- Qle_minus_iff; only 1: apply Qabs_case; only 1: auto; only 1: apply (Qopp_le_compat x 0)).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_inside	40	40.060113	18921	2750
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qabs_triangle	40	40.049838	13705	2219
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_pos	40	40.034359	6860	2199
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qabs_Qmult	40	0.464779	147	47	2.0.2.0.1.0	synth with cache (only 1: intros [xn xd] [yn yd]; only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: repeat rewrite <- Z.abs_mul; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_mem	40	14.451426	1140	911	0.0.2.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (inter s s') x), (mem_iff s x), (mem_iff s' x), (inter_spec s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.of_lu_double_gen	40	40.071636	23026	2211
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_IPR2	40	40.064821	17401	1971
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalN.Signed.of_int_norm	40	40.081883	23988	4053
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P27	40	40.032463	7876	2950
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.continuity_ab_maj	40	40.050775	16610	3586
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40	40.036899	10046	2628
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P12	40	40.123843	12138	1834
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qdiv_power	40	40.085778	10681	1834
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_double	40	40.209970	14693	2190
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_dec	40	40.088393	31075	2692
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.permut_length	40	40.084713	24927	3213
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.rad_deg	40	40.087123	30919	2654
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_continuous_pt	40	40.046780	13351	3833
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_NOR	40	40.042194	11872	2068
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_equal_empty	40	9.739286	13128	581	6.0.13.18.0.80	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: destr_bool; only 1: auto with set; only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_1	40	0.325008	143	17	11.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_2	40	0.014214	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_1	40	0.025413	3	1	2	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_integral	40	40.038942	9604	1427
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_2	40	0.922518	69	51	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_1	40	0.378497	94	16	8.1	synth with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.eq_bool_alt	40	0.074119	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_mult	40	40.068382	22216	3676
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_2	40	1.002882	68	53	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_equal_add	40	0.011025	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_ok	40	40.026364	3342	358
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRlt_trans	40	40.480643	14868	1653
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmax_contract	40	40.036185	9592	2425
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ih	40	40.067703	21457	3651
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zeval_formula_compat'	40	40.089165	28510	3841
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.growing_ineq	40	40.257407	27262	2757
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40	40.091470	34892	1503
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40	40.052141	15990	2480
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred_c	40	40.041272	9094	3114
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	40	0.951645	1291	82	41	synth with cache (only 1: now destruct a).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Add_Add	40	40.042441	12112	2086
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qceiling_Z	40	40.112860	41261	3625
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.of_lu_0	40	40.035313	9315	2356
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn1	40	40.031242	6800	565
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40	40.059139	23043	1402
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_appart_zero	40	40.115353	21199	1626
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_unique	40	40.199971	59250	4031
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_add	40	40.065513	21491	1075
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_find	40	40.032910	6874	1840
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.tan_neg	40	30.302446	15551	1726	0.0.0.5.1.3.10.14	synth with cache (only 1: unfold tan; only 1: intros n; only 1: rewrite <- cos_sym; only 1: unfold Rdiv; only 1: rewrite sin_antisym; only 1: unfold sin; only 1: rewrite <- Ropp_mult_distr_l_reverse; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_equal	40	0.688813	45	16	0.0.5	synth with cache (only 1: destruct (equal s s''); only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qc_is_canon	40	40.130361	47170	3601
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Reduce.reduce_eval_compat	40	40.051016	11469	2056
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Equal_remove	40	0.658509	32	14	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40	40.052555	16261	2712
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_remove	40	0.666590	38	8	0.1	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.addc_spec	40	40.061898	22016	623
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.limit1_ext	40	40.025027	6994	2285
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_add	40	0.688595	28	12	0.6	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	10.765856	3202	572	10.3.1.0.0.1.0.0.0.0	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: intuition; only 1: constructor 1; only 1: auto; only 1: auto with sets; only 1: inversion 1; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_two_compl_to_Z	40	40.059439	18913	3044
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.singleton_equal_add	40	0.322390	8	3	0.4.1	synth with cache (only 1: intro H; only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.Qeval_formula_compat	40	40.074024	25942	2284
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	40	40.025086	2885	1221
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P26	40	40.045181	12111	3355
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.mem_2	40	40.136061	53719	4226
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.atan_1	40	40.036776	11552	1595
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_empty	40	40.019654	2186	580
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.CV_opp	40	40.094871	33443	4751
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_all	40	0.505390	18	6	0.0.6	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.empty_1	40	2.671324	1562	188	19.17	synth with cache (only 1: intros l; only 1: inversion 1).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_sgn	40	40.087726	23489	1400
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_add	40	0.654852	166	36	0.1.7.1	synth with cache (only 1: generalize (F.mem_iff s x); only 1: red; only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_opp	40	40.198226	80732	2426
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_remove	40	0.614119	60	17	0.0.9	synth with cache (only 1: intro Streicher_K; only 1: expAdd; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside_eq	40	40.042944	12278	3064
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qabs_Qinv	40	40.069921	24943	2023
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_mem	40	40.029051	3443	3021
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_3	40	0.048794	4	3	0.0.1	synth with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_IPR	40	40.071330	22566	2049
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_4	40	0.130151	23	8	0.2	synth with cache (only 1: rewrite <- not_mem_iff; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_refl	40	0.034625	9	2	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalN.Signed.of_inj_pos	40	40.083409	28848	1790
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.of_lu_double	40	40.052755	15732	1711
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.of_lu_succ_double	40	0.008932	1	1	0	synth with cache (only 1: apply of_lu_double_gen).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P28	40	40.045426	12777	2675
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.Rsqr_sol_eq_0_0	40	40.047639	15098	2184
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qinv_power_n	40	40.044935	13544	2238
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.continuity_ab_min	40	40.036282	9541	3722
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_sym	40	1.327665	389	91	3.1.0.2.1.0.0.5	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_lub	40	40.091255	11923	1584
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_appart_0	40
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.permutation_map	40	40.077092	25398	2870
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_continuous	40	40.066691	21755	4263
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.toRad_inj	40	40.033672	9685	2943
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_pos_sub	40	40.067394	20296	3107
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P13	40	40.018671	4295	2164
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_le_lt_trans	40	40.081277	27319	2039
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_mem	40	36.995897	2705	2043	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (union s s') x), (mem_iff s x), (mem_iff s' x), (union_iff s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_eq_0_compat	40	40.062511	16695	2808
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	0.037770	3	2	1.0	synth with cache (only 1: intros a b Hb; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_eq_0_compat_l	40	0.010929	1	1	0	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40	40.076081	26137	4303
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_neq_0_reg	40	1.085319	244	78	5.5	synth with cache (only 1: intros a m Hm; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_Rinv	40	40.044966	13468	2912
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Popp_ok	40	40.020045	1778	383
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRlt_trans_flip	40	40.475914	14978	1730
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CReq_refl	40	0.075919	15	8	0.0.0.0.0.0.1	synth with cache (only 1: repeat split; only 1: intro H; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H); only 1: intro H; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H)).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oh	40	40.044270	11483	3537
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmax_lub_lt	40	40.044965	6765	1012
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zeval_nformula_dec	40	40.095506	31956	2600
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_open_below	40	40.101933	35968	2747
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40	40.087262	28893	3909
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_c	40	40.050442	13191	2930
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcdn_opp	40	40.081418	29281	3052
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qfloor_le	40	40.055939	17568	1592
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.to_of_lu_sixteenfold	40	40.032929	2901	750
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn2	40	40.076665	3251	798
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	40	40.061591	21498	1274
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40	35.095005	40799	1919	14.5.56.1	synth with cache (only 1: intros; only 1: inversion H; only 1: rewrite H1 in *; only 1: now apply Fin.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_inv	40	40.095250	30904	3674
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_abs_eq	40	40.093606	31231	3766
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_in	40	40.048054	12601	2158
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.tan_minus	40	40.035635	9326	2100
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_push	40	0.040101	9	5	3.0.0	synth with cache (only 1: unfold decidable; only 1: intros A R1 Sym1 B R2 Sym2 C R3 f Hf; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_pull	40	0.147174	9	5	1.3	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.eq_refl_iff	40	0.031412	26	8	2.3.1	synth with cache (only 1: split; only 1: split; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qc_decomp	40	40.127027	47825	3335
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_push	40	0.187119	17	7	0.3.1.0	synth with cache (only 1: unfold decidable; only 1: intros ? ? ? Fl Fr; only 1: intros HF; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_pull	40	0.184339	9	5	1.3	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Reduce.reduce_aux_le_compat	40	40.036454	10348	2044
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.eq_refl_iff	40	0.172440	113	30	4.3.0.0.1	synth with cache (only 1: split; only 1: intros; only 1: auto; only 1: intros E; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CReq_sym	40	16.427106	4865	559	6.2.3.13	synth with cache (only 1: intros n H1 H2; only 1: red; only 1: inversion_clear 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.succ_spec	40	40.133882	18512	959
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.limit1_imp	40	40.026563	7364	2482
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rinv_Rdiv	40	0.101303	3	3	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40	40.128865	54270	1688
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_singleton_empty	40	40.041708	6634	2338
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_sym	40	0.170280	7	5	1.0.1.0.0	synth with cache (only 1: split; only 1: do 2 rewrite F.union_iff; only 1: fsetdec; only 1: do 2 rewrite F.union_iff; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_equal	40	0.105861	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.Qeval_nformula_dec	40	40.310947	43274	3375
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_minus_morph_T	40	40.022487	2883	1167
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_1	40	0.624279	24	7	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P29	40	40.035278	6904	3466
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_2	40	0.527846	28	12	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_1_r	40	2.604686	209	90	4.1.2	synth with cache (only 1: intro r; only 1: rewrite CReal_mult_comm; only 1: apply CReal_mult_1_l).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.atan_tan	40	40.029943	9286	2095
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.decreasing_ineq	40	40.034604	8973	3913
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_1	40	40.077588	27507	1978
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_sgn2	40	40.054852	21591	1208
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_triangle	40	40.066590	21369	2431
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Add	40	40.028083	3718	544
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_assoc	40	6.062461	1340	100	0.1.1.30	synth with cache (only 1: intro y; only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside	40	40.042003	11033	3740
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_union_singleton	40	0.649892	142	18	2.9	synth with cache (only 1: intros H; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qabs_Qminus	40	40.055041	17807	1243
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_IZR	40	40.036762	4400	850
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_abs_cv	40	18.781875	11947	844	25.0.1.24	synth with cache (only 1: intros H; only 1: intros; only 1: destruct (series_cv_abs u cau); only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.of_to	40	40.083375	28045	2781
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.succ_double_alt	40	0.038459	1	1	0	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P29	40	40.056388	16655	2314
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_plus_positive	40	40.061232	18952	3785
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.ValAdh_un_exists	40	40.079229	29612	4036
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_trans	40	40.101345	11044	1718
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.In_1	40	0.616671	615	69	2.12.9	synth with cache (only 1: intro; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_equal	40	0.074688	6	3	0.1.2	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_cardinal	40	0.039676	2	2	0.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_refl	40	0.020615	3	2	1.0	synth with cache (only 1: apply subset_1; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_mult	40	40.047637	12507	2194
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_antisym	40	0.095556	16	3	5	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_glb	40	40.091758	7503	901
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_id	40	40.080800	29632	3550
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_add	40	5.880504	631	127	3.0.6.5	synth with cache (only 1: split; only 1: intros H; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.deg_rad	40	40.042816	11907	2416
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P14	40	40.028784	6944	2844
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_add	40	40.049685	14922	2311
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_mem	40	40.026292	3954	2830
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_lt_le_trans	40	40.134004	20943	2707
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40	12.895683	1672	370	4.8.4	synth with cache (only 1: intros P1; only 1: intros a; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.MapsTo_fun	40	40.156719	60159	5065
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_integral_contrapositive	40	40.052833	13948	1897
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	40	0.044818	2	2	0.0	synth with cache (only 1: intros r1 r2 H; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_Ropp	40	40.075983	26975	3831
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddXPX	40	40.011830	2437	926
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_hi	40	40.080930	15872	3554
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Qsrt	40	40.037622	8459	1461
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.ZWeakChecker_sound	40	40.164696	33996	2989
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_plus_distr_r	40	4.433884	570	309	7.1	synth with cache (only 1: intros m n p; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_open_above	40	40.102073	36702	2878
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmax_assoc	40	40.031659	9509	1421
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.add_Add	40	40.061902	20361	2248
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry_c	40	40.042337	9244	2953
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred	40	0.078547	8	4	1.3.0.0	synth with cache (only 1: intros; only 1: unfold succ, to_Z, Z.succ; only 1: symmetry; only 1: apply Zplus_mod_idemp_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	40	40.057038	17316	3534
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qle_ceiling	40	40.043570	11287	2594
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.to_of_lu	40	40.057598	12147	2248
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice	40	40.037294	6992	1906
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower2_lt_lin	40	40.077262	27671	2175
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_rat_cv	40	40.316472	36779	2607
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ho	40	12.415064	3593	981	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: intros; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct o; only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: generalize H0; only 1: apply IHm1; only 1: destruct (in_inv H0); only 1: congruence; only 1: generalize H1; only 1: apply IHm2; only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: generalize H0; only 1: apply IHm1; only 1: generalize H0; only 1: apply IHm2).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_3PI2	40	40.048845	10502	2447
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.find_xfind_h	40	0.913861	216	87	4.1.0.1.0.0	synth with cache (only 1: induction i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_bst	40	40.332059	22731	2997
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_In	40	40.095058	35703	3137
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qred_involutive	40	40.107393	32449	3848
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Reduce.linear_reduce_aux	40	40.072869	25207	2686
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_In	40	40.110065	40013	2940
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.succc_spec	40	40.066445	17410	788
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CReq_trans	40	40.608288	17217	2656
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Dln	40	40.022969	5573	2467
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40	40.131652	49791	2364
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40	40.115812	39885	3201
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.radd_ext_Proper	40	20.081516	6283	327	33.15.1	synth with cache (only 1: intuition; only 1: generalize H; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_mem	40	24.433157	3038	1912	0.0.1.2.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (diff s s') x), (mem_iff s x), (mem_iff s' x), (diff_iff s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (diff s s')); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct (mem x (diff s s')); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: destruct (mem x (diff s s')); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_3	40	0.043421	6	3	0.0.3	synth with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: auto with fset).
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.QWeakChecker_sound	40	40.369870	26096	1955
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.atan_inv	40	40.022459	6275	2003
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.CV_minus	40	40.028655	6980	3655
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_ext_Proper	40	6.398064	2853	176	38.2	synth with cache (only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_2	40	40.104349	24658	2756
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_lt_pos	40	40.060193	18999	3984
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_Qcmult	40	40.053529	10107	1001
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add	40	40.014744	2870	1706
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_middle	40	40.041951	12251	2413
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qle_Qabs	40	40.090198	32717	3580
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.archimed	40	40.468442	48626	1460
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_opp	40	40.042699	12867	2014
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.double_succ	40	40.073681	22585	3072
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P30	40	40.054575	16953	1910
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.ValAdh_un_prop	40	40.088846	32528	3243
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_opp	40	40.121597	24280	2943
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_1	40	40.165945	67368	1184
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_trans	40	40.043696	13376	1474
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_ext_Proper	40	8.515289	7142	284	65	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_comp	40	40.057815	19016	3086
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_ext_Proper	40	0.030017	4	1	3	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_equal	40	0.125325	10	2	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40	40.027079	6118	1743
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_1	40	40.026803	2221	391
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_l	40	40.023598	2619	903
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P15	40	40.034963	10138	1811
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ	40	40.046946	12422	3288
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_ext_Proper	40	1.117170	549	40	27	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_lt	40	40.156840	30184	1607
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_le_trans	40	40.230129	25711	3210
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	40	40.046776	12067	1799
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_4	40	16.978711	10551	1152	2.23.7	synth with cache (only 1: intros Ha Eq; only 1: Ndec.eqb2eq; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_refl	40	0.009815	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_iff	40	40.103807	36910	3504
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_triang	40	40.048659	14941	3980
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok2	40	40.014681	3255	651
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_sym	40	3.277170	1152	267	7.0.1.0.1.0.1.0.0.2	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: apply equal_1; only 1: rewrite (equal_2 H); only 1: auto with set; only 1: intros; only 1: apply equal_1; only 1: rewrite (equal_2 H); only 1: Dec.fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_2	40	6.029711	325	85	1.1.1.1.6	synth with cache (only 1: constructor; only 1: fsetdec; only 1: intuition; only 1: clear H; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Qsft	40	40.036688	10106	1899
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_1	40	0.047980	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_2	40	0.044763	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_3	40	0.079128	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_4	40	0.082239	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_pol_sub	40	40.173160	36040	2941
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_5	40	0.081858	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_1	40	0.198278	4	2	0.2	synth with cache (only 1: intros n; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rsqr_0	40	40.183152	80429	860
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_2	40	0.102201	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.not_in_union	40	0.159273	15	3	3	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Qpower_theory	40	1.973565	1141	75	2.0.0.0.0.39	synth with cache (only 1: constructor; only 1: destruct n; only 1: red; only 1: simpl; only 1: trivial; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Examples.ex1	40	0.009284	1	1	0	synth with cache (only 1: exact Qmult_plus_distr_l).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_sym	40	0.221358	4	3	0.0.1	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Examples.ex2	40	0.019883	1	1	0	synth with cache (only 1: exact Qplus_comm).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_equal	40	0.102367	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Examples.ex3	40	0.146456	5	5	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Examples.ex4	40	0.010048	2	1	1	synth with cache (only 1: now split).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Examples.ex5	40	0.024564	1	1	0	synth with cache (only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.adherence_P4	40	11.438429	9176	1411	4.0.7.2.9.1	synth with cache (only 1: intros; only 1: intro H15; only 1: intros z0 H7; only 1: unfold intersection_domain; only 1: intro Hyp_F_NE; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Examples.ex6	40	0.027953	1	1	0	synth with cache (only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Examples.ex7	40	0.065169	4	4	0.0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Examples.ex8	40	0.034617	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_1	40	0.628677	24	7	0.6	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Examples.ex9	40	0.029902	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmax_min_mult_neg	40	40.044526	13329	1411
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Add_Add	40	40.066327	21457	2614
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_bound_down	40	40.740799	35989	3164
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub	40	40.060033	15268	3124
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_sym_app	40	18.204617	10339	1243	1.0.0.28	synth with cache (only 1: intros F l1 l2; only 1: repeat rewrite list_contents_app in *; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_2	40	0.792790	34	16	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	40	40.059646	16595	3499
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qle_floor_ceiling	40	40.077470	14744	1565
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower2_le_lin	40	40.080927	30246	1671
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice_plus_one_firstl	40	40.048539	10498	3010
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.MapsTo_iff	40	14.985268	9631	1294	1.1.1.1.0.0.25	synth with cache (only 1: intros x y z; only 1: intros; only 1: split; only 1: intros; only 1: apply (MapsTo_1 H H0); only 1: intros; only 1: apply (MapsTo_1 (E.eq_sym H) H0)).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_assoc	40	7.804977	979	226	0.1.0.3.1.1.4.2.6	synth with cache (only 1: intros m; only 1: split; only 1: intros H; only 1: apply inter_1 with s'; only 1: fsetdec; only 1: intro H; only 1: apply inter_2 with s; only 1: apply inter_1 with s'; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CR_Q_limit	40	41.030830	22904	705
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_2PI	40	40.039096	10100	2808
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mem_in_iff	40	1.007020	434	111	12.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_complete	40	40.054747	15925	3436
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_1	40	40.058899	17863	2703
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_eq	40	40.105898	38158	3688
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Q2Qc_eq_iff	40	40.066077	16576	2725
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Reduce.linear_reduce	40	40.069640	23529	3070
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_eq	40	40.190651	75432	5048
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.addcarry_spec	40	40.054849	18222	1460
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Ens_to_MSet	40	40.177830	72610	3050
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CReq_relT	40	40.485913	19321	1868
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.derivable_pt_lim_ln	40	40.022937	5529	2169
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Backport_Sets.compare	40	40.067846	25083	1458
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_WSets.In_compat	40	0.409990	61	21	6	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_1	40	6.814458	685	94	3.4.0.4.15	synth with cache (only 1: intros EQ; only 1: split; only 1: fsetdec; only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.QTautoChecker_sound	40	40.976754	35633	2194
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.derive_pt_atan	40	40.035894	10878	2223
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.cv_infty_cv_R0	40	40.069513	23070	3670
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.add_1	40	40.082107	27272	2691
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_lt_neg	40	40.053771	12297	2895
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_lt_pos_pos	40	0.308605	27	21	0.0.2.0	synth with cache (only 1: intros Ha Hb; only 1: apply Z.rem_bound_pos; only 1: Z.order; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_lt_pos_neg	40	0.109048	16	6	0.2.0	synth with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: lia).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_Qcminus	40	40.063152	8992	533
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.180220	24	10	0.1.0	synth with cache (only 1: intros; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.183472	21	12	0.3.0	synth with cache (only 1: intros; only 1: generalize (Zrem_lt_neg a b); only 1: lia).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Equal	40	40.015684	2105	1174
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qabs_triangle_reverse	40	40.053434	14975	4024
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.to_of	40	40.032401	7330	1880
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.add_2	40	5.407385	3553	573	0.7.7.3.2	synth with cache (only 1: intros l x e r; only 1: intros y' e'' eqky'; only 1: red; only 1: simpl; only 1: eauto using add_2, add_3).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_scale	40	40.224598	10472	1981
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.to_lu_succ	40	40.073636	23666	3679
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.nat_iter_S	40	0.053634	7	6	0.0.0.0.0.1	synth with cache (only 1: simpl; only 1: revert n; only 1: induction n; only 1: simpl; only 1: trivial; only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.nat_iter_0	40	0.009374	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P31	40	40.043999	14487	2743
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_minus_positive	40	40.048033	12526	2486
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRlt_morph	40	14.875406	3872	1296	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros R x y H x0 y0 H0; only 1: destruct H, H0; only 1: destruct (CRltLinear R); only 1: split; only 1: intro; only 1: destruct (s x y x0); only 1: assumption; only 1: contradiction; only 1: destruct (s y y0 x0); only 1: assumption; only 1: assumption; only 1: contradiction; only 1: intro; only 1: destruct (s y x y0); only 1: assumption; only 1: contradiction; only 1: destruct (s x x0 y0); only 1: assumption; only 1: assumption; only 1: contradiction).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_2	40	40.272556	119225	3169
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_opp	40	40.052721	17874	3101
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_3	40	40.099317	35558	3236
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.completeness	40	40.117727	48707	2456
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_lb_ge_0	40	40.025761	4051	2194
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_r	40	40.053414	3257	1347
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.Zpower_pos_powerRZ	40	40.063481	20182	3134
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P16	40	40.032258	9119	2214
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ceqb_spec	40	40.058119	19898	271
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_def1	40	40.064572	14772	1456
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_lt_trans	40	40.031319	6799	2705
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	40	40.030801	3662	568
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_triang_inv	40	40.060465	20679	3796
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.In_1	40	0.814731	698	123	2.6.5	synth with cache (only 1: intros x y z H1 H2; only 1: inversion H1; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_trans	40	40.062809	15674	1736
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.eq_refl	40	0.263964	151	19	9.1	synth with cache (only 1: intros n; only 1: now BinInt.Z.nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.eq_sym	40	0.059992	18	4	0.6	synth with cache (only 1: intros n m; only 1: now BinInt.Z.swap_greater).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_equal	40	0.039344	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_cardinal	40	0.036156	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_refl	40	0.023735	3	2	1.0	synth with cache (only 1: apply subset_1; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_antisym	40	0.259634	176	16	14	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_pol_add	40	40.071689	24069	2044
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rsqr_0_uniq	40	40.086684	25146	2993
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_eq_compat	40	0.181439	23	9	2.0	synth with cache (only 1: intros x y H; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_0	40	0.038102	9	2	2	synth with cache (only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.compact_P6	40	40.106641	32337	4399
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Examples.ex10	40	40.036035	10912	1929
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Qopp_plus	40	0.135897	9	9	1.0.0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRlt_max	40	40.068261	18521	3464
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Qopp_opp	40	0.058616	4	4	0.0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	40.060562	19915	2895
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry	40	40.048303	11552	3015
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_rev	40	40.054020	16794	3616
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_bound_up	40	40.380100	22790	2079
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	40	40.072330	23440	3261
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qlt_floor	40	40.047930	16625	1348
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower2_Psize	40	40.066938	22178	2893
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phibis_aux_equiv	40	40.060571	22868	786
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_2PI	40	40.038303	9723	2845
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CR_Q_limit_cv	40	40.166882	21805	2961
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_mem_in_iff	40	40.116772	45782	2539
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_eq_0_compat	40	10.915775	3350	341	0.22.9	synth with cache (only 1: intros m Hm; only 1: subst; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.neg_sin	40	0.419833	49	27	0.0.0.3.0	synth with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_2	40	40.036715	8808	1609
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_involutive	40	0.259982	17	5	1.1	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_complete	40	40.049668	13706	3339
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_1	40	40.054005	17938	2125
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qceq_alt	40	40.087818	27574	3056
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_alt	40	0.032880	3	3	0.0.0	synth with cache (only 1: split; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_1	40	40.038365	10935	1920
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.addcarryc_spec	40	40.042221	13211	1760
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcgt_alt	40	1.269514	590	126	1.2.1.11	synth with cache (only 1: unfold Pos.ge; only 1: destr_bool; only 1: symmetry; only 1: apply Z.gt_lt_iff).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcle_alt	40	0.048427	17	4	0.2	synth with cache (only 1: intros n m; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.D_in_imp	40	40.023232	6214	2371
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.mem_spec	40	40.190462	72119	3670
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_2	40	40.043740	2135	1533
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_1	40	0.981446	44	14	2.0.0.1	synth with cache (only 1: split; only 1: fsetdec; only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.eq_trans	40	23.019395	19791	2597	0.3.7.0.25	synth with cache (only 1: intros a b; only 1: unfold eq, Equal; only 1: split; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.mem_1	40	0.033566	8	2	6.0	synth with cache (only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.mem_2	40	0.009932	2	2	0.0	synth with cache (only 1: unfold In; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.mem_Leaf	40	0.017771	5	2	3.0	synth with cache (only 1: intros n; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.empty_1	40	0.009098	6	1	5	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.derivable_pt_lim_atan	40	40.030287	8627	2504
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.decreasing_prop	40	40.061086	21001	3069
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcle_Qcabs	40	40.075713	24120	4009
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Remainder_equiv	40	40.048982	16442	2862
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Padd_ok	40	40.020790	2671	749
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add_2	40	40.014539	3697	983
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40	0.043854	8	1	7	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.rplus_morph_Proper	40	0.009448	1	1	0	synth with cache (only 1: exact (SORplus_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.rtimes_morph_Proper	40	0.022805	2	1	1	synth with cache (only 1: exact (SORtimes_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcge_alt	40	11.577139	4806	805	1.0.11.11	synth with cache (only 1: intro; only 1: induction p; only 1: symmetry; only 1: apply Z.ge_le_iff).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.ropp_morph_Proper	40	0.027463	3	1	2	synth with cache (only 1: exact (SORopp_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.rle_morph_Proper	40	0.024927	3	1	2	synth with cache (only 1: exact (SORle_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.rlt_morph_Proper	40	0.027569	4	1	3	synth with cache (only 1: exact (SORlt_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qabs_Qle_condition	40	40.047144	14795	2210
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.rminus_morph_Proper	40	0.268017	24	13	0.0.0.0.4	synth with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_2	40	6.847782	789	313	0.0.5.0.5	synth with cache (only 1: red; only 1: split; only 1: fsetdec; only 1: do 2 rewrite F.inter_iff; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_1	40	0.071285	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_2	40	0.068515	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_1	40	0.048719	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_2	40	0.049909	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.to_uint_inj	40	40.141062	56155	3275
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_3	40	0.075114	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_1	40	0.100257	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.add_3	40	40.097557	26973	2944
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_2	40	0.109766	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset	40	0.058796	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmax_mult	40	26.359418	3281	1199	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros R p q r H; only 1: unfold CRmin, CRmax; only 1: setoid_replace (r * q - r * p) with (r * (q - p)); only 1: rewrite CRabs_mult; only 1: rewrite (CRabs_right r); only 1: rewrite <- CRmult_assoc; only 1: apply CRmult_morph; only 1: unfold CRminus; only 1: do 2 rewrite <- CRmult_plus_distr_l; only 1: reflexivity; only 1: reflexivity; only 1: exact H; only 1: unfold CRminus; only 1: rewrite CRmult_plus_distr_l, CRopp_mult_distr_r; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset_equal	40	0.268051	8	3	2.0.3	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_plus	40	40.150839	14166	1806
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.to_lhex_tenfold	40	40.039934	10516	1884
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_diff_singleton	40	0.675815	71	11	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P32	40	40.059007	21653	2493
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_plus	40	40.033688	9386	1991
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_1	40	40.147049	61038	2264
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRle_morph_Proper	40	40.325074	7380	1891
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_opp_fwd	40	40.028721	7441	3116
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_4	40	40.203998	92327	686
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_3	40	0.042619	3	2	1.0	synth with cache (only 1: intro; only 1: auto with set relations).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_equal	40	0.028131	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_l	40	40.030744	4790	766
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_lt	40	40.055683	14466	5010
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.Rle_cv_lim	40	40.028369	8941	2161
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_le	40	0.094347	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros x z; only 1: case z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEequiv_eq	40	40.021959	5617	341
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_def2	40	40.064025	18999	2844
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_trans	40	40.628322	23382	2701
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.D_in_ext	40	17.931979	3627	1085	0.6.0.0.3.0.2	synth with cache (only 1: unfold D_in; only 1: intros; only 1: generalize H, H0; only 1: clear H0; only 1: intros; only 1: elim H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	40	40.117549	13684	2324
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_triang_inv2	40	40.055224	16984	3727
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.In_eq_iff	40	40.119717	43704	5072
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.mem_iff	40	1.750202	1215	222	21	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_trans	40	40.083317	26463	2136
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_equal	40	0.045156	6	3	3.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set fset).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_pol_mul	40	40.067064	24865	1727
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_relT	40	6.743992	3106	615	0.0.0.0.0.0.0.0.0.0.0.9.0.0.0.0.0.0.1.3.24	synth with cache (only 1: constructor; only 1: easy; only 1: split; only 1: destruct H; only 1: intro abs; only 1: contradiction; only 1: destruct H; only 1: intro abs; only 1: contradiction; only 1: red; only 1: intros; only 1: destruct H, H0; only 1: split; only 1: intro abs; only 1: destruct (CRealLt_dec _ _ y abs); only 1: contradiction; only 1: contradiction; only 1: intro abs; only 1: destruct (CRealLt_dec _ _ y abs); only 1: contradiction; only 1: contradiction).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Unsigned.of_to	40	40.088866	30466	4756
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_empty	40	10.939198	547	304	1.0.7	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Unsigned.to_of	40	0.679648	277	73	0.1.10.1	synth with cache (only 1: unfold N.to_uint, Pos.to_uint; only 1: rewrite <- Unsigned.to_of; only 1: unfold N.to_uint, Pos.to_uint; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_all	40	0.342476	8	4	0.2.1.1	synth with cache (only 1: split; only 1: intuition; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.Bolzano_Weierstrass	40	40.092923	26483	3263
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_add	40	0.497942	31	15	1.6	synth with cache (only 1: simpl_relation; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul_c	40	40.058270	15532	2970
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40	40.243511	104823	2171
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_conv_inv	40	40.054548	16706	3332
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.not_mem_iff	40	5.743084	4762	475	0.24.4.14.1	synth with cache (only 1: <Coq.Strings.String.t_eqb>; only 1: Ndec.eqb2eq; only 1: intuition; only 1: Ndec.eqb2eq; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.equal_iff	40	0.152193	34	12	5	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qceiling_lt	40	40.041572	11810	1941
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_le	40	40.119636	43483	3496
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_remove	40	2.512822	509	104	0.0.3.2.11	synth with cache (only 1: constructor; only 1: fsetdec; only 1: generalize (F.mem_iff s x); only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower_mod	40	40.078143	29496	2791
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn1	40	40.123522	12589	2009
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qred_correct	40	40.054464	17296	2368
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CauchyMorph_rat	40	40.075541	24709	2084
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_PI_x	40	40.034917	8485	2615
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_dec	40	40.116366	41670	5344
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_3	40	40.051970	10394	1847
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_neq_0_compat	40	40.046874	12841	1514
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_2	40	40.042976	14516	1710
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.cardinal_1	40	40.080572	26373	2408
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_plus_distr	40	0.221694	24	7	1.1	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_2	40	40.034466	9760	1349
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.subc_spec	40	40.090323	29925	2114
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.find_mapsto_iff	40	2.356975	953	252	11.4	synth with cache (only 1: intros a b Hb; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_1	40	0.638798	71	21	7.1	synth with cache (only 1: intros q1 q2 r1 r2 Hr1 Hr2 EQ; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_mult_distr_l	40	3.171870	676	161	2.12	synth with cache (only 1: intros a n; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	40	0.042744	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.is_lub_u	40	14.104583	4844	1013	3.5.3.7.0	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intro; only 1: intro A; only 1: intros n m Hn Hm (q, Hq) (r, Hr); only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.req_refl	40	40.088048	19105	1533
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_opp_opp	40	0.465794	39	12	1.2	synth with cache (only 1: intros n m; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.equal_spec	40	40.191253	68538	4105
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.mem_node	40	40.077251	23066	4121
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Ratan_seq_decreasing	40	40.038625	10529	2504
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_1	40	9.685344	3612	727	0.16.5	synth with cache (only 1: intro H; only 1: intros n IH a; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.cv_speed_pow_fact	40	40.048381	14398	3883
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_mult_distr_r	40	6.973291	2758	567	6.12	synth with cache (only 1: intros a n; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.095799	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_0_r	40	0.053640	9	3	1.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_triangle_reverse	40	40.039430	9783	3008
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_0_l	40	0.040488	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_minus_distr	40	0.046064	3	2	0.1	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_minus_distr'	40	0.040010	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok	40	40.012770	1848	963
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_mod_unique_full	40	40.097371	38412	1976
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_revapp	40	40.023718	7424	554
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.elements_Empty	40	40.084530	31824	4554
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.Nadd_simpl	40	0.011348	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qc_eq_dec	40	40.076705	26092	2371
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Q_apart_0_1	40	0.062708	3	1	2	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qabs_diff_Qle_condition	40	40.094533	10159	1183
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.cleb_sound	40	40.117723	9893	475
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.to_uint_surj	40	40.058458	18678	2482
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.remove_1	40	40.060631	22935	2198
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmin_max_mult_neg	40	40.023696	5293	1792
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_minus	40	40.125914	11366	2348
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.of_lu_0	40	40.050514	14361	2463
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P33	40	40.065372	22308	1836
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_2	40	40.321639	15206	1218
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_plus'	40	40.064801	8960	1844
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_opp_rev	40	40.057313	19715	2991
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_0_l	40	40.315925	23221	2820
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_3	40	40.029761	6446	2620
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_equal	40	0.123794	11	4	0.3	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_r	40	40.033377	3092	1266
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ_absolu	40	40.047978	13390	2774
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEeval_ext	40	40.023063	2107	587
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P17	40	40.034109	10776	1971
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_l	40	0.129317	8	1	7	synth with cache (only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Dpower	40	40.025590	7223	2286
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_def1	40	40.062248	20702	5478
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	40	40.136785	12994	990
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_r	40	4.700724	326	55	16	synth with cache (only 1: let rec Esimpl := let rec rsimpl := gen_srewrite Rsth Reqe ARth in try rewrite_db Esimpl; rsimpl; simpl in Esimpl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_diag_eq	40	13.508196	3807	1181	1.10.0.3	synth with cache (only 1: intros; only 1: rewrite H; only 1: unfold Rminus; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_eq_0	40	0.243040	24	13	1	synth with cache (only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_3	40	40.203765	82774	1652
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_pol_norm	40	40.085195	29255	2269
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_lu_succ	40	0.124042	27	15	5.0.0	synth with cache (only 1: revert n; only 1: intros; only 1: now Nat.nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_morph	40	40.716332	9114	1361
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Unsigned.to_uint_inj	40	40.113510	47181	2835
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40	40.083182	25817	4604
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_app_inv1	40	40.042177	11652	3080
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul	40	40.057863	14053	3561
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.subset_iff	40	40.078964	24432	4611
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qfloor_resp_le	40	40.114789	20937	3149
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_abs_cont	40	40.067407	20615	2059
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Add	40	40.020391	5012	1006
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	40	40.061968	20700	2347
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn2	40	40.078338	13267	3296
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_eqn	40	21.032070	10244	2411	0.0.1.1.2.0.0.0.5.0.0.0.1.0.0.6	synth with cache (only 1: intro H; only 1: simpl; only 1: induction d; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: simpl; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: simpl; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.rev_revapp	40	40.142967	55716	641
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qred_complete	40	40.083635	27498	3545
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_period	40	40.050313	14840	2327
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	1.661977	1743	190	23	synth with cache (only 1: now BinInt.Z.swap_greater).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.SlowMorph_increasing_Qr	40	40.105127	36483	2753
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_find	40	40.034784	7521	2513
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.mem_find	40	40.090904	31678	3637
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.pred_spec	40	40.049829	17815	681
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_sym	40	2.327334	1248	248	13.5	synth with cache (only 1: intros a; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_find_in_iff	40	40.042457	12754	2479
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_2	40	40.047345	13738	1855
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_In_singleton	40	0.025897	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.domain_P1	40	40.082893	29240	3966
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.req_sym	40	40.061666	9410	1033
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.subset_spec	40	40.109342	41345	3141
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	5.200759	3081	422	0.26	synth with cache (only 1: intros m'; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.is_empty_spec	40	40.115846	40321	3965
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Ratan_seq_converging	40	40.036799	10554	1972
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_2	40	40.053752	17344	2570
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	0.011446	4	2	0.2	synth with cache (only 1: intro n; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_Qcle_condition	40	40.343046	20430	2181
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psub_ok	40	40.029442	1985	911
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_unique_full	40	40.067194	21716	3462
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.elements_empty	40	40.204085	94395	1053
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_unique_full	40	0.509228	150	36	0.0.0.0.7	synth with cache (only 1: intros; only 1: destruct (Zquot_mod_unique_full a b q r); only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcplus_assoc	40	40.416933	32704	3620
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_Subset_add_remove	40	5.705909	2758	410	2.0.22	synth with cache (only 1: intros x y H; only 1: rewrite add_spec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.cneqb_sound	40	40.119228	25156	1962
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.of_uint_norm	40	40.054738	15106	3772
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.remove_2	40	40.062246	21791	3113
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmorph_min	40	40.048697	14075	3737
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_nonneg	40	40.363126	14205	1994
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.to_of_lu_tenfold	40	40.080099	4704	1138
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_1	40	40.122763	54051	1124
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P34	40	40.042610	7913	1425
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_mirr_fwd	40	40.034600	9347	3263
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_mult_positive	40	40.160410	14319	2388
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_0_r	40	40.147063	25120	3378
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_remove	40	40.060582	6030	761
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_left	40	40.028203	4727	1630
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_R1	40	40.071726	21814	4089
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P18	40	40.027608	8077	1984
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.derivable_pt_lim_power	40	40.021567	5464	1948
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40	21.772688	16188	2042	1.0.0.28.2	synth with cache (only 1: intros ? ? ? [? ?] [? ?]; only 1: destruct z; only 1: red; only 1: unfold snd; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_def2	40	40.096661	31469	5545
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CRealArchimedean	40	40.176736	56539	2002
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_simpl	40	40.019907	3919	461
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_diag_uniq	40	40.069509	22053	2231
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_4	40	40.088324	26399	3746
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_disjunction	40	12.283955	11416	1088	9.12.15	synth with cache (only 1: intro n; only 1: intros Ha Eq x IN; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zunsat_sound	40	40.064854	18976	1903
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_3	40	0.035446	7	2	4.1	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_equal	40	0.023568	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40	40.054178	15618	4183
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealGt_morph	40	40.489874	6041	1100
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40	40.154122	60302	4151
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	0.025900	1	1	0	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Unsigned.of_inj	40	0.059168	14	4	4.1.0	synth with cache (only 1: intros; only 1: apply Unsigned.of_inj; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Unsigned.of_iff	40	0.070609	11	8	0.0.1.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- !to_of; only 1: now f_equal; only 1: intros E; only 1: rewrite <- DecimalPos.Unsigned.of_uint_norm, E; only 1: apply DecimalPos.Unsigned.of_uint_norm).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_then	40	40.097417	36168	2923
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_square_c	40	40.043821	9324	3471
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Ens_to_FSet	40	40.184733	74971	3324
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_app_inv2	40	0.166047	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: lia).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.empty_iff	40	40.268358	117944	3568
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qceiling_resp_le	40	40.072024	23908	2224
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.is_empty_iff	40	0.074264	9	3	1	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.singleton_iff	40	0.090007	96	13	11	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_dist_cont	40	40.052856	10801	1675
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add	40	40.046736	3683	721
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpow_mod_correct	40	40.067774	22295	1457
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_firstl	40	40.045458	9694	3261
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_rev	40	40.049689	15313	2224
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.rev_rev	40	40.143841	57726	836
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qred_eq_iff	40	40.069190	20347	4757
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_period	40	40.033391	7630	2182
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.SlowMorph_increasing_Ql	40	40.050918	13122	2964
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_in	40	40.061363	8361	842
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_alt	40	40.108580	39094	3947
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.predc_spec	40	40.045352	9128	821
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.in_find_iff	40	40.074401	25223	3900
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_add_In	40	33.743714	33959	2354	36.8.10	synth with cache (only 1: intros x y z; only 1: intuition auto; BinNat.N.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.req_trans	40	40.053619	4253	587
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.rplus_morph_Proper	40	0.010245	1	1	0	synth with cache (only 1: exact (SORplus_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.Heine	40	40.098737	36100	4187
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.rtimes_morph_Proper	40	0.010976	1	1	0	synth with cache (only 1: exact (SORtimes_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.ropp_morph_Proper	40	0.008990	1	1	0	synth with cache (only 1: exact (SORopp_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.rle_morph_Proper	40	0.010894	1	1	0	synth with cache (only 1: exact (SORle_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.rlt_morph_Proper	40	0.010660	1	1	0	synth with cache (only 1: exact (SORlt_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.rminus_morph_Proper	40	0.082765	5	5	0.0.0.0.0	synth with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.is_empty_spec	40	40.149474	55325	4249
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_Subset_add_remove	40	4.429720	4497	389	8.28	synth with cache (only 1: intros n m H1 H2; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	0.084666	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	0.125361	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.is_empty_1	40	40.101844	35249	2402
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.ps_atan_exists_01	40	40.025077	7398	1852
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	40	40.046522	12486	2480
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pmul_ok	40	40.026729	1713	862
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40	40.086889	32770	4519
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_quot_pos	40	40.080686	28663	2439
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcplus_0_l	40	40.059868	21146	808
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.cltb_sound	40	40.062222	16509	2334
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_trans	40	0.090584	17	13	1.1.0.0.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Nat.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: transitivity y; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_not_eq	40	0.028349	6	2	4.0	synth with cache (only 1: intros n m H; only 1: Nat.order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.of_inj	40	40.047274	14364	2502
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.remove_3	40	40.062812	16235	2129
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_eq	40	40.240197	15614	1734
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_2	40	40.142680	52305	3444
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.Nadd_alt	40	40.031069	8440	1983
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P35	40	40.033894	10573	2344
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_mirr_rev	40	40.029904	7360	2962
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_mult	40	40.048726	14634	2600
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_opp_l	40	40.268726	3468	620
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_add	40	40.023363	4354	797
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_opp_r	40	0.045342	3	3	0.0.0	synth with cache (only 1: intros; only 1: destruct (CRisRing R); only 1: apply Ropp_def).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.pow_powerRZ	40	40.049837	13595	3640
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_right	40	40.094610	4880	1843
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rpower_mult_distr	40	40.040608	11279	2381
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P19	40	40.032176	10440	2064
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_dec	40	40.096308	30233	4077
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.RmaxAbs	40	40.039821	12220	3559
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_conj	40	15.800400	1834	352	1.18.0	synth with cache (only 1: intros x y H a; only 1: intros n Hn; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.Rup_pos	40	40.132042	54754	1721
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_ext	40	40.016462	3736	368
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_diag_uniq_sym	40	40.046648	10475	2164
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_minus	40	0.037708	3	2	0.1	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_eq_contra	40	0.175628	10	4	3.1.0	synth with cache (only 1: intros; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_disj	40	40.045649	7013	799
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_3	40	40.031807	5887	2337
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_not_eq	40	0.273706	34	15	2.0.1	synth with cache (only 1: intros; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.xnnormalise_correct	40	40.658802	37991	3327
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_not_eq_right	40	0.044878	5	5	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: apply Rminus_diag_eq; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_minus_distr_l	40	0.059959	9	3	1.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_pol_Pc	40	0.021647	3	3	0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_minus_distr_r	40	0.049888	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0.926278	72	31	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	0.105468	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40	40.077830	25861	3071
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Signed.of_to	40	40.107870	38768	2801
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_appart_morph	40	40.936105	8750	1355
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div	40	40.059079	16821	3102
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_remove_hd_eq	40	40.037463	8071	2069
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qfloor_comp_Proper	40	40.075254	24684	2906
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_iff	40	40.103398	39104	1995
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_shift	40	40.121474	32429	3126
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qceiling_comp_Proper	40	1.575500	491	180	1.2.1.0.0.1.0	synth with cache (only 1: intros x y H; only 1: apply Z.le_antisymm; only 1: unfold Qceiling; only 1: rewrite <- Z.opp_le_mono; only 1: auto with *; only 1: symmetry in H; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Equal	40	40.062612	2695	623
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower_divide	40	40.026912	9007	471
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_plus_one_firstl	40	40.033460	8049	3071
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_opp_r	40	40.083346	31984	2701
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0.008289	1	1	0	synth with cache (only 1: apply Z.divide_opp_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40	40.088743	32454	2041
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.revapp_rev_nil	40	40.144387	58893	726
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qred_comp_Proper	40	40.055291	11383	2142
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_shift	40	40.041561	10006	2942
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_mapsto	40	40.045478	5153	771
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.SlowMorph_increasing	40	40.041800	10805	2191
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_Node	40	40.088941	30425	3237
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.oppc_spec	40	40.047996	11753	930
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40	0.021352	2	1	1	synth with cache (only 1: apply sub_spec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.equal_iff	40	40.049700	16192	2105
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.ring_ops_wd	40	40.140160	25266	1363
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.add_spec	40	40.150647	39276	6254
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.is_empty_2	40	40.157886	60724	3275
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.subset_Leaf_s	40	0.091579	78	17	0.8	synth with cache (only 1: intro a; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Ratan_seq_opp	40	40.046536	14147	2158
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_null	40	40.060686	15511	5533
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psquare_ok	40	40.018030	1803	938
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40	40.066791	23656	4182
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_quot_lt	40	40.065131	24061	2166
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcplus_0_r	40	40.065014	22568	1202
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.OpMult_sound	40	40.062513	14044	1374
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkX_ok	40	1.869441	256	51	10.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: Esimpl).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40	40.106557	39787	1196
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Z_as_OT.lt_trans	40	0.031914	2	2	0.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Z.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Z_as_OT.lt_not_eq	40	0.011550	1	1	0	synth with cache (only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.of_iff	40	40.034654	7884	3681
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.find_1	40	40.112176	43281	2821
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_remainder_maj	40	40.077192	14136	2584
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.to_of_lu	40	40.054383	15019	3150
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_1	40	40.297953	132230	2069
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_plus	40	40.057852	17492	3699
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P36	40	40.033440	8174	2097
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Zpower_Qpower	40	40.047949	14896	2547
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_cardinal	40	40.095762	35971	2155
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_1	40	0.027180	1	1	0	synth with cache (only 1: auto with set relations).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_ind	40	40.157472	58647	4092
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRopp_0	40	40.616199	1947	301
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_left	40	40.054186	4251	1498
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qsqr_nonneg	40	2.098042	562	158	2.0.0.0.1.5.3	synth with cache (only 1: simpl; only 1: intro n; only 1: induction n; only 1: unfold Qle in *; only 1: simpl in *; only 1: rewrite Z.mul_1_r in *; only 1: apply Z.square_nonneg).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rlt_Rpower_l	40	40.034833	10659	2221
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.FTC_P1	40	40.047890	13243	1774
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40	40.092956	35797	3349
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_Zabs	40	40.062242	21496	4298
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	40.038327	12637	1529
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CRealLtDisjunctEpsilon	40	40.275222	29828	2330
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_reg_l	40	40.022243	5633	462
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_equal	40	40.042516	6703	3354
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_1	40	40.075211	25539	1710
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.xnormalise_correct	40	40.253594	16412	2271
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalString.uint_of_char_spec	40	40.034782	8730	494
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	40.072187	24319	2065
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40	40.096242	35251	3625
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Signed.to_of	40	40.090102	32328	3709
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div_gt	40	40.042994	9379	3457
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLtProp_morph_Proper	40	40.228529	14066	2472
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_remove_hd	40	40.033647	6825	2389
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_neq_iff	40	39.534644	37345	6211	7.1.12.5.2.0.12	synth with cache (only 1: intro EQ; only 1: split; only 1: destruct (eq_dec x y) as [E| E]; only 1: intuition; only 1: intro; only 1: exact (add_3 E H); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_shift'	40	40.057625	17523	4205
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Zdiv_Qdiv	40	40.067586	20993	2833
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	40	40.085208	31004	2462
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add_2	40	40.039073	2010	537
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_pos	40	40.074032	26934	2944
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_opp_l	40	40.067186	25187	2434
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Peqb_complete	40	0.009680	1	1	0	synth with cache (only 1: apply Pos.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	40	0.007323	1	1	0	synth with cache (only 1: apply Z.divide_opp_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_rev	40	40.072402	21841	3172
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Peqb_Pcompare	40	0.165518	12	3	0.4	synth with cache (only 1: rewrite ?Pos.compare_eq_iff; only 1: now apply Pos.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Pcompare_Peqb	40	0.034874	1	1	0	synth with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.app_nil_r	40	40.105709	41003	378
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qplus'_correct	40	40.070854	15873	3971
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_shift	40	40.070728	7322	2310
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_sin	40	0.454279	74	30	0.0.0.5.0	synth with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.PI2_RGT_0	40	0.071068	6	6	0.0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra; only 1: apply Rinv_0_lt_compat, Rlt_0_2).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_abs	40	40.056588	13523	5008
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_bst	40	40.113348	39671	3027
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_1	40	40.069120	21807	1720
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.oppcarry_spec	40	40.130765	10372	336
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_mapsto_iff	40	40.118326	47394	3435
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.Zring_morph	40	40.054912	16329	3229
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.remove_spec	40	40.106226	37661	4151
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.subset_spec	40	40.070677	22655	3422
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.sum_Ratan_seq_opp	40	40.040147	12959	2170
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_in_iff	40	8.700181	11982	742	0.42.2	synth with cache (only 1: intros; only 1: firstorder; only 1: apply (empty_1 H)).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.is_empty_iff	40	0.051820	4	2	0.2	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40	40.054661	20628	1861
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_quot_monotone	40	40.070868	25295	3408
coq-tactician-stdlib.8.12.dev	Coq.NArith.NArith.TestOrder.test	40	0.010842	1	1	0	synth with cache (only 1: N.order).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcplus_comm	40	40.061491	16352	1467
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.OpAdd_sound	40	40.032283	5469	1465
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_pos_ok	40	40.010070	2041	858
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Z_as_OT.compare	40	40.063876	21408	2218
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Nplength_infty	40	0.269425	69	21	1.0.1.2	synth with cache (only 1: destruct a; only 1: simpl; only 1: now try N.order'; only 1: now try N.order').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Signed.of_to	40	40.084333	33060	2067
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.find_2	40	40.118162	45391	3804
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_2	40	40.280484	30190	2018
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_abs_remainder	40	40.120394	14801	2081
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40	40.045443	13313	3520
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P37	40	40.058003	13988	2250
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_2	40	40.068849	3238	2406
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_inv	40	40.079008	28002	1601
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_right	40	40.029021	4080	1549
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_lt_compat_r	40	40.310598	9599	1304
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_decomp	40	40.052481	9159	1667
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rle_Rpower_l	40	40.041437	11931	1837
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P20	40	40.043686	15987	1682
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.abs_IZR	40	40.054462	16938	4907
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_set_ops_1	40	40.101651	38324	2883
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.field_is_integral_domain	40	40.023285	5857	351
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CRealPosShift_correct	40	40.073198	19252	1478
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_remove	40	40.032738	8992	1282
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_neq_0_compat	40	40.050613	14909	1522
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_involutive	40	0.055931	4	3	0.0.1	synth with cache (only 1: intros; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.cnf_of_list_correct	40	40.503148	16323	2503
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_lu_eqn	40	40.049163	5039	264
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.eq_chain_test	40	40.052707	11933	2435
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Signed.to_int_inj	40	40.112569	44175	2568
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo	40	40.040383	8275	3533
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_else	40	40.096956	36043	2729
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_morph_Proper	40	40.243766	6693	1319
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_iff	40	40.155538	59589	3197
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalString.NilEmpty.usu	40	40.184014	82289	482
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.rel_prime_Zpower	40	40.067505	21925	3178
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_neq_iff	40	2.092904	1297	286	0.0.12.4	synth with cache (only 1: intro H; only 1: intuition; only 1: apply remove_3 with x; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.elements_Empty	40	40.100389	33455	3413
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_bounded	40	40.050073	15490	1581
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40	40.068470	25158	2449
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	40	0.007638	1	1	0	synth with cache (only 1: apply Z.divide_abs_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_double_gen	40	40.116446	44272	1574
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Neqb_Ncompare	40	40.172071	69012	2689
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_too_complex	40	6.580422	2876	471	0.6.7.4	synth with cache (only 1: intros s s' H; only 1: intros a b; only 1: rewrite singleton_spec; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Ncompare_Neqb	40	0.036326	1	1	0	synth with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.app_int_nil_r	40	40.123985	49783	967
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Neqb_complete	40	0.034017	2	1	1	synth with cache (only 1: now rewrite N.eqb_eq, <- N.compare_eq_iff).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_1	40	2.649056	1577	138	0.30	synth with cache (only 1: intro n; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.union_iff	40	4.553929	2503	459	4.13.2.7.0	synth with cache (only 1: split; only 1: intros; only 1: intuition; only 1: intro; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qmult'_correct	40	40.129440	9190	1815
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qminus'_correct	40	0.011796	3	2	1.0	synth with cache (only 1: intros; only 1: apply Qred_correct).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	0.343911	19	6	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.SIN_bound	40	40.065708	19239	3311
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_baydemir	40	0.089132	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_cv	40	40.201461	37818	3008
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.to_of	40	40.063176	16229	5214
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_gt_tree	40	40.039453	7597	1101
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40	40.048385	12954	2924
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_2	40	40.169033	64729	3516
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.MapsTo_1	40	1.543489	845	135	1.15.4	synth with cache (only 1: intros; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_1	40	0.048857	9	3	6	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_2	40	0.025701	2	2	0.0	synth with cache (only 1: unfold MapsTo; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_pos	40	40.090040	21133	1774
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.uint_of_char_spec	40	40.038502	9848	629
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.singleton_spec	40	40.065130	13793	7602
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealGe_morph_Proper	40	14.292899	1451	452	0.0.2.1.1.0.1.1.0.0	synth with cache (only 1: intros x y H x0 y0 H0; only 1: split; only 1: intros H1 H2; only 1: rewrite <- H0 in H2; only 1: rewrite <- H in H2; only 1: contradiction; only 1: intros H1 H2; only 1: rewrite H0 in H2; only 1: rewrite H in H2; only 1: contradiction).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.subset_1	40	40.117795	44700	2839
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_proper_l	40	2.415410	1964	423	0.13.0	synth with cache (only 1: intros; only 1: rewrite <- H; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.ps_atan_exists_1	40	40.022878	6755	2124
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.elements_spec1	40	4.512752	5153	785	6.1.3.17.1.1	synth with cache (only 1: split; only 1: intros H'; only 1: red; only 1: intuition; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_mapsto_iff	40	40.045733	15331	2234
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_proper_r	40	2.241743	1392	285	0.15.0	synth with cache (only 1: intros; only 1: rewrite <- H; only 1: apply H0).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_mult_quot_le	40	40.062288	22832	2883
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_spec_right	40	40.236432	109242	724
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_refl	40	22.738161	22487	1518	24.0.1.0.20.2	synth with cache (only 1: intros; only 1: intuition; only 1: destruct eqA_dec as [_| NEQ]; only 1: auto; only 1: contradict NEQ; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcopp_involutive	40	40.106024	36154	4007
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcplus_opp_r	40	0.155479	7	5	0.0.2.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl in *; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.pexpr_times_nformula_correct	40	40.120242	22662	1029
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Positive_as_OT.lt_not_eq	40	40.097823	34476	4165
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Nplength_zeros	40	40.082637	29288	3813
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_N_ok	40	40.016040	5205	888
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Signed.to_of	40	40.092795	35022	2641
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.fold_1	40	40.145172	58817	3187
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_assoc	40	2.108200	700	156	5.1.0.3.0.1	synth with cache (only 1: intros; only 1: qc; only 1: unfold Qeq, Qmult, Qplus; only 1: simpl in *; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_proper_l	40	6.023095	5729	948	1.21.0	synth with cache (only 1: intros; only 1: rewrite <- H; only 1: apply H0).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_0_l	40	0.801827	478	61	6.1.7	synth with cache (only 1: induction n; only 1: qc; only 1: now Z.nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_1	40	40.161925	64611	3510
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_2	40	0.022945	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40	40.033613	8317	3546
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_0_r	40	0.716146	213	45	1.0.6.0.0	synth with cache (only 1: intros; only 1: qc; only 1: unfold Qeq; only 1: simpl; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_triangle	40	40.069864	22019	4510
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P38	40	40.038580	12681	2314
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_3	40	40.151532	25058	3270
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_neg	40	40.059080	17686	2531
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_sym	40	0.023197	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_equal	40	0.046132	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_lt_r	40	40.042668	5172	1759
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_1	40	0.025222	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_lt_reg_r	40	40.210430	26429	1465
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_2	40	0.013975	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_assoc	40	0.012868	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_union_singleton	40	0.011954	1	1	0	synth with cache (only 1: auto with set relations).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_add	40	0.018829	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_1	40	0.026753	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_2	40	0.019850	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_3	40	0.189846	2	2	0.0	synth with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_sym	40	0.029307	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_equal	40	0.028863	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.arcsinh_sinh	40	40.274280	6583	1121
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_1	40	0.030593	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_2	40	0.033481	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_assoc	40	0.026438	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P21	40	40.041173	12194	2275
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_1	40	0.050507	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_2	40	0.022481	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_1	40	0.034174	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Ropp_Rmax	40	40.051701	17584	3561
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.eq_chain_test	40	40.051210	14860	1538
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_proper_r	40	6.874049	5635	1171	0.22.0	synth with cache (only 1: intros; only 1: rewrite <- H; only 1: apply H0).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	0.728414	525	73	1.4.12	synth with cache (only 1: intros a b H; only 1: unfold Subset; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_1	40	0.115325	11	3	0.3	synth with cache (only 1: intros def_n0; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_2	40	0.767689	237	50	7.2	synth with cache (only 1: intros s s' H s'' s''' H0 a; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_neq_0	40	40.019208	5616	495
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_pos_cauchy	40	40.059767	19304	2731
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_baydemir	40	0.647976	250	65	4.7	synth with cache (only 1: intros a b q Ha Hb H; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_add	40	40.033649	9552	1371
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_mult_distr	40	40.031070	6263	1315
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_inv_permute	40	0.055621	3	3	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.normalise_correct	40	40.395444	22885	3023
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_lu_succ	40	40.087393	28340	6560
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.uint_dec	40	40.133161	53696	1886
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Signed.to_int_pos_surj	40	40.179410	82763	615
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo_gt	40	40.048337	11483	3450
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalString.NilEmpty.sus	40	40.101855	35297	5454
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Ropp_Rmin	40	8.893854	1368	453	1.1.0.1.0.1.0.3.0.0.0	synth with cache (only 1: intros x y; only 1: apply Rmax_case_strong; only 1: intro H1; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto with real; only 1: intros H; only 1: apply Rmin_case_strong; only 1: intro H1; only 1: auto with real; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.prime_power_prime	40	40.082643	28051	3633
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40	40.181533	74377	2490
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_nonneg	40	40.124876	24776	1786
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_r_r	40	9.054696	1285	91	27.0.0	synth with cache (only 1: intros; only 1: rewrite rdiv_def; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zmult_one	40	40.031202	9989	1362
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.revapp_revapp_1	40	40.099434	32757	3722
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40	40.105699	39193	1928
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nxor_eq_true	40	40.201397	89920	3170
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_succ_double	40	0.009692	1	1	0	synth with cache (only 1: apply of_lu_double_gen).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.inter_iff	40	40.150487	51639	3336
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qplus'_comp_Proper	40	40.062454	15221	3400
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_r_simpl_r	40	10.939969	3604	330	1.5.11.15	synth with cache (only 1: intro; only 1: intuition eauto  4 with real; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.COS_bound	40	40.049095	13989	3090
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalDescription.excluded_middle_informative	40	40.068790	21394	4950
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.to_uint_nonzero	40	40.085382	28484	3532
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_cauchy_reverse	40	40.390980	46192	3552
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_find	40	40.048699	6015	1124
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40	40.063889	20850	1562
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_r_simpl_l	40	1.958219	239	56	0.0.0.2.4.0.0	synth with cache (only 1: intros; only 1: transitivity (1 * r2); only 1: apply Rmult_eq_reg_l with r1; only 1: field; only 1: auto with real; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.empty_1	40	40.088939	33656	2207
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_succ	40	40.078745	23697	2124
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilEmpty.usu	40	40.143274	58975	610
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.subset_2	40	40.107272	35842	4910
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.in_int	40	40.026278	7226	2270
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.for_all_spec	40	40.080608	28110	2938
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_in_iff	40	40.067277	22701	3155
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Nplength_one	40	35.502993	28039	4166	0.4.0.0.0.0.0.0.7.0.2.4.0.0.0.2.1.0	synth with cache (only 1: destruct a; only 1: simpl; only 1: intros m H; only 1: now destruct m; only 1: simpl; only 1: intros; only 1: injection H as [=<-]; only 1: destruct p; only 1: split; only 1: induction p; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_mapsto_iff	40	0.398010	90	38	0.2.0.0.0.2.0	synth with cache (only 1: split; only 1: intros; only 1: apply add_3 with x e; only 1: auto; only 1: auto; only 1: apply add_2; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_mult_quot_ge	40	40.039380	12278	2518
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec	40	40.093206	35582	3644
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA	40	40.081817	26329	2308
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.nformula_times_nformula_correct	40	40.067386	22502	1763
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Positive_as_OT.compare	40	40.144570	55400	3483
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40	40.023821	8406	486
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.elements_1	40	40.056373	14780	1164
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Signed.to_int_inj	40	40.114448	46494	3082
coq-tactician-stdlib.8.12.dev	Coq.Logic.SetoidChoice.setoid_choice	40	40.062873	7373	1133
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_3	40	40.122917	45956	3602
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_const	40	40.074571	27514	4121
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_1_l	40	40.063162	20420	1448
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_shift	40	40.049240	10843	1420
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_mult_distr	40	40.067405	15488	2224
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P39	40	40.049942	17418	2043
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_le_compat_l	40	40.242059	19360	2185
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.posPartAbsMax	40	40.033268	5329	992
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.sinh_arcsinh	40	40.033714	9318	2469
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_2	40	40.026429	3618	1955
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_1	40	0.025424	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_2	40	0.026287	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_3	40	0.094378	4	3	1.0.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset	40	0.020447	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset_equal	40	0.025273	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_inter_singleton	40	0.027184	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.ConstCauchy	40	40.061601	18835	2170
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_empty	40	0.025974	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_all	40	0.027059	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_r_simpl_m	40	24.069845	4195	1830	0.0.0.4.6.0.0	synth with cache (only 1: intros; only 1: transitivity (r2 * 1); only 1: apply Rmult_eq_reg_l with r1; only 1: field; only 1: auto with real; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P22	40	40.024120	6352	2560
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_neg_lt_pos	40	40.066827	12684	515
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_cardinal	40	40.038442	7026	3577
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_1	40	0.021107	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.xnegate_correct	40	40.260203	7575	1215
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40	40.083682	30296	4193
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.rev_revapp	40	40.149223	65693	610
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Signed.of_int_norm	40	40.126497	50146	4010
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zgcd_bound	40	40.093488	29775	2986
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalString.NilEmpty.isi	40	40.133433	58464	970
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_assoc	40	40.053269	18480	2555
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zdivide_power_2	40	40.055121	16484	2876
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.of_list_1	40	40.092914	29069	4463
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_bounded	40	40.051466	18098	2235
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv1	40	40.018657	5318	330
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_bounds	40	40.063021	21122	2621
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nxor_eq_false	40	40.097410	35036	3191
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_to	40	40.093705	30153	3173
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nb_digits_pos	40	40.116377	41287	2249
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_in_iff	40	27.063083	15491	2425	0.0.0.4.2.0.0.0.9.7.0	synth with cache (only 1: split; only 1: intros (e0, H0); only 1: exists e0; only 1: apply add_3 with x e; only 1: auto; only 1: auto; only 1: intros (e0, H0); only 1: exists e0; only 1: apply add_2; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.diff_iff	40	40.198955	65794	5256
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qmult'_comp_Proper	40	40.048468	14398	2261
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_sin_0	40	40.067513	22687	2878
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.to_uint_nonnil	40	40.080131	26349	2877
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalDescription.classical_definite_description	40	40.295900	117034	5319
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_in	40	40.071046	21061	2823
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_gcd	40	40.047454	5209	592
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_1	40	40.068116	22324	3658
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qminmax.Q.plus_max_distr_l	40	40.035527	6145	1319
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.clt_pos_morph	40	40.070205	8426	1003
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilEmpty.sus	40	40.166383	63339	2082
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.equal_subset	40	40.153691	62003	2926
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.ps_atan0_0	40	40.037211	11638	2356
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.exists_spec	40	40.097924	32427	3931
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Nplength_first_one	40	40.098794	36628	4290
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_quot_exact_full	40	40.054236	19781	2318
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_bis	40	40.065742	18580	1866
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_l	40	40.086996	30147	2833
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.nformula_plus_nformula_correct	40	40.050566	13051	2427
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.N_as_OT.compare	40	40.145414	58105	1428
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_refl	40	0.032989	2	1	1	synth with cache (only 1: now Z.swap_greater).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.elements_2	40	40.088586	32092	3958
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Signed.to_int_pos_surj	40	40.083835	28018	3372
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.prop_ext	40	40.098128	32605	3455
coq-tactician-stdlib.8.12.dev	Coq.Logic.SetoidChoice.representative_choice	40	40.042674	12841	1819
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_scal	40	40.049003	16782	3208
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_1	40	40.230873	99285	2417
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_1_r	40	40.050076	16183	1557
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_shift'	40	40.043289	13388	1409
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_comm	40	1.160840	753	142	1.0.0.3.6.2	synth with cache (only 1: intros n m; only 1: qc; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_sym	40	4.028473	2595	390	11.2.6	synth with cache (only 1: intros n m; only 1: intros (p, H); only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.GP_finite	40	40.046173	13385	2185
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P40	40	40.031946	9576	2148
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_le_compat_r	40	40.196494	22030	2630
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.derivable_pt_lim_arcsinh	40	40.033225	8159	2517
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q	40	40.164554	58305	5750
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.negPartAbsMin	40	40.027045	3250	677
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.set_rec	40	40.033206	5356	599
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_mult_simpl	40	40.032163	6621	1883
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_gt_compat_l	40	0.994773	181	63	3.0.0.3	synth with cache (only 1: intros x y z; only 1: intro; only 1: apply Rplus_lt_compat_l; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P23	40	40.020990	5338	2250
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40	40.011306	1215	438
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_2	40	40.067264	9997	2371
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	40	40.690270	16896	1404
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.norm_subst_ok	40	0.503692	9	7	1.0.0	synth with cache (only 1: intros; only 1: unfold norm_subst; only 1: apply norm_aux_spec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_lu_revapp	40	40.032043	6619	1168
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.negate_correct	40	40.557484	22259	2378
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.rev_rev	40	40.147964	64978	513
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Signed.of_inj_pos	40	40.061022	17897	3215
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd	40	40.051773	13207	3314
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalString.NilEmpty.sis	40	40.090899	29086	4879
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rminmax	40	40.055651	17645	5064
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.of_list_2	40	40.090394	27545	4841
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_lowerbound	40	40.052149	14688	2851
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zmod_divide	40	40.040632	12894	1689
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2	40	40.014622	2967	342
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nodd_not_double	40	40.110794	41294	3642
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.succ_double_alt	40	40.107570	42228	529
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_mod	40	1.465630	519	132	0.0.3.0.4.0.0	synth with cache (only 1: intros a b; only 1: intros (c, Hc); only 1: zero_or_not b; only 1: rewrite Hc; only 1: subst; only 1: apply Z.mod_mul; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nb_digits_revapp	40	40.073488	27447	666
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_2	40	19.709562	35264	1667	0.1.14.0.4.58.2	synth with cache (only 1: intros; only 1: generalize dependent x; only 1: intros a Ha; only 1: rewrite remove_spec; only 1: split; only 1: auto; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_mapsto_iff	40	40.071722	24636	2989
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.filter_iff	40	40.062874	22718	2327
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qminus'_comp_Proper	40	40.155103	11440	1673
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_sin_0_var	40	40.153360	16027	2262
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.for_all_iff	40	0.188080	38	10	4.4	synth with cache (only 1: intro a'; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_mapsto	40	40.062974	18538	2992
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.to_uint_inj	40	40.108971	38915	3819
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalDescription.dependent_unique_choice	40	40.171152	68001	2622
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.double_succ	40	4.327479	1420	563	3.0.0.3.0.0.0.0.0.0.1.0.0.0.1.0.4	synth with cache (only 1: induction d; only 1: trivial; only 1: simpl Little.double; only 1: now induction d; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: simpl Little.double; only 1: now rewrite ?IHd; only 1: now rewrite ?IHd; only 1: now induction d; only 1: reflexivity || ring; only 1: now induction d; only 1: now rewrite ?IHd; only 1: simpl Little.double; only 1: simpl; only 1: trivial; only 1: simpl Little.double; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.exists_iff	40	1.219218	439	58	4.12	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.gcd_spec	40	40.144175	54568	1284
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.elements_iff	40	0.346600	297	55	10.4.0	synth with cache (only 1: split; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qminmax.Q.plus_max_distr_r	40	40.041631	7103	1399
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_2	40	40.089358	30815	3152
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.clt_morph	40	40.080490	18573	2296
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilEmpty.isi	40	40.128661	49716	2097
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.equal_spec	40	40.066499	19485	4139
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.ps_atan_exists_1_opp	40	40.040759	13828	2098
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_Sets.lt_strorder	40	40.127610	52559	1828
coq-tactician-stdlib.8.12.dev	Coq.Logic.IndefiniteDescription.constructive_definite_description	40	40.305193	135359	4765
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_min_idemp	40	40.104219	43393	2472
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_le	40	40.077012	28117	2910
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_nodep	40	40.089162	33708	4668
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_r	40	40.057772	17699	1504
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.eval_Psatz_Sound	40	40.236564	25986	1711
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Signed.of_int_norm	40	40.075411	11436	2627
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3	40	40.152666	61397	2379
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.proof_irrel	40	40.196733	78675	3494
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40	40.036022	11016	3095
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.CRmorph_sum	40	40.052634	14912	3901
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.CRmorph_INR	40	0.025665	2	2	0.0	synth with cache (only 1: intros; only 1: apply CRmorph_rat).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	40.053626	16268	2247
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_trans	40	40.122227	26961	3080
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.sum_f_R0_triangle	40	40.068531	20725	3414
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_le_compat	40	40.147684	22218	2600
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.arcsinh_lt	40	40.033093	8826	2801
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P41	40	40.053451	14618	2501
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_0_1	40	40.154786	69433	776
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.exclusive_set	40	40.020343	4371	1678
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_plus_distr_l	40	5.018312	1210	288	0.3.0.2.0.4.1	synth with cache (only 1: destruct x; only 1: intros n' (HPn', Hn'); only 1: qc; only 1: unfold Qeq; only 1: simpl in *; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.R_dist_pos	40	4.489468	1951	474	3.0.1.0.12	synth with cache (only 1: intros a b; only 1: apply Rle_ge; only 1: elim (Rplus_ne b); only 1: intros v w; only 1: apply Rabs_pos).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_lt_compat_r	40	40.042925	5035	1058
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_3	40	40.083622	25837	4093
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_sym	40	0.011355	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P24	40	40.033112	9410	2737
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_equal	40	0.031697	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_1	40	0.023769	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_2	40	0.021620	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_assoc	40	0.021680	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.guarded_rel_choice	40	11.416525	3123	842	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros A B P R H; only 1: destruct (rel_choice _ _ (fun (x : {x : _ & P x}) (y : B) => R (projT1 x) y)) as (R', (HR'R, H0)); only 1: intros (x, HPx); only 1: destruct (H x HPx) as (y, HRxy); only 1: exists y; only 1: exact HRxy; only 1: set (R'' := fun (x : A) (y : B) => exists H : P x, R' (existT P x H) y); only 1: exists R''; only 1: split; only 1: intros x y (HPx, HR'xy); only 1: change x with (projT1 (existT P x HPx)); only 1: apply HR'R; only 1: exact HR'xy; only 1: intros x HPx; only 1: destruct (H0 (existT P x HPx)) as (y, (HR'xy, Huniq)); only 1: exists y; only 1: split; only 1: exists HPx; only 1: exact HR'xy; only 1: intros y' (H'Px, HR'xy'); only 1: apply Huniq; only 1: rewrite proof_irrel with (a1 := HPx) (a2 := H'Px); only 1: exact HR'xy').
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_union_singleton	40	0.082398	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.ring_correct	40	40.011111	3136	407
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_add	40	0.023661	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_1	40	0.021269	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_2	40	0.010900	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_linear_shift	40	40.073129	22471	3468
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_3	40	0.131223	2	2	0.0	synth with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_sym	40	0.011836	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_equal	40	0.024777	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_1	40	0.021669	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_sym	40	40.080900	4120	1557
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_2	40	0.021956	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_assoc	40	0.010900	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_1	40	0.047080	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_2	40	0.010986	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_gt_compat_r	40	2.822221	894	318	2.8.2	synth with cache (only 1: intros; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40	40.043819	11890	2320
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_1	40	0.037210	6	3	3.0.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_compat_l	40	0.101704	20	8	1.0.3	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.revapp_rev_nil	40	40.164693	72627	406
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zdivide_ceiling	40	40.042490	12582	2029
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd_gt	40	40.042684	8780	3300
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_sym	40	2.637756	361	169	2.1.5.0	synth with cache (only 1: intros; only 1: unfold CReal_max; only 1: rewrite CReal_abs_minus_sym; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalString.NilZero.uint_of_string_nonnil	40	40.231899	103359	2815
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_assoc	40	40.069591	25856	3523
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.of_list_3	40	40.062348	19815	2444
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_lowerbound	40	40.039367	11224	1529
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalEpsilon.constructive_definite_description	40	40.293611	120947	4263
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2b	40	40.010284	2638	292
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_zero	40	0.048354	6	3	3.0.0	synth with cache (only 1: intros; only 1: compute; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nnot_div2_not_double	40	40.184660	77618	3343
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nb_digits_rev	40	40.100593	37373	2376
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_dec	40	40.094460	34616	2554
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_3	40	40.238539	100920	1876
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_in_iff	40	40.057981	17806	3359
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_lb_gt_0	40	40.035176	9661	2436
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qred_opp	40	40.065636	13238	1623
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_mapsto_iff	40	0.091404	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: apply remove_3 with x; only 1: auto; only 1: intros; only 1: apply remove_2; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.to_uint_pos_surj	40	40.084159	26949	3760
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_bst	40	40.096235	31804	3355
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalDescription.unique_choice	40	40.117997	46360	3162
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_lu_succ	40	40.060141	17009	3415
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	0.057603	7	6	0.0.0.0.0.1	synth with cache (only 1: simpl; only 1: revert n; only 1: induction n; only 1: simpl; only 1: trivial; only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.head00_spec	40	40.075774	25178	1990
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.nat_iter_0	40	0.021127	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.tail00_spec	40	0.010133	1	1	0	synth with cache (only 1: now intros h; rewrite (to_Z_inj _ 0 h)).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.mem_b	40	40.143825	55015	3658
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Z_lt_neq	40	4.732879	2023	509	18.0	synth with cache (only 1: intro H; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_in_iff	40	3.189227	1698	394	0.0.0.1.1.0.4.0.0.1	synth with cache (only 1: split; only 1: intros (e', H0); only 1: exists e'; only 1: apply remove_3 with x; only 1: auto; only 1: intros (e', H0); only 1: exists e'; only 1: apply remove_2; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qminmax.Q.plus_min_distr_l	40	40.036190	7103	1302
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.Zcleb_morph	40	40.048227	12094	1612
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_1	40	40.061861	17955	4811
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qminmax.Q.plus_min_distr_r	40	1.332024	214	69	0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: rewrite (Qplus_comm n p), (Qplus_comm m p), (Qplus_comm _ p); only 1: apply min_monotone; only 1: intros x x' Hx; only 1: rewrite Hx; only 1: auto with qarith; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilEmpty.sis	40	40.087699	27570	4815
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalChoice.singleton_choice	40	40.044684	15842	1924
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.equal_1	40	40.104334	36237	3050
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.ps_atan_opp	40	40.024101	6527	2261
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_Sets.lt_compat	40	40.049329	11866	1397
coq-tactician-stdlib.8.12.dev	Coq.Logic.IndefiniteDescription.functional_choice	40	40.214683	89517	5026
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_min_comm	40	40.121518	45065	4276
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_le_upper_bound	40	40.093524	35104	4205
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_weak	40	40.054144	17866	2555
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_eqA	40	40.051402	16830	2002
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.ge_bool_cases	40	40.134922	51712	1811
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Signed.of_inj_pos	40	40.060087	10009	1043
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3w	40	40.184775	77998	2216
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	40	40.043276	11831	3770
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.CRmorph_series_cv	40	40.058706	10954	1278
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.lt_trans	40	40.109391	38552	3413
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRle_minus	40	40.520936	22883	1569
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.arcsinh_le	40	40.027782	6824	2222
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P42	40	40.055473	20823	2339
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_injectQPos	40	40.065078	23013	1576
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_empty	40	40.045725	12097	3054
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_integral	40	40.053660	17743	1791
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.R_dist_sym	40	40.081937	25797	4883
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_ge_compat_l	40	37.437772	7500	1269	5.7.5.0.9	synth with cache (only 1: red; only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P25	40	40.021562	5573	2135
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.AC_bool_subset_to_bool	40	40.212769	93793	426
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_linear_shift_eq	40	40.201966	16558	2986
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_compat_r	40	1.769036	329	154	0.0.0.0.2.0.0.0.0.0	synth with cache (only 1: unfold Rle; only 1: intros; only 1: elim H; only 1: intro; only 1: left; only 1: auto with zarith real; only 1: intro; only 1: right; only 1: rewrite <- H0; only 1: auto with zarith real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_le_reg_l	40	6.744820	3672	601	12.1.0.3.1.0	synth with cache (only 1: intros; only 1: intro abs; only 1: apply H; only 1: destruct (CRisRing R); only 1: apply CRplus_lt_compat_l; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_ge_compat_r	40	0.120507	52	15	7.1	synth with cache (only 1: do 3 intro; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_2	40	40.018860	2458	1019
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_1	40	0.022173	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.app_nil_r	40	40.142233	60772	994
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_2	40	0.011296	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_3	40	0.064954	4	3	1.0.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.narrow_interval_lower_bound	40	40.081615	28978	2143
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset	40	0.019974	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset_equal	40	0.019038	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40	40.044183	6279	723
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_inter_singleton	40	0.021720	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_empty	40	0.019843	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_all	40	0.019419	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div21	40	40.065778	20277	2334
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_mult	40	40.057600	9498	1428
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_mul_div	40	0.313084	53	22	3.2	synth with cache (only 1: unfold add, to_Z; only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalString.NilZero.sus	40	40.122650	48220	2613
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_spec_right	40	40.150655	60702	974
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_size	40	40.067660	23914	2690
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalEpsilon.excluded_middle_informative	40	40.069987	20868	4769
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv5	40	40.010672	3107	301
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Neven_not_double_plus_one	40	40.110833	40374	3519
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nb_digits_nzhead	40	40.207794	85804	611
coq-tactician-stdlib.8.12.dev	Coq.Strings.HexString.Raw.to_N_of_pos	40	0.022435	6	1	5	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_1	40	40.189882	72296	2403
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_2	40	0.019617	2	2	0.0	synth with cache (only 1: rewrite singleton_spec; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qred_compare	40	40.159444	13763	1357
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.SIN	40	40.073105	14744	2941
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_in	40	40.030169	6188	1245
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.of_uint_norm	40	40.057503	14888	4505
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qred_le	40	0.572760	113	40	3.3.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- (Qred_correct q), <- (Qred_correct q'); only 1: auto with *; only 1: now rewrite !Qred_correct).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40	40.075149	17197	2616
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qred_lt	40	0.993242	277	79	2.2.5.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- (Qred_correct q), <- (Qred_correct q'); only 1: trivial; only 1: intros; only 1: now rewrite !Qred_correct).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqm_mod	40	40.556358	19970	1830
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.empty_b	40	40.138532	56133	602
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	40	40.062503	20270	2408
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.isZ0_0	40	5.830191	2798	545	0.0.0.0.0.0.17.2	synth with cache (only 1: intros; only 1: destruct x; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_mapsto_iff	40	40.123453	45359	4317
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.Zcneqb_morph	40	40.053348	15593	3911
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_2	40	40.085470	29317	3513
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40	40.129741	38509	3173
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilZero.uint_of_string_nonnil	40	40.082507	27265	4078
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalChoice.choice	40	40.211769	84731	5091
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.equal_2	40	40.107227	37140	4852
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40	40.029165	9644	2293
coq-tactician-stdlib.8.12.dev	Coq.Logic.Epsilon.constructive_indefinite_description	40	40.296543	126494	6166
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_Sets.compare_spec	40	40.143365	57886	3209
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Ptestbit_Pbit	40	40.075336	28052	4248
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_min_assoc	40	40.120745	45183	4195
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_min_O_l	40	0.790091	511	108	0.0.4.1.7	synth with cache (only 1: intros n; only 1: case n; only 1: trivial; only 1: unfold ni_min; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_min_O_r	40	0.058275	12	7	1.0.2.0.0	synth with cache (only 1: simple induction d; only 1: trivial; only 1: simple induction n; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_min_inf_l	40	0.012458	2	2	0.0	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_lt_upper_bound	40	40.068279	21584	3162
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rel	40	40.087162	32578	2737
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_min_inf_r	40	0.462785	335	58	8.6	synth with cache (only 1: intros n; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA	40	40.042581	12483	1206
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.extract_hyps_app	40	40.107834	30338	1818
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.cardinal_1	40	40.075550	27467	3059
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	40	40.056439	18590	3449
coq-tactician-stdlib.8.12.dev	Coq.QArith.QOrderedType.Q_as_OT.lt_strorder	40	40.083988	25211	702
coq-tactician-stdlib.8.12.dev	Coq.QArith.QOrderedType.Q_as_OT.lt_compat	40	0.052904	3	3	0.0.0	synth with cache (only 1: intros p q H r s H'; only 1: rewrite 2!Qlt_alt, H, H'; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.lt_not_eq	40	40.060126	16131	2325
coq-tactician-stdlib.8.12.dev	Coq.Strings.OctalString.Raw.to_N_of_pos	40	0.011446	3	1	2	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.arcsinh_0	40	40.061980	13889	2279
coq-tactician-stdlib.8.12.dev	Coq.Strings.BinaryString.Raw.to_N_of_pos	40	0.011021	6	1	5	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P43	40	40.025457	7280	2192
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLtQ	40	40.064593	20355	3831
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_equal	40	40.033259	7578	2937
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_integral_l	40	40.056847	17663	2117
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Zpower_nat_0_r	40	0.008102	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.R_dist_refl	40	40.055105	15743	4666
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.R_dist_eq	40	0.081561	11	6	0.0.1.0.0	synth with cache (only 1: intros H; only 1: unfold R_dist; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: apply Rabs_R0).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Zpower_nat_succ_r	40	0.526545	18	4	4	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_mod_POS	40	40.066095	21967	3215
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.pred_ext_and_rel_choice_imp_EM	40	40.047955	11711	1488
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_l_pos	40	40.053135	16595	1529
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_lt_compat	40	40.039409	8023	1490
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_le_reg_r	40	40.349842	24040	2362
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.app_int_nil_r	40	40.094890	36321	1803
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_to	40	40.087301	32032	3451
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P26	40	40.022051	5600	1901
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40	40.025090	7430	620
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_inv_r	40	6.138634	2373	443	6.1.3.6.0	synth with cache (only 1: unfold Q2Qc; only 1: intuition; only 1: qc; only 1: apply Qmult_inv_r; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pos_mod	40	40.066647	19246	3365
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_plus	40	40.031177	6034	3108
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalString.NilZero.usu	40	40.098361	35514	3665
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalString.NilZero.usu_nil	40	0.009660	4	2	1.1	synth with cache (only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_inv_l	40	1.698104	484	119	0.0.4.0.3.0	synth with cache (only 1: intros; only 1: intuition idtac; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec	40	40.107660	39423	2807
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_le	40	40.050340	13936	5290
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalEpsilon.classical_indefinite_description	40	40.264161	105258	4505
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_O	40	21.496871	9204	1492	1.1.0.0.10.1.5.0.1.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: split; only 1: simpl; only 1: intros a'; only 1: destruct (eqA_dec a a'); only 1: simpl; only 1: destruct 1; only 1: auto with *; only 1: intros H; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv3b	40	40.003923	430	284
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_S	40	0.072513	5	5	0.0.0.0.0	synth with cache (only 1: intros l a; only 1: rewrite multiplicity_InA; only 1: destruct (multiplicity (list_contents l) a); only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	40	40.098218	35929	3237
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nb_digits_iter_D0	40	40.048707	11498	4462
coq-tactician-stdlib.8.12.dev	Coq.omega.PreOmega.Z.mod_0_r_ext	40	40.096219	30714	3084
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_1	40	40.081285	24723	2975
coq-tactician-stdlib.8.12.dev	Coq.Strings.HexString.to_N_of_N	40	40.078114	30019	1285
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.isZ0_n0	40	36.456160	15886	3059	11.11.2.9	synth with cache (only 1: intros n; only 1: intuition; only 1: now subst; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.COS	40	40.043681	12705	2913
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.of_inj	40	40.074486	23591	3522
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_bst	40	40.052359	12056	2703
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_0	40	40.059356	15413	4318
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqm_sub	40	40.058360	11513	7250
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_b	40	40.143711	31522	1473
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40	40.091146	13664	2636
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_in_iff	40	40.133702	51090	3995
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_neq_b	40	1.313240	153	91	0.0.0.0.0.0.0.0.2	synth with cache (only 1: intuition; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_3	40	40.076159	24821	3038
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40	40.089972	33672	3079
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilZero.sus	40	40.068480	20973	4705
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.eq_dec	40	40.093541	30259	4477
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nbit0_neq	40	12.809372	7062	841	11.11.3.0	synth with cache (only 1: intros; only 1: eqb2eq; only 1: intuition; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Ndiv2_eq	40	0.126732	22	7	2.0.4	synth with cache (only 1: intuition; only 1: eqb2eq; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Ndiv2_neq	40	0.043259	3	3	0.0.0	synth with cache (only 1: intros; only 1: eqb2eq; only 1: now intros <-).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Epsilon.small_drinkers'_paradox	40	40.296863	130151	6262
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.pow_lt_1_compat	40	40.032251	8569	1849
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Ntestbit_Nbit	40	40.095241	39916	4641
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_le_lower_bound	40	40.091548	33060	4485
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction	40	40.104421	43497	2657
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_le_refl	40	40.157846	65731	2360
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.nhyps_of_psatz_correct	40	40.054468	16543	2838
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.Equivb_Equivb	40	40.051857	18825	2439
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_id	40	40.092371	33271	4396
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_le_antisym	40	4.410125	2929	458	7.1.4.2.0.7.0	synth with cache (only 1: intros x y; only 1: destruct x; only 1: intuition auto; BinInt.Z.Private_OrderTac.Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *; only 1: intro eq_rect_eq; only 1: inversion 1; only 1: rewrite ni_min_comm; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40	40.154285	61128	3234
coq-tactician-stdlib.8.12.dev	Coq.Strings.OctalString.to_N_of_N	40	40.079623	21463	2575
coq-tactician-stdlib.8.12.dev	Coq.Strings.BinaryString.to_N_of_N	40	40.043117	14156	2045
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLtQopp	40	40.058938	16624	5080
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_add	40	40.036730	7926	3300
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P44	40	40.042805	13977	2572
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1._PI2_RLT_0	40	26.527320	8421	2223	1.2.12.1.0	synth with cache (only 1: unfold PI; only 1: rewrite <- (Rmult_0_r (/ 2)); only 1: destruct pi2_int; only 1: rewrite <- (Rmult_0_r (/ 2)); only 1: lra).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.R_dist_tri	40	40.073647	23805	4135
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Zpower_nat_is_exp	40	40.040400	14081	1488
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Zpower_pos_nat	40	0.263439	114	19	6.7	synth with cache (only 1: unfold Pos.to_nat; only 1: apply Pos2Nat.inj_iter).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_mod	40	40.050358	15501	2973
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a1'	40	40.163252	66003	5503
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a2'	40	0.012717	2	2	0.0	synth with cache (only 1: exists a1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_compat	40	40.044574	10075	2567
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_l	40	40.109396	21133	2661
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_gt_compat	40	0.042843	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rlt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.revapp_revapp_1	40	40.118266	49210	1500
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_lt_le_compat	40	40.278183	14267	1463
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_lu_tenfold	40	40.052061	15451	1913
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.exclusive_set	40	40.043010	9898	2376
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P27	40	40.030542	9858	1948
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.string_dec	40	40.080039	29490	2026
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_is_even	40	40.059596	15099	3763
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_plus	40	40.028839	3816	1774
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalString.NilZero.usu_gen	40	40.117635	49418	1215
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcinv_mult_distr	40	40.058040	18084	2758
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_firstr	40	40.063197	16077	2678
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_bis	40	40.080782	23620	2218
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40	40.114404	39920	4159
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv6	40	40.010172	2959	258
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_NoDupA	40	40.043330	12556	2647
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.inject_Z_injective	40	40.084894	28617	3587
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nb_digits_nth	40	40.118943	43938	896
coq-tactician-stdlib.8.12.dev	Coq.omega.PreOmega.Z.div_0_r_ext	40	40.065062	23800	3306
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_2	40	40.239921	108275	1488
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_3	40	0.018450	3	2	1.0	synth with cache (only 1: rewrite union_spec; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Strings.HexString.to_Z_of_Z	40	40.116533	47745	787
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zdiv_pol_correct	40	40.045728	15141	1591
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.of_iff	40	40.030474	6109	2804
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.PI4_RLT_PI2	40	14.385286	10175	1084	0.3.0.8.2.1.3.0.8.2.0.3.1	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_compat_l; only 1: apply PI_RGT_0; only 1: rewrite <- Rmult_1_r; only 1: apply Rmult_lt_reg_l with 2; only 1: prove_sup0; only 1: rewrite <- Rmult_assoc; only 1: rewrite <- Rinv_r_sym; only 1: rewrite Rmult_1_l; only 1: generalize cos_pi2; only 1: intro x; only 1: lra; only 1: now apply not_0_IZR).
coq-tactician-stdlib.8.12.dev	Coq.omega.PreOmega.Z.rem_0_r_ext	40	3.137708	3274	247	2.0.3.2.1.24.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: subst; only 1: destruct x; only 1: now Z.nzsimpl; only 1: trivial; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_1	40	40.036187	4957	1135
coq-tactician-stdlib.8.12.dev	Coq.omega.PreOmega.Z.quot_0_r_ext	40	0.072564	8	6	0.0.1.1.0.0	synth with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: now Z.nzsimpl; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.is_path_from_characterization	40	40.066759	23203	3620
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqmE	40	40.057270	16471	2816
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_nodep	40	5.641017	5623	430	2.1.1.3.32	synth with cache (only 1: intros a n Hn; only 1: intros; only 1: apply fold_rec; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40	40.056368	16717	2422
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_le	40	40.065292	20747	3020
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_mapsto_iff	40	40.122479	44769	4234
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_b	40	40.025084	4693	3150
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_1	40	40.037881	9817	1519
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40	40.080490	30104	2636
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_empty	40	16.329495	4123	1781	5.7.0.3	synth with cache (only 1: destruct (fold_0 s i f) as (l, (Hl, (Hl1, Hl2))); only 1: destruct (fold_0 s' i f) as (l', (Hl', (Hl'1, Hl'2))); only 1: apply fold_1b; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilZero.usu	40	40.149070	53483	2421
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lex_Opp	40	39.441500	31663	3857	1.0.0.0.0.18.8.7.2	synth with cache (only 1: intros a b n Hn; only 1: intros Ha Hb; only 1: rewrite Ha; only 1: induction n; only 1: assumption; only 1: cbn in *; only 1: auto; only 1: cbn in *; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilZero.usu_nil	40	0.017352	4	2	1.1	synth with cache (only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40	0.176905	92	31	2.1.1.1.0.0	synth with cache (only 1: intros n m; only 1: destruct n, m; only 1: auto; only 1: now rewrite <- ?Pos.compare_antisym; only 1: now rewrite <- ?Pos.compare_antisym; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Ndiv2_bit_eq	40	40.081736	29501	2290
coq-tactician-stdlib.8.12.dev	Coq.Logic.Epsilon.iota_statement	40	40.201533	80592	5901
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_seq_Rabs	40	40.032128	9563	2421
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Pbit_Ptestbit	40	40.095854	38308	3829
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_sgn	40	40.042055	11442	3514
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction_bis	40	40.060541	25379	1658
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_seq_pos	40	5.619325	681	313	0.1.0.7	synth with cache (only 1: intros a b; only 1: intro; only 1: apply pow_lt; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_equal	40	9.070545	1875	1022	0.0.0.0.0.2.5	synth with cache (only 1: symmetry; only 1: symmetry; only 1: apply fold_equal; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.equal_1	40	40.081103	21260	2000
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.check_inconsistent_sound	40	40.068671	22709	3047
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_comp	40	40.073325	25682	3915
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_xeq	40	0.044498	15	5	3.1.1	synth with cache (only 1: intros; only 1: subst; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_le_trans	40	40.104451	36370	3718
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40	40.111630	37056	3447
coq-tactician-stdlib.8.12.dev	Coq.Strings.OctalString.to_Z_of_Z	40	40.160914	61414	749
coq-tactician-stdlib.8.12.dev	Coq.Strings.BinaryString.Z_of_of_Z	40	40.116658	50511	1775
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.add_fold	40	40.038832	8950	3263
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_compare	40	40.042476	12788	1432
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.R_dist_plus	40	40.075083	23201	4484
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Zpower_nat_Z	40	40.077502	13460	1542
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P45	40	40.021658	5148	2899
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Zpower_nat_Zpower	40	0.323361	79	36	1.0.1.0.0.1	synth with cache (only 1: intro Hn; only 1: induction n; only 1: trivial; only 1: apply Pos2Nat.inj_iter; only 1: simpl; only 1: now destruct Hn).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Remainder_equiv	40	40.086829	30342	2817
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.projT1_injective	40	40.224301	93708	2972
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_add	40	11.775963	3796	1301	0.1.9.0.0.0.0.2	synth with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_1	40	3.926921	728	271	1.2.0.0.0.0.2.1	synth with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto with set; only 1: auto with set relations).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_r	40	40.037288	9490	1422
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_ge_compat	40	40.074290	23755	2702
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_le_lt_compat	40	40.065223	19625	2204
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nb_digits_pos	40	40.061496	18054	1093
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_lu_0	40	40.058559	17637	3139
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.eqb_spec	40	40.146807	57907	2592
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt	40	40.034499	7037	2774
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalString.NilZero.isi	40	40.163804	67182	3441
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P28	40	40.019342	4587	2261
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_lt	40	40.078917	9342	1012
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalString.NilZero.isi_posnil	40	0.005920	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalString.NilZero.isi_negnil	40	0.006382	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcdiv_mult_l	40	40.058220	17973	2074
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice	40	40.090880	23589	3346
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_length	40	0.053299	5	3	0.0.2	synth with cache (only 1: simpl; only 1: intro; only 1: repeat match goal with | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.l2i_i2l	40	0.040182	6	2	4.0	synth with cache (only 1: intro n; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalEpsilon.choice	40	40.211972	88013	4942
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4	40	40.003449	599	237
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_alt	40	40.092612	27299	2837
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_InA_InA	40	40.085182	29385	3348
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_alt	40	0.065078	9	5	2.1.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nth_revapp_r	40	40.063662	19144	1838
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_1	40	40.114675	40098	2578
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_2	40	0.017481	2	2	0.0	synth with cache (only 1: rewrite inter_spec; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_3	40	0.023089	2	2	0.0	synth with cache (only 1: rewrite inter_spec; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Strings.HexString.to_nat_of_nat	40	40.065145	24105	2400
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zgcd_pol_ge	40	40.159939	27519	2848
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	40.050347	11606	4391
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.nztail_to_hex_uint	40	40.104875	38438	1606
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_2	40	40.058103	7316	2330
coq-tactician-stdlib.8.12.dev	Coq.omega.PreOmega.Z.rem_bound_pos_pos	40	40.082167	17293	2040
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40	40.057850	16695	2663
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.int_eqm	40	0.019545	6	2	1.3	synth with cache (only 1: intro H0; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_weak	40	40.066864	21498	2820
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.is_path_from_restrict	40	40.088423	31692	4022
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40	40.034459	8331	1908
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	40	40.075724	10244	1234
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_in_iff	40	40.121281	43085	4169
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_neq_b	40	40.024297	4199	2682
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_2	40	40.060950	18656	3413
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40	40.114050	45546	3441
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.compare_inv	40	40.118114	38633	5316
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilZero.usu_gen	40	40.239237	37009	766
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Ndiv2_bit_neq	40	40.066140	21720	2672
coq-tactician-stdlib.8.12.dev	Coq.Logic.Epsilon.constructive_definite_description	40	40.322897	142512	5037
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nbit_Ntestbit	40	40.083536	33012	5026
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nshiftr_nat_S	40	0.020230	2	2	0.0	synth with cache (only 1: intros len start; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nshiftl_nat_S	40	0.014187	4	2	2.0	synth with cache (only 1: intros a n; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_rem_plus	40	40.063696	22824	2406
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_identity	40	40.039476	8997	3488
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_sum_eq	40	40.030942	9433	1976
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.equal_2	40	40.081688	25402	2924
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.checker_nf_sound	40	40.243566	33478	2766
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_opp	40	40.057466	18360	4126
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_le_min_1	40	40.110702	43629	3028
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_le_min_2	40	0.086784	21	10	0.2.1.0.0	synth with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lex_Eq	40	11.675674	5815	1141	0.14.0.0.0.0.0.1.1	synth with cache (only 1: intros n m; only 1: split; only 1: destruct n; only 1: now split; only 1: discriminate; only 1: now split; only 1: intros (EQ, EQ'); only 1: subst; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.compare_bool_Eq	40	0.041724	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: now split; only 1: easy'; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_trans	40	40.131335	50021	3331
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakr	40	26.598585	2394	180	0.1.0.33	synth with cache (only 1: induction x; only 1: simpl in *; only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Strings.OctalString.to_nat_of_nat	40	40.086941	31844	3267
coq-tactician-stdlib.8.12.dev	Coq.Strings.BinaryString.to_nat_of_nat	40	40.078356	30263	2864
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_morph_Proper	40	40.088355	30797	3779
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.R_dist_mult_l	40	40.052971	16829	1942
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Zpower_pos_is_exp	40	40.097085	34739	1463
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_mod_full	40	40.045911	15162	2038
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyInst.eq_pos_inj	40	0.035285	4	4	0.0.0.0	synth with cache (only 1: intros n1 n2; only 1: split; only 1: congruence; only 1: now injection 1).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P46	40	40.036377	11560	2720
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_morph_T	40	1.777359	629	142	10.10	synth with cache (only 1: intros a b; only 1: now intros ->).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyInst.of_nat_to_nat_eq	40	0.318653	116	42	0.0.1.0.3.1	synth with cache (only 1: intros n; only 1: destruct n; only 1: trivial; only 1: now rewrite <- Z_N_nat, <- nat_N_Z, N2Nat.id, Z2N.id; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.decide	40	40.131521	23876	2023
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.add_fold	40	40.057292	13523	4544
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_2	40	40.038996	9006	3381
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_lt_le_compat	40	40.055064	15441	2934
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_1	40	40.293023	21120	1618
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nb_digits_revapp	40	40.088009	25106	4481
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_eq_reg_l	40	40.110571	21552	2757
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40	40.056202	8016	1361
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.eqb_refl	40	40.146674	56988	3427
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt2	40	40.044850	12393	2409
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalString.NilZero.sis	40	40.054624	14227	4655
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.two_p_power2	40	0.090852	6	5	0.1.0.0.0	synth with cache (only 1: intros; only 1: destruct x; only 1: auto using Z.lt_gt with zarith; only 1: apply two_power_pos_equiv; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_div_r	40	40.080711	26095	2483
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_1	40	5.546759	1410	542	2.2.0.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcle_refl	40	1.144656	1157	141	8.8.2.1	synth with cache (only 1: intro n; only 1: induction n; only 1: red; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_assoc	40	40.048626	7979	1112
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_cons_InA	40	40.071794	24790	3162
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4b	40	40.003594	443	252
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qgt_alt	40	40.094568	31497	3639
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_alt	40	0.050874	19	5	6	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nth_revapp_l	40	40.043842	12572	2259
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P29	40	40.035184	11336	2128
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_1	40	40.084444	27008	2342
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_2	40	0.018629	2	2	0.0	synth with cache (only 1: rewrite diff_spec; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_3	40	0.025855	3	2	0.1	synth with cache (only 1: rewrite diff_spec; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Strings.HexString.to_pos_of_pos	40	40.079400	29314	2003
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	40	40.096989	32523	3477
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_gt_0	40	40.047546	13592	2892
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.double_unorm	40	40.050047	12929	3905
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_3	40	40.040366	9504	2247
coq-tactician-stdlib.8.12.dev	Coq.omega.PreOmega.Z.rem_bound_neg_pos	40	40.061426	15374	1774
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rel	40	40.116882	44208	2686
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.inductively_barred_at_monotone	40	40.109606	40707	4608
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_of_lu	40	40.106824	38998	1614
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqmI	40	40.585299	25110	3181
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcle_antisym	40	6.827146	2857	411	5.6.2.0.7	synth with cache (only 1: intros n m; only 1: destruct n, m; only 1: intros H; only 1: symmetry; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zmod_div_mod	40	40.109065	44382	2710
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_in_iff	40	40.090871	30922	3664
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.singleton_b	40	40.022709	3797	2673
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_3	40	40.121864	45865	2772
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40	40.051375	18930	2006
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakl	40	23.087762	2389	252	0.0.22.3	synth with cache (only 1: intros l l'; only 1: destruct l; only 1: compute; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_add_opp	40	0.025425	4	2	2.0	synth with cache (only 1: intros; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilZero.isi	40	40.066511	19340	3445
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilZero.isi_posnil	40	0.032703	3	2	1.0	synth with cache (only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilZero.isi_negnil	40	0.019094	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Zerob.zerob_true_intro	40	0.307178	118	33	0.0.4.3	synth with cache (only 1: intros le_mn2; only 1: destruct le_mn2; only 1: easy; only 1: now try Nat.order').
coq-tactician-stdlib.8.12.dev	Coq.Bool.Zerob.zerob_true_elim	40	0.019779	3	3	0.0.0	synth with cache (only 1: destruct n; only 1: trivial with bool; only 1: inversion 1).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Zerob.zerob_false_intro	40	0.026890	10	4	0.2.0	synth with cache (only 1: destruct n; only 1: Nat.order'; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nneq_elim	40	40.064568	21632	3095
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nshiftr_nat_equiv	40	40.100348	21860	3417
coq-tactician-stdlib.8.12.dev	Coq.Bool.Zerob.zerob_false_elim	40	2.598760	2523	269	21.0.0.0	synth with cache (only 1: intros; only 1: intro H1; only 1: rewrite H1 in H; only 1: now Nat.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Classes.SetoidDec.unit_eqdec_obligation_1	40	40.148128	57357	4441
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_quot_plus	40	40.069836	25691	2723
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_0	40	40.088705	33770	2726
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcomplements.floor_gt0	40	0.031325	3	2	0.1	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_seq_increasing	40	40.028916	8877	2208
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.map_1	40	40.059976	21695	2860
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_opp_rev	40	40.139906	44916	3564
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_sub	40	40.112748	30321	2017
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_min_case	40	40.108676	40367	2947
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.compare_equal	40	40.136384	21327	3143
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_trans	40	40.133852	49004	4021
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilZero.sis	40	13.652107	5419	1242	0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: destruct s; only 1: intros [=<-]; only 1: simpl; only 1: case Ascii.eqb_spec; only 1: intros ->; only 1: destruct (NilEmpty.uint_of_string s) eqn:Hs; only 1: simpl; only 1: intros [=<-]; only 1: simpl; only 1: f_equal; only 1: now apply NilEmpty.sus; only 1: simpl; only 1: intros [=<-]; only 1: destruct d; only 1: intros; only 1: apply NilEmpty.sus; only 1: simpl; only 1: destruct uint_of_char; only 1: simpl in *; only 1: congruence; only 1: simpl in *; only 1: congruence; only 1: now destruct uint_of_char).
coq-tactician-stdlib.8.12.dev	Coq.Strings.OctalString.to_pos_of_pos	40	40.100067	22657	1506
coq-tactician-stdlib.8.12.dev	Coq.Strings.BinaryString.to_pos_of_pos	40	40.119617	46464	3070
coq-tactician-stdlib.8.12.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.linear_search_smallest	40	22.404638	17569	1314	57	synth with cache (only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_add	40	8.162231	4413	270	27.5.9	synth with cache (only 1: intros x y H; only 1: rewrite (Padd_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: now try discriminate).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Zpower_exp	40	40.076613	6638	1916
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_remainder	40	40.094315	36864	3346
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_equiv	40	0.015063	5	1	4	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_equiv	40	0.019688	8	2	6.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyInst.z_max_spec	40	40.067111	24603	2540
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_cauchy	40	40.131239	13050	1657
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec	40	40.097352	37032	2699
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp	40	0.005424	3	1	2	synth with cache (only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyInst.z_min_spec	40	0.561099	94	18	7.1	synth with cache (only 1: intros n m; only 1: Z.solve_min).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyInst.pow_pos_strict	40	0.042950	5	2	3.0	synth with cache (only 1: intros a b Ha Hb; only 1: Z.order_pos).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Ztac.eq_incl	40	0.029587	4	3	0.0.1	synth with cache (only 1: intros x y; only 1: intro EQ; only 1: now rewrite EQ).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_union	40	40.030810	5862	3220
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	0.022984	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_lt_compat	40	40.102481	23493	7580
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nb_digits_rev	40	40.102229	37686	2746
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	40	40.283510	6085	1202
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_eq_reg_r	40	40.045113	8172	2819
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40	40.176695	69145	689
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	1.477345	311	117	0.0.0.4.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.eqb_sym	40	40.111398	43142	2546
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_mul	40	5.764012	3544	286	19.3.5.7	synth with cache (only 1: intros x y H; only 1: unfold eval_pol; only 1: rewrite (Pmul_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: now try discriminate).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Ztac.elim_concl_eq	40	3.047147	2758	365	9.0.1.1.13	synth with cache (only 1: intros n m; only 1: intuition; only 1: destruct (Z.eq_decidable n m); only 1: trivial; only 1: Z.Private_Tac.order).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Ztac.elim_concl_le	40	0.013190	6	2	4.0	synth with cache (only 1: intros x y H; only 1: now apply Z.ge_le).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Ztac.elim_concl_lt	40	0.036811	17	5	2.0	synth with cache (only 1: intros; only 1: now apply Z.nle_gt).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_1	40	1.127778	287	82	0.0.0.4.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Ztac.Zlt_le_add_1	40	0.334208	63	16	6.1	synth with cache (only 1: intros n m; only 1: apply Z.le_succ_l).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Ztac.add_le	40	0.013483	5	2	3.0	synth with cache (only 1: intros n m H1 H2; only 1: now apply Z.add_nonneg_nonneg).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Ztac.mul_le	40	0.029511	8	4	0.0.4.0	synth with cache (only 1: intros n m H1 H2; only 1: apply Z.mul_nonneg_nonneg; only 1: Z.order; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head00	40	40.067373	18775	3204
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_2	40	40.052495	11666	3803
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_max_mult_neg	40	40.027110	5824	1640
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_nil	40	40.059248	18963	3703
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qge_alt	40	40.050334	14481	2168
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7	40	40.003536	558	184
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P30	40	40.034809	10407	2062
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.shift_equiv	40	10.985761	4557	1052	5.1.3.5.0.5	synth with cache (only 1: case n; only 1: intros; only 1: reflexivity; only 1: intros Hn Hn'; only 1: now apply Pos.iter_swap_gen; only 1: now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_1	40	40.255048	104237	2663
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_2	40	0.040400	4	4	0.0.0.0	synth with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nzhead_revapp_0	40
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zdivide_pol_one	40	40.120385	46769	1911
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_gt_0	40	40.050322	15902	2848
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.double_nzhead	40	40.067816	18240	4325
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_3	40	1.971689	2611	213	0.0.0.25.0	synth with cache (only 1: intros P; only 1: intro; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.omega.PreOmega.Z.rem_bound_pos_neg	40	40.094715	10737	1776
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_in	40	40.067877	8449	1304
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40	40.095887	36280	3195
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction	40	40.159132	64445	2892
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.add_assoc	40	40.203053	79629	3013
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcle_trans	40	40.091956	31120	2760
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zmod_divide_minus	40	40.115302	6373	2100
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_of	40	40.068548	19790	2969
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rplus_morph_Proper	40	4.355131	3401	255	15.15.14	synth with cache (only 1: intros x y; only 1: intros H'; only 1: simpl_relation).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_inv	40	40.168657	65049	3473
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.union_b	40	40.055413	11837	7402
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_1	40	40.085500	21002	1716
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring.BoolTheory	40	0.607311	198	66	0.0.0.0.0.0.0.0.0.9	synth with cache (only 1: split; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: reflexivity; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40	40.067327	20806	2583
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring.bool_eq_ok	40	0.015443	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_l2i	40	40.148678	44289	3616
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40	40.080284	26020	813
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Ndouble_or_double_plus_un	40	40.077716	32388	436
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nshiftr_equiv_nat	40	40.046301	14374	4581
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_quot_plus_l	40	40.046011	15516	2032
coq-tactician-stdlib.8.12.dev	Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	40	40.090057	36623	850
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1	40	40.061196	20155	2589
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcomplements.floor_ok	40	40.060256	18927	2614
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_seq_decreasing	40	40.036418	11599	2208
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.map_2	40	40.108654	42544	4536
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_mirr	40	40.038890	10996	3453
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_le_total	40	40.098980	32398	4628
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.compare_gt	40	40.102283	34522	4978
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	40.200975	80740	2770
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_gt_ge_compat	40	32.552797	11866	2550	1.0.0.0.13.15.2	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: generalize (total_order_T r1 r2); only 1: intros; only 1: apply Rle_lt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rtimes_morph_Proper	40	19.925023	16254	882	72	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_ge_gt_compat	40	1.135033	466	103	0.0.0.0.0.0.8.3	synth with cache (only 1: intros; only 1: destruct H; only 1: apply Rlt_le_trans with (r2 + r3); only 1: auto with real; only 1: auto with real; only 1: apply Rlt_le_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.epsilon_smallest	40	40.081090	25242	4201
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.ropp_morph_Proper	40	2.571955	2410	203	41	synth with cache (only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pair_wd	40	20.490415	3734	747	1.1.9.10	synth with cache (only 1: intros Eqf Lef x y; only 1: compute; only 1: intros n m; only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_mod_eq	40	40.097675	43112	2460
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec'	40	40.046163	10127	4370
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.belowMultiple	40	40.121181	44691	3497
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nb_digits_nzhead	40	40.181440	79276	623
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_assoc	40	40.366077	26719	2444
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_comm	40	0.030555	3	2	1.0	synth with cache (only 1: intros; only 1: apply (Radd_comm (CRisRing R))).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.singleton_spec	40	40.070176	22821	2934
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_of	40	40.189281	83489	681
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.singleton_ok	40	0.022290	5	2	2.1	synth with cache (only 1: red; only 1: auto_tc).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.Rinv_eq_compat	40	41.588206	13305	1415
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.eqb_eq	40	40.062111	17032	5813
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.eqb_neq	40	0.026475	1	1	0	synth with cache (only 1: now rewrite <- not_true_iff_false, BinInt.Z.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_opp	40	40.132605	39438	1741
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.eqb_compat	40	0.038861	3	3	0.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!BinInt.Z.eqb_eq, Exx', Eyy').
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40	40.052428	15439	2244
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head0	40	40.055516	13967	3380
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_union	40	40.041453	7663	3953
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_1	40	0.021371	1	1	0	synth with cache (only 1: auto with set fset).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_2	40	0.968541	266	81	0.0.0.4.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_1	40	0.541539	181	47	0.0.0.4.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_assoc	40	40.039481	6919	1514
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_length_1	40	40.065401	22200	3782
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qcompare_antisym	40	40.168557	57215	6520
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7b	40	40.005546	958	181
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P31	40	40.030801	8792	1975
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_nat_equiv	40	40.045452	15650	1939
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nzhead_revapp	40	40.079866	25853	3287
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zgcd_minus	40	40.046616	15612	1529
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.ArithRing.natSRth	40	40.021758	5842	1288
coq-tactician-stdlib.8.12.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_implies_acc	40	14.645695	2685	388	7.0.5.14.6	synth with cache (only 1: intros; only 1: split; only 1: split; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_ge_0	40	40.042813	12228	2730
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40	4.266408	2043	316	8.0.1.11	synth with cache (only 1: intros H x; only 1: rewrite <- not_mem_iff; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_1	40	40.121181	49252	1579
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.of_hex_uint_double	40	40.036087	9120	2091
coq-tactician-stdlib.8.12.dev	Coq.omega.PreOmega.Z.rem_bound_neg_neg	40	40.098264	6096	1225
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_bst	40	40.031033	6266	1147
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.add_comm	40	40.064566	17028	3965
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	40	40.093199	34586	3415
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction_bis	40	40.145083	57518	2811
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_not_eq	40	40.125426	42509	4138
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_mod_minus	40	40.061495	19436	2974
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40	40.114276	40885	2710
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_1bis	40	40.108926	37891	3364
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.inter_b	40	40.019744	3157	2743
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_2	40	40.076346	25540	3456
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40	40.054444	19162	2400
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_nshiftl	40	40.047173	2219	621
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_mirr_rev	40	31.206014	11987	3460	1.2.2.0.0.0.0.0.4.0.1.0	synth with cache (only 1: intros f x H; only 1: destruct H as [l H]; only 1: exists (- l); only 1: apply derivable_pt_lim_ext with (f := fun x => mirr_fct f (- x)); only 1: intros; only 1: unfold mirr_fct; only 1: rewrite Ropp_involutive; only 1: reflexivity; only 1: apply derivable_pt_lim_mirr_fwd; only 1: change (mirr_fct f) with (f o (- id))%F; only 1: rewrite Ropp_involutive; only 1: exact H).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.Zth	40	40.020604	5730	1604
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_mirr_prem	40	0.295973	64	28	0.0.0.0.1.0.0.0	synth with cache (only 1: intros f x H; only 1: unfold derivable_pt in H; only 1: destruct H as [l H]; only 1: exists (- l); only 1: apply derivable_pt_lim_mirr_rev; only 1: rewrite Ropp_involutive; only 1: rewrite Ropp_involutive; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.radd_ext3_Proper	40	0.008592	1	1	0	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.rmul_ext3_Proper	40	0.009526	2	1	1	synth with cache (only 1: exact (Rmul_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ropp_ext3_Proper	40	0.008406	1	1	0	synth with cache (only 1: exact (Ropp_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nleb_alt	40	40.057307	17188	1284
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nshiftl_nat_equiv	40	40.076770	31009	3990
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_sym	40	10.275866	8185	949	8.3.18	synth with cache (only 1: intros P Hrec; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_mult_cancel_r	40	40.051716	17440	3045
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_2	40	40.068341	20164	2233
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.ascii_dec	40	40.068431	18884	1974
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcomplements.Z_lt_abs_rec	40	40.145094	60504	2960
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_seq_CV_0	40	40.028965	9028	2318
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1b	40	3.094886	2093	371	0.4.0.2.9	synth with cache (only 1: intros a b c H H'; only 1: apply fold_rec; only 1: split; only 1: intros E; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.mapi_1	40	40.074927	26801	2737
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_le_min_induc	40	40.066380	21973	3163
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.compare_eq	40	40.080231	26231	3329
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_le_weak	40	17.890536	15025	1431	4.32	synth with cache (only 1: intros m IH H; only 1: now apply Z.lt_le_incl).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcle_lt_trans	40	0.604134	180	49	1.1.1.4.0	synth with cache (only 1: intros x y z; only 1: intuition auto; N.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: apply Qle_lt_trans with y; only 1: auto with qarith; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_not_eq	40	40.114436	40345	4965
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_lt_0_compat	40	40.072955	23280	3226
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rle_morph_Proper	40	40.095042	36033	1762
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_eq_full	40	40.062208	23831	2456
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40	40.042387	12046	1380
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_comm	40	40.097446	37835	1437
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.ExtensionalEpsilon_imp_EM.extensional_epsilon_imp_EM	40	40.132006	46376	2977
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_assoc	40	40.079620	27578	4794
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.le_ni_le	40	9.346854	5218	776	0.4.9.14.1	synth with cache (only 1: intros n m H; only 1: symmetry; only 1: unfold ni_min; only 1: rewrite Nat.min_l by trivial; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.del_head_nb_digits	40	40.159214	70662	633
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_morph_Proper	40	40.056219	12577	4523
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	40	40.072955	20157	2987
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40	40.142113	55609	4852
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	40	40.051673	9391	1366
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_norm	40	40.113336	33644	2051
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.get_correct	40	40.109980	38272	4643
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	40	0.418457	50	23	0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_cardinal	40	40.067638	20946	2623
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_cardinal	40	0.107115	16	4	5	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.Comp'	40	0.364809	34	8	9	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_pos	40	40.089811	27573	3395
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_lub_lt	40	40.039833	3745	510
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_length_2	40	40.059255	19324	3594
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qcompare_spec	40	40.102299	42618	402
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_refl	40	0.063241	4	2	0.2	synth with cache (only 1: red; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_nz	40	40.005068	1436	161
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_sym	40	0.023346	4	2	2.0	synth with cache (only 1: symmetry; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P32	40	40.040748	9426	2595
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_equiv	40	40.050471	15709	1890
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zdivide_pol_sub	40	40.084882	30319	2581
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.ArithRing.nat_morph_N	40	40.050207	10777	2028
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_ge_0	40	40.034047	8663	2630
coq-tactician-stdlib.8.12.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc	40	40.140141	14969	3043
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.union_cardinal	40	40.087570	29579	2390
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_2	40	40.093418	33080	2144
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_find	40	40.030433	4712	1105
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	1.117630	998	111	13.17	synth with cache (only 1: intros x y H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.add_le_r	40	40.163097	66761	556
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Signed.of_to	40	40.108422	37650	3828
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_identity	40	40.060166	17083	2505
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.Comp'	40	0.069526	9	3	2	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.find_left_path	40	40.111272	43227	4176
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_nonnil	40	40.073526	24278	3197
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_mapsto_iff	40	40.089334	28910	4318
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.diff_b	40	40.028472	5956	3274
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_1	40	40.106167	36143	3634
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40	40.059537	22577	2800
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nzhead_rev	40	40.046818	13110	1990
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.radd_ext_Proper	40	3.763852	2355	150	33	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_i2l	40	40.040934	4948	1004
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_plus	40	40.066166	21125	3457
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.get_signZ_th	40	40.112150	40806	2053
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.rsub_ext3_Proper	40	0.008732	1	1	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nleb_Nle	40	40.071019	23707	3965
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.rmul_ext_Proper	40	5.510893	3595	206	41	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nleb_refl	40	1.300864	520	94	1.2.0.1.0.4.11	synth with cache (only 1: apply eq_iff_eq_true; only 1: split; only 1: auto; only 1: intuition; only 1: unfold Nleb; only 1: apply Nat.leb_le; only 1: left).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nshiftl_equiv_nat	40	40.060958	22904	3609
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_0	40	40.033221	11110	1356
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_mult_cancel_l	40	40.040348	12675	2727
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.radd_ext_Proper	40	0.730218	666	68	3.3.15	synth with cache (only 1: intros Az LS; only 1: elim ARth; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rmul_ext_Proper	40	0.010844	2	1	1	synth with cache (only 1: exact (Rmul_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ropp_ext_Proper	40	0.201931	102	13	14	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.eqb_spec	40	40.158613	62810	5065
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.singleton_spec	40	40.050872	14438	2013
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcomplements.Z_lt_abs_induction	40	40.063709	16131	4717
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	0.171216	143	22	16	synth with cache (only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_lim	40	40.024182	6879	2051
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_commutes	40	40.116596	44863	3278
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.mapi_2	40	40.114669	44600	4148
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.compare	40	40.123930	44998	4192
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_le_trans	40	40.084101	25337	3950
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.ropp_ext_Proper	40	10.435180	5677	553	12.10.2.7.8	synth with cache (only 1: intros; only 1: elim ARth; only 1: intros x1 x2 Ex y1 y2 Ey; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.rsub_ext_Proper	40	0.069026	8	2	3.3	synth with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.compare	40	40.126425	43578	6415
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.eq_dec	40	0.031387	1	1	0	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_lt_0_compat	40	40.047976	12072	3821
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_trans	40	4.968422	2823	799	0.0.1.2.2.1.0.4	synth with cache (only 1: intros x y z; only 1: intuition auto; Z.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: eapply Qlt_le_trans; only 1: eauto; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rlt_morph_Proper	40	40.106095	17003	1149
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_eq	40	40.059124	20338	2777
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_wd	40	40.034456	10442	1411
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcnot_lt_le	40	1.198808	221	71	3.4.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros H0; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcnot_le_lt	40	0.062480	15	7	1.2.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros H0; only 1: auto with qarith).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_not_le	40	0.053752	11	6	0.1.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros n m; only 1: apply Z.lt_nge).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcle_not_lt	40	0.052689	9	5	5.0.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: auto with qarith).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_succ	40	40.111330	24313	1358
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_le_le	40	40.081026	28094	3305
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_comm	40	40.543387	8994	1746
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nb_digits_del_head	40	40.073427	22832	2833
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nb_digits_iter_D0	40	0.641679	318	77	0.1.1.10	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: now Morphisms.f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRopp_morph_Proper	40	40.089667	9733	1548
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_morph_Proper	40	0.027276	1	1	0	synth with cache (only 1: apply (CRisRingExt R)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_surj	40	40.059170	19261	2629
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.normalise_sound	40	40.090779	31771	3472
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.append_correct1	40	40.056387	10879	1574
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	40	40.052700	5504	774
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	40	40.372214	12709	550
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	40	0.056609	5	5	0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: ok; only 1: simpl; only 1: ok).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_mem	40	40.111798	22308	1656
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_bounded	40	40.075258	21253	3203
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_length	40	40.067874	23096	3455
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_trans	40	40.041459	10612	968
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv8	40	40.005758	463	141
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P33	40	40.034455	10311	1739
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_equiv	40	40.051697	16878	2033
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_nat_S	40	0.157379	5	3	2.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zdivide_pol_sub_0	40	40.117125	39379	2600
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_contract	40	40.028041	4030	1043
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_le_0	40	40.033686	9531	2254
coq-tactician-stdlib.8.12.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc_ex	40	40.329046	15569	3308
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_1	40	40.171340	65427	3299
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_plus	40	2.877287	818	259	4.7.1.4.1	synth with cache (only 1: Nat.induct n; only 1: auto; only 1: intro n; only 1: simpl; only 1: now intros ->).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Signed.to_of	40	40.101425	32921	3051
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_mem	40	40.075603	19166	2378
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.add_cancel_l	40	40.158641	60876	1767
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_1	40	29.390044	17821	1228	3.1.24.29.22	synth with cache (only 1: intros p; only 1: constructor; only 1: intuition; only 1: auto with zarith; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_0	40	40.085912	28447	3284
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.add_cancel_r	40	0.060060	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros h; only 1: apply int_eqm in h; only 1: rewrite !add_spec in h; only 1: apply eqm_mod, eqm_sub in h; only 1: replace (_ + _ - _) with (φ (y) - φ (z)) in h by lia; only 1: rewrite <- eqm_subE in h; only 1: apply eqmI, h).
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.Y_unique	40	40.073856	24862	3359
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_refl	40	0.026978	4	4	0.0.0.0	synth with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_1	40	40.043516	5839	1212
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.074570	5	5	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_inj	40	40.109546	36367	4261
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_find_b	40	40.099418	34406	3373
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.elements_b	40	40.029788	5578	3581
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_2	40	40.038265	9163	3661
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40	40.070232	26791	2569
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.rev_nztail_rev	40	40.081124	27816	1628
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nzhead_D0	40	0.007804	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice_plus_one	40	40.053793	15244	2662
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nzhead_iter_D0	40	2.059000	2698	126	3.1.53	synth with cache (only 1: induction n; only 1: reflexivity; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_minus	40	40.090957	26820	4149
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.same_gen	40	40.068846	24156	1182
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nleb_antisym	40	40.086208	28618	4907
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nshiftr_nat_spec	40	40.040772	14996	2865
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zmult_rem_distr_l	40	40.048937	17307	2345
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rsub_ext_Proper	40	40.103404	20581	1342
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.eqb_refl	40	40.058893	20848	2341
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.create_spec	40	40.068331	17726	2289
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcomplements.Zcase_sign	40	40.114311	39803	2237
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_morph_T	40	25.932711	11224	2167	3.7.0.4.1.1.6.1	synth with cache (only 1: intros; only 1: destruct (CRltLinear R), p; only 1: intros H1 H2 H3; only 1: intro abs; only 1: destruct (CRltLinear R); only 1: intro; only 1: apply (CRisRingExt R); only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.create_ok	40	0.320176	117	34	2.2.1.1.3	synth with cache (only 1: constructor; only 1: intuition; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_CVU_prelim	40	40.020030	5729	1775
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_init	40	40.053013	17614	1286
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.map2_1	40	40.068142	19836	2180
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcomplements.sqr_pos	40	0.865535	163	14	18	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_cxe	40	40.186787	79936	2625
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xce	40	0.018523	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_morph_T	40	3.381702	1426	276	0.16.2	synth with cache (only 1: intros; only 1: intros x; only 1: apply (CRisRingExt R)).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRopp_morph_T	40	0.372206	78	26	2.0.4	synth with cache (only 1: intros a Ha; only 1: intros m Hm; only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Peq_ok	40	40.077380	20641	1007
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Ascii_as_OT.cmp_eq	40	40.301737	38575	1324
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_lt_le_0_compat	40	40.046500	10417	4227
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rminus_morph_Proper	40	40.098871	37369	2048
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_eucl_exist	40	40.075058	26422	2444
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40	40.135024	21642	2885
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcle_lt_or_eq	40	40.071191	22315	2359
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_add	40	40.060465	18753	1587
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Nplength_lb	40	40.149312	62330	3956
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rneq_symm	40	2.735160	3862	293	50	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.pow_N_pow_N	40	0.018471	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_0_l	40	40.226123	15916	2370
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nb_digits_nth	40	40.091981	34789	2444
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_norm	40	40.065564	19008	3120
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_l	40	3.335762	7202	277	73	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.append_correct2	40	40.053980	17903	3067
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_r	40	0.026316	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_r	40	0.027734	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.negate_correct	40	40.028495	6520	2476
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_comm	40	0.205387	69	13	0.2.8	synth with cache (only 1: intro; only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40	40.063499	8624	1002
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_l	40	0.028118	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rmatch	40	40.271535	121086	1280
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_comm	40	0.035748	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1	40	31.509920	16982	1566	2.7.1.0.0.5.18.6	synth with cache (only 1: intros m s1; only 1: intros n v le le'; only 1: symmetry; only 1: apply fold_rec; only 1: intros; only 1: intuition; only 1: intro; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_filter	40	40.086474	24226	875
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail00	40	40.053480	7784	1305
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.NoDupA_equivlistA_permut	40	40.041237	11914	3955
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.cross_product_eq	40	40.002448	272	169
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Q_Setoid	40	40.064608	20859	805
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pequiv_eq	40	23.003004	17349	1164	2.9.1.7.9.2.7.20.7.2.11	synth with cache (only 1: compute; only 1: split; only 1: compute; only 1: now f_equal; only 1: compute; only 1: intro; only 1: now subst; only 1: compute; only 1: intros; only 1: rewrite H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.FTC_Riemann	40	40.040740	12807	1894
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40	4.947410	474	234	2.5.1	synth with cache (only 1: intros x y z; only 1: intro; only 1: apply CReal_mult_proper_l, H).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	0.040933	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zgcd_pol_div	40	40.120321	4093	454
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_contract	40	40.026511	2259	772
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_le_0	40	40.036118	9142	2859
coq-tactician-stdlib.8.12.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.acc_implies_P_eventually	40	40.094882	33580	4047
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_2	40	40.158016	56109	2534
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_correct	40	40.055787	21648	1216
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Signed.to_int_inj	40	40.087598	26120	5771
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_filter	40	40.070125	17151	1799
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr0	40	40.185108	77992	568
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.Y_approx	40	40.071444	25980	2857
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_opp	40	40.083709	23560	2196
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_2	40	40.037671	5410	2133
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	0.391005	55	11	1.5.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: Z.nzsimpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40	40.151340	52904	3870
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_b	40	40.104337	30249	2401
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.filter_b	40	40.071990	19998	5548
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_sort	40	40.098692	32373	4150
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40	40.204980	86306	5410
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_shiftr	40	40.083638	29780	3842
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.revapp_nil_inv	40	40.063500	18924	3448
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_mult	40	40.060646	17316	4717
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_Psucc	40	40.025333	2303	979
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_ext	40	12.814610	3831	562	18.3	synth with cache (only 1: unfold Pequiv; only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nleb_trans	40	40.088461	33588	2381
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40	40.076829	29765	4771
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zmult_rem_distr_r	40	40.043567	14139	2818
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.eqb_sym	40	40.148113	43053	3113
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.bal_spec	40	40.055794	17111	2416
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_equal	40	40.071151	23516	2408
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_is_datan	40	40.028083	9090	2090
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_correct	40	40.078225	24136	3230
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.map2_2	40	40.166803	23354	3478
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil	40	0.008350	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lxl	40	40.174174	75385	1507
coq-tactician-stdlib.8.12.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.constructive_indefinite_ground_description_nat_Acc	40	19.947442	6363	2221	0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.1.1.0.2.1	synth with cache (only 1: intros H; only 1: pattern 0; only 1: apply Fix_F with (R := R); only 1: intros x IH; only 1: destruct (P_decidable x) as [Px| not_Px]; only 1: exists x; only 1: assumption; only 1: set (y := S x); only 1: assert (Ryx : R y x); only 1: unfold R; only 1: split; only 1: auto; only 1: auto; only 1: destruct (IH y Ryx) as [n Hn]; only 1: exists n; only 1: assumption; only 1: elim H; only 1: intros x Px; only 1: apply P_eventually_implies_acc with (n := x); only 1: replace (x + 0) with x; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRminus_morph_Proper	40	40.049522	11382	3891
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pinj_ext	40	11.509840	2400	458	16.3	synth with cache (only 1: unfold Pequiv; only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.P'_decidable	40	0.855787	477	69	16	synth with cache (only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Peq_spec	40	40.058253	18190	1330
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Ascii_as_OT.cmp_lt_nat	40	40.133525	51744	1617
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_le_0_compat	40	40.054661	12771	5497
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.sum_inequa_Rle_lt	40	0.145962	54	18	4.4	synth with cache (only 1: intros Ha'; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_mod_unique	40	40.084316	31958	1890
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_wd	40	40.051057	16650	2153
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qc_dec	40	40.136571	49081	2947
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Nplength_ub	40	40.097357	35331	2529
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_mul_0_l	40	40.087222	26650	1006
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_norm	40	26.806259	14074	1954	2.0.0.5.5.0.6.0.1.0.2.0.2.0.6.0.2.0.2	synth with cache (only 1: induction d; only 1: split; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l; only 1: simpl; only 1: auto; only 1: auto; only 1: simpl; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_0_r	40	40.137438	21232	3092
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.del_head_nth	40	40.075988	24063	3353
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_inj	40	40.068820	22532	2219
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.substring_correct1	40	40.071188	12644	3140
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rminus_eq_0	40	40.180919	73699	5498
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.cnf_of_list_correct	40	40.072597	24879	2551
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rrmatch	40	40.306442	53349	3504
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_2	40	40.043772	8058	2206
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.exists_filter	40	40.058019	18965	2290
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail0	40	40.046122	12799	3049
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	1.462194	261	109	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_1	40	2.386525	660	186	16	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_2	40	0.040775	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut_map.permut_map	40	40.078723	28564	3336
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_ext	40	40.004740	804	149
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_dec	40	40.081793	27680	2430
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_const_bound	40	40.037525	12133	2062
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40	40.082963	22217	2795
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	40	40.047948	12425	1562
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_lt_0	40	40.034371	7571	3068
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_1	40	40.206360	82542	1741
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Pphi0	40	19.058021	12581	512	87	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_nat_correct	40	40.039036	13239	1469
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Signed.to_int_pos_surj	40	40.053437	15592	3447
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.exists_filter	40	40.099458	33350	3098
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.PreWeakKonigsLemma	40	40.118196	50631	2331
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_0_abs	40	40.074596	29373	1441
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_1	40	40.140225	49719	3358
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_1	40	0.082324	17	6	5.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_2	40	0.031661	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_3	40	40.043471	10611	2338
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Pphi1	40	2.013313	1617	78	39	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.find_o	40	40.031494	6225	3289
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.for_all_b	40	40.020513	3571	2504
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40	40.153093	62109	4310
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3	40	40.149905	55713	4483
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incrbis	40	40.052049	19180	1857
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.rev_nil_inv	40	40.066284	17425	3561
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.byte_dec_lb	40	40.282954	50621	3190
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_const	40	40.100766	38111	3985
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_add	40	40.046066	3924	578
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nshiftl_nat_spec_low	40	40.088701	33757	4999
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nleb_ltb_trans	40	40.094172	27995	1529
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Pshiftl_nat_0	40	0.020355	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Pshiftl_nat_S	40	0.026985	3	3	0.0.0	synth with cache (only 1: intros q r; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_rem	40	40.042693	12826	3648
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.eqb_eq	40	40.058467	14008	2899
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.eqb_neq	40	0.015960	1	1	0	synth with cache (only 1: now rewrite <- not_true_iff_false, Pos.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.eqb_compat	40	0.024658	3	3	0.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!N.eqb_eq, Exx', Eyy').
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_o	40	13.174671	7469	1473	4.5.1.3.5.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intros; only 1: rewrite <- find_mapsto_iff; only 1: split; only 1: intros; only 1: rewrite empty_mapsto_iff in H; only 1: now auto with arith; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_empty	40	40.041337	10795	5615
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_cons	40	40.102496	33885	2906
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.bal_ok	40	40.105458	37034	1139
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Ratan_CVU'	40	40.022014	6630	1676
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_gxg	40	40.185925	79221	1855
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xll	40	0.016539	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xgg	40	0.016316	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Signed.of_int_norm	40	18.224189	15610	2131	0.7.0.24.0	synth with cache (only 1: destruct d; only 1: simpl; only 1: now induction d; only 1: simpl; only 1: now destruct nzhead).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PX_ext	40	40.041497	7896	1159
coq-tactician-stdlib.8.12.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_indefinite_ground_description	40	40.203172	79656	6212
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRminus_morph_T	40	40.793132	13844	2404
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Ascii_as_OT.cmp_antisym	40	40.052908	20868	394
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_lt_reg_l	40	40.071805	22055	3415
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.cons_cardinal_e	40	40.029658	10228	1625
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_unique	40	40.078886	26791	3647
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40	40.045815	14308	1950
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_le_dec	40	40.094444	29706	4343
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Npdist_eq_1	40	40.105049	38794	2659
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_mul_0_r	40	40.059535	15661	1164
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_inj	40	40.054325	14849	3323
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_lt_compat_l	40	40.100909	30378	2462
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nth_revapp_r	40	40.059540	20540	1966
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_iff	40	40.042496	11009	3598
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.substring_correct2	40	40.046504	9337	5879
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_cancel_l	40	40.079197	29096	2642
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.eq0_cnf	40	40.085832	29832	1771
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1b	40	40.122890	43652	3332
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lor	40	40.051266	13375	3070
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.lbal_match	40	40.409711	96452	1426
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0.019598	1	1	0	synth with cache (only 1: exact (rrmatch _ _ _)).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_1	40	40.041679	9581	1746
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_bool_iff	40	40.098025	36753	2868
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_N_ext	40	40.004967	964	147
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut_permut.Permutation_impl_permutation	40	40.052078	16698	3707
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.Riemann_integrable_scal	40	40.049058	15818	2178
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40	40.102401	35449	3823
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_lt_0_var	40	40.039000	9937	3180
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	40	40.127637	10711	1368
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_2	40	40.081610	26962	1415
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.In_eq_iff	40	0.320762	222	37	0.8.3	synth with cache (only 1: intro H; only 1: rewrite H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.mem_iff	40	0.163063	150	24	13	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_nat	40	40.181273	20933	1916
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_add	40	40.056882	13235	4082
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_unique	40	40.082154	20589	2236
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.inductively_barred_at_decidable	40	40.121730	46328	3927
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_1	40	40.040948	12034	1846
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.env_morph	40	40.078439	27271	1374
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_bst	40	40.212977	16596	2508
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_invQ	40	3.543515	1907	270	13.10	synth with cache (only 1: intros a Ha; only 1: f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40	40.046781	16796	1978
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.exists_b	40	40.036900	6454	4137
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3w	40	40.091614	29456	3471
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.E_ST	40	1.236702	1687	166	4.2.18.2.8.2	synth with cache (only 1: split; only 1: auto with arith; only 1: auto with relations; only 1: red; only 1: intros x y z; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incr	40	40.036019	9699	1949
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.rev_lnorm_rev	40	40.066793	19849	2870
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.byte_dec_bl	40	40.123960	34739	1044
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_scal	40	40.074939	17882	3389
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_mult	40	40.028195	2615	702
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nltb_leb_trans	40	40.074307	23968	3594
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Pshiftl_nat_N	40	40.077599	26778	3071
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zmult_rem	40	40.047906	16811	3276
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.ascii_N_embedding	40	40.166581	70007	3709
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_a	40	40.165668	70015	2417
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_add	40	40.049452	14374	4764
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_o	40	0.206219	37	9	3.2	synth with cache (only 1: intros n m s1 s2; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil_inv	40	40.103156	34839	4272
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Ratan_CVU	40	40.032181	10561	1896
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec'	40	40.039631	10472	1764
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lex	40	40.049767	16495	1527
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Signed.of_inj_pos	40	40.041036	9629	3364
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.345013	106	49	0.0.0.0.0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: ct; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: ct).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec	40	1.937996	180	82	0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: induct ltac:(s) ltac:(x); only 1: intuition_in; only 1: intuition_in; only 1: eauto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: intuition_in; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.jump_add'	40	40.044669	13160	723
coq-tactician-stdlib.8.12.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_definite_ground_description	40	40.050604	14742	5292
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRopp_involutive	40	40.786312	15233	1407
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Ascii_as_OT.lt_trans	40	40.867881	32673	3523
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_Leaf	40	3.811764	6388	461	2.0.1.39.2	synth with cache (only 1: intros q; only 1: destruct q; only 1: simpl; only 1: trivial; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_lt_reg_r	40	40.058665	5142	1524
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_tcc	40	40.028217	7006	976
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_unique	40	40.095561	35207	3953
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_0_l	40	0.073305	21	5	4	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_0_r	40	0.021268	4	4	0.0.0.0	synth with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_0_l	40	0.409111	112	28	0.8.0	synth with cache (only 1: intros; only 1: Z.bitwise; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_0_r	40	0.019938	4	4	0.0.0.0	synth with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_comm	40	40.047063	12697	1128
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcopp_le_compat	40	40.073855	22375	3288
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_1_r	40	0.717152	461	97	0.11.0	synth with cache (only 1: intros; only 1: Z.nzsimpl; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_1_r	40	0.079987	14	5	6.0	synth with cache (only 1: intros; only 1: now Z.nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Alt_PI_tg	40	9.994899	1508	557	0.2.0.0.1.0.5	synth with cache (only 1: intros Eq1; only 1: unfold Ratan_seq, PI_tg; only 1: simpl; only 1: rewrite pow1; only 1: unfold Rdiv; only 1: rewrite Rmult_1_l; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Npdist_eq_2	40	40.112897	43032	3905
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_iff	40	40.056537	14382	4472
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_mul_l	40	40.056909	15633	1000
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40	40.045646	13417	2134
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nth_revapp_l	40	40.050861	15647	2872
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Signed.of_to	40	40.076650	30763	1823
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.prefix_correct	40	40.096831	30184	3538
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_em	40	40.084649	33345	1832
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_commutes	40	40.051720	14300	2955
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.xnormalise_correct	40	40.040541	12763	1823
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_land	40	40.045509	11664	2649
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbal'_match	40	40.329362	70482	1900
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zabs.Zabs_ind	40	0.993956	774	112	0.3.7.0.2	synth with cache (only 1: intros; only 1: Z.destruct_max n; only 1: Z.swap_greater; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.In_compat	40	0.116721	20	6	3	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_2	40	40.039216	8415	1544
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_bool_eq	40	40.069994	16533	6688
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_0	40	40.005521	1629	142
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_eq_bool	40	0.009180	1	1	0	synth with cache (only 1: apply Qeq_bool_iff).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40	0.498130	921	39	42	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	0.039121	4	4	0.0.0.0	synth with cache (only 1: destr_bool; only 1: split; only 1: congruence; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0.008621	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut_permut.permut_eqA	40	40.059083	19299	3152
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.empty_spec	40	0.229801	269	26	20	synth with cache (only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40	40.106629	3412	1539
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.pos_le_add	40	40.162045	61306	4534
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_lt_0	40	40.034271	7521	2883
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zabs.Zabs_intro	40	3.501116	3750	385	6.20	synth with cache (only 1: intros x y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.not_mem_iff	40	40.124201	45008	2657
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.equal_iff	40	0.028957	9	2	6	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.subset_iff	40	0.053333	20	4	8	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_nat	40	40.103649	37460	2844
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40	40.062031	22229	2780
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl0	40	40.156312	55972	2848
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	40	40.086573	10599	1366
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Pjump_add	40	40.042618	13224	1763
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_2	40	40.045909	12000	2660
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_lt_tree	40	40.039314	7416	2226
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CRealQ_dense	40	41.058067	31333	1300
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40	40.079351	28960	3340
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_o	40	27.392401	19414	2674	0.0.0.0.18.0.8.3.1	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intros s2; only 1: rewrite <- 2!find_mapsto_iff; only 1: constructor; only 1: apply add_3; only 1: auto; only 1: apply add_2; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.xgmapi	40	40.051141	15313	3466
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.Equal_ST	40	40.054225	20601	783
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_twice_plus_one	40	40.030740	6447	1949
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nzhead_nonzero	40	40.089492	29782	3431
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40	40.076394	27638	3782
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_o	40	4.535129	1407	356	0.0.0.0.0.8.1.0	synth with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: intuition; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- 2!find_mapsto_iff; only 1: apply add_neq_mapsto_iff; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.rsub_ext4_Proper	40	40.044966	13608	1050
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nltb_trans	40	40.071779	22762	3777
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Pshiftl_nat_plus	40	40.078220	28938	6444
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.unorm_0	40	6.124182	1325	371	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4.1	synth with cache (only 1: induction d; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zplus_rem	40	40.070592	27331	2418
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.N_ascii_embedding	40	40.077108	30207	2599
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.eqb_false	40
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.add_fold	40	40.047631	13711	4824
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zabs.Zabs_dec	40	18.733758	17398	1483	3.0.9.33.3	synth with cache (only 1: intro n; only 1: destruct n; only 1: auto with relations; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.add_ok	40	40.030751	7938	692
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_ok	40	40.048626	17111	932
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.unorm_nonnil	40	8.030212	3050	930	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.0	synth with cache (only 1: unfold unorm; only 1: generalize (nzhead_nonzero d); only 1: destruct nzhead; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.unorm_D0	40	0.005216	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.unorm_iter_D0	40	0.010449	1	1	0	synth with cache (only 1: now induction n).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Ascii_as_OT.lt_not_eq	40	40.091191	6221	1534
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRopp_gt_lt_contravar	40	40.198540	12095	631
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_empty_x	40	40.106886	35602	5768
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_reg_l	40	40.029325	5062	1394
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.cons_Cmp	40	40.075441	25877	2564
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inf_iff	40	40.117491	16670	3302
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_wd	40	40.041987	9962	1532
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_same_full	40	40.056637	18474	2721
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcle_minus_iff	40	40.873843	15197	2018
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Ratan_is_ps_atan	40	40.016743	4622	1843
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Npdist_comm	40	40.076761	26569	3252
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.nztail_to_uint	40	40.070517	19131	2719
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_mul_r	40	40.053936	14473	890
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_lt_reg_l	40	40.194986	23742	2491
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.app_del_tail_head	40	40.075846	27419	3388
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Signed.to_of	40	40.094977	34636	3664
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.index_correct1	40	40.091499	28494	5173
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_dne	40	40.043691	12956	1881
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_init	40	40.086715	23561	1987
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lxor	40	40.045135	10820	3213
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.xnegate_correct	40	40.031944	8364	2240
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40	40.270239	39369	1056
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_match	40	0.019190	1	1	0	synth with cache (only 1: exact (rmatch _ _ _)).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_1	40	40.043997	9770	1316
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_1	40	40.006335	640	183
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_bool_neq	40	40.111408	42091	1926
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut_permut.permutation_Permutation	40	40.091949	33546	3341
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.mem_node	40	40.061056	19791	3277
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.max_var_le	40	40.092428	30011	4678
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.tan_gt_0	40	40.050546	14010	3299
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.empty_iff	40	40.127647	51234	2202
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.is_empty_iff	40	0.021515	2	1	1	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.singleton_iff	40	0.011654	2	1	1	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_correct	40	40.051614	16682	2548
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_correct	40	0.082272	8	1	7	synth with cache (only 1: apply two_power_pos_equiv).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40	40.066856	21712	2627
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Pjump_xO_tail	40	40.048467	14127	2360
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	40	40.042749	15094	1753
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.WeakKonigsLemma	40	40.116095	48457	2499
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_1	40	40.036649	6571	1377
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_gt_tree	40	40.136821	10718	2162
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.empty_1	40	0.048641	108	9	15	synth with cache (only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.empty_sorted	40	0.007658	3	1	2	synth with cache (only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40	40.258411	104775	6123
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.inject_Q_mult	40	40.071605	12463	2164
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.gmapi	40	40.067133	20397	3456
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.In_m	40	40.055970	18874	2019
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_firstr	40	40.044399	15378	1127
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_id	40	40.048086	14562	3282
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_2	40	12.182489	1953	464	0.0.0.0.0.0.0.3.0.0.4	synth with cache (only 1: red; only 1: unfold Add, MP.Add; only 1: intros; only 1: do 2 (rewrite filter_spec; auto); only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_b	40	40.028436	6334	2537
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.same_genZ	40	40.067998	22338	1219
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nltb_leb_weak	40	40.068487	22952	2354
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Pxor_semantics	40	40.064592	21378	4757
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zle_cases	40	40.107055	35208	3017
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zplus_rem_idemp_l	40	40.054329	16641	4147
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_2	40	11.499862	1263	327	0.0.0.0.0.0.0.2.0.1.2	synth with cache (only 1: red; only 1: unfold Add, MP.Add; only 1: intros; only 1: do 2 (rewrite filter_iff; auto); only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.nat.of_to_nat	40	40.115525	37750	977
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_1	40	40.054582	16073	4498
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_2	40	0.040658	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set relations).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zabs.Zabs_spec	40	40.099941	26754	1656
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.N_ascii_bounded	40	40.027389	10654	1242
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.join_spec	40	40.055284	17923	2388
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_spec	40	40.037643	10918	2797
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nb_digits_unorm	40	40.106922	37823	2367
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Ascii_as_OT.compare_helper_eq	40	40.062842	20685	2865
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRopp_lt_cancel	40	40.041666	7716	3692
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_empty	40	40.078056	23825	4971
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi0	40	2.951806	1748	76	44	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_reg_r	40	40.039454	6165	2100
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_Cmp	40	40.069401	27284	1643
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.isok_iff	40	40.105487	13729	2495
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.isok_Ok	40	0.070331	162	12	18	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi1	40	2.895541	1715	70	41	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.Induction.bi_induction	40	40.051568	13580	2458
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_mult	40	40.052751	17880	2676
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Ascii_as_OT.compare_helper_gt	40	4.637309	3561	456	9.21	synth with cache (only 1: red; only 1: now apply N.gt_lt).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_minus_iff	40	40.142190	16592	1986
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_continuity	40	40.027857	8145	2180
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Nplength_ultra_1	40	40.081516	30391	2900
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_add	40	40.038800	8212	857
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Signed.of_to	40	40.090107	29747	2834
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_lt_reg_r	40	40.055522	14547	3510
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.app_int_del_tail_head	40	40.051716	13444	4087
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Signed.to_int_inj	40	40.130340	52902	2825
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.index_correct2	40	40.059042	13091	4721
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_eq	40	40.044870	14391	1997
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_equal	40	40.083092	25754	2813
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.cnf_normalise_correct	40	40.901750	13562	2038
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.lbal_spec	40	40.233467	29738	2892
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_cst	40	40.004641	902	218
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_bool_iff	40	40.093896	31037	3069
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40	40.089008	30145	4274
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.subset_Leaf_s	40	0.281514	138	20	10	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.max_var_correct	40	40.105203	32223	3814
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.tan_lt_0	40	40.034021	8739	3052
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_iff	40	40.110033	40934	2443
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_is_exp	40	40.063113	23152	1912
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_neq_iff	40	1.052705	268	74	0.4.3.0	synth with cache (only 1: rewrite add_spec; only 1: intuition; only 1: destruct H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40	40.153439	59159	1071
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Pjump_pred_double	40	40.036065	9733	1529
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_find	40	40.081904	21099	1791
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid_rec	40	40.114800	22629	2005
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_iff	40	1.856772	713	82	0.1.0.19	synth with cache (only 1: constructor; only 1: rewrite remove_spec; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40	40.106061	41709	3450
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.is_empty_1	40	40.246856	13161	1003
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.mapi_1	40	40.106473	38123	4168
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40	40.109269	39766	3293
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.Rup_nat	40	40.791786	49092	1045
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_inv	40	40.089716	34076	1904
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Z_of_nat_complete	40	40.083340	32334	1416
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40	0.035958	5	4	0.1.0.0	synth with cache (only 1: intros H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_comp	40	40.068955	27274	1742
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40	2.639763	1183	283	10.8	synth with cache (only 1: simpl_relation; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.union_filter	40	40.054542	8350	1708
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40	40.145702	23983	3314
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_b	40	40.048040	11367	3993
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_Zeqb_ok	40	40.078136	25138	1951
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nleb_double_mono	40	40.087633	30551	3311
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nxor_semantics	40	40.104886	40253	3178
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zlt_cases	40	40.198441	45346	2762
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_reg_l	40	22.972219	21301	2252	5.0.9.8.2.13	synth with cache (only 1: intros x y z; only 1: red; only 1: intros; only 1: apply H; only 1: apply CReal_plus_lt_compat_l; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zplus_rem_idemp_r	40	40.045280	13102	3301
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.union_filter	40	40.045991	10001	2075
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_reg_r	40	2.280903	357	118	1.0.0.0.0.3.0	synth with cache (only 1: intros; only 1: rewrite (CReal_plus_comm y), (CReal_plus_comm z) in H; only 1: intro abs; only 1: apply H; only 1: clear H; only 1: apply CReal_plus_lt_compat_l; only 1: exact abs).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.nat.to_of_nat	40	40.033827	8159	776
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union_inter	40	40.049545	14186	4246
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zabs.Zsgn_spec	40	40.088280	20956	1451
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.is_empty_2	40	14.351345	13246	1095	5.7.7.8.1.24	synth with cache (only 1: intros m a b Ha; only 1: red; only 1: destruct m; only 1: intuition; only 1: inversion_clear H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.ascii_nat_embedding	40	40.153054	66673	2932
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.join_ok	40	40.044638	13841	1837
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nzhead_invol	40	40.107296	33371	6045
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_fun	40	40.087089	31976	2944
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRopp_ge_le_contravar	40	40.092874	9328	2489
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_gt_reg_l	40	40.056548	7026	1488
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40	40.049436	17054	1616
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.mem_spec	40	40.075247	16713	3178
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ok	40	40.034468	8712	1843
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_pos	40	40.086973	29997	3456
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_succ	40	40.068671	23942	1364
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.String_as_OT.nat_of_ascii_inverse	40	40.114362	43727	2520
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcplus_le_compat	40	40.155739	21208	3403
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.derivable_pt_lim_ps_atan	40	40.032448	10616	2087
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Nplength_ultra	40	40.058074	19381	3563
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Signed.to_of	40	40.084780	23025	5381
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_opp	40	40.106541	35552	1337
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nzhead_revapp_0	40	40.121150	46186	3793
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Signed.to_int_pos_surj	40	40.072190	22498	3616
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_trans	40	40.057430	6271	1093
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.index_correct3	40	40.053904	13788	3062
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_empty	40	40.056126	13412	4993
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.lbal_ok	40	40.067731	12426	1085
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_l	40	40.003866	783	153
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_bool_imp_le	40	40.087245	30235	3706
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qnot_eq_sym	40	0.031608	5	2	1.2	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.cnf_negate_correct	40	42.800654	13184	1442
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.subset_spec	40	40.055024	18372	2006
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux	40	40.081320	24755	4063
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_ge_0_3PI2	40	40.030580	6045	3126
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_is_exp	40	40.081093	30936	2839
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_M_r	40	40.085653	28086	1713
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.mkPinj_ok	40	40.043426	12540	1666
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_in	40	40.054247	7308	784
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	15.107307	1730	477	0.4.8.1	synth with cache (only 1: destruct n; only 1: compute; only 1: nzsimpl; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid	40	40.279716	129147	2029
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.059422	6	6	0.0.0.0.0.0	synth with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: assert (c | d) by auto; only 1: assert (d | c) by auto; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_neq_iff	40	40.060605	19789	1407
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.for_all_iff	40	0.045787	5	4	0.0.1.0	synth with cache (only 1: intros; only 1: split; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.exists_iff	40	0.055994	8	4	0.1.3.0	synth with cache (only 1: intros; only 1: split; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40	40.127016	52106	3225
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.elements_iff	40	0.543929	689	89	0.0.0.0.0.0.20	synth with cache (only 1: split; only 1: intros; only 1: apply <- elements_spec1; only 1: auto; only 1: intros; only 1: apply -> elements_spec1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_sub_ext	40	13.856378	5570	454	39	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_add_0_r	40	0.106533	5	4	0.0.1.0	synth with cache (only 1: intros x; only 1: rewrite (ring_add_comm x); only 1: rewrite ring_add_0_l; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.mapi_2	40	40.114385	41553	4095
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_0_compat	40	40.340702	7316	1358
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double_plus_one	40	40.135691	54646	1195
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Z_of_nat_prop	40	40.128708	50532	2414
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_opp	40	40.156736	63997	4407
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_add_assoc1	40	3.736818	654	108	1.5.9.1	synth with cache (only 1: intros; only 1: rewrite <- ring_add_assoc; only 1: rewrite (ring_add_comm x); only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.mem_m	40	40.069558	23391	2019
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_gt_ZERO	40	7.478637	6187	806	1.2.3.3.3.1.15	synth with cache (only 1: destruct x; only 1: Z.swap_greater; only 1: intros; only 1: easy; only 1: intros; only 1: split; only 1: now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40	40.045457	11116	3446
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_add_assoc2	40	0.596301	72	22	0.1.0.5.0	synth with cache (only 1: intros; only 1: rewrite (ring_add_comm y); only 1: rewrite <- (ring_add_assoc x); only 1: rewrite (ring_add_comm x); only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_union	40	40.058553	5510	931
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ1_pos_sub	40	40.028782	6609	2515
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_b	40	40.038551	6185	1050
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_1	40	1.481934	479	118	9.0.0.0.0.1	synth with cache (only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Por_semantics	40	40.058669	18510	4987
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono	40	40.091540	18679	3455
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zge_cases	40	40.286463	52087	2601
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zmult_rem_idemp_l	40	40.053638	17528	3641
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.one_succ	40	10.898267	21228	255	0.2.0.0.2.195	synth with cache (only 1: generalize (PeanoNat.Nat.lt_succ_diag_r 0); only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro H; only 1: simpl; only 1: nzsimpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_union	40	40.041998	8793	1558
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_compat_l	40	40.324152	26715	2529
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_diff_inter	40	40.035778	8950	4404
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	3.821960	6189	109	0.0.108	synth with cache (only 1: hnf; only 1: simpl; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_ge0	40	30.990688	22280	2022	0.0.1.2.32.2	synth with cache (only 1: intros a b; only 1: Z.swap_greater; only 1: intros; only 1: apply Z.div_pos; only 1: Z.order; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zabs.Zabs_nat_le	40	40.094524	32783	2936
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.mem_1	40	40.149324	5568	1038
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	1.406266	3888	81	87	synth with cache (only 1: now BinInt.Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.nat_ascii_embedding	40	40.036697	11054	1058
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_succ	40	0.431102	62	11	6.1.0	synth with cache (only 1: intros l2; only 1: compute; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_2	40	9.769906	2661	865	0.0.1.0.0.1.0.0.0.0.3.6.0	synth with cache (only 1: intros; only 1: revert H; only 1: rewrite for_all_filter; only 1: rewrite <- is_empty_iff; only 1: unfold Empty; only 1: intro H; only 1: generalize (H x); only 1: rewrite filter_spec; only 1: destruct (f x); only 1: auto; only 1: generalize (H x); only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nztail_invol	40	40.079986	23822	2954
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.unorm_invol	40	0.013352	1	1	0	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40	40.024991	6592	1013
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_trans	40	40.108158	38558	3175
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.nat.to_of_nat_iff	40	40.073462	1886	324
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_ge_reg_l	40	40.038925	8638	1908
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRopp_plus_distr	40	40.931723	6754	1730
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare	40	40.065311	22212	1623
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ext	40	40.026521	4669	724
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_1_l	40	1.591367	237	83	2.2.1.7	synth with cache (only 1: split; only 1: apply CReq_sym; only 1: apply CRisRing; only 1: apply CRisRing).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_seq	40	0.080854	19	6	4.1	synth with cache (only 1: intros n m; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_inf	40	40.191805	28408	3324
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	0.220904	65	21	7.1	synth with cache (only 1: intros; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.String_as_OT.lts_tail_unique	40	40.103475	36452	2952
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_le_compat_r	40	40.043613	11577	2372
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Npdist_ultra	40	40.027385	7041	2428
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.derivable_pt_ps_atan	40	40.034896	10973	2469
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Signed.to_int_inj	40	40.082676	22011	5987
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nzhead_revapp	40	40.113460	37824	3937
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Signed.of_int_norm	40	40.074485	23415	3902
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_0_l	40	12.052248	3132	298	0.2.11.0.0.10	synth with cache (only 1: intros a; only 1: unfold Z.eq, Z.add; only 1: simpl in *; only 1: induction a; only 1: simpl; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_trans	40	40.037668	11079	2238
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_add	40	40.063992	17629	4220
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.index_correct4	40	40.062324	19811	2754
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nor_semantics	40	23.946490	21871	2009	4.0.84	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite <- !Ntestbit_Nbit; only 1: now rewrite <- N.lor_spec).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_add_r	40	40.005668	1659	131
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40	40.242610	15169	2147
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_bool_comm	40	40.103808	35814	3150
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.eval_nformula_dec	40	40.020663	5560	1429
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux'	40	40.144428	17303	3064
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.equal_subset	40	40.113829	42169	1868
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.form1	40	40.045567	12724	2200
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.form2	40	1.709285	182	85	2.0.0.0.0.0.0.0	synth with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: rewrite <- (cos_neg q); only 1: replace (- q) with ((p - q) / 2 - (p + q) / 2) by field; only 1: rewrite cos_plus; only 1: rewrite cos_minus; only 1: ring_Rsqr).
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.string_of_list_ascii_of_string	40	6.262107	4297	884	0.19.0.0.0.0.0	synth with cache (only 1: elim s; only 1: simpl; only 1: easy; only 1: intros; only 1: simpl; only 1: rewrite ?H; only 1: now constructor).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_0_spec	40	40.058486	19748	1376
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.pow_pos_add	40	40.057847	16849	697
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.Dcompare_inf	40	0.065420	15	6	0.0.0.2	synth with cache (only 1: destruct r; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_bst	40	40.045203	6924	2662
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_bezout	40	40.104085	28290	2414
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40	40.127488	50691	4321
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.mem_b	40	40.077692	25799	2994
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.map_1	40	40.094063	31974	3783
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double	40	40.026955	6515	1261
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Z_of_nat_set	40	40.139545	54557	2384
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_mirr	40	40.108747	42941	3437
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_S	40	40.037469	12368	1536
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.singleton_m	40	40.087812	30969	3315
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_zero	40	40.058614	15858	402
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l	40	40.072649	3656	1042
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.isok_iff	40	40.222366	10366	2130
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_add	40	40.071551	23900	2434
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_o	40	40.034819	8006	3106
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_o	40	0.103841	10	6	0.1.0.1.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_o	40	0.332333	32	18	1.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition; only 1: auto with map).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nleb_double_mono_conv	40	40.209457	29246	2806
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zgt_cases	40	40.105401	36590	3521
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40	8.179343	7874	1033	0.0.0.5.6.1.0.0.13.2.2.0	synth with cache (only 1: split; only 1: intros GAC_rel A B R; only 1: firstorder; only 1: apply (GAC_rel A B (fun x => exists y, R x y) R); only 1: firstorder; only 1: auto; only 1: intros OAC_rel A B P R H; only 1: firstorder; only 1: destruct (OAC_rel A B R) as (f, Hf); only 1: eauto; only 1: exists f; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zmult_rem_idemp_r	40	40.043871	13221	3280
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_succ_l	40	20.922999	5496	581	1.0.0.24	synth with cache (only 1: intros a n; only 1: unfold Z.succ, Z.pred, Z.eq; only 1: simpl; only 1: now rewrite add_succ_l).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_1	40	40.057023	15336	3535
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.In_compat	40	0.053244	1	1	0	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_lt_compat	40	40.710392	25068	2627
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union	40	40.031171	7260	4172
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_lt	40	40.073489	25211	3223
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zabs.Zabs_nat_lt	40	40.081848	29248	2557
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_0_r	40	4.975085	275	71	0.3.4	synth with cache (only 1: compute; only 1: intros (Hr, Hr'); only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.mem_2	40	40.083564	17489	4991
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.nat_ascii_bounded	40	40.062749	4288	227
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_3	40	40.049067	13757	2853
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.norm_invol	40	40.123775	50602	536
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40	40.042540	13955	1360
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_not_eq	40	40.128932	48060	4758
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.nat.to_of_nat_option_map	40	40.036811	8751	197
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_reg_pos_r	40	40.071765	18759	4007
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.pow_pos_add	40	40.048974	16427	851
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_1_r	40	40.026685	5628	1339
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_ok	40	40.132279	10896	730
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_1	40	40.075638	28192	2512
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.String_as_OT.lt_trans	40	40.113353	39448	3795
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40	40.050492	10637	2435
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.ps_atan_continuity_pt_1	40	40.026682	9015	2268
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Signed.to_int_pos_surj	40	40.099163	29924	5317
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Signed.of_inj_pos	40	40.054995	16848	2992
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nzhead_rev	40	40.050144	12993	2118
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_le_trans	40	40.044888	13757	2123
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.add_fold	40	40.073643	22453	3202
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Pand_semantics	40	40.063079	20017	5383
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nand_semantics	40	0.552778	163	78	0.0.0.1.0.0.0.0.0.1	synth with cache (only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite andb_false_r; only 1: simpl; only 1: rewrite <- Ntestbit_Nbit, <- !Ptestbit_Pbit; only 1: apply N.pos_land_spec).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_r	40	40.007086	2158	117
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_bool_refl	40	40.161633	64225	2991
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_ok	40	40.211831	7222	778
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_correct_aux	40	40.066777	15665	3391
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.xdenorm_correct	40	40.084004	28962	2227
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.equal_spec	40	40.063415	19940	3640
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.form3	40	40.035475	9238	1874
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_bool_sym	40	2.950111	1996	260	0.0.0.27	synth with cache (only 1: induction 1; only 1: apply eq_true_iff_eq; only 1: rewrite !Qeq_bool_iff; only 1: now symmetry).
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.list_ascii_of_string_of_list_ascii	40	40.226505	98725	2887
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.ceqb_spec	40	40.077975	27251	227
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_split	40	40.049767	12476	2542
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.Zcompare_rect	40	40.075764	25338	2790
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.Zcompare_rec	40	0.059886	5	5	0.0.0.0.0	synth with cache (only 1: intros H1 H2 H3; only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_find	40	40.068186	18522	2501
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_1	40	9.215593	3100	1096	0.0.0.0.0.0.2.6	synth with cache (only 1: intros i; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_mult	40	40.023681	6360	1250
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_2	40	0.041413	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.empty_b	40	40.162095	65300	2418
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.map_2	40	40.089636	26516	3961
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_incr	40	40.099547	29416	3371
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_plus	40	40.069666	24563	3714
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.natlike_ind	40	40.138564	49201	4082
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_pred	40	40.082895	28344	1969
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.add_m	40	40.041864	6234	3463
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_compat_r	40	40.039259	2615	604
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_mul	40	40.036076	7902	3657
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_ext	40	0.039786	7	3	0.4.0	synth with cache (only 1: intros x y H; only 1: rewrite H; only 1: rrefl).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.isok_Ok	40	40.242134	63747	2436
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_b	40	40.032848	6044	3123
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_reg_l	40	1.390165	184	50	0.0.0.5.1.0	synth with cache (only 1: intros; only 1: intro abs; only 1: apply H0; only 1: apply (CReal_mult_lt_compat_l x); only 1: exact H; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.form4	40	10.907198	1199	650	0.0.0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: pattern q at 3; only 1: replace q with ((p + q) / 2 - (p - q) / 2); only 1: rewrite sin_plus; only 1: rewrite sin_minus; only 1: ring; only 1: pattern q at 3; only 1: rewrite double_var; only 1: unfold Rdiv; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40	40.138591	33625	3249
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40	40.222827	94195	5463
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40	0.117114	60	24	1.0.0.1.1.0.0	synth with cache (only 1: intros D_iota A P H; only 1: destruct D_iota with (P := P) as (x, H1); only 1: destruct H; only 1: auto; only 1: exists x; only 1: apply H1; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zle_bool_imp_le	40	40.320196	37290	2134
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zle_imp_le_bool	40	0.072095	8	4	0.0.4.0	synth with cache (only 1: unfold Z.le, Z.min; only 1: intuition; only 1: apply Z.leb_le; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40	0.852839	948	150	1.0.14	synth with cache (only 1: compute; only 1: intros A B P R H; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_Zquot	40	40.042324	14917	2099
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40	0.299168	222	47	0.4.0.6.0	synth with cache (only 1: intros D_epsilon A P H; only 1: destruct D_epsilon with (P := P) as (x, H1); only 1: auto; only 1: exists x; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_2	40	40.068673	19421	3507
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.mem_spec	40	40.071781	22656	3333
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_compat	40	40.371607	18336	2219
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_plus	40	40.066580	26104	2371
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_ge	40	40.102455	22568	2228
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_le	40	0.026620	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_succ_r	40	40.026472	3386	670
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.find_2	40	40.232364	7376	1028
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.ascii_of_byte_of_ascii	40	40.031092	6375	356
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_0_l	40	0.989263	42	15	0.2.0.2.0	synth with cache (only 1: unfold Z.mul, Z.eq; only 1: intro H; only 1: simpl; only 1: rewrite <- !mul_add_distr_l; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_4	40	40.090038	29799	3653
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nzhead_app_nzhead	40	40.071551	24573	1241
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_gt_tree	40	40.086417	30759	2512
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.add_spec	40	40.084521	28219	3600
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_lt_reg_pos_r	40	40.054752	11472	5434
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ceqb_spec	40	40.078135	22186	204
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_spec	40	40.037886	9478	2019
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_assoc	40	40.473778	7753	1270
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40	40.058101	19089	2342
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_comm	40	0.051288	7	3	0.4.0	synth with cache (only 1: intros; only 1: destruct (CRisRing R); only 1: apply Rmul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40	40.044406	12690	2264
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_lt_compat_r	40	40.046104	12493	2679
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_eq_DatanSeq_interv	40	40.042462	14776	2076
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Signed.of_int_norm	40	40.119066	39099	5683
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zne_left	40	40.346118	30190	2742
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zegal_left	40	0.020713	2	1	1	synth with cache (only 1: now rewrite <- Z.sub_move_0_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zle_left	40	0.007862	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zle_left_rev	40	0.011265	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zlt_left_rev	40	0.008005	2	1	1	synth with cache (only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zlt_left_lt	40	0.012853	1	1	0	synth with cache (only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.nat.to_nat_bounded	40	40.039679	15464	191
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.rev_nztail_rev	40	40.132235	57891	667
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nzhead_D0	40	0.010707	3	1	2	synth with cache (only 1: now destruct u).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nzhead_iter_D0	40	0.009471	1	1	0	synth with cache (only 1: now induction n; simpl; [  | rewrite IHn ]).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_gt_cases	40	40.038923	10868	2301
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_neq	40	0.037637	4	4	0.0.0.0	synth with cache (only 1: intros n m; only 1: intro H; only 1: rewrite Rlt_le_neq in H; only 1: now destruct H).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Pdiff_semantics	40	40.092322	34428	4110
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Ndiff_semantics	40	0.245437	55	29	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite andb_true_r; only 1: simpl; only 1: apply N.pos_ldiff_spec).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_nz	40	40.003165	628	164
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.max_var_nformalae_correct	40	40.064176	16325	4225
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	40	40.225461	17344	2176
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.eq_dec	40	40.052432	19015	1512
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.denorm_correct	40	40.068361	21609	2475
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_bool_trans	40	40.101746	28841	5722
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.string_of_list_byte_of_string	40	40.065462	22834	2784
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.mkPX_ok	40	40.066719	21134	595
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40	40.064704	18777	2928
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_dec	40	40.244524	46372	1917
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_mapsto	40	40.109303	3572	588
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union_inter	40	40.070022	18319	4725
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.rel_prime_bezout	40	40.076805	28675	2231
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_b	40	40.062501	23932	1018
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zmisc.iter_nat_of_Z	40	40.385962	12925	2453
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_l	40	40.096752	35726	3603
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.remove_inf	40	19.696884	8491	1745	1.1.5.0.0.1.5.2.0.0.1.0	synth with cache (only 1: induction s; only 1: inversion 1; only 1: inv; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: inv; only 1: elim_compare x a; only 1: eauto; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_minus	40	40.073380	25301	3785
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi_aux	40	40.021431	3864	864
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.natlike_rec	40	40.138481	49031	4156
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct1	40	40.053978	21014	857
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.remove_m	40	40.030858	5875	3701
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_morph	40	40.034896	10342	1167
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.In_1	40	40.164108	28654	4061
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_b	40	40.045055	10718	3060
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.remove_ok	40	3.955817	611	260	0.0.0.0.1.1.0.0.0.0.0	synth with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s x; only 1: simple induction s; only 1: intuition; only 1: simpl; only 1: intros; only 1: inv; only 1: elim_compare x a; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_reg_r	40	40.037013	4856	820
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_increasing_0	40	40.048811	14485	3111
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmake_Qdiv	40	10.897535	7969	830	0.34.0.11	synth with cache (only 1: Z.bitwise; only 1: simpl; only 1: Z.nzsimpl'; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nltb_double_mono	40	40.056625	18667	2435
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_r	40	5.743436	1618	530	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction i; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zle_bool_antisym	40	40.076927	26438	2174
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_mult_le	40	40.060179	20056	3317
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40	40.288271	116092	6417
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_3	40	40.065983	18255	2288
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_iff	40	40.136400	22829	3041
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mult_div_ge	40	40.089056	33258	3065
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40	40.078345	26753	2866
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_opp_r	40	40.750546	11689	1718
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_Ok	40	2.277414	646	216	0.0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: induction l; only 1: intuition; only 1: simpl; only 1: rewrite andb_true_iff; only 1: rewrite negb_true_iff; only 1: intros H; only 1: destruct H; only 1: constructors; only 1: rewrite <- mem_spec; only 1: congruence; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.find_1	40	40.095887	20513	4428
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.byte_of_ascii_of_byte	40	40.036719	4311	951
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40	40.037427	8438	1123
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_exists	40	40.085024	14344	2981
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.unorm_app_unorm	40	40.032534	10332	628
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.merge_spec	40	40.106231	38453	3772
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.Comp'	40	1.027258	120	28	0.0.0.0.4.4	synth with cache (only 1: red; only 1: red; only 1: intros; only 1: setoid_replace y with x; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.add_1	40	40.092463	32062	3242
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.add_2	40	0.630105	325	77	3.0.2.4	synth with cache (only 1: intro H; only 1: intros; only 1: apply <- add_spec; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40	40.071956	19970	2972
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lex_Opp	40	26.481135	16607	1724	2.2.1.12.6.6.4	synth with cache (only 1: intros a b n Hn; only 1: intros Ha Hb; only 1: rewrite Ha; only 1: induction n; only 1: trivial; only 1: trivial; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_bool_inv	40	0.285934	82	29	9	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ok	40	40.030110	9700	580
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_refl	40	40.097379	39322	2963
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_plus_distr_l	40	40.036270	6100	1160
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_plus_distr_r	40	0.294204	21	16	2.0.0	synth with cache (only 1: intros; only 1: destruct (CRisRing R); only 1: apply Rdistr_l).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.String_as_OT.cmp_eq	40	40.125908	49726	1880
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcpower_1	40	40.056330	18576	1998
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.atan_eq_ps_atan	40	40.024855	7324	1900
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Signed.of_inj_pos	40	40.061737	16393	4205
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zlt_left	40	40.266895	13039	1416
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.nat.of_nat_None_iff	40	40.031295	4936	362
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.revapp_nil_inv	40	40.087989	28900	3560
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_ngt	40	40.050254	13700	2639
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Pbit_faithful_0	40	40.153688	62544	4862
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_div	40	40.003624	478	147
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.in_bdepth	40	40.058470	16472	3101
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.eval_pexprSC	40	40.097377	34587	1771
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	40	40.026312	4450	387
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.list_byte_of_string_of_list_byte	40	40.213406	92951	3129
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_b2i	40	40.032198	6970	2094
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PaddC_ok	40	40.071747	20724	631
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_le_dec	40	40.381517	39177	1760
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_mapsto	40	40.083074	24402	3065
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_diff_inter	40	40.051641	10833	4749
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.bezout_rel_prime	40	40.050869	18866	1409
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_neq_b	40	40.029386	5628	2547
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_gt_dec	40	1.241144	576	41	0.0.0.0.29	synth with cache (only 1: unfold Z.lt, Z.gt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_opp_l	40	26.948498	4447	1572	0.0.0.0.0.0.0.0.0.0.0.4.0	synth with cache (only 1: intros [xn limx]; only 1: rewrite CReal_plus_comm; only 1: apply CRealEq_diff; only 1: intros; only 1: unfold CReal_plus, CReal_opp, inject_Q, proj1_sig; only 1: rewrite Qred_correct; only 1: setoid_replace (xn (2 * n)%positive + - xn (2 * n)%positive - 0)%Q with 0; only 1: unfold Qle; only 1: simpl; only 1: unfold Z.le; only 1: intro absurd; only 1: inversion absurd; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_mult	40	40.082916	29304	3834
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi	40	40.051227	4606	773
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Efficient_Rec.R_wf	40	40.056744	14889	1685
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct2	40	40.048939	17142	737
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.union_m	40	40.032353	10303	1314
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.Nth	40	40.015419	3918	1228
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.Neqb_ok	40	0.336119	103	39	0.2.0.0.0.0.0.1	synth with cache (only 1: intros [| ] [| ]; only 1: simpl; only 1: now try N.order'; only 1: now try N.order'; only 1: now try N.order'; only 1: simpl; only 1: rewrite Pos.eqb_eq; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NMORPHISM.radd_ext4_Proper	40	0.010685	1	1	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_b	40	40.072970	22195	3305
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.In_compat	40	40.172636	21573	3663
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.In_node_iff	40	0.141194	10	4	0.3.1	synth with cache (only 1: intros x y z; only 1: destr_bool; only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	0.067800	17	5	0.3	synth with cache (only 1: intros; only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.remove_spec	40	40.033812	7856	2455
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_const	40	3.808870	4245	444	0.0.0.0.36	synth with cache (only 1: red; only 1: intros; only 1: unfold derivable_pt; only 1: exists 0; only 1: apply derivable_pt_lim_const).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.lt_leaf	40	0.219030	150	29	11.0	synth with cache (only 1: intros l a Hin; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_increasing_1	40	40.027997	6251	2679
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.020605	2	2	0.0	synth with cache (only 1: red; only 1: inversion 1).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_comp	40	40.047081	16278	1761
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.lt_tree_node	40	0.072537	3	3	0.0.0	synth with cache (only 1: unfold lt_tree; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_ok	40	0.008040	6	1	5	synth with cache (only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.073418	4	3	0.0.1	synth with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nltb_double_plus_one_mono	40	40.059292	19493	2774
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.lt_tree_not_in	40	0.573702	148	37	0.7.1	synth with cache (only 1: intuition_in; only 1: eapply Nat.Private_OrderTac.Tac.lt_irrefl; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.map2.gmap2	40	40.073244	23927	3269
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PsubC_ok	40	11.190330	1073	587	0.2.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zle_bool_trans	40	40.366570	50074	2787
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_divides	40	40.039073	11655	2093
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	1.237367	249	58	10	synth with cache (only 1: eauto using Nat.Private_OrderTac.Tac.eq_trans, Nat.Private_OrderTac.Tac.eq_sym).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.gt_tree_not_in	40	0.022325	3	3	0.0.0	synth with cache (only 1: intros; only 1: intro; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.gt_tree_trans	40	0.015647	1	1	0	synth with cache (only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.Zred_factor0	40	0.084213	1	1	0	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_4	40	40.053200	13730	3695
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.Zred_factor1	40	0.065007	10	9	1.0.0.0.0.0	synth with cache (only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: apply Z.add_diag).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40	40.230183	13867	1546
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zmax.Zmax_spec	40	40.152546	35383	2241
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mult_div_ge_neg	40	40.081518	29211	3142
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zmax.Zmax_left	40	0.306154	39	17	0.6.0	synth with cache (only 1: unfold Z.le, Z.max; only 1: intros; only 1: now case Z.compare_spec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_0	40	40.067946	23213	3752
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.lt_tree_compat	40	4.225726	899	307	0.0.2.1.0.1.0.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros x y; only 1: intro H; only 1: intros; only 1: rewrite <- H; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_spec	40	40.118360	14846	3418
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	0.461496	74	32	0.0.0.2.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros x x' Hx s s' Hs H y Hy; only 1: subst; only 1: setoid_rewrite  <- Hx; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40	2.655064	2166	321	10.3.7	synth with cache (only 1: intros; only 1: intro x; only 1: apply H).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.empty_spec	40	0.296057	349	49	5.16	synth with cache (only 1: intro y; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.empty_ok	40	0.005761	8	1	7	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.add_1	40	40.102859	2964	863
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zmax.Zpos_max_1	40	1.858907	630	59	1.4.12.9	synth with cache (only 1: induction p; only 1: easy; only 1: now Z.nzsimpl; only 1: now Z.nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.ascii_of_byte_via_N	40	40.031729	4177	942
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcpower_0	40	31.968062	21011	1727	0.3.6.0.1.9.13.3	synth with cache (only 1: unfold Q2Qc; only 1: intro m; only 1: destruct m; only 1: intros H; only 1: Nat.order; only 1: simpl; only 1: intro H; only 1: auto with qarith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_eq_cases	40	40.033610	9264	1557
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.norm_app_int_norm	40	40.040728	9512	2653
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.merge_ok	40	40.040338	10928	1930
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_1	40	40.067221	20368	3415
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.add_3	40	40.102896	35643	3845
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zmin.Zmin_spec	40	40.159275	33789	1819
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_gt_reg_neg_r	40	40.053325	13395	3999
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_inv	40	40.087201	28918	4195
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_irrefl	40	4.981417	6382	627	7.8.6.3.7	synth with cache (only 1: intros LE EQ; only 1: revert EQ; only 1: intro H; only 1: apply BinInt.Z.lt_nge in H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ext	40	40.027090	6252	1127
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zge_left	40	35.655500	15079	2006	0.35.7.2	synth with cache (only 1: intros; only 1: apply Z.le_0_sub; only 1: Z.swap_greater; only 1: now rewrite <- ?Z.succ_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_sym	40	40.073483	26902	2089
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zgt_left	40	0.373952	41	15	0.0.0.0.1	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: rewrite Z.add_shuffle0; only 1: change (-1) with (- Z.succ 0); only 1: now apply Z.le_0_sub, Z.le_succ_l, Z.lt_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zgt_left_gt	40	0.041927	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRzero_double	40	40.033781	6231	2283
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zgt_left_rev	40	0.039955	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.String_as_OT.cmp_antisym	40	40.084372	24443	3672
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zmin.Zmin_irreducible	40	4.737804	2718	120	68	synth with cache (only 1: Z.solve_min).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.empty_1	40	1.259061	851	119	9.20	synth with cache (only 1: compute; only 1: inversion_clear 1).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Alt_PI_eq	40	40.033521	8305	2538
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.empty_NoDup	40	0.101241	114	16	0.2.11	synth with cache (only 1: unfold PX.eqk, PX.eqke; only 1: compute; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_spec	40	19.213244	14342	1780	0.2.1.3.0.2.20.4.2	synth with cache (only 1: intros; only 1: split; only 1: inversion 1; only 1: subst; only 1: auto; only 1: inv; only 1: intro H; only 1: unfold singleton; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.rev_nil_inv	40	40.062150	15523	3957
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_nge	40	40.055413	17355	2595
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.of_to_N	40	40.044300	9085	4805
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NMORPHISM.rmul_ext4_Proper	40	25.530078	12981	559	56.22	synth with cache (only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Pbit_faithful	40	40.126695	49640	5552
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEadd_ext	40	40.003367	367	121
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_Psatz_sound	40	40.387332	12316	1403
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsub_ext	40	1.306554	3	3	0.0.0	synth with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.eval_formulaSC	40	40.059747	18161	1960
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.ins_spec	40	40.056962	18641	2689
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEmul_ext	40	1.283535	3	3	0.0.0	synth with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_1	40	40.082352	23999	4397
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_in	40	40.079043	24431	3232
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union	40	40.046113	9049	4671
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Gauss	40	40.068318	26012	2588
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_b	40	40.029435	5327	2998
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_ge_dec	40	40.324111	44866	2799
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_proper_r	40	40.094900	7294	1969
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40	40.070795	27941	1393
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_bounded	40	40.078851	27447	3304
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_ge_dec	40	3.570788	850	93	0.0.0.0.3.23	synth with cache (only 1: unfold Z.lt, Z.le; only 1: unfold Z.ge; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec2	40	40.155781	62558	3832
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_m	40	40.053676	16464	2343
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct	40	40.181631	72666	2978
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_proper_l	40	4.796332	1000	635	0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: split; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_o	40	40.086930	28041	3289
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_scal	40	40.087422	32244	4079
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_Rsqr	40	0.031578	5	5	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (2 * x); only 1: apply derivable_pt_lim_Rsqr).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_decreasing_0	40	40.036029	9084	2521
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qopp_comp	40	40.069105	18247	3407
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nltb_double_mono_conv	40	40.074113	24363	3583
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.map2_1	40	40.080286	28160	3409
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_aux_ok	40	40.019542	4015	1726
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zle_bool_total	40	40.280367	19947	3290
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot2_odd_remainder	40	40.052461	18146	1423
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.Zred_factor2	40	40.112136	2773	494
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_exists	40	40.086139	26402	3384
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.Zred_factor3	40	0.769456	40	8	3	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_exact_full_1	40	40.103960	38890	3967
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_1	40	40.122695	52014	3192
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_ok	40	40.130192	9520	2163
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40	40.223080	65463	4010
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.is_empty_spec	40	40.072935	23615	4348
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.add_2	40	40.233707	3234	1025
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.Comp'	40	5.122660	5273	382	1.5.13.20.8	synth with cache (only 1: red; only 1: intros n; only 1: intros a b; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.ascii_of_byte_via_nat	40	40.030267	9088	3483
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcpower_pos	40	40.056133	15696	2536
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.remove_spec	40	40.045500	14796	2289
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_2	40	40.078064	25578	3286
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.remove_spec	40	40.081056	25795	4252
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_gt_lt_contravar	40	40.056411	14019	2684
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_lt_gt_contravar	40	0.197221	35	15	4.2	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_lt_contravar	40	0.092304	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp, Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_gt_contravar	40	0.191167	31	16	1	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lex_Eq	40	40.047918	14523	2304
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_succ_r	40	40.058517	17276	1719
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddC_ok	40	40.048740	15974	767
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	0.071970	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_trans	40	40.078103	27259	2662
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_le_ge_contravar	40	1.928462	245	108	0.4.0.3.0	synth with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_ge_le_contravar	40	0.115559	33	11	0.2	synth with cache (only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_0_r	40	40.190035	1058	170
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zle_mult_approx	40	40.361762	15370	1806
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_le_contravar	40	0.263271	26	16	2	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec3	40	19.986464	11022	2067	0.0.2.0.2.2.2.4.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros P Ho Hrec; only 1: induction z as [z IH] using (well_founded_induction_type R_wf); only 1: destruct z; only 1: intros Hz; only 1: apply Ho; only 1: intros Hz; only 1: set (y := Z.pred (Z.pos p)); only 1: assert (LE : 0 <= y) by (unfold y; now apply Z.lt_le_pred); only 1: assert (EQ : Z.pos p = Z.succ y) by (unfold y; now rewrite Z.succ_pred); only 1: apply Hrec, IH; only 1: split; only 1: split; only 1: trivial; only 1: apply Z.lt_pred_l; only 1: trivial; only 1: intros Hz; only 1: now destruct Hz).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_ge_contravar	40	0.098629	4	4	0.0.0.0	synth with cache (only 1: unfold Rge; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.String_as_OT.cmp_lt	40	40.112556	42894	1976
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zmin.Zmin_le_prime_inf	40	40.146253	29405	1539
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.is_empty_1	40	40.149538	17734	1456
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.PI_ineq	40	40.036903	12102	2592
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zmin.Zpos_min_1	40	0.806473	184	23	12.0	synth with cache (only 1: unfold Z.min, Pos.min; only 1: now induction p).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_inf	40	40.058943	16386	2598
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.rev_lnorm_rev	40	40.064093	16850	3906
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Ztrichotomy_inf	40	40.253605	40742	2236
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_l	40	40.031116	5109	928
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PsubC_ok	40	8.371931	676	376	0.2.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Ztrichotomy	40	1.917895	496	183	2.0.0.0.1.1.0.0.0	synth with cache (only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: left; only 1: auto; only 1: left; only 1: auto; only 1: now intuition).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.to_of_N	40	40.067592	25948	1732
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NMORPHISM.same_genN	40	40.077177	22360	1055
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nbit_faithful	40	40.090671	35651	4712
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nzhead_nonzero	40	4.500821	2022	500	1.1.0.1.0.1.2.0.0.1.0.1.0.0.0.1.0.0.0	synth with cache (only 1: revert d'; only 1: induction d; only 1: intro H; only 1: discriminate; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: intros d' H; only 1: destr_eq H; only 1: intros d' H; only 1: destr_eq H; only 1: intros d' H; only 1: destr_eq H; only 1: intros d' H; only 1: now rewrite ?IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: intros d' H; only 1: destr_eq H; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40	40.069890	20862	3249
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.ins_ok	40	40.024692	6298	664
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEopp_ext	40	40.003889	462	114
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_split	40	40.049170	13084	1974
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_sort	40	40.068446	19667	3057
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.is_empty_2	40	13.743105	6267	902	0.9.0.5.7.0	synth with cache (only 1: unfold Empty, PX.MapsTo; only 1: unfold PX.eqke; only 1: intros; only 1: induction 1; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.rel_prime_mult	40	40.062441	22558	2459
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_plus	40	40.050324	12365	1651
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_neq_b	40	40.033171	6041	3124
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.nat_N_Z	40	0.290687	62	20	2.0.0.3.1	synth with cache (only 1: induction n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_exact_full_2	40	26.922363	12199	1795	0.0.0.6.19	synth with cache (only 1: intros a0 a; only 1: intros E; only 1: rewrite Z.div_exact; only 1: auto; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	40	40.192545	11452	2163
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersEx.PairOrderedType.lt_compat	40	40.035129	7976	1610
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_spec	40	40.036826	12978	1320
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	40	0.596794	294	57	2.0.0.4.3	synth with cache (only 1: intro x; only 1: intros n H; only 1: unfold if_zero; only 1: rewrite recursion_0; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_le_dec	40	40.294804	34145	1717
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_m	40	40.049749	15545	2380
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_ok	40	40.110143	43434	2168
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_morph_Proper	40	40.250042	12632	2042
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_b	40	40.047368	11820	2757
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_id	40	40.072371	19276	2745
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_decreasing_1	40	40.027645	5966	2356
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qminus_comp	40	40.047645	15021	2246
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40	40.062792	16882	4102
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_ok	40	40.027583	6793	2027
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.map2_2	40	40.050743	14280	2384
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zle_bool_plus_mono	40	40.079299	29289	2026
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zone_pos	40	0.028453	27	3	9	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_odd	40	40.028702	8839	1131
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.Subset_m	40	4.378370	1398	329	7.8	synth with cache (only 1: intros x y Hx; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_le_gt_dec	40	6.953285	1978	311	0.0.0.0.3.16	synth with cache (only 1: unfold Z.le, Z.ge; only 1: unfold Z.gt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.Zred_factor4	40	40.030916	4591	724
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_gt_le_dec	40	0.069922	14	7	0.0.2.0.0	synth with cache (only 1: elim Z_le_dec; only 1: auto with arith; only 1: constructor; only 1: Z.swap_greater; only 1: now apply Z.nle_gt).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_ge_lt_dec	40	0.066566	15	6	2.2.1	synth with cache (only 1: elim Z_lt_ge_dec; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.Zred_factor5	40	0.373743	12	4	0	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.Zred_factor6	40	0.009418	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.new_var	40	0.051498	22	6	0.4.2	synth with cache (only 1: intros; only 1: exists x; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA1	40	0.026994	2	2	0.0	synth with cache (only 1: intros; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA2	40	0.064491	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40	40.030077	8218	2760
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_spec	40	40.117504	4922	1748
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40	40.221575	62407	5583
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.mem_spec	40	40.199307	12355	3121
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.add_3	40	40.100234	3804	1570
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_1	40	40.103604	31048	1638
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qc_eq_bool_correct	40	40.101622	34415	2746
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.byte_of_ascii_via_N	40	40.066613	5863	360
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Popp_ok	40	9.278366	1079	494	0.0.1.0.0.0.1.0.0.0.1.0.0.1	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: rewrite IHP; only 1: rsimpl; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: rewrite IHP1, IHP2; only 1: rsimpl).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.remove_ok	40	40.085954	25019	1260
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_3	40	40.074867	22108	3099
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.remove_1	40	40.101671	36237	3830
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.remove_2	40	0.035677	7	3	4.0.0	synth with cache (only 1: intros a n m H; only 1: rewrite remove_spec; only 1: intuition congruence).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.remove_3	40	0.101976	15	5	2.0.1.1	synth with cache (only 1: intros n m p; only 1: rewrite remove_spec; only 1: apply H || intro; only 1: now PeanoNat.Nat.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_equal	40	40.075003	23212	3231
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_l	40	40.027219	8602	795
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zone_min_pos	40	12.811432	3174	510	1.11.0.5.8	synth with cache (only 1: intros; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: apply Z.leb_le; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_trans	40	40.080115	30181	2321
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_0_l	40	40.063673	2197	398
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40	40.056411	14919	2415
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zmult_le_approx	40	40.346689	31330	2389
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_rec	40	40.151612	58474	2879
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zle_is_le_bool	40	1.963526	717	156	2.10.3	synth with cache (only 1: symmetry; only 1: revert m; only 1: apply Z.leb_le).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	40	0.043136	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	40	0.045347	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	40	0.048067	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.String_as_OT.compare_helper_lt	40	40.233284	104767	635
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_0_le_ge_contravar	40	0.240806	30	14	0.0.0.4	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.045971	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.sin_atan	40	40.024018	7115	1777
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zge_is_le_bool	40	1.810812	637	140	0.3.0.10.0	synth with cache (only 1: unfold Z.leb, Z.le; only 1: split; only 1: now case Z.compare_spec; only 1: Z.swap_greater; only 1: apply Z.leb_le).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_ok	40	40.214687	13731	1035
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcrt	40	10.651190	1449	550	0.0.0.2.3.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.9	synth with cache (only 1: split; only 1: intros; only 1: qc; only 1: apply Qplus_0_l; only 1: intros; only 1: qc; only 1: apply Qplus_comm; only 1: intros; only 1: qc; only 1: apply Qplus_assoc; only 1: intros; only 1: qc; only 1: apply Qmult_1_l; only 1: intros; only 1: qc; only 1: apply Qmult_comm; only 1: intros; only 1: qc; only 1: apply Qmult_assoc; only 1: intros; only 1: qc; only 1: apply Qmult_plus_distr_l; only 1: intros; only 1: auto; only 1: intros; only 1: qc; only 1: apply Qplus_opp_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_ind	40	3.987553	1368	434	2.0.1.0.0.3.1.0.0	synth with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_r	40	40.031662	9133	1336
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_aux_ok	40	40.018052	3721	1660
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.dec_Zne	40	40.223659	31382	1377
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_add	40	40.038159	9215	1106
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.unorm_0	40	40.057257	13081	5216
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nbit_faithful_iff	40	40.087889	34220	5377
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.to_of_N_iff	40	40.026296	6561	755
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_rec	40	4.681351	1493	439	0.0.1.0.0.0.0.0.0.0.0.1.0.1	synth with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: intros Hx; only 1: destruct x; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: assert (0 < 0) by now apply Z.le_lt_trans with y; only 1: discriminate; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: now destruct Hx).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_induction	40	0.034271	3	3	0.0.0	synth with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_lt_cancel	40	8.716298	2813	592	0.5.0.8.1.1	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: intro Hnotz; only 1: eapply Rlt_not_le; only 1: eauto; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.cutting_plane_sound	40	40.324794	21381	2913
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_gt_cancel	40	0.158115	46	15	1.5	synth with cache (only 1: unfold Rgt; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.add_spec'	40	40.048752	14651	1651
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.add_spec	40	0.058573	2	2	0.0	synth with cache (only 1: unfold add; only 1: now autorew).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.add_ok	40	0.153013	18	6	4	synth with cache (only 1: eauto with *).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_ext	40	40.004189	377	99
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_M	40	40.091724	30888	2038
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.mem_1	40	40.163809	9967	954
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_sort	40	40.138900	49824	3321
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.singleton_b	40	40.027530	5577	2036
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.rel_prime_cross_prod	40	40.055576	18370	3072
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N_nat_Z	40	40.069788	22542	2239
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40	40.117464	43051	2666
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_le	40	40.082175	27656	3505
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.positive_nat_Z	40	0.050856	5	5	0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.positive_N_Z	40	0.036701	4	3	0.1.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: simpl; only 1: f_equal).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.positive_N_nat	40	0.022347	3	2	0.1	synth with cache (only 1: unfold N.div2, N.to_nat; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.positive_nat_N	40	0.062516	8	7	0.1.0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z_N_nat	40	0.293829	249	50	15	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z_nat_N	40	2.592856	957	76	0.0.5.3.29	synth with cache (only 1: destruct n; only 1: now Z.nzsimpl; only 1: Nat2N.nat2N; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersEx.PairOrderedType.compare_spec	40	40.078177	21332	2194
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_positive_p2ibis	40	40.032151	7504	1360
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	40	40.103236	36045	3532
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs_N_nat	40	0.571924	50	5	11	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_shiftr	40	40.091558	18810	1655
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_b	40	40.055610	13588	1755
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_morph_T	40	40.547690	7337	1160
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_comp	40	40.052025	16356	2819
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_inj	40	40.030002	7773	2394
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_comp	40	40.046916	15065	2499
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nltb_Ncompare	40	40.061292	17848	4748
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.Fold.xfoldi_1	40	40.084162	27866	2614
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_even	40	40.048700	15211	2733
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.subset_m	40	40.058618	19275	2641
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_le_lt_eq_dec	40	40.072040	21313	2830
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nbit0_correct	40	19.507794	25836	3044	5.1.2.0.12.0.19.0	synth with cache (only 1: intros; only 1: destruct n; only 1: trivial; only 1: induction p as [p IH| p IH| ]; only 1: trivial; only 1: simpl; only 1: split; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA3	40	40.060099	19241	1694
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Ndouble_bit0	40	0.636032	388	124	14.0	synth with cache (only 1: intros; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Ndouble_plus_one_bit0	40	0.030123	5	3	0.2.0	synth with cache (only 1: destruct n; only 1: split; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_Empty	40	40.046594	15820	3857
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs_nat_N	40	10.499199	9342	193	0.0.0.0.0.119	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply positive_nat_N; only 1: apply positive_nat_N).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.id	40	0.011061	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_ok	40	40.040302	9235	2199
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40	40.180275	57802	4775
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj	40	0.185643	31	21	1.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: now try N.order'; only 1: intros Hn; only 1: easy || now destruct Hb; only 1: intros Hn; only 1: easy || now destruct Hb; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40	0.144723	92	25	1.0.4.1	synth with cache (only 1: intros AC_depfun A B R H; only 1: destruct (AC_depfun A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_ok	40	0.107570	6	3	0.3.0	synth with cache (only 1: intros H; only 1: apply <- isok_iff; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.add_Inf	40	40.099786	7022	1667
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_2	40	40.106299	26635	3406
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec1	40	40.234173	37150	2370
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_iff	40	1.167850	116	79	1.0.3.2	synth with cache (only 1: split; only 1: apply SuccNat2Pos.inj; only 1: intros EQ; only 1: now Morphisms.f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.is_nonneg	40	0.073074	24	10	0.2.0.2.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: Z.order; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.byte_of_ascii_via_nat	40	40.057969	3450	752
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_0	40	0.008705	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_pos	40	0.009334	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeuclid.ZEuclid.mod_wd	40	0.200314	23	4	6	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PaddX_ok	40	40.026661	6369	1399
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeuclid.ZEuclid.div_wd	40	0.125247	1	1	0	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_compare	40	0.974961	142	55	1.0.0.2.0.3.0	synth with cache (only 1: destruct n, m; only 1: easy || now destruct y; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_spec	40	2.516932	720	213	0.0.2.0.7	synth with cache (only 1: unfold singleton; only 1: intros; only 1: intuition; only 1: inv; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_ok	40	0.022294	3	2	1.0	synth with cache (only 1: apply <- isok_iff; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_spec	40	0.111931	43	11	0.0.6.0	synth with cache (only 1: unfold empty; only 1: intro; only 1: intro; only 1: inv).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.concat_spec	40	40.054930	17442	2529
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_4	40	40.091070	30756	2974
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.singleton_1	40	40.169884	63537	4970
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.022876	7	3	2.0.2	synth with cache (only 1: intros n m H; only 1: apply <- add_spec; only 1: now left).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_gt	40	40.070948	24925	2179
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_r	40	40.039875	10436	1607
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_le	40	4.171115	1388	359	2.4.0.0.0.0.4.1	synth with cache (only 1: unfold N.leb, N.le; only 1: destruct n, m; only 1: reflexivity; only 1: simpl; only 1: easy'; only 1: simpl; only 1: now split; only 1: easy').
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40	40.080617	30431	2758
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRopp_mult_distr_r	40	40.022883	3398	2012
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Ndiv2_double	40	10.910026	6306	1370	0.1.0.0.7.8.0.1	synth with cache (only 1: intros a; only 1: intros H; only 1: N.bitwise; only 1: destruct a; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_lt	40	1.762428	338	160	1.11	synth with cache (only 1: unfold Z.lt, Z.le; only 1: now rewrite inj_compare).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_ge	40	0.025443	3	2	0.1	synth with cache (only 1: unfold Z.le, Z.ge; only 1: now rewrite inj_compare).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_gt	40	0.027573	5	2	0.3	synth with cache (only 1: unfold Z.lt, Z.gt; only 1: now rewrite inj_compare).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.String_as_OT.compare_helper_gt	40	40.222363	98641	617
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.String_as_OT.compare_helper_eq	40	0.020237	4	1	3	synth with cache (only 1: now apply Ascii_as_OT.cmp_eq).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	1.451885	745	119	0.13.2.0	synth with cache (only 1: intros; only 1: destruct n; only 1: now try N.order'; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.cos_atan	40	40.029704	7030	2004
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zlt_is_lt_bool	40	40.300282	29666	3294
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_spec	40	40.089010	4734	1290
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcft	40	40.530119	4691	1299
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	24.364171	51979	2494	0.1.1.0.38.21	synth with cache (only 1: intros l; only 1: induction l; only 1: simpl; only 1: auto; only 1: auto; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.test_field	40	0.968367	258	104	0.0.1.4.0.0	synth with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_r; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_l	40	40.053487	6914	1342
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_r	40	0.793571	131	51	0.0.0.3.1.0	synth with cache (only 1: intros n m p; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm n p); only 1: do 2 rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Ndiv2_correct	40	4.652319	1732	491	0.0.0.0.0.0.1.0.0.7	synth with cache (only 1: intros [| ] ?; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_ok	40	40.023123	5753	1724
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.dec_Zgt	40	40.125195	49454	3482
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.empty	40	40.461343	177441	589
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_mult	40	40.030362	6938	2292
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	40	0.020426	3	3	0.0.0	synth with cache (only 1: intros l x y H H'; only 1: rewrite <- H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.unorm_nonnil	40	40.075548	27997	1824
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.unorm_D0	40	0.036137	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.unorm_iter_D0	40	0.008017	1	1	0	synth with cache (only 1: now induction n).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.to_of_N_option_map	40	40.080899	15839	334
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_rec	40	40.073575	21820	2763
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	40	2.943589	1547	371	6.0.4.0.0.0.0.0.0	synth with cache (only 1: simple induction l; only 1: simpl; only 1: intro; only 1: inversion 1; only 1: simpl; only 1: intuition; only 1: constructor; only 1: subst; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_le_cancel	40	40.044402	8500	2697
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.genCuttingPlaneNone	40	40.086172	29060	3451
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.lbalS_spec	40	40.129794	16762	1684
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_l	40	40.003250	497	113
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_half	40	40.173337	66480	1710
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_nodup	40	40.125752	43358	2816
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.mem_2	40	40.141493	30212	4252
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.union_b	40	40.140602	58361	427
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40	40.061160	20484	3203
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40	40.059869	19095	2358
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_0	40	40.062771	19275	3376
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_r	40	3.881847	35	9	5.0.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_0_r	40	1.820891	13	4	5.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	8.261095	7308	1300	1.0.2.4.0.0.1.12	synth with cache (only 1: intros [| ] ?; only 1: auto; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: right; only 1: transitivity y; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_r	40	1.040049	8	3	5.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40	40.083574	16174	3890
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_positive	40	40.044944	15689	1324
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	40	1.917475	1463	285	1.1.1.2.1.11	synth with cache (only 1: induction l as [| x xs Hl]; only 1: intuition; only 1: intro; only 1: intro; only 1: intro; only 1: now rewrite H).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40	0.485814	299	48	0.0.13	synth with cache (only 1: unfold def_add; only 1: intro n; only 1: now rewrite recursion_0).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_o	40	40.062396	18128	3387
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_opp	40	40.056597	19380	3299
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40	40.214054	11837	2191
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_increasing_0	40	40.034933	9566	2893
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qinv_comp	40	40.073584	22990	3621
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.rel_prime_sym	40	7.912577	4007	554	0.2.2.0.15.0	synth with cache (only 1: simple induction 1; only 1: Z.nzsimpl'; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Ncompare_Gt_Nltb	40	40.060929	17495	4592
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.fold_1	40	40.089418	31042	3233
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zeven_rem	40	40.081025	28186	2352
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.equal_m	40	40.038102	5927	3135
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_0	40	3.064226	881	69	29	synth with cache (only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.Subset_refl	40	0.286025	92	26	1.4.2	synth with cache (only 1: intros n; only 1: intro H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	1.219690	958	159	1.2.0.2.10	synth with cache (only 1: intros H1 H2 H3; only 1: intros; only 1: red; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.Zlt_cotrans	40	40.385542	34089	2803
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.In_s_m	40	0.987893	76	31	0.3.1.1	synth with cache (only 1: intros x y H s s' H0; only 1: generalize (H0 x); only 1: rewrite H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA4	40	40.087867	34141	1323
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_1	40	40.077270	27419	5127
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40	40.177153	22614	1585
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_3	40	40.079660	24480	2947
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.add_sorted	40	40.157307	23400	5474
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec2	40	40.180054	13533	1831
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	4.337586	3436	398	18.10	synth with cache (only 1: intro H; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeuclid.ZEuclid.div_mod	40	40.142279	46295	3497
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Padd_ok	40	40.027546	6265	2443
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.is_empty_spec	40	40.064910	17716	4511
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec1	40	0.019695	4	2	0.2	synth with cache (only 1: repeat red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.concat_ok	40	40.031631	8519	1571
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec2w	40	0.058433	10	5	3.1.0.0	synth with cache (only 1: intros; only 1: induction s; only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_plus	40	40.082941	27585	2265
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.fold_spec	40	0.008555	3	1	2	synth with cache (only 1: constructors).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.union_spec	40	40.090868	28286	5355
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_eq	40	40.066767	22144	3059
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_l	40	40.034211	10752	1149
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA5	40	9.434413	2602	434	12.13	synth with cache (only 1: intros n m; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	8.021258	3557	733	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros AC_fun A B R H; only 1: pose (B' := {x : A & B x}); only 1: pose (R' := fun (x : A) (y : B') => projT1 y = x /\ R (projT1 y) (projT2 y)); only 1: destruct (AC_fun A B' R') as (f, Hf); only 1: intros x; only 1: destruct (H x) as (y, (Hy, Huni)); only 1: exists (existT (fun x => B x) x y); only 1: repeat split; only 1: trivial; only 1: intros (x', y') (Heqx', Hy'); only 1: simpl in *; only 1: destruct Heqx'; only 1: rewrite (Huni y'); only 1: trivial; only 1: trivial; only 1: exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))); only 1: intro x; only 1: destruct (Hf x) as (Heq, HR) using and_indd; only 1: destruct (f x); only 1: simpl in *; only 1: destruct Heq using eq_indd; only 1: trivial; only 1: intros DepFunReify A B R H; only 1: destruct (DepFunReify A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRopp_mult_distr_l	40	40.022424	3547	1898
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_abs_N	40	39.525759	71188	1485	5.1.6.3.138.25	synth with cache (only 1: Z.bitwise; only 1: destruct z; only 1: now Z.nzsimpl; only 1: simpl; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_add	40	0.020899	3	1	2	synth with cache (only 1: now destruct n, m).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_mul	40	0.020819	1	1	0	synth with cache (only 1: now destruct n, m).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.asin_atan	40	40.025434	7410	1794
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zgt_is_gt_bool	40	40.065708	18720	4057
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_ind	40	33.266401	8438	3611	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros P z Hrec x Hx; only 1: rewrite <- (Z.sub_simpl_r x z); only 1: apply Z.le_0_sub in Hx; only 1: pattern (x - z); only 1: apply Zlt_0_rec; only 1: clear x Hx; only 1: intros x IH Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: rewrite <- (Z.sub_simpl_r y z); only 1: apply IH; only 1: split; only 1: now rewrite Z.le_0_sub; only 1: now apply Z.lt_sub_lt_add_r; only 1: now rewrite <- (Z.add_le_mono_r 0 x z); only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inter_inf	40	40.069677	13465	2410
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_trans	40	40.126816	45510	4981
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_compat	40	0.163388	30	8	4	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_equiv	40	40.208488	45419	1498
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono	40	40.038077	10878	1772
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Popp_ok	40	40.025717	6170	2200
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nxor_bit0	40	40.090558	36030	3299
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.dec_Zge	40	40.099071	36879	2978
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_sub	40	40.043979	11775	2466
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.is_empty	40	40.199362	48725	3736
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nb_digits_unorm	40	40.105361	38549	3158
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_ge_cancel	40	40.052167	11947	3808
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40	40.040197	11534	1883
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.to_N_bounded	40	40.109369	47025	1038
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.lbalS_ok	40	40.041048	2517	413
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_ext	40	40.118771	43312	2509
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_cardinal	40	40.059352	20396	1370
coq-tactician-stdlib.8.12.dev	Coq.micromega.Env.S.jump_add	40	40.105887	39368	1836
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_2	40	40.112724	11511	2000
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.inter_b	40	40.024922	4096	2682
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_le_upper_bound	40	40.112322	41697	5228
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_1	40	40.118893	42543	2670
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.MoreInt.eqb_eq	40	40.356965	58319	3235
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_nformula_bound_var	40	7.259974	2301	234	3.0.22	synth with cache (only 1: intros Az RS; only 1: rewrite xnnormalise_correct; only 1: easy || now destruct y).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_l	40	40.002706	342	94
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_firstl	40	40.003984	462	145
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	40	40.108533	26343	5778
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	40	40.138068	21957	1958
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA6	40	22.493833	7391	373	4.41.4.5	synth with cache (only 1: intro; only 1: intros EQ; only 1: Tactics.program_simpl; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	40	0.716432	541	94	1.0.0.12	synth with cache (only 1: induction l as [| z l]; only 1: firstorder; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	40	0.037619	7	4	1.0.0.2	synth with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_opp_rev	40	40.048930	15581	3513
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map2_1bis	40	40.096923	32670	3336
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_increasing_1	40	40.023340	5038	2039
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qdiv_comp	40	40.043116	12355	2163
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.rel_prime_div	40	40.069953	14901	4154
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Ncompare_Lt_Nltb	40	40.063323	18056	4252
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.equal_1	40	40.047272	8311	858
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zodd_rem	40	40.062248	21692	2793
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_plus_distr	40	40.110441	11911	1412
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.rel_prime_1	40	3.854861	2179	190	1.2.1.19.2	synth with cache (only 1: intros H; only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	40	40.355318	21916	1996
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40	40.116477	45205	3631
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_4	40	40.203414	76799	2908
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.remove_1	40	40.120397	13318	3208
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec3	40	40.063148	20221	2497
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.add_s_m_Proper	40	40.040429	11426	1449
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2b	40	3.372793	1909	447	0.0.7.2.0.0.0.1	synth with cache (only 1: intros; only 1: rewrite cardinal_spec in H; only 1: generalize (elements_2 (s:=s)); only 1: destruct (elements s); only 1: intros; only 1: intuition; only 1: exists e; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeuclid.ZEuclid.mod_always_pos	40	40.125068	33553	2992
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec1	40	40.031357	8545	1725
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_ok	40	40.042507	11118	2416
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_filter	40	40.140535	4901	3004
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.union_1	40	40.111297	40950	3926
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PsubX_ok	40	40.018454	3335	1884
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeuclid.ZEuclid.mod_bound_pos	40	3.375810	925	383	0.1.3.3.0.0.0	synth with cache (only 1: intros Ha Hb; only 1: destruct b as [| b| b]; only 1: now discriminate Hb || clear Hb; only 1: unfold modulo; only 1: apply Z.mod_pos_bound; only 1: easy; only 1: now discriminate Hb || clear Hb).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_spec	40	40.082969	26851	3167
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_r	40	40.038281	9070	1399
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_nge	40	1.302279	106	30	6.0.3	synth with cache (only 1: intros n m; only 1: unfold Z.lt, Z.le, Z.eq; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40	40.230296	75632	4887
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_lt_compat_r	40	40.162410	17373	1755
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_sub_max	40	40.357294	21008	4400
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.asin_0	40	40.028784	8246	2387
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zlt_is_le_bool	40	40.061225	18957	3522
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.041961	3	3	0.0.0	synth with cache (only 1: rewrite Z.leb_le; only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inter_ok	40	40.042129	9772	2207
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40	40.087405	32207	2260
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_equiv	40	40.304735	71203	1560
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono	40	40.061843	13067	1322
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddX_ok	40	40.026694	6896	1184
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nxor_div2	40	40.066862	26483	2793
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_morph	40	40.028253	6374	2250
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.not_Zeq	40	40.088091	31541	3025
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.radd_ext5_Proper	40	0.096463	2	1	1	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.rmul_ext5_Proper	40	0.009532	3	1	2	synth with cache (only 1: exact (Rmul_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.ropp_ext5_Proper	40	0.008573	1	1	0	synth with cache (only 1: exact (Ropp_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.rsub_ext7_Proper	40	0.008243	1	1	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.mem	40	40.117172	22071	2753
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_not_lt	40	0.348695	8	2	6.0	synth with cache (only 1: intros LT EQ; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zlt_not_le	40	0.625580	36	15	6.1	synth with cache (only 1: intros LT EQ; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_not_gt	40	0.023741	8	2	4.2	synth with cache (only 1: intros LE EQ; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.del_head_nonnil	40	40.094617	35735	1906
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zgt_not_le	40	0.513204	72	22	4.4	synth with cache (only 1: intros LE EQ; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Znot_ge_lt	40	0.804248	377	45	0.21	synth with cache (only 1: Z.swap_greater; only 1: intuition Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Znot_lt_ge	40	0.040604	6	2	4.0	synth with cache (only 1: Z.swap_greater; only 1: intuition Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Znot_gt_le	40	0.280144	13	3	2.3	synth with cache (only 1: unfold Z.lt, Z.gt; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Znot_le_gt	40	0.034559	4	2	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_lt_compat_r	40	40.038439	3798	1256
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_gt_compat_r	40	0.009638	1	1	0	synth with cache (only 1: auto using Rplus_lt_compat with rorders).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.of_N_None_iff	40	40.067469	4807	633
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_gt_compat_l	40	1.534944	923	146	18	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40	40.051086	13083	2870
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40	40.052339	13321	1881
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_cardinal	40	40.126839	47520	2344
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_def.Zpower_theory	40	40.162208	11340	877
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_1	40	40.069696	19257	4277
coq-tactician-stdlib.8.12.dev	Coq.micromega.Env.S.jump_simpl	40	40.101793	38761	3367
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.diff_b	40	40.027957	4285	3264
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40	40.110255	40851	5122
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_2	40	40.062698	19620	2824
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.not_Zne	40	6.548002	6389	381	16.0.34.3	synth with cache (only 1: intro H; only 1: destruct (Z.eq_decidable n m); only 1: trivial; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.MoreInt.eqb_neq	40	40.339167	62119	2596
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.agree_env_subset	40	40.078953	21239	2069
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zgt_asym	40	1.139523	255	57	2.0.9	synth with cache (only 1: intros; only 1: Z.swap_greater; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zgt_irrefl	40	0.158501	120	20	3.6.0	synth with cache (only 1: Z.swap_greater; only 1: intros H; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_add_r	40	40.052926	526	107
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	40	40.119627	8074	1915
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA7	40	40.048745	17360	1446
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40	40.085080	28196	5647
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_plus_one_firstl	40	41.768483	6662	1461
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_mirr	40	40.071443	25544	3313
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_o	40	40.066543	19448	3055
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_decreasing_0	40	40.035727	9526	2873
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qcompare_comp	40	40.073177	24466	2313
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nmin_le_1	40	40.073362	25134	3407
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	40	40.078134	29044	3505
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.equal_2	40	40.071448	23172	3489
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_involutive	40	40.196531	12320	3317
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.not_rel_prime_0	40	40.069007	25993	1805
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Binary.ZBinary.TestOrder.test	40	0.008914	1	1	0	synth with cache (only 1: BinInt.Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	40	40.362133	19727	2419
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_plus	40	40.103066	38220	2368
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.remove_2	40	40.164126	6240	2506
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec1	40	40.082507	28501	2590
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.remove_s_m_Proper	40	40.073713	23308	2478
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Equal_cardinal	40	40.052465	17003	2872
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_spec	40	40.140211	7055	2492
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec2	40	40.023743	5120	2620
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.fold_compat	40	40.071641	20379	3087
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.union_2	40	40.129628	46399	5331
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.union_3	40	0.375491	145	58	6.1.0	synth with cache (only 1: intros; only 1: apply <- union_spec; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Psub_ok	40	40.020730	3855	2347
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_cxe	40	40.079546	32193	1165
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xce	40	0.041910	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_wd	40	40.030687	6219	1488
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40	40.158044	42929	4315
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_lt_compat_l	40	40.045975	9131	2647
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40	34.281516	33744	4290	1.5.2.21.5	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: compute in *; only 1: setoid_rewrite Hx; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_sub	40	40.408601	28709	3044
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	40	0.893095	1625	50	56	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.asin_1	40	40.030162	9006	2141
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zeq_is_eq_bool	40	40.100125	32859	3996
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inter_spec	40	40.065029	9859	2334
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.compare_spec	40	40.068985	13935	1368
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_bool_iff	40	40.333371	65120	6838
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_le_mono	40	40.042748	11657	2317
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nneg_bit0	40	40.093888	37822	3319
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Padd_ok	40	40.023360	6173	1817
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword0_ok	40	40.106677	39466	1068
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.add	40	40.099079	32447	5146
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_bool_iff	40	2.325929	669	287	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4	synth with cache (only 1: destruct n; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.del_tail_nonnil	40	40.076605	26296	2208
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_succ	40	8.824832	4735	592	0.0.5.1.1.5.1.0.0.26	synth with cache (only 1: N.induct n; only 1: simpl; only 1: easy; only 1: intros; only 1: destruct n; only 1: rewrite H; only 1: Morphisms.f_equiv; only 1: simpl; only 1: f_equal; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.to_N_via_nat	40	40.088599	33908	1977
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_even_bool	40	2.958948	3263	289	0.0.0.0.0.0.0.0.0.0.17.1.0.8.23	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: induction p; only 1: trivial; only 1: split; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	40	0.291718	65	15	2.5.1	synth with cache (only 1: simpl_relation; only 1: compute in H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	40	0.063734	3	1	2	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	40	0.022565	5	2	3.0	synth with cache (only 1: destruct p; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	40	0.010900	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	40	0.134449	81	16	4.0.4	synth with cache (only 1: intros (U, V); only 1: compute in *; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_le_compat_l	40	40.052520	11999	3817
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	40	0.007495	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	40	0.010141	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	40	0.010601	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	0.984469	423	99	1.4.0.7	synth with cache (only 1: induction 1; only 1: compute in H; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lor_lsr	40	40.048276	12627	2457
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA8	40	33.628580	15303	1621	1.16.2.1.10.2.3	synth with cache (only 1: destruct x; only 1: trivial; only 1: induction p as [p IHp| p IHp| ]; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: now destruct 1 || now destruct 2).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_pred_max	40	4.447091	4483	324	3.0.0.0.17.29	synth with cache (only 1: unfold Z.succ, Z.pred; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_app	40	40.098533	31583	2716
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40	40.027532	2102	397
coq-tactician-stdlib.8.12.dev	Coq.micromega.Env.S.jump_tl	40	40.049602	16757	761
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_eq	40	40.152916	28452	3879
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.elements_b	40	40.023185	3469	2617
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_le_compat_l	40	40.084183	31009	2905
coq-tactician-stdlib.8.12.dev	Coq.micromega.Env.S.jump_succ	40	0.088990	29	7	4.2	synth with cache (only 1: rewrite <- ?jump_add; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_Empty	40	40.070144	20631	4004
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.append_rr_match	40	0.018961	2	1	1	synth with cache (only 1: exact (rmatch _ _ _)).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.append_bb_match	40	0.019740	1	1	0	synth with cache (only 1: exact (rmatch _ _ _)).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.MoreInt.ltb_lt	40	40.130654	40307	1213
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.agree_env_jump	40	40.069211	24428	2457
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_lt_or_eq	40	40.089794	30418	2366
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_odd_bool	40	7.202473	9058	850	0.0.0.0.0.0.0.0.1.0.0.0.0.1.0.9.27	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_pred	40	3.780453	2190	353	4.0.19	synth with cache (only 1: destruct n; only 1: easy || now destruct 1; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zgt_trans	40	0.160922	10	6	0.1.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now transitivity m).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_gt_trans	40	0.289052	106	21	0.0.9	synth with cache (only 1: intros H; only 1: Z.swap_greater; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zgt_le_trans	40	0.048849	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_l	40	40.003161	544	106
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	40	40.188924	10221	1693
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40	40.107411	25426	5208
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	40	0.059554	14	5	2.1.1	synth with cache (only 1: intros x1 x2 H1 x3 x4 H2; only 1: rewrite H1; only 1: now rewrite H2).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_mirr_rev	40	40.063930	22771	2808
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2i_p2ibis	40	40.384897	12524	3143
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_b	40	40.038026	10170	473
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_decreasing_1	40	40.035702	9133	3133
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zge_trans	40	4.270101	1824	385	9.4.3	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_comp	40	40.042424	13228	1852
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nmin_le_2	40	40.142589	56820	3010
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	40	2.797511	336	101	4.1.1.3	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: firstorder  auto with crelations; only 1: firstorder  auto with crelations; only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	40	0.121257	4	2	0.2	synth with cache (only 1: repeat red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_Zdiv_pos	40	40.077480	27317	3474
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	40	40.235872	30497	2636
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsspec	40	40.069854	21651	2880
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.rel_prime_mod	40	40.063243	20981	3485
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.not_Zeq_inf	40	40.089361	31053	2602
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	40	16.659329	25143	1371	0.4.1.2.1.0.2.0.48.3	synth with cache (only 1: intros; only 1: elim H; only 1: intros; only 1: exists y; only 1: firstorder; only 1: compute in H; only 1: intuition; only 1: compute in H; only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.remove_3	40	40.040230	5137	2351
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_filter	40	40.098913	32511	3032
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec2	40	40.056564	10081	2907
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.Z_dec	40	4.232305	1248	398	3.0.0.0.0.1.0.0.0.1	synth with cache (only 1: intros; only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: auto; only 1: left; only 1: left; only 1: auto; only 1: now intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.union_s_m_Proper	40	40.101504	31430	2387
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec3	40	0.282127	57	29	0.0.0.0.0.0.0.1	synth with cache (only 1: functional induction max_elt s; only 1: red; only 1: red; only 1: inversion 2; only 1: inversion 1; only 1: intro H0; only 1: destruct (IHo H0 _x3); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40	40.101038	41259	3511
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_ok	40	40.167747	9386	1334
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec3	40	40.031343	8856	2032
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_compat	40	40.065996	20227	3101
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.inter_spec	40	40.108072	36959	6044
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lxl	40	40.150621	65172	1329
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_gxg	40	0.026856	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xll	40	0.037340	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xgg	40	0.027755	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40	40.195411	62339	3283
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40	0.021711	7	4	0.0.3.0	synth with cache (only 1: intros IndefDescr A B R H; only 1: exists (fun x => proj1_sig (IndefDescr B (R x) (H x))); only 1: intro x; only 1: apply (proj2_sig (IndefDescr B (R x) (H x)))).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PmulI_ok	40	40.019162	4010	1436
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRinv_r	40	40.192851	8324	883
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.choose_spec1	40	7.447939	6234	662	0.0.0.4.13.1.8.0.12	synth with cache (only 1: induction s as [| c l IHl y r IHr]; only 1: intros Ha Eq; only 1: easy; only 1: simpl; only 1: induction l as [| a l IH]; only 1: intro H; only 1: inversion 1; only 1: auto; only 1: now auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zcompare_Gt_trans	40	40.329056	26162	3489
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	40	40.119741	45469	4877
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.choose_spec2	40	0.991753	443	108	0.0.0.0.0.2.1.10	synth with cache (only 1: intro; only 1: functional induction min_elt s; only 1: red; only 1: inversion 2; only 1: inversion 1; only 1: intro H0; only 1: destruct (IHo H0 _x3); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.asin_inv_sqrt2	40	40.036339	11664	1865
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zeq_bool_eq	40	40.073689	23657	3327
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zcompare_opp	40	2.435487	670	264	1.0.0.0.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos.compare_antisym; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite <- ?Pos.compare_antisym).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_odd_dec	40	25.850096	41594	2368	2.2.2.4.2.2.2.2.4.0.2.0.51.9	synth with cache (only 1: pattern n; only 1: destruct n; only 1: simpl; only 1: tauto; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: auto; only 1: auto; only 1: tauto; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: auto; only 1: auto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.diff_inf	40	40.045432	9835	1789
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.diff_ok	40	0.141942	3	3	0.0.0	synth with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_lt_mono	40	40.032931	7283	2867
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nneg_bit0_1	40	40.094048	37856	2542
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nneg_bit0_2	40	0.060501	20	6	1.0.0.2	synth with cache (only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_cons	40	40.032598	9892	871
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	40	25.954413	42067	1938	6.1.71	synth with cache (only 1: compute; only 1: intro; only 1: now rewrite recursion_0).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.singleton	40	40.248981	67229	2709
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_Nwcons	40	0.684988	59	44	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction w; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros; only 1: destruct n; only 1: norm; only 1: norm).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nzhead_invol	40	40.077331	22613	3426
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_opp	40	40.018150	3719	2018
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.to_nat_via_N	40	40.072170	23003	4431
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_le_compat_r	40	40.032173	6282	2475
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_alt.Piter_mul_acc	40	40.242125	11026	803
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lor_le	40	40.059523	17824	2702
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA9	40	40.048647	16986	1183
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_dec	40	10.214753	11203	984	0.0.2.0.2.2.3.0.0.0.4.5.7.1.0.11.15	synth with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: auto; only 1: auto; only 1: now right; only 1: destruct p; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: now destruct p; only 1: now destruct p; only 1: now right; only 1: simpl; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_ge_compat_l	40	2.594062	1654	288	11.6	synth with cache (only 1: intros x y; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_node	40	40.075501	23058	2186
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_sgn	40	40.083087	11391	928
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.filter_b	40	40.054222	12601	4326
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_1	40	40.154711	10087	4724
coq-tactician-stdlib.8.12.dev	Coq.micromega.Env.S.jump_pred_double	40	40.132493	44765	5279
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40	40.086064	30642	2350
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.append_spec	40	40.077694	25621	2723
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_dec	40	1.575802	380	235	0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.agree_env_tail	40	40.098795	34216	3437
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.MoreInt.ltb_nlt	40	40.228487	60382	2927
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_min	40	40.139735	31625	2689
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_r	40	40.002695	443	97
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	30.641873	27993	2328	0.0.12.12.20.2.0.8	synth with cache (only 1: intros H; only 1: induction 1; only 1: compute in H; only 1: compute; only 1: left; only 1: rewrite <- H; only 1: firstorder  auto with crelations; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_plus	40	40.048785	15315	3070
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_phi_inv_positive	40	40.058074	15375	3067
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_inj	40	40.028150	6399	3089
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_mapsto_iff	40	40.048817	13390	2937
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zsucc_le_compat	40	40.076470	25487	3549
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_compat	40	40.044784	13879	1951
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nmin_le_3	40	40.114828	41799	2862
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nmin_le_4	40	0.085343	14	4	3.0	synth with cache (only 1: rewrite !Nleb_Nle; only 1: N.solve_min).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nmin_le_5	40	0.068541	2	2	0.0	synth with cache (only 1: rewrite !Nleb_Nle; only 1: N.solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqk	40	40.108100	30409	987
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqke	40	0.034158	3	3	0.0.0	synth with cache (only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: elim (StrictOrder_Irreflexive _ LT)).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_eq	40	0.025490	1	1	0	synth with cache (only 1: now intros <-).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_Zmod_pos	40	40.066183	18932	3991
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40	40.071575	22523	3578
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_ge_compat_r	40	12.627284	7940	1442	12.7	synth with cache (only 1: intros x y; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.rel_prime_mod_rev	40	40.042427	13215	2929
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_not_Zodd	40	11.676301	7204	2832	0.0.0.1.0.2.0.0.3.4.0.1.0.2.0.0.0.1.1	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: tauto; only 1: destruct p; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: now destruct p; only 1: intros; only 1: intros Hb; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: intros; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40	41.200800	19957	2053
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_not_Zeven	40	0.061646	5	5	0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_Sn	40	2.191651	1146	211	4.6.4.0	synth with cache (only 1: boolify_even_odd; only 1: intuition; only 1: unfold Z.succ, Z.pred; only 1: now destruct n as [| [| | ]| [| | ]]).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.remove_Inf	40	40.176381	14633	3276
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.fold_compat	40	40.114256	19577	3132
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	40.086318	31097	2481
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.empty_cardinal	40	40.019724	6551	1333
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.Z_dec'	40	40.092497	31761	3227
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.Z_zerop	40	0.095145	12	5	0.0.0.3	synth with cache (only 1: intro; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_spec	40	40.065991	18589	4077
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok	40	40.045157	7998	1671
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.inter_1	40	40.096254	32132	5218
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.inter_2	40	0.020274	3	3	0.0.0	synth with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lex	40	40.061839	14461	1599
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40	40.249829	43123	3135
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	1.526887	181	61	0.0.0.0.0.0.0.0.2	synth with cache (only 1: destr_bool; only 1: constructor; only 1: constructor; only 1: ct; only 1: constructor; only 1: constructor; only 1: ct; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_lt_reg_r	40	40.040447	8789	2352
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_Leaf	40	0.055893	7	4	0.0.0.3	synth with cache (only 1: induction s as [| l IHl o r IHr]; only 1: reflexivity; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Pmul_ok	40	40.017590	3616	1889
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.mem_spec	40	40.169574	44817	4348
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.choose_spec3	40	40.064944	21040	2140
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.asin_opp	40	40.023786	6239	2103
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	40	40.228698	60543	5014
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zeq_bool_neq	40	40.118090	43963	3911
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.inter_3	40	6.983412	4823	1020	12.0.1.8	synth with cache (only 1: intros a b c; only 1: intros; only 1: rewrite inter_spec; only 1: now BinNat.N.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zcompare_Gt_spec	40	40.336376	16988	1237
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.diff_spec	40	40.032987	7867	2053
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_pos	40	40.049463	14610	2428
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nsame_bit0	40	40.100718	40026	2526
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	40	40.193119	4113	718
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_ok	40	40.086873	30671	1286
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.remove	40	40.271467	110879	3323
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nztail_invol	40	40.054411	15114	2852
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.unorm_invol	40	0.011270	1	1	0	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_ok	40	40.013896	2827	1659
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_max	40	30.977801	22574	3014	0.0.0.0.0.0.2.0.8.10.4.0.17.0.0.0.1.0.0.0.6	synth with cache (only 1: unfold N.max, N.le; only 1: destruct n as [| n], m as [| m]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: revert m; only 1: unfold Z.le, Z.max; only 1: simpl; only 1: intros H; only 1: case Pos.compare_spec; only 1: intros; only 1: simpl; only 1: now f_equal; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros E1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.of_N_via_nat	40	40.030481	5010	615
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_alt.Piter_op_square	40	40.124969	13458	1802
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA10	40	40.043478	18103	593
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_0	40	40.070563	20313	2489
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA11	40	0.099746	5	3	2.0.0	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv_aux	40	40.086390	27824	3522
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_plus_full	40	40.052259	17456	2905
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_2	40	40.120683	7610	3485
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.for_all_b	40	40.126241	46990	2273
coq-tactician-stdlib.8.12.dev	Coq.micromega.Env.S.nth_spec	40	40.082799	23122	3211
coq-tactician-stdlib.8.12.dev	Coq.micromega.Env.S.nth_jump	40	0.055377	18	5	2.3	synth with cache (only 1: unfold jump; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2	40	40.131653	49421	3103
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.max_var_acc	40	40.084957	27667	4486
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.MoreInt.leb_le	40	40.119070	13505	3241
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_nz	40	40.007809	904	118
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.append_ok	40	40.034678	2626	491
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	40	40.138348	30663	4172
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_minus	40	40.041626	12268	3823
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_spec	40	40.066155	8098	1166
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.tan_diff	40	40.035012	9662	2284
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equiv	40	40.047068	11394	2222
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zsucc_lt_compat	40	40.088058	35365	1752
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeqb_comp	40	40.060630	19561	1799
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nmin_lt_3	40	40.055635	15637	4710
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nmin_lt_4	40	0.085876	4	3	0.0.1	synth with cache (only 1: rewrite <- !not_true_iff_false, !Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_lt	40	40.173099	12308	2262
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_Zmod_zero	40	40.059418	20291	2722
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.xmap2_lr	40	40.072924	22490	3527
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_le_compat	40	40.048389	12412	2638
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	40	40.067382	23170	2328
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_plus	40	40.032732	6193	1891
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_one	40	0.020499	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_Sn	40	40.236574	31206	4716
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.remove_sorted	40	40.049941	14432	4911
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.elements_1	40	0.019956	4	2	1.1	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_compat	40	40.076885	23393	3578
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.elements_2	40	0.008353	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.elements_3	40	0.034200	10	3	2	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	40.060249	20581	1884
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.singleton_cardinal	40	40.105132	43123	2067
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_ok	40	40.035716	9250	2522
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok1	40	40.059025	21138	1239
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok2	40	0.018512	4	3	0.0.1	synth with cache (only 1: destruct (@split_ok s x); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_pred	40	7.236995	4926	699	2.18.3.0	synth with cache (only 1: boolify_even_odd; only 1: intros; only 1: unfold Z.succ, Z.pred; only 1: now destruct n as [| [| | ]| [| | ]]).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40	40.120658	46440	4177
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.Update_OT.lt_strorder	40	40.249377	78596	3439
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_lt_reg_l	40	40.047634	5507	2580
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_empty_x	40	40.105432	36826	4704
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.equal_spec	40	40.137554	49930	4359
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Psquare_ok	40	40.020163	4329	1458
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.elements_spec1'	40	40.068066	20337	3597
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.asin_bound	40	40.028639	8585	2185
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40	40.171110	37719	3287
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zeq_bool_if	40	40.190030	81718	1228
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.diff_spec	40	40.054596	16213	3166
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zcompare_plus_compat	40	40.319328	11968	2548
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_nonneg	40	40.046925	13533	2345
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.equal_spec	40	40.052701	13820	3442
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nbit0_less	40	40.099836	40696	3959
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	40	40.052187	8868	1324
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwadd_ok	40	40.052499	17090	1386
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.union	40	40.235185	66800	3633
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.norm_invol	40	40.089513	35805	1048
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulI_ok	40	40.014378	2774	1462
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_div	40	40.165971	19520	2889
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_ge_compat	40	22.851286	10049	2128	26	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nbit0_gt	40	4.436294	1999	631	0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (N.discr (N.lxor a a')) as [(p, H2)| H1]; only 1: unfold Nless; only 1: rewrite H2; only 1: destruct p; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H1 : N.odd (N.lxor a a') = false) by (rewrite H2; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H1; only 1: discriminate H1; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H2 : N.odd (N.lxor a a') = false) by (rewrite H1; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H2; only 1: discriminate H2).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.eq_dec	40	0.141129	28	8	0.0.7	synth with cache (only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.of_nat_via_N	40	40.052752	5053	1004
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_alt.Zpower_equiv	40	40.155551	40656	3170
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	0.007540	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_add_or	40	40.058125	17314	2952
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA12	40	40.064791	26143	962
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv	40	40.068926	20597	2468
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_opp_opp	40	40.088030	29321	5406
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_3	40	40.140938	7953	3088
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.exists_b	40	40.038335	6725	4463
coq-tactician-stdlib.8.12.dev	Coq.micromega.Env.S.nth_pred_double	40	40.108457	23483	4101
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2b	40	40.108811	37082	4428
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.agree_env_eval_nformula	40	40.119414	33892	3611
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.MoreInt.leb_nle	40	40.337399	47275	2496
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Reflexive	40	0.011828	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.if_true	40	40.003087	848	93
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Symmetric	40	0.013641	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Transitive	40	0.051928	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Irreflexive	40	0.010119	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Reflexive	40	0.155118	144	17	0.0.15	synth with cache (only 1: split; only 1: CRelationClasses.simpl_crelation; only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	40	40.142843	30237	4257
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Symmetric	40	0.029121	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Transitive	40	0.600160	35	9	2.0.5	synth with cache (only 1: compute; only 1: intros x y z (Hxy, Hxy') (Hyz, Hyz'); only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.del_spec	40	40.034850	7255	1389
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_mult	40	40.041901	12820	3786
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelProd_Instances.FstRel_ProdRel	40	0.018716	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelProd_Instances.SndRel_ProdRel	40	0.340798	316	30	24	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelProd_Instances.FstRel_sub	40	0.012665	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelProd_Instances.SndRel_sub	40	0.015094	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.tan_increasing_0	40	40.045230	13591	2788
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelProd_Instances.pair_compat	40	0.443462	63	8	0.11	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelProd_Instances.fst_compat	40	0.012376	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice	40	40.765368	11299	1472
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelProd_Instances.snd_compat	40	0.012549	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zsucc_gt_compat	40	40.061593	18902	1938
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Cmp.Equiv_Equivb	40	40.055661	17321	2885
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zsucc_gt_reg	40	0.079191	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zsucc_le_reg	40	0.016981	1	1	0	synth with cache (only 1: apply Z.succ_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qleb_comp	40	40.068343	20296	2158
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zsucc_lt_reg	40	0.008326	1	1	0	synth with cache (only 1: apply Z.succ_lt_mono).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Q_apart_0_1	40	0.032785	6	1	5	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_In	40	40.037016	11317	2515
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.map2_commut	40	40.095225	32526	3466
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.prime_divisors	40	40.043446	14750	1366
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelCompFun_compat	40	4.466545	2319	179	0.0.25.4.0	synth with cache (only 1: repeat red; only 1: intros x x' Hxx' y y' Hyy'; only 1: apply H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_const	40	7.119761	1773	666	0.0.0.0.0.0.0.0.0.0.0.4.0.0	synth with cache (only 1: intros; only 1: unfold fct_cte, derivable_pt_lim; only 1: apply derive_pt_eq_0; only 1: unfold fct_cte, derivable_pt_lim; only 1: intros; only 1: exists {| pos := 1; cond_pos := Rlt_0_1 |}; only 1: intros; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: unfold Rdiv; only 1: rewrite Rmult_0_l; only 1: rewrite Rplus_opp_r; only 1: rewrite Rabs_R0; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_lt	40	40.064124	21320	2668
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation.CPermutation_Permutation	40	40.229192	30222	3808
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.Equivalence_instance_0	40	40.159083	21617	2499
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.elements_3w	40	40.095347	32997	5916
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons	40	0.040002	7	4	0.1.2.0	synth with cache (only 1: repeat intro; only 1: apply permA_skip; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40	40.044546	13319	2404
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_cardinal	40	40.058970	22596	2700
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_head	40	0.175315	19	17	0.0.0.1.2	synth with cache (only 1: induction l; only 1: intuition; only 1: intros; only 1: repeat rewrite <- app_comm_cons; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_eqk	40	0.267139	62	13	6.1	synth with cache (only 1: induction 1; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_refl	40	0.007428	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_refl	40	0.068198	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_sym	40	0.018338	2	2	0.0	synth with cache (only 1: unfold eqk, eqke; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_sym	40	0.033908	8	4	3.0.1.0	synth with cache (only 1: unfold eqk, eqke; only 1: intros n m; only 1: intros [? ?]; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_trans	40	0.128570	53	11	5.2	synth with cache (only 1: intros i j Hi Hj E; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_spec	40	40.037059	9176	3462
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.inter_spec_ok	40	40.042362	11130	1846
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_pred	40	40.225680	37592	4539
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_div2	40	0.025267	1	1	0	synth with cache (only 1: now destruct n as [| [| | ]| [| | ]]).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.MOT_to_OT.eq_dec	40	40.211197	55620	5384
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwopp_ok	40	32.815846	29875	602	2.2.0.42.81	synth with cache (only 1: intro m; only 1: induction m; only 1: simpl; only 1: norm; only 1: norm).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.Update_OT.lt_compat	40	40.223008	18019	2608
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_empty	40	40.089868	30810	3637
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_le_compat_l_half	40	40.037421	7063	3366
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.subset_spec	40	40.254846	73261	3551
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.elements_spec1	40	40.060524	16639	3997
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.asin_bound_lt	40	40.021419	4949	2004
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Mphi_morph	40	40.062808	22888	1095
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	40	40.174930	39411	3586
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.diff_1	40	40.122335	43065	5386
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.diff_2	40	0.022119	3	3	0.0.0	synth with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.diff_3	40	0.500366	137	44	1.0.3.0.0.0.1	synth with cache (only 1: induction x; only 1: rewrite diff_spec; only 1: tauto; only 1: rewrite diff_spec; only 1: intuition congruence; only 1: rewrite diff_spec; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_div2	40	5.506508	996	300	0.0.3.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: destruct n as [| [| | ]| [| | ]]; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: now rewrite Pos.pred_double_succ; only 1: easy; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zplus_compare_compat	40	40.350012	26962	2942
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_pos	40	40.036082	9698	1992
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.subset_spec	40	40.049929	13674	3315
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	40	40.141809	15256	2171
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.empty_ok	40	0.009859	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.inter	40	40.170976	42634	4516
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.empty_spec	40	0.162986	143	11	17	synth with cache (only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nzhead_del_tail_nzhead_eq	40	40.064221	17621	3504
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pmul_ok	40	40.013602	2816	1556
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_mod	40	40.141978	29095	3173
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_gt_0_lt_compat	40	40.492364	14757	1843
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nless_not_refl	40	40.120207	45809	4692
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pos_sub_spec	40	40.209706	18865	4048
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	40	40.244881	86021	4328
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40	40.326575	22972	1525
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA13	40	40.043272	16958	738
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_1	40	40.060924	17861	2471
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA14	40	0.292369	17	11	0.1.0.0.0	synth with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l, <- Pos2Z.opp_neg, Z.add_opp_diag_r; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_opp_opp	40	40.063375	23391	2758
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_3'	40	40.054869	14343	3395
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.In_m	40	40.082384	21753	3394
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Equal_cardinal	40	40.061312	15585	3342
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.flatten_e_elements	40	1.592234	421	116	0.0.0.0.0.6	synth with cache (only 1: simpl; only 1: unfold elements; only 1: simpl; only 1: intros; only 1: rewrite !elements_app, !app_nil_r, !app_assoc_reverse; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.addmuldiv_spec	40	40.026119	4476	1074
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.agree_env_eval_nformulae	40	40.327384	21316	2037
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eq_true_iff_eq	40	0.058969	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.MoreInt.norm_ei_correct	40	40.320382	52087	1459
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.Empty_m	40	4.091814	2607	494	15.6.4	synth with cache (only 1: repeat red; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_semi_ok	40	40.002561	410	84
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40	40.118093	20587	3926
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	40	0.143225	29	11	1.0.2.2	synth with cache (only 1: split; only 1: now destruct 1; only 1: unfold In, MapsTo; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.eval_f_morph	40	40.306898	37766	4268
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.map_simpl	40	0.060297	19	6	1.0.4	synth with cache (only 1: induction l as [| a tail]; only 1: reflexivity; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.tan_increasing_1	40	40.024570	5197	2905
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice_plus_one	40	40.016076	3226	1988
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.del_ok	40	40.022159	3276	483
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb	40	40.062679	18322	2422
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zgt_succ	40	40.051098	18170	2168
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_assoc	40	40.074385	22963	3876
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_NotIn	40	40.140161	13479	2241
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_0_l	40	1.692179	1294	177	0.0.0.17	synth with cache (only 1: intros l; only 1: unfold Qeq; only 1: simpl in *; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_0_r	40	1.433566	422	82	1.8.0.0.0	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: Z.nzsimpl; only 1: now rewrite Pos.mul_1_r).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_scal	40	40.055854	13196	3056
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.prime_rel_prime	40	40.070780	25133	3002
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_Rsqr	40	0.183832	10	7	1.3.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.opp_inject_Q	40	40.159302	8352	1225
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.rel_prime_le_prime	40	0.423558	68	31	0.3.3	synth with cache (only 1: intro z; only 1: intros y (Hy, Hy'); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation.CPermutation_nil	40	40.137965	16130	3448
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.fold_1	40	40.094345	34672	4135
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app	40	40.044767	12110	2960
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40	40.051158	14913	3190
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal	40	40.070718	24309	2658
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge	40	40.195439	41096	5355
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_tail	40	1.372415	274	104	0.0.0.0.0.0.0.0.3	synth with cache (only 1: induction 1; only 1: easy; only 1: now apply permA_skip; only 1: etransitivity; only 1: rewrite <- !app_comm_cons; only 1: now apply permA_swap; only 1: rewrite !app_comm_cons; only 1: now apply PermutationA_app_head; only 1: do 2 (etransitivity; try eassumption)).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_trans	40	40.230326	20488	2379
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.subset_spec	40	40.053947	14710	4218
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_equiv	40	0.447479	262	49	1.6.0.4.3	synth with cache (only 1: split; only 1: auto; only 1: auto; only 1: intros l1 l2; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_equiv	40	0.060005	4	4	0.0.0.0	synth with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.inter_spec	40	40.090346	32535	3049
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_comm	40	9.929494	3103	915	0.0.0.0.1.0.3.6.3	synth with cache (only 1: destruct x; only 1: intros; only 1: generalize 1%Z; only 1: red; only 1: intros; only 1: simpl; only 1: simpl_mult; only 1: ring_simplify; only 1: f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqke_eqk	40	1.646482	683	166	0.1.1.3.2.3	synth with cache (only 1: induction 1; only 1: compute in H; only 1: destruct H; only 1: left; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_append	40	3.218885	3854	159	0.0.1.0.8.65	synth with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: rewrite <- IHl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40	5.918777	2178	381	6.0.4.2.10	synth with cache (only 1: intros a H; only 1: intros; only 1: intros H1; only 1: do 2 (rewrite filter_iff; auto); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	40	40.144005	26241	6034
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwscal_ok	40	40.045289	14730	1628
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.Update_OT.compare_spec	40	40.232578	65169	4258
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare	40	40.070162	20282	1287
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_le_compat_r_half	40	40.040316	8310	3461
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.empty_spec	40	40.206468	71925	3993
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.elements_spec2'	40	40.076690	25194	3507
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.sin_asin	40	40.038075	10663	1960
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_xO_tail	40	40.032500	9527	1123
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_pred_double	40	0.110279	5	4	0.1.0.0	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: now jump_simpl).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_add	40	0.139144	6	5	0.0.0.0.1	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40	40.150029	23604	5574
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.fold_1	40	40.116939	43449	4550
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zquot2_odd_eqn	40	40.251699	14882	917
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_quot2	40	0.308949	14	8	2.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Hn; only 1: now destruct n as [| [| | ]| [| | ]]).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zcompare_succ_Gt	40	40.139011	27062	2457
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_nonneg	40	40.056332	17946	2078
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqk	40	8.761198	4889	764	2.3.2.18	synth with cache (only 1: intros a0 y H H0; only 1: do 2 rewrite InA_alt; only 1: firstorder; only 1: eauto with bool).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	40	40.161384	34289	2028
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.is_empty_spec	40	40.083167	25960	3149
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nzhead_del_tail_nzhead	40	40.055350	16104	3259
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.diff	40	40.269953	108502	4096
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec1	40	0.058315	27	7	5.0.1	synth with cache (only 1: split; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2	40	0.129642	42	17	1.0.6	synth with cache (only 1: firstorder; only 1: inv; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2w	40	0.034526	6	3	3.0.0	synth with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkZmon_ok	40	40.035923	11591	965
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_quot	40	40.084829	27438	3711
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_le_0_lt_compat	40	40.070622	17842	4846
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nless_def_1	40	40.076501	28319	4763
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pos_sub_discr	40	40.239810	32155	3728
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	40	40.213191	89095	5694
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40	40.308587	24592	1791
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.mkZmon_ok	40	11.237757	2582	384	3.3.1.9.2.14	synth with cache (only 1: induction M; only 1: simpl; only 1: now jump_simpl; only 1: simpl; only 1: now jump_simpl; only 1: now jump_simpl).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40	2.357071	2533	349	4.21.2	synth with cache (only 1: intros; only 1: apply H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA15	40	40.035321	12319	1026
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40	40.063615	22241	2481
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA16	40	0.079287	8	2	3.3	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_NoDup	40	40.104468	35288	4805
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA17	40	0.086981	2	2	0.0	synth with cache (only 1: intros H ->; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_quot2	40	11.516229	2172	743	1.1.5.3.0.3.0	synth with cache (only 1: intros a Ha; only 1: simpl; only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: simpl; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: simpl; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_1	40	40.145034	51975	2908
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40	40.092989	28812	2556
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nless_def_2	40	5.635709	2173	805	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: destruct a; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial; only 1: destruct a'; only 1: unfold Nless; only 1: simpl; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_quot2_neg	40	0.781452	38	24	5.0.0	synth with cache (only 1: intros Hn Hn'; only 1: apply Zodd_bool_iff in Hn'; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_bit	40	40.052521	13234	3766
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.ZChecker_sound	40	40.198444	36760	2962
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.MoreInt.norm_ez_correct	40	40.142889	57438	2050
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.is_empty_m	40	40.095695	33879	3292
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec1	40	12.110975	4434	762	1.15.1.0.0.7	synth with cache (only 1: intros [| x l] H; only 1: intuition; only 1: discriminate; only 1: simpl; only 1: inversion_clear 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	40	40.111728	11507	2669
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_spec	40	40.001482	163	54
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_X_inv	40	40.146146	28262	2428
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_incr_0	40	40.025843	6086	2697
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_same	40	0.015941	4	1	3	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_cnf_ff	40	0.007565	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_cnf_ff	40	0.007107	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_incr	40	40.025272	4829	3432
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.remove_spec	40	40.027122	4297	986
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb_eqdec	40	40.056988	16210	2179
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Znot_le_succ	40	40.102114	36769	3840
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	0.054732	7	2	5.0	synth with cache (only 1: intros; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.remove_ok	40	0.249906	8	5	1.1.1.0.0	synth with cache (only 1: induct s x; only 1: auto; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_sym	40	0.169878	4	2	2.0	synth with cache (only 1: intros; only 1: now intuition).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_NoDupA	40	40.096324	18889	3834
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA18	40	10.400226	4354	490	34	synth with cache (only 1: easy || now destruct y).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40	40.052966	16922	3430
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_1	40	4.745011	2169	419	0.0.1.5.14	synth with cache (only 1: intros Hc; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eapply Sort_Inf_In; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.lt_inject_Q	40	40.097917	33911	3060
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.prime_mult	40	40.072965	18412	2092
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation.CPermutation_nil_cons	40	40.160353	30085	3795
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.equal_1	40	40.056962	13439	2134
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal	40	40.051212	14746	6122
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge	40	40.115362	31559	4422
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.equal_spec	40	40.046620	11950	3702
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.inter_ok	40	40.059255	18033	3501
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qopp_involutive	40	40.043663	8761	1699
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.not_prime_0	40	7.607518	15576	439	5.68.25	synth with cache (only 1: intuition; only 1: case H; only 1: Z.order').
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_comm	40	40.097510	33049	2385
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_2	40	9.461136	2656	644	0.0.0.0.7.0.3.2	synth with cache (only 1: rewrite InA_cons; only 1: intuition; only 1: invlist Sorted; only 1: constructor; only 1: eapply Sort_Inf_In; only 1: eauto; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40	40.337353	115828	4673
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwmul_ok	40	40.037298	10666	2025
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40	40.209104	58752	3932
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_eq_reg_r	40	40.046218	11621	2492
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_strorder	40	40.127914	50882	3428
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.Backport_OT.lt_trans	40	0.374008	203	14	20	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.is_empty_spec	40	40.187121	55023	3865
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.elements_spec2	40	40.143064	53729	3937
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.asin_sin	40	40.027468	8322	1979
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_dec	40	40.071328	21018	5654
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.not_prime_1	40	5.021157	3290	102	77	synth with cache (only 1: now destruct 1 || intros _).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40	40.099170	35448	4027
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_trans	40	19.854715	8977	1677	0.3.1.6.0.12	synth with cache (only 1: intros def_n0; only 1: intros x y z; only 1: compute; only 1: intros; only 1: rewrite <- H0; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_ST	40	0.134932	9	4	2.0	synth with cache (only 1: intros; only 1: dintuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40	40.282019	14023	2743
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pos_sub_diag	40	33.012977	27943	3663	0.0.0.0.1.2.3.0.1.2.2.6.0.0.0.1.2.3.0.1.2.2.6.0.9	synth with cache (only 1: destruct p; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: now subst; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: now subst; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation.Permutation_nil	40	40.068972	20165	3984
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_le_minus	40	40.032608	3375	753
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_opp_r	40	8.435821	2725	387	0.14.2.1.0	synth with cache (only 1: unfold Qeq; only 1: simpl; only 1: intros; only 1: Z.nzsimpl'; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_alt	40	40.198541	32313	4569
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	40	40.181051	6021	784
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.unorm_del_tail_unorm	40	40.051252	13328	3836
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.equal	40	40.114933	18640	3148
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.zmon_pred_ok	40	40.028480	8740	1202
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_rem	40	40.160511	34591	3380
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_lt_0_compat	40	40.067813	15065	6413
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_div2	40	1.209289	834	102	0.0.0.0.0.12.0.12	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct p as [p| p| ]; only 1: reflexivity; only 1: unfold N.div2, N.to_nat; only 1: trivial; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_quot2	40	0.029758	3	3	0.0.0	synth with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zquot2_opp	40	35.126360	22073	2442	1.2.0.0.0.6.3.2.0.32	synth with cache (only 1: destruct n; only 1: now Z.nzsimpl; only 1: unfold Z.ggcd, Z.opp; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: trivial; only 1: trivial; only 1: now f_equal; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40	40.296531	17742	3555
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.zmon_pred_ok	40	40.031572	9708	1099
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	40	40.116890	46841	1280
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40	40.124898	51604	4155
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_eq	40	40.086939	27355	4850
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_IfEq	40	40.062468	19551	2225
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.empty_cardinal	40	40.149870	60341	2307
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nless_def_3	40	40.110294	46306	3257
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_spec	40	40.081595	25416	4564
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	0.050416	92	8	14	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.MoreInt.norm_ep_correct	40	40.949577	29057	777
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.mem_m	40	40.068853	19589	2195
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.ZTautoChecker_sound	40	40.354480	45311	3158
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec2	40	40.031480	8349	1745
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40	40.175773	10822	1760
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEadd_ok	40	40.001639	227	51
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec3	40	1.443904	1061	129	13.1.6	synth with cache (only 1: intros [| a l] H; only 1: easy; only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_incr_1	40	40.026214	5743	2774
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_inv	40	40.218594	61099	2088
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_negative	40	40.041897	9762	4366
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zgt_le_succ	40	40.056601	19148	3037
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40	40.159921	7912	1761
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.le_reflexive	40	0.106660	323	19	25	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.le_antisym	40	0.598960	326	23	2.22	synth with cache (only 1: intros m IH; only 1: PeanoNat.Nat.order).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.le_trans	40	0.042758	14	8	0.2.1.0	synth with cache (only 1: red; only 1: intros n m p; only 1: intros; only 1: PeanoNat.Nat.Private_Tac.order).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA19	40	40.057883	19451	1922
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.le_Order	40	0.546924	160	81	2.0.0.0.0.0.0.0.0.3	synth with cache (only 1: split; only 1: red; only 1: auto with arith; only 1: red; only 1: intros; only 1: apply PeanoNat.Nat.le_trans with y; only 1: auto; only 1: auto; only 1: red; only 1: PeanoNat.Nat.order).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA20	40	0.100000	4	4	0.0.0.0	synth with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.triv_nat	40	0.107233	93	16	9.0	synth with cache (only 1: intro n; only 1: now PeanoNat.Nat.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40	40.038799	10603	4005
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.le_inject_Q	40	40.071262	22702	2720
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_end_IfEq	40	15.301665	22089	859	30.14.4.25	synth with cache (only 1: intros a; only 1: destruct a; only 1: now simpl; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_altdef	40	12.562770	5415	1674	0.0.0.5.1.0.2.0.8	synth with cache (only 1: intros HE; only 1: split; only 1: induction 1; only 1: auto; only 1: auto; only 1: induction 1; only 1: constructor; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation.CPermutation_nil_app_cons	40	40.089374	30942	3923
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40	40.048388	16546	1651
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_cons	40	1.458825	200	96	0.1.1.6	synth with cache (only 1: firstorder using StronglySorted_rect; only 1: inversion H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_nil	40	0.056768	11	4	0.2.0	synth with cache (only 1: intros; only 1: intuition; only 1: inversion_clear H).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.equal_2	40	40.049147	15700	3875
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40	40.133587	47445	4658
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec1	40	40.081478	14160	2801
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.diff_spec_ok	40	40.032327	8151	1996
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_app	40	40.153645	23700	2865
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_middle	40	0.023736	1	1	0	synth with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_3	40	40.188835	21562	2682
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_morph	40	40.054492	18516	788
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	40	40.261027	73663	3709
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40	40.073520	21999	3794
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.Backport_OT.compare	40	40.245269	73121	5259
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRinv_1	40	40.445777	21453	1574
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.add_spec	40	40.136326	48972	4067
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.elements_spec2w	40	40.104428	37014	3182
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.cos_asin	40	40.031767	9621	1918
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.prime_2	40	40.045088	16429	1517
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_sym	40	40.139462	51426	5381
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.xfilter_spec	40	40.071704	23734	2941
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.In_m_Proper	40	40.091429	29297	4586
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zcompare_succ_compat	40	40.241146	14900	3536
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pos_sub_lt	40	40.225372	15526	4418
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation.Permutation_nil_cons	40	40.115652	21175	3734
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_minus	40	40.041759	5050	1401
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation.Permutation_refl	40	0.297853	145	31	5.2.3	synth with cache (only 1: induction l; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_inj_r	40	40.089520	31449	3006
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.MapsTo_eq	40	40.130916	17656	2381
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	40	40.135265	49268	2653
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.norm_del_tail_int_norm	40	40.046895	12704	2839
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec2	40	11.704742	3544	1299	1.0.0.0.9.0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: induction s; only 1: unfold Empty, empty; only 1: red; only 1: intros; only 1: inv; only 1: inversion H).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.cardinal_spec	40	0.022760	3	2	1.0	synth with cache (only 1: unfold elements; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.subset	40	40.094557	8628	2607
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkVmon_ok	40	40.027262	8000	879
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_more_IfEq	40	19.350102	5249	927	3.11.3.0.6	synth with cache (only 1: intuition; only 1: red; only 1: simpl; only 1: rewrite H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_le_compat_neg_l	40	40.040269	8413	2198
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	40	0.133287	23	10	0.2.0.1.0	synth with cache (only 1: intros; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_pow	40	40.127161	28418	3315
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_testbit	40	0.214240	24	18	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.id	40	0.128515	5	5	0.0.0.0.0	synth with cache (only 1: intro Hn; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zquot2_quot	40	40.174687	10115	1465
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	40	0.888672	376	83	0.1.0.9.0	synth with cache (only 1: intros; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.mkVmon_ok	40	40.027583	7823	1005
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp_r	40	40.072942	26571	2681
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40	40.112634	42247	3564
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_not_eq	40	40.141835	25803	3706
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.singleton_cardinal	40	40.140909	54386	2499
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nless_def_4	40	40.125560	50802	3921
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_lsl_1	40	40.073802	21324	3455
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.singleton_m	40	40.066934	20955	3195
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.MoreInt.norm_ep_correct2	40	40.073673	24880	2142
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_compat	40	40.093113	9974	2030
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec1	40	40.064176	19535	2398
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_decr_0	40	40.021466	3868	2171
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_inv	40	40.206755	55908	2914
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv	40	40.051146	18133	2008
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_eq	40	2.335287	603	150	0.1.6.3	synth with cache (only 1: intros H; only 1: rewrite H; only 1: unfold In, MapsTo; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_gt_succ	40	40.100441	35409	4027
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	0.028205	1	1	0	synth with cache (only 1: now intros <-).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_lt_succ	40	0.009434	1	1	0	synth with cache (only 1: apply Z.lt_succ_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zlt_le_succ	40	0.008354	1	1	0	synth with cache (only 1: apply Z.le_succ_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zgt_succ_le	40	0.032103	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	0.268865	27	15	0.3.0	synth with cache (only 1: rewrite !In_alt2, Exists_cons; only 1: destruct (split (A:=l)); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.remove_min_spec1	40	40.066101	21697	3089
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.wB_pos	40	0.023888	1	1	0	synth with cache (only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zlt_succ_le	40	0.010723	1	1	0	synth with cache (only 1: apply Z.lt_succ_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_succ_gt	40	0.030471	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEsub_ok	40	40.001304	103	39
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_zdigits	40	0.369480	159	26	5.9	synth with cache (only 1: unfold phi; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_more_than_1_digit	40	0.049479	38	4	10	synth with cache (only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_0	40	0.010338	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_1	40	0.008651	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_cnf_tt	40	2.103852	3391	249	1.0.1.0.32	synth with cache (only 1: intros [| n]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_m1	40	0.127749	6	1	5	synth with cache (only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_compare	40	0.021237	3	1	2	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.intro_Z	40	40.048312	15248	2229
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.nat_po	40	40.177944	44415	2969
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_pow	40	40.076601	24677	4568
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	4.547733	1584	274	4.15	synth with cache (only 1: rewrite InA_cons; only 1: now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_le	40	40.066207	19739	3441
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pow	40	0.987858	655	99	0.0.0.0.12.6	synth with cache (only 1: intros; only 1: red; only 1: intros; only 1: unfold derivable_pt; only 1: exists (INR n * x ^ Init.Nat.pred n); only 1: apply derivable_pt_lim_pow).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_alt	40	38.003045	19495	4390	2.0.0.8.5.0.1.5.0.1	synth with cache (only 1: induction l; only 1: firstorder; only 1: simpl; only 1: exists x; only 1: invlist InA; only 1: split; only 1: inversion_clear 1; only 1: firstorder; only 1: firstorder; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation.CPermutation_split	40	40.097026	32380	3696
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_3	40	3.610125	871	206	0.0.1.13	synth with cache (only 1: intros; only 1: invlist InA; only 1: firstorder  auto with crelations; only 1: firstorder  auto with crelations).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40	40.035330	13204	786
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.equal_cons	40	40.080875	7666	1650
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40	40.222081	51859	5102
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.diff_spec	40	40.052946	16522	2712
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_equivlistA	40	40.212170	6114	1848
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.GEN_DIV.radd_ext_Proper	40	40.075321	15377	1440
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	40	40.214513	28537	5800
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_compat	40	40.087378	17212	2475
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_eq_reg_l	40	40.041478	7642	3812
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	40	40.242183	68305	2204
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.remove_spec	40	40.230917	65028	4870
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.elements_aux_cardinal	40	40.064227	20018	2978
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_pow	40	12.818038	4045	1266	0.0.13.0.0.0.0.0.1.1.0	synth with cache (only 1: intros; only 1: induction n as [| n Hrecn]; only 1: simpl; only 1: apply derive_pt_eq_0; only 1: rewrite Rmult_0_l; only 1: replace (fun _ : R => 1) with (fct_cte 1); only 1: apply derivable_pt_lim_const; only 1: reflexivity; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_pow_pos; only 1: apply Nat.lt_0_succ).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.tan_asin	40	40.020578	5317	1740
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.prime_3	40	40.036032	12041	1673
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.le_total_order	40	16.921608	12584	1861	1.0.0.9.2.7.6.8	synth with cache (only 1: constructor; only 1: intro H'0; only 1: intros n m; only 1: simpl; only 1: destruct (le_gt_dec n m); only 1: intros H; only 1: intuition PeanoNat.Nat.order; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	40	8.238961	6922	1153	1.1.0.0.0.11.3.0.9.2.1.0	synth with cache (only 1: induction stack as [| [| ]]; only 1: simpl; only 1: intros HF; only 1: constructor; only 1: intros; only 1: simpl in *; only 1: inversion H; only 1: apply Sorted_merge; only 1: destruct H; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40	40.164436	30802	4957
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.filter_1	40	40.114027	41077	3895
coq-tactician-stdlib.8.12.dev	Coq.Classes.EquivDec.unit_eqdec_obligation_1	40	40.164985	62553	2639
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.MapsTo_m_Proper	40	40.070420	22920	3078
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zcompare_mult_compat	40	40.061784	15811	5287
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pos_sub_gt	40	40.371785	17786	4102
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_lt_mono	40	40.042543	11736	2755
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation.Permutation_refl'	40	40.145497	34093	4528
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_inj_l	40	40.065943	12480	2081
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_eq	40	40.213007	39563	4704
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	40	40.192507	38237	1737
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nzhead_app_nzhead	40	40.054719	15678	2831
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec'	40	40.036646	8184	1538
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.elements	40	40.196153	37586	2722
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.remove_min_spec2	40	24.138124	9419	1343	4.1.1.2.0.5.14.2	synth with cache (only 1: red; only 1: red; only 1: destruct s as [| c l y r]; only 1: inversion 2; only 1: inversion 1; only 1: intros; only 1: destruct delmin as (x0, s0); only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Mcphi_ok	40	40.026474	7383	1684
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.pr_nu	40	7.821272	4159	784	0.4.3.2.2.7	synth with cache (only 1: intros a n m H; only 1: elim H; only 1: intros H1 H2; only 1: simpl; only 1: apply derive_pt_eq_0; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_cont_IfEq	40	40.063948	17489	1545
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.fold	40	3.887967	3204	475	5.3.6.7	synth with cache (only 1: intro n; only 1: intros; only 1: simpl; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj	40	40.076086	24511	4201
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_lt_reg_l	40	40.067586	13033	2746
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Z_modulo_2	40	40.221783	9410	1092
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.cardinal	40	0.191496	165	26	5.3.2	synth with cache (only 1: simpl in *; only 1: intros; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Mphi_ok	40	40.020484	4533	1788
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_nz_opp_r	40	40.093308	32467	4449
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	40	40.141760	56663	5167
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_1	40	40.146633	18719	4538
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_iff	40	4.165948	1160	370	10.0.0.2.1	synth with cache (only 1: split; only 1: apply N2Z.inj; only 1: Z.order; only 1: Z.order; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.diff_inter_cardinal	40	40.059008	19045	2329
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_0	40	0.010499	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nless_z	40	40.095510	39377	2882
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_pos	40	0.058117	8	7	0.1.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_neg	40	0.010636	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.quotient_by_2	40	40.052461	18169	1368
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.add_m	40	40.053141	14322	1922
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.gt_le_dec	40	40.126120	48187	1524
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec2	40	40.028460	7248	1572
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_decr_1	40	40.020239	3620	2322
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_add	40	6.554599	1028	487	3.6.5	synth with cache (only 1: unfold Z.le, Z.min; only 1: intros; only 1: now destruct n, m).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_succ_le	40	40.087938	32944	3387
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_mul	40	0.723230	133	58	1.0.0.0.0.0.0.0.1.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: now destruct 1 || now destruct 2).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff	40	40.229221	61975	3699
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_c	40	40.057656	10934	4211
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEopp_ok	40	40.001355	157	28
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Z_plus	40	40.028157	5486	866
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA_altdef	40	40.212917	28856	5559
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation.CPermutation_refl	40	40.213771	58887	3747
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.incl_nil	40	0.960879	443	75	0.4.2.0.11	synth with cache (only 1: destruct l as [| x xs]; only 1: inversion 1; only 1: constructor; only 1: exfalso; only 1: invlist InA).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.PairDecidableType.eq_dec	40	40.176019	38750	4314
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_inter	40	40.053511	18476	2326
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Rtauto.pos_eq_refl	40	40.166349	31430	3959
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt2.map_1	40	40.036117	8465	2044
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.diff_ok	40	40.141113	11037	1736
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_PermutationA	40	40.203194	26680	2705
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation.CPermutation_refl'	40	6.581695	5158	632	3.8.1.1.16	synth with cache (only 1: intros l2; only 1: intros l HC; only 1: subst; only 1: rewrite <- app_nil_r  at 1; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.GEN_DIV.rmul_ext_Proper	40	40.054538	18148	1905
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation.CPermutation_sym	40	1.266075	555	163	0.9.4	synth with cache (only 1: intros l1 l2; only 1: induction 1; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	40	40.221026	50854	5772
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.eqlistA_altdef	40	8.217507	3369	830	2.0.0.1.3.0.4.0.1.2	synth with cache (only 1: intros x l; only 1: constructor; only 1: induction 1; only 1: auto; only 1: constructor; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_compat	40	40.081164	9116	1509
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRinv_mult_distr	40	40.032074	7088	2051
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40	40.204184	44483	5201
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.singleton_spec	40	40.198265	55589	6343
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.elements_cardinal	40	40.085452	28276	3728
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.equivlist_equiv	40	1.164381	845	93	33	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.derivable_pt_asin	40	40.018112	4699	1811
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.Finite_subset_has_lub	40	40.132988	46123	6134
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.prime_ge_2	40	40.069362	25613	2061
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge_stack	40	40.121851	34897	7227
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.filter_2	40	40.092354	30572	2802
coq-tactician-stdlib.8.12.dev	Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40	40.073394	23160	7634
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.Empty_m_Proper	40	40.077007	21617	3534
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zmult_compare_compat_l	40	40.138869	28574	3535
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pos_sub_opp	40	40.084568	22294	4836
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation.Permutation_sym	40	40.089549	28905	4429
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_pos_neg	40	40.108433	14415	1865
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	40	0.238232	123	31	14	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_assoc	40	40.056982	17314	2609
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_0_l	40	0.033786	3	3	0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_0_r	40	0.193577	19	6	0.1.0.1	synth with cache (only 1: red; only 1: simpl; only 1: intros; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv	40	40.153037	11017	2086
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_succ	40	22.945734	8176	1642	1.0.1.0.0.0.0.2.7.14	synth with cache (only 1: unfold Z.le, Z.max; only 1: intuition; only 1: simpl in *; only 1: destruct n; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: unfold N.succ, N.add; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation.Permutation_trans	40	1.373078	541	200	1.0.0.8	synth with cache (only 1: intros; only 1: apply perm_trans with (l' := l'); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40	40.134922	10039	1460
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.unorm_app_unorm	40	40.052703	13846	3553
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec	40	40.046673	13149	2513
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	40	1.845739	2376	179	0.0.0.2.1.35	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.remove_min_ok	40	40.093504	33483	2368
coq-tactician-stdlib.8.12.dev	Coq.Sets.Infinite_sets.Infinite_sets.make_new_approximant	40	40.229449	25698	5098
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_zero_spec	40	0.550717	1354	52	1.0.48	synth with cache (only 1: intros EQ; only 1: simpl in *; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Mphi_ok	40	40.020605	4252	1898
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	40	1.637446	999	77	0.2.0.1.24	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.pr_nu_xeq	40	40.056459	18877	3372
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_IfEq	40	40.132397	49018	2879
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_2	40	3.587668	1285	288	0.2.13.0	synth with cache (only 1: intros; only 1: inversion H; only 1: intuition; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_3	40	0.224870	37	13	0.0.0.1.1	synth with cache (only 1: inversion_clear 1; only 1: inversion_clear H0; only 1: intuition; only 1: compute in H0; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_one_spec	40	2.363394	1656	103	0.0.0.2.42	synth with cache (only 1: intro n; only 1: induction n as [| n IH]; only 1: easy; only 1: red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_lt_reg_r	40	40.059685	14531	5478
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	40	40.194436	39834	3461
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zsplit2	40	40.188362	17504	475
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_gt_reg_l	40	0.079955	12	7	4.0.0.0	synth with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_ex	40	0.059836	8	4	2.1.0.1	synth with cache (only 1: intros; only 1: exists (Z.div2 n); only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_ex	40	0.136028	25	15	0.0.0.0.1	synth with cache (only 1: boolify_even_odd; only 1: intros Hn; only 1: exists (Z.div2 n); only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now rewrite Hn).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_zero_opp_full	40	40.065613	22568	3662
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40	40.098088	35558	4015
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_2	40	40.049617	11073	4074
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.POneSubst_ok	40	40.044055	15212	874
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40	40.071029	21051	2034
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.N0_less_1	40	40.115284	46854	3527
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_main_trick	40	40.045935	14176	1285
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.filter_3	40	14.336540	12391	1159	2.0.6.0.29	synth with cache (only 1: intros Hbeq; only 1: unfold filter; only 1: destr_bool; only 1: rewrite xfilter_spec; only 1: intuition discriminate).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.remove_m	40	40.036894	4897	789
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.ge_lt_dec	40	40.098507	33593	3650
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_eq	40	0.009093	2	1	1	synth with cache (only 1: now injection 1 || (intros; now f_equal)).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_0	40	0.012857	1	1	0	synth with cache (only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_1	40	0.008815	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_2	40	0.008084	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_3	40	0.007332	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_add	40	1.366460	76	24	9	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_opp	40	0.009306	5	1	4	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_sub	40	0.007774	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_incr_0	40	40.024071	4931	2240
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_mul	40	0.007353	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec3	40	40.041697	9985	3162
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_max	40	0.006601	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_eqb	40	0.009120	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0.006413	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_ltb	40	0.006956	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40	6.055018	1092	232	3.1.3.6	synth with cache (only 1: intro n; only 1: unfold relation_equivalence in *; only 1: intros x x' Exx' y y' Eyy'; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	0.086438	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	0.017774	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	0.015720	3	2	1.0	synth with cache (only 1: do 2 red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	0.116596	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	0.034895	5	3	0.2.0	synth with cache (only 1: intro; only 1: compute; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	0.133483	15	8	0.0.0.0.0.2	synth with cache (only 1: split; only 1: reduce; only 1: firstorder; only 1: reduce; only 1: unfold pointwise_relation in *; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zgt_succ_pred	40	40.101720	39967	3236
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zlt_succ_pred	40	0.009659	1	1	0	synth with cache (only 1: apply Z.lt_succ_lt_pred).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_and_pol	40	40.158037	35162	2155
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ_c	40	40.028060	5945	1759
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEpow_ok	40	40.001200	99	29
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.opp_inject_Z	40	40.038919	10313	632
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.PairUsualDecidableType.eq_dec	40	40.117728	37907	7341
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40	40.044803	15653	1750
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Rtauto.form_eq_refl	40	40.145013	53895	4107
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_1	40	0.042429	11	4	4.0	synth with cache (only 1: intros a b H; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_2	40	0.196305	47	17	0.0.1.4	synth with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Classes.SetoidClass.setoid_refl	40	0.006515	2	1	1	synth with cache (only 1: apply _).
coq-tactician-stdlib.8.12.dev	Coq.Classes.SetoidClass.setoid_sym	40	0.006015	1	1	0	synth with cache (only 1: typeclasses eauto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.SetoidClass.setoid_trans	40	0.006209	1	1	0	synth with cache (only 1: typeclasses eauto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt2.map_2	40	40.067930	21763	2950
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.union_spec	40	40.053836	13356	3509
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt2.map_lelistA	40	2.195709	420	185	3.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: intros; only 1: destruct a as (x'', e''); only 1: inversion_clear H; only 1: compute in H0; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.Permutation_eqlistA_commute	40	40.176534	30283	2712
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.GEN_DIV.ropp_ext_Proper	40	40.065302	22076	1643
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation.CPermutation_trans	40	40.178662	29098	5560
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40	40.237802	15178	2430
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_app	40	0.270355	102	30	3.5	synth with cache (only 1: intros; only 1: eauto using Add_app).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_app_comm	40	0.048853	13	6	5.1	synth with cache (only 1: intros l1 l2; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_app_rot	40	0.017912	2	2	0.0	synth with cache (only 1: intros; only 1: now rewrite (app_assoc l2)).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.add_spec	40	40.078373	25459	3650
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	40	40.168281	36680	4307
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRinv_morph	40	40.520369	17683	2160
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.union_spec	40	40.177165	50033	4173
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.elements_app	40	40.105427	36824	3685
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.eqlistA_equiv	40	40.316221	44332	1586
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.derive_pt_asin	40	40.024792	7447	1539
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Z_0_1_more	40	40.078041	28531	2837
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.Integers_has_no_ub	40	40.099729	24440	6898
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.Sorted_iter_merge	40	40.094686	28257	5620
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRlt_minus	40	1.660811	375	57	1.11.0.0	synth with cache (only 1: intros; only 1: rewrite <- (CRplus_opp_r x); only 1: apply CRplus_lt_compat_r; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.is_empty_m_Proper	40	40.062671	16410	1361
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zmult_compare_compat_r	40	40.045596	10464	4295
coq-tactician-stdlib.8.12.dev	Coq.Classes.EquivDec.list_eqdec_obligation_5	40	40.204188	28099	345
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_nonneg_nonneg	40	40.093475	8171	1376
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_1_l	40	40.046004	15411	1379
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_1_r	40	0.130791	13	11	0.1.0.0.0.0	synth with cache (only 1: intro; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_sub	40	40.129741	28055	3978
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_morph_transp	40	40.162843	43897	3812
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.norm_app_int_norm	40	40.061286	18200	3774
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	40	40.126514	15519	3988
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_pred	40	0.067718	14	6	0.0.0.0.3	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: now destruct p; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_cons	40	0.065865	13	8	0.0.0.0.1.1	synth with cache (only 1: repeat red; only 1: intros x y l1 l2 Hin; only 1: subst; only 1: intros HE; only 1: constructor; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_ok	40	40.038083	9379	2448
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_compare	40	0.678353	106	56	1.0.1.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: easy || now destruct y; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1; only 1: now destruct 1 || now destruct 2; only 1: now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow	40	40.207797	40467	5588
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_comm	40	2.061440	538	137	6.2.0.0.0.0	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: intros; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	40	40.316518	44098	3957
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.deriv_maximum	40	40.044802	13781	2826
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.Equivb_elements	40	40.076093	18430	2227
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_le	40	2.528248	891	207	0.2.20	synth with cache (only 1: unfold N.le, N.ge; only 1: intros; only 1: now rewrite N2Z.inj_compare).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_cont_spec	40	40.115413	43601	2110
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_le_reg_l	40	40.047893	10871	3036
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.POneSubst_ok	40	40.048186	15750	1007
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.filter	40	40.215911	60948	3622
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_2p	40	40.043146	15830	2135
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_nz_opp_full	40	40.033751	10437	2009
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_3	40	40.125151	9377	4271
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40	40.071678	17207	2090
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_3'	40	0.131510	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: functional induction remove x m; only 1: auto; only 1: auto; only 1: do 2 inversion_clear 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubst1_ok	40	40.041875	14100	1098
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40	40.071151	20439	2205
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.N0_less_2	40	40.123694	51553	3017
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_main	40	40.040583	9654	1610
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.xforall_spec	40	40.060000	16317	4075
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.union_m	40	40.055642	18532	1937
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_incr_1	40	40.027685	5958	2792
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.choose_spec3	40	40.069661	20317	3616
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.fold_spec	40	0.036828	10	4	3.1	synth with cache (only 1: intro s; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.cardinal_spec	40	0.022720	5	2	2.1	synth with cache (only 1: intros m H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zlt_0_le_0_pred	40	40.097082	40112	1673
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	0.077679	14	4	0.3	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_neg_pos	40	0.030492	4	2	0.2	synth with cache (only 1: intros a b; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zgt_pos_0	40	0.023393	2	2	0.0	synth with cache (only 1: intro n; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_0_pos	40	0.024396	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zlt_neg_0	40	0.021165	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_or_pol	40	40.106893	39757	2913
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry_c	40	40.839386	6434	962
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Finite_alt	40	40.156976	43531	3893
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEmul_ok	40	40.001437	67	28
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_swap	40	40.303313	52032	403
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Rtauto.with_env.compose0	40	40.111849	40124	5165
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_1	40	40.051708	15272	4046
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_2	40	0.042670	9	3	1.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Classes.SetoidClass.nequiv_equiv_trans	40	40.135720	28275	4122
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt2.map_sorted	40	40.048166	15198	3551
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_In_dec	40	40.102289	17440	2594
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.union_ok	40	40.029672	8431	1652
coq-tactician-stdlib.8.12.dev	Coq.Classes.SetoidClass.equiv_nequiv_trans	40	3.752541	3096	496	6.9.8	synth with cache (only 1: destruct H; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_decompose	40	40.155116	20286	2532
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.GEN_DIV.rsub_ext_Proper	40	40.058045	13815	1214
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	40	40.237804	65320	8137
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_cons_append	40	40.212393	5323	732
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	40	0.390762	178	36	0.1.9	synth with cache (only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.remove_spec	40	40.073510	24829	4235
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	40	40.083967	23476	5483
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.inter_spec	40	40.207112	61316	4055
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.elements_node	40	40.127866	48642	1559
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.eqlistA_equivlistA	40	40.231659	7349	2204
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.prime_alt	40	40.074806	29272	1687
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.Integers_infinite	40	40.153683	24522	1327
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.Permuted_iter_merge	40	40.062539	13944	6102
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.acos_atan	40	40.027118	8201	1741
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Rtauto.with_env.compose1	40	10.002530	4913	1047	8.0.4.3.1.0.1	synth with cache (only 1: induction F; only 1: auto; only 1: intro e; only 1: intro x; only 1: intros; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Refl.make_impl_true	40	0.213018	63	20	2.3.0.1	synth with cache (only 1: induction l; only 1: constructor; only 1: intros HF; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_le	40	40.069071	22926	2138
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.mem_m_Proper	40	40.057413	13443	2246
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zcompare_elim	40	40.135601	32890	3001
coq-tactician-stdlib.8.12.dev	Coq.micromega.Refl.make_impl_map	40	1.359234	532	121	1.1.6.2.1	synth with cache (only 1: induction l; only 1: intros; only 1: reflexivity || discriminate; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.Permutation_PermutationA	40	6.405384	2321	456	20.0.1.0.0	synth with cache (only 1: induction 1; only 1: intuition; only 1: intuition; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.eqlistA_PermutationA	40	0.030584	4	3	1.0.0	synth with cache (only 1: induction 1; only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zcompare_eq_case	40	0.640061	211	53	2.1.4.0.0	synth with cache (only 1: intros a n a0 l h Hl EQ; only 1: case Z.compare_spec; only 1: trivial; only 1: Z.order; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_pos_neg	40	40.036724	10333	1893
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zle_compare	40	0.107418	30	11	0.1.0.0.1	synth with cache (only 1: intros EQ n Hn; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zlt_compare	40	0.046943	11	6	0.0.2.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.order; only 1: trivial; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_0_nat	40	21.423741	23604	2046	30.0.0.34	synth with cache (only 1: intros n H; only 1: simpl in *; only 1: apply (Nat.lt_irrefl (S n)); only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zge_compare	40	0.038708	6	5	0.1.0.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zgt_compare	40	0.029395	2	2	0.0	synth with cache (only 1: intros x y H; only 1: now rewrite H).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_in	40	39.567904	15239	3933	0.0.0.2.1.0.0.7.14	synth with cache (only 1: intro l'; only 1: intros l HF; only 1: induction 1; only 1: auto; only 1: simpl; only 1: intuition; only 1: simpl; only 1: tauto; only 1: discriminate || auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	40	40.143525	18869	4437
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.for_all_spec	40	40.059924	17747	3073
coq-tactician-stdlib.8.12.dev	Coq.micromega.Refl.make_conj_cons	40	3.139054	1338	423	1.1.2.1.1.3	synth with cache (only 1: induction l; only 1: intuition; only 1: simpl; only 1: easy; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow'	40	40.126168	14410	5030
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_plus_distr_r	40	40.049697	11755	1694
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.178085	5	5	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40	40.208240	42641	4550
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_Equivb	40	40.043652	8570	2088
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.Im_def	40	40.126748	42259	6782
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_lt	40	40.118382	23120	3249
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.deriv_minimum	40	40.028798	7391	3290
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_aux_spec	40	40.102064	41101	2228
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst1_ok	40	40.026334	8368	1170
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_le_reg_r	40	40.056228	12804	4340
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.for_all	40	40.096226	11582	2851
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_2p_plus_1	40	40.250265	18101	1489
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.left_prefix	40	40.228690	39610	5448
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.find_m_Proper	40	8.471534	3589	603	5.3.0.0.0.3.7.4	synth with cache (only 1: intros s; only 1: intros x y z; only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- 2!find_mapsto_iff; only 1: rewrite <- H0; only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_zero_opp_r	40	40.071100	25107	3346
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40	40.069358	22423	1826
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_NoDup	40	40.062119	16596	4515
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.elements_1	40	0.008472	4	1	3	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.elements_2	40	0.107184	6	2	4.0	synth with cache (only 1: intros m x; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubst_ok	40	40.024076	6329	1791
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.elements_3w	40	0.119558	11	4	3	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal_lt	40	40.034882	6693	3195
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nless_trans	40	40.052083	18196	1893
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_false	40	40.047291	12969	2460
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.fold_1	40	1.112854	624	112	4.0.1.0.3.7	synth with cache (only 1: induction m; only 1: simpl; only 1: intros p l inlist; only 1: auto; only 1: simpl in *; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.for_all_1	40	40.140553	52629	3341
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.inter_m	40	40.043768	11549	1727
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	40	12.817404	4099	1078	1.5.4.0.2.9	synth with cache (only 1: repeat red; only 1: intros x y; only 1: compute; only 1: symmetry; only 1: f_equiv'; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_decr_0	40	40.043407	12521	3220
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.filter_inf	40	40.038643	8005	3463
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_l	40	40.104579	37088	3875
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add	40	40.025303	3544	1418
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Injective_map_NoDup	40	40.104231	17908	3970
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff_r	40	3.750903	1701	406	1.1.0.0.0.0.6.0.3	synth with cache (only 1: unfold or_cnf_opt; only 1: intros; only 1: rewrite orb_comm; only 1: rewrite is_cnf_tt_cnf_ff; only 1: simpl; only 1: destruct (is_cnf_tt f) eqn:EQ; only 1: apply is_cnf_tt_inv in EQ; only 1: auto; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_succ	40	40.143369	22652	1548
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsimp_ok	40	40.001350	61	21
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.sort_equivlistA_eqlistA	40	40.106615	34625	5198
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_1	40	40.042866	13103	2201
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_mem_ind	40	40.132529	48069	4377
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.filter_spec	40	40.063389	22162	2123
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.GEN_DIV.triv_div_th	40	40.099864	39472	274
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_morph_cons	40	40.091339	30577	3780
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40	40.280482	16717	2700
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	40	0.012087	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	40	0.020538	2	1	1	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0.015339	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	40	40.227854	14596	4169
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	0.010500	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	40	0.011470	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	40	0.013707	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40	40.091178	32312	4427
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	40	0.015742	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.diff_spec	40	40.137284	48049	4098
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	40	0.010059	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0.038357	15	6	2.1.0	synth with cache (only 1: red; only 1: intros H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	40	0.009232	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.rev_elements_app	40	40.102200	35896	3147
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0.638943	412	58	2.13.2	synth with cache (only 1: intro H; only 1: unfold not; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_compat	40	40.214483	9145	1766
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	40	0.009949	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	40	0.010167	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	40	0.009080	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.square_not_prime	40	40.111277	44288	2737
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.acos_asin	40	40.021765	6216	1597
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.LocallySorted_sort	40	40.318234	92897	4081
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Rtauto.with_env.compose2	40	40.231202	19021	3686
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_morph_Proper	40	40.055022	15524	1951
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.asin_acos	40	0.162467	6	6	0.0.0.0.0.0	synth with cache (only 1: intros x; only 1: unfold acos, asin; only 1: repeat case Rle_dec; only 1: lra; only 1: lra; only 1: lra).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_mem_ind2	40	5.821357	1779	494	3.0.1.0.0.0.0.0.0.2.0.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: intros; only 1: auto with datatypes; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_decompose	40	40.171703	26495	3060
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_eqA	40	2.342164	394	113	0.0.0.3.1.2.0	synth with cache (only 1: intros x y z H; only 1: induction 1; only 1: constructor; only 1: transitivity y; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neg_neg	40	40.040191	11617	1983
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.In_InA	40	0.531201	143	35	0.3.4.1	synth with cache (only 1: intros; only 1: rewrite InA_altdef, Exists_exists; only 1: exists x; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40	40.076337	27005	2690
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_in'	40	40.191330	23203	4375
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.exists_spec	40	40.055615	15125	3033
coq-tactician-stdlib.8.12.dev	Coq.micromega.Refl.make_conj_impl	40	40.077478	22694	5487
coq-tactician-stdlib.8.12.dev	Coq.Sets.Infinite_sets.Infinite_sets.approximant_can_be_any_size	40	40.080770	26684	5845
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_integral	40	40.058045	20225	1829
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	40	40.280038	40558	4434
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.Im_add	40	40.065384	21954	5631
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.id	40	40.208368	51749	2244
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_min	40	40.138818	33290	3379
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.deriv_constant2	40	40.033114	7949	3844
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map.map_1	40	40.065047	14245	2036
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40	40.061453	19557	3428
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst_ok	40	40.019870	4629	1884
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_minus	40	40.066113	14827	4188
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.exists_	40	40.043138	10855	3186
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_minus	40	0.059023	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.right_prefix	40	40.080041	26030	3582
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_plus_Zodd	40	40.230120	39205	2519
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Gt_Psucc	40	40.049534	13308	3200
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.add_m_Proper	40	40.059932	18302	2808
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_nz_opp_r	40	40.039668	12950	2340
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	40	40.055761	16885	2371
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PSubstL1_ok	40	40.025726	7669	1732
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Psucc_Gt	40	3.538107	1329	312	0.0.0.1.2.1.0.1.2.1	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: Pos.simpl_compare; only 1: now rewrite IHp; only 1: rewrite <- Pos.compare_succ_succ; only 1: simpl; only 1: Pos.simpl_compare; only 1: now rewrite IHp; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.union_inter_cardinal	40	40.053309	17508	1430
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40	40.056452	19676	1490
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nless_total	40	40.057819	21546	3266
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.submap_1	40	40.057663	15949	2796
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.map_app	40	0.067592	7	7	0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.length_map	40	0.040820	5	5	0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.for_all_2	40	40.094142	31951	3711
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.diff_m	40	40.052159	16815	2084
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.Subset_m	40	0.025868	9	3	1.0	synth with cache (only 1: unfold Equal; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.image_empty	40	8.797092	4898	1015	1.1.2.3.8.1.0.6	synth with cache (only 1: intro; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: destruct 1; only 1: auto using Im_def with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	40	40.232862	20773	1194
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_decr_1	40	40.033983	8580	3300
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Rtauto.with_env.compose3	40	18.383067	10117	1776	2.0.13.8.0.0.0.0.0	synth with cache (only 1: induction F; only 1: intros A B C H; only 1: simpl; only 1: intros; only 1: auto; only 1: intros A eq_dec; only 1: intros n H1 H2; only 1: apply IHF; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.filter_ok	40	40.075420	17001	2429
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry	40	40.045924	13585	1985
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ	40	0.032893	2	2	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Injective_list_carac	40	40.041721	9861	3448
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_r	40	40.085205	29158	3618
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_mem_correct1	40	27.317313	16935	2828	0.1.0.0.0.0.11.4.0.1.2.0	synth with cache (only 1: simple induction x; only 1: intros H; only 1: discriminate; only 1: simpl; only 1: induction l as [| z l]; only 1: intros H; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: auto with datatypes; only 1: elim (Aeq_dec a a0); only 1: intuition; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_add	40	40.335536	19238	829
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.Power.pow_N_pow_N	40	0.014208	4	1	3	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons	40	40.002421	442	33
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.DEFINITIONS.MORPHISM.get_sign_None_th	40	0.843477	1590	64	2.52	synth with cache (only 1: split; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.gtb_1	40	40.115488	28466	4107
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.DEFINITIONS.IDmorph	40	2.616297	4848	215	64	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eqsth	40	0.709400	721	68	36	synth with cache (only 1: auto with typeclass_instances).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_2	40	40.038713	10982	4125
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_s_ext	40	1.350334	1868	148	0.1.3.5.0.1.40	synth with cache (only 1: constructor; only 1: repeat red; only 1: intros; only 1: simpl_relation; only 1: intros n n' Hn m m' Hm; only 1: rewrite Hm, Hn; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.filter_weak_spec	40	40.070080	22812	3350
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.GEN_DIV.Ztriv_div_th	40	40.076019	27121	1342
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_ext	40	0.969715	208	23	0.0.0.16	synth with cache (only 1: constructor 1; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_lelistA	40	3.501980	1029	344	0.0.0.3.0.0.0.0.5	synth with cache (only 1: intros m x e f; only 1: induction m; only 1: simpl; only 1: auto; only 1: destruct a as (x', e'); only 1: intros; only 1: simpl; only 1: inversion_clear H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_length_1	40	40.265850	71118	4205
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	40	40.218645	59436	4615
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.union_spec	40	40.067699	23206	3213
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.fold_spec	40	40.183340	50398	3820
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_sorted	40	0.772907	119	63	2.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.rev_elements_node	40	40.135947	50014	2478
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40	40.253541	74701	3934
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.prime_div_prime	40	40.102445	37129	3187
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.Sorted_sort	40	40.222457	65875	3527
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.radd_ext1_Proper	40	3.794527	729	64	23	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.acos_0	40	40.025795	7971	1532
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.eq_inject_Q	40	40.090114	15900	2059
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_morph_T	40	0.968375	168	62	0.0.0.0.0.0.4.1	synth with cache (only 1: intros; only 1: split; only 1: apply CR_of_Q_le; only 1: rewrite H; only 1: apply Qle_refl; only 1: apply CR_of_Q_le; only 1: rewrite H; only 1: apply Qle_refl).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.rmul_ext1_Proper	40	1.353543	398	38	15.3	synth with cache (only 1: intros n m p q H1 H2; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_ext	40	0.030451	15	3	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_preserves_NoDupA	40	40.161740	18651	3233
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SReqe_Reqe	40	0.104718	15	7	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_mul_l	40	0.053394	26	7	2.5	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_add	40	0.012626	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRsub_def	40	0.011950	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_square_nonneg	40	40.191195	78124	2399
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_gt_compat_l	40	40.019449	5883	1056
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_split	40	40.187993	18369	2424
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_tail	40	40.148217	24192	5108
coq-tactician-stdlib.8.12.dev	Coq.micromega.Refl.make_conj_in	40	40.139473	33837	4763
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec1	40	40.050481	9162	2352
coq-tactician-stdlib.8.12.dev	Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous	40	40.148024	57282	5618
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRIDmorph	40	3.375352	2877	374	17.3.0.3.0.2.2.28	synth with cache (only 1: constructor 1; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: solve_proper; only 1: reflexivity; only 1: reflexivity; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_head	40	2.174776	1120	297	0.0.1.1.0.1.9	synth with cache (only 1: induction l; only 1: simpl; only 1: intros l l' Hperm; only 1: intuition; only 1: intros l2 m Hin; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	40	5.978570	5590	869	0.0.0.0.0.0.3.0.0.3.0.3.0.0.6.0.0	synth with cache (only 1: intros; only 1: case (compare x y); only 1: destruct (compare x y); only 1: intros H'; only 1: exists H'; only 1: auto; only 1: intros H'; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_integral_l	40	40.039384	11760	1363
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	40	0.542569	198	66	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	40	40.349270	24423	3674
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj	40	40.185272	30964	2871
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_max	40	40.072389	25295	2610
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRmorph_Rmorph	40	1.712047	3101	120	59	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Sorted.defs.HdRel_inv	40	0.192663	23	7	3.3	synth with cache (only 1: inversion 1; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.nonneg_derivative_0	40	40.058496	19078	3646
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_iff	40	0.750621	349	102	5.2.1.0.0.0.2	synth with cache (only 1: split; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: now f_equal; only 1: intros EQ; only 1: rewrite EQ; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Sorted.defs.Sorted_inv	40	0.318898	56	22	5.0.0	synth with cache (only 1: inversion 1; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map.map_2	40	40.081577	23494	2667
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.plength_spec	40	40.133505	48485	3585
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL1_ok	40	40.020903	6158	1342
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_Rminus	40	40.049094	10613	3297
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.partition	40	40.070230	17542	3895
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_prefix	40	40.103312	34460	4719
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_mem_correct2	40	21.770316	11229	2460	0.0.0.1.5.0.1.1.1.5.2.0.0.2	synth with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: intros; only 1: auto; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: unfold not; only 1: intro Hneg; only 1: intros [Hc1| Hc2]; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_plus_Zeven	40	40.236833	35009	2017
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40	40.055748	16114	2582
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.radd_ext2_Proper	40	2.166577	683	56	19.5	synth with cache (only 1: intros n m p q H1 H2; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.081616	4	4	0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_plus_Zodd	40	0.081031	4	4	0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	40	40.086458	30819	4957
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.rmul_ext2_Proper	40	1.230262	740	64	20.5	synth with cache (only 1: intros n m p q H1 H2; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	40	40.072262	10441	1065
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PSubstL_ok	40	40.040333	13392	1606
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	40	13.537061	10539	1834	0.7.0.2.3.2.2.1.4	synth with cache (only 1: intros n m; only 1: revert m; only 1: unfold eq; only 1: Bool.destr_bool; only 1: destruct compare; only 1: intuition; only 1: now right; only 1: right; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_step_correct	40	40.035742	8429	1954
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40	40.101975	30946	3108
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ropp_ext2_Proper	40	1.866207	877	137	13.5	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Bv2N_N2Bv	40	40.113834	47105	2910
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.submap_2	40	40.164903	18592	3968
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Lget_map	40	40.140262	25646	3703
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40	40.106770	36690	2938
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.subset_m	40	40.057289	19916	1457
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_minus	40	5.865539	1065	354	0.1.6.4.0	synth with cache (only 1: intros a b; only 1: unfold Rle; only 1: intros [?| ?]; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.finite_image	40	40.282060	89122	7739
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	40	40.178591	18145	1457
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.tan_incr_0	40	40.024927	5375	3166
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Rtauto.with_env.weaken	40	40.085503	27946	4995
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.filter_spec	40	40.019038	4128	1506
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.Im_inv	40	5.114290	3186	732	12.0.3.0.2	synth with cache (only 1: intros H'5 H'8; only 1: intros x0 H'; only 1: elim H'; only 1: elim H'; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_c	40	40.514409	8832	1532
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Injective_carac	40	40.067507	19495	5294
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_l	40	36.285274	45	28	0.0.2.0.0.0.0	synth with cache (only 1: destruct l1; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_form_correct	40	40.213826	49054	3069
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.leb_1	40	40.077020	21751	3736
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_r	40	9.729761	9	7	2.0.0.0.0.0	synth with cache (only 1: rewrite PCond_cons; only 1: destruct l1; only 1: simpl; only 1: destruct 1; only 1: trivial; only 1: now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.filter_ok	40	40.030351	9324	1136
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.GEN_DIV.Ntriv_div_th	40	40.035756	9596	2913
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_length_1_inv	40	40.091714	28346	3749
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.cardinal_spec	40	40.132317	48613	2474
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.inter_spec	40	40.042078	10425	3796
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt3.map2_alt_equiv	40	40.102441	38474	4530
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.rev_elements_rev	40	40.172517	66836	2028
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zgcd_is_gcd	40	40.066284	23666	3236
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.Permuted_sort	40	40.079960	19512	3701
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.acos_1	40	40.039036	11588	1676
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	40	29.451248	13605	1579	0.0.11.2.1.5.2.2.3.0	synth with cache (only 1: intros A B SetoidFunChoice R T Hequiv Hexists; only 1: intros x; only 1: pose (T' := fun x y => forall x', R x x' -> T x' y); only 1: assert (Hcompat : forall (x x' : A) (y : B), R x x' -> T' x y -> T' x' y) by firstorder; only 1: destruct SetoidFunChoice with (R := R) (T := T) as (f, Hf); only 1: easy; only 1: intros; only 1: firstorder; only 1: exists f; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_opp	40	40.326818	5040	433
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neq_0	40	40.071794	23350	3098
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_gt_compat_r	40	40.023883	5634	1024
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_app	40	40.162685	8646	1363
coq-tactician-stdlib.8.12.dev	Coq.micromega.Refl.make_conj_app	40	40.127506	29635	5290
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app	40	40.135679	20559	4983
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.inject_Z_plus	40	40.045220	14078	1817
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec2	40	40.053996	4165	1782
coq-tactician-stdlib.8.12.dev	Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous'	40	40.131755	18313	4542
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.inject_Z_mult	40	0.029986	4	2	2.0	synth with cache (only 1: unfold Qplus, inject_Z; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.inject_Z_opp	40	0.009250	1	1	0	synth with cache (only 1: now destruct x).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	40	40.115412	35838	5756
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	40	40.194269	38542	4316
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_div	40	40.069957	22110	4318
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_double	40	40.135575	8198	1771
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map.map_bst	40	40.080174	25138	2802
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Sorted.defs.Sorted_rect	40	40.222965	34498	4051
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL_ok	40	40.025650	7928	1439
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_elements	40	40.067192	21354	3398
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_tail	40	40.179779	36538	4187
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_mem_complete1	40	40.048697	12758	4572
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.map_m_Proper	40	40.021732	6357	1782
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40	40.222017	43282	3882
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40	40.065602	24823	2457
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	40	40.059032	19828	3862
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListDec.Dec_in_Prop.In_decidable	40	11.056670	4993	827	6.3.4.15	synth with cache (only 1: induction l as [| a l IH]; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubstL_ok	40	40.018193	4757	1446
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	40	40.165085	45224	5201
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40	40.039131	9690	2199
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40	40.063024	19893	2082
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Bv2N_Nsize	40	40.129942	55232	2887
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Rmul_0_l	40	40.176581	29437	459
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Lget_app	40	40.171305	36426	3552
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.equal_1	40	40.090154	21877	3083
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.exists_1	40	40.079068	27361	2200
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.BinList.MakeBinList.jump_tl	40	40.121510	30917	3776
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.equal_m	40	40.042176	7769	4789
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_minus	40	40.039396	9871	2331
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40	40.188857	27922	3943
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.SubsetSetoid	40	2.426760	3795	165	61	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.tan_incr_1	40	40.026064	6178	3277
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Rtauto.with_env.project_In	40	40.189802	39296	5046
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.for_all_spec	40	40.057637	17366	2462
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_1	40	6.841040	1481	596	6.7.1	synth with cache (only 1: symmetry; only 1: generalize (F.mem_iff s x); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.not_injective_elim	40	40.179760	76375	5324
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.In_s_m	40	6.004322	1363	406	1.3.5.0.0.1	synth with cache (only 1: intros x y H s s' H0; only 1: rewrite (In_eq_iff s H); only 1: generalize (mem_iff s x); only 1: intros; only 1: red; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.Empty_s_m	40	0.754447	606	85	10.7	synth with cache (only 1: repeat red; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.add_s_m	40	0.218354	16	16	1.0.0.0	synth with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !add_iff, Hx, Hs; only 1: rewrite mem_iff; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry_c	40	40.036157	8069	1943
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.remove_s_m	40	0.062250	5	3	1.1.0	synth with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !remove_iff, Hx, Hs; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Surjective_list_carac	40	40.263390	76262	4683
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub	40	0.033588	2	2	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry	40	0.199826	43	15	0.0.4.1	synth with cache (only 1: intros; only 1: unfold sub31carryc, sub31, interp_carry; only 1: repeat rewrite phi_phi_inv; only 1: apply Zplus_mod_idemp_l).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.radd_term_term	40	40.123018	46173	3513
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_pos	40	29.055171	14845	1113	9.5.44	synth with cache (only 1: intros [xn xd] [yn yd] Hxy; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.gtb_compat	40	40.125452	11098	1183
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_app	40	40.001207	102	26
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec1'	40	40.116353	46714	1366
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec2'	40	0.077404	6	6	0.0.0.0.0.0	synth with cache (only 1: induction s as [| h l Hl x r Hr]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Hl, <- Hr; only 1: now destruct (partition f l), (partition f r), (f x)).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_swap	40	40.139007	50496	2919
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.filter_spec	40	40.160891	42760	2987
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.diff_spec	40	40.051429	13452	3896
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.sorted_app_inv	40	40.121068	43054	4358
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt3.combine_lelistA	40	40.040738	12363	2355
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_mem_complete2	40	30.119211	11584	3374	0.0.0.4.1.4.1.2.0.0.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: simpl; only 1: unfold not; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: intro; only 1: absurd (a0 = a); only 1: auto with datatypes; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zgcd_spec	40	40.075800	28040	2382
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40	40.141028	50313	4421
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.acos_opp	40	40.027698	7343	2400
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40	40.049210	14419	2014
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.absurd_PCond_bottom	40	6.317082	9	3	3.1	synth with cache (only 1: intros; only 1: now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_neg_pos	40	40.064532	19542	2349
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_le_compat_l	40	40.026031	8032	1389
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_app_iff	40	40.087523	7404	1923
coq-tactician-stdlib.8.12.dev	Coq.micromega.Refl.make_conj_rapp	40	40.081418	24233	4798
coq-tactician-stdlib.8.12.dev	Coq.micromega.Refl.not_make_conj_cons	40	0.289926	16	9	0.0.2	synth with cache (only 1: intros a b c H H'; only 1: rewrite make_conj_cons; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app'	40	40.171078	21168	3379
coq-tactician-stdlib.8.12.dev	Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_bis	40	40.209798	51250	6011
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qinv_involutive	40	40.058247	17867	1873
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	40	40.149709	29083	5143
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_eq	40	0.062145	3	3	0.0.0	synth with cache (only 1: intros l x y H H'; only 1: rewrite <- H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1'	40	40.038530	7081	2075
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	40	40.300474	28475	7342
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_mod	40	40.057076	17594	3429
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_succ_double	40	40.154747	18595	2209
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_succ	40	0.031642	8	6	1.0.1.0.0.0	synth with cache (only 1: destruct a; only 1: simpl N.to_nat; only 1: reflexivity; only 1: simpl; only 1: unfold Pos.to_nat; only 1: now rewrite !Pmult_nat_mult, Pos2Nat.inj_succ).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_1	40	40.066296	15414	1717
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_2	40	0.111833	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubstL_ok	40	40.019439	5134	1584
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Sorted.defs.Sorted_LocallySorted_iff	40	40.217042	24344	5656
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40	40.053453	13898	4155
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Sorted.defs.StronglySorted_inv	40	0.064599	8	5	0.2.0.1.0	synth with cache (only 1: intros a l H; only 1: inversion H; only 1: subst; only 1: inversion H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	40	1.382070	486	126	0.2.0.0.0.2.7	synth with cache (only 1: destruct n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_aux	40	40.076067	21264	5197
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.choose	40	40.243451	59748	3338
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmult_mod_distr_l	40	40.047207	17598	2261
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40	40.111315	49203	1854
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.eqk_equiv	40	40.091806	34783	2460
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	40	2.412238	833	323	1.0.1.0.0.0.1.0.1.0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.mkX_ok	40	40.033476	10769	820
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListDec.Dec_in_Prop.incl_decidable	40	40.233651	28718	4155
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	40	40.105875	34113	7287
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Bv2N_Nsize_1	40	40.087962	34272	3164
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40	40.048763	14650	1815
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Lget_app_Some	40	40.183090	19836	3935
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.equal_2	40	40.057661	12007	3840
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_mul_l	40	40.118154	14728	437
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.exists_2	40	40.143897	53366	3779
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.Tget_Tempty	40	0.013461	5	1	4	synth with cache (only 1: now intros []).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.BinList.MakeBinList.jump_succ	40	40.161683	36258	4419
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_lt	40	40.063140	15401	5431
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_In	40	8.555457	4349	1033	2.2.0.6.0.0.2.0.0.0	synth with cache (only 1: simple induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: subst; only 1: destruct (eq_dec x x); only 1: auto; only 1: constructor; only 1: auto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_eq_0_1	40	40.043391	13237	2703
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	40	40.200940	23601	4210
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Rtauto.with_env.project	40	40.181624	22951	4612
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.exists_spec	40	40.060767	17852	2963
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_2	40	40.069302	20056	3639
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.cardinal_Im_intro	40	40.141455	51016	6908
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_lt	40	6.157657	4342	826	4.0.0.0.4.0.12	synth with cache (only 1: induction l; only 1: constructor; only 1: intro y; only 1: intros; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2'	40	14.536350	1643	1088	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction s; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: inv; only 1: generalize (IHs H1 f x); only 1: destruct (f a); only 1: destruct (partition f s); only 1: simpl in *; only 1: auto; only 1: destruct (partition f s); only 1: simpl in *; only 1: inversion_clear H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_1	40	3.610281	1227	297	0.0.2.7.3	synth with cache (only 1: intros; only 1: rewrite (cardinal_2 (s:=remove x s) (s':=s) (x:=x)); only 1: auto with set; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_2	40	0.196018	32	12	1	synth with cache (only 1: auto with set fset).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.union_s_m	40	40.032170	9157	1039
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Surjective_carac	40	40.087015	30413	3134
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_c	40	40.025888	5063	938
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp	40	0.039434	2	2	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.radd_term_term'	40	40.186982	20770	3483
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_gt	40	13.366277	3865	1459	0.0.0.4.2.4.0	synth with cache (only 1: intros; only 1: red; only 1: replace r2 with (0 + r2); only 1: replace r1 with (r1 - r2 + r2); only 1: auto with real; only 1: ring; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_inv	40	40.037663	12046	1278
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.leb_compat	40	40.087381	11455	1532
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.NatOrder.leb_total	40	33.788970	17293	2822	0.0.3.1.0.3.0.4.0.0.4.4.7	synth with cache (only 1: intros a n; only 1: revert a; only 1: induction n; only 1: intros H; only 1: right; only 1: auto with arith; only 1: intros m; only 1: destruct m; only 1: simpl; only 1: auto; only 1: elim (IHn m); only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40	40.057774	18137	3005
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_length_2	40	40.154875	21739	4779
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.for_all_spec	40	40.170218	44174	3777
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.fold_spec	40	40.074143	28598	2316
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.elements_sort_ok	40	40.037817	9007	1338
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt3.combine_sorted	40	40.071389	25902	4816
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_add_intro1	40	40.100057	16574	4403
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_Zgcd	40	40.064244	25266	2293
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_eq	40	18.351784	14000	2385	0.16.0.10.6	synth with cache (only 1: intros n m p; only 1: intro H; only 1: intros LT; only 1: rewrite H; only 1: auto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.acos_inv_sqrt2	40	40.040240	12733	1864
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	40	40.129695	50407	3659
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Z_pos_sub_gt	40	40.001407	189	25
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_le_compat_r	40	40.023863	7697	1399
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_0_1	40	40.139404	53191	1032
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_lt_compat_l	40	0.014009	1	1	0	synth with cache (only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_lt_compat_r	40	0.010274	2	1	1	synth with cache (only 1: apply Z.add_lt_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_le_reg_l	40	0.019461	2	1	1	synth with cache (only 1: apply Z.add_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_le_reg_r	40	0.015485	2	1	1	synth with cache (only 1: apply Z.add_le_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_lt_reg_l	40	0.015788	3	1	2	synth with cache (only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_rev	40	40.110485	7795	1338
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_lt_reg_r	40	0.023348	4	1	3	synth with cache (only 1: apply Z.add_lt_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.041525	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_singleton	40	0.052055	6	3	0.0.3	synth with cache (only 1: intuition; only 1: invlist InA; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_gt_reg_r	40	0.042533	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_double_head	40	0.110609	2	2	0.0	synth with cache (only 1: do 2 rewrite InA_alt; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_permute_heads	40	0.772874	71	28	5.0	synth with cache (only 1: do 2 rewrite InA_alt; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Refl.not_make_conj_app	40	40.226769	17545	2892
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_add_inside	40	40.114352	22268	3606
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_inv_r	40	40.043486	6667	1020
coq-tactician-stdlib.8.12.dev	Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_ter	40	40.064428	18482	5348
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_quot	40	40.064518	18721	4144
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_add	40	40.131963	16509	1370
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_bst	40	40.055313	15441	2782
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkX_ok	40	40.034947	10328	896
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40	40.036972	10823	1302
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Sorted.defs.StronglySorted_rect	40	40.231553	24109	1840
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Sorted.defs.StronglySorted_rec	40	0.035051	3	3	0.0.0	synth with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_Desc_concat	40	40.100285	31423	6256
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	40	40.102266	33440	4103
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmult_mod_distr_r	40	40.045097	14565	2779
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_mult_Zodd	40	40.116206	49515	3468
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.eqke_equiv	40	40.066423	17259	2246
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	40	10.106041	6122	720	0.0.3.19.0.5.0.1	synth with cache (only 1: intros A B SetoidFunChoice T Hexists; only 1: destruct SetoidFunChoice with (R := eq) (T := T) as (f, Hf); only 1: intuition; only 1: intro x; only 1: abstract now inversion 1; only 1: firstorder; only 1: exists f; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_pos_ok	40	40.026450	8044	1169
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListDec.Dec_in_Prop.NoDup_decidable	40	40.189602	27625	4785
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	40	40.383559	22784	4909
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	40	40.149237	23424	5101
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Sorted.defs.StronglySorted_Sorted	40	3.892451	1545	537	2.0.2.0.0.1.7	synth with cache (only 1: intros l; only 1: induction 1 as [| a l [| ]]; only 1: auto using Sorted, LocallySorted, HdRel; only 1: auto using Sorted, LocallySorted, HdRel; only 1: inversion H1; only 1: subst; only 1: auto using Sorted, LocallySorted, HdRel).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Bv2N_upper_bound	40	40.048095	19211	842
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_spec	40	40.066917	21100	1751
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.partition_filter	40	40.175034	72146	2840
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_add	40	40.085266	25219	218
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.Tget_Tadd	40	40.305261	33672	3411
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt2.map_1	40	40.044299	11501	2988
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.nil_cons	40	0.076018	41	15	8	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.BinList.MakeBinList.jump_add	40	40.073468	23330	3311
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.get_empty	40	0.061076	10	7	0.2.0.0	synth with cache (only 1: destruct i; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_eq_0_0	40	40.093645	34185	2422
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	40	40.304956	81120	1946
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Rtauto.with_env.interp_proof	40	40.216285	50904	4665
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf1	40	40.036856	7869	3239
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.In_Image_elim	40	40.197081	47986	7125
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1	40	40.035199	7988	2656
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.inter_s_m	40	40.062205	18366	1318
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.diff_s_m	40	0.140549	5	3	0.2.0	synth with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !diff_spec, Hs1, Hs2; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Endo_Injective_Surjective	40	40.274295	19440	3387
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.sort_equivlistA_eqlistA	40	40.133477	30060	4346
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_carry	40	40.028460	4524	252
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.xror_clause_clause	40	40.168877	65254	3030
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_gt_0_lt	40	40.063262	15532	5100
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_le	40	0.170420	15	14	0.0.0.0.0.0.1	synth with cache (only 1: intros; only 1: replace r1 with (r1 - r2 + r2); only 1: pattern r2 at 3; only 1: replace r2 with (0 + r2); only 1: auto with real; only 1: auto with real; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_le_0_compat	40	40.127320	17584	1943
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Finite_Empty_or_not	40	6.079506	7293	723	7.3.0.6.18	synth with cache (only 1: intros (l, L); only 1: induction l; only 1: constructor; only 1: eassumption; only 1: now repeat constructor).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.elements_split	40	40.070129	24284	3901
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec2	40	40.198409	22903	3048
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_length_2_inv	40	40.059148	16696	4138
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	40	26.336124	5692	2459	0.0.0.0.0.0.0.0.4.0.0.0.0.0	synth with cache (only 1: unfold compare; only 1: intros x y; only 1: destruct (compare_spec x y); only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.exists_spec	40	40.278744	86558	3605
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.cardinal_spec	40	40.062624	26255	1400
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.for_all_spec	40	40.080671	27186	3669
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_add_intro2	40	40.052160	12778	4759
coq-tactician-stdlib.8.12.dev	Coq.Logic.WeakFan.Y_unique	40	40.207607	38148	4665
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt3.map2_sorted	40	40.065774	26767	6565
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_gcd	40	40.066300	24373	2613
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_add_intro	40	0.224258	66	19	6	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_Inf_In	40	40.150829	21631	5633
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.acos_bound	40	40.021324	5324	2265
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.default_isIn_ok	40	40.001241	108	26
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_succ_r	40	40.047586	16514	1912
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_le_compat_r	40	40.090711	36930	2860
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_app_idem	40	40.177986	8175	2269
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_append	40	40.163465	21683	2738
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qinv_mult_distr	40	40.042739	12032	2223
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_rem	40	40.067883	20029	4664
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_mul	40	40.168618	24364	2200
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_pos_ok	40	40.024564	6893	936
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_2	40	40.286916	25654	1820
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40	40.076201	25342	2184
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_end	40	40.133640	27074	3349
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_mod	40	40.064472	22781	3173
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40	40.096906	32171	4311
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.InA_eqke_eqk	40	40.100696	34249	3930
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	40	40.061432	19870	1634
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.finite_cardinal	40	40.167025	51457	6336
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_N_ok	40	40.031585	9968	1348
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListDec.Dec_in_Type.incl_dec	40	40.239211	31153	2855
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	40	40.283638	18710	6656
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Sorted.defs.Sorted_extends	40	40.215709	12425	3414
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.ByteV2N_upper_bound	40	40.024266	10530	926
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40	40.251879	58221	1298
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.partition_1	40	40.072882	22644	3439
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_def	40	40.055805	13010	1026
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_opp	40	40.138884	49623	692
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt2.map_2	40	40.088769	29999	4900
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.BinList.MakeBinList.jump_pred_double	40	40.162326	30378	4138
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.destruct_list	40	40.215709	85515	3479
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.get_Full_Gt	40	40.034179	9303	2758
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_eq_0_0	40	40.043757	13601	2310
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	40	40.172806	21122	1289
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Rtauto.with_env.Reflect	40	40.216627	103006	4838
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf2	40	40.040401	8940	4077
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2	40	40.031235	6649	4015
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.filter_equal	40	40.040939	15184	1545
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.gtb_1	40	40.179742	29032	3694
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_ge	40	40.053110	10947	4254
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Surjective_inverse	40	40.175907	19409	1723
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add	40	40.023789	5843	3207
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_le_compat_l	40	40.047044	11061	2569
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40	40.025608	7586	900
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec1	40	40.142870	53756	4550
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zgcd_div_swap0	40	40.052931	21842	1678
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_add_elim	40	40.122527	25069	4433
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.isIn_ok	40	40.001354	202	28
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_le_compat_l	40	40.098787	41919	3157
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.filter_subset	40	0.081470	3	3	0.0.0	synth with cache (only 1: intros f Hf s s' Hs a; only 1: rewrite !filter_spec, Hs by auto; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.partition_2	40	0.104937	28	9	0.0.3	synth with cache (only 1: intros n m Hn; only 1: rewrite partition_filter; only 1: apply eq_refl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred_c	40	0.029440	2	2	0.0	synth with cache (only 1: intros; only 1: apply spec_sub_c).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred	40	0.099324	4	3	1.0.0	synth with cache (only 1: intros; only 1: rewrite <- spec_1; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt3.combine_1	40	40.051318	13957	4101
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok1	40	40.068670	20199	3564
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_succ	40	40.048837	12952	2297
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qdiv_mult_l	40	40.040233	10374	2463
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmult_mod	40	40.071232	27313	2614
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.filter_ext	40	40.055851	6109	2625
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40	40.056514	18063	3119
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.filter_elements	40	40.093599	32086	2795
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.partition_ok2	40	40.028419	8280	1013
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_N_ok	40	40.024312	7436	937
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.NoDupA_eqk_eqke	40	40.098870	32463	3894
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.tech_Rplus	40	40.028764	4945	1062
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	40	40.021250	5817	596
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_le_compat_r	40	40.099413	13274	2408
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zgcd_div_swap	40	40.051461	11708	4600
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok1	40	40.001095	77	25
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.leb_1	40	40.078830	19933	1915
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_div2	40	1.484922	1091	184	0.0.1.1.1.1.11.1.0.1.2	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: induction p; only 1: simpl; only 1: trivial; only 1: simpl Z.to_N; only 1: trivial; only 1: reflexivity; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_quot2	40	0.478832	382	60	13.1.0.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40	40.100302	33113	3163
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.xelements_spec	40	40.096850	19113	4014
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi2_phi_inv2	40	40.030017	8514	813
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt2_lower_bound	40	40.065056	18637	1752
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40	40.167373	37719	2230
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.exists_spec	40	40.102987	34840	3845
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt2.map_NoDup	40	40.063180	18309	3819
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40	40.050274	7244	927
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.N2Bv_N2Bv_gen	40	40.068651	26106	1691
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_lt_compat_r	40	40.076988	28947	2445
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_compat_r	40	0.041054	10	3	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40	0.092705	3	2	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_bst	40	40.333517	15133	2673
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt3.map2_0	40	40.044859	11632	4011
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok2	40	40.035402	7545	3819
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_div_r	40	40.113247	20364	2754
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zplus_mod	40	40.111035	24680	2926
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.filter_spec	40	40.071369	22918	4505
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.filter_spec	40	40.050835	16355	1696
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_eq_0_1	40	40.035775	9489	2211
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	40	40.030263	9754	746
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.findA_rev	40	40.064093	18410	2991
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_equal	40	40.170067	55898	3135
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_0_sqr	40	40.063958	19344	2316
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec2	40	40.168207	66336	4519
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_pos_pos	40	40.059481	7167	811
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	40	40.040209	15661	801
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zgcd_ass	40	40.052996	19214	1925
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok	40	40.001126	40	26
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.gtb_compat	40	40.107378	14535	1938
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_pow	40	40.082141	26297	4558
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40	40.094689	32891	3078
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.elements_1	40	40.129471	44921	3656
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul_c	40	40.029891	6370	1438
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul	40	0.039041	2	2	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.diveucl_21_spec_aux	40	40.062400	21513	1840
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	40	40.195613	51028	3354
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.fold_spec'	40	40.176250	66269	3193
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_1	40	40.063650	18714	3737
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40	40.050201	10614	1694
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	40	40.101202	38612	1812
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40	40.077369	29821	1547
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0.008235	1	1	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40	6.705504	15903	173	0.176	synth with cache (only 1: compute; only 1: now rewrite recursion_0).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_testbit	40	16.511582	17580	2120	0.1.0.2.1.20.2.6.4	synth with cache (only 1: intros H; only 1: assert (Hn : 0 <= n); only 1: trivial; only 1: destruct a; only 1: simpl; only 1: now destruct n; only 1: simpl; only 1: apply Z.testbit_Zpos; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.abs_N_spec	40	0.032383	7	7	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.abs_N_nonneg	40	0.017231	2	2	0.0	synth with cache (only 1: intros; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.id_abs	40	0.006778	2	1	1	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.id	40	0.009424	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_0	40	0.008519	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_pos	40	0.009365	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_neg	40	0.007159	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_opp	40	0.070523	8	6	0.0.0.0.0.2	synth with cache (only 1: destruct n; only 1: now Z.nzsimpl; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qinv_plus_distr	40	31.762054	8426	1410	8.0.3.3.2.0.0.3	synth with cache (only 1: intros x y; only 1: unfold Qplus, inject_Z; only 1: simpl; only 1: unfold Qeq; only 1: intro H0; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_succ	40	1.337765	389	147	1.1.3.1.0.1	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1 || intros _; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qinv_minus_distr	40	0.777212	266	105	0.0.0.4.1	synth with cache (only 1: red; only 1: intros; only 1: simpl; only 1: rewrite Pos2Z.inj_mul; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_add	40	0.367379	77	46	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_mul	40	0.421128	152	71	10	synth with cache (only 1: now destruct n, m).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_find	40	40.050851	13808	2108
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec1	40	40.037345	9623	1934
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt3.map2_1	40	40.032051	8395	3361
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.acos_bound_lt	40	40.027715	7198	1709
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zminus_mod	40	40.070339	25956	3035
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.xforall_spec	40	40.069717	23379	3150
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.filter_ok	40	40.078457	4691	514
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_eq_O_2PI_0	40	40.035784	8892	2017
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	40	40.027050	10116	828
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_Empty	40	40.104307	34674	3226
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.min_elt	40	40.232015	37961	4428
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_0_sqr	40	40.064057	15605	5222
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec1	40	40.211063	62508	4914
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40	40.033522	11360	893
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_pos_appart_zero	40	40.110845	14262	2282
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40	40.061266	21844	2456
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_l	40	40.001270	71	28
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.leb_compat	40	40.032055	5996	3407
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.set_induction_max	40	40.035769	9222	1229
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.elements_2	40	40.079210	23622	4083
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_square_c	40	40.057282	18736	2274
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.div2_phi	40	40.059415	15324	1681
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.fold_spec	40	40.119849	43100	3513
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_2	40	40.075920	22974	4631
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40	40.057159	9492	992
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.N2Bv_Bv2N	40	40.084662	29210	3068
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40	40.060356	18649	3255
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_lt_compat_l	40	0.007888	1	1	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_compat_l	40	0.035043	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_ge_compat_r	40	0.445329	215	34	7.0.3	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_ge_compat_l	40	0.042535	8	3	5.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	40	40.197596	40523	4952
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_inj_r	40	40.042973	12896	2898
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_sub	40	40.077888	24327	4889
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_2	40	40.055398	16934	1663
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec2	40	40.034109	7725	3124
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt3.map2_2	40	40.056922	18250	4119
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.In_compat	40	0.083645	16	7	6	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.cos_acos	40	40.028266	7849	1889
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zplus_mod_idemp_l	40	40.068351	23788	4225
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.020012	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.MapsTo_1	40	1.934835	590	156	0.0.0.0.8.0	synth with cache (only 1: intros m x y e; only 1: CRelationClasses.simpl_crelation; only 1: apply InA_eqA with (x, e); only 1: eauto with *; only 1: eauto with *; only 1: eauto with *).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.for_all_spec	40	40.080406	26902	3814
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.partition_aux_spec	40	40.094407	31669	2995
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_eq_O_2PI_1	40	40.044435	8886	1959
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_NoDup	40	22.607732	6676	2469	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: constructor; only 1: contradict H; only 1: clear IHm H0; only 1: induction m; only 1: simpl in *; only 1: inversion H; only 1: simpl in *; only 1: destruct a; only 1: inversion H; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40	40.022883	7985	696
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_empty	40	40.309958	133442	901
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.max_elt	40	40.053007	13150	3792
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_sqr_eq_0_l	40	40.051928	14355	2197
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec2w	40	40.348088	132676	3945
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.rel_prime_dec	40	40.055458	18365	2372
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_le_reg_l	40	40.255627	33127	2555
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_r	40	40.001115	50	20
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.elements_split	40	40.115908	37510	4065
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.set_induction_min	40	40.038502	9149	3533
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40	40.124244	46119	3238
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div21	40	40.284681	7971	522
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40	40.070626	19116	5917
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_correct	40	40.044200	11744	2616
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_pred	40	29.428855	10109	2549	0.0.0.3.2.0.0.0.1.1.0.0.6.4	synth with cache (only 1: intros; only 1: destruct n; only 1: unfold Z.pred; only 1: rewrite <- N.sub_1_r; only 1: rewrite !abs_N_nonneg; only 1: trivial; only 1: Z.order'; only 1: now Z.nzsimpl'; only 1: unfold Z.pred; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.subsetl_spec	40	40.045385	12376	1808
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	40	40.050612	8784	1280
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nbit0_Blow	40	40.105564	36819	3289
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_ge_compat	40	40.106449	42667	2780
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	40	40.189857	7276	1000
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_inj_l	40	40.052581	14848	3345
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_bst	40	40.048098	14160	1781
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.lt_strorder	40	40.114586	42068	4953
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.acos_cos	40	40.032892	10418	1624
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zminus_mod_idemp_l	40	40.089396	32746	5243
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zminus_mod_idemp_r	40	0.177061	45	14	0.0.3	synth with cache (only 1: intros n m p; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.mem_1	40	40.047299	11885	1816
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.xexists_spec	40	40.105232	39227	4165
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.partition_spec	40	40.077861	24797	3999
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_refl	40	11.988524	29187	1083	111	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40	40.033565	9363	2152
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.fold_right_pair_NoDup	40	40.059548	17857	3144
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40	40.021227	6749	576
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1	40	40.094654	31149	4810
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_sqr_eq_0	40	40.044166	11205	2629
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.empty_1	40	40.130881	53870	3284
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_0_1	40	0.033802	4	3	0.0.1	synth with cache (only 1: replace 1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_0_1	40	0.056080	14	6	0.0.0.2	synth with cache (only 1: replace 1 with 1²; only 1: auto with real; only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec1	40	40.276144	91900	4095
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.prime_dec_aux	40	40.060898	19986	2375
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_le_reg_r	40	40.160999	28781	3350
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_l	40	40.001526	106	28
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.elements_Add	40	40.081838	28252	2330
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.fold_3	40	40.045781	10230	4154
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.elements_3	40	40.150694	59206	2893
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div	40	41.038669	30139	1614
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_compare	40	40.084651	29950	4036
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_le	40	0.018230	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_lt	40	0.024248	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt, N.lt; only 1: now rewrite Z2N.inj_compare).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.subsetr_spec	40	40.036120	6814	2156
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40	40.026062	5374	2774
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40	40.068362	20799	1871
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_vs_elt_inv	40	40.146903	21707	3793
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Bnth_Nbit	40	40.079445	26505	3575
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_le_compat	40	40.146813	61921	2299
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	0.024425	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_lt_reg_r	40	0.010160	1	1	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_le_reg_r	40	0.024539	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	0.009805	1	1	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_ge_reg_r	40	0.034970	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_reg_r	40	0.037373	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40	40.125814	12883	1862
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.lt_compat	40	40.052070	14663	2796
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.sin_acos	40	40.021872	4957	1771
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_1	40	40.044350	12082	2047
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmult_mod_idemp_l	40	40.061806	20868	4294
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.018645	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.EqualityModulo.eqm_refl	40	0.013021	9	2	2	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.EqualityModulo.eqm_sym	40	0.012257	3	2	1.0	synth with cache (only 1: intros n m H; only 1: now rewrite <- ?Z.add_le_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.mem_2	40	40.127530	48424	5028
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.empty_1	40	0.296055	407	47	3.0.22	synth with cache (only 1: intros H; only 1: simpl in *; only 1: inversion_clear 1).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.exists_spec	40	40.085364	30748	2906
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.partition_spec1	40	40.040527	10305	2207
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0.016079	1	1	0	synth with cache (only 1: now rewrite partition_spec).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_antisym	40	40.066088	21736	2515
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40	40.029129	6943	2379
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_min	40	23.711277	10388	3460	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.7	synth with cache (only 1: intros Hn Hm; only 1: rewrite !abs_N_nonneg; only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: unfold Z.min, N.min; only 1: simpl; only 1: now case Pos.compare; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: trivial; only 1: now destruct Hn || now destruct Hm || clear; only 1: now destruct Hn || now destruct Hm || clear; only 1: Z.order; only 1: Z.order; only 1: Z.solve_min).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_NoDup	40	40.114657	39260	4466
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mon_of_pol_ok	40	40.019496	6119	1262
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1b	40	40.070187	20641	4128
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	40	40.111530	18756	827
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_0_lt_compat	40	40.065821	16607	4568
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec2	40	40.283275	104014	3163
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.prime_dec	40	40.065810	24181	1994
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRup_nat	40	40.114122	43128	3059
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_Inf	40	0.397749	171	45	0.1.0.2.0.4	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: constructor; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_r	40	40.001394	134	24
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40	40.112805	40324	3096
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_Inf	40	0.539270	198	63	5.0.0.1.2	synth with cache (only 1: destruct l; only 1: intros; only 1: constructor; only 1: intros; only 1: auto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.fold_4	40	40.045395	9495	3944
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_lt_0_compat	40	4.867243	968	522	0.0.0.1.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: red; only 1: intros; only 1: absurd (1 <= 0); only 1: auto with real; only 1: replace 1 with (r * / r); only 1: replace 0 with (r * 0); only 1: auto with real; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.elements_3w	40	40.222941	85340	4147
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mod	40	40.059159	18675	1814
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.subset_spec	40	40.077118	24588	2969
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt2_spec	40	40.058916	19045	1675
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.eq_equiv	40	0.178411	567	27	33	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	40	40.043581	9460	1350
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_vs_cons_inv	40	40.075225	23629	4737
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nbit_Nsize	40	40.106867	35595	4461
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_lt_compat	40	40.109819	44431	2463
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	40	40.208877	4271	1012
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.one_succ	40	0.010980	6	2	0.4	synth with cache (only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.two_succ	40	0.010021	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.add_0_l	40	0.007659	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.compare_spec_aux	40	40.147444	56139	5558
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.tan_acos	40	40.021161	5425	1666
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_bst	40	40.084694	29055	2855
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.EqualityModulo.eqm_trans	40	40.108329	29122	2863
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.is_empty_1	40	40.144104	56030	3717
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.partition_filter	40	40.146428	56852	4030
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40	40.029517	5817	1322
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.partition_ok2	40	0.013557	2	2	0.0	synth with cache (only 1: rewrite partition_spec; only 1: now apply filter_ok).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_trans	40	40.089962	32754	2494
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_irrefl	40	0.252424	107	14	14	synth with cache (only 1: apply Z.lt_irrefl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.EqualityModulo.eqm_setoid	40	4.403751	2425	226	4.1.14.7.0.6.0	synth with cache (only 1: unfold eqm; only 1: split; only 1: auto; only 1: auto with relations; only 1: intros H; only 1: intros; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_max	40	40.060364	16374	5534
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_l_1	40	40.049647	12593	3870
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.interp_PElist_ok	40	40.025625	9466	1050
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_2	40	40.080149	22931	4593
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	40	40.139579	51398	4316
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	40	40.246277	82864	2770
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.not_prime_divide	40	40.109820	41106	3427
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRfloor	40	40.562799	22907	806
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Pcond_Fnorm	40	40.001761	189	32
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.elements_Add_Below	40	40.060586	18928	2383
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_alt	40	40.145983	23793	5197
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.FoldOpt.fold_equal	40	40.055812	13694	4620
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.FoldOpt.add_fold	40	0.024120	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.028233	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_lt_contravar	40	40.061934	15636	4465
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.choose_1	40	40.105482	38576	3255
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_gcd	40	40.057830	4157	677
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.eq_Leq	40	40.105525	33035	5942
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_rev	40	40.128036	16905	1512
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nbit_Bth	40	40.101044	35582	3984
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_lt_compat2	40	40.089390	34633	1674
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	40	40.049744	14666	2736
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.of_pos_rec_spec	40	40.037109	10024	2443
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_0_compat	40	3.671898	1460	278	4.0.4.0.0.0.7	synth with cache (only 1: destruct m as [| m| m]; only 1: Z.swap_greater; only 1: now destruct n; only 1: Z.swap_greater; only 1: now destruct n; only 1: Z.swap_greater; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40	0.020850	4	2	2.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.add_succ_l	40	40.252614	31640	5178
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.opp_0	40	0.008448	2	2	0.0	synth with cache (only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.opp_succ	40	2.198202	1922	212	6.3.0.0.1.25	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: now rewrite Pos.add_comm; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.compare_spec	40	40.081550	25991	5446
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.derivable_pt_acos	40	40.019832	4196	1707
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_1	40	40.074081	23742	2673
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.is_empty_2	40	40.066889	22495	2740
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.partition_spec1	40	40.080786	28314	4030
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.partition_spec2	40	0.313337	33	8	0.0.5	synth with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.INV_init	40	40.078884	22269	5217
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.INV_sym	40	0.224102	119	29	8.1	synth with cache (only 1: revert l1 l2; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_not_eq	40	40.124682	51107	2933
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.EqualityModulo.Zplus_eqm	40	40.057385	20928	1876
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_quot	40	40.075844	25269	4925
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_r_1	40	40.051541	12536	3839
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.norm_subst_ok	40	40.015399	4252	1300
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_3	40	40.111491	37710	4361
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.mem_1	40	40.113354	39017	4531
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	40	40.190982	24503	3534
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_appart_reg_l	40	40.057178	15166	2571
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.set_induction_max	40	40.048560	11798	1312
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_NoDup	40	40.127280	16282	5963
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_eqk	40	0.068352	35	8	4.3	synth with cache (only 1: induction 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_r	40	0.009093	2	1	1	synth with cache (only 1: eauto using OrderTac.eq_trans, OrderTac.eq_sym).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.choose_equal	40	40.091489	29588	3023
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_l	40	0.008452	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_refl	40	0.017390	4	2	0.2	synth with cache (only 1: intros l'; only 1: auto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_refl	40	0.017925	1	1	0	synth with cache (only 1: auto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_sym	40	0.023654	2	2	0.0	synth with cache (only 1: unfold eqk, eqke; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_FEeval_PEeval	40	40.001351	166	26
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_sym	40	0.033074	2	2	0.0	synth with cache (only 1: unfold eqk, eqke; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_1_lt_contravar	40	40.049806	9645	3017
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_trans	40	1.297175	699	117	0.13.3	synth with cache (only 1: intros x y z; only 1: compute; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.choose_2	40	40.128506	46156	5137
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.ror_clause_clause	40	40.041377	9333	4007
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_gcd	40	41.741500	7185	954
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.lt_strorder	40	40.091235	34047	1415
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_in	40	40.164798	25564	4410
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nxor_BVxor	40	40.084881	31673	3048
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	40	40.047559	4141	678
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.is_int	40	40.061153	19507	1919
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_le_0_reg_r	40	40.098126	36162	3404
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.succ_pred	40	40.096725	26416	6658
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pred_succ	40	0.013746	2	2	0.0	synth with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.derive_pt_acos	40	40.021655	5695	1355
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	40	8.637623	984	196	2.16	synth with cache (only 1: compute; only 1: f_equiv').
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	40	40.068504	22272	3494
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_2	40	40.082139	25778	2919
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sub_0_r	40	3.964127	8713	506	0.0.0.0.0.46	synth with cache (only 1: destruct n; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	40	2.372484	1021	166	0.0.1.12	synth with cache (only 1: unfold pow; only 1: intro y; only 1: rewrite recursion_0; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.add_1	40	40.089850	25314	3597
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40	40.075756	25161	4304
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.INV_drop	40	40.077695	24244	2222
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Zle_Qle	40	40.129416	53481	3748
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.EqualityModulo.Zminus_eqm	40	40.162147	24736	2686
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_rem	40	40.081283	26242	5357
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_1	40	40.044339	10831	3901
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_correct	40	40.027653	9252	1130
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_spec_right	40	40.171270	72415	730
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.mem_2	40	40.150849	55274	5530
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.compare_spec	40	40.432803	199390	2839
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_appart_reg_r	40	40.046774	10619	3147
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.set_induction_min	40	40.047214	11706	4007
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_lt_0_plus_1	40	40.061707	15168	4642
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_trans	40	40.105219	34080	4706
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_trans	40	0.019537	2	1	1	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqk	40	0.061960	9	2	2	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqke	40	0.145059	26	10	0.0.0.1	synth with cache (only 1: unfold eqk, eqke; only 1: unfold eqk, ltk; only 1: intuition; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.choose_empty	40	40.162009	64007	5491
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_crossproduct	40	40.001278	110	25
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_equiv	40	3.471993	1539	237	3.1.2.1.0.18.0.0.3	synth with cache (only 1: split; only 1: auto with ordered_type; only 1: auto with ordered_type; only 1: apply Build_preorder; only 1: unfold eqk, ltk; only 1: auto with *; only 1: unfold eqk, eqke; only 1: red; only 1: eauto using PeanoNat.Nat.Private_OrderTac.Tac.eq_trans, PeanoNat.Nat.Private_OrderTac.Tac.eq_sym).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_comm	40	40.165326	41095	3827
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.ror_cnf_cnf	40	40.171355	50474	4361
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_equiv	40	0.062993	4	4	0.0.0.0	synth with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter_int31_iter_nat	40	40.057125	17813	1982
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.lt_compat	40	40.063970	8600	1893
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40	33.482834	25938	2771	0.0.1.2.2.3.5.1.4.3.0.0.0.5.1.22.7	synth with cache (only 1: intro H; only 1: destruct n, m; only 1: Z.nzsimpl; only 1: intros Ha; only 1: Z.order'; only 1: easy || now destruct y; only 1: easy; only 1: intro LT; only 1: auto; only 1: now split; only 1: unfold Z.lt; only 1: simpl; only 1: easy || now destruct 1; only 1: trivial; only 1: simpl; only 1: easy; only 1: easy || now destruct y).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	0.021324	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_in'	40	40.082771	25274	4485
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nand_BVand	40	40.072578	24933	2932
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.of_Z_spec	40	40.064219	6183	1103
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.flatten_e_elements	40	5.768444	2556	572	0.0.0.10.3	synth with cache (only 1: intros; only 1: rewrite elements_node; only 1: unfold elements; only 1: simpl; only 1: now rewrite !app_assoc_reverse).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_rot	40	11.797144	3050	899	2.8.5.1.0.0.0.1	synth with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: rewrite app_nil_r; only 1: trivial; only 1: rewrite app_assoc; only 1: rewrite app_assoc; only 1: now rewrite <- app_assoc).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_strorder	40	11.736723	26381	763	0.1.5.47.61.1	synth with cache (only 1: constructor; only 1: intro y; only 1: destruct y; only 1: compute; only 1: order; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.negbE	40	3.303948	651	106	19	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.Z_oddE	40	0.044092	3	2	0.1	synth with cache (only 1: rewrite Zmod_odd; only 1: now destruct Z.odd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.Z_evenE	40	0.041250	2	2	0.0	synth with cache (only 1: rewrite Zmod_even; only 1: now destruct Z.even).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40	40.095716	31846	2839
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	40	40.026546	6542	1240
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sub_succ_r	40	40.354171	25477	6099
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.mul_0_l	40	0.007620	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.add_2	40	40.046935	10703	1696
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.elements_spec1	40	40.110815	38648	5865
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.INV_eq	40	40.065476	22521	1380
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_app	40	40.106279	12974	2898
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Zlt_Qlt	40	40.110242	37603	4479
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.EqualityModulo.Zmult_eqm	40	40.054670	15098	1899
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_pow	40	40.061676	20125	3445
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_NoDup	40	40.074008	22427	4384
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_rec_ok	40	40.043055	15603	1810
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec	40	40.134989	50695	3614
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.MapsTo_1	40	40.088572	28127	2409
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.equal_1	40	40.117066	33628	2173
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.elements_spec2	40	40.265609	92185	3298
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_succ_abs	40	6.833557	2075	617	1.1.1.1.0.0.0.0.11	synth with cache (only 1: destruct n; only 1: rewrite !abs_N_nonneg; only 1: now apply Z2N.inj_succ; only 1: Z.order; only 1: Z.order_pos; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: simpl; only 1: now rewrite Pos.add_1_r).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_appart_reg_l	40	40.050324	3370	496
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.fold_3	40	40.048743	10526	4479
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_add_abs	40	1.527221	455	185	7.0.0.0.0.1	synth with cache (only 1: assert (forall p q, Z.abs_N (Z.pos p ÷ Z.pos q) = (N.pos p / N.pos q)%N); only 1: intros; only 1: rewrite abs_N_nonneg; only 1: now apply Z2N.inj_quot; only 1: now apply Z.quot_pos; only 1: now destruct n, m).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_mul_abs	40	0.012106	1	1	0	synth with cache (only 1: now destruct n, m).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_0	40	0.005131	3	1	2	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_plus_1	40	40.062856	17669	3405
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.choose_3'	40	40.156620	61670	3775
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_ok	40	40.001651	91	30
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.ror_opt_cnf_cnf	40	40.045611	10352	4490
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.addmuldiv31_equiv	40	41.333670	9388	897
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40	40.073854	26106	2388
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_map	40	40.129548	6769	1019
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.N2Bv_sized_Nsize	40	40.063727	22045	2264
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_succ	40	14.324702	3388	1005	0.0.0.0.3.0.0.0.2.6	synth with cache (only 1: unfold Z.succ, Z.pred; only 1: simpl; only 1: destruct n; only 1: simpl; only 1: easy; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.is_nonneg	40	1.753886	2057	159	3.0.2.24.1	synth with cache (only 1: apply Z.lt_succ_r; only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.cons_1	40	40.091889	27372	3396
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.id	40	0.969652	435	82	0.4.0.1.17	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial using Nat.le_add_r; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_swap_app	40	40.048928	14436	2867
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.tech_Rgt_minus	40	15.913649	3877	1052	0.0.0.1.0.4.9	synth with cache (only 1: intros x y H'; only 1: pattern x at 1; only 1: rewrite <- (Rplus_0_r x); only 1: apply Rplus_lt_compat_l; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat	40	40.143837	18381	3451
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.S_INR	40	0.725061	82	18	0.0.0.5	synth with cache (only 1: induction n; only 1: simpl; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.is_zeroE	40	40.058684	8129	170
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.S_O_plus_INR	40	3.095783	525	143	2.0.3.0.0.2.1	synth with cache (only 1: intros; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros; only 1: field).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	40	40.059134	17672	2307
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.mul_succ_l	40	40.092621	25357	6039
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.add_3	40	40.060180	16766	2808
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_rev_append	40	40.096900	35658	2813
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.INV_lt	40	40.028354	7092	2138
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Injective_Surjective_Bijective	40	40.102098	23631	3545
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_lteq	40	40.068884	21996	3118
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_rev	40	40.039789	10365	2084
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.EqualityModulo.Zopp_eqm	40	40.184203	21284	3213
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_0	40	40.043734	10494	4002
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult1_ok	40	40.018776	4840	1426
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_bis	40	40.092802	30564	3737
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.mem_1	40	40.048842	13976	1091
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	40.169452	63959	4460
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec1	40	40.195290	55148	6233
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_appart_reg_r	40	40.098565	18089	2076
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.fold_4	40	40.058170	12028	5780
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.choose_3	40	40.083104	27164	4673
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_correct	40	40.002049	249	43
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.ratom_cnf	40	40.211215	76775	4541
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_mul_div	40	40.128260	1661	313
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zlt_square_simpl	40	40.081020	30419	2493
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zgt_square_simpl	40	0.035721	3	2	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_map_inv	40	40.074291	22229	4764
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.N2Bv_sized_Bv2N	40	40.168330	73322	964
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.compare_end_Cmp	40	40.161450	62645	1609
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj	40	40.079414	27447	4709
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.029442	6	5	0.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros H; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_middle	40	40.060898	15841	3356
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat'	40	40.241885	18899	3728
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_nodep	40	23.868454	30859	2842	4.2.0.0.42	synth with cache (only 1: intros x x' Hx y y' Hy Hr; only 1: apply fold_rec; only 1: intros; only 1: trivial; only 1: auto with map).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_not_ltk	40	0.020027	2	2	0.0	synth with cache (only 1: unfold eqk, ltk; only 1: auto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_eqk	40	0.018500	1	1	0	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_ltk	40	0.017159	1	1	0	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.InA_eqke_eqk	40	1.178876	600	113	1.5.0.11	synth with cache (only 1: induction 1; only 1: left; only 1: firstorder; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bitE	40	40.118917	33640	458
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.plus_INR	40	40.046956	12131	3582
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	40	40.058018	16173	3143
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.remove_1	40	40.057588	11271	1645
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.eqb_eq	40	40.243703	21444	5845
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.elements_spec2	40	40.157290	63757	4763
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.INV_rev	40	40.086804	29174	2261
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin_Finite	40	40.457551	17640	3102
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_le_weak	40	40.121991	47183	3312
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.EqualityModulo.Zmod_eqm	40	40.075804	24864	6585
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_split	40	40.115883	21385	3944
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_1	40	40.032705	7280	3417
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmultm1_ok	40	40.015342	3548	1185
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.mem_2	40	40.149816	50894	3975
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.empty_1	40	0.031563	8	1	7	synth with cache (only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.subset_1	40	40.052842	16548	982
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec2	40	40.167412	38606	3011
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRapart_morph	40	40.156146	11834	4111
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.FoldOpt.fold_equal	40	40.068958	15202	5543
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.FoldOpt.add_fold	40	0.021184	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.025853	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.min_elt_1	40	40.070698	20936	5183
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_pow_correct	40	40.002797	268	41
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app	40	28.099941	13779	2670	0.1.13.0.0.12	synth with cache (only 1: intro y; only 1: intros l m a; only 1: intros; only 1: rewrite H; only 1: rewrite app_comm_cons, Permutation_cons_append; only 1: now rewrite <- app_assoc).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.rxcnf_xcnf	40	40.152669	60464	3072
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.shift_unshift_mod_2	40	40.050906	10835	1322
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zeq_plus_swap	40	40.023327	7721	1172
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_image	40	40.153918	59100	4742
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40	40.089570	39655	446
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.eq_dec	40	0.024470	2	1	1	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.xI_succ_xO	40	0.032563	39	7	9	synth with cache (only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_finite	40	0.929496	600	124	6.2.3.0	synth with cache (only 1: intros X x H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.compare_more_Cmp	40	40.071351	21265	2870
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_compare	40	40.079928	24865	6466
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_add_elim2	40	2.344766	483	255	0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: simple induction x; only 1: simpl; only 1: intros [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes; only 1: simpl; only 1: do 3 intro; only 1: elim (Aeq_dec b a0); only 1: tauto; only 1: intros H0 [| ]; only 1: auto with datatypes; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_weak	40	40.099239	34517	4496
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_alt	40	40.107604	34014	4873
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lt_pow_lt_log	40	40.090096	34560	1457
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.minus_INR	40	40.063231	20100	2838
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	40	40.053914	16805	1613
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.remove_2	40	40.059855	18032	2708
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.ltb_lt	40	40.112153	31722	5380
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.elements_spec2w	40	40.056871	17757	4746
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40	40.086115	27365	2563
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_lt_trans	40	40.091406	32416	2970
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.extend_ok	40	40.115007	28682	3656
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_Zdiv	40	40.049404	13669	2134
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_swap	40	40.109135	9988	2749
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_singleton	40	0.353078	112	26	1.1.0.6.0	synth with cache (only 1: constructor; only 1: rewrite InA_altdef, Exists_exists; only 1: intros (y, (H4, H5)); only 1: intuition; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_2	40	40.064816	19982	4358
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.r_list_pow_rev	40	40.039233	15116	1036
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_1	40	40.082586	26328	1270
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cadd_ext_Proper	40	17.000466	8804	555	49.11	synth with cache (only 1: intros n m p q H1 H2; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.subset_2	40	40.124945	42230	4886
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec3	40	40.167588	68498	2975
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cmul_ext_Proper	40	2.774465	1650	139	24.10	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.choose_equal	40	40.082665	26324	2877
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.copp_ext_Proper	40	2.281954	643	93	14.10	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.phi_ext1_Proper	40	0.267335	93	10	14	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.sincl_add_x	40	40.124180	20151	5344
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.min_elt_3	40	40.066817	18861	4830
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_in	40	0.137394	6	6	0.0.0.0.0.0	synth with cache (only 1: intros X x H'; only 1: unfold Subtract; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_correct	40	40.004587	421	43
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_Add	40	40.123733	20878	2613
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_middle	40	0.008657	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.funind.Recdef.le_lt_SS	40	3.556305	2361	327	32	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.eval_cnf_app	40	40.084333	29091	3224
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr	40	4.736346	1542	564	0.0.1.0.1.5	synth with cache (only 1: intros X Y H'; only 1: intro IT; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.prop_degen_ext	40	40.295685	121143	8564
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zlt_0_minus_lt	40	40.091898	28764	5720
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pos_mod	40	40.038010	11630	1591
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_Forall	40	40.158573	23532	3996
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.hd_error_tl_repr	40	40.102337	20078	3464
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.of_nat_ext	40	40.153576	58229	1909
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare.discrete_nat	40	40.108679	25932	3352
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_discr	40	40.309722	115646	2921
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorEq.BEQ.eqb_nat_eq	40	40.093115	26672	3571
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Pred_Type.Generic.not_all_not_ex	40	40.202182	82932	8002
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.eta	40	40.208957	65035	1999
coq-tactician-stdlib.8.12.dev	Coq.Sets.Classical_sets.Ensembles_classical.not_included_empty_Inhabited	40	40.272109	82724	7074
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.NNPP	40	40.214200	78735	6518
coq-tactician-stdlib.8.12.dev	Coq.Logic.PropExtensionality.proof_irrelevance	40	40.259750	92153	4315
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.pred_double_spec	40	0.007792	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorDef.BASES.trunc	40	40.219375	70134	5503
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalUniqueChoice.unique_choice	40	40.214033	51701	6767
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.eq_dec	40	40.104661	26936	3908
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_succ	40	40.199456	42019	2972
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.Peirce	40	0.497268	692	68	24.0	synth with cache (only 1: intros; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.injective_preserves_cardinal	40	40.151727	24663	4432
coq-tactician-stdlib.8.12.dev	Coq.funind.Recdef.Splus_lt	40	8.678768	10002	1015	100	synth with cache (only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Logic.WeakFan.Y_approx	40	40.123476	33681	5678
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Sorted.defs.Sorted_StronglySorted	40	40.208052	17298	3655
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Add_preserves_Finite	40	40.178663	40934	6843
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.ltl_unit	40	40.139573	30981	3927
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListDec.Dec_in_Type.NoDup_dec	40	40.243427	26148	3388
coq-tactician-stdlib.8.12.dev	Coq.Arith.Euclid.eucl_dev	40	40.229344	67541	3876
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.compare_cont_Cmp	40	40.105613	33191	4026
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.BinList.MakeBinList.nth_jump	40	40.097932	31939	4259
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.acc_app	40	0.385277	154	39	3.5	synth with cache (only 1: inversion 1; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_le	40	40.058621	16896	5211
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.eval_cnf_ff	40	9.429816	6593	792	1.0.17.1.10.0	synth with cache (only 1: unfold eval_cnf; only 1: clear; only 1: split; only 1: destruct 1; only 1: reflexivity; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.eval_cnf_tt	40	0.047521	3	3	0.0.0	synth with cache (only 1: unfold cnf_ff, eval_cnf, eval_clause; only 1: simpl; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.get_Full_Eq	40	40.098190	34763	5918
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_sub	40	40.109302	41556	3834
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_add_not_empty	40	40.110834	41092	4544
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rel	40	40.114358	42418	3668
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.MapsTo_1	40	23.812762	14214	2645	2.0.0.0.0.0.0.0.1.0.0.0.0.17.0	synth with cache (only 1: intros m x y e; only 1: reduce; only 1: apply InA_eqA with (x, e); only 1: split; only 1: eauto; only 1: eauto; only 1: red; only 1: unfold Raw.PX.eqke; only 1: intuition; only 1: eauto; only 1: congruence; only 1: unfold Raw.PX.eqke in *; only 1: simpl in *; only 1: intuition congruence; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.zerop	40	0.084303	32	9	4.0.0.1	synth with cache (only 1: destruct n; only 1: now left; only 1: right; only 1: apply Peano.le_n_S, Peano.le_0_n).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Singleton_is_finite	40	3.537530	8005	482	0.4.0.1.1.39.1	synth with cache (only 1: intro; only 1: apply NNPP; only 1: red; only 1: intro H'0; only 1: elim H'0; only 1: rewrite <- (Empty_set_zero' U x); only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.MapsTo_eq	40	40.165496	28261	3991
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.hd_error_some_nil	40	6.300843	4659	657	13.3.2.4	synth with cache (only 1: intro n; only 1: intros H; only 1: inversion 1; only 1: RelationClasses.simpl_relation).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.land_spec'	40	40.076067	11887	2398
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.mult_INR	40	40.044833	10800	3498
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.not_imply_elim	40	8.180964	13105	1532	2.22.24	synth with cache (only 1: intros a Ha; only 1: unfold not; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.not_imply_elim2	40	0.044927	17	7	7	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.imply_to_or	40	1.252803	623	192	0.9.2	synth with cache (only 1: intros; only 1: apply NNPP; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.imply_to_and	40	0.646161	232	110	3.1.2.2	synth with cache (only 1: intros; only 1: apply NNPP; only 1: intro; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.or_to_imply	40	0.047568	15	7	1	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40	40.068418	20803	2462
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.remove_3	40	40.041969	8566	1431
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.leb_le	40	40.191779	21747	5087
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.not_and_or	40	1.309347	473	182	8.4	synth with cache (only 1: Bool.destr_bool; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.or_not_and	40	0.055068	19	7	6.0	synth with cache (only 1: intros; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_Exists	40	14.902298	7357	1334	0.0.0.4.0.7.0.7.0	synth with cache (only 1: intros l1 l2 HP; only 1: intros HE; only 1: apply Exists_exists in HE; only 1: induction HP; only 1: destruct HE as [a [Hin HP]]; only 1: apply Exists_exists; only 1: exists a; only 1: apply in_app_or in Hin; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.not_or_and	40	0.017205	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.and_not_or	40	0.019044	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.imply_and_or	40	0.018987	6	2	3.1	synth with cache (only 1: intros; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.imply_and_or2	40	0.022176	3	2	0.1	synth with cache (only 1: intros x y z; only 1: intuition auto; PeanoNat.Nat.Private_OrderTac.Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.choose_spec1	40	40.129851	49480	4800
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.linear_union_ok	40	40.049646	13318	3259
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_le_trans	40	40.064184	19375	3857
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40	40.120718	22905	2404
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_div	40	40.086362	31186	3880
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_proper	40	40.073138	7177	1694	3.5.3.2.3.0.0.0.7	synth with cache (only 1: intros x1 x2 H1 x3 x4 H2; only 1: red; only 1: intros; only 1: rewrite 2!InA_cons; only 1: split; only 1: rewrite H1; only 1: now rewrite H2; only 1: rewrite H1; only 1: now rewrite H2).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_pos_ok	40	40.011800	2629	1141
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_2	40	40.076830	26461	2199
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.choose_1	40	40.150034	52636	4429
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.choose_2	40	0.600128	267	65	0.0.4.0.0.0.0.1	synth with cache (only 1: intro s; only 1: unfold choose; only 1: case (M.choose s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec1	40	40.211012	62420	4945
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_opp	40	40.096775	29611	482
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_l	40	34.084393	17976	5434	1.0.0.0.5.2.0.0.1.2.0	synth with cache (only 1: unfold Add at 1; only 1: intros A NI; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros H'1 H'2; only 1: elim H'0; only 1: intro; only 1: clear H'0; only 1: elim H'1; only 1: auto with sets; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.min_elt_2	40	40.108775	38674	4283
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_correct	40	40.002060	198	48
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_middle2	40	40.110649	15172	2921
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.prop_degen_em	40	40.276714	109551	12647
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_0_minus_le	40	40.082484	28472	3526
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_minus_le_0	40	0.009049	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head00	40	40.218313	8229	1760
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.of_nat_to_nat_inv	40	40.146276	23995	1951
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorEq.BEQ.eqb_eq	40	40.099686	15076	3119
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.eq_nth_iff	40	40.161074	22172	7118
coq-tactician-stdlib.8.12.dev	Coq.Sets.Classical_sets.Ensembles_classical.not_empty_Inhabited	40	40.139394	22837	3703
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Pred_Type.Generic.not_all_ex_not	40	40.189659	52775	6329
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40	40.177271	54604	7277
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_pred_double	40	40.305747	115768	3663
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.discr	40	40.205629	38903	6669
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_add	40	40.098429	15416	3168
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.peano_rect_base	40	0.053824	9	9	1.0.0.0.0.0.0	synth with cache (only 1: revert P a f; only 1: intros; only 1: revert P a f; only 1: intros; only 1: revert P a f; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.cardinal_decreases	40	40.104132	35286	6504
coq-tactician-stdlib.8.12.dev	Coq.funind.Recdef.SSplus_lt	40	40.080969	22193	7767
coq-tactician-stdlib.8.12.dev	Coq.Logic.WeakFan.WeakFanTheorem	40	40.328708	101693	4240
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListDec.uniquify_map	40	40.156643	33205	1490
coq-tactician-stdlib.8.12.dev	Coq.Arith.Euclid.quotient	40	40.120623	37828	3170
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.compare_Cmp	40	40.166306	61324	3520
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.wf_lex_exp	40	40.114753	38217	4934
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.BinList.MakeBinList.nth_pred_double	40	40.175350	30353	3956
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_lt	40	40.052996	14527	3108
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.eval_cnf_and_opt	40	40.064342	20516	2476
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Pred_Type.Generic.not_ex_all_not	40	2.676995	2457	444	18.1.0	synth with cache (only 1: unfold not; only 1: intros ? ? f; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.get_push_Full	40	40.062725	18632	4456
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_pred	40	40.209431	23985	3813
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_add_iff	40	40.109868	18143	3193
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.mem_1	40	40.071809	23060	3751
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction	40	40.068257	20528	4851
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_ltof	40	40.234987	49518	6132
coq-tactician-stdlib.8.12.dev	Coq.Arith.Factorial.lt_O_fact	40	40.174231	27550	6943
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.lt_eq_lt_dec	40	40.158056	32136	3547
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Union_preserves_Finite	40	40.142209	49765	6432
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_assoc_reverse	40	40.069996	7227	1841
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.meq_refl	40	0.018135	3	2	0.1	synth with cache (only 1: intuition; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_eq	40	40.204135	39259	3702
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.length_zero_iff_nil	40	40.254163	82840	2963
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.hd_error_nil	40	0.006393	2	1	1	synth with cache (only 1: firstorder  discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.hd_error_cons	40	0.017529	4	2	2.0	synth with cache (only 1: unfold hd_error, tl; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40	40.063877	19309	2751
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40	6.363467	2126	242	0.0.0.7.16.7	synth with cache (only 1: intros x x' Hxx'; only 1: intro H; only 1: induction n; only 1: eauto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.gt_eq_gt_dec	40	2.041441	241	135	0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: destruct H; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40	0.389079	76	35	3.3.0	synth with cache (only 1: split; only 1: parity_binop; only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_n_S	40	0.133405	14	8	0.2.3	synth with cache (only 1: revert m; only 1: intros H; only 1: apply Nat.succ_lt_mono).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_S_n	40	0.007466	1	1	0	synth with cache (only 1: apply Nat.succ_lt_mono).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.pow_INR	40	40.037656	9859	1907
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_gtof	40	4.287235	1601	671	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: assert (H : forall n (a : A), f a < n -> Acc ltof a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_cons_not_nil	40	4.456399	3912	481	2.0.4.3.15	synth with cache (only 1: intros n IH; only 1: induction n; only 1: intro; only 1: discriminate; only 1: inversion 1).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_nil_l	40	0.023813	2	2	0.0	synth with cache (only 1: simpl; only 1: now destruct l).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_eq	40	4.976331	2031	432	7.1.1.2.8	synth with cache (only 1: intros x y z; only 1: unfold eqke, ltk; only 1: intuition; only 1: compute; only 1: now rewrite H).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	40	40.042383	3384	1268
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.find_1	40	40.090372	32178	3180
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_ge	40	9.400616	4444	963	0.0.8.17	synth with cache (only 1: revert n m; only 1: intros a Ha; only 1: unfold Z.ge; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_ge_iff).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.compare_eq_iff	40	40.081389	21674	6131
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_Forall2	40	40.061928	19064	3566
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40	5.980873	2259	637	0.0.0.2.2.0.4.2	synth with cache (only 1: induction n; only 1: split; only 1: intro H; only 1: rewrite <- PeanoNat.Nat.odd_spec in H; only 1: discriminate; only 1: inversion_clear 1; only 1: elim IHn; only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	40	40.306281	60126	3900
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_r	40	25.889030	7463	3423	0.0.0.0.0.1.0.0.2.2.0	synth with cache (only 1: intros X x H'; only 1: split; only 1: auto with sets; only 1: red; only 1: intro H'1; only 1: lapply (Singleton_inv U x x0); only 1: intro H'4; only 1: apply H'; only 1: rewrite H'4; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.choose_spec2	40	40.080503	27782	5081
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.fold_add_ok	40	40.023857	4239	701
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.add_1	40	34.039498	32226	2683	0.0.0.0.2.4.8.9.1.17	synth with cache (only 1: intros (e, abs); only 1: intros; only 1: apply find_2; only 1: simpl; only 1: rewrite ?add_find, ?bal_find; only 1: destruct X.compare; only 1: order; only 1: auto using find_1, add_1 with ordered_type; only 1: order; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_trans	40	40.070592	20496	3441
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_mult_le	40	40.055675	18888	2788
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40	40.142054	31468	3882
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_proper	40	40.203792	6164	1267
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_ok	40	40.011715	2413	1025
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.choose_3	40	40.116007	40097	3479
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec2	40	40.139120	32615	3789
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qnot_lt_le	40	8.522672	7283	1106	6.7.8.5	synth with cache (only 1: intros H H'; only 1: apply H; only 1: apply Z.gt_lt_iff; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_lt	40	12.962461	5775	1080	0.1.5.0.7.2.0.8	synth with cache (only 1: induction l; only 1: intuition; only 1: intros; only 1: induction H0 as [| ? ? ? ? H1]; only 1: constructor; only 1: unfold eqk, ltk; only 1: constructor; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qnot_le_lt	40	1.574841	1135	164	19.7	synth with cache (only 1: intros H; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_not_le	40	0.006562	2	1	1	synth with cache (only 1: apply Z.nle_gt).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_sub	40	40.119844	19349	275
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARth_SRth	40	0.264618	378	21	27	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.meq_trans	40	23.670906	7298	1332	1.10.5.3	synth with cache (only 1: compute; only 1: intros; only 1: rewrite H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.meq_sym	40	0.036774	6	5	0.0.0.1.0	synth with cache (only 1: unfold meq; only 1: destruct y; only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_not_lt	40	3.575813	4060	415	26.0.6	synth with cache (only 1: intro; only 1: apply Z.nlt_ge; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.munion_empty_left	40	0.025723	3	3	0.0.0	synth with cache (only 1: destruct x; only 1: unfold meq; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40	40.046195	9501	4675
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.munion_empty_right	40	0.032036	4	4	0.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_is_O	40	24.865415	27522	2733	9.0.0.12.22.1.2	synth with cache (only 1: destruct n; only 1: intro H; only 1: now left; only 1: destruct m; only 1: intro; only 1: now right; only 1: now left).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_elt	40	40.114680	19265	3229
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_correct	40	40.001959	223	71
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.prop_ext_em_degen	40	40.255333	101822	8274
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev	40	5.663608	2127	431	0.1.10.5.0.1	synth with cache (only 1: induction l; only 1: intuition; only 1: simpl; only 1: rewrite <- IHl; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.provable_prop_ext	40	0.538632	666	124	9.0.0.4.1	synth with cache (only 1: intros Ext EM A; only 1: apply Ext; only 1: split; only 1: exact (fun _ => I); only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.head031_equiv	40	40.978551	5122	1047
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.to_nat_of_nat	40	40.213994	47761	1707
coq-tactician-stdlib.8.12.dev	Coq.Sets.Classical_sets.Ensembles_classical.Inhabited_Setminus	40	40.159725	37226	4916
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorEq.BEQ.eq_dec	40	40.197742	29802	2094
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.nth_order_hd	40	40.188290	36553	2771
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.add_2	40	24.865069	12485	1646	1.15.9.1.0	synth with cache (only 1: intros m x y e e'; only 1: generalize y, e; only 1: intros; only 1: simpl_relation; only 1: eauto using add_2, add_3).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40	40.180792	17809	5946
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorEq.CAST.cast	40	0.223326	113	29	8	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.pred_double_succ	40	40.474756	208109	1888
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_mul	40	40.090321	15746	4598
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.double_succ	40	0.010838	2	2	0.0	synth with cache (only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.peano_rect_succ	40	40.239403	44236	6123
coq-tactician-stdlib.8.12.dev	Coq.funind.Recdef.max	40	40.139226	24989	5187
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_1	40	0.160126	11	3	5.0	synth with cache (only 1: unfold to_nat; only 1: now Nat.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.Pigeonhole	40	40.077550	24030	5815
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.peano_rec_base	40	0.008476	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.peano_rec_succ	40	0.047224	5	5	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	4.210467	12851	1004	0.10.14.0.20.1	synth with cache (only 1: intros Ext A Ha; only 1: apply Ext; only 1: split; only 1: trivial; only 1: intros H ?; only 1: exact H).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Euclid.modulo	40	40.082485	14835	3626
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.compare_spec	40	40.111714	35981	4064
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListDec.uniquify	40	40.075134	22685	5265
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.add_term_correct	40	40.071209	24308	2080
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Pred_Type.Generic.not_ex_not_all	40	40.115502	42411	6753
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.Full_push_compat	40	40.133093	13970	4580
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Pred_Type.Generic.ex_not_not_all	40	0.406044	179	68	2.0.0.4	synth with cache (only 1: destruct 1; only 1: intro all; only 1: apply H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_add_nodup	40	40.064847	22206	3435
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.mem_2	40	40.091408	32638	2990
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction_bis	40	40.073470	28408	2117
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_div2	40	40.246247	36909	4149
coq-tactician-stdlib.8.12.dev	Coq.Arith.Factorial.fact_neq_0	40	40.167541	46278	6868
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Finite_downward_closed	40	40.269866	56250	6727
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.empty_1	40	1.756949	1951	292	0.0.1.6.7.20	synth with cache (only 1: intros H; only 1: simpl in *; only 1: intro n; only 1: unfold Raw.empty; only 1: intro abs; only 1: inversion abs).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.minus_n_O	40	0.013606	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lxor_spec'	40	40.037331	7179	3653
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.le_lt_dec	40	40.147874	40808	2895
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	40	40.416707	151802	3511
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_S	40	40.116615	26317	3056
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_pred	40	0.009637	2	1	1	synth with cache (only 1: apply Nat.lt_succ_lt_pred).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.le_not_gt	40	0.008422	1	1	0	synth with cache (only 1: apply Nat.le_ngt).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_not_le	40	0.010124	2	1	1	synth with cache (only 1: apply Nat.lt_nge).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.lt_0_INR	40	40.086438	28119	3778
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.pred_double_xO_discr	40	7.194633	12869	628	0.0.0.0.1.74	synth with cache (only 1: red; only 1: induction p; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.le_S_gt	40	0.297318	37	15	2.0.0.4	synth with cache (only 1: Nat.cases n; only 1: intro H; only 1: Nat.order'; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_S_le	40	0.008432	1	1	0	synth with cache (only 1: apply Peano.le_S_n).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_not_1	40	0.031426	1	1	0	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_le_S	40	0.013576	2	1	1	synth with cache (only 1: apply Nat.le_succ_l).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.le_gt_S	40	0.008094	1	1	0	synth with cache (only 1: apply Nat.succ_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.no_middle_eval_tt	40	4.625935	3328	174	51.4	synth with cache (only 1: intros; only 1: eauto with bool).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof1	40	40.189328	57110	4887
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.pred_succ	40	0.960672	325	120	1.1.1.0.0.2.0.0.0.1.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40	40.018652	1896	733
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_nil_r	40	40.227186	77590	4372
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.find_2	40	40.072200	21309	2320
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_nil_end	40	0.101805	7	6	0.0.0.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.elements_1	40	0.007546	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.elements_2	40	0.015541	2	2	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_gt	40	40.057328	16453	3363
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.compare_sub	40	40.235619	29178	7391
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof1	40	3.614821	1671	490	0.0.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros P F; only 1: assert (H : forall n (a : A), f a < n -> P a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply F; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_rewrite_rev	40	40.098894	13061	1650
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof2	40	0.264797	49	30	1	synth with cache (only 1: exact induction_ltof1).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof2	40	0.005278	1	1	0	synth with cache (only 1: exact induction_ltof1).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.elements_3	40	2.030583	5281	283	0.4.42	synth with cache (only 1: destruct m; only 1: simpl in *; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_2	40	40.171171	19569	5879
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.choose_empty	40	40.106845	40741	3283
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.union_ok	40	40.071691	21114	3574
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_remove_1	40	10.580767	7234	1023	0.1.0.1.0.2.1.0.30	synth with cache (only 1: induction l; only 1: simpl; only 1: trivial; only 1: simpl; only 1: elim (Aeq_dec b a0); only 1: auto; only 1: intros H0 [| ]; only 1: tauto; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.lt_le_S	40	0.043704	7	5	0.0.1.0.1	synth with cache (only 1: Nat.cases n; only 1: intro H; only 1: Nat.order_pos; only 1: intros n IH; only 1: Nat.order).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.lt_n_Sm_le	40	0.005288	1	1	0	synth with cache (only 1: apply le_S_n).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.le_lt_n_Sm	40	0.019457	5	3	0.2.0	synth with cache (only 1: induction 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40	40.104873	40766	3399
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_divides	40	40.108081	14928	2288
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_assoc_reverse	40	11.183828	1711	447	1.0.4.0.0.0.8	synth with cache (only 1: nzinduct p; only 1: now Nat.nzsimpl; only 1: intro; only 1: Nat.nzsimpl; only 1: split; only 1: now intros ->; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.le_not_lt	40	0.202416	28	12	0.6	synth with cache (only 1: intros; only 1: Nat.order).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.lt_not_le	40	0.187773	23	10	0.6	synth with cache (only 1: intro H2; only 1: Nat.order).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.neq_0_lt	40	0.018051	2	2	0.0	synth with cache (only 1: intro H; only 1: Nat.auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	40	40.040490	9343	2731
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.lt_0_neq	40	0.022469	4	4	0.0.0.0	synth with cache (only 1: intro H; only 1: intro H1; only 1: rewrite H1 in H; only 1: false_hyp H Nat.lt_irrefl).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.lt_n_S	40	0.006350	1	1	0	synth with cache (only 1: apply le_n_S).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.lt_S_n	40	0.015167	10	2	2	synth with cache (only 1: apply Nat.succ_lt_mono).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_1	40	2.390667	811	407	0.0.0.0.0.1.1.0.0.0	synth with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.compare_antisym	40	3.974937	2345	630	0.3.2.0.0.0.0.0.0.3.0.0.2.0.2.0.0.0.1.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos.compare_antisym; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite CompOpp_involutive; only 1: rewrite ?CompOpp_iff, ?Pos.compare_eq_iff; only 1: apply Pos.compare_antisym).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.compare_lt_iff	40	0.034954	9	7	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.compare_le_iff	40	0.133192	33	19	3.0	synth with cache (only 1: revert m; only 1: now split).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.S_pred	40	0.459464	189	64	0.0.2.4	synth with cache (only 1: Nat.cases n; only 1: inversion 1; only 1: intros a Ha; only 1: Morphisms.f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.Arith.EqNat.eq_nat_refl	40	0.243318	557	44	2.12.13	synth with cache (only 1: induction n; only 1: now try Nat.order'; only 1: now rewrite <- ?Nat.succ_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_nil	40	40.111707	7645	587
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.S_pred_pos	40	0.615185	318	90	1.0.0.0.0.6	synth with cache (only 1: Nat.cases n; only 1: intro H; only 1: exfalso; only 1: now apply Nat.lt_irrefl with 0; only 1: intros n H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.ind_0_1_SS	40	40.130968	17134	2988
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkadd_mult_ok	40	40.009924	2110	857
coq-tactician-stdlib.8.12.dev	Coq.Arith.Peano_dec.O_or_S	40	14.650382	27858	1550	0.0.0.36.42	synth with cache (only 1: induction n; only 1: right; only 1: reflexivity; only 1: left; only 1: now exists n).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_1	40	40.141827	46398	5566
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec3	40	40.185659	52157	2313
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_In	40	40.222786	16075	2965
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARsub_ext	40	40.136765	10046	1076
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_0_r	40	0.192989	297	18	24	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_1_r	40	0.022847	1	1	0	synth with cache (only 1: mrewrite).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_0_r	40	0.026623	1	1	0	synth with cache (only 1: mrewrite).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_lt_or_eq	40	40.062898	19777	3431
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.munion_comm	40	40.116382	12063	2844
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.max_elt_3	40	40.051781	12024	5249
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_is_one	40	40.124887	26195	3484
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.munion_ass	40	1.222522	294	139	1.1.0.2.0.0	synth with cache (only 1: unfold meq; only 1: destruct x; only 1: destruct y; only 1: unfold munion; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.meq_left	40	1.105119	254	126	0.1.1.2.0.0	synth with cache (only 1: unfold meq; only 1: destruct y; only 1: simpl; only 1: destruct x; only 1: destruct z; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_aux_ok	40	40.001100	81	23
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.meq_right	40	0.180719	9	9	1.0.0.0.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.bet_eq	40	28.510438	35545	3360	33.2.6.4	synth with cache (only 1: intros a; only 1: intros; only 1: subst; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.between_le	40	1.633382	446	111	3.0.5.2	synth with cache (only 1: intros n m; only 1: induction 1; only 1: PeanoNat.Nat.Private_Tac.order; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Factorial.fact_le	40	30.704024	16877	3105	8.7.5.0.3.2.0.0.0.8	synth with cache (only 1: induction 1; only 1: auto; only 1: destruct m; only 1: simpl; only 1: auto; only 1: destruct m; only 1: simpl; only 1: Nat.order'; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev'	40	40.069872	21356	3703
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_pred_or	40	29.057101	18527	4302	4.0.0.0.1.1.0.1.0.0.0.1.0.1.1.2.2.0.1.2.0.4	synth with cache (only 1: induction p; only 1: simpl; only 1: right; only 1: now f_equal; only 1: destruct p; only 1: simpl; only 1: right; only 1: now destruct p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: intuition; only 1: intuition; only 1: left; only 1: now f_equal; only 1: right; only 1: now f_equal; only 1: right; only 1: simpl; only 1: now f_equal; only 1: now right; only 1: now left).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Le.le_n_0_eq	40	0.034085	16	4	0.1	synth with cache (only 1: inversion 1; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_nz	40	40.229571	12066	2052
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.to_nat_inj	40	40.226083	55443	3840
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.add_3	40	40.040659	11359	1609
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.nth_order_tl	40	40.160118	35806	3755
coq-tactician-stdlib.8.12.dev	Coq.Sets.Classical_sets.Ensembles_classical.Strict_super_set_contains_new_element	40	40.298285	45000	4250
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.Pigeonhole_principle	40	40.076531	24305	5437
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_xO	40	40.184761	18840	2467
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.bi_induction	40	40.247181	56298	7171
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.equal_spec	40	40.071481	20364	4424
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_pred	40	3.629807	1372	540	1.0.1.0.0.0.8.3	synth with cache (only 1: intro H; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: apply succ_pred_double; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40	40.555527	254848	9175
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.bi_induction	40	0.278300	120	24	8.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.Full_index_one_empty	40	40.080926	24814	5366
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Pred_Type.Generic.all_not_not_ex	40	40.149814	37927	5321
coq-tactician-stdlib.8.12.dev	Coq.Sets.Classical_sets.Ensembles_classical.Subtract_intro	40	3.328275	1116	303	6.2.2.3	synth with cache (only 1: intro X; only 1: red; only 1: intros x H; only 1: auto  7 using Inhabited_Setminus with sets).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_identity	40	40.079786	24859	3675
coq-tactician-stdlib.8.12.dev	Coq.Sets.Classical_sets.Ensembles_classical.Subtract_inv	40	0.035280	8	4	3.0.1.0	synth with cache (only 1: unfold Subtract at 1; only 1: intros A x y H'; only 1: induction H'; only 1: auto using Noone_in_empty with sets).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_compare	40	40.273558	55418	2793
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_equiv	40	40.111931	40556	6426
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Intersection_preserves_finite	40	40.132014	47076	7667
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.is_empty_1	40	40.125511	48841	4184
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.minus_Sn_m	40	40.131173	22320	4340
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.pred_of_minus	40	0.037233	1	1	0	synth with cache (only 1: now Nat.nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.le_le_S_dec	40	40.132173	22312	2596
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.landC	40	40.045401	11826	3433
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	40	40.095560	31042	6790
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.le_ge_dec	40	0.725018	137	76	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.le_gt_dec	40	0.117026	18	11	0.0.1	synth with cache (only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.lt_INR	40	40.086554	28327	3787
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.le_gt_trans	40	40.112761	21492	3048
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.or_clause_correct	40	40.044127	7197	1787
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_assoc	40	40.152553	41067	5066
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_abs_nat	40	40.087787	34867	871
coq-tactician-stdlib.8.12.dev	Coq.Sets.Classical_sets.Ensembles_classical.Included_Strict_Included	40	7.588026	3065	382	0.18.4	synth with cache (only 1: intros x y; only 1: compute; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_assoc_reverse	40	0.057229	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_comm_cons	40	0.010828	1	1	0	synth with cache (only 1: auto using app_assoc).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_lt_compat	40	40.084647	26301	5910
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_eq_nil	40	1.541046	619	170	0.3.0.1.8	synth with cache (only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: now discriminate).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.elements_3w	40	40.147022	60828	4129
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.cardinal_1	40	0.016790	7	2	5.0	synth with cache (only 1: intros m; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.choose_spec3'	40	40.073962	25908	2386
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.union_list_spec	40	40.072806	23620	2492
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_remove_2	40	40.094302	19618	3901
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_odd	40	40.046029	17548	1671
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_n2f	40	40.182783	51999	3089
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_reg_l	40	40.111010	21076	2938
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_xy	40	40.099289	15696	3556
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	40	40.097156	5121	2430
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.lt_succ_r	40	40.227358	21849	4529
coq-tactician-stdlib.8.12.dev	Coq.Arith.EqNat.eq_nat_is_eq	40	40.156557	33528	5446
coq-tactician-stdlib.8.12.dev	Coq.Arith.EqNat.eq_eq_nat	40	0.022343	6	6	0.0.0.0.0.0	synth with cache (only 1: intros <-; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.EqNat.eq_nat_eq	40	0.196892	24	13	2	synth with cache (only 1: apply eq_nat_is_eq).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.lt_pred	40	40.120246	31715	3726
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_nil_eq	40	40.224295	15064	2140
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.lt_div2	40	40.112328	24189	6470
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_double_head	40	0.084741	4	3	0.0.1	synth with cache (only 1: intros E; only 1: rewrite !InA_cons; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.lt_pred_n_n	40	0.353607	169	56	1.1.0.4	synth with cache (only 1: Nat.cases n; only 1: inversion 1; only 1: intros m IH; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_O_le	40	27.461925	8462	2457	13.0.1.0.0.0.1.0.0.1.5	synth with cache (only 1: revert m; only 1: induction n; only 1: intro m; only 1: Nat.nzsimpl; only 1: right; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_pow_list_ok	40	40.011506	2846	924
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_permute_heads	40	1.916223	209	28	0.0.0.0.16	synth with cache (only 1: split; only 1: rewrite !InA_cons; only 1: tauto; only 1: rewrite !InA_cons; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_idem	40	0.109933	51	10	0.0.9	synth with cache (only 1: intro; only 1: rewrite InA_app_iff; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Peano_dec.dec_eq_nat	40	40.184927	17278	2090
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.le_lt_or_eq	40	3.685150	1608	401	0.1.0.13.4	synth with cache (only 1: revert m; only 1: apply Nat.le_ind; only 1: now right; only 1: intros a b Hb; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.minus_diag_reverse	40	15.639037	15801	1798	0.0.2.7.36.3	synth with cache (only 1: symmetry; only 1: Nat.induct ltac:(n); only 1: apply Nat.sub_0_r; only 1: simpl; only 1: intros n IH; only 1: now rewrite IH).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_2	40	40.146249	53032	4455
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.choose_spec3	40	40.168026	44998	5500
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	2.160528	364	57	11.0.0.0	synth with cache (only 1: nzinduct p; only 1: now Nat.nzsimpl; only 1: intro p; only 1: Morphisms.f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_NotIn	40	40.090803	6942	1163
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	40	2.011317	1863	54	60	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	40	1.086001	144	40	7.2	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: now rewrite Ha).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARdistr_r	40	40.267677	12713	865
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Q_dec	40	40.064834	18047	4664
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.max_elt_2	40	40.048621	11261	4870
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.push_not_empty	40	28.617033	24050	3318	7.4.13.0.1.3	synth with cache (only 1: unfold get, push, index; only 1: intros; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: intro H; only 1: destr_eq H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.munion_rotate	40	40.083424	13894	4677
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_in_correct	40	40.002448	364	67
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.meq_congr	40	1.886239	468	235	0.3.1.2	synth with cache (only 1: intros; only 1: unfold meq; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.between_Sk_l	40	40.130131	34628	3737
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length	40	40.065627	20320	4116
coq-tactician-stdlib.8.12.dev	Coq.Arith.Le.le_elim_rel	40	40.135754	32555	4163
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head0	40	40.157028	7758	1983
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.remove_1	40	40.050389	13162	1593
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.L_sanity	40	40.211831	35016	2524
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail00	40	0.083803	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.nth_order_last	40	40.142446	13322	1913
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	17.384169	68526	1529	0.0.0.107	synth with cache (only 1: compute; only 1: intros; only 1: case (M.elements s); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_3w	40	0.330007	104	33	7.0	synth with cache (only 1: intros; only 1: auto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_xI	40	40.210607	10763	1222
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.recursion_wd	40	40.349251	30674	2849
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.recursion_0	40	0.018356	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.mindepth_maxdepth	40	40.074009	26673	1226
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_inj	40	40.142853	38784	4385
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40	40.557440	255345	8604
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.recursion_wd	40	40.102047	24003	3333
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.recursion_0	40	0.007438	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_init	40	40.094976	33765	2421
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_max	40	40.090205	28852	4567
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_equiv	40	40.107936	22454	3620
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.is_empty_2	40	40.075749	27535	3313
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinalO_empty	40	40.121027	16417	3627
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40	40.068792	3566	1187
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40	40.074078	20569	6649
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.landA	40	40.062812	18562	3116
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.between_restr	40	12.795102	8798	1011	3.2.21.3	synth with cache (only 1: intros x y; only 1: induction 1; only 1: auto; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.le_lt_eq_dec	40	40.100998	20584	3661
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.lt_1_INR	40	40.089534	29120	3790
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_le_trans	40	40.102722	25647	3357
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.or_clause_cnf_correct	40	40.049500	13812	1696
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_add	40	40.046663	12327	1871
coq-tactician-stdlib.8.12.dev	Coq.Sets.Classical_sets.Ensembles_classical.Strict_Included_inv	40	40.250979	38169	4540
coq-tactician-stdlib.8.12.dev	Coq.Sets.Classical_sets.Ensembles_classical.not_SIncl_empty	40	0.045688	11	8	1.1.0.0.0.0	synth with cache (only 1: intro X; only 1: red; only 1: intro H'; only 1: elim H'; only 1: intro; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.exists_le_S	40	5.531908	5892	654	1.1.5.16.2	synth with cache (only 1: intro n; only 1: intro H; only 1: induction 1; only 1: auto; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.le_dec	40	5.198375	2496	554	2.0.0.1.0.0.0.2.1.2.0.0.1.7	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: intuition Nat.order; only 1: left; only 1: apply Peano.le_0_n; only 1: destruct m; only 1: now right; only 1: destruct (IHn m); only 1: left; only 1: apply Peano.le_n_S; only 1: auto; only 1: right; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.lt_wf	40	40.318790	22329	4119
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_eq_unit	40	40.182912	32569	4252
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.fold_1	40	40.153437	61115	4307
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.choose_spec3	40	40.077411	26671	3792
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.L_R	40	13.951270	14486	1081	12.6.31.0.79	synth with cache (only 1: destruct m as [| m]; only 1: now PeanoNat.Nat.nzsimpl; only 1: assert (succ_r : forall x y, x + S y = S (x + y)) by now induction x; only 1: PeanoNat.Nat.nzsimpl; only 1: left).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.linear_union_spec	40	40.106352	35607	3249
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_remove_3	40	40.097169	11616	3712
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_even	40	40.046590	16534	1576
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.extend_surjective	40	40.116245	43968	5133
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_le_reg_l	40	40.198951	46427	2970
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_st_add_soustr	40	40.084482	13113	4896
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40	40.070792	21927	3114
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.max_l	40	40.236251	30695	4987
coq-tactician-stdlib.8.12.dev	Coq.Arith.EqNat.eq_nat_elim	40	40.172157	48078	6828
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.even_div2	40	40.143062	31333	4808
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_or_odd	40	12.765979	27132	1011	3.3.64.19	synth with cache (only 1: Nat.induct n; only 1: intuition; only 1: intro p; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_le_compat_l	40	40.114824	34397	3776
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_odd_dec	40	0.030799	5	5	0.0.0.0.0	synth with cache (only 1: induction n; only 1: auto with arith; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_mult_dev_ok	40	40.011757	3175	937
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.not_even_and_odd	40	0.824913	442	105	4.0.2.0.4.0	synth with cache (only 1: induction n; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.eval_cnf_cons	40	8.952966	1505	479	1.0.0.0.0.0.1.0.2.1.2	synth with cache (only 1: unfold eval_cnf; only 1: intros; only 1: unfold eval_clause; only 1: generalize nil as acc; only 1: induction f; only 1: simpl; only 1: intros; only 1: tauto; only 1: intros; only 1: simpl; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.eval_cnf_cons_iff	40	0.131367	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.max_r	40	3.009493	1000	394	0.0.3.2.2.0	synth with cache (only 1: unfold le, max; only 1: rewrite N.compare_antisym; only 1: case N.compare_spec; only 1: now destruct compare; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_NoDupA_split	40	40.128148	9434	1629
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.lt_dec	40	6.525310	3299	598	7.7.4.2.5	synth with cache (only 1: destruct m; only 1: auto with arith; only 1: destruct (le_gt_dec n m); only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.gt_dec	40	0.007888	1	1	0	synth with cache (only 1: apply le_dec).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.ge_dec	40	0.245606	52	20	0.3.0.2	synth with cache (only 1: elim (le_lt_dec n m); only 1: intros; only 1: apply le_dec; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Peano_dec.le_unique	40	40.149246	53911	5393
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.nat_total_order	40	40.187751	15102	1849
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.plus_minus	40	40.141128	31960	4026
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_NoDupA	40	40.169288	18358	4117
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.minus_plus	40	1.037187	1199	110	32	synth with cache (only 1: now apply Nat.add_sub_eq_l).
coq-tactician-stdlib.8.12.dev	Coq.Arith.EqNat.eq_nat_decide	40	9.534511	4775	1202	5.0.0.0.0.1.0.0.3.0.1.1.1	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: auto; only 1: now right; only 1: destruct m; only 1: now right; only 1: destruct (IHn m); only 1: left; only 1: auto; only 1: now right).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	40	40.061571	12884	2675
coq-tactician-stdlib.8.12.dev	Coq.Arith.EqNat.beq_nat_refl	40	1.390546	2338	119	2.1.4.49	synth with cache (only 1: Nat.induct ltac:(n); only 1: simpl; only 1: trivial; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc1	40	40.102770	23318	1269
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_le_dec	40	40.076286	26146	3430
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.le_plus_minus_r	40	3.701686	1545	448	0.0.0.0.1.0.6.0.0.2	synth with cache (only 1: revert m; only 1: induction n; only 1: intros; only 1: now Nat.nzsimpl; only 1: destruct m; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, Peano.le_S_n; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length'	40	32.792791	21687	2526	0.0.0.0.0.0.0.28.21	synth with cache (only 1: intros x l; only 1: induction 1; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).
coq-tactician-stdlib.8.12.dev	Coq.Arith.EqNat.beq_nat_true	40	1.724795	639	204	1.0.0.0.0.0.1.0.5	synth with cache (only 1: Nat.double_induct n m; only 1: simpl; only 1: destruct m; only 1: easy; only 1: easy; only 1: intro n; only 1: easy; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.get_In	40	40.085627	27209	5207
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_in_correct	40	40.002256	335	51
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40	40.096188	14873	3335
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.munion_perm_left	40	40.087335	15447	4666
coq-tactician-stdlib.8.12.dev	Coq.Arith.EqNat.beq_nat_false	40	4.862539	4542	596	0.0.3.2.5.0.1.16	synth with cache (only 1: Nat.double_induct n m; only 1: intros a Ha; only 1: intro H1; only 1: subst; only 1: discriminate; only 1: now try Nat.order'; only 1: intros a b Ha Hb; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.EqNat.beq_nat_eq	40	3.122346	1965	377	1.0.3.0.0.0.1.0.7	synth with cache (only 1: induction n; only 1: simpl; only 1: destruct m; only 1: easy; only 1: easy; only 1: simpl; only 1: destruct m; only 1: easy; only 1: contradiction || auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.remove_2	40	40.059073	18211	2449
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.nth_order_ext	40	40.204741	34142	4176
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.tail031_equiv	40	40.390280	4848	1286
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_1	40	16.308513	4866	1087	0.0.3.1.1.7.2.6	synth with cache (only 1: intros x l' H H0; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eapply SortA_InfA_InA; only 1: eauto with *; only 1: eauto with *; only 1: solve_proper; only 1: eauto with *; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	40	40.168305	63359	4556
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.is_succ	40	40.177743	49869	3465
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	40	40.035352	7040	2136
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.maxdepth_cardinal	40	40.079988	30672	1032
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.recursion_succ	40	40.222041	55258	3520
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.one_succ	40	0.005609	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.two_succ	40	0.014391	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.pred_N_succ	40	40.158307	23327	3376
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pred_0	40	0.005583	3	1	2	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_pred_spec	40	0.036082	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_1_r	40	0.010216	1	1	0	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_pos_spec	40	0.020416	8	3	0.0.5	synth with cache (only 1: induction n; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_1_l	40	0.009252	1	1	0	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.aux	40	40.172705	73190	1872
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.recursion_succ	40	40.088827	29316	4358
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.pred_succ	40	0.021071	3	3	0.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.pred_0	40	0.006525	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.one_succ	40	0.006231	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.two_succ	40	0.004444	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.add_0_l	40	0.007374	2	2	0.0	synth with cache (only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.add_succ_l	40	0.028574	5	5	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.sub_0_r	40	0.132545	32	14	0.0.0.0.5	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Empty	40	40.104051	38299	3391
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_min	40	40.191593	17144	2417
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.add_1	40	40.101932	36082	3843
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.inh_card_gt_O	40	40.083784	26944	5826
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	40	40.104474	7868	1724
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	40	0.114260	12	6	1.0	synth with cache (only 1: intros x x' EQ; only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	40	40.177855	44518	6829
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.land0	40	40.039371	11100	2233
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.land0_r	40	0.056596	6	4	2.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite land_spec, bit_0; only 1: now rewrite andb_false_r).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.pos_INR_nat_of_P	40	40.107967	37076	3626
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_trans	40	40.207560	23592	2684
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_pred_succ	40	6.064360	1766	805	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.6	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_pos_pred	40	0.946507	181	89	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pred_succ	40	0.019289	3	3	0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Pos.pred_N_succ).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pred_sub	40	0.414894	168	41	7.0.6	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_0_discr	40	0.859599	490	87	2.12.0	synth with cache (only 1: destruct n; only 1: discriminate; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.le_plus_minus	40	21.862366	9262	3299	0.0.0.0.1.0.6.0.0.4	synth with cache (only 1: revert m; only 1: induction n; only 1: intros; only 1: now Nat.nzsimpl; only 1: destruct m; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, Peano.le_S_n; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_mul	40	40.038751	12528	1871
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.add_0_l	40	0.157352	9	8	2.0.0	synth with cache (only 1: destruct n; only 1: auto; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Classical_sets.Ensembles_classical.Complement_Complement	40	40.143645	23879	2904
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_eqlistA	40	31.225639	9386	1019	15.13.1.0.6.3	synth with cache (only 1: intros x y; only 1: induction 1; only 1: simpl; only 1: intuition; only 1: compute; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.exists_S_le	40	40.139003	23433	3150
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.in_int_intro	40	0.231003	84	26	0.3.5	synth with cache (only 1: intro z; only 1: intros n m H1 H2; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.equal_1	40	40.079429	27920	2289
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.lt_wf_rect1	40	40.259976	84212	4219
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.lt_wf_rect	40	0.005559	1	1	0	synth with cache (only 1: exact (fun p P F => induction_ltof1 nat (fun m => m) P F p)).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.lt_wf_rec1	40	0.005389	1	1	0	synth with cache (only 1: exact (fun p P F => induction_ltof2 nat (fun m => m) P F p)).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.in_int_lt	40	0.589833	516	88	7.3.0.3	synth with cache (only 1: intros L R n; only 1: intro H; only 1: firstorder; only 1: PeanoNat.Nat.Private_Tac.order).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.elt_eq_unit	40	40.217423	51079	4982
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.lt_wf_rec	40	0.006358	1	1	0	synth with cache (only 1: exact (fun p P F => induction_ltof2 nat (fun m => m) P F p)).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.min_elt_spec1	40	40.083344	26665	5913
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.lt_wf_ind	40	0.006045	1	1	0	synth with cache (only 1: exact (fun p P F => induction_ltof2 nat (fun m => m) P F p)).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.gt_wf_rect	40	0.012589	1	1	0	synth with cache (only 1: exact (fun p P F => induction_ltof2 nat (fun m => m) P F p)).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.gt_wf_rec	40	0.008899	1	1	0	synth with cache (only 1: exact lt_wf_rect).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.R_sanity	40	40.115295	17136	3143
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.fold_add_spec	40	40.082823	23175	6167
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_remove_iff	40	40.090881	10368	3095
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zodd_mod	40	40.042461	14786	1321
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.extend_injective	40	40.129049	51416	5195
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_lt_reg_l	40	40.182058	40070	2559
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_le_compat_l	40	0.035508	9	2	1	synth with cache (only 1: apply Nat.add_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	40	40.051725	15260	2240
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Sub_Add_new	40	40.151724	12026	5678
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_le_compat_r	40	1.165706	241	57	0.0.11	synth with cache (only 1: induction 1; only 1: now rewrite <- ?Nat.add_le_mono_r; only 1: now right).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_lt_compat_l	40	0.014279	3	1	2	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.odd_div2	40	40.165124	31423	4179
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_le_compat_r	40	40.122803	33676	4009
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_plus_split	40	40.172161	42963	2260
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mult_dev_ok	40	40.010984	2461	1107
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.or_cnf_correct	40	40.038000	10438	1996
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.min_l	40	40.239997	33386	5254
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.min_r	40	0.229784	28	12	0.0.0.1.1.0	synth with cache (only 1: unfold le, min; only 1: rewrite (compare_antisym n m); only 1: case compare_spec; only 1: trivial; only 1: now destruct 2; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_plus_split	40	1.045711	73	16	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.dec_le	40	40.128565	35343	3634
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.dec_lt	40	0.026034	18	3	5	synth with cache (only 1: apply Nat.le_decidable).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.dec_gt	40	0.009626	3	1	2	synth with cache (only 1: apply Nat.lt_decidable).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.pos_INR	40	12.280168	4719	865	2.1.0.13.6	synth with cache (only 1: red; only 1: induction n; only 1: auto with real; only 1: repeat rewrite S_INR; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40	40.039957	9800	2124
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	40	40.040956	10153	2425
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.sub_succ_r	40	21.005661	15940	3338	2.0.7.4.0.0.5.10	synth with cache (only 1: revert m; only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: destruct m; only 1: now destruct n; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.mul_0_l	40	0.004007	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	40	40.173783	16260	2317
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc2	40	40.092681	23383	1265
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qarchimedean	40	40.124575	52560	1351
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_Forall	40	40.140169	21696	4003
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Map.Tget_Tmap	40	40.311382	67552	3592
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_impl.fcons_ok	40	40.001483	226	24
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	40	40.079670	11217	4039
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist1	40	40.090239	16272	4159
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_lt_compat_r	40	17.996873	6898	1007	1.8.23	synth with cache (only 1: induction 1; only 1: auto; only 1: now right).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40	40.051934	12373	3434
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.remove_3	40	40.106092	36642	3334
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.shiftin_nth	40	40.210512	39715	1368
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_2	40	40.079218	7286	1676
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	40	40.104746	36675	2972
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	40	0.216999	49	24	0.0.0.0.0.0.1.0	synth with cache (only 1: intro s; only 1: unfold min_elt; only 1: case (M.min_elt s); only 1: simple destruct s0; only 1: intros; only 1: intuition; only 1: discriminate H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.is_pos	40	40.214015	27567	2812
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail0	40	40.133727	5440	1030
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	40	40.090923	29114	4307
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.mindepth_cardinal	40	40.048575	10020	5072
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_carry_spec	40	40.166403	25661	2673
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.ext_prop_dep_proof_irrel_gen	40	40.053482	13077	6137
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_commutes	40	40.073289	23925	2175
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_iter	40	40.277174	47397	2837
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.id	40	0.276811	152	35	0.4.0.2.5	synth with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.add_2	40	40.078541	24984	4462
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_soustr_1	40	40.086980	27851	6374
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	40	40.073450	22562	2959
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	40	40.127894	36979	4818
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lorC	40	40.088967	27204	2992
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_trans_S	40	40.103411	16547	1911
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_0_eq	40	2.431803	1347	168	5.0.28	synth with cache (only 1: Nat.cases ltac:(n); only 1: now apply Nat.lt_eq_cases, Nat.succ_le_mono; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.plus_gt_reg_l	40	0.008438	1	1	0	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.plus_gt_compat_l	40	0.010205	1	1	0	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_sub_max	40	40.068430	23844	4617
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.lt_O_minus_lt	40	40.155436	46129	3401
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.add_succ_l	40	40.250477	38510	5894
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.sub_0_r	40	0.120018	46	20	0.4.1.1	synth with cache (only 1: destruct n; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.ForallOrdPairs_inclA	40	40.118276	16775	1809
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.equal_2	40	40.091714	34727	3606
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.in_int_p_Sq	40	40.138862	25716	3218
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.in_int_S	40	0.015681	2	2	0.0	synth with cache (only 1: intros p q r []; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.min_elt_spec3	40	40.042776	10620	4842
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.in_int_Sp_q	40	0.014500	2	2	0.0	synth with cache (only 1: intros * []; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_inj_tail	40	40.118238	43049	4132
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.lt_wf_double_rect	40	40.105582	16254	2568
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.lt_wf_double_rec	40	0.051850	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rect; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rect; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	40	40.169476	20371	3315
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.051325	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rect; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rect; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.depair_sanity	40	40.222190	19345	1314
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.union_spec'	40	40.065682	19534	3125
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_remove_nodup	40	40.070393	23770	3683
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zeven_mod	40	40.051721	18292	1949
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_length	40	1.304439	462	139	1.3.1.1.3	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_same	40	0.302890	67	34	0.1.2.2	synth with cache (only 1: intros; only 1: zero_or_not a; only 1: apply Z.mod_same; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_surjective	40	40.149007	34229	4011
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Simplify_add	40	40.111396	20816	4704
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	40	40.072993	6463	818
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.last_length	40	1.517535	1106	163	1.3.0.2.7.5	synth with cache (only 1: intros; only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.div2_even	40	40.170953	52484	4760
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_le_compat	40	40.213502	66163	4594
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.or_cnf_opt_correct	40	40.037619	9705	2157
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.peano_ind	40	40.300617	100664	5811
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_even_plus	40	40.137886	15216	2617
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.Pphi_avoid_ok	40	40.009713	2067	914
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.union_spec	40	5.834269	955	486	0.1.0.1.0.0.0.0.0.0.2	synth with cache (only 1: intros s1 s2 B1 B2; only 1: unfold union; only 1: destruct compare_height; only 1: unfold linear_union; only 1: rewrite treeify_spec, union_list_spec, !rev_elements_rev; only 1: rewrite !InA_rev, InA_nil, !elements_spec1 by auto_tc; only 1: tauto; only 1: rewrite fold_add_spec; only 1: tauto; only 1: rewrite fold_add_spec; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.dec_ge	40	40.226195	52526	3390
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.INR_lt	40	40.101643	34654	3689
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.not_eq	40	0.013334	1	1	0	synth with cache (only 1: apply Nat.lt_gt_cases).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_plus_l	40	0.337466	20	7	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.not_le	40	0.007238	1	1	0	synth with cache (only 1: apply Nat.lt_nge).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.not_gt	40	0.012734	3	1	2	synth with cache (only 1: apply Nat.le_ngt).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.not_ge	40	0.011337	2	1	1	synth with cache (only 1: apply Nat.nle_gt).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_plus_r	40	0.090757	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.not_lt	40	0.013696	2	1	1	synth with cache (only 1: apply Nat.nlt_ge).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_even_plus	40	0.093141	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	40	40.055748	13698	4630
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_plus_aux	40	0.923586	52	10	0.0.4	synth with cache (only 1: split; only 1: parity_binop; only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_plus_even_inv_r	40	0.089819	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	40	40.081628	25209	3902
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_inv_head	40	6.128367	3754	744	3.12.1.1.0.4	synth with cache (only 1: induction l; only 1: simpl; only 1: now symmetry; only 1: simpl; only 1: inversion 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_plus_even_inv_l	40	0.089937	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_plus_odd_inv_r	40	0.372366	25	8	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_plus_odd_inv_l	40	0.089490	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_plus_even_inv_l	40	0.100199	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_plus_even_inv_r	40	0.091174	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.mul_succ_l	40	40.074949	19151	7569
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_plus_odd_inv_l	40	0.089174	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_plus_odd_inv_r	40	0.090781	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	40	40.160323	16180	2305
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc1	40	40.099431	18385	1070
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qopp_le_compat	40	40.074269	24832	3946
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_Exists	40	40.109625	14948	2415
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Map.Tmap_Tadd	40	40.229315	35615	4335
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	40	40.031454	6850	2121
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons_fcons_inv	40	40.001117	39	22
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist2	40	40.099636	15592	4018
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_le_compat	40	40.140540	28206	3089
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	40	40.079163	22514	4328
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.find_1	40	40.080374	18359	1465
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.shiftin_last	40	40.165231	47081	5103
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_3	40	40.319635	5845	859
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	40	40.067390	21198	2975
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.maxdepth_log_cardinal	40	40.045604	9006	3038
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.id	40	40.116342	20619	3629
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	40	40.089020	28330	3894
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.quotient_by_2	40	40.047214	17736	1267
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_comm	40	40.132923	17213	4472
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_Prop_Ext_CC.ext_prop_dep_proof_irrel_cc	40	40.373766	167407	10582
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal	40	40.077655	20928	1176
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.add_3	40	40.072079	23389	3596
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj	40	40.283553	81071	4326
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_iff	40	0.184157	49	23	3.0.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_is_functional	40	40.143470	17102	3628
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.find_2	40	5.484564	5350	543	2.9.26	synth with cache (only 1: intros y1 y2 Hy1 Hy2; only 1: apply L.find_2; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	40	40.055653	13115	2575
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40	40.194980	49813	7396
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lorA	40	40.122559	27575	4181
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	40	6.166801	1268	515	0.0.0.0.0.0.0.0.0.1.1.0	synth with cache (only 1: intros s x y; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: unfold For_all; only 1: simple destruct s0; only 1: intros; only 1: injection H; only 1: intros; only 1: subst; only 1: firstorder; only 1: intros; only 1: discriminate H).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_mult_aux	40	23.624959	9937	1532	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	40	0.903300	151	74	0.0.0.0.1.2.0	synth with cache (only 1: intro s; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_mult_l	40	0.063217	9	2	5	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_mult_r	40	0.057952	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_mult_inv_r	40	0.088721	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_mult_inv_l	40	0.377193	9	5	1.0.1	synth with cache (only 1: induction n; only 1: parity_binop; only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_mult	40	0.091600	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_mult_inv_l	40	0.057506	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_mult_inv_r	40	0.054682	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_sub	40	40.061197	22029	2868
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.not_le_minus_0	40	40.088626	33745	4419
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_Empty	40	5.402197	2463	609	0.0.1.0.15	synth with cache (only 1: destruct m; only 1: auto with sets; only 1: inversion 1; only 1: elim (not_Empty_Add U A x); only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.sub_succ_r	40	40.270584	30230	4818
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.mul_0_l	40	0.006929	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_commutes_restr	40	40.056203	15351	1135
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40	40.085536	7432	737
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.map_1	40	40.068046	20675	3354
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.min_elt_spec2	40	40.054302	14944	5150
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.between_in_int	40	40.174090	56632	5297
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.in_int_between	40	0.141273	13	7	0.1.0.2	synth with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40	40.039968	10625	2639
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.LT_WF_REL.acc_lt_rel	40	40.250841	11069	1891
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.eqb_nat_eq	40	40.113830	28512	3827
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_union_intro1	40	40.059393	17891	3933
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_same	40	40.057364	15728	4988
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40	40.157036	35306	3975
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	40	40.079800	17788	1911
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Included_Add	40	40.196717	32464	5072
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_union_intro2	40	1.651935	442	142	0.0.2.0.5.0.0	synth with cache (only 1: simple induction y; only 1: simpl; only 1: destruct 1; only 1: simpl; only 1: intros a0 l H [Ha0a| Hal]; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_union_intro	40	0.194529	16	11	0.1.1	synth with cache (only 1: intros a b x [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.div2_odd	40	40.126447	46904	4529
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_S_lt_compat_l	40	40.127161	18631	2886
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.xcnf_correct	40	40.071729	21565	2145
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.bi_induction	40	40.301253	47401	5653
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.inter_list_ok	40	40.071594	21267	3365
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.local_mkpow_ok	40	40.026993	7016	479
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.le_INR	40	40.050499	14217	3226
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.nat_compare_lt	40	40.182310	13466	5604
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.INR_not_0	40	0.336015	69	24	4.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: rewrite H0; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.abs_eq	40	0.109891	34	10	2.1	synth with cache (only 1: intro H; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.abs_neq	40	0.069780	17	12	0.0.0.0.1	synth with cache (only 1: unfold le, min; only 1: destruct n; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sgn_null	40	0.113940	52	20	0.0.0.0.0.0.2	synth with cache (only 1: destruct n; only 1: intros H; only 1: now f_equal; only 1: intros H; only 1: destr_eq H; only 1: intros H; only 1: destr_eq H).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	40	40.057861	14070	4059
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40	40.045534	12724	2304
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_inv_tail	40	40.159473	49379	5486
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.in_eq	40	0.011442	2	2	0.0	synth with cache (only 1: intros a r; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.in_cons	40	0.134030	59	19	0.0.0.1.3	synth with cache (only 1: intros; only 1: generalize H; only 1: simpl; only 1: right; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.not_in_cons	40	0.396729	84	29	2.2.1.2	synth with cache (only 1: simpl; only 1: split; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.in_nil	40	0.020875	4	3	1.0.0	synth with cache (only 1: intro n; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.lt_succ_r	40	40.089856	24844	8156
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40	40.164605	6919	1396
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_minus_iff	40	40.061733	6648	1586
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc2	40	40.094059	18929	1061
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_Forall2	40	40.079533	28631	3773
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Map.get_map	40	40.064691	18614	4775
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	40	40.081139	8222	1940
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons0_fcons_inv	40	40.000980	38	24
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.in_app_or	40	9.689270	6579	1244	3.0.8.12.4	synth with cache (only 1: intros l H; only 1: compute; only 1: induction l as [| a tail]; only 1: firstorder  discriminate; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.treesort_twist1	40	40.131376	11423	3399
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_le_lt_compat	40	40.102461	28920	2537
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_lt_le_compat	40	0.010174	2	1	1	synth with cache (only 1: apply Nat.add_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.in_or_app	40	1.700671	800	222	9.0.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.even_odd_div2	40	18.342548	8269	2117	19.0.0.0.1.0.0.0.0.0.0.3.5	synth with cache (only 1: split; only 1: split; only 1: rewrite even_equiv; only 1: intros (p, ->); only 1: rewrite Nat.div2_succ_double; only 1: apply Nat.div2_double; only 1: destruct (even_or_odd n) as [Ev| Od]; only 1: trivial; only 1: apply odd_div2 in Od; only 1: rewrite <- Od; only 1: intro Od'; only 1: elim (n_Sn _ Od'); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40	40.060382	15332	4021
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.shiftrepeat_nth	40	40.114272	16816	3071
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv	40	40.068976	12138	2220
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.mindepth_log_cardinal	40	40.053961	12844	3369
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	40	40.050155	10656	4004
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj	40	40.210830	19918	5858
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main_trick	40	40.049937	16395	2127
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_iff	40	0.169141	37	21	2.0.0.2	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_2	40	1.002586	342	63	0.2.10.0	synth with cache (only 1: inversion_clear 1; only 1: induction 1; only 1: eauto with ordered_type; only 1: eauto with *).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_succ_r	40	40.077464	11966	5203
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_CIC.ext_prop_dep_proof_irrel_cic	40	40.282235	120056	9098
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal2	40	40.072885	20197	2085
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.remove_1	40	40.109995	41991	4229
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_3	40	2.787325	710	184	0.0.7.0.0.2	synth with cache (only 1: unfold eqk, eqke; only 1: intuition; only 1: simpl in *; only 1: invlist InA; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_double	40	40.203247	17063	1965
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_succ_double	40	0.041994	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_succ	40	0.036010	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_pred	40	0.050886	5	4	0.1.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: clear IHn; only 1: nat2N).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.fold_1	40	40.109546	39474	2489
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_add	40	0.035448	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	40	40.100525	14842	2792
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.in_app_iff	40	10.881413	4777	1462	11.0.1.0.0.0.0.6.0.0.0	synth with cache (only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: split; only 1: auto; only 1: intro H; only 1: elim H; only 1: intro H0; only 1: elim H0; only 1: auto; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_unique	40	40.325073	109627	5732
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	40	25.349707	5718	2422	0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0); only 1: pos_or_neg b; only 1: rewrite abs_eq in Hr; only 1: intuition; only 1: order; only 1: intuition; only 1: rewrite <- opp_0, eq_opp_r; only 1: rewrite abs_neq' in Hr; only 1: intuition; only 1: order; only 1: intuition; only 1: order; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: now apply mod_always_pos; only 1: now rewrite <- div_mod; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lor0	40	40.055638	14661	3854
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40	0.063996	5	4	1.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite lor_spec, bit_0; only 1: now rewrite orb_false_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	40	0.674810	42	21	0.0.0.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: nzsimpl; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r; only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.add_1	40	40.190062	74100	5098
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	40	0.141224	6	5	0.0.1.0.0	synth with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: order; only 1: now apply pow_0_l).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.add_2	40	0.040410	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_pred_max	40	40.056014	19769	2516
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_unicity	40	40.071118	22599	4626
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	40	40.111017	19528	3975
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.mul_succ_l	40	40.146656	30623	4611
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_equivlistA_restr	40	40.097383	31913	3173
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.map_2	40	40.081340	23782	6099
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	40	40.115748	12603	3981
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40	40.061107	15909	3307
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.max_elt_spec1	40	40.051554	13782	5482
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.exists_in_int	40	40.271396	48790	4726
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	40	40.077244	21697	4165
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.LT_WF_REL.well_founded_inv_lt_rel_compat	40	40.122508	34643	7171
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	40	5.396024	1531	195	1.2.18.0	synth with cache (only 1: intros; only 1: nzsimpl; only 1: reflexivity; only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.eqb_eq	40	40.172798	20747	4685
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_plus	40	40.029678	9252	2046
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.bInjective_bSurjective	40	40.162237	38575	3970
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.setcover_inv	40	40.142083	18306	3292
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	40	40.034520	9804	2310
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_union_elim	40	40.125385	18821	3412
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_lt_compat_l	40	40.104124	31038	3514
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.linear_inter_ok	40	40.041691	10784	2989
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_pow_ok	40	40.016024	4613	715
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.cnf_checker_sound	40	40.096642	34034	1987
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.not_0_INR	40	40.042352	10278	1908
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.nat_compare_gt	40	40.089130	15661	5687
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sgn_pos	40	40.221449	21372	1629
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sgn_neg	40	0.014722	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pow_0_r	40	0.009284	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_sub	40	16.420950	14458	1078	0.0.0.90	synth with cache (only 1: destruct n as [| [| n]]; only 1: nat2N; only 1: nat2N; only 1: nat2N).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_mul	40	0.035511	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	40	40.060718	14267	4465
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_div2	40	0.143386	9	3	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.eqb_eq	40	40.101293	20448	4912
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	40	1.882989	540	192	0.2.0.0.0.1.0.2.0.0.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.031779	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	40	40.176527	13387	1763
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_minus_iff	40	40.053578	16224	4361
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_mul_r	40	40.073553	22100	985
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_ind_bis	40	40.165490	19142	2446
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40	5.866030	1435	638	0.0.0.0.1.0.1.0.0.0.2.0.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: destruct Hr; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: right; only 1: apply mod_neg_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Map.map_push	40	40.071102	22478	4389
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	40	40.118426	10293	2957
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons00_fcons_inv	40	40.001129	94	20
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.treesort_twist2	40	40.053415	13369	3801
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_lt_compat	40	40.146918	16315	1959
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	5.090962	1995	459	0.5.1.0.2.1.0.0.2.0	synth with cache (only 1: intros; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	40	0.086405	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_unique with q; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.double_S	40	40.146620	31241	3234
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40	40.065196	17587	4210
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.le_plus_l	40	4.882830	2705	399	5.3.0.8.0.16	synth with cache (only 1: revert m; only 1: Nat.induct ltac:(m); only 1: now Nat.nzsimpl; only 1: intros m IH; only 1: Nat.nzsimpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.shiftrepeat_last	40	40.135347	11369	3584
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	40	40.052233	11212	4060
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_compare	40	40.200250	15646	4656
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main	40	40.042851	10974	1528
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_succ_l	40	40.143336	15341	5246
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	40	40.068256	7345	580
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p1	40	40.271227	121373	5381
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Add	40	40.078224	23056	2500
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.remove_2	40	40.066083	20077	3917
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.elements_1	40	40.056718	5889	741
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.le_plus_r	40	6.035508	2702	483	7.1.2.0.1.2.1.1.19	synth with cache (only 1: revert m; only 1: induction n; only 1: intro; only 1: Nat.nzsimpl; only 1: left; only 1: destruct m; only 1: simpl; only 1: auto; only 1: now constructor).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	40	40.060706	17443	2771
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.in_split	40	40.185021	59547	4032
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_ancestor	40	40.105136	33054	6072
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	40	40.091093	25299	4742
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lxorC	40	40.058757	16864	3639
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.add_3	40	39.349871	25021	5311	0.0.0.0.15.0.12	synth with cache (only 1: unfold not; only 1: intros s x y; only 1: intro H; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.in_elt	40	2.822026	3899	365	4.1.6.1.18.11	synth with cache (only 1: intros l H; only 1: elim H; only 1: intro; only 1: simpl; only 1: auto using in_app_or, in_or_app; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_pred	40	40.093937	34771	5006
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_Add_gen	40	40.078547	26477	5820
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	40	40.117156	15523	3091
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.eqb_eq	40	40.077621	22718	6444
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_add_restr	40	40.084851	26591	3154
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.mapi_1	40	40.044886	10543	1594
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	40	40.065578	14504	3084
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40	40.042490	11214	2292
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.max_elt_spec3	40	40.044622	10806	5339
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.in_int_exists	40	40.097675	27001	2871
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	40	40.065556	16098	2476
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	40	40.035951	8699	2256
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40	40.360387	29318	5193
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.eq_dec	40	40.256131	55218	4142
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_mult	40	40.055027	16039	4233
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_plus	40	0.135442	36	18	3.1.0	synth with cache (only 1: intros; only 1: apply Z.mod_add; only 1: now intros ->).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_commutes	40	2.515983	586	206	4.0.0.0.0.0.0.3.1.1	synth with cache (only 1: induction s1; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: apply IHs1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.bSurjective_bBijective	40	40.156268	40077	1876
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Add_covers	40	40.121586	24038	5740
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	40	40.070900	12749	3478
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_exact_1	40	1.299210	398	66	1.0.1.9	synth with cache (only 1: intros a n Hn; only 1: rewrite Z.div_exact; only 1: auto; only 1: now intros ->).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_union_iff	40	40.135255	19961	3478
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	40	0.062149	8	7	0.1.0.0.0.0.0	synth with cache (only 1: cases ltac:(n); only 1: intros; only 1: exfalso; only 1: now apply H; only 1: intros; only 1: rewrite pred_succ; only 1: now rewrite <- negb_odd, odd_succ, negb_even).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_lt_compat_r	40	40.167935	32023	3445
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	40	4.693158	699	215	0.0.0.0.0.0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros a b c; only 1: destruct (lt_ge_cases c 0) as [Hc| Hc]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: now nzsimpl; only 1: apply le_ind with (4 := Hc); only 1: solve_proper; only 1: now nzsimpl; only 1: clear c Hc; only 1: intros c Hc IH; only 1: nzsimpl; only 1: rewrite IH; only 1: apply mul_shuffle1; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	2.679264	632	349	2.0.3.1.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.inter_ok	40	40.065768	21665	1849
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_pow_correct	40	40.026411	8379	1211
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.cast	40	5.340957	2879	634	10.4.4	synth with cache (only 1: intros x y; only 1: intro; only 1: now intros ->).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.tauto_checker_sound	40	40.037009	10856	2280
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_exact_2	40	4.313834	1020	297	0.0.2.2.6.1.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: Z.nzsimpl; only 1: now Z.nzsimpl; only 1: rewrite Z.div_exact; only 1: auto; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp	40	0.051267	6	5	0.0.1.0.0	synth with cache (only 1: intros a b Hb H; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: Z.order; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.not_INR	40	40.054725	14650	4139
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.nat_compare_le	40	40.119581	12765	5766
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	4.686284	751	391	0.0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: now try order'; only 1: simpl; only 1: now try order').
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pow_succ_r	40	40.032549	8173	1813
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pow_neg_r	40	1.138506	401	111	0.0.1.1.2.1.5	synth with cache (only 1: revert m; only 1: destruct m; only 1: now destruct n; only 1: intros H; only 1: destr_eq H; only 1: intros H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pow_pos_fold	40	0.025093	1	1	0	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_compare	40	40.171672	65037	6229
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_min	40	0.037746	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_max	40	0.038281	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.leb_le	40	40.106663	23449	6753
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	40	4.586929	753	377	0.7.0.0.0	synth with cache (only 1: intros; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite <- even_spec, even_succ, odd_spec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	40	40.188421	47612	1664
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	40	0.553036	81	44	0.0.2.1.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_le_compat	40	40.037469	9784	2405
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_zero	40	40.082538	22107	1333
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_nil_app_cons	40	40.065172	21057	3680
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_alt	40	0.016862	4	2	2.0	synth with cache (only 1: intros; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	40	3.901448	5150	482	4.6.22	synth with cache (only 1: unfold lt; only 1: intros A P; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Map.Full_map	40	40.182774	27415	6399
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	40	40.042213	8735	3357
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.meq_singleton	40	40.176946	26709	2557
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.ceqb_spec'	40	40.001216	136	17
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	40	40.085582	23151	5226
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.double_plus	40	40.171644	22481	3700
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40	40.058542	14510	4161
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.nth_order_replace_eq	40	40.052454	15987	3443
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	40	40.043803	11757	3203
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_lt	40	40.149781	16298	4621
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_init	40	40.105089	13961	1093
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	40	40.046162	7208	1202
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_no_neutral	40	40.196526	45648	4274
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p2	40	40.115361	41774	4985
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_add	40	40.067258	19796	1734
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.remove_3	40	40.064915	20167	3962
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.elements_2	40	40.098816	32858	3537
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.le_plus_trans	40	40.164950	37508	3699
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	40	40.058426	11176	1826
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.SuccPred.succ_pred_approx	40	40.192681	37216	3936
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40	40.103789	29943	4666
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lxorA	40	40.062215	17188	3944
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.remove_1	40	40.054781	7369	1564
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.remove_2	40	0.362816	45	28	0.0.0.1	synth with cache (only 1: intros; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.in_elt_inv	40	40.113691	41384	4422
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.in_inv	40	0.008986	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_min	40	40.064423	21398	3833
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_st_card_lt	40	40.072078	20920	6567
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.ltb_lt	40	40.225624	14056	4866
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40	40.136228	28136	2002
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.mapi_2	40	40.107173	37119	4358
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	40	40.049843	11002	4526
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	40	40.059550	16958	2613
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.max_elt_spec2	40	40.045535	11896	4845
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	0.509273	171	59	0.0.0.2.0.0.0.0.0	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: destruct (compare_spec 0 n); only 1: order'; only 1: order'; only 1: order').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	40	0.046264	6	6	0.0.0.0.0.0	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.between_or_exists	40	40.102034	37189	3416
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40	40.068908	18124	5172
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40	40.179560	65848	4078
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_equivlistA	40	40.075875	23157	3183
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_Add	40	40.099145	32957	5462
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_union_nodup	40	40.085979	27175	3937
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_union_emptyL	40	0.668897	109	58	0.0.0.0.0.0.0.0.1	synth with cache (only 1: simple induction x; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: generalize (set_add_elim _ _ _ H0); only 1: intros [H1| H1]; only 1: auto with datatypes; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_S_le_reg_l	40	40.105540	30837	5027
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_union_emptyR	40	0.038398	4	4	0.0.0.0	synth with cache (only 1: intros a x H; only 1: case (set_union_elim _ _ _ H); only 1: auto || contradiction; only 1: auto || contradiction).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	40	40.044711	11967	2321
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40	40.031292	6934	2389
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40	40.045598	12750	3164
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkmult_pow_ok	40	40.018748	4626	663
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.eval_bf_map	40	40.070079	24750	1864
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_POS_correct	40	40.052940	16435	1734
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.nat_compare_ge	40	40.089811	13127	4817
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.INR_eq	40	40.076933	24554	3996
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	40	40.094669	9346	3339
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	40	0.037521	7	3	2.2.0	synth with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.square_spec	40	40.157693	5866	818
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_iter	40	40.259616	39004	3998
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.ltb_lt	40	40.095193	19843	5417
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.eq_dec	40	0.017574	1	1	0	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	40	0.037224	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.037970	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.038123	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	40	0.035333	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40	40.031512	6231	3135
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_lt_le_compat	40	40.108898	19437	2532
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_Add_inv	40	40.159951	26143	3366
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec0_wd	40	40.159368	5442	564
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	40	40.159619	32900	2434
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40	40.051017	7964	2579
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons1_fcons_inv	40	40.001064	61	26
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	40	40.061154	14216	7301
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	40	40.068625	17794	4578
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.even_odd_double	40	40.093644	23226	5132
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	40	40.152718	39376	1405
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.nat_compare_eq	40	17.230504	10895	1930	2.0.0.0.0.0.0.6.6.0.11.1	synth with cache (only 1: revert m; only 1: induction n; only 1: simpl; only 1: intros H; only 1: intros; only 1: reflexivity || destruct H; only 1: reflexivity; only 1: easy; only 1: destruct m; only 1: simpl; only 1: easy; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	0.015057	2	1	1	synth with cache (only 1: apply Nat.compare_lt_iff).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	0.009241	1	1	0	synth with cache (only 1: apply Nat.compare_gt_iff).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40	40.097027	29447	3983
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.nth_order_replace_neq	40	40.042861	10889	3731
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	40	40.072444	20448	3704
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_le	40	40.196564	13501	5006
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_true	40	40.042346	10359	1977
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40	40.054981	11870	4599
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_carry_add	40	40.126958	11022	3800
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.proof_irrelevance_cc	40	40.103800	41668	4519
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	40	1.697501	309	146	0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono; only 1: rewrite 2!min_r; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_fold	40	40.088429	31877	2822
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.find_1	40	40.095689	34644	4011
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.elements_3	40	40.145940	57507	1844
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.lt_plus_trans	40	40.258654	11826	776
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	40	40.059973	17618	3422
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_gives_succ_pred	40	40.265390	76699	6340
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	40	40.062355	15818	3524
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lxor0	40	40.066388	19323	4066
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.remove_3	40	40.231570	92455	5368
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.compare_eq_iff	40	24.201766	9983	4207	0.0.0.0.0.0.0.1.0.0.0.0.1.0.0.0.1.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: destruct m; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: rewrite ?IHn; only 1: split; only 1: now intros ->; only 1: now injection 1).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.in_dec	40	40.230102	24898	2540
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_max	40	40.109072	38116	5359
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_is_O	40	4.265916	2197	412	8.2.0.0.0.0.6	synth with cache (only 1: Nat.induct n; only 1: split; only 1: auto; only 1: auto; only 1: intros n IH; only 1: intro H; only 1: inversion H).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	40	4.624757	784	453	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order').
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.leb_le	40	40.052834	14134	3945
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_card_le	40	40.142042	19432	5573
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_false	40	9.841580	3771	726	0.1.0.1.4.2.0.2.0.12	synth with cache (only 1: intros Hn Hm; only 1: assert (Hij : 0 <= i / j) by (apply Z_div_pos; auto with zarith); only 1: case (Z_mod_lt i j); only 1: auto with zarith; only 1: rewrite (Z_div_mod_eq i j); only 1: intros; only 1: apply Zdiv_lt_upper_bound; only 1: Z.order'; only 1: auto with zarith; only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.map2_1	40	40.093393	33170	4467
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40	40.046450	9431	4911
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40	40.040521	11212	1759
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.between_not_exists	40	40.158626	47804	4330
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.id	40	3.255000	1585	463	0.1.0.0.0.1.4.0.1.3	synth with cache (only 1: intro Hn; only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: now destruct Hn).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	40	40.064866	19212	3405
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	40	40.090488	11105	1243
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_add	40	40.076687	22361	3107
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	40	40.063776	18487	1958
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	40	0.058969	23	10	2.1.1	synth with cache (only 1: intro n; only 1: apply sqrt_square; only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_is_Add	40	40.063276	19658	5146
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40	40.088908	8127	1799
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_inter_intro	40	40.115254	18393	3959
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.odd_even_lem	40	40.158681	39161	2204
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40	40.081063	24037	4512
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkpow_ok	40	40.014782	2544	704
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	40	40.035082	6905	3796
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod'_correct	40	40.063818	19056	1853
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.linear_inter_spec	40	40.100338	31251	4872
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.INR_le	40	40.091778	27633	4059
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	40	40.065952	17178	1745
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sqrtrem_spec	40	40.193068	19458	1315
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	40	40.069963	22798	3486
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	40	4.787361	2466	655	0.5.5.3.2	synth with cache (only 1: intros; only 1: apply neq_0_lt_0; only 1: apply pow_pos_nonneg; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	40	8.348532	3667	1142	1.8.2.5	synth with cache (only 1: intros a Ha; only 1: apply sqrt_le_square; only 1: apply le_0_l; only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40	40.053776	9876	3446
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	40	40.053090	13388	3482
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj	40	14.048286	8216	1617	1.21.0.0	synth with cache (only 1: intros; only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial; only 1: f_equal; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_iff	40	0.028175	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: now apply Z2N.inj; only 1: intros; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkopp_pow_ok	40	7.918860	364	177	0.0.0.1.0.2.0.0.0.0.0.2	synth with cache (only 1: destruct p; only 1: simpl; only 1: Esimpl; only 1: rewrite !mkmult_pow_ok; only 1: Esimpl; only 1: simpl; only 1: rewrite mkmult_pow_ok; only 1: Esimpl; only 1: change x with (x ^ 1)  at 1; only 1: now rewrite <- pow_pos_add, Pos.add_1_r, Pos.succ_pred_double; only 1: simpl; only 1: now rewrite ?local_mkpow_ok).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_0	40	0.194402	63	8	0.11	synth with cache (only 1: Nat.bitwise; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_pos	40	0.006731	3	1	2	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_neg	40	0.006982	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_le_l	40	40.359041	13152	1503
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv	40	40.134296	13851	1331
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_wd	40	40.086929	7653	1389
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	40	40.195633	27562	3334
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_add	40	4.713134	2314	625	0.0.0.0.1.7.0.3.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: simpl; only 1: intro H; only 1: intros; only 1: apply Pos2Nat.inj_add; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	40	40.060277	6874	3213
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	40	40.041417	9235	2663
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons2_fcons_inv	40	40.001015	56	25
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_mul	40	2.288169	885	256	0.0.0.0.0.3.0.3.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	40	40.088467	21685	5368
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_eqlistA2	40	20.505683	16843	1182	0.0.1.0.2.0.6.18.35	synth with cache (only 1: intros n IH; only 1: intros x x' Hxx'; only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply Comp; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	40	40.149823	57580	1932
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.even_2n	40	40.220384	58703	4355
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.odd_S2n	40	0.027257	11	4	0.0.1	synth with cache (only 1: intros n H; only 1: exists (Nat.div2 n); only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.div2_double	40	0.092720	21	9	1	synth with cache (only 1: apply Nat.div2_double).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.div2_double_plus_one	40	0.635467	207	64	0.8.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: rewrite Nat.div2_succ_double; only 1: f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	40	40.062725	16128	4458
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.nat_compare_equiv	40	40.139494	20742	4678
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.replace_id	40	40.108701	11702	4109
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	40	40.085631	26259	3910
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_gt	40	40.217575	16285	4367
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_reg_r	40	40.043598	10786	3920
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p1	40	40.072009	24036	4178
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_Empty	40	40.085281	29892	2795
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	40	40.091858	6375	657
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.find_2	40	40.161508	64447	4532
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_1	40	0.016015	6	2	4.0	synth with cache (only 1: intros m; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_2	40	0.014295	2	2	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_3w	40	1.135567	2871	142	5.40	synth with cache (only 1: destruct m; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.cardinal_1	40	0.021161	6	2	4.0	synth with cache (only 1: intros m; only 1: constructor 1).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.elements_3w	40	40.194544	78760	1600
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_pred_injective	40	40.121635	28516	4941
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	40	40.072927	19086	3720
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lxor0_r	40	40.068167	19975	4131
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	4.140503	954	426	1.0.0.0.1.0.0.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.compare_lt_iff	40	40.076339	20681	6245
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.singleton_1	40	40.261968	104863	5687
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.singleton_2	40	0.314132	180	43	0.1.7.0	synth with cache (only 1: unfold singleton; only 1: intros; only 1: case (M.singleton x); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.Complete.radd_ext3_Proper	40	0.020518	2	1	1	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_in_or_default	40	40.262177	32228	3945
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.Complete.rmul_ext3_Proper	40	0.018103	3	1	2	synth with cache (only 1: exact (Rmul_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.Complete.ropp_ext3_Proper	40	0.025862	1	1	0	synth with cache (only 1: exact (Ropp_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_S_cons	40	0.027013	4	3	0.0.1	synth with cache (only 1: intros n l d; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_is_one	40	40.131780	41451	3049
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40	40.081029	7199	2482
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.compare_eq_iff	40	40.125958	18277	4776
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.G_aux	40	40.309622	93672	5487
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.map2_2	40	40.058133	16883	4652
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.compare_lt_iff	40	0.246367	5	5	0.0.0.0.0	synth with cache (only 1: unfold ltb, lt; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.compare_le_iff	40	0.021552	2	2	0.0	synth with cache (only 1: unfold leb, le; only 1: apply iff_refl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40	13.817775	4137	860	0.0.0.1.2.16.1	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: nzsimpl; only 1: apply le_0_l; only 1: intro; only 1: nzsimpl; only 1: apply succ_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40	40.053872	10478	4637
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_def	40	40.703855	10678	1977
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_abs	40	40.043933	9581	3019
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.nth_le	40	40.135120	36161	4312
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40	40.071847	19208	813
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	40	40.064089	16839	2258
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Singleton_atomic	40	40.092219	30390	6146
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40	40.096289	5781	1907
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_inter_elim1	40	40.057938	14514	4164
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_acc_aux	40	40.109457	11872	3653
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	40	12.005046	2341	850	0.0.0.3.0.0.0.4.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_eucl_extended	40	40.070283	23847	3226
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.mem_proper	40	40.031808	5479	1577
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.not_1_INR	40	40.038401	6819	1759
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	40	40.070899	17394	1604
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	40	40.052460	13410	4044
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.IZN	40	0.553953	208	35	0.1.0.9	synth with cache (only 1: intros x IH; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sqrt_spec	40	40.203500	15303	2649
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.compare_le_iff	40	13.452621	4569	1958	0.0.0.0.0.0.0.0.1.0.1.0.0.1.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: split; only 1: intros; only 1: apply le_0_n; only 1: easy; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: rewrite ?IHn; only 1: split; only 1: apply le_n_S; only 1: apply le_S_n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sqrt_neg	40	0.052241	24	8	4	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	40	3.090096	597	295	1.0.0.0.1.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	40	40.054586	16719	2549
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	40	40.057577	15594	3875
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	40	40.066550	18378	5004
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.event_O	40	10.244001	28228	842	1.12.34.16.17	synth with cache (only 1: intros * []; only 1: PeanoNat.Nat.le_elim H; only 1: now PeanoNat.Nat.nzsimpl; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	40	3.808859	2242	316	0.0.0.0.0.0.0.20	synth with cache (only 1: destr_bool; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: apply Private_NZDiv.div_0_l; only 1: order').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	40	40.037193	7287	3381
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	40	0.468112	168	41	0.0.0.0.8	synth with cache (only 1: intros; only 1: apply b2z_inj; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; split; simpl; order')).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.compare_antisym	40	3.820559	1468	648	3.0.2.0.0.2.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: reflexivity || destruct H; only 1: simpl; only 1: reflexivity || destruct H; only 1: destruct m; only 1: simpl; only 1: split; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.compare_succ	40	0.092917	26	20	2.2.0	synth with cache (only 1: revert m; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40	40.028504	5447	2589
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_dev_ok	40	40.010358	2038	891
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_le_r	40	40.108447	5333	1798
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.max_l	40	2.069126	670	360	0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_inv	40	40.211723	7549	1280
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_0	40	40.109686	14655	726
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.max_r	40	1.935444	549	320	0.0.0.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	40	40.153204	27521	4961
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40	40.073399	8110	3262
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	40	40.049157	11766	4292
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_succ	40	40.081435	28560	4014
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.min_l	40	4.389493	1602	744	0.0.0.0.0.0.0.0.0.0.0.0.0.0.6	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	40	40.085629	18235	5019
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_commutes_restr2	40	40.081072	26318	3044
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	40	40.154334	36852	1254
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	40	40.063032	16055	3383
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.leb_iff_conv	40	40.104219	16005	4587
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.min_r	40	5.368545	2310	918	0.0.0.0.0.0.0.0.0.0.0.0.0.0.7	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.replace_replace_eq	40	40.089185	20687	4271
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40	40.123164	39729	5331
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.pow_neg_r	40	0.018447	3	2	1.0	synth with cache (only 1: intro H; only 1: false_hyp H nlt_0_r).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.pow_0_r	40	0.014204	1	1	0	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.pow_succ_r	40	0.205005	26	8	2.2	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.square_spec	40	0.015838	1	1	0	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_ge	40	40.148714	15683	3625
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_reg_l	40	40.096952	19945	5590
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p2	40	40.059370	20014	3451
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Equal_cardinal	40	40.088867	30781	3737
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_cancel_r	40	2.901906	706	304	0.3.1.0.1.2.0	synth with cache (only 1: revert p q; only 1: split; only 1: now apply add_reg_r; only 1: revert p q; only 1: intros p q H; only 1: f_equal; only 1: auto using add_carry_add).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.fold_1	40	40.157469	63396	4250
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.cardinal_1	40	40.087927	29699	2485
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	40	40.086595	16513	3627
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	40	40.090715	24987	4684
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.union_1	40	40.079008	26755	2818
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40	39.876825	14045	1900	1.7.3.11.1.2.5.1	synth with cache (only 1: intro n; only 1: split; only 1: intro H; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: intuition order; only 1: now left; only 1: now right; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.union_2	40	0.115956	22	13	0.0.0.0.0.1.0	synth with cache (only 1: intros s s' x; only 1: intuition; only 1: unfold union; only 1: case (M.remove x s); only 1: firstorder; only 1: case (M.union s s'); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.032823	4	4	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.add_inj_r	40	40.059344	20160	1973
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_default_eq	40	40.085597	26516	6276
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_tail_plus	40	40.087229	10445	3165
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	40	40.103868	25617	4151
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Generalized_induction_on_finite_sets	40	40.322042	65857	5703
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	40	40.077995	9324	3141
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.compare_antisym	40	40.204539	26149	6603
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	40	40.146565	5049	1010
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div31_phi	40	40.067629	7047	683
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_nonneg	40	40.054642	13730	2959
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	40	40.063017	16817	3571
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40	40.064613	18742	2289
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	40	0.052057	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.eq_equal	40	40.060295	18167	4265
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.less_than_singleton	40	40.120972	23209	6035
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	40	40.022457	3992	2167
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	0.036743	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_tail_mult	40	40.123596	8996	2259
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_inter_elim2	40	40.176615	4037	1606
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_inter_elim	40	0.635171	90	40	0.2.0.1.1	synth with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: intros; only 1: eauto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.inter_spec	40	40.064632	18677	3598
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.div_Zdiv	40	40.093244	34528	3736
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40	40.046715	11831	4402
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.INR_IPR	40	40.070940	19886	3120
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40	40.203341	20997	3403
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	40	40.053958	13549	1736
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	40	40.062543	17049	3587
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40	40.073132	21486	3528
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	40	40.056352	14199	4524
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	40	40.154069	30701	4146
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	40	40.048192	10609	3110
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	40	40.237532	16920	1640
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	40	40.031622	6354	2588
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_correct	40	40.029381	9471	1098
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	2.871126	1900	283	11.4.2	synth with cache (only 1: intro H; only 1: rewrite nlt_ge; only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_lt_l	40	40.047955	12325	1985
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app_inv	40	40.157317	8694	782
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	40	1.413672	790	187	0.1.8.1	synth with cache (only 1: intro n; only 1: rewrite nle_gt; only 1: rewrite lt_succ_r; only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_succ	40	40.206401	6398	790
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.leb_correct	40	32.982509	23034	4560	17.1.0.0.0.1.3.0.0.0.0.0.0.1	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: intros m H; only 1: destruct m; only 1: now split; only 1: simpl; only 1: rewrite IHn; only 1: trivial; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	40	40.292055	80749	2694
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.leb_complete	40	0.012094	1	1	0	synth with cache (only 1: apply Nat.leb_le).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.succ_plus_discr	40	20.467150	11109	1672	4.10.2.13.5.8	synth with cache (only 1: Nat.induct n; only 1: auto; only 1: red; only 1: intros a Ha; only 1: Nat.nzsimpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.leb_correct_conv	40	0.032644	3	2	0.1	synth with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.lt_nge).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.leb_complete_conv	40	0.028926	2	2	0.0	synth with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.nle_gt).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	40	40.124327	8044	3383
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_lt_r	40	5.977322	1132	449	0.0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	40	40.071872	17967	5489
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_sub	40	40.093111	30859	4479
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40	40.075778	17845	5374
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_equivlistA_restr2	40	40.073434	21334	3372
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0	40	5.425499	500	100	0.0.0.0.1.0.0.0.7.0	synth with cache (only 1: intros; only 1: rewrite !strong_rec_alt; only 1: unfold strong_rec0; only 1: f_equiv; only 1: rewrite recursion_succ; only 1: f_equiv; only 1: rewrite recursion_0; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	40	40.177356	68213	2247
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	40	40.067262	15187	3350
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.replace_replace_neq	40	40.131261	8998	1899
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40	40.089157	24414	6183
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	40	40.208719	69304	3498
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_sub	40	40.068981	20182	4433
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wproof_irrelevance_cc	40	40.064633	25413	2187
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_1	40	40.140546	52620	2383
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.equal_1	40	40.032884	8332	1059
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_cancel_l	40	40.096862	9453	2667
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.Equivb_Equivb	40	40.048856	13876	1276
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40	40.056914	14515	5278
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	40	0.144814	323	19	25	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	40	0.011875	3	2	0.1	synth with cache (only 1: intros a; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	40	40.049977	12182	2365
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	40	40.086939	24841	2615
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_1	40	40.047793	13898	2983
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	0.030973	4	4	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_3	40	0.116161	29	13	0.1.0.3	synth with cache (only 1: intros; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	40	29.171037	9714	1812	0.0.0.0.0.3.17	synth with cache (only 1: intro z; only 1: intros n m H; only 1: apply mul_le_mono_nonneg; only 1: apply le_0_l; only 1: intuition order; only 1: apply le_0_l; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_In	40	40.160059	40511	4475
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiPOS_inj	40	40.109650	41730	1031
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	40	0.263909	59	23	0.0.0.4.0	synth with cache (only 1: intros; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	40	40.077188	19909	1948
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	40	40.034623	7132	2907
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	40	40.054047	11709	4283
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.min_l	40	40.211506	49460	4861
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_abs_sgn	40	40.090946	7126	2242
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	0.571404	44	16	3.1	synth with cache (only 1: intros n m; only 1: apply lt_lt_add_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_correct	40	40.108147	9503	1602
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40	40.105015	17415	2230
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	40	40.080397	23934	4107
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	0.015077	4	3	0.1.0	synth with cache (only 1: intro n; only 1: intro H; only 1: apply divide_mul_l, divide_refl).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.eq_1	40	40.117497	45382	4013
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40	40.068477	5490	1303
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	40	40.023060	3685	1962
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	40	40.035153	9253	1345
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	4.580341	661	292	0.0.0.2.5	synth with cache (only 1: intros n IH H; only 1: rewrite add_comm; only 1: apply add_pos_nonneg; only 1: assumption; only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_inter_iff	40	40.053535	13449	4527
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	40	12.064508	7383	1260	0.5.9.6.0.0.0.0	synth with cache (only 1: PeanoNat.Nat.cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intro n; only 1: simpl; only 1: intro H; only 1: now rewrite PeanoNat.Nat.pred_succ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40	40.041990	10606	2220
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40	40.055918	15231	3026
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.mod_Zmod	40	40.036169	12559	1358
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.INR_IZR_INZ	40	40.092506	20430	3388
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.log2_spec	40	40.194053	15336	2333
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.log2_nonpos	40	0.034266	7	6	0.1.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1 || intros _; only 1: now destruct 1 || intros _; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	40	40.073607	17077	2869
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40	40.049472	10564	3164
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40	40.046097	8779	2410
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	40	40.091425	10990	2913
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	0.096328	16	9	1.2.0.0.0	synth with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: order; only 1: order').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	40	5.998722	2965	825	1.2.2.8.3	synth with cache (only 1: induction n; only 1: apply PeanoNat.Nat.lt_succ_r; only 1: apply lt_eq_cases; only 1: now right; only 1: now apply PeanoNat.Nat.lt_lt_succ_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	40	40.042007	9235	3025
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	40	40.095005	18744	3692
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	40	40.221798	88305	4901
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_l	40	40.234833	6939	1469
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40	40.080899	24571	4458
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	40	0.016198	4	3	0.1.0	synth with cache (only 1: intro n; only 1: rewrite lt_succ_r; only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40	40.100288	19872	3132
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.leb_compare	40	40.119422	12817	5429
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	40	40.152855	54609	4066
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	40	40.077973	23126	3636
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	40	40.078554	11492	4085
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	40	0.925505	187	74	0.0.1.2.1.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros; only 1: apply succ_wd in H; only 1: now rewrite 2!succ_pred in H; only 1: intros; only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_le_compat_r	40	40.066035	14793	2030
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	40	40.071448	17987	5333
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_pred	40	40.057622	20145	2417
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40	40.057249	9550	3941
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	40	4.425222	2242	466	4.5.3.1.3	synth with cache (only 1: intros x y z; only 1: intuition auto; MO.OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: intro H; only 1: rewrite <- H0; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	40	40.021674	4759	871
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_more_steps	40	40.035522	8251	1486
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_add_restr2	40	40.063055	18174	3349
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	40	40.065740	16435	4779
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	5.547842	1801	586	0.0.5.0.6	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: now try split).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	0.725933	223	82	4.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_0_lt_0; only 1: auto'; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.const_nth	40	40.114717	19749	2474
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	40	0.131563	38	16	1.0.1.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	40	0.052961	7	5	1.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	40	40.080022	15743	4785
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	40	0.188890	28	20	1.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto'; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	40	0.024561	5	3	0.2.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	40	0.021409	5	3	0.2.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	40	40.162354	52090	3749
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_sub_max	40	40.058741	15192	4738
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	40	1.141354	425	152	0.1.4.0.1.0	synth with cache (only 1: intro n; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_0_lt_0; only 1: apply lt_0_1; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	40	0.787433	878	129	0.0.0.27	synth with cache (only 1: intros ([| ], H); only 1: discriminate; only 1: simpl in H; only 1: now rewrite <- plus_n_Sm in H).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	40	0.103235	25	14	1.1.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: apply lt_0_1; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	40	0.021181	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	40	0.021528	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_CCI.proof_irrelevance_cci	40	40.265962	115140	8105
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_2	40	40.090216	29636	2892
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.map_id	40	2.936400	2244	302	4.2.6.0.6.7	synth with cache (only 1: Bool.destr_bool; only 1: induction v; only 1: now simpl; only 1: simpl; only 1: f_equal; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	40	1.208888	284	116	0.0.0.2.1.2	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_0_lt_0; only 1: auto'; only 1: apply mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	40	0.114996	24	14	0.0.0.2.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: auto'; only 1: nzsimpl; only 1: apply mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	40	0.242965	65	31	0.0.5.0	synth with cache (only 1: intros; only 1: apply mod_le; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.equal_2	40	40.060072	18974	3859
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	40	0.291296	44	28	0.4.0.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: apply div_str_pos; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_carry_reg_r	40	40.148232	16664	4868
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.map_map	40	2.050629	836	216	1.0.0.2.0.12	synth with cache (only 1: intros n k1; only 1: induction v; only 1: auto; only 1: simpl; only 1: rewrite IHv; only 1: f_equal).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40	10.489480	2354	429	6.1.0.2.0.1.9	synth with cache (only 1: intros x y l1 l2 Hin; only 1: intro EQ; only 1: inversion_clear 1; only 1: auto; only 1: constructor 2; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.equal_1	40	40.056395	17200	1728
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	40	40.038802	7979	3131
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40	40.068952	21211	2224
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	40	0.048151	3	3	0.0.0	synth with cache (only 1: intro; only 1: apply add_le_cases; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	40	0.051889	8	3	2.3.0	synth with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	40	0.074841	13	5	0.0.3.0	synth with cache (only 1: intro n; only 1: apply lt_le_incl; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.diff_1	40	40.051031	14533	3376
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.diff_2	40	0.037601	4	4	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	40	40.074166	17685	4487
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_inj	40	40.092498	33977	1367
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.In_nth	40	40.143493	39310	4066
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40	40.062637	16452	2615
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos_pos	40	40.075811	23283	3115
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.min_r	40	40.095789	27381	5738
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40	40.071260	21267	2810
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.diff_3	40	3.779169	866	427	1.0.0.0.0.0.1.0.1.0	synth with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.inter s s'); only 1: case (M.mem x s); only 1: case (M.inter s s'); only 1: firstorder; only 1: case (M.diff s s'); only 1: firstorder; only 1: case (M.diff s s'); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	40	40.076839	23363	3233
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40	40.081460	20626	4114
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.eq_2	40	40.060507	16710	3243
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter31_sqrt_correct	40	40.497194	9004	1549
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	40	40.018672	3886	1004
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	40	40.043728	10220	3265
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	40	5.155840	3388	458	0.0.0.0.25	synth with cache (only 1: destr_bool; only 1: apply Private_NZDiv.div_small; only 1: order'; only 1: apply Private_NZDiv.div_small; only 1: order').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	40	40.026548	6189	1420
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	40	0.388382	145	33	0.0.0.0.8	synth with cache (only 1: intros; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; order')).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_inter_nodup	40	40.063928	19619	4190
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	40	40.070406	19824	2935
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	40	40.032227	6831	1914
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.diff_inter_ok	40	40.081524	24553	4229
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	40	10.731526	2405	1111	1.0.6.1.2	synth with cache (only 1: intros n m; only 1: symmetry; only 1: rewrite <- (succ_pred m)  at 2; only 1: symmetry; only 1: apply lt_succ_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	40	0.775691	223	69	0.0.5.1	synth with cache (only 1: intro; only 1: rewrite nle_gt; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40	40.102981	32875	4388
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.plus_IZR_NEG_POS	40	40.047330	12212	1864
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.even_spec	40	40.211750	22751	4755
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	40	40.038423	8320	1283
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_le	40	40.074481	22551	5213
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40	40.030385	7700	2001
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	40	40.085120	11521	2855
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.fold_remove_ok	40	4.109894	1333	516	7.1.0.0.0.0.0	synth with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: unfold flip in *; only 1: ok).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	40	40.220956	56294	4706
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	40	40.040785	9123	3182
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	40	40.069726	10322	3757
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40	6.607215	1545	625	1.10.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite <- le_succ_l; only 1: now rewrite succ_pred).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_1	40	24.757539	14356	1530	0.0.35	synth with cache (only 1: intro H; only 1: rewrite <- cardinal_Empty; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	40	40.366544	160499	3343
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	40	40.083125	25156	4721
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_r	40	40.225484	11586	2184
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	40	0.235625	51	19	0.2.0.1.1	synth with cache (only 1: cases ltac:(n); only 1: intuition; only 1: intro H; only 1: right; only 1: apply lt_0_succ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	40	40.113235	38493	4924
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	40	40.038096	8800	2855
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	40	40.036797	7800	3176
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40	9.997393	2518	849	2.2.10.1	synth with cache (only 1: intros a b c Ha H; only 1: apply pow_le_mono_r; only 1: auto'; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	0.054676	8	7	0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: intuition order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40	40.158766	63939	1682
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	40	40.048341	15100	2639
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_compare	40	40.110269	40902	4287
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	40	40.069466	16331	4766
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	40	40.112104	5892	1399
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_fixpoint	40	40.105545	10344	2750
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_commutes2	40	40.068989	15236	3107
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_l	40	40.059667	12601	5334
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	40	0.057398	10	9	1.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	40	40.069007	19161	6493
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_pred	40	40.090981	29148	3367
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40	40.064605	13535	3783
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Weak_proof_irrelevance_CCI.wem_proof_irrelevance_cci	40	40.144291	55302	7403
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	40	30.877793	17543	2285	0.0.0.8.0.2.0.13.3.0.0	synth with cache (only 1: intro n; only 1: destruct_max n; only 1: rewrite abs_neq; only 1: apply eq_opp_r; only 1: auto with relations; only 1: rewrite opp_nonpos_nonneg; only 1: auto; only 1: rewrite abs_eq; only 1: auto with relations; only 1: rewrite opp_nonneg_nonpos; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.map_1	40	40.080184	25793	4242
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	40	40.066514	15143	6937
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_carry_reg_l	40	40.116711	14639	5468
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	40	23.664344	7764	2174	1.0.1.5.1.0.1.6.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.map_ext_in	40	40.278812	36957	4429
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.map_ext	40	0.058864	7	7	0.0.0.0.0.0.0	synth with cache (only 1: induction v; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite H by constructor; only 1: rewrite IHv; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.equal_2	40	40.081290	24645	3490
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	40	40.028197	4342	1800
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	1.989956	496	169	14.1.0	synth with cache (only 1: rewrite abs_eq; only 1: now nzsimpl; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	40	40.063346	19922	3456
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	40	40.066621	11302	2997
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_l	40	16.344199	9389	2301	0.2.0.0.1.3.10	synth with cache (only 1: intros a b c Ha H; only 1: destruct (lt_trichotomy a b) as [LT| [EQ'| GT]]; only 1: assert (a ^ c < b ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order; only 1: trivial; only 1: assert (b ^ c < a ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_r	40	0.059125	8	7	0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (lt_trichotomy b c) as [LT| [EQ'| GT]]; only 1: assert (a ^ b < a ^ c) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_complete	40	40.016672	3729	1643
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_overflow	40	40.144943	30475	5083
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.max_l	40	40.170577	23165	5074
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.max_r	40	0.059239	7	6	1.0.0.0.0.0	synth with cache (only 1: unfold max, le; only 1: rewrite compare_antisym; only 1: case compare_spec; only 1: trivial; only 1: now destruct 2; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40	40.059690	15479	3728
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40	40.071148	21913	3087
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40	40.166562	64151	2713
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	40	40.055044	12203	2599
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.eq_refl	40	40.187084	75125	3452
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40	40.041256	10807	2228
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt	40	40.432949	8839	2438
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	40	40.111334	9219	2473
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	40	40.026979	6257	1513
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	40	40.092986	3051	987
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40	21.762987	2802	1017	0.0.0.0.0.0.3.1.1.2	synth with cache (only 1: intros n m H; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now apply add_cancel_l; only 1: assumption; only 1: now apply add_le_mono_l; only 1: rewrite 2!max_l; only 1: now apply add_cancel_l; only 1: assumption; only 1: now apply add_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_diff_intro	40	40.180677	4580	1962
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	40	1.450972	437	117	0.0.2.0.2.0.4.0	synth with cache (only 1: intros a0; only 1: apply b2n_inj; only 1: rewrite testbit_spec' by trivial; only 1: nzsimpl; only 1: simpl; only 1: order; only 1: order'; only 1: order_nz).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	40	40.044209	11518	2417
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	40	40.046947	12694	2521
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	40	40.078632	26250	2580
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.plus_IZR	40	40.036295	10040	1571
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.odd_spec	40	40.234338	26249	4374
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.double_spec	40	0.008244	2	1	1	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40	4.486613	707	290	1.0.0.0.1.0.0.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_or	40	40.059518	16170	2783
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.succ_double_spec	40	0.485429	91	38	0.1.0.0.0.1.3	synth with cache (only 1: destruct n; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pred_double_spec	40	0.009881	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40	40.062030	18638	3169
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.diff_ok	40	40.072095	20591	3344
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	40	40.293980	36647	4697
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40	40.051923	12818	3650
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40	40.073620	22157	4081
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	40	7.780318	2581	757	0.1.0.0.1.1.0.8	synth with cache (only 1: intro H; only 1: intro n; only 1: nzinduct n; only 1: apply neq_sym; only 1: apply neq_succ_0; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	40	40.054353	11246	3354
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2	40	40.123517	40058	4585
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	40	0.584184	154	60	0.0.3.2	synth with cache (only 1: intros z n H; only 1: apply lt_le_incl; only 1: apply lt_pred_le; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	40	40.315471	136953	4790
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40	40.065618	20048	2863
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_m	40	40.269675	9030	1913
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40	7.880802	1028	405	0.0.0.3.0.0.0.2.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	1.937696	2115	302	0.0.0.0.0.0.0.0.0.0.7.33	synth with cache (only 1: simpl_relation; only 1: repeat split; only 1: unfold natural_isomorphism; only 1: now rewrite N1.recursion_0; only 1: unfold natural_isomorphism; only 1: intro n; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	40	40.075288	24602	2632
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	4.288903	1624	418	0.0.0.8.3	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m)  at 2; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40	40.036529	11730	1199
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	40	0.069675	3	2	0.1	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	40	40.090820	8529	3059
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_r	40	3.152109	792	319	1.0.0.1.1.0.0.0.2.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_le_r	40	40.055979	6610	1251
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_le	40	40.090128	29363	4647
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	40	7.489547	2399	597	0.0.0.0.0.2.4.0.0.1.3	synth with cache (only 1: cases ltac:(n); only 1: intros; only 1: exfalso; only 1: now apply H; only 1: intro H; only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	40	40.058264	13787	3676
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	40	40.062190	17418	3128
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_fixpoint	40	40.047649	13942	3330
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_equivlistA2	40	40.073895	22456	4090
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0_any	40	0.493541	72	30	0.0.1.3.0.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt; only 1: rewrite strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_l	40	40.058926	12150	5228
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2b	40	10.346272	6181	1044	0.0.0.0.0.0.0.6.7.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite M.cardinal_1 in *; only 1: generalize (elements_mapsto_iff m); only 1: destruct (elements m); only 1: simpl in *; only 1: now elim H; only 1: exists p; only 1: rewrite H0; only 1: destruct p; only 1: simpl; only 1: constructor; only 1: red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40	37.524993	77175	11613	5.13.8.1.14.0	synth with cache (only 1: intros H A; only 1: destruct (H A); only 1: right; only 1: trivial; only 1: left; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	40	40.068667	16222	3666
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	40	8.394765	3610	447	0.0.1.0.18.7	synth with cache (only 1: intros n H; only 1: apply le_ind with (4 := H); only 1: solve_proper; only 1: now nzsimpl'; only 1: intros; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_r	40	3.945350	1140	508	3.0.0.0.6.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite gcd_comm, gcd_opp_l, gcd_comm).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_pred_max	40	40.177907	29759	3578
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.even_spec	40	40.115089	23026	5632
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	40	14.512538	8225	2061	0.4.0.0.0.0.0.4.0.1.3	synth with cache (only 1: setoid_rewrite one_succ; only 1: intro n; only 1: split; only 1: rewrite lt_succ_r; only 1: intro H; only 1: le_elim H; only 1: false_hyp H nlt_0_r; only 1: assumption; only 1: intro H; only 1: rewrite H; only 1: apply lt_0_succ).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.map_2	40	40.087076	29663	4387
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40	40.059184	13907	5682
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_assoc	40	40.142884	15567	4706
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_indep	40	35.543352	27525	4726	0.0.0.2.1.7.4.2.1.12	synth with cache (only 1: induction l; only 1: intros l m a; only 1: simpl; only 1: intro; only 1: now Nat.nzsimpl; only 1: intros; only 1: destruct n; only 1: split; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_xO	40	0.016901	4	2	0.2	synth with cache (only 1: simpl; only 1: f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40	40.090333	9478	1520
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	40	40.058091	12227	4181
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.nth_map	40	40.285214	26224	4161
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.map_1	40	40.055415	13906	2109
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	40	40.094740	29848	3714
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.app_nth1	40	0.935550	187	71	0.0.5.0.0.0	synth with cache (only 1: induction l; only 1: inversion 1; only 1: simpl; only 1: destruct n; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	40	40.055016	16864	3230
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	40	0.765591	298	103	0.0.0.1.0.0.0.0.2.0	synth with cache (only 1: intros a b q r Ha (Hb, Hr) EQ; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: apply mod_bound_pos; only 1: order; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.lt_0_mul'	40	40.042637	10105	3336
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l_iff	40	40.051100	13128	4490
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.Complete.Field.ring_S_inj	40	40.126774	49104	1121
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.lt_succ_r	40	40.089537	11178	3569
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40	40.050985	13099	3592
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.fold_1	40	40.074588	23736	3778
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.f_dec	40	0.013952	1	1	0	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_least	40	40.072490	16686	3924
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.eq_sym	40	40.087777	29221	4334
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	40	40.046734	8732	2158
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40	40.122034	11789	1890
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_def	40	40.569472	4908	665
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	40	40.030432	5602	1828
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	40	40.037761	10782	1363
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.app_nth2	40	9.666568	3264	1086	0.0.8.0.0.3.0.1.0.1.0	synth with cache (only 1: induction l; only 1: simpl; only 1: inversion 1; only 1: auto; only 1: simpl; only 1: auto with arith; only 1: intros l' d [| n]; only 1: simpl; only 1: now destruct l; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.app_nth2_plus	40	0.246655	32	20	1.1.0.1.0.0	synth with cache (only 1: induction l; only 1: intros l' d [| n]; only 1: auto; only 1: auto; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_middle	40	0.966172	349	123	3.1.0.0.0.1.1.1	synth with cache (only 1: induction l; only 1: simpl; only 1: intros [| ] ?; only 1: intros; only 1: auto; only 1: auto with arith; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.double_spec	40	4.257793	430	83	5.1.13	synth with cache (only 1: nzinduct n; only 1: reflexivity; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_diff_elim1	40	40.202150	3675	1566
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	40	40.074536	9667	2633
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	40	40.076327	23102	3034
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	40	13.722362	4695	1464	0.0.0.7.0.0.0.8.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	40	40.067032	14176	2715
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40	19.882918	8816	2768	0.0.3.0.0.1.0.0.1.5.0.0.1.0.0.5.1	synth with cache (only 1: intro n; only 1: destruct_max n; only 1: apply gcd_unique; only 1: trivial using divide_refl; only 1: apply divide_0_r; only 1: trivial using divide_refl; only 1: trivial; only 1: apply gcd_unique_alt; only 1: rewrite opp_nonneg_nonpos; only 1: trivial using divide_refl; only 1: intros q; only 1: rewrite divide_opp_r; only 1: split; only 1: split; only 1: apply divide_0_r; only 1: trivial; only 1: now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.mult_IZR	40	40.060621	18864	2127
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.add_sqrt_le	40	40.132485	10988	3927
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40	40.282727	50294	1990
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	40	40.066389	19228	3529
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40	40.026518	5477	2296
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	40	40.166572	17257	4283
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	40	40.047372	12424	2867
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	40	40.043982	8763	3155
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_l	40	34.292401	4573	1519	0.0.1.0.4.0.0.0.1.0.0.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!max_l; only 1: now f_equiv; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1_inv	40	40.060097	18829	2978
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40	14.435928	2606	776	1.8.5.0	synth with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.036876	5	4	0.1.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	40	40.074298	23895	4040
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40	40.129601	48168	3197
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.043945	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	40	40.075714	19660	4472
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	40	40.071482	7671	3765
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_le_l	40	40.028420	7186	1563
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_lt	40	40.067363	19940	4051
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	40	40.042959	10218	3028
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	40	40.050414	10612	4365
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40	40.065829	19197	3340
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_r	40	8.193372	1199	537	0.0.0.0.0.0.0.0.0.0.0.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!max_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_add2	40	40.080814	25487	3655
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_any_fst_arg	40	40.031240	6860	2897
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_double_spec	40	19.323310	5089	1552	0.0.0.2.8.2	synth with cache (only 1: simpl; only 1: unfold succ, add; only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.filter_iff	40	40.090244	13426	1387
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	40	25.380423	31931	2380	2.4.22.24	synth with cache (only 1: intros a b c0; only 1: intros l H; only 1: inversion 1; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.double_add	40	2.701235	289	135	0.0.0.3.0.0.2.0.0.0	synth with cache (only 1: destruct n, m; only 1: now nzsimpl; only 1: unfold succ, add; only 1: simpl; only 1: trivial; only 1: unfold succ, add; only 1: auto; only 1: unfold succ, add; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40	40.235894	98464	9142
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	40	40.128806	35127	5022
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40	40.045280	8388	662
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_min	40	40.204400	16095	6136
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.odd_spec	40	40.122049	25696	5167
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40	40.055668	15508	2917
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_double_add	40	3.861770	249	85	8.0.0.0	synth with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: now destruct n, m).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.double_mul	40	0.166456	9	8	1	synth with cache (only 1: now destruct n, m).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.mapi_1	40	40.101013	12991	2028
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	40	40.066693	15803	5291
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_xI_pred_double	40	40.154951	12803	5496
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	40	40.025290	4573	1911
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40	40.082218	15895	3057
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.map_2	40	40.123677	42619	3994
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.nth_map2	40	40.248112	23061	2388
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_double_mul	40	1.991083	158	86	2.7	synth with cache (only 1: rewrite add_comm; only 1: now destruct n, m).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.div2_double	40	0.028119	4	3	1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.div2_succ_double	40	0.010101	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40	40.102757	36999	2082
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.eq_mul_1	40	40.055996	14128	4438
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	3.367649	1234	204	9.8.0.0	synth with cache (only 1: intro n; only 1: destruct_max n; only 1: now left; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l_iff	40	40.047708	12871	3248
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	40	17.721662	4556	1729	0.4.0.3.0.4	synth with cache (only 1: symmetry; only 1: rewrite <- le_succ_l; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: rewrite lt_succ_r; only 1: now rewrite succ_pred).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_l	40	14.144924	1593	585	2.0.0.1.2.0.0.0.2.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_l; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.Complete.Field.gen_phiPOS_discr_sgn	40	40.047112	13977	1449
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	40	0.761838	293	72	2.0.0.8.0	synth with cache (only 1: intro; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_comm	40	40.054928	13691	3803
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_r	40	3.015887	459	209	0.0.0.1.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.eq_trans	40	40.131552	47534	4006
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_comm	40	40.093720	29991	3069
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	40	40.052847	14566	2318
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	40	40.064764	21081	1801
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	40	0.921330	342	52	0.12.0	synth with cache (only 1: intros n m; only 1: apply opp_inj_wd; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_lower_bound	40	40.382664	23439	1555
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	40	40.102582	34824	3278
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_split	40	40.083281	26036	3986
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	40	14.695901	6048	1411	6.1.8.3	synth with cache (only 1: intros z n H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: apply lt_0_succ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	40	40.096179	14436	3360
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_diff_elim2	40	40.195943	4376	1679
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	40	40.038570	10877	1583
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	40	40.051742	10385	2907
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	40	0.786409	149	73	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_r	40	40.059078	12767	4781
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40	40.083716	27462	3195
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.pow_IZR	40	40.045515	11805	2102
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.div_eucl_eq	40	40.120628	43575	4333
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	40	40.084527	20703	3607
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	40	0.317344	98	28	0.1.0.4	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: rewrite add_comm; only 1: apply add_sub).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	40	40.027821	6931	1671
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	40	16.418370	11899	1360	0.0.0.0.0.1.28.15	synth with cache (only 1: transitivity 1; only 1: symmetry; only 1: apply div_unique with 0; only 1: order; only 1: now try split; only 1: nzsimpl; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.linear_diff_spec	40	40.074256	18153	7855
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40	40.147628	8854	2704
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	40	40.050278	13294	3034
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	40	40.075471	12437	2889
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	40	4.820616	889	398	0.2.0.0.4	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: rewrite <- add_sub_assoc by apply le_refl; only 1: rewrite sub_diag; only 1: now rewrite add_0_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	2.286522	495	224	2.0.5.1	synth with cache (only 1: intro Hn; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40	37.875389	33881	4945	0.11.39.4.0	synth with cache (only 1: intro n; only 1: eapply Private_OrderTac.Tac.lt_irrefl; only 1: rewrite lt_succ_r; only 1: apply eq_le_incl; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1	40	40.246934	55530	4243
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r_iff	40	19.124666	4349	1865	0.0.1.0.0.0.0.0.7	synth with cache (only 1: intros; only 1: split; only 1: intro LT; only 1: now apply Private_NZPow.pow_lt_mono_r; only 1: intro LT; only 1: destruct (le_gt_cases c b) as [LE| GT]; only 1: assert (a ^ c <= a ^ b) by (apply Private_NZPow.pow_le_mono_r; order'); only 1: order; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40	40.028173	6294	1471
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40	10.995000	3204	1440	0.0.0.0.0.0.1.0.0.6.1.0	synth with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: destruct_max n; only 1: trivial using divide_refl; only 1: rewrite opp_nonneg_nonpos; only 1: trivial using divide_refl; only 1: now apply divide_abs_l; only 1: destruct_max n; only 1: trivial using divide_refl; only 1: auto with relations; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	40	40.059839	13361	2791
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	40	13.239498	3009	1247	1.2.0.0.0.1.2.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!max_l; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	40	40.094079	7071	3281
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_lt_compat_r	40	40.051098	14524	3918
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_min	40	40.078576	23672	4340
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	40	40.031271	5628	3280
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	40	40.085943	13389	1919
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	40	40.036580	8735	2517
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.InA_dec	40	40.039264	11555	1760
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	40	0.316053	12	7	0.0.2.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	40	3.947321	957	286	0.1.1.10.0	synth with cache (only 1: intros a b Hb; only 1: rewrite rem_eq by order; only 1: rewrite <- add_opp_r, mul_comm, <- mul_opp_l; only 1: rewrite (gcd_comm _ b); only 1: apply gcd_add_mult_diag_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	40	40.133064	16983	2438
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.for_all_iff	40	40.039115	10001	2262
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.filter_1	40	40.042247	10909	2865
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40	40.160731	60942	9366
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40	40.094095	22290	4259
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40	40.049817	12913	2359
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_max	40	40.080282	21997	6227
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.divmod_spec	40	40.088279	17977	2197
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.filter_2	40	4.411183	1264	352	0.0.3.0.0.1.3	synth with cache (only 1: intros a b c0; only 1: unfold compat_bool, compat_P, Proper, respectful, impl; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.filter_3	40	0.152548	6	6	0.0.0.0.0.0	synth with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.mapi_2	40	40.105130	36297	4960
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	40	40.039546	7150	4582
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_xO_pred_double	40	40.194718	15072	4804
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	40	40.134045	42525	6328
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	40	0.563472	167	57	0.0.0.0.3.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.mapi_1	40	40.079104	25080	2258
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.double_inj	40	40.085076	25900	3558
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40	40.342855	52982	1655
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.488716	142	76	0.2.3.0	synth with cache (only 1: intros; only 1: intuition; only 1: apply div_small; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	0.145343	32	21	0.2.2.0	synth with cache (only 1: intros; only 1: intuition; only 1: apply mod_small; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.050042	8	7	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40	35.318211	8578	1367	4.2.22	synth with cache (only 1: red; only 1: exists 0; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	40	40.073801	21928	2178
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	40	40.066207	13018	2169
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_inj	40	40.050391	15429	1520
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	40	0.147506	9	5	3.0.0	synth with cache (only 1: intros; only 1: rewrite lt_le_pred; only 1: apply le_succ_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	0.286819	16	8	0.0.4.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40	40.025593	6278	1606
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	0.087189	7	6	1.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	40	1.518621	444	143	0.1.0.0.0.0.4.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: rewrite abs_eq; only 1: auto with relations; only 1: auto; only 1: rewrite (abs_eq (- n)); only 1: auto with relations; only 1: rewrite opp_nonneg_nonpos; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	40	1.309805	276	120	1.0.0.5.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite <- le_succ_l; only 1: symmetry; only 1: apply lt_succ_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	40	0.414881	66	24	0.6.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	40	20.704032	4414	1650	1.0.0.3.1.0.0.4.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	40	0.449363	127	34	3.4.0	synth with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply neq_sym, neq_succ_diag_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40	40.055119	6420	895
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40	40.070629	14780	4912
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_l	40	40.053805	10603	1728
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.lt_trans	40	40.096322	33306	4529
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_l	40	40.026035	6149	1545
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	40	18.577231	5553	759	4.0.1.0.24.0	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: generalize (partial_order_equivalence y y'); only 1: compute; only 1: setoid_rewrite Hx; only 1: setoid_rewrite Hy; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div312_phi	40	40.137109	7638	903
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	40	40.056272	15233	2596
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	40	40.072347	12305	3377
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_ext	40	40.076046	23010	3007
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_diff_iff	40	40.049737	13402	3169
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	40	40.061362	17154	2867
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40	40.196003	4485	1276
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40	40.061039	18747	1912
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.succ_IZR	40	40.046040	11645	2817
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.div_mod	40	40.113149	42098	4113
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	40	40.036959	9636	2697
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	40	40.073935	21536	4948
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.fold_remove_spec	40	40.039433	9141	3370
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	40	40.135956	19027	4806
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	40	40.058772	16523	2701
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40	40.049547	13325	3131
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	40	40.103413	9995	3069
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	40	40.134147	49309	3751
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2_inv	40	40.191959	18944	1864
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r_iff	40	40.059283	7705	2340
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	40	40.083280	29201	1424
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	40	0.759683	207	59	0.1.1.1.1.1	synth with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite sub_succ_l; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.opp_IZR	40	9.838956	6916	651	3.1.1.0.2.12.9.4	synth with cache (only 1: intro; only 1: unfold IZR, IPR; only 1: destruct n; only 1: auto with real; only 1: rewrite <- (Z.opp_involutive (Z.pos p)); only 1: auto with real; only 1: simpl; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_mult_diag_r	40	40.058927	13758	4734
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	40	40.149142	53396	5724
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_lt_r	40	40.040191	11879	2129
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_max	40	40.095085	30635	5438
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.abs_nat_spec	40	0.009884	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.abs_nat_nonneg	40	0.018969	2	2	0.0	synth with cache (only 1: intros; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	40	40.050071	10556	4238
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	40	40.065732	8314	813
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40	40.062638	19007	2625
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	40	3.204858	1239	319	1.0.0.0.1.11.0.0	synth with cache (only 1: intro; only 1: intro; only 1: nzinduct n; only 1: nzsimpl; only 1: now f_equiv; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_filter	40	40.089593	29375	3094
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.id_abs	40	2.905979	1760	441	1.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.18	synth with cache (only 1: destruct n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.id	40	0.020323	5	4	0.0.0.1	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0.005543	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_pos	40	0.008132	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0.007430	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	40	0.143876	7	6	0.1.0.0.0.0	synth with cache (only 1: intros; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	40	0.475668	52	22	1.1.0.0.1.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40	40.083201	25111	3932
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.exists_iff	40	40.083258	28334	3397
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	40	25.832535	6009	2385	1.2.0.0.0.1.2.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	1.981057	1469	238	20.0.0	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40	40.125304	42322	9884
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_diff_nodup	40	22.148594	7878	2127	1.0.0.0.14.0.0.0.1	synth with cache (only 1: induction 1 as [| x l H H' IH]; only 1: intro Hl'; only 1: simpl; only 1: constructor; only 1: intuition; only 1: simpl; only 1: destruct (set_mem x l'); only 1: auto; only 1: now apply set_add_nodup).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40	40.107753	30081	3092
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	40	40.051166	15072	1795
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_iter	40	40.155166	27394	4717
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.div_mod	40	40.104816	15268	3818
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.for_all_1	40	40.062449	10592	939
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_diff_trivial	40	2.779517	550	181	0.2.0.0.3.2	synth with cache (only 1: unfold set_In; only 1: intros a x y; only 1: eapply set_diff_elim2; only 1: eauto; only 1: eapply set_diff_elim1; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.map2_1	40	40.091853	33037	4656
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.for_all_2	40	0.986338	260	85	0.5.0.0.0.0	synth with cache (only 1: intros s f; only 1: unfold for_all; only 1: case M.for_all; only 1: intuition; only 1: intros a n H H'; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	40	40.105913	16688	3466
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	40	0.292161	66	22	0.0.5.0	synth with cache (only 1: intros; only 1: apply mul_div_le; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	0.084148	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	40	0.302767	32	13	0.0.0.2	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	0.450543	301	82	9.1.0	synth with cache (only 1: intros; only 1: compute; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_diag	40	40.123416	27150	4725
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	40	0.021576	8	2	6.0	synth with cache (only 1: intros; only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40	0.031426	15	4	0.0.5	synth with cache (only 1: intros x y z H1 H2; only 1: rewrite <- H2; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.mapi_2	40	40.095233	30688	3843
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_double_inj	40	40.176315	27210	4306
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.to_list_of_list_opp	40	40.280521	103569	1644
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	40	40.065423	14858	4388
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.take_O	40	0.018956	7	2	5.0	synth with cache (only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	40	40.155580	7801	777
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_complete	40	40.014262	3086	1122
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40	40.019889	4419	1533
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	40	40.056327	16686	2064
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40	40.061790	17091	3051
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40	40.132074	9813	2377
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40	40.095786	13779	3305
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_r	40	40.105908	13659	2748
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.lt_not_eq	40	40.080387	27396	4172
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40	40.032226	8216	1469
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	40	40.070450	6994	3156
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	0.010909	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_correct	40	40.042798	11540	1364
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40	40.046560	9051	2926
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.le_ind_rel	40	40.080232	27767	3504
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_error_In	40	40.148044	32544	4847
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40	40.053633	12364	1992
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40	40.133518	13794	3140
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	40	40.063839	18446	3717
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pos_div_eucl_bound	40	40.242061	25047	3310
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40	40.035728	8761	3566
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	40	40.036446	7382	1898
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.diff_spec	40	40.074926	18312	7421
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	40	40.109386	41445	4290
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40	40.058300	17000	2546
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40	40.056336	14862	3311
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	40	40.123965	44022	3777
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	40	40.118654	12735	3852
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2	40	40.161608	19257	3744
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_lin_r	40	40.069281	15081	2509
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	40	40.037417	9916	1554
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	6.784125	3121	503	0.0.0.0.6.0.4.1.0.8	synth with cache (only 1: induction n; only 1: intro m; only 1: simpl; only 1: symmetry; only 1: apply add_0_l; only 1: unfold ofnat; only 1: intros; only 1: rewrite ofnat_succ, add_succ_l; only 1: simpl; only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.minus_IZR	40	40.052060	14206	2789
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_diag_r	40	40.050687	10671	5032
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_lt_l	40	40.034703	9001	2376
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	40	40.034101	6206	3267
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	40	40.106128	35246	2859
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40	10.287357	10945	863	0.1.0.1.2.1.0.7.0.5.24.0	synth with cache (only 1: intros; only 1: destruct H; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: ok; only 1: eauto; only 1: ok; only 1: ok; only 1: auto_tc; only 1: ok; only 1: ok; only 1: ok; only 1: ok).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	40	40.034511	8293	1774
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_InA	40	40.076070	23585	4200
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_succ	40	40.075050	25071	3683
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	40	0.188982	6	6	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	40	40.147785	56293	4272
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40	1.155451	844	151	9.1.0.1.7	synth with cache (only 1: inversion 1; only 1: invrb; only 1: auto; only 1: invrb; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.040688	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	40	0.312040	22	14	0.0.0.0.0.2	synth with cache (only 1: Bool.destr_bool; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_add	40	1.703087	664	223	0.0.0.0.1.1.0.1.0.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros Hn Hm; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: now destruct 1 || now destruct 2).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_alt	40	40.078371	25336	3514
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	40	40.153273	8668	2285
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	40	40.457036	199621	3402
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40	40.180290	69998	10046
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	40	40.072743	20873	4203
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	40	40.030259	7181	1840
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	40	0.987351	505	129	0.0.0.7.1.0	synth with cache (only 1: intro n; only 1: apply lt_eq_cases; only 1: constructor; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now right).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Nat2Pos.id	40	40.190659	51969	4731
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.mod_bound_pos	40	40.112167	23510	4197
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	40	18.583843	8411	637	1.2.2.5.7.5.29.5	synth with cache (only 1: rewrite one_succ; only 1: rewrite <- (add_0_l 0); only 1: rewrite <- (add_0_l 0); only 1: rewrite <- (add_0_l 0); only 1: rewrite opp_succ; only 1: apply lt_pred_le; only 1: rewrite <- (add_0_l 0); only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.map2_2	40	40.054283	13974	4681
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.exists_1	40	40.047751	14409	1701
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolOrder.le_refl	40	0.015895	5	4	1.0.0.0	synth with cache (only 1: intros; only 1: destruct b; only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolOrder.le_trans	40	0.091476	51	9	9	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolOrder.le_true	40	0.006834	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolOrder.false_le	40	0.006678	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolOrder.le_compat	40	0.072947	28	12	3.3	synth with cache (only 1: reduce; only 1: simpl_relation).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolOrder.lt_irrefl	40	0.011314	2	2	0.0	synth with cache (only 1: destr_bool; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolOrder.lt_trans	40	0.016119	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolOrder.lt_compat	40	0.012353	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	40	40.063373	17431	4258
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolOrder.lt_trichotomy	40	0.069891	7	5	0.0.0.1.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: auto; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolOrder.lt_total	40	0.033982	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolOrder.lt_le_incl	40	0.012391	2	2	0.0	synth with cache (only 1: destr_bool; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolOrder.le_lteq_dec	40	0.032728	4	4	0.0.0.0	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40	40.104360	30302	8643
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.peano_rect_succ	40	40.277390	56293	3102
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolOrder.le_lteq	40	0.202147	42	19	1.1.1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.peano_rect_base	40	0.008874	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40	7.750579	1815	717	0.2.0.0.1.0.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l by trivial; only 1: rewrite max_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite min_r by trivial; only 1: rewrite max_r; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_double_lt	40	40.138276	13839	2119
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.map2_1	40	40.355854	6245	833
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	40	40.090766	20546	5285
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.take_idem	40	40.212461	21766	3139
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.double_lt_mono	40	0.672868	73	42	1.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intro H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.arb_nr_rb	40	10.804332	11872	1071	1.41.0.0	synth with cache (only 1: destruct 1; only 1: auto; only 1: inversion H; only 1: invrb).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	40	1.154354	359	158	1.0.0.0.0.0.1.3	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.021615	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	40	0.022546	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40	40.055148	14761	2850
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.take_app	40	2.713972	825	248	0.2.0.2.0.3.1.0	synth with cache (only 1: intros; only 1: generalize dependent n; only 1: induction v; only 1: reflexivity; only 1: intro Hneq; only 1: simpl; only 1: rewrite IHv; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40	40.023624	4236	1394
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	40	40.125438	31215	3022
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	40	0.046242	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40	40.106672	32029	7033
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.take_prf_irr	40	2.158167	569	199	0.0.0.1.0.3.0.0.0	synth with cache (only 1: induction p; only 1: intros n v le le'; only 1: auto; only 1: intros n v le le'; only 1: destruct v; only 1: now subst; only 1: simpl; only 1: apply f_equal; only 1: apply IHp).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.uncons_cons	40	0.016205	6	2	0.4	synth with cache (only 1: intros m w le; only 1: now constructor).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.append_comm_cons	40	0.016998	2	2	0.0	synth with cache (only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_l	40	40.039999	7733	1218
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40	40.157725	21291	3405
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gauss	40	40.092662	14820	2617
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.compare	40	40.169251	69223	5198
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40	25.989676	9494	2328	1.7.2.7.1	synth with cache (only 1: intros n m p H; only 1: rewrite add_comm; only 1: symmetry; only 1: rewrite add_comm; only 1: now apply add_sub_assoc).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	40	40.082895	19017	8918
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.055137	6	6	0.0.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	40	40.035974	7875	3197
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolOrder.le_preorder	40	9.926112	25674	776	0.48.4.66.2	synth with cache (only 1: constructor; only 1: simpl_relation; only 1: destr_bool; only 1: hnf; only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.le_refl	40	40.333787	142573	3469
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolOrder.lt_strorder	40	0.203237	110	39	0.0.2.1.1.2	synth with cache (only 1: split; only 1: compute; only 1: destr_bool; only 1: intros b; only 1: destr_bool; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_simpl_nonpos	40	40.067848	16346	4474
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.prop_congr	40	0.014452	1	1	0	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.is_true_true	40	0.148510	125	10	16	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.not_false_is_true	40	0.009011	1	1	0	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.is_true_locked_true	40	0.012704	2	2	0.0	synth with cache (only 1: unlock; only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negbT	40	0.133552	4	3	0.1.0	synth with cache (only 1: intuition; only 1: subst; only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negbTE	40	0.008383	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negbF	40	0.009398	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negbFE	40	0.008126	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negbK	40	0.132312	573	32	3.29	synth with cache (only 1: intro H; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negbNE	40	0.005532	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.lt_ind_rel	40	40.110197	42235	3125
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter312_sqrt_correct	40	40.037646	9694	2864
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	40	0.045594	13	6	0.0.0.2	synth with cache (only 1: intros; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negb_inj	40	0.281807	645	42	0.32	synth with cache (only 1: intro H; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negbLR	40	0.021750	7	1	6	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negbRL	40	0.044119	24	4	8	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.In_nth_error	40	40.182373	43873	4756
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.contra	40	0.537772	349	49	6.11	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.contraL	40	0.011867	1	1	0	synth with cache (only 1: by case : b  => //; case : c ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.contraR	40	0.012254	1	1	0	synth with cache (only 1: by case : b  => //; case : c ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.contraLR	40	0.011766	1	1	0	synth with cache (only 1: by case : b  => //; case : c ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	40	40.037726	7756	2019
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.contraT	40	0.522491	223	33	5.12	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.wlog_neg	40	0.009188	1	1	0	synth with cache (only 1: by case : b  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40	40.050011	11622	2186
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.contraFT	40	0.657417	146	15	2.14	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	40	40.056207	15831	2793
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.contraFN	40	0.903902	209	19	3.16	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	40	1.513722	267	98	0.0.0.0.0.5.0.3	synth with cache (only 1: apply log2_unique; only 1: order_pos; only 1: nzsimpl; only 1: split; only 1: order; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: order_pos).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.contraTF	40	0.660734	146	15	2.14	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	40	0.734518	140	54	0.0.0.1.0.4	synth with cache (only 1: apply log2_unique' with 0; only 1: apply lt_le_incl, lt_0_1; only 1: split; only 1: order_pos; only 1: order_pos; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	40	7.547086	3030	835	0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1.0.0.1.0	synth with cache (only 1: case compare_spec; only 1: intro EQ; only 1: split; only 1: easy; only 1: intro H; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity; only 1: intro H; only 1: split; only 1: easy; only 1: intro EQ; only 1: reflexivity || destruct H; only 1: intro H; only 1: split; only 1: easy; only 1: intro EQ; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.contraNF	40	0.778447	165	16	2.15	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.double_le_mono	40	15.043069	4553	1341	0.0.0.0.4.4.0.5.0	synth with cache (only 1: unfold min, le; only 1: destruct n, m; only 1: auto; only 1: apply iff_refl; only 1: apply iff_refl; only 1: destruct compare; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: easy || now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.mod_pos_bound	40	40.232205	19310	3214
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	40	40.054301	14794	4476
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	40	40.073599	21509	6068
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	40	0.317959	98	58	0.0.0.0.2.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: order; only 1: nzsimpl; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_double_lt_mono	40	1.399499	323	93	0.0.0.0.0.0.0.0.5	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_double_le_mono	40	0.278324	54	31	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40	0.470772	156	68	1.0.0.3.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with 0; only 1: order; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.compare_0_r	40	0.621580	315	47	5.15	synth with cache (only 1: inversion 1; only 1: false_hyp H nlt_0_r).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pow_0_r	40	0.020120	3	2	0.1	synth with cache (only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.contraFF	40	4.672694	3970	300	0.1.30.14	synth with cache (only 1: Bool.destr_bool; only 1: reflexivity || destruct H; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	40	9.858045	6987	1251	0.0.5.0.0.1.1.10.4	synth with cache (only 1: cases ltac:(n); only 1: apply le_ngt; only 1: rewrite pred_0; only 1: apply le_ngt; only 1: order; only 1: intro; only 1: nzsimpl; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	40	5.422171	1340	646	0.0.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: easy; only 1: intro LT; only 1: contradict ltac:(H); only 1: intro EQ; only 1: contradict ltac:(LT); only 1: rewrite EQ; only 1: apply irreflexivity; only 1: intro H; only 1: split; only 1: easy; only 1: intro LT; only 1: contradict ltac:(LT); only 1: rewrite H; only 1: apply irreflexivity; only 1: intro H; only 1: split; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40	40.078949	24376	4181
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	40	0.037132	7	6	1.0.0.0.0.0	synth with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intro n; only 1: intro H; only 1: now rewrite pred_succ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	40	40.065406	14525	3181
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_vs_elt_inv	40	40.173151	16717	3349
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40	40.030229	8193	1580
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	40	2.119074	725	244	5.4.0.0.0.0.0	synth with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros n IH; only 1: rewrite pred_succ; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	40	40.035950	9575	1458
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40	40.152866	22517	2124
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40	40.051924	10416	4896
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Z_R_minus	40	40.051336	13549	2868
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_le_0_compat	40	40.040351	13820	1544
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40	5.490266	1468	659	0.0.0.1.0.0.0.0.0.0.1.0.1.1.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: easy; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	40	40.076088	19649	3869
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	40	2.810429	486	169	0.0.0.0.1.4.1	synth with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40	40.022859	4473	1143
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40	40.046781	12311	2377
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_NoDupA	40	40.073502	21867	4022
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	40	40.061984	17821	3640
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul	40	40.068715	21714	2696
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	40	0.160051	6	6	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_1	40	40.056108	16015	3112
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	40	8.813024	4568	1081	3.0.0.0.0.3.1.1.0.0.0.6	synth with cache (only 1: cases ltac:(n); only 1: intros; only 1: rewrite pred_0; only 1: assumption; only 1: intro p; only 1: intros; only 1: elim H using le_ind; only 1: solve_proper; only 1: rewrite pred_succ; only 1: now apply le_le_succ_r; only 1: intros k H1 H2; only 1: now apply le_le_succ_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	40	0.709958	69	32	0.0.0.0.3.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40	5.808298	1427	623	2.0.0.0.1.1.0.1.0.1.1.1.0.1	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	40	3.908668	154	71	0.0.0.0.0.2.0	synth with cache (only 1: intros n m; only 1: nzsimpl; only 1: rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: now rewrite le_succ_l; only 1: order').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	40	40.142128	43366	5578
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40	40.225060	85327	11402
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	40	40.042482	12033	2212
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	40	40.128471	41420	5279
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Nat2Pos.id_max	40	40.162217	29160	3572
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	40	40.153303	11218	2628
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40	40.046058	11333	3558
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40	4.437059	770	255	0.0.0.0.4.0.3.0	synth with cache (only 1: intros n m p; only 1: intro; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.exists_2	40	40.049356	14851	2824
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	40	40.068578	19583	3985
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	40	11.786021	2280	619	0.0.0.0.0.0.4.6	synth with cache (only 1: intros n m H; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	40	40.112068	33991	8179
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.peano_case	40	40.252800	44299	5532
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40	40.048606	10401	2182
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	40	0.454836	164	59	0.0.0.0.2.0.1.0	synth with cache (only 1: intros; only 1: apply imp_iff_compat_r; only 1: split; only 1: intros; only 1: apply pred_wd in H; only 1: now do 2 rewrite pred_succ in H; only 1: symmetry; only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.map2_2	40	40.289604	24010	2709
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.rb_maxdepth	40	40.044258	12301	3305
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	40	40.082955	23156	4426
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	0.621568	187	65	0.0.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	40	40.037896	8071	2010
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	40	40.026934	6162	1958
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	40	0.063586	7	5	0.0.0.2.0	synth with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	40	0.028092	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	40	40.063094	15911	3961
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40	5.267713	1287	521	0.2.0.0.0.0.2.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: rewrite min_r; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite max_l by trivial; only 1: rewrite min_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.GenericMinMax.max_l	40	40.204045	77302	6283
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.splitat_append	40	40.135010	23946	3107	1.3.3.1.0.7.17	synth with cache (only 1: intros n1 le_mn1; only 1: induction v; only 1: now simpl; only 1: simpl; only 1: intuition; only 1: rewrite IHv; only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40	40.063795	9441	3078
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_assoc	40	40.068910	15566	2831
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	40	4.914969	1677	462	0.0.1.1.0.1.15	synth with cache (only 1: intros n m; only 1: apply Private_NZDiv.div_unique with 0; only 1: split; only 1: now try split; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: now try split).
coq-tactician-stdlib.8.12.dev	Coq.Structures.Equalities.UpdateEq.eq_equiv	40	1.101134	2138	209	0.7.18.0.0.23	synth with cache (only 1: constructor; only 1: simpl_relation; only 1: auto with relations; only 1: intros x' x'' Hx' Hx''; only 1: intros; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_mul_split	40	40.126454	14311	3341
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	40	40.091085	29997	3787
coq-tactician-stdlib.8.12.dev	Coq.Setoids.Setoid.Seq_refl	40	0.009179	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Setoids.Setoid.Seq_sym	40	0.013261	2	2	0.0	synth with cache (only 1: unfold Setoid_Theory in s; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Setoids.Setoid.Seq_trans	40	0.060470	11	9	2.0.0.0.0.0	synth with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: now transitivity y).
coq-tactician-stdlib.8.12.dev	Coq.Setoids.Setoid.gen_st	40	0.013238	5	1	4	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.12.dev	Coq.Structures.Orders.Compare2EqBool.eqb_eq	40	40.147987	47533	11680
coq-tactician-stdlib.8.12.dev	Coq.Structures.Orders.OT_to_Full.le_lteq	40	0.106085	38	12	6	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	40	40.047327	13229	2742
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	40	40.097929	133961	6129	4.57.3.6.0	synth with cache (only 1: Bool.destr_bool; only 1: compute; only 1: intro Hxz; only 1: elim (CRelationClasses.StrictOrder_Irreflexive x); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.eq_sym	40	0.021161	19	3	6	synth with cache (only 1: now symmetry).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40	40.065470	15119	5368
coq-tactician-stdlib.8.12.dev	Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	1.418494	1160	235	2.1.5.8	synth with cache (only 1: intros; only 1: transitivity y; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt2	40	40.047447	15705	1274
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_error_None	40	40.130299	17825	4156
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40	40.118859	10237	2815
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40	40.055539	11781	2155
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40	40.052659	13464	2357
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	40	40.055804	14617	5659
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.mod_neg_bound	40	40.081322	13717	4736
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	10.973590	8051	987	0.0.0.15.14.2	synth with cache (only 1: nzinduct n; only 1: apply mul_0_l; only 1: unfold lcm; only 1: intros; only 1: nzsimpl; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	40.069638	19496	5244
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_r	40	0.048923	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pow_succ_r	40	40.123426	15353	1338
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_l	40	1.366823	304	124	0.0.0.0.0.3.1.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists n; only 1: now nzsimpl'; only 1: exists 1; only 1: now nzsimpl'; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	40	23.292102	5449	1135	0.0.0.0.9.1.7.0	synth with cache (only 1: intros n m p q; only 1: nzinduct p; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: nzsimpl; only 1: apply add_comm; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.755511	171	73	0.0.0.0.0.3.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists 1; only 1: now nzsimpl'; only 1: exists n; only 1: now nzsimpl'; only 1: trivial using divide_1_l, le_0_l, divide_refl).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.ifP	40	40.190346	13266	358
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	40	0.187351	7	6	0.0.0.0.1.0	synth with cache (only 1: intros n m p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	0.061770	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_diag	40	0.491072	154	70	0.0.0.0.0.3.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists 1; only 1: now nzsimpl'; only 1: exists 1; only 1: now nzsimpl'; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.ifPn	40	0.497164	297	20	0.23	synth with cache (only 1: intuition; only 1: by case  def_b: b ; constructor).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.ifT	40	0.012846	3	1	2	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.ifF	40	0.006523	1	1	0	synth with cache (only 1: by move ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.ifN	40	0.011795	3	1	2	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.if_same	40	0.007411	1	1	0	synth with cache (only 1: by case  def_b: b ; constructor).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.if_neg	40	0.006095	3	1	2	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.fun_if	40	0.006872	1	1	0	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.if_arg	40	0.006955	1	1	0	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.ifE	40	0.111102	38	4	10	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	40	40.086486	28374	4397
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	40	40.086252	24894	5383
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_vs_cons_inv	40	40.075993	23729	3989
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40	40.049285	2600	1072
coq-tactician-stdlib.8.12.dev	Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	0.715429	600	118	2.2.5.6	synth with cache (only 1: intros; only 1: transitivity y; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40	40.095783	31071	3196
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.Bezout_wd	40	40.105031	4250	824
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.lt_0_IZR	40	40.076386	25041	1978
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qinv_le_0_compat	40	40.052064	17320	2350
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40	40.067390	16716	4095
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	40	36.572495	13989	3218	0.0.3.1.2.3.6.1.0.2	synth with cache (only 1: intros n m; only 1: induct n; only 1: intro H; only 1: rewrite pred_0; only 1: order; only 1: intro n; only 1: intros _ H; only 1: rewrite pred_succ; only 1: apply le_succ_l; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	40	40.067178	18911	3105
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_equivlistA	40	40.052389	13327	3193
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pow_neg_r	40	11.402001	5152	856	25	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_sub	40	40.106308	37960	4476
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_2	40	40.043406	10896	3424
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_compat	40	40.096731	26805	4616
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	0.053380	15	8	4.0	synth with cache (only 1: apply compare_eq_iff; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	40	40.154546	55373	3520
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40	40.051729	11955	3785
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40	40.125076	42988	9079
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40	40.029010	8053	1296
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	40	40.123406	40874	5011
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Nat2Pos.inj	40	40.129043	20432	4089
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.sqrt_specif	40	40.085046	12226	3427
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	40	40.033061	7989	2359
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.sqrt_neg	40	0.019706	4	2	2.0	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.partition_1	40	40.052747	5997	1845
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	40	40.052586	14599	2075
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40	40.066274	18311	4050
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.CentralInduction.central_induction	40	40.077121	26702	1599
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.eq_dep_eq_positive	40	40.206843	49641	4710
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Proper.eq_proper_proxy	40	0.009975	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Proper.reflexive_proper_proxy	40	0.012086	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Proper.proper_proper_proxy	40	0.008530	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.rb_mindepth	40	40.059621	17697	3983
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Relations.pointwise_pointwise	40	1.751972	1126	253	2.0.6.0.2.1.1.3	synth with cache (only 1: hnf; only 1: split; only 1: red; only 1: intro z; only 1: firstorder; only 1: destruct H; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Relations.subrelation_id_proper	40	0.009548	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Relations.subrelation_respectful	40	0.017969	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Relations.subrelation_refl	40	0.028547	4	3	1.0.0	synth with cache (only 1: hnf; only 1: intros; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Relations.subrelation_proper	40	0.015083	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	40	40.092013	22701	2745
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Relations.proper_subrelation_proper	40	1.106760	301	79	3.4.4	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Relations.pointwise_subrelation	40	0.021496	2	2	0.0	synth with cache (only 1: unfold subrelation in *; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	40	15.926285	9027	2195	1.1.9.10	synth with cache (only 1: intros n1 m1 H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	40	40.027067	6600	1927
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Relations.forall_subrelation	40	0.129044	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.iff_impl_subrelation	40	0.014169	5	3	2.0.0	synth with cache (only 1: hnf; only 1: intros A B [H1 H2]; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0.014181	4	3	1.0.0	synth with cache (only 1: hnf; only 1: intros A B [H1 H2]; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40	40.069153	19437	3146
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.GenericMinMax.max_r	40	40.087120	21700	7343
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.append_splitat	40	40.120509	24589	3964
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	40	40.075113	15572	4340
coq-tactician-stdlib.8.12.dev	Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40	40.156623	55665	4384
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	40	40.073096	21634	4965
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	1.512186	163	107	2.0.3.0	synth with cache (only 1: intros; only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.Orders.OTF_LtIsTotal.lt_total	40	40.100123	28570	10724
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	40	0.304493	44	26	0.4.0.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40	40.080013	24387	3739
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40	40.089590	29180	3230
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.cons_Cmp	40	40.075456	24925	2850
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.le_antisym	40	40.138029	43832	7609
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.neq_sym	40	0.007741	1	1	0	synth with cache (only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_neg	40	40.051239	13195	2864
coq-tactician-stdlib.8.12.dev	Coq.Classes.Equivalence.Respecting.respecting_equiv_obligation_3	40	40.058351	13706	5175
coq-tactician-stdlib.8.12.dev	Coq.Classes.Equivalence.pointwise_reflexive	40	0.010823	1	1	0	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Equivalence.pointwise_symmetric	40	0.009286	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Equivalence.pointwise_transitive	40	0.010234	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_error_Some	40	40.102557	14261	5535
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40	40.037352	8196	2261
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	40	0.016806	2	2	0.0	synth with cache (only 1: intros; only 1: apply testbit_even_succ, le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_eq0	40	40.012321	3233	650
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	40	40.049334	10385	2407
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_end_Cmp	40	4.714750	7537	460	0.4.2.5.6.14.14	synth with cache (only 1: red; only 1: red; only 1: intros l; only 1: destruct l; only 1: constructor; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40	40.051596	14203	2358
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	40	40.049494	14943	2721
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.quotrem_eq	40	40.116574	27656	6007
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	40	40.041467	9344	3941
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	40	0.473497	225	70	5.0.2.0	synth with cache (only 1: intros; only 1: apply div_small; only 1: intuition; only 1: order').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	40	0.066077	20	15	0.0.0.2.0	synth with cache (only 1: intros; only 1: apply mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_eq_0	40	40.067303	11663	3613
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectCore.introNTF	40	40.199892	14318	514
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectCore.introTF	40	0.011522	1	1	0	synth with cache (only 1: by case c; case Hb).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectCore.elimNTF	40	0.012243	1	1	0	synth with cache (only 1: by case c; case Hb).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectCore.elimTF	40	0.007402	1	1	0	synth with cache (only 1: by move <-; case Hb).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.PairInduction.pair_induction	40	40.071313	21508	5112
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_vs_cons_cons_inv	40	40.174408	22749	3634
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40	40.092899	18818	3652
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.even_pow	40	40.071146	16721	7506
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_eq_r	40	1.154094	456	144	0.0.3.0.2.2	synth with cache (only 1: intros z n H; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: trivial; only 1: apply divide_refl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CEquivalence.Respecting.respecting_equiv_obligation_3	40	40.054989	14440	3851
coq-tactician-stdlib.8.12.dev	Coq.Classes.CEquivalence.pointwise_reflexive	40	0.017699	3	1	2	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CEquivalence.pointwise_symmetric	40	0.008077	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CEquivalence.pointwise_transitive	40	0.015188	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CEquivalence.pointwise_equivalence	40	0.272600	13	4	7	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Proper.eq_proper_proxy	40	0.005612	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Proper.reflexive_proper_proxy	40	0.007537	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Proper.proper_proper_proxy	40	0.004976	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	40	40.212038	22871	4547
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.bezout_1_gcd	40	40.074242	21620	4183
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.lt_IZR	40	40.079655	23168	4595
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_shift_div_l	40	40.050380	13976	3996
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero	40	0.910562	891	84	19.2	synth with cache (only 1: intro X; only 1: auto  6 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero_right	40	0.014510	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40	16.593547	3969	1798	0.0.0.0.0.0.6.1.0	synth with cache (only 1: intros n m H1 H2; only 1: apply (mul_lt_mono_neg_r m) in H1; only 1: apply lt_le_pred in H2; only 1: rewrite mul_1_l in H1; only 1: setoid_replace (P 0) with (-1) in H2; only 1: now apply lt_le_trans with m; only 1: apply eq_opp_r; only 1: now rewrite one_succ, opp_pred, opp_0; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero'	40	0.168241	30	6	0.7	synth with cache (only 1: unfold Add at 1; only 1: auto  6 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.less_than_empty	40	0.014022	1	1	0	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_commutative	40	0.015215	1	1	0	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Relations.pointwise_pointwise	40	2.361430	2159	352	1.3.1.4.5.7	synth with cache (only 1: split; only 1: red; only 1: destruct 2; only 1: firstorder; only 1: intros h1 h2; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Relations.subrelation_id_proper	40	0.005326	3	1	2	synth with cache (only 1: apply H).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Relations.subrelation_respectful	40	0.009576	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40	40.086434	20502	5026
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Relations.subrelation_refl	40	0.131153	4	3	1.0.0	synth with cache (only 1: hnf; only 1: intros x y H'; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Equivalence.pointwise_equivalence	40	16.673815	2123	251	0.0.27.0.0.2	synth with cache (only 1: split; only 1: firstorder; only 1: firstorder; only 1: intros x; only 1: intros; only 1: now transitivity y).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Relations.subrelation_proper	40	0.124317	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Relations.proper_subrelation_proper_arrow	40	0.016611	1	1	0	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Relations.pointwise_subrelation	40	0.006829	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Relations.forall_subrelation	40	0.043420	15	5	3.2	synth with cache (only 1: intro; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.iff_impl_subrelation	40	0.015395	5	3	2.0.0	synth with cache (only 1: hnf; only 1: intros A B [H1 H2]; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0.005686	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	0.009904	2	2	0.0	synth with cache (only 1: reduce; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0.007720	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.unitE	40	0.475898	822	74	3.9.21	synth with cache (only 1: intro H; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.ExtensionalEquality.frefl	40	0.010047	2	1	1	synth with cache (only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.ExtensionalEquality.fsym	40	0.179812	63	8	0.11	synth with cache (only 1: intros; only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40	40.064225	16304	3700
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_ltA	40	40.049563	11167	4782
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.square_spec	40	40.152301	28162	2804
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_pred	40	40.072265	26862	1598
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_Partition	40	40.091366	31485	4150
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_associative	40	5.182575	2746	345	22.7	synth with cache (only 1: intros a b; only 1: auto  10 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_idempotent	40	0.012006	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_absorbs	40	0.027428	5	2	0.3	synth with cache (only 1: intros y H'1; only 1: auto  7 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	40	40.068141	14988	6484
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	40	40.116723	41393	1992
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40	40.065165	16047	5355
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40	40.273440	119793	8476
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	40	40.078485	19348	1653
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40	40.029976	7732	1788
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Nat2Pos.inj_iff	40	40.062004	18850	3611
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Nat2Pos.inj_succ	40	0.029482	4	3	0.1.0	synth with cache (only 1: destruct n; only 1: now destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.log2_iter_spec	40	40.071631	17473	3651
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	40	40.106179	19572	4845
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	2.074790	359	69	8.0.0.1	synth with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.partition_2	40	40.036037	8732	3295
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	40	40.034118	8520	1641
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	40	40.050796	11057	4511
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.PeanoViewUnique	40	40.226312	50182	5035
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.maxdepth_upperbound	40	40.043409	9102	4835
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.048336	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	40	40.079612	25483	2221
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	40	40.025515	6423	1755
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	40	40.087811	19746	4092
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.respectful_per_obligation_2	40	40.043167	7254	398
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	40	40.041601	9912	2657
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	40	1.301293	553	188	0.0.0.1.0.0.0.3	synth with cache (only 1: intro n; only 1: cases ltac:(m); only 1: rewrite pred_0; only 1: trivial; only 1: intros m IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.GenericMinMax.min_l	40	40.103407	26679	10374
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.GenericMinMax.min_r	40	0.241468	66	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold min, gmin; only 1: case compare_spec; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt x y); only 1: auto; only 1: auto; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.Forall_impl	40	40.180925	48361	4080
coq-tactician-stdlib.8.12.dev	Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	40	40.117834	44995	2795
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	40	40.052874	13683	3216
coq-tactician-stdlib.8.12.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_le	40	40.163851	59281	5955
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	40	40.076518	19812	4121
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	40	40.049487	12560	2444
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40	40.064401	16490	5996
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.trans	40	40.142170	50383	3865
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_error_split	40	40.113978	17738	4034
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	40	40.103777	6987	1411
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_is_even	40	40.049508	11817	1227
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	40	40.072330	20267	4055
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40	40.045526	12751	2242
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40	13.346599	31440	1292	65.16.0	synth with cache (only 1: unfold singleton; only 1: red; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	40	40.058876	15075	3643
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40	40.031632	9137	1913
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.quot_rem'	40	40.093662	31086	2005
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.quot_rem	40	0.130074	15	15	0.0.1.0.0.0.0	synth with cache (only 1: intros Hb; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: now destruct quotrem).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	40	40.054273	14887	3139
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectCore.equivPif	40	40.188131	22043	799
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.TwoDimensionalInduction.two_dim_induction	40	40.137530	50373	4103
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation	40	40.063060	14877	4348
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	40	40.057652	14492	3839
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_iff	40	40.060149	9787	3876
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40	40.089337	10961	2435
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	40	17.831965	9888	2014	7.0.1.0.0.0.0.12	synth with cache (only 1: intro LS'; only 1: cases ltac:(m); only 1: rewrite pred_0; only 1: intro H; only 1: assumption; only 1: intros m IH; only 1: rewrite pred_succ in IH; only 1: now apply le_le_succ_r).
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Well_founded.Fix_F_eq	40	0.026591	2	2	0.0	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.DoubleInduction.double_induction	40	2.087788	1338	273	7.0.0.0.5.0.0	synth with cache (only 1: intros H1 H2 H3; only 1: induct ltac:(n); only 1: exact H1; only 1: intros n IH; only 1: induct ltac:(m); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_bezout	40	40.069501	19935	3782
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectCore.xorPif	40	3.147895	1231	81	0.0.38	synth with cache (only 1: intuition; only 1: by case Hb; auto; only 1: by case Hb; auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.eq_IZR_R0	40	40.065377	18294	3000
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_shift_inv_l	40	40.055595	19172	2331
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40	40.049906	11192	3008
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40	40.116051	32204	5456
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.ExtensionalEquality.ftrans	40	38.670611	159956	5152	4.48.81.13	synth with cache (only 1: intros; only 1: intro z; only 1: rewrite -> H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.ExtensionalEquality.rrefl	40	0.007318	4	2	2.0	synth with cache (only 1: intros H ?; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.respectful_per_obligation_2	40	40.035085	6708	702
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.flip_proper_obligation_1	40	0.234982	114	15	15	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.trans_contra_co_type_morphism_obligation_1	40	0.059321	8	1	7	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.trans_contra_inv_impl_type_morphism_obligation_1	40	0.199841	49	26	6	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	40	40.067992	20043	2935
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.trans_co_impl_type_morphism_obligation_1	40	1.072640	205	179	6	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_compat	40	40.078804	26065	3167
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.size_log2	40	40.166520	26132	2916
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_compare	40	39.925747	24497	5432	3.0.0.0.2.0.0.0.0.14.0.0.0.0.0.0.0.0.1.5.0	synth with cache (only 1: intros Hn Hm; only 1: destruct n, m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: now destruct (Pos2Nat.is_succ p) as (n, ->); only 1: simpl; only 1: now destruct (Pos2Nat.is_succ p) as (n, ->); only 1: simpl; only 1: now destruct (Pos2Nat.is_succ p) as (n, ->); only 1: now destruct Hn || now destruct Hm || clear; only 1: symmetry; only 1: simpl; only 1: apply Pos2Nat.inj_compare; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: now destruct Hn || now destruct Hm || clear; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: rewrite <- ?Pos.compare_antisym, ?Z.pos_sub_spec; only 1: now destruct Hn || now destruct Hm || clear).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_le	40	0.023352	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le; only 1: now rewrite nat_compare_le, Z2Nat.inj_compare).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.019143	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.trans_sym_co_inv_impl_type_morphism_obligation_1	40	1.147663	144	132	3.1.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_In	40	40.066421	19650	2449
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Couple_as_union	40	40.086542	27504	1248
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.trans_sym_contra_arrow_morphism_obligation_1	40	1.126858	149	140	6	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.per_partial_app_type_morphism_obligation_1	40	0.119443	6	1	5	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	40	40.072825	23391	2478
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	40	40.155626	54401	2277
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.trans_co_eq_inv_arrow_morphism_obligation_1	40	0.935138	321	165	9	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	40	40.074338	15956	4723
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	40	40.032471	7504	2179
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Nat2Pos.inj_pred	40	40.079775	24894	5131
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	40	40.042137	10487	2069
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.log2_spec	40	40.109125	18679	3641
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.log2_nonpos	40	0.042158	16	5	0.1	synth with cache (only 1: inversion 1; only 1: now apply pred_0).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_sym	40	4.947170	3585	471	13.12	synth with cache (only 1: intros z n H; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40	40.129092	41990	4853
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	3.795846	528	317	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_sym	40	0.612800	76	19	0.2	synth with cache (only 1: compute; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Unrestricted_minimization_entails_excluded_middle.unrestricted_minimization_entails_excluded_middle	40	40.228996	57139	4777
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Well_founded.Fix_F_inv	40	14.584769	8124	1251	0.6.7.7.2.0	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: intros; only 1: rewrite <- Wf.Fix_F_eq; only 1: induction (Rwf x); only 1: rewrite <- Wf.Fix_F_eq; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	40	40.034408	8002	1861
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40	40.056796	14464	3433
coq-tactician-stdlib.8.12.dev	Coq.Program.Subset.subset_eq	40	40.153403	57060	8268
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	40	0.196242	25	15	0.0.0.1.0	synth with cache (only 1: intros; only 1: apply div_add; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	40	0.561460	111	40	0.2.4	synth with cache (only 1: intros a b c; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.peano_equiv	40	40.097819	29387	5926
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_1_l	40	0.013737	2	1	1	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_1_r	40	0.493271	180	71	0.0.0.2.0.1.0.5	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	2.216826	744	222	0.3.3.2.0	synth with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	40	0.135414	20	10	0.0.0.3.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Program.Subset.match_eq_rewrite	40	3.854386	6973	698	2.11.1.3.4.17	synth with cache (only 1: intro; only 1: intro; only 1: intros H x0; only 1: intros [x y]; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	40	19.859122	9804	2426	0.0.0.5.0.1.0.10.1	synth with cache (only 1: intros n m H; only 1: apply le_ind with (4 := H); only 1: solve_proper; only 1: intuition order; only 1: intros k H1 H2; only 1: nzsimpl; only 1: apply le_trans with n; only 1: apply le_pred_l; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	40	40.060524	17876	3329
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	40	40.027259	7016	1674
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.complement_proper_obligation_1	40	40.035189	7623	1545
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.flip_proper_obligation_1	40	0.016186	8	1	7	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	40	40.037368	8253	1706
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.trans_contra_co_morphism_obligation_1	40	0.644647	330	74	16	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.trans_contra_inv_impl_morphism_obligation_1	40	0.364954	158	77	9	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	40	40.222767	91753	7430
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	40	3.887336	714	239	0.0.0.1.0.1.2.1.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.Forall_forall	40	40.134454	23862	7880
coq-tactician-stdlib.8.12.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40	40.113833	18212	1515
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	40	40.040305	9882	2734
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	1.875076	778	275	0.0.0.0.0.0.0.0.0.0.1.0.1	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).
coq-tactician-stdlib.8.12.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_total	40	40.097064	34476	3296
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	40	40.041710	10195	2260
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	40	40.059528	9613	3235
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Prop.well_founded_morphism	40	40.071687	18508	6244
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	40	2.955205	561	191	0.0.0.1.0.2.3.0	synth with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	40	0.382671	64	31	1.3.0.0.0	synth with cache (only 1: intros; only 1: destruct (mod_bound_pos a n); only 1: auto'; only 1: auto'; only 1: now rewrite Private_NZDiv.mod_small_iff).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.eq_neq	40	40.058026	12137	2177
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrsetoid.compat_Reflexive	40	0.011264	2	2	0.0	synth with cache (only 1: intros; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.neq_eq	40	0.013287	1	1	0	synth with cache (only 1: eauto using eq_trans, eq_sym).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	40	0.206764	50	29	0.0.0.3.0	synth with cache (only 1: intros; only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	0.045503	6	5	0.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: apply neq_0_lt_0; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_error_app1	40	38.463610	13909	3297	1.2.0.0.2.0.1.1.3.9.1	synth with cache (only 1: revert l; only 1: induction n; only 1: induction l; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: eauto; only 1: intros [| a l] H; only 1: now f_equal; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	40	3.540457	22127	203
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	40	0.252600	51	20	0.0.0.0.2.0.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: apply neq_0_lt_0; only 1: auto'; only 1: apply neq_0_lt_0; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.JMeq_eq_refl	40	0.006322	3	1	2	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	40	0.374248	64	26	0.0.0.4.0	synth with cache (only 1: intros; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	40	0.050662	7	5	0.0.0.2.0	synth with cache (only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: apply neq_0_lt_0; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.UIP_refl_refl	40	0.730175	585	105	24	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.inj_pairT2_refl	40	0.007013	6	1	5	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.solution_left	40	0.296149	124	32	1.1.4.3	synth with cache (only 1: intro eq_rect_eq; only 1: intros; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.solution_right	40	0.016436	5	3	2.0.0	synth with cache (only 1: intros; only 1: subst; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.deletion	40	0.011917	4	2	1.1	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	40	1.070623	206	76	0.0.0.0.3.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: apply neq_0_lt_0; only 1: auto'; only 1: apply neq_0_lt_0; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.simplification_heq	40	0.249370	151	32	0.2.4.2	synth with cache (only 1: intros H H'; only 1: subst; only 1: apply H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.simplification_existT2	40	0.271315	103	25	0.0.0.5.1	synth with cache (only 1: intros H J; only 1: apply H; only 1: apply eq_dep_eq; only 1: apply eq_sigT_eq_dep; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	40	40.116292	14525	2988
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	40	40.067417	17408	3887
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.log2_phi_bounded	40	40.052120	9557	2471
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40	40.134526	49325	4562
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_cont_Cmp	40	40.076088	24799	3212
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	40	40.071781	18418	4249
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	0.927077	217	90	0.2.1.1.0.1	synth with cache (only 1: intros H; only 1: destruct t; only 1: invrb; only 1: invrb; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40	40.028801	8156	1754
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.rem_bound_pos	40	40.108963	19477	4674
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	40	40.043543	10347	3586
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_error_app2	40	8.020019	2139	794	0.0.0.1.0.3.1.1.0.0.4.0	synth with cache (only 1: revert l; only 1: revert n; only 1: induction n; only 1: intros [| a l] H; only 1: auto; only 1: simpl; only 1: now auto with arith; only 1: intros [| a l] H; only 1: auto; only 1: simpl in *; only 1: apply IHn; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	40	4.756077	993	396	0.1.0.0.0.0.0.0.1.0.0	synth with cache (only 1: intros n m p H1 H2; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_neg_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: apply eq_le_incl; only 1: rewrite H1; only 1: now do 2 rewrite mul_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation_bis	40	40.051354	13914	3867
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40	40.054374	13651	1954
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	40	40.061534	10933	2856
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.trans_co_impl_morphism_obligation_1	40	17.927713	5089	4447	4.3.2	synth with cache (only 1: transitivity x0; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectNegCore.introTFn	40	40.133732	15860	611
coq-tactician-stdlib.8.12.dev	Coq.Relations.Relations.inverse_image_of_equivalence	40	40.192439	70882	10564
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l	40	40.044741	10920	3728
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.eq_IZR	40	40.045679	9242	4610
coq-tactician-stdlib.8.12.dev	Coq.Relations.Relations.inverse_image_of_eq	40	0.821241	626	199	0.2.0.0.5.1.0.1	synth with cache (only 1: intros; only 1: split; only 1: split; only 1: destruct 1; only 1: destruct 1; only 1: trivial; only 1: red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_shift_div_r	40	40.051512	14560	3816
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40	40.033416	7716	2156
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	40	40.074440	16347	6518
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	40	0.055034	7	6	0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: auto; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.146284	28	22	0.0.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Composition.eq_comp	40	40.343858	132764	4222
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40	40.045897	12367	2480
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_eqA	40	40.070685	25455	1732
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.size_gt	40	40.150934	22863	2052
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_min	40	40.081977	24708	4531
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_union	40	40.088309	27404	4056
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_error_nth	40	13.118763	6195	1532	5.1.0.6.0.0.0.0.0.0.4	synth with cache (only 1: induction l; only 1: destruct n; only 1: simpl; only 1: firstorder  discriminate; only 1: simpl; only 1: firstorder  discriminate; only 1: intros [| n]; only 1: injection 1; only 1: auto; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40	40.320564	132467	3865
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	40	0.038932	6	3	1.0.2	synth with cache (only 1: red; only 1: compute; only 1: iorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.trans_sym_co_inv_impl_morphism_obligation_1	40	9.326461	2566	2235	10	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	40	0.192607	97	30	4.6	synth with cache (only 1: repeat red; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.PER_type_morphism_obligation_1	40	40.050694	7144	6517
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.symmetric_equiv_flip	40	0.016778	4	2	2.0	synth with cache (only 1: hnf; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40	40.062589	11184	2589
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.compose_proper_obligation_1	40	0.240622	63	6	12	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.reflexive_eq_dom_reflexive	40	0.016198	1	1	0	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40	40.035733	8021	2859
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple	40	3.361347	1521	663	1.1.1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Nat2Pos.inj_add	40	40.157166	19505	3298
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	40	40.034908	8608	1701
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.gcd_divide	40	40.160275	19829	4054
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	40	40.105683	33853	3180
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	40	40.201392	76793	1259
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Empty	40	40.046528	14071	2334
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Well_founded.Fix_eq	40	40.136487	46023	2068
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Excluded_middle_entails_unrestricted_minimization.excluded_middle_entails_unrestricted_minimization	40	40.183554	53733	6094
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Well_founded.fix_sub_eq	40	0.179945	6	6	0.0.0.0.0.0	synth with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	40	40.056382	14691	3909
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	40	1.243916	355	137	0.0.1.3.2.0.0	synth with cache (only 1: intros n1 n2; only 1: split; only 1: intros; only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H; only 1: intros; only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_xO_r	40	39.455682	13367	4411	0.0.0.1.1.2.0.0.9.2.5	synth with cache (only 1: revert q; only 1: intros H; only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: f_equal; only 1: now f_equal; only 1: simpl; only 1: f_equal; only 1: now f_equal; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40	40.055742	14863	3560
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	40	40.072239	19550	3755
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	40	40.025169	6461	1658
coq-tactician-stdlib.8.12.dev	Coq.Lists.StreamMemo.MemoFunction.memo_get_correct	40	40.168209	59965	6602
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40	40.039309	4882	1836
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.Forall_nth_order	40	40.065852	19812	5171
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_error_nth'	40	15.535902	5529	1847	0.0.0.0.1.0.4.0.0.1.7.0.0.0.0	synth with cache (only 1: induction l; only 1: destruct n; only 1: simpl; only 1: intros; only 1: solve [ inversion H ]; only 1: simpl; only 1: intros; only 1: now auto with arith; only 1: intros [| n]; only 1: simpl; only 1: now auto with arith; only 1: simpl; only 1: intros; only 1: apply IHl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40	40.042622	9591	3846
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40	3.555126	1738	839	0.0.0.1.0.0.0.0.0.2	synth with cache (only 1: generalize Rstar_contains_Rplus; only 1: intro T; only 1: red in T; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: intros x0 H'0; only 1: intros x1 y0 H'1; only 1: exists y0; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	40	40.090255	21813	2710
coq-tactician-stdlib.8.12.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_trans	40	40.097852	33182	4187
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	40	40.040470	7054	4722
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40	40.108973	12784	2967
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	16.035797	12113	1918	34	synth with cache (only 1: iorder).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0.013460	1	1	0	synth with cache (only 1: iorder).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40	40.106306	26701	8537
coq-tactician-stdlib.8.12.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40	40.080441	21884	4585
coq-tactician-stdlib.8.12.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	0.048477	19	12	3.0.0.0	synth with cache (only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple_Singleton	40	15.652634	6296	2539	0.0.0.1.1.1.1.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: auto with sets; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	40	40.045064	11548	2567
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_commutative	40	2.069579	1086	303	0.0.1.0.0.0.1.0.0.1.8	synth with cache (only 1: intros y H'1; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	40	0.516275	58	23	0.0.2.0.0.0.0	synth with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: now apply div_mod).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	40	40.057724	11262	2360
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.simplification_existT1	40	40.359354	150192	4679
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.simplification_K	40	0.016249	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	40	40.055425	11915	5527
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	0.897288	160	84	1.0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto'; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_Cmp	40	40.096795	34422	1807
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.le_refl	40	0.487372	500	65	16	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	1.334492	264	49	0.0.3.7.2	synth with cache (only 1: apply sqrt_unique; only 1: nzsimpl; only 1: split; only 1: order; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	40	40.064453	15497	3015
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.lbal_rb	40	40.031752	8957	1222
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.last_last	40	8.088810	7492	999	0.1.0.0.21.0.0.0.7	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: destruct l; only 1: simpl in *; only 1: intros; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lor	40	41.715239	3412	448
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.rem_opp_l'	40	40.119758	40891	3001
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	40	2.996554	999	305	0.0.0.0.1.0.0.0.0.4	synth with cache (only 1: split; only 1: intros; only 1: exists (a / b); only 1: rewrite Private_NZDiv.div_exact; only 1: auto; only 1: order; only 1: intros (c, Hc); only 1: rewrite Hc, mul_comm; only 1: apply Private_NZDiv.mod_mul; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.rbal_rb	40	1.576974	284	120	1.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: case rbal_match; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40	40.067142	17865	3208
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40	4.918894	816	326	8.0.0.0.0.0.5	synth with cache (only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: apply mul_nonneg_nonneg; only 1: apply lt_le_incl, lt_0_2; only 1: apply lt_le_incl, lt_0_1; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	40	40.029846	8362	1896
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.rem_opp_r'	40	4.721942	2443	580	0.0.0.0.0.0.0.2.0.1.0.0.0.0.3.3.3.0.3	synth with cache (only 1: destruct b as [| b| b]; only 1: reflexivity; only 1: unfold rem; only 1: simpl; only 1: destruct a as [| a| a]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: induction a; only 1: trivial; only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup	40	40.074805	23511	3923
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40	40.091000	29014	3549
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_minimal	40	4.203632	7787	887	2.27.3	synth with cache (only 1: red; only 1: compute; only 1: destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_r	40	40.080894	8184	2736
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectNegCore.elimTFn	40	40.231649	30131	1456
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40	40.066177	11405	4207
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.not_0_IZR	40	40.041443	7559	3323
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_shift_inv_r	40	40.046869	14931	2450
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qinv_lt_0_compat	40	0.022106	4	4	0.0.0.0	synth with cache (only 1: intros [[| n| n] d] Ha; only 1: assumption; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.acc_A_B_lexprod	40	40.115134	40381	5205
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.rem_opp_l	40	4.721625	1342	741	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros _; only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_m1_mul_r	40	40.050371	10928	5055
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	40	40.085821	18184	5529
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Power_set_Inhabited	40	5.463842	25019	774	2.2.0.2.34.55	synth with cache (only 1: intro x; only 1: exists x; only 1: split; only 1: red; only 1: intros H'0 H'1; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.trans_sym_contra_impl_morphism_obligation_1	40	34.504166	7676	6795	14	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_an_order	40	0.261576	41	13	0.0.0.7	synth with cache (only 1: constructor; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_transitive	40	0.009216	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.all_tag	40	40.680813	288990	3009
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.all_tag2	40	0.017793	1	1	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Sig.svalP	40	0.005255	3	1	2	synth with cache (only 1: apply proj2_sig).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	40	40.041578	10578	2261
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.SortA_InfA_InA	40	40.042408	13753	1747
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.size_le	40	40.071281	19753	3345
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.rem_opp_r	40	4.411106	1854	616	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.3	synth with cache (only 1: intuition; only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: simpl; only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.In_InfA	40	0.211301	14	7	3.1.0.0	synth with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_max	40	40.079402	24028	4008
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_InfA	40	0.067874	8	6	0.0.1.0.1.0	synth with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intros; only 1: constructor; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Sig.s2valP	40	1.992224	11448	144
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Sig.s2valP'	40	0.007169	1	1	0	synth with cache (only 1: by case : u ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.all_sig	40	0.010539	1	1	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.all_sig2	40	0.019395	1	1	0	synth with cache (only 1: by case /all_tag =>f /all_pair []; exists f).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	40	24.002255	7918	2023	10.8.4.0	synth with cache (only 1: unfold lcm; only 1: intros n m; only 1: rewrite <- gcd_div_swap; only 1: apply abs_nonneg).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	40	40.058851	12871	5230
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.respectful_morphism	40	40.013716	3294	607
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.Reflexive_partial_app_morphism	40	0.012900	7	2	0.5	synth with cache (only 1: reduce; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.flip_respectful	40	0.033127	4	3	0.0.1	synth with cache (only 1: split; only 1: simpl_crelation; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.flip1	40	0.009673	3	2	1.0	synth with cache (only 1: reduce; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.flip2	40	0.004886	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.eq_subrelation	40	0.044977	14	5	3	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.reflexive_proper	40	0.007042	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	40	40.059967	17749	2801
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.proper_eq	40	0.005132	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.proper_proper	40	0.047075	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: reduce; only 1: split; only 1: intros; only 1: subst; only 1: firstorder; only 1: intros; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Normalize.proper_normalizes_proper	40	0.037294	12	2	4	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Normalize.flip_atom	40	0.006416	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.per_partial_app_morphism_obligation_1	40	7.675207	2215	1601	14	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Nat2Pos.inj_mul	40	40.134846	19642	3250
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Injections.can_pcan	40	4.781328	13844	749	3.31.35	synth with cache (only 1: intros Hfst Hsnd; only 1: rewrite -> Hfst; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40	40.068130	18793	4169
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.gcd_divide_l	40	40.113513	25971	4206
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.trans_co_eq_inv_impl_morphism_obligation_1	40	0.968012	428	233	4.4.0	synth with cache (only 1: transitivity y; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	40	40.069025	20203	2965
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.gcd_divide_r	40	0.012519	2	2	0.0	synth with cache (only 1: intros; only 1: apply gcd_divide).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Add	40	40.093560	28540	3327
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40	40.073572	20786	6133
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Example_of_undecidable_predicate_with_the_minimization_property.undecidable_predicate_with_the_minimization_property	40	40.249639	78754	4289
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Measure_well_founded.measure_wf	40	40.329797	116349	6816
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Fix_rects.F_unfold	40	0.034125	3	2	0.1	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40	40.059086	16165	3571
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	40	0.017015	2	2	0.0	synth with cache (only 1: intros n m; only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	40	0.042959	6	4	0.2.0.0	synth with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr; only 1: now rewrite add_assoc).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_xI_r	40	40.087137	14267	5230
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Fix_rects.Fix_F_sub_rect	40	2.477006	1321	202	0.7.2.3.9	synth with cache (only 1: intro x; only 1: induction (Rwf x); only 1: intros; only 1: rewrite <- Init.Wf.Fix_F_eq; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Fix_rects.eq_Fix_F_sub	40	0.528637	275	44	13.0	synth with cache (only 1: apply Fix_F_inv; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	40	40.060949	15223	5270
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	40	40.065660	20530	2904
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	3.951162	604	213	5.3.1.0	synth with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: now rewrite opp_involutive).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_3_facts.coherent_symmetric	40	35.834646	17867	7874	0.2.3.0.1.2.1.0.0.0	synth with cache (only 1: intros U R; only 1: red; only 1: intros x y H'; only 1: elim H'; only 1: intros z1 H'5; only 1: elim H'; only 1: intros H'8 H'10; only 1: elim H'5; only 1: exists z1; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Lists.StreamMemo.MemoFunction.imemo_get_correct	40	40.107318	31795	7564
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	40	0.340230	52	24	1.5.0	synth with cache (only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: now rewrite add_comm).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	40	0.024674	3	3	0.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: now rewrite opp_involutive).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	40	0.035998	5	4	0.1.0.0	synth with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: now rewrite add_comm).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	40	40.041594	6145	1827
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40	1.125360	218	76	6.1.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.Forall2_nth_order	40	40.161523	19367	4800
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	40	40.055394	14815	3903
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	40	4.271081	1498	331	0.0.15.0	synth with cache (only 1: intros n m p (q, Hq); only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: exists q; only 1: now rewrite mul_shuffle3, Hq).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.complement_inverse	40	0.012505	2	1	1	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	40	40.075604	25946	2402
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	40	40.049533	11587	2874
coq-tactician-stdlib.8.12.dev	Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40	40.284941	114126	8092
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40	40.110836	36636	4295
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	40	40.077599	20581	5250
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.not_gt_le	40	0.224952	71	33	0.2.0.1.0.0	synth with cache (only 1: intros x y H; only 1: destruct (P.lt_total x y); only 1: rewrite P.le_lteq; only 1: intuition; only 1: rewrite P.le_lteq; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	40	40.148660	53904	1188
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	40	0.037507	5	3	0.2.0	synth with cache (only 1: intros x y; only 1: rewrite P.le_lteq; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.complement_inverse	40	0.007346	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity	40	40.069570	19127	4799
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	40	4.224792	1658	400	7.0.3.4.0	synth with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: now apply mod_always_pos).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40	40.046082	11139	2043
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	40	3.848533	752	507	0.0.6.0.0.0	synth with cache (only 1: intros; only 1: rewrite le_lteq; only 1: destruct (compare_spec x y); only 1: intuition; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	40	0.079438	8	5	1.1.1.0.0	synth with cache (only 1: intros; only 1: destruct (compare_spec x y); only 1: iorder; only 1: iorder; only 1: iorder).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	40	0.024188	3	2	1.0	synth with cache (only 1: rewrite compare_gt_iff; only 1: iorder).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.029460	3	3	0.0.0	synth with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.incl_left	40	40.155387	54779	7789
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.compare	40	40.136331	26820	412
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.incl_right	40	0.023363	4	4	0.0.0.0	synth with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.seq_refl	40	0.007101	4	1	3	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40	40.047631	10881	3293
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_seq	40	0.226768	9	4	3.0	synth with cache (only 1: intros; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40	12.739641	5758	1548	1.4.8.0.1.0.0.1	synth with cache (only 1: intro n; only 1: cases ltac:(m); only 1: intro H; only 1: apply le_succ_l in H; only 1: false_hyp ltac:(H) nlt_0_r; only 1: intro H; only 1: rewrite pred_succ; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.app_removelast_last	40	40.083703	23037	3835
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.lt_slt	40	0.031125	4	2	1.1	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_land	40	40.581374	9573	1603
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.rbal'_rb	40	40.059347	18171	2416
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	40	40.074288	7746	2254
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.seq_trans	40	3.168116	2149	448	0.0.3.12.1	synth with cache (only 1: destruct x; only 1: intro; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.seq_sym	40	0.019415	4	3	0.0.1	synth with cache (only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.union_empty_left	40	0.018027	3	3	0.0.0	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	40	3.083424	1313	452	0.2.0.0.0.1.0.0.3	synth with cache (only 1: intros n m; only 1: cases n; only 1: rewrite pred_0; only 1: intro H; only 1: apply lt_0_succ; only 1: intros n IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: now apply le_succ_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40	40.062402	8739	1724
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40	40.065477	17915	5315
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup'	40	40.119179	39596	5096
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	40	40.074360	17556	3879
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_1_lcm_mul	40	40.060535	8910	2704
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectNegCore.equivPifn	40	40.243783	23650	788
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.union_empty_right	40	6.007452	4749	1028	17.0.0.0	synth with cache (only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40	40.040863	8751	3539
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r_nonneg	40	0.095171	10	8	0.3.0.0	synth with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.le_0_IZR	40	40.071177	20240	3588
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_shift_div_l	40	40.065227	21212	2382
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.wf_lexprod	40	40.081250	27391	7014
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.eq_mul_1	40	40.045449	11349	2581
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	40	40.094184	20153	5081
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Power_set_PO	40	40.142397	45720	7071
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_Rel_is_Strict_Included	40	0.012629	2	2	0.0	synth with cache (only 1: red; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	40	40.039960	10149	2345
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.Generic.Paradox.Omega	40	6.488838	26738	318
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.divide_Zpos	40	40.090396	26436	4650
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.log2_spec	40	40.061666	17299	2971
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_succ_abs	40	40.087247	31356	3879
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_alt	40	40.032568	8131	2194
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.log2_nonpos	40	1.530684	419	155	0.0.0.2.5.0	synth with cache (only 1: intro H; only 1: destruct n as [| [n| n| ]]; only 1: reflexivity; only 1: easy'; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	40	40.085141	15584	3844
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40	40.071788	18056	5087
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	40	40.066438	20822	2748
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.flip_arrow	40	40.036988	7601	1590
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.proper_sym_flip	40	0.027705	4	2	0.2	synth with cache (only 1: intros; only 1: simpl_crelation).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Nat2Pos.inj_compare	40	40.065513	19551	4583
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	40	40.079704	21794	4321
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Injections.pcan_inj	40	40.313046	129326	6503
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Injections.can_inj	40	0.011144	2	1	1	synth with cache (only 1: by move  =>fK x y /(congr1 g); rewrite !fK => [[]]).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40	40.053114	9799	1971
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.PER_morphism_obligation_1	40	40.055997	8638	7848
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.gcd_greatest	40	40.144462	20891	3755
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.symmetric_equiv_flip	40	0.042818	13	6	4.0.0.0	synth with cache (only 1: hnf; only 1: intros; only 1: hnf; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	40	40.067584	18416	6555
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.compose_proper_obligation_1	40	0.022521	17	2	8	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Injections.canLR	40	0.666357	807	95	1.3.17	synth with cache (only 1: intros; only 1: elim eq_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	0.144291	115	19	13	synth with cache (only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.reflexive_eq_dom_reflexive	40	0.016853	5	3	0.0.2	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Injections.canRL	40	0.153237	95	21	7.3	synth with cache (only 1: destruct 2; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_fold	40	40.073750	21505	2555
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Some_inj	40	0.624267	534	77	0.0.18	synth with cache (only 1: inversion 1; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.of_voidK	40	0.023499	17	4	0.7	synth with cache (only 1: intro H; only 1: destruct H).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40	40.220645	77154	3566
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.proper_sym_flip_2	40	3.307365	423	102	3.7.0	synth with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: unfold flip, respectful; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.esymK	40	0.671436	1177	98	0.10.16.0	synth with cache (only 1: red; only 1: intro p; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.etrans_id	40	0.112322	125	12	0.15	synth with cache (only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_id	40	0.150458	144	14	1.15	synth with cache (only 1: red; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	40	12.726140	5951	1682	1.0.0.0.3.9.1.1	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with 0; only 1: left; only 1: split; only 1: order; only 1: apply lt_0_1; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.div2_double	40	2.756870	1044	181	0.2.0.0.3.10.2	synth with cache (only 1: simpl; only 1: nzsimpl; only 1: induction n; only 1: now nzsimpl; only 1: simpl; only 1: nzsimpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_comm	40	40.185967	15763	5124
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.154015	33	18	1.0.0.0.1.1	synth with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite add_succ_r; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.union_comm	40	15.735950	11137	2731	12.5.2.2	synth with cache (only 1: unfold seq; only 1: destruct y; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	40	0.564026	228	120	1.0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: split; only 1: order; only 1: apply lt_0_1; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	40	0.021905	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	40	0.022917	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.union_ass	40	0.837537	233	132	1.0.0.1.0.0.1	synth with cache (only 1: unfold seq; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: simpl; only 1: auto with bool).
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Fix_rects.Fix_sub_rect	40	40.074858	24133	3127
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.seq_left	40	1.932625	508	275	1.0.3.1.0.0	synth with cache (only 1: unfold seq; only 1: destruct y; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_3_facts.Strong_confluence	40	40.067909	19995	6798
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_can_sym	40	4.320696	8869	374	7.48.24	synth with cache (only 1: intros Hfst Hsnd; only 1: intro; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.seq_right	40	0.560320	118	82	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	40	40.054455	14896	2924
coq-tactician-stdlib.8.12.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dmemo_get_correct	40	40.258697	100759	6342
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_app	40	13.684432	6827	1015	1.0.1.1.2.25	synth with cache (only 1: induction 1; only 1: intros H; only 1: eauto; only 1: intros; only 1: constructor; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	40	40.084296	18965	2715
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	40	3.041288	994	279	6.0.0.1.3.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite pred_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	40	40.049632	12597	4090
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40	40.064938	17099	4525
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.StrictOrder_Asymmetric	40	40.326864	131673	7321
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.subrelation_symmetric	40	0.014030	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_comp	40	4.335153	8318	389	3.29.52	synth with cache (only 1: intro; only 1: red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Reflexive	40	0.017348	4	2	2.0	synth with cache (only 1: hnf; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40	40.053581	17176	2474
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Antisymmetric	40	0.035364	21	5	6	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PreOrder	40	0.032249	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_StrictOrder	40	0.145111	10	2	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	40	40.072097	16421	8884
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PER	40	0.035164	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Equivalence	40	0.058810	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.complement.complement_Irreflexive	40	0.008331	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.complement.complement_Symmetric	40	0.007484	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.iffT_Reflexive	40	0.060378	118	15	4.10	synth with cache (only 1: intro H; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.iffT_Symmetric	40	0.007871	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.iffT_Transitive	40	0.010777	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_add_abs	40	20.273894	6106	1092	1.0.1.0.0.0.1.0.1.1.0.0.0.0.0.0.0.2.29	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial using Nat.le_add_r; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: simpl; only 1: apply Pos2Nat.inj_add).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.StrictOrder_Asymmetric	40	40.407803	176836	9115
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.subrelation_symmetric	40	0.009368	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Reflexive	40	0.017090	6	4	2.0.0.0	synth with cache (only 1: hnf; only 1: intros; only 1: hnf; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Antisymmetric	40	0.324107	194	57	2.2.0.2.0.1	synth with cache (only 1: hnf; only 1: intros; only 1: apply H; only 1: red in H0; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.flip.flip_PreOrder	40	0.033157	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.flip.flip_StrictOrder	40	0.146245	10	2	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_is_preorder	40	40.787543	378888	8110
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40	1.075419	360	205	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial using Nat.le_add_r; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.flip.flip_PER	40	0.034868	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Equivalence	40	0.032882	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.complement.complement_Irreflexive	40	0.005144	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.complement.complement_Symmetric	40	0.006513	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity_l	40	40.056683	14713	4243
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	40	40.043490	7201	2461
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	40	40.056978	16793	2533
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40	1.619054	9842	133
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	40	40.107366	35819	2826
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	40	40.023114	4455	1260
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.exists_last	40	40.126117	46014	5263
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_1	40	40.097131	16897	1770
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.lbalS_rb	40	40.031721	7684	2209
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	40	9.590657	3710	1087	0.0.0.0.8.1.1	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: split; only 1: intros (q, Hq); only 1: exists q; only 1: now rewrite mul_shuffle3, mul_cancel_l in Hq; only 1: apply mul_divide_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lxor	40	40.607423	6645	667
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40	40.033312	7843	1663
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	40	40.062126	16213	4463
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	40	40.059947	15979	3861
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.JMeq_sym	40	0.626903	1247	111	0.12.15	synth with cache (only 1: intros A C h1 h2; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.JMeq_trans	40	0.017563	8	3	1.0.4	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	40	40.086187	28963	3557
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.master_key	40	0.005128	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_map.Permutation_map	40	40.049455	13760	2628
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	40	40.083724	19752	3256
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_map.Permutation_map'	40	0.924523	346	65	0.0.0.0.0.0.0.9	synth with cache (only 1: induction 1; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectNegCore.xorPifn	40	40.122479	29645	1301
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gauss	40	40.072539	15235	4274
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.le_IZR	40	40.078205	25382	3141
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_shift_inv_l	40	40.057464	20358	2005
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.Acc_symprod	40	40.100891	36339	6218
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40	40.070403	12147	2030
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion	40	40.088586	21058	5745
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40	40.047555	12214	2667
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.Generic.Paradox.lemma1	40	40.126187	48849	2432
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	40	40.151806	38146	2779
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.even_spec	40	40.193311	34782	3976
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40	40.058874	15234	4449
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	40	40.055137	15579	2911
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	40	20.691683	20530	2498	19.2.8.1.7.1.8.0.5.6	synth with cache (only 1: split; only 1: now try order'; only 1: intros a; only 1: revert a; only 1: intros; only 1: firstorder; only 1: intros a; only 1: intros n m; only 1: intros H H1 H2; only 1: now rewrite H).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40	40.033000	5995	3406
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Nat2Pos.inj_sub	40	40.153634	30848	3800
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	40	40.065765	16591	4114
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40	40.072222	22166	3996
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.respectful_morphism	40	40.028266	5788	1727
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40	40.091115	26775	5872
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.Reflexive_partial_app_morphism	40	0.007569	6	1	5	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.flip_respectful	40	0.011990	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.flip1	40	0.020309	5	4	0.0.1.0	synth with cache (only 1: reduce; only 1: red in H0; only 1: red in H0; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.flip2	40	0.006435	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.eq_subrelation	40	0.026909	7	4	0.0.1.2	synth with cache (only 1: hnf; only 1: intros; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.reflexive_proper	40	0.004999	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_cardinal	40	40.056898	17260	1981
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.proper_eq	40	0.008434	1	1	0	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.proper_proper	40	0.933235	271	139	0.0.1.0.0.0.2	synth with cache (only 1: split; only 1: intros; only 1: subst; only 1: firstorder; only 1: subst; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.proper_sym_impl_iff	40	40.053169	17329	2887
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Normalize.proper_normalizes_proper	40	0.024962	7	1	6	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.035283	5	5	0.0.0.0.0	synth with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Normalize.flip_atom	40	0.007741	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40	40.430677	61436	2971
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_add_distr_l	40	40.151842	13004	3536
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.le_div2	40	40.148841	31920	4150
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	40	40.095344	16925	5743
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	40	40.094339	30992	3565
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_3_facts.Strong_confluence_direct	40	40.061546	17207	8438
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.union_rotate	40	40.069106	16969	5883
coq-tactician-stdlib.8.12.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dimemo_get_correct	40	40.106387	34263	5588
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.SortA_app	40	40.043576	10079	2243
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40	40.071641	15479	2029
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	0.022651	3	3	0.0.0	synth with cache (only 1: rewrite sgn_null; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	40	40.064840	17968	2909
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40	40.048929	12698	3463
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_compr	40	40.251990	97999	4969
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40	40.052259	15326	2754
coq-tactician-stdlib.8.12.dev	Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	40	40.095028	34962	1299
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Binary.relation_equivalence_equivalence	40	40.133794	44945	5486
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Binary.relation_implication_preorder	40	0.010256	4	1	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Binary.partial_order_antisym	40	0.071653	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Binary.PartialOrder_inverse	40	0.075621	4	2	2.0	synth with cache (only 1: reduce_goal; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_true	40	0.033978	8	3	1.4.0	synth with cache (only 1: destr_bool; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.inj_neq	40	40.107583	40453	3777
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_idempotent	40	40.267073	101292	10529
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity'	40	40.067549	16037	7241
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40	40.039130	8653	2485
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.033811	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	40	0.044135	8	6	0.2.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_add	40	0.416664	119	43	1.0.1.4	synth with cache (only 1: intros A B; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	40	0.045939	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	0.107792	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.InjectionsTheory.can_comp	40	4.858082	10813	591	2.19.52	synth with cache (only 1: red; only 1: simpl; only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	40	13.414625	4491	2030	0.0.0.0.0.0.0.0.0.0.0.0.3.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: split; only 1: order; only 1: intuition; only 1: right; only 1: split; only 1: intuition; only 1: order; only 1: order; only 1: nzsimpl; only 1: apply mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	40.096891	23480	12034
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	40	40.100158	31208	4151
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	40	40.051685	12505	2809
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.removelast_app	40	40.114941	24650	4621
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_2	40	40.060192	17285	3233
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.removelast_last	40	0.678602	255	77	0.0.0.1.0.0.0.1.3	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: intros; only 1: simpl; only 1: rewrite IHl; only 1: destruct l; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.lbalS_arb	40	40.037775	9190	3003
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	40	40.066275	19142	3752
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40	40.041384	9914	2971
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	40	40.112784	36866	4929
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.JMeq_ind	40	40.396587	170643	8354
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.JMeq_rec	40	0.013403	3	3	0.0.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.JMeq_rect	40	0.014547	3	3	0.0.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40	40.087811	28915	3127
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.lock	40	40.433305	190502	6782
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.not_locked_false_eq_true	40	0.159233	12	3	0.3	synth with cache (only 1: unlock; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40	40.090624	28556	4040
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_map.Permutation_map_inv	40	40.107106	42201	2862
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union	40	10.918197	5874	1162	1.1.0.1.0.0.0.4.2.1.2.3	synth with cache (only 1: unfold Add; only 1: intros x y H'; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.introT	40	40.134811	30226	869
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40	40.069258	20357	3908
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.le_IZR_R1	40	40.075679	23096	2322
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_shift_div_r	40	40.057583	16768	3566
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.unlock	40	4.156552	24859	311
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.wf_symprod	40	40.130457	47548	7361
coq-tactician-stdlib.8.12.dev	Coq.Bool.IfProp.Iftrue_inv	40	0.565736	852	107	1.0.1.14	synth with cache (only 1: intro H; only 1: destruct 1; only 1: intuition; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Bool.IfProp.Iffalse_inv	40	0.025528	7	6	0.0.0.1.0.0	synth with cache (only 1: destruct 1; only 1: intros; only 1: case diff_true_false; only 1: auto with bool; only 1: intros; only 1: auto with bool).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40	40.056057	10094	1552
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	40	13.695954	4412	1682	0.0.0.2.0.0.0.0.0.12	synth with cache (only 1: intros n m; only 1: apply Private_NZDiv.div_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: now try split; only 1: right; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: now try split).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	40	0.175711	27	20	0.0.1.0	synth with cache (only 1: intros; only 1: apply mod_le; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	40	0.433567	44	29	2.3.0	synth with cache (only 1: intros; only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion_left	40	40.049363	6605	2675
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	40	0.231649	39	25	0.3.0.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	40	40.033493	8576	1879
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.Generic.Paradox.lemma2	40	40.037282	11949	1371
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40	40.056111	15313	2290
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	40	37.368272	15101	3094	1.0.1.6.1.21	synth with cache (only 1: intros n m p q; only 1: rewrite testbit_eqb; only 1: rewrite testbit_eqb; only 1: f_equiv; only 1: f_equiv; only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.odd_spec	40	40.164387	26601	3758
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	40	40.062149	17599	3651
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40	21.153527	3654	2063	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	40	40.058193	15597	2792
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	40	0.165224	29	20	0.0.0.1.0.1	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_always_pos; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Bool.IfProp.IfProp_true	40	9.166968	21949	1894	0.34.17	synth with cache (only 1: intro p; only 1: inversion 1; only 1: auto with bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.IfProp.IfProp_false	40	0.042187	9	9	1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Bool.IfProp.IfProp_or	40	0.027466	12	7	0.1.0.0.0	synth with cache (only 1: destruct 1; only 1: left; only 1: auto with bool; only 1: right; only 1: auto with bool).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	40	40.050908	8947	2097
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40	40.072036	18069	5892
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Nat2Pos.inj_min	40	40.159928	24325	5316
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	40	40.067567	18312	3473
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	40	40.055441	16772	1441
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_partition	40	40.099247	32831	4440
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.flip_arrow	40	40.027471	4397	948
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40	40.051103	7978	1431
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40	0.049603	5	5	0.0.0.0.0	synth with cache (only 1: intros A R Sym B R' Sym' f Hf x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.proper_sym_flip	40	0.015839	1	1	0	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40	40.257932	3789	1311
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.Rstar_reflexive	40	0.014294	6	2	2.2	synth with cache (only 1: intros U R H'; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.Rplus_contains_R	40	0.012699	1	1	0	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.proper_sym_flip_2	40	1.018520	252	64	3.1.6	synth with cache (only 1: compute; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.lt_div2	40	40.109909	18056	4496
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_add_distr_r	40	40.180570	16272	4334
coq-tactician-stdlib.8.12.dev	Coq.Bool.IfProp.IfProp_sum	40	5.993397	5947	1267	0.0.5.3.0.0.5.3.2	synth with cache (only 1: intros A B []; only 1: intros; only 1: left; only 1: inversion H; only 1: assumption; only 1: intros; only 1: right; only 1: inversion H; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Union.WfUnion.strip_commut	40	40.257830	97546	6536
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40	40.148098	30384	7622
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.seq_congr	40	40.058681	13841	5625
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.SortA_NoDupA	40	40.082366	27032	3653
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	40	27.175594	11234	3857	0.0.4.1.5.0.1.5.0	synth with cache (only 1: intros a b Ha Hb; only 1: intuition; only 1: destruct (lt_ge_cases a b); only 1: auto; only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: exfalso; only 1: order; only 1: apply mod_small; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Well_Ordering.WellOrdering.wf_WO	40	40.403162	11622	2011
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40	9.089474	4359	999	0.0.6.4.4.3.0.0.0.3.0.15	synth with cache (only 1: split; only 1: intro n; only 1: intro H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: false_hyp H lt_irrefl; only 1: intro n; only 1: intro m; only 1: intro p; only 1: intros LT EQ; only 1: generalize (lt_trans n m p); only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.proper_sym_impl_iff	40	6.231763	1726	400	0.2.2.9.1	synth with cache (only 1: intros; only 1: red in H0; only 1: red in H0; only 1: red in H0; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40	40.117771	27220	4289
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40	40.054892	14666	2655
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	40	40.050491	12623	4290
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	40	40.097706	33559	3783
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	40	0.022249	7	2	3.2	synth with cache (only 1: apply max_r; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	40	40.079333	22150	7347
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_not_false	40	40.158285	54505	3868
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.inj_minus2	40	40.052628	18195	3296
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	40	17.623339	6975	1396	0.0.0.0.0.0.18	synth with cache (only 1: intuition; only 1: apply (mul_cancel_l _ _ c); only 1: order; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_clos_rst	40	40.125488	38600	8189
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_r_clos_rt	40	0.030940	4	4	0.0.0.0	synth with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.InjectionsTheory.pcan_pcomp	40	40.279110	109705	4099
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40	40.025852	4333	547
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	0.019024	3	3	0.0.0	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.053242	7	6	0.0.0.0.0.1	synth with cache (only 1: induction l; only 1: firstorder; only 1: intros; only 1: simpl in *; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive	40	26.012944	3512	1338	0.3.0.0.0.2.7	synth with cache (only 1: elim Strict_Rel_is_Strict_Included; only 1: intros H'1 H'2 x y z H'3 H'4; only 1: apply H'1; only 1: apply Strict_Rel_Transitive_with_Rel with (y := y); only 1: auto with sets; only 1: apply H'1; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40	40.086263	26095	3366
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	40	40.055517	10163	2795
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40	40.084446	31906	1123
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.remove_cons	40	40.156260	61586	4320
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40	40.035122	9973	1420
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	40	40.083841	22749	3444
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.EqdepDec.trans_sym_eq	40	5.517824	20594	835	0.77.1	synth with cache (only 1: intros; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	40	40.056278	15502	3920
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	40	40.041927	10714	4120
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.JMeq_ind_r	40	40.404163	177521	8456
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.JMeq_rec_r	40	0.014873	4	3	0.1.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.JMeq_rect_r	40	0.015467	4	3	0.1.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.JMeq_congr	40	0.043876	9	7	2.0.1.0.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: case JMeq_eq with (1 := H'); only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.JMeq_eq_dep_id	40	0.023010	3	3	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.eq_dep_id_JMeq	40	0.011400	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.eq_dep_JMeq	40	0.011812	2	2	0.0	synth with cache (only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	40	40.057771	15330	2969
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40	8.151468	1339	397	1.0.1.0.1.1.0.0.3	synth with cache (only 1: unfold eqb; only 1: intros x x' Hxx' y y' Hyy'; only 1: destruct eq_dec; only 1: destruct eq_dec; only 1: auto; only 1: order; only 1: destruct eq_dec; only 1: order; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	40	0.036656	8	4	0.1.3.0	synth with cache (only 1: intro H; only 1: intro EQ; only 1: contradict ltac:(H); only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	40	0.026757	1	1	0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	40	0.022480	1	1	0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	40	0.111952	2	1	1	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_map.Permutation_image	40	40.147778	58764	4798
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	0.014442	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	40	0.015088	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0.013417	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	40	0.027424	4	2	2.0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	0.030226	4	2	2.0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0.014386	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	40	0.011475	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	40	0.011920	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	0.010456	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union'	40	40.108406	33215	6209
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	40	0.016201	2	2	0.0	synth with cache (only 1: intro H; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	0.008763	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	40	0.009146	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	40	0.008858	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	40	0.010208	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.singlx	40	0.423351	158	55	1.0.0.0.0.2	synth with cache (only 1: unfold Add at 1; only 1: intros x y H'; only 1: elim H'; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add	40	0.101037	33	10	1.5	synth with cache (only 1: unfold Add; only 1: auto using Union_associative with sets).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.introF	40	40.244651	11343	681
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.IZR_ge	40	40.068439	20154	2952
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_shift_inv_r	40	40.049589	17419	1509
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_is_Bottom	40	11.604767	7570	1725	1.2.1.0.0.0.5.12.0	synth with cache (only 1: intro X; only 1: split; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: red; only 1: simpl; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Product.Swap.swap_Acc	40	40.127060	46504	7243
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.locked_withE	40	40.384132	155802	6651
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.unlock_with	40	0.006965	2	1	1	synth with cache (only 1: by case : k ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_l	40	40.051674	6600	2151
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40	6.981224	75319	761
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.JMeq_eq_dep	40	0.306133	194	44	1.0.3.2.1	synth with cache (only 1: destruct 1; only 1: intros; only 1: rewrite H; only 1: apply eq_sigT_eq_dep; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	40	40.081076	13812	4100
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40	40.099643	25746	6034
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.proper_sym_impl_iff_2	40	23.613943	8209	1213	4.4.4.12.2	synth with cache (only 1: simpl_relation; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: split; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.ggcd_gcd	40	40.089865	25432	5070
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.Generic.Paradox.paradox	40	40.047934	15733	2403
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40	40.125519	36098	2602
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	40	8.457032	2630	864	2.2.0.1.0.1.0.1.0.4.3	synth with cache (only 1: split; only 1: intro EQ; only 1: intuition; only 1: contradict ltac:(H); only 1: order; only 1: contradict ltac:(H); only 1: order; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: auto; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_div_eucl_spec	40	40.244866	65177	1784
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	40	12.583612	3294	1126	0.0.0.5.0.5	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intro H; only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_pos_l p n m) by assumption; only 1: now rewrite (mul_cancel_l n m p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40	40.042986	7910	2931
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	40	40.077554	11693	3737
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	40	40.041422	11384	2345
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40	40.071152	18021	5041
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Nat2Pos.inj_max	40	40.091289	28776	5025
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	40	40.082308	29277	1102
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.update_mapsto_iff	40	40.065631	21451	3080
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_length	40	33.902175	20058	2556	1.9.0.21	synth with cache (only 1: induction 1; only 1: constructor; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.PartialOrder_proper_type	40	40.048446	4718	1781
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	40	28.282576	15021	2417	0.0.28.0	synth with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.Rstar_contains_R	40	40.213966	79118	9575
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.div2_decr	40	40.152771	36159	5209
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_assoc	40	40.085530	15533	4974
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.double_twice	40	0.038221	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.testbit_0_l	40	0.080837	20	7	1.1.3	synth with cache (only 1: induct ltac:(n); only 1: trivial; only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_invert	40	40.127730	43947	6455
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_elim	40	0.029267	9	4	4.0.0	synth with cache (only 1: induction 1; only 1: auto; only 1: auto using Noone_in_empty with sets).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Union.WfUnion.Acc_union	40	40.130808	48531	5941
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_3_facts.Newman	40	40.055931	16481	6145
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.union_perm_left	40	40.065228	16000	5612
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.incl_clos_trans	40	0.108297	190	30	0.16	synth with cache (only 1: left; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	40	40.052415	13114	4777
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40	39.010371	16320	2905	4.17.7	synth with cache (only 1: intros n m Hn; only 1: rewrite <- add_opp_r; only 1: now apply add_move_l).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Well_Ordering.Characterisation_wf_relations.wof	40	40.411249	170903	7975
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	40	40.090822	27388	4181
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40	40.138260	29478	5359
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	40	40.044026	10095	3494
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40	40.046690	12901	3600
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.app_eqlistA_compat	40	9.710556	1556	257	0.0.3.1.0.1.2.2.8	synth with cache (only 1: induction 1; only 1: induction 1; only 1: constructor; only 1: simpl; only 1: auto; only 1: simpl; only 1: constructor; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.Orders.TTLB_to_OTF.lt_compat	40	40.086822	18432	6737
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_app	40	0.083800	7	6	0.1.0.0.0.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: intuition; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolEq.Bool_eq_dec.beq_false_not_eq	40	40.190754	69176	4072
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40	11.313447	15020	2964	1.0.0.0.0.0.21.0.1	synth with cache (only 1: intros U R; only 1: red; only 1: induction 1; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_t	40	40.305954	118629	6987
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.InjectionsTheory.eq_inj	40	40.273776	102295	5017
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Binary.relation_equivalence_equivalence	40	40.113872	43368	2492
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Binary.relation_implication_preorder	40	0.010593	4	1	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Binary.partial_order_antisym	40	0.021495	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Binary.PartialOrder_inverse	40	0.207805	9	4	1.0.0	synth with cache (only 1: reduce_goal; only 1: pose proof partial_order_equivalence as poe; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	0.016869	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	40	40.036181	9810	1666
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	0.681005	929	133	0.1.1.4.12	synth with cache (only 1: intros A P H; only 1: red; only 1: red; only 1: intro; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_sym	40	40.066906	16731	1581
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.remove_app	40	40.123079	18682	4067
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.rbalS_arb	40	40.040144	10403	2751
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	40	40.068951	20357	2644
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_is_equiv	40	4.745879	3423	943	4.0.0.0.13.1.2.1.8	synth with cache (only 1: constructor; only 1: red; only 1: auto with sets; only 1: red; only 1: intros; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.EqdepDec.nu_constant	40	40.179001	71079	4110
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	40	40.084448	26763	3419
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40	40.049288	9836	2299
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_map.Permutation_elt_map_inv	40	40.049356	14937	3921
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add_x	40	40.089768	26340	7003
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.introN	40	40.132645	18928	1056
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qinv_lt_contravar	40	40.072396	5531	989
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.IZR_le	40	40.060939	19010	2504
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Union_minimal	40	40.038088	9112	3100
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Product.Swap.Acc_swapprod	40	40.044733	12025	4543
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_maximal	40	0.027048	9	5	2.0.0.0	synth with cache (only 1: intros a b X H' H'0; only 1: red; only 1: intros x H'1; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_l	40	0.008664	1	1	0	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_r	40	0.008218	1	1	0	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.nary_congruence	40	40.124317	42876	6012
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_l	40	0.134200	54	26	0.0.0.0.0.3	synth with cache (only 1: intro A; only 1: intro X; only 1: red; only 1: intros x H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_r	40	40.043857	5035	1771
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_r	40	0.026175	5	5	0.0.0.0.0	synth with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.ssr_congr_arrow	40	0.119209	194	31	2.8	synth with cache (only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.ApplyIff.iffLR	40	0.007325	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.ApplyIff.iffRL	40	0.005408	1	1	0	synth with cache (only 1: by case : eqPQ ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.ApplyIff.iffLRn	40	0.022682	3	1	2	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.ApplyIff.iffRLn	40	0.007124	1	1	0	synth with cache (only 1: by move  =>nP tQ; case : nP ; case : eqPQ tQ ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	40	40.092623	10099	3368
coq-tactician-stdlib.8.12.dev	Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	40	40.247431	99923	7902
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40	40.092744	22980	7064
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative	40	5.373420	2324	742	7.7.1	synth with cache (only 1: intros x y z; only 1: unfold Add; only 1: auto  9 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.PartialOrder_proper	40	40.037760	2299	632
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.ggcd_correct_divisors	40	40.086513	30724	2114
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.Paradox.paradox	40	40.747867	367908	2947
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	40	40.066372	19262	4094
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40	40.050023	13794	3549
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	40	40.323757	139405	7440
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.div_eucl_spec	40	40.100171	34548	4626
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40	16.102070	10236	2498	0.0.1.3.0.4.1.25	synth with cache (only 1: reduce; only 1: induction s as [| c l IHl x r IHr]; only 1: intuition_in; only 1: simpl; only 1: clear IHl IHr; only 1: descolor; only 1: invrb; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40	40.058006	15043	3242
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.ifred_or	40	1.392797	812	221	0.0.1.0.1.4.10	synth with cache (only 1: intros; only 1: destruct s; only 1: right; only 1: assumption; only 1: descolor; only 1: ok; only 1: ok).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	40	40.059610	14822	2974
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	40	40.046082	12671	2172
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	40	40.071030	18718	4381
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2SuccNat.id_succ	40	40.046229	12835	2244
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	40	40.077379	23877	3597
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.update_dec	40	40.058457	16049	3691
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40	40.040424	7898	2187
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40	6.256828	5698	523	0.0.0.8.23.1	synth with cache (only 1: intro n; only 1: unfold lcm; only 1: nzsimpl; only 1: rewrite abs_eq; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	40	0.051963	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto using eq_refl, le_refl; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	40	0.166131	30	14	0.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: exists n; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	40	40.050326	10606	3753
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	40	0.086563	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: apply divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	40	0.085044	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_succ_l	40	40.177375	14902	4122
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.testbit_odd_0	40	40.188982	31765	2965
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.abstract_context	40	14.536145	109879	1422	1.109.94	synth with cache (only 1: intro H; only 1: apply H; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	40	9.353199	2410	772	0.0.0.1.0.6.0.1	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intro H; only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_neg_l p n m); only 1: rewrite (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl); only 1: now setoid_replace (n == m) with (m == n) by split; now intro; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_A_sum	40	40.129992	42206	7177
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Union.WfUnion.wf_union	40	40.111044	38595	5600
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.uniset_twist1	40	40.062978	15133	5588
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_clos_trans	40	40.198944	76853	7504
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	40	40.080009	23965	4774
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40	40.063118	15411	3569
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40	40.072742	20154	4505
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	40	0.027374	4	4	0.0.0.0	synth with cache (only 1: intros n m; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.bool_dec	40	40.272579	109207	8785
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	40	40.075019	14528	6277
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.diff_true_false	40	0.005341	3	1	2	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.diff_false_true	40	0.005078	1	1	0	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_inv_trans	40	2.397662	2585	482	0.0.4.17	synth with cache (only 1: induction 1; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.wf_clos_trans	40	0.021660	8	4	2.0.1.1	synth with cache (only 1: red; only 1: intros y H2; only 1: apply Acc_intro; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	40	40.048137	13103	3592
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	40	40.049783	13200	4720
coq-tactician-stdlib.8.12.dev	Coq.Structures.Orders.TTLB_to_OTF.le_lteq	40	40.062565	14534	7914
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev_app	40	40.027474	5106	1017
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eq_true_false_abs	40	1.689809	3412	452	1.1.14.0.10	synth with cache (only 1: intro; only 1: intro H; only 1: destruct b; only 1: discriminate; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.not_true_is_false	40	0.118970	135	22	2.7.0	synth with cache (only 1: destr_bool; only 1: reflexivity || destruct H; only 1: exact eq_refl).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.not_false_is_true	40	0.017309	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	40	0.600647	196	67	1.2.1.8	synth with cache (only 1: pose proof (max_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0.019578	1	1	0	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.not_true_iff_false	40	0.660887	330	108	0.0.0.5.4	synth with cache (only 1: intro A; only 1: split; only 1: destr_bool; only 1: intuition; only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.not_false_iff_true	40	0.024807	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Extension	40	8.749734	17764	2112	2.4.2.4.0.1.1.9.9	synth with cache (only 1: red; only 1: intro x; only 1: intro; only 1: destruct 1; only 1: split; only 1: red; only 1: trivial; only 1: red; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.le_implb	40	1.159048	653	207	1.0.1.0.9	synth with cache (only 1: destruct b1; only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolEq.Bool_eq_dec.exists_beq_eq	40	40.286509	118402	3418
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.compare_spec	40	0.033389	7	5	2.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Noone_in_empty	40	0.121711	181	31	8.0.2	synth with cache (only 1: red; only 1: intros h1 h2; only 1: destruct h2).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eqb_subst	40	0.012131	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Included_Empty	40	0.005571	1	1	0	synth with cache (only 1: destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eqb_reflx	40	0.007773	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eqb_prop	40	0.121222	8	5	0.1.1.0.1	synth with cache (only 1: destruct a, b; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eqb_true_iff	40	0.030220	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.Rstar_transitive	40	40.114651	33993	9133
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eqb_false_iff	40	0.038102	6	5	0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_orb	40	0.039263	17	7	0.0.1.0.2	synth with cache (only 1: destruct b1; only 1: simpl; only 1: destr_bool; only 1: simpl; only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_andb	40	0.009557	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_involutive	40	0.008121	3	1	2	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_involutive_reverse	40	0.008003	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_sym	40	0.009160	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.no_fixpoint_negb	40	0.009199	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eqb_negb1	40	0.006161	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro1	40	0.911782	640	191	1.4.1.2	synth with cache (only 1: intros B C H'; only 1: intro; only 1: left; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eqb_negb2	40	0.006628	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.if_negb	40	0.006870	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro2	40	0.014215	2	2	0.0	synth with cache (only 1: unfold Add at 1; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_true_iff	40	0.016595	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_false_iff	40	0.017006	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.dec_not_not	40	3.359677	9062	1075	7.4.0.0.0.13.0	synth with cache (only 1: intro A; only 1: intro H1; only 1: unfold not; only 1: intro H; only 1: elim H1; only 1: trivial; only 1: contradiction).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.dec_True	40	0.013948	15	4	2.0	synth with cache (only 1: unfold decidable; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.dec_False	40	0.008299	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_true_iff	40	0.040495	8	5	0.1.1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_false_iff	40	0.044258	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_true_elim	40	0.028831	5	4	0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_prop	40	0.048781	12	8	0.0.0.2	synth with cache (only 1: destr_bool; only 1: intuition; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_true_intro	40	0.125370	40	21	1.2	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_false_intro	40	0.029683	12	5	1.4.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_add	40	0.912880	1288	207	0.9.4.2.0	synth with cache (only 1: unfold Add at 1; only 1: intro; only 1: intro; only 1: exists x; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_false_elim	40	0.122598	36	20	0.0.3.1	synth with cache (only 1: destruct b1; only 1: destr_bool; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_diag	40	0.007640	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_true_r	40	0.006192	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_true_l	40	0.035516	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_false_r	40	0.006539	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_false_l	40	0.006343	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.dec_or	40	1.117420	1506	344	1.0.17	synth with cache (only 1: intro H; only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.dec_and	40	0.026822	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_negb_r	40	0.006230	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.dec_not	40	0.015248	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_negb_l	40	0.006414	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.dec_imp	40	0.021341	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_comm	40	0.010128	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.InjectionsTheory.eq_can	40	40.293459	113087	4231
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_assoc	40	0.016274	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.dec_iff	40	0.118822	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.not_not	40	0.008345	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_true_iff	40	0.036293	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.not_or	40	0.008509	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.not_and	40	0.019000	3	2	0.1	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.not_imp	40	0.019214	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_false_iff	40	0.040570	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.imp_simp	40	0.015446	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.not_iff	40	0.044353	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_true_eq	40	0.073070	19	13	0.3	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.not_true_iff	40	0.025637	38	9	8	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.not_false_iff	40	0.003943	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.not_not_iff	40	0.012132	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_false_intro1	40	0.035134	9	8	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.contrapositive	40	0.035415	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.or_not_l_iff_1	40	0.018484	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_false_intro2	40	0.013985	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.or_not_l_iff_2	40	0.019285	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_false_r	40	0.006182	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.or_not_r_iff_1	40	0.019054	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_false_l	40	0.006153	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.or_not_r_iff_2	40	0.019374	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.imp_not_l	40	0.020800	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_diag	40	0.006044	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.not_or_iff	40	0.027235	16	5	1	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_true_r	40	0.006358	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.not_and_iff	40	0.010290	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.not_imp_iff	40	0.026001	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_true_l	40	0.006299	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.not_imp_rev_iff	40	0.059530	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_false_elim	40	0.034566	13	5	0.0.0.2	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_negb_r	40	0.006480	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_negb_l	40	0.006709	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_comm	40	0.008492	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_assoc	40	0.016315	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_orb_distrib_r	40	0.014163	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_orb_distrib_l	40	0.014802	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_andb_distrib_r	40	0.052457	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_andb_distrib_l	40	0.014808	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	40	6.130574	2912	634	0.0.2.0.9.8	synth with cache (only 1: destruct (lt_total n m); only 1: solve_max; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: intuition; only 1: now apply max_l; only 1: now apply max_l).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.absorption_andb	40	0.008770	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.absorption_orb	40	0.008913	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	40	40.091394	2522	1004
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	40	0.058133	10	3	1	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.implb_true_iff	40	0.035716	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_1_facts.Equiv_from_preorder	40	40.230118	85934	9472
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.implb_false_iff	40	0.046237	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.implb_orb	40	0.008598	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_1_facts.Equiv_from_order	40	0.093987	17	16	1.1.0.0.0	synth with cache (only 1: intros U R H'; only 1: elim H'; only 1: intros H'0 H'1; only 1: red in H'1; only 1: auto  10 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.implb_negb_orb	40	0.009079	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_1_facts.contains_is_preorder	40	0.032580	27	9	1.1.1.2	synth with cache (only 1: intro A; only 1: split; only 1: auto  10 with sets; only 1: auto  10 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.implb_true_r	40	0.006350	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.implb_false_r	40	0.006639	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.implb_true_l	40	0.008893	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.implb_false_l	40	0.008657	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.implb_same	40	0.008142	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.implb_contrapositive	40	0.009852	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_trans	40	40.053219	15899	1806
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.implb_negb	40	0.009300	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.implb_curry	40	0.017283	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.implb_andb_distrib_r	40	0.018140	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.implb_orb_distrib_r	40	0.014745	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.implb_orb_distrib_l	40	0.014962	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_false_r	40	0.008249	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_false_l	40	0.008335	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_true_r	40	0.006928	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.remove_In	40	40.088960	27657	4968
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_true_l	40	0.005498	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_nilpotent	40	0.006123	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_comm	40	0.008486	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_assoc_reverse	40	0.015046	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_eq	40	0.012447	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40	40.045895	12942	2288
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_move_l_r_1	40	0.030773	10	3	5.0	synth with cache (only 1: intros; only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_move_l_r_2	40	0.017796	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_idempotent	40	40.111769	30146	10625
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_move_r_l_1	40	0.018123	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	40	0.120447	74	13	0.8.0	synth with cache (only 1: intros; only 1: rewrite mul_comm; only 1: apply divide_mul_l, divide_refl).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_move_r_l_2	40	0.018094	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_xorb_l	40	0.009515	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_xorb_r	40	0.026599	5	5	0.0.0.0.0	synth with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_negb_negb	40	0.009283	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eq_iff_eq_true	40	0.049323	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.EqdepDec.nu_left_inv_on	40	40.142152	55957	3446
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eq_true_iff_eq	40	0.164208	65	27	2.2.2	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eq_true_negb_classical	40	0.012236	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eq_true_not_negb	40	0.012132	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.absurd_eq_bool	40	0.019882	5	3	1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.absurd_eq_true	40	0.013055	3	2	1.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.trans_eq_bool	40	0.014369	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.Is_true_eq_true	40	0.013865	4	2	1.1	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.Is_true_eq_left	40	0.008878	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.Is_true_eq_right	40	0.013216	3	3	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: auto with bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eqb_refl	40	0.007100	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eqb_eq	40	0.025146	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_r	40	33.070176	14332	3176	1.3.0.3.13.1	synth with cache (only 1: intros n m p q H1 H2; only 1: rewrite mul_comm; only 1: apply (mul_lt_mono_pos_r m) in H1; only 1: rewrite mul_1_l in H1; only 1: order'; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40	40.039112	9853	3011
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_prop_elim	40	1.354316	1128	340	0.0.8.0.8	synth with cache (only 1: intros n m; only 1: intros; only 1: induction n; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_prop_intro	40	0.076802	37	13	7.0	synth with cache (only 1: destr_bool; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_prop_intro	40	0.022287	4	4	0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_prop_elim	40	0.026233	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eq_bool_prop_intro	40	0.024159	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eq_bool_prop_elim	40	0.019747	4	3	0.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_prop_elim	40	0.012926	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: auto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_prop_intro	40	0.010933	3	2	1.0	synth with cache (only 1: destr_bool; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_prop_classical	40	0.010598	2	2	0.0	synth with cache (only 1: destr_bool; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_prop_involutive	40	0.014052	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_if	40	0.012233	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_if	40	0.006552	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40	20.889167	3612	1676	5.6.1	synth with cache (only 1: intros a b c; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_lazy_alt	40	0.009541	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_lazy_alt	40	0.004904	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40	5.431331	6168	1224	0.0.1.1.0.3.1.3.0.1.7.8	synth with cache (only 1: intros; only 1: constructor; only 1: auto  10 with sets; only 1: intros x y h; only 1: destruct 1; only 1: destruct 1; only 1: auto  10 with sets; only 1: intros x y h; only 1: red; only 1: elim h; only 1: intros H'3 H'4; only 1: auto  10 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	0.274706	149	47	5.2.1	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: intro p; only 1: auto  10 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.015689	2	2	0.0	synth with cache (only 1: unfold same_relation; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	0.039527	19	6	1.3.0	synth with cache (only 1: compute; only 1: destruct 1; only 1: auto  10 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40	40.067580	13548	2481
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_map.Permutation_flat_map	40	40.041126	9384	1534
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.reflect_iff	40	2.490484	1851	372	3.0.1.0.2.12	synth with cache (only 1: red; only 1: intros A B []; only 1: intuition; only 1: repeat split; only 1: intuition; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.iff_reflect	40	0.033373	13	4	2.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.reflect_dec	40	0.023579	7	4	0.3.0.0	synth with cache (only 1: destruct 1; only 1: intuition; only 1: unfold not; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eqb_spec	40	0.025390	6	5	1.0.0.0.0	synth with cache (only 1: repeat match goal with | p:(_ * _)%type |- _ => destruct p | b:bool |- _ => destruct b end; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.introNf	40	40.349708	14687	744
coq-tactician-stdlib.8.12.dev	Coq.Program.Combinators.compose_id_left	40	0.008156	2	1	1	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Program.Combinators.compose_id_right	40	0.009228	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Program.Combinators.compose_assoc	40	0.020755	10	4	0.6	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qpower_positive_comp	40	40.065533	22580	2394
coq-tactician-stdlib.8.12.dev	Coq.Program.Combinators.flip_flip	40	0.007665	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Program.Combinators.prod_uncurry_curry	40	0.013460	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.IZR_lt	40	40.068402	20007	3027
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Product.Swap.wf_swapprod	40	40.076854	24280	6764
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Union_is_Lub	40	40.085295	25194	4999
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Streams.unfold_Stream	40	0.525633	1255	92	0.18.16	synth with cache (only 1: intro p; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	40	40.066095	7164	4245
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Streams.tl_nth_tl	40	1.248785	838	244	2.0.0.10	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	40	40.194112	66776	7946
coq-tactician-stdlib.8.12.dev	Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	40	0.029554	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite M.proof_irrelevance with (p1 := q) (p2 := (eq_rect x P p y H)); only 1: elim H using eq_indd; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	0.008840	2	2	0.0	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative'	40	40.055217	13782	4550
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrunder.Under_rel.Under_relE	40	0.008241	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrunder.Under_rel.over_rel	40	0.007592	1	1	0	synth with cache (only 1: now trivial).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrunder.Under_rel.over_rel_done	40	0.008531	1	1	0	synth with cache (only 1: now trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40	40.071646	17184	5361
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrunder.Under_rel.under_rel_done	40	0.006784	1	1	0	synth with cache (only 1: now unfold Over_rel).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.PartialOrder_StrictOrder	40	40.091237	4271	485
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.gcd_divide_l	40	40.097018	25481	4716
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.gcd_divide_r	40	0.729554	219	85	0.2.1.0.0.0.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.IZR_neq	40	5.934602	1520	418	2.2.2.0.4.0	synth with cache (only 1: intros n m H; only 1: red; only 1: intros H0; only 1: apply H; only 1: apply eq_IZR; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	0.992443	2656	193	2.12.18.4	synth with cache (only 1: intro x; only 1: intro p; only 1: destruct p; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	40	40.056713	14793	4830
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.strength	40	40.324106	141175	6059
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40	40.073400	14977	7672
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.div_mod'	40	40.172250	27104	4568
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.ins_rr_rb	40	40.062992	17511	3364
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	40	40.050411	10857	2959
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	40	40.083958	23854	5634
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.div_mod	40	2.933788	848	234	0.10.0.1	synth with cache (only 1: generalize (div_eucl_spec a b); only 1: unfold div, modulo; only 1: intros H; only 1: now destruct div_eucl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40	40.037059	9060	2132
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2SuccNat.pred_id	40	40.125257	7886	2114
coq-tactician-stdlib.8.12.dev	Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40	5.330003	11641	1234	0.8.2.1.17.0.2.13	synth with cache (only 1: red; only 1: split; only 1: reflexivity; only 1: intro p; only 1: destruct p; only 1: simpl in *; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.024564	4	4	0.0.0.0	synth with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	40	40.046331	10699	3790
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.update_in_iff	40	40.098475	32871	4645
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.StrictOrder_PreOrder	40	40.118499	21268	1930
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	40	40.058982	15823	3126
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_succ_r	40	40.062931	16802	4692
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	40	19.835359	3208	1053	0.0.0.6.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: order; only 1: order; only 1: rewrite <- neq_mul_0; only 1: intuition; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.testbit_even_0	40	40.180443	30583	2363
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	0.237035	19	11	1.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.modal	40	9.029205	17145	1084	0.5.10.45	synth with cache (only 1: intro p; only 1: red; only 1: destruct p; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.Forall	40	0.036688	18	4	1.6	synth with cache (only 1: red; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	40	40.061294	17877	4574
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_B_sum	40	40.097044	29105	5857
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.SuccNat2Pos.id_succ	40	6.960927	4352	820	0.0.11.5.0.0.0.2.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: rewrite Pos2Nat.inj_succ; only 1: induction n; only 1: trivial; only 1: f_equal; only 1: simpl; only 1: rewrite <- IHn; only 1: rewrite Pos2Nat.inj_succ; only 1: f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.uniset_twist2	40	40.062236	15262	5492
coq-tactician-stdlib.8.12.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel	40	40.204437	72432	6839
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40	40.056068	16375	3495
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	40	40.040528	10254	2344
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	40	0.036480	4	3	0.1.0	synth with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: now rewrite add_move_l, sub_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	0.142261	14	8	0.3.0	synth with cache (only 1: intros n m; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	40	40.054174	14336	3885
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	40	0.025282	8	3	5.0.0	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	40	0.026329	3	2	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	0.030588	3	2	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	0.028167	3	2	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	0.030943	3	2	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	40	0.040491	14	3	1	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	40	40.087578	12543	2569
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	0.038947	14	3	1	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	40	0.131626	21	13	1.0.0.2.0	synth with cache (only 1: intros x y; only 1: rewrite 2!lt_eq_cases; only 1: intuition; only 1: elim (StrictOrder_Irreflexive x); only 1: now transitivity y).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	40	40.075819	22888	3807
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.forall_hprop	40	40.297912	123015	9455
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.rev_eqlistA_compat	40	40.040985	8443	966
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev	40	1.331359	392	98	1.0.3.1.1.3	synth with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: apply eqlistA_rev_app; only 1: congruence; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolEq.Bool_eq_dec.not_eq_false_beq	40	40.157368	56535	3667
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.Rstar_cases	40	40.078602	21291	5659
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40	5.838171	1025	373	2.3.2.2	synth with cache (only 1: Bool.destr_bool; only 1: rewrite lt_eq_cases; only 1: rewrite lt_succ_r; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	40	0.020107	6	3	0.3.0	synth with cache (only 1: intros x y H; only 1: apply le_succ_l; only 1: now apply lt_le_incl).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_not_empty	40	40.299064	118662	9477
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_can_eq	40	40.273271	102357	3690
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.dec_functional_relation	40	40.136361	48690	5727
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	40	40.056747	15161	4031
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	40	40.050790	12697	2338
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.lt_trans	40	40.066019	21966	1517
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.notin_remove	40	40.143038	19035	4570
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	40	40.074492	20095	4112
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_t1n_trans	40	40.197129	66851	8400
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.EqdepDec.eq_proofs_unicity_on	40	40.157948	65886	3115
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	40	40.071241	20434	3515
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Inclusion.WfInclusion.Acc_incl	40	40.296194	99717	6488
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Inclusion.WfInclusion.wf_incl	40	0.062307	48	10	0.9	synth with cache (only 1: split; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40	40.060678	14405	4950
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40	40.050881	13641	2565
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.nat_bijection_Permutation	40	40.060214	19526	2410
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40	7.196189	2173	764	0.0.0.6.1.0.0.0.4.1.0	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: right; only 1: order; only 1: order; only 1: order; only 1: intuition; only 1: left; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_sym	40	0.429570	477	79	0.6.1.5.3	synth with cache (only 1: intro; only 1: intro x; only 1: intros; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_trans	40	0.015929	3	3	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	40	0.494782	75	45	0.0.0.0.0.0.0.1.0	synth with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	40	10.364170	4254	1192	1.2.4.9	synth with cache (only 1: intros z Base Step; only 1: apply lt_le_incl; only 1: rewrite lt_succ_r; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	40	0.041557	8	5	0.1.0.1.1	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	40	0.020922	1	1	0	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	40	0.067235	18	8	0.0.4.0	synth with cache (only 1: intros n m H; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now left).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	40	0.043489	8	5	0.1.0.1.1	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order)).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	40	0.094569	12	7	0.4.0	synth with cache (only 1: split; only 1: solve_max; only 1: solve_max).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	40	0.020756	1	1	0	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	40	0.166231	18	11	2	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.introTn	40	40.207021	21044	1162
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qpower_comp	40	40.048320	9837	1168
coq-tactician-stdlib.8.12.dev	Coq.Program.Combinators.prod_curry_uncurry	40	40.375639	159729	5994
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyClasses.mkapp2	40	0.061738	51	8	1.9	synth with cache (only 1: subst; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyClasses.mkapp	40	0.015725	8	2	6.0	synth with cache (only 1: subst; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyClasses.mkrel	40	0.013972	7	2	5.0	synth with cache (only 1: subst; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_is_Glb	40	40.096467	28595	4574
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.equal_f	40	0.208322	204	37	0.11.0	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.019018	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Streams.Str_nth_tl_plus	40	40.102552	32077	7605
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	40	40.142750	10432	2123
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	40	0.063762	11	8	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_pos_bound a b); only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40	4.869494	1304	660	1.4.5.0	synth with cache (only 1: intros; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_distributes	40	40.067958	18783	4967
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.setcover_intro	40	0.029925	10	4	0.1.1	synth with cache (only 1: intro; only 1: intros x y z H' H'0; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	40	40.067351	17650	4844
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.StrictOrder_PreOrder	40	40.087273	11318	982
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.gcd_greatest	40	40.070766	18990	4172
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.one_IZR_lt1	40	40.070479	21892	2512
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep1_dep	40	8.477645	23900	1411	0.59.0	synth with cache (only 1: destruct 1; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	40	40.082106	26453	3864
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_dep1	40	0.954771	1885	184	2.26.0	synth with cache (only 1: destruct 1; only 1: exists eq_refl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	40	40.140490	48476	5790
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyClasses.and_morph	40	6.869102	9513	1864	4.1.0.0.1.2.0.0.0.0.7	synth with cache (only 1: intro H; only 1: intros A B C [H1 H2] [H3 H4]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: auto; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyClasses.or_morph	40	0.162188	6	4	0.0.2.0	synth with cache (only 1: intros; only 1: split; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyClasses.impl_morph	40	0.030107	2	2	0.0	synth with cache (only 1: intros; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyClasses.iff_morph	40	0.062467	2	2	0.0	synth with cache (only 1: intros; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyClasses.not_morph	40	0.019290	2	2	0.0	synth with cache (only 1: intros; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyClasses.eq_iff	40	0.066903	61	22	0.0.1.5	synth with cache (only 1: intros A B []; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyClasses.rew_iff	40	0.013004	5	2	1.2	synth with cache (only 1: intro p; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.ins_arb	40	40.049107	13786	3026
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	40	40.064974	9391	3378
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40	40.039554	10599	1882
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	40	40.075756	9092	1716
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_div_eucl_remainder	40	40.194680	34292	3737
coq-tactician-stdlib.8.12.dev	Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40	40.465128	208937	5835
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40	40.040788	9455	3311
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_mapsto_iff	40	40.075744	23215	3917
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40	40.061313	15474	3389
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	40	40.036862	8793	2675
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	8.160227	18230	1286	4.39.13	synth with cache (only 1: intros ? ? ? Fl Fr; only 1: inversion 1; only 1: apply eq_dep_intro).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40	40.203672	28663	3734
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	0.298766	199	32	3.10	synth with cache (only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	40	40.157894	21786	3412
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40	40.081310	21698	3681
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.paradox	40	40.146045	59449	2634
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	40	40.039986	11071	2393
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.wf_disjoint_sum	40	40.105947	31771	7324
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	40	13.828403	3705	1315	3.1.1.6.3.0	synth with cache (only 1: intros; only 1: symmetry; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40	1.660211	2165	256	0.10.0.0.14.2	synth with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.025325	3	3	0.0.0	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	0.021055	10	3	0.1	synth with cache (only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.SuccNat2Pos.pred_id	40	40.135706	18361	4413
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40	3.267626	795	393	1.2.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n m Hn; only 1: split; only 1: intros EQ; only 1: apply lcm_unique_alt; only 1: trivial; only 1: intros q; only 1: split; only 1: split; only 1: now transitivity m; only 1: trivial; only 1: now destruct 1; only 1: intros EQ; only 1: rewrite <- EQ; only 1: trivial using divide_lcm_l).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.treesort_twist1	40	40.055627	13007	5118
coq-tactician-stdlib.8.12.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel_left	40	40.054654	12812	6332
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	40	40.047491	12720	3977
coq-tactician-stdlib.8.12.dev	Coq.Logic.StrictProp.Spr1_inj	40	4.584774	20277	690	1.47.17.34	synth with cache (only 1: destruct b; only 1: simpl in *; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40	2.308027	2397	316	0.11.0.0.15.0	synth with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Bool.DecBool.ifdec_left	40	2.156789	2154	443	0.0.1.2.6.3	synth with cache (only 1: unfold not; only 1: destruct H; only 1: reflexivity; only 1: intros H ?; only 1: destruct H; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40	40.045852	11307	3130
coq-tactician-stdlib.8.12.dev	Coq.Bool.Sumbool.sumbool_of_bool	40	1.172790	2487	202	18.0.15.0	synth with cache (only 1: intro H; only 1: destruct H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Sumbool.bool_eq_rec	40	0.074551	45	12	1.1.4	synth with cache (only 1: destruct b; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Sumbool.bool_eq_ind	40	0.019451	3	3	0.0.0	synth with cache (only 1: destruct b; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	40	40.056651	14748	3681
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	40	40.100542	25659	4364
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.and_hprop	40	40.275406	109973	9054
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.impl_hprop	40	0.016238	4	4	0.0.0.0	synth with cache (only 1: intros A P H p q; only 1: apply functional_extensionality_dep; only 1: intro x; only 1: apply H).
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.false_hprop	40	0.008855	2	2	0.0	synth with cache (only 1: intros p q; only 1: destruct p, q).
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.true_hprop	40	0.012760	8	3	4.1.0	synth with cache (only 1: intros p q; only 1: destruct p, q; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.not_hprop	40	0.022163	7	5	0.0.1.1.0	synth with cache (only 1: intros p q; only 1: intro x; only 1: apply functional_extensionality; only 1: intros; only 1: contradiction).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.SortA_equivlistA_eqlistA	40	40.098048	33473	3601
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolEq.Bool_eq_dec.eq_dec	40	40.115266	37843	5053
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40	40.099286	24323	8007
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40	16.499124	6189	877	0.17.10	synth with cache (only 1: intros p n m; only 1: rewrite add_comm; only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).
coq-tactician-stdlib.8.12.dev	Coq.Bool.DecBool.ifdec_right	40	7.891863	4267	2006	1.10.1.0.0	synth with cache (only 1: intros; only 1: case H; only 1: intro; only 1: contradiction; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_not_Empty	40	40.199413	70932	9021
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.not_Empty_Add	40	0.533645	242	87	0.1.2.1.1.0	synth with cache (only 1: intros A x; only 1: red; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Bijections.bij_inj	40	40.311651	128412	7711
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_inv	40	0.017280	5	3	1.0.1	synth with cache (only 1: intros B C H'; only 1: rewrite H'; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_intro	40	0.017111	3	3	0.0.0	synth with cache (only 1: intros x y H'; only 1: elim H'; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Union_inv	40	0.581123	277	70	1.1.2.5	synth with cache (only 1: intros A x; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Berardi.Berardis_paradox.AC_IF	40	40.284420	117674	7428
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	40	40.055100	11786	3299
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.lt_not_eq	40	40.052423	12582	1152
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.in_remove	40	40.058705	16661	4179
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	40	40.150780	10424	1590
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n	40	40.208401	69001	8174
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.EqdepDec.K_dec_on	40	40.202458	89815	2745
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	40	40.098511	13741	1298
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.pred_Sn	40	0.026581	8	5	2.0.0.0.1	synth with cache (only 1: induction n; only 1: simpl; only 1: split; only 1: simpl; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.not_eq_S	40	0.068870	45	14	0.8	synth with cache (only 1: intro H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.O_S	40	0.110929	82	21	10	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.n_Sn	40	0.036283	23	8	3.1.2	synth with cache (only 1: induction n; only 1: discriminate; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.plus_n_O	40	0.116088	71	21	0.1.0.7	synth with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.plus_O_n	40	0.030895	5	5	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.plus_n_Sm	40	0.098926	36	14	1.0.1.4	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.plus_Sn_m	40	0.038720	6	6	0.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.mult_n_O	40	0.029468	6	5	1.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Permut.Axiomatisation.cong_congr	40	40.223406	85922	4505
coq-tactician-stdlib.8.12.dev	Coq.Sets.Permut.Axiomatisation.comm_right	40	0.045793	10	6	3.1.0	synth with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Permut.Axiomatisation.comm_left	40	0.025005	5	3	0.2.0	synth with cache (only 1: intros; only 1: apply cong_left; only 1: apply op_comm).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	40	40.062439	3120	1071
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_alt.adapt_injective	40	40.064645	24658	2033
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	40	40.055348	16253	2950
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	40	0.064007	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	40	0.080731	4	3	0.0.1	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.introFn	40	40.250896	14564	551
coq-tactician-stdlib.8.12.dev	Coq.Logic.PropFacts.injection_is_involution_in_Prop	40	40.531396	242337	8497
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40	22.483518	22546	2872	0.1.5.27.1.5.3.4.2.0.0	synth with cache (only 1: split; only 1: intro; only 1: dependent rewrite H; only 1: exists eq_refl; only 1: reflexivity; only 1: intro; only 1: apply eq_existT_uncurried; only 1: destruct H; only 1: subst; only 1: exists eq_refl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_sigT_fst	40	0.033795	17	7	0.1.1.0	synth with cache (only 1: intros; only 1: change x2 with (projT1 (existT P x2 H2)); only 1: destruct H; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.functional_extensionality	40	40.504783	226262	4094
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Streams.Str_nth_plus	40	40.115606	37103	6427
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	40	40.063660	4851	1858
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	40	0.056404	9	6	1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: now destruct (mod_pos_bound a b)).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Disjoint_Intersection	40	40.085837	23435	6338
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_l	40	0.011802	1	1	0	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_r	40	0.016804	2	2	0.0	synth with cache (only 1: intros; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40	40.073482	16978	5281
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.StrictOrder_PartialOrder	40	40.069299	17417	2393
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_l	40	0.753430	315	113	0.0.1.0.1.1.1.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_r	40	0.320133	68	36	0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.gcd_nonneg	40	40.075193	21179	4222
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.one_IZR_r_R1	40	40.081396	26207	3319
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT_eta	40	1.297097	4498	201	0.59	synth with cache (only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	40	40.040397	4907	1372
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig_eta	40	0.017469	2	2	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT2_eta	40	0.019807	3	2	0.1	synth with cache (only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig2_eta	40	0.020803	2	2	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.exists_to_inhabited_sig	40	0.345475	570	66	0.0.2.10.4	synth with cache (only 1: intro; only 1: destruct H; only 1: split; only 1: exists x; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	40	40.164898	54840	8159
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.add_rb	40	40.080692	26189	3867
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40	40.098231	9807	2138
coq-tactician-stdlib.8.12.dev	Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40	40.299333	121204	6704
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40	40.059742	17924	3036
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	40	23.261977	7315	1187	0.12.14	synth with cache (only 1: intros p n m; only 1: rewrite add_comm; only 1: now rewrite (sub_le_mono_r _ _ p), add_simpl_r).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.mod_lt	40	40.083580	26313	3470
coq-tactician-stdlib.8.12.dev	Coq.Bool.Sumbool.connectives.sumbool_and	40	29.749092	90915	6342	0.0.1.1.0.11.0.0.0.7.24.21	synth with cache (only 1: destruct H2; only 1: elim H1; only 1: left; only 1: split; only 1: assumption; only 1: assumption; only 1: right; only 1: left; only 1: assumption; only 1: right; only 1: right; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Sumbool.connectives.sumbool_or	40	0.038317	7	7	0.0.0.0.0.0.0	synth with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Sumbool.connectives.sumbool_not	40	0.033642	7	7	0.0.0.0.0.0.0	synth with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40	40.196136	76231	6333
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	40	40.058277	10288	1801
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.treesort_twist2	40	33.240391	11675	4302	2.1.1.1.4.0.0.0.0.0.1	synth with cache (only 1: unfold seq; only 1: intros; only 1: apply seq_trans with (union x (union (union y z) t)); only 1: apply seq_right; only 1: apply seq_left; only 1: trivial; only 1: apply seq_sym; only 1: apply seq_trans with (union (union x (union y z)) t); only 1: apply seq_left; only 1: apply union_perm_left; only 1: apply union_ass).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_in_iff	40	40.070395	21200	4205
coq-tactician-stdlib.8.12.dev	Coq.Init.Wf.Well_founded.Acc_inv	40	0.069408	35	14	2.4.0	synth with cache (only 1: intro; only 1: destruct 1; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.inhabited_sig_to_exists	40	6.203701	44275	929	0.0.0.68.47	synth with cache (only 1: intro H1; only 1: elim H1; only 1: intros [x y]; only 1: exists x; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT.eq_existT_uncurried	40	0.032800	4	4	0.0.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_xO_discr	40	40.203788	26136	4340
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40	40.069750	18255	3927
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.testbit_even_succ'	40	40.154360	20796	3800
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractToNegativeProp.Paradox.paradox	40	40.275269	117267	4887
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	40	40.047042	10247	1831
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	40	40.138751	56683	2065
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	40	0.047268	8	3	0.5.0	synth with cache (only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.SuccNat2Pos.inj	40	40.180710	42232	4196
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	40	40.065768	15161	4604
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	40	0.051555	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	40	3.203591	484	273	1.2.3.0	synth with cache (only 1: intros a b n Hn; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive	40	40.050153	11307	6192
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	40	40.042370	12104	3126
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	40	0.010973	3	2	1.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	40	0.011412	2	2	0.0	synth with cache (only 1: destruct 2; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	40	0.011929	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	40	0.031898	13	6	0.0.0.0.1	synth with cache (only 1: red; only 1: intros h1 h2; only 1: apply h1; only 1: destruct h2; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic_Type.identity_ind_r	40	0.028038	20	5	0.0.4	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic_Type.identity_rec_r	40	0.015828	3	3	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic_Type.identity_rect_r	40	0.016736	3	3	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40	40.040008	9768	2030
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	40	0.137001	12	5	0.2.0	synth with cache (only 1: intros; only 1: rewrite add_comm; only 1: now rewrite add_sub_swap, sub_diag, add_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	40	1.573446	319	125	0.0.0.0.6	synth with cache (only 1: intros a b Hb Hab; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now rewrite mul_comm; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	40	40.067534	15282	4608
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	40	40.076148	16819	5219
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.SuccNat2Pos.inj_iff	40	3.784383	970	448	5.0.0.0.0.0.1	synth with cache (only 1: split; only 1: intro H; only 1: apply (f_equal Pos.to_nat) in H; only 1: rewrite !id_succ in H; only 1: now injection H; only 1: intro H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.hset_hprop	40	40.306494	130470	8886
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40	16.390801	93372	610
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	40	0.018500	2	2	0.0	synth with cache (only 1: intros H; only 1: now apply compare_eq_iff).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	40	0.064154	11	9	2.0.0.0.0.0	synth with cache (only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Filter.filter_sort	40	40.055705	15978	3074
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40	40.092487	24952	8060
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_lemma	40	40.170552	62097	5586
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	40	8.805196	2754	990	0.0.0.3.2.0.0.0.1.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	40	16.731563	4298	1067	0.5.13.0	synth with cache (only 1: intros n m p; only 1: revert n m; only 1: symmetry; only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Bijections.bij_can_sym	40	40.358315	147895	3977
coq-tactician-stdlib.8.12.dev	Coq.Init.Byte.of_bits_to_bits	40	40.835001	408094	4043
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_inv	40	40.090450	25111	7031
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Intersection_inv	40	0.018316	3	3	0.0.0	synth with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Berardi.Berardis_paradox.Retracts.AC	40	40.133940	47813	7710
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Couple_inv	40	0.392580	96	61	0.2.0.1.0.0	synth with cache (only 1: intros A x y H'; only 1: induction H'; only 1: left; only 1: trivial with sets; only 1: right; only 1: trivial with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Setminus_intro	40	0.015352	3	2	1.0	synth with cache (only 1: intros B C x H'; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	2.968979	663	273	1.0.0.0.6.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_intro	40	0.013704	3	2	1.0	synth with cache (only 1: intros B C H'; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	40	40.060842	16651	2360
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40	4.263376	2075	786	0.0.0.0.0.2.0.0.0.0.2.0	synth with cache (only 1: intuition; only 1: red; only 1: intros x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: apply T1 with y0; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_strict	40	0.899415	1166	193	3.6.7	synth with cache (only 1: red; only 1: destruct 1; only 1: auto using Noone_in_empty with sets).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.in_in_remove	40	40.067886	20205	4544
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Conjunction.proj1	40	0.000627	0	1
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Conjunction.proj2	40	0.002095	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Equivalence.iff_refl	40	0.001173	2	1
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Equivalence.iff_trans	40	0.013890	34	12	2.2.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Equivalence.iff_sym	40	0.003623	5	4	0.0.0.1	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.and_iff_compat_l	40	0.169560	639	178	2.0.2.0.2.0.1.0.0.3	synth with cache (only 1: destruct 1; only 1: split; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	40	40.063648	6153	1220
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.and_iff_compat_r	40	0.122161	257	102	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply Hl; only 1: assumption; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply Hr; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n_iff	40	40.121222	41419	8555
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.or_iff_compat_l	40	0.261640	1035	124
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.EqdepDec.inj_right_pair_on	40	40.171242	72515	2596
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_tn1_trans	40	0.547106	194	97	0.2.2.0.0.0.0	synth with cache (only 1: induction 1; only 1: left; only 1: auto; only 1: right with y; only 1: auto; only 1: left; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.or_iff_compat_r	40	0.687801	1363	363	0.1.0.0.1.0.0.1.0.0.1.0.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: apply Hl; only 1: assumption; only 1: right; only 1: assumption; only 1: intros [?| ?]; only 1: left; only 1: apply Hr; only 1: assumption; only 1: right; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.imp_iff_compat_l	40	0.289388	947	107	9.9.2.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40	40.085762	29130	2895
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.imp_iff_compat_r	40	1.166200	2842	579	10.10.0.9	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.not_iff_compat	40	0.011068	6	4	1.1.0.0	synth with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.neg_false	40	0.357785	823	149	1.1.11.0.1.0	synth with cache (only 1: split; only 1: split; only 1: auto; only 1: destruct 1; only 1: intros [? ?]; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.mult_n_Sm	40	40.188273	66259	7365
coq-tactician-stdlib.8.12.dev	Coq.Sets.Permut.Axiomatisation.perm_right	40	40.160446	59759	4787
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_alt.adapt_ok	40	40.058439	13180	1788
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40	6.943367	2258	663	0.2.0.6.4.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: destruct_max n; only 1: trivial; only 1: now rewrite opp_nonneg_nonpos; only 1: assert (LE : 0 <= abs n) by apply abs_nonneg; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: now apply divide_abs_l; only 1: intros p Hn Hm; only 1: now apply divide_abs_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	40	40.077310	4979	1664
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	40	40.046037	12250	4035
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.elimT	40	40.215174	54554	1434
coq-tactician-stdlib.8.12.dev	Coq.Init.Tactics.decide_left	40	40.266979	110497	8343
coq-tactician-stdlib.8.12.dev	Coq.Init.Tactics.decide_right	40	0.021560	6	4	1.1.0.0	synth with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	2.235093	802	348	0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply min_l; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply min_r).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_sigT_snd	40	40.053414	11068	4660
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_sig_fst	40	0.671737	459	141	1.1.6.0	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: destruct H; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Streams.EqSt_reflex	40	40.273688	65592	6824
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40	40.028354	6397	2135
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	40	0.082834	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	40	0.034765	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.forall_extensionality	40	40.736997	339188	3940
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	40	0.148070	36	21	0.0.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	0.017557	3	3	0.0.0	synth with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	0.042211	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	0.018295	3	3	0.0.0	synth with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40	40.046020	11820	2407
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.star_monotone	40	13.653961	5823	2681	0.0.5.3.0.0.0.0	synth with cache (only 1: unfold contains; only 1: intros U R S H' x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	40	0.047011	3	3	0.0.0	synth with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_l	40	40.063549	16936	4955
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Streams.sym_EqSt	40
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.ggcd_opp	40	40.097288	27036	3399
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.single_z_r_R1	40	40.056863	10574	3153
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	40	40.035913	4618	1342
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_of_N	40	1.457751	502	238	0.0.1.0.0.0.0.0.0.0.1.0.0.0.0.0.1	synth with cache (only 1: destruct a as [| [a| a| ]], n as [| n]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.append_arb_rb	40	40.043870	11685	3448
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.del_arb	40	0.014722	3	2	1.0	synth with cache (only 1: invrb; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	40	40.056233	9475	2401
coq-tactician-stdlib.8.12.dev	Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40	40.104924	31947	6255
coq-tactician-stdlib.8.12.dev	Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	0.055205	41	9	6.0.0	synth with cache (only 1: intros Ext A P Q Eq; only 1: intros x; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_of_N'	40	2.680511	1161	411	0.0.0.0.0.0.1.0.0.1.0.2	synth with cache (only 1: intros EQ; only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	40	40.088267	8007	1473
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.mod_bound_pos	40	40.164474	13146	3222
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	40	40.074450	22147	2962
coq-tactician-stdlib.8.12.dev	Coq.Bool.Sumbool.bool_of_sumbool	40	40.465309	196452	7652
coq-tactician-stdlib.8.12.dev	Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40	40.518403	239954	6048
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_mapsto_iff	40	40.090631	28465	3888
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.eq_trans_cancel	40	30.006832	61899	5428	0.20.10.8.14	synth with cache (only 1: unfold eq_trans, eq_sym, eq_ind; only 1: intros A B f g <- H; only 1: destruct r, 1; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Wf.Well_founded.well_founded_induction_type	40	40.642799	298456	5923
coq-tactician-stdlib.8.12.dev	Coq.Init.Wf.Well_founded.well_founded_induction	40	0.024368	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Wf.Well_founded.well_founded_ind	40	0.025128	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_Zpos	40	3.451293	1662	359	1.4.1.4.0.4.0	synth with cache (only 1: intro Hn; only 1: destruct a as [| a| a]; only 1: simpl; only 1: now destruct n; only 1: simpl; only 1: now destruct n; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	40	0.694232	967	74	1.29	synth with cache (only 1: intros f [x]; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT.eq_sigT_uncurried	40	40.472272	221226	5433
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT.eq_existT_curried	40	0.027725	3	3	0.0.0	synth with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT.eq_existT_curried_map	40	0.034411	2	2	0.0	synth with cache (only 1: destruct p, q; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_reg_r	40	40.097563	17547	5262
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.shiftr_specif	40	40.084931	10799	5920
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.MParadox.mparadox	40	40.149200	55217	7016
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	40	28.974171	7918	1797	0.24	synth with cache (only 1: symmetry; only 1: now rewrite (sub_le_mono_r _ _ p), add_simpl_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	40	40.016737	3338	1653
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	0.029121	4	3	1.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	40	0.024832	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	40	40.166844	60848	3743
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.054649	13	5	0.2.0	synth with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl, lt_0_1).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	40	0.190232	61	19	0.3.1.0.1	synth with cache (only 1: transitivity 1; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite two_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40	40.049300	13544	3913
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	40	40.033244	7642	1499
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	40	40.042821	9290	3140
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	0.252834	70	19	1.2.0.2	synth with cache (only 1: nzinduct m; only 1: now nzsimpl; only 1: intro; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.andb_prop	40	40.410374	178244	12261
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	0.023039	2	2	0.0	synth with cache (only 1: intros; only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	40	40.045738	10922	3025
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40	40.032665	7803	1917
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.SuccNat2Pos.inv	40	40.111516	42559	4187
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.SuccNat2Pos.inj_succ	40	0.035398	4	4	0.0.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40	2.128412	305	151	0.0.1.4	synth with cache (only 1: intros a b Hb Hab; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT.eq_existT_curried_trans	40	9.032647	10951	926	0.43.0	synth with cache (only 1: destruct p, q; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40	40.069923	16893	5707
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Filter.filter_InA	40	40.036296	9877	2196
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.andb_true_intro	40	5.586350	16668	1297	0.0.4.17.28	synth with cache (only 1: intro H; only 1: destruct 1; only 1: destruct H; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_image	40	40.202568	73004	7001
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	40	4.810243	1349	484	0.0.4.1.0.4	synth with cache (only 1: intros a b Hb Hab; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: rewrite !(add_comm a); only 1: reflexivity; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.eq_true_ind_r	40	1.312799	5830	340	1.14.32.0	synth with cache (only 1: intro; only 1: intro A; only 1: destruct 2; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_image	40	0.726363	455	105	0.0.0.13.0	synth with cache (only 1: intros; only 1: intro x; only 1: apply (Acc_lemma (f x)); only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.eq_true_rec_r	40	0.011251	3	3	0.0.0	synth with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.eq_true_rect_r	40	0.011781	3	3	0.0.0	synth with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.surjective_pairing	40	0.028774	20	6	0.7	synth with cache (only 1: intros A B [H1 H2]; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT.eq_existT_curried_congr	40	5.524826	4917	422	0.9.21	synth with cache (only 1: destruct 1; only 1: destruct r, q, p; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Bijections.bij_can_eq	40	40.351153	143804	4615
coq-tactician-stdlib.8.12.dev	Coq.Init.Byte.to_bits_of_bits	40	40.061370	23015	1993
coq-tactician-stdlib.8.12.dev	Coq.Logic.Berardi.Berardis_paradox.L1	40	40.263784	110237	9380
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	40	40.082037	23781	3299
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40	33.727022	8982	3637	0.0.6.4.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: destruct_max n; only 1: trivial; only 1: now rewrite opp_nonneg_nonpos; only 1: now apply divide_abs_l; only 1: assert (LE : 0 <= abs n) by apply abs_nonneg; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: intros p Hn Hm; only 1: now apply divide_abs_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	40	28.165076	5696	3395	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.remove_remove_comm	40	40.142674	18385	4627
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	40	40.068996	19543	3527
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.K_dec_type	40	40.261460	108710	8843
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1	40	40.093040	28100	8541
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	0.347018	162	63	1.0.0.0.0.0.0.2.0	synth with cache (only 1: intros A eq_dec x P H p; only 1: elim p using K_dec; only 1: intros; only 1: case (eq_dec x0 y); only 1: left; only 1: assumption; only 1: right; only 1: assumption; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	40	40.050187	13710	3123
coq-tactician-stdlib.8.12.dev	Coq.Logic.Berardi.Berardis_paradox.retract_pow_U_U	40	4.383571	42462	409
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.and_cancel_l	40	40.419524	177973	14038
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_cancel_r	40	0.296477	39	21	0.4.0.0	synth with cache (only 1: split; only 1: revert q r; only 1: apply mul_reg_r; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	40	4.468205	1348	594	0.0.5.0.1.1	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_bound_or; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.le_pred	40	40.123808	33987	8987
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.305387	46	23	0.1.2.0	synth with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Permut.Axiomatisation.perm_left	40	40.041927	8839	5229
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error	40	40.081885	30092	2719
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	40	40.065071	6400	1558
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.elimF	40	40.176984	23030	1189
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_eq_1_l	40	3.354076	1491	446	0.0.0.0.0.2.0.0.1.0.0.2.0.0	synth with cache (only 1: destruct p; only 1: intros; only 1: reflexivity || apply f_equal || exfalso; only 1: contradict H; only 1: induction q; only 1: discriminate; only 1: rewrite mul_xO_r; only 1: intro H; only 1: discriminate; only 1: discriminate; only 1: intros; only 1: destr_eq H; only 1: intro; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0.214976	16	4	0	synth with cache (only 1: now destruct p, q).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.square_xO	40	0.052337	25	7	1.5.0	synth with cache (only 1: simpl; only 1: f_equal; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	40	40.031129	4913	1533
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_sig_snd	40	40.053814	12073	4434
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40	40.851743	396038	4023
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	40	13.102425	3649	1522	0.0.0.5.0.0.0.0.4.1.0	synth with cache (only 1: intros; only 1: rewrite <- lcm_abs_r; only 1: apply lcm_unique; only 1: destruct_max n; only 1: trivial; only 1: now rewrite opp_nonneg_nonpos; only 1: now apply divide_abs_l; only 1: destruct_max n; only 1: apply divide_refl; only 1: auto with relations; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40	40.087756	27664	7107
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	40	40.045339	10201	2264
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	40	0.067559	3	3	0.0.0	synth with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_r	40	40.048864	10883	4749
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Streams.trans_EqSt	40	40.080270	22100	8870
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep1_eq_on	40	3.185268	6143	408	23.1.6.28	synth with cache (only 1: intro x; only 1: destruct 1 as (eq_qp, H); only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40	1.589151	10557	138
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.tech_single_z_r_R1	40	40.050390	16310	1841
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_le_pos	40	0.165640	37	18	0.0.0.1	synth with cache (only 1: intros; only 1: replace 0 with (0 * r2); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.remove_remove_eq	40	40.106242	21168	4782
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	40	40.115721	6741	1971
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1_iff	40	14.292682	14869	3189	0.0.0.0.0.0.8.0.0.0.0.0.0.0.0.0.0.0.8.0	synth with cache (only 1: split; only 1: induction 1; only 1: left; only 1: auto; only 1: elim IHclos_trans2; only 1: intro y0; only 1: right with y; only 1: auto; only 1: auto; only 1: intros; only 1: right with y0; only 1: auto; only 1: auto; only 1: induction 1; only 1: left; only 1: auto; only 1: right with y; only 1: auto; only 1: left; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_step	40	0.377485	606	62	0.0.5.17	synth with cache (only 1: intros; only 1: right with y; only 1: auto; only 1: left).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.and_cancel_r	40	12.639443	16429	3904	0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros A B C Hl Hr; only 1: split; only 1: intros [HypL HypR]; only 1: split; only 1: intros; only 1: apply HypL; only 1: split; only 1: assumption; only 1: apply Hl; only 1: assumption; only 1: intros; only 1: apply HypR; only 1: split; only 1: assumption; only 1: apply Hr; only 1: assumption; only 1: intros [HypL HypR]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply HypL; only 1: assumption; only 1: apply Hl; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply HypR; only 1: assumption; only 1: apply Hr; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_step	40	0.748391	1215	119	0.0.8.12.12	synth with cache (only 1: intro y0; only 1: intros; only 1: right with y0; only 1: auto; only 1: left).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.and_comm	40	0.153720	72	48	0.0.0.0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_rt	40	0.143546	72	23	0.0.5.0.0	synth with cache (only 1: induction 1; only 1: constructor 2; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	40	40.095617	11388	3580
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.remove_rb	40	40.078232	25188	4043
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_zero_rb	40	0.154318	323	19	25	synth with cache (only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40	40.211378	78587	8553
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	40	40.086009	6600	1866
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.sqrtrem_sqrt	40	40.088561	27737	4262
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	40	40.036734	6927	1388
coq-tactician-stdlib.8.12.dev	Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40	40.206227	82438	5632
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	40	0.257931	51	16	0.6.0	synth with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!even_spec; only 1: now rewrite Even_succ, Odd_succ).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_in_iff	40	40.107097	34302	4796
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	40	0.325324	77	21	0.7.0	synth with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!odd_spec; only 1: now rewrite Odd_succ, Even_succ).
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.hset_hOneType	40	40.213173	87945	7505
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.elimN	40	40.124700	27245	1164
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_Zneg	40	40.091315	27562	3362
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.div2_spec	40	0.008896	8	1	7	synth with cache (only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_0_l	40	0.009094	6	1	5	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_neg_r	40	0.076841	39	9	9	synth with cache (only 1: now induction n).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.cardinal_m_Proper	40	0.606807	257	81	0.0.0.0.0.0.1.0.0.1	synth with cache (only 1: intros m m' Hm; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_Equal with (eqA := eq); only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	40	40.241594	96267	4690
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	40	13.380269	4683	1216	0.0.0.0.0.1.11	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order; only 1: order; only 1: intuition; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_reg_l	40	40.151243	20203	6104
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.shiftl_specif_high	40	40.137618	17956	4309
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	40	40.037597	8934	2220
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40	40.023350	3047	1443
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.Paradox.paradox	40	40.157802	59175	8466
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	40	40.063107	15962	4646
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	40	40.066988	20889	3877
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40	40.044067	10075	2383
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40	40.039285	9111	1754
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	40	40.028831	7693	1918
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.SuccNat2Pos.inj_compare	40	40.129941	45567	6232
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	40	40.092404	26027	5756
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	6.675999	3453	760	0.0.1.0.15.0	synth with cache (only 1: intros n m; only 1: nzinduct m n; only 1: now right; only 1: intro m; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	0.014085	1	1	0	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	40	0.021269	3	1	2	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.072444	13	9	0.0.2.0	synth with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Filter.filter_split	40	40.043946	12010	2716
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40	40.045551	11005	2559
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_rel	40	40.173482	57817	5372
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.injective_projections	40	40.259414	103325	8167
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	40	1.060821	143	58	0.0.0.2.0.0.0.0	synth with cache (only 1: intros a b c Hb Hc; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Permut.Axiomatisation.op_rotate	40	32.133913	6605	3646	0.8.5.1.0	synth with cache (only 1: intros; only 1: apply cong_sym; only 1: apply cong_trans with (op (op x y) z); only 1: apply op_comm; only 1: apply op_ass).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	3.809429	563	248	5.4.0.0	synth with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: generalize (le_gt_cases n m); only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	40	40.239523	103189	5380
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.BijectionsTheory.eq_bij	40	40.350834	138012	4417
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	40	40.056202	15895	2525
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.remove_length_le	40	40.068515	19820	4586
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	40	40.093767	27530	4893
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40	12.522454	2803	727	0.0.3.0.0.1.1.1.3.1.0	synth with cache (only 1: intros n m p; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: rewrite add_comm; only 1: apply add_move_l; only 1: rewrite <- 2!add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: rewrite opp_succ, opp_pred; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	40	40.244977	92537	8201
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	40	40.044562	10703	3327
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	40	1.645600	447	117	2.10.0	synth with cache (only 1: intros n m p; only 1: rewrite add_comm; only 1: apply add_add_simpl_l_l).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Berardi.Berardis_paradox.not_has_fixpoint	40	40.941131	448982	4318
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	40	40.085133	14341	3890
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.le_S_n	40	40.243405	81000	12121
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.le_0_n	40	0.015018	6	3	0.1.2	synth with cache (only 1: induction n; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.le_n_S	40	0.050845	25	10	1.1.0.0.1	synth with cache (only 1: induction 1; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Berardi.Berardis_paradox.classical_proof_irrelevance	40	1.224098	10557	138
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.nat_case	40	0.840329	1010	140	1.0.8.10	synth with cache (only 1: intros n m; only 1: induction n; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	40	40.090273	13769	2960
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error_bis	40	40.019050	4066	1996
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.nat_double_ind	40	2.094005	3110	455	1.1.17.1.1.1	synth with cache (only 1: induction n; only 1: intro p; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.elimNf	40	40.341020	41614	1214
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.square_xI	40	40.088913	17715	3974
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	40	15.030330	5956	1525	3.7.0.4.5.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with (a mod b); only 1: now apply mod_always_pos; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	0.138773	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40	40.059864	6816	2894
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.Lemma1	40	40.065943	18121	7760
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	40	40.074190	23525	2952
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Disjoint_noop	40	40.065674	17215	4764
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Streams.eqst_ntheq	40	40.064888	15278	9051
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep_eq_on	40	40.296923	112357	6155
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_le_contravar	40	40.032739	7722	2314
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40	40.624772	289452	2715
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.remove_length_lt	40	40.119890	26557	5244
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Included_empty	40	1.537590	585	214	1.0.0.2.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: unfold In in *; only 1: exfalso; only 1: inversion_clear H1; only 1: contradict H; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.iter_swap	40	6.965517	7158	848	0.10.0.0.0.0.0.17	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: intros; only 1: simpl; only 1: now rewrite ?H, ?IHp; only 1: intros; only 1: simpl; only 1: now rewrite ?H, ?IHp; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	40	40.093526	8656	1383
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.and_assoc	40	40.248806	93653	9406
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n	40	40.181269	66779	8514
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	40	40.106934	13837	6420
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	40.094118	34596	2797
coq-tactician-stdlib.8.12.dev	Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	40.301882	118527	9138
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	40	40.050509	7315	3004
coq-tactician-stdlib.8.12.dev	Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	0.025094	18	5	5.0	synth with cache (only 1: intros Ext A Ha; only 1: now apply Ext).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.sqrtrem_spec	40	40.221488	38294	3958
coq-tactician-stdlib.8.12.dev	Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40	40.146298	52964	5552
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	40	40.053376	13960	2519
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.hprop_hprop	40	40.121914	45900	8138
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.count_occ_nil	40	0.016420	4	2	2.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_odd_0	40	40.100044	34681	2429
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.elimTn	40	40.289784	39279	1803
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40	40.068143	19416	2511
coq-tactician-stdlib.8.12.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	40	40.094492	34093	2097
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	40	40.074528	25730	2519
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	5.781509	861	326	0.0.9.0	synth with cache (only 1: intros; only 1: apply NZQuot.div_pos; only 1: order; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40	40.191953	13985	5037
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.iter_swap_gen	40	40.101772	33101	3635
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	40	40.041079	11259	2673
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40	40.036421	8459	2086
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractFromTypeToProp.Paradox.paradox	40	40.332951	151282	8403
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_even_0	40	3.821820	4690	368	3.3.46	synth with cache (only 1: destruct (N.le_gt_cases a 0) as [Ha| Ha]; only 1: now destruct a; only 1: now destruct a).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.up_down	40	1.648879	3603	217	2.46	synth with cache (only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	40	40.049077	13870	3177
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	40	40.043995	12514	2515
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40	40.069156	11794	3097
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Equivalences.eq_dep_eq_on__UIP_on	40	16.172217	45380	2294	0.4.21.37.1.10	synth with cache (only 1: red; only 1: intros h1 h2; only 1: subst; only 1: apply h1; only 1: destruct h2; only 1: apply eq_dep_intro).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	0.077430	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_sgn x; only 1: apply sgn_pos; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Equivalences.UIP_on__UIP_refl_on	40	0.413090	496	90	11.0.0.0	synth with cache (only 1: intro eq_dep_eq; only 1: red; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_mult	40	40.122819	21895	2426
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	40	40.070499	20796	3695
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Find.findA_NoDupA	40	40.045372	13216	2820
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Equivalences.UIP_refl_on__Streicher_K_on	40	4.227068	6184	861	2.8.0.2.6.3	synth with cache (only 1: red; only 1: intro; only 1: intro UIP; only 1: intros; only 1: rewrite H; only 1: apply UIP).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Equivalences.Streicher_K_on__eq_rect_eq_on	40	0.859127	820	110	2.17.0	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_rel	40	40.087562	26532	6575
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.pair_equal_spec	40	40.289203	116352	10702
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n_iff	40	19.146472	16417	4103	0.0.0.0.0.11.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.9.1	synth with cache (only 1: split; only 1: induction 1; only 1: right with y; only 1: auto; only 1: left; only 1: left; only 1: generalize IHclos_refl_trans2; only 1: clear IHclos_refl_trans2; only 1: induction IHclos_refl_trans1; only 1: auto; only 1: right with y; only 1: auto; only 1: eapply IHIHclos_refl_trans1; only 1: apply clos_rt1n_rt; only 1: auto; only 1: auto; only 1: auto; only 1: induction 1; only 1: constructor 2; only 1: constructor 3 with y; only 1: constructor 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.rew_pair	40	0.014790	3	2	0.1	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Permut.Axiomatisation.twist	40	40.045809	8804	4321
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40	40.114213	13241	2859
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_rt	40	0.401267	168	81	0.2.2.0.0.0	synth with cache (only 1: induction 1; only 1: constructor 2; only 1: constructor 3 with y; only 1: auto; only 1: constructor 1; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	40	0.062954	8	4	0.0.3.1	synth with cache (only 1: intros; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT.eq_sigT_rect	40	40.326334	149503	3420
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT.rew_sigT	40	0.027706	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	40	0.738814	144	90	0.0.3.2	synth with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0.014703	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig.eq_exist_uncurried	40	0.143327	3	3	0.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct p, q; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	40	0.035696	7	5	0.0.0.2.0	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.BijectionsTheory.bij_comp	40	40.351129	137241	4370
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig.eq_sig_uncurried	40	0.059467	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	40	0.247876	43	20	0.1.3.0	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	40	0.013033	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0.012952	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.equivP	40	0.370321	225	17	0.20	synth with cache (only 1: intuition; only 1: by case : Pb ; constructor; auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40	40.048125	7065	1505
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	40	0.927705	196	70	0.0.0.6.0	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	0.431391	35	14	0.0.2.1.0	synth with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.count_occ_In	40	40.132014	22935	4334
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40	40.089726	26179	3435
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.count_occ_cons_eq	40	0.059468	9	6	1.0.0.0.2	synth with cache (only 1: simpl; only 1: intros Hnin; only 1: destruct (eq_dec x y); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.count_occ_cons_neq	40	0.032128	3	3	0.0.0	synth with cache (only 1: intros H; only 1: simpl; only 1: now destruct (eq_dec x y)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	40	1.039701	243	160	0.1.1.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: split; only 1: intro H; only 1: apply le_succ_l; only 1: order; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40	40.211174	80785	7123
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	40	40.045009	10443	2283
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	40	40.046705	11911	2981
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	40	0.741247	479	108	0.0.0.0.1.9	synth with cache (only 1: intros n m; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	40	40.099511	14644	3374
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	40	40.076960	9228	2233
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_alt.Permutation_nth	40	40.023160	5579	2015
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.max_l	40	40.157476	45358	9472
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.elimFn	40	40.351373	50972	1450
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	40	40.171227	51189	5572
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.max_r	40	3.757499	1866	794	0.0.0.0.5.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	40	40.046636	11606	2024
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	40	40.047922	4990	2398
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Streams.ntheq_eqst	40	40.157207	54035	10499
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.min_l	40	2.141765	840	410	0.0.0.0.0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: auto; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_Rinv	40	40.049233	11883	3850
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.count_occ_not_In	40	40.077142	7342	2376
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40	40.255027	106344	1866
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.iter_succ	40	40.176184	42997	4064
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40	40.035634	8938	2315
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40	0.476451	484	51	2.14.0.0	synth with cache (only 1: apply forall_eq_rect with (H := H); only 1: clear H g; only 1: rewrite functional_extensionality_dep_good_refl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	0.009873	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.eta_expansion	40	0.005551	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.min_r	40	2.751602	1008	493	0.0.0.0.2.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.or_cancel_l	40	40.245017	91656	9785
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	40	40.091940	10260	1877
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.or_comm	40	0.480810	337	133	0.0.0.1.0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40	40.062882	20634	2688
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.nat_rect_succ_r	40	0.959715	651	158	2.3.1.0.0.7	synth with cache (only 1: induction n as [| p H]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.rev_unit	40	15.460770	7414	2041	0.12.0.0.0.0.1.9	synth with cache (only 1: induction l; only 1: simpl; only 1: intros Hnin; only 1: auto; only 1: intros H; only 1: simpl; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	40	40.034549	7738	2977
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.nat_rect_plus	40	0.550433	230	76	0.0.1.3.1.0.0	synth with cache (only 1: intros ? ? ? Fl Fr; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite <- ?IHn; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.sqrt_spec	40	40.184470	12896	4046
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.introP	40	40.121516	26676	1023
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.sqrt_neg	40	0.021358	3	2	1.0	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40	40.100496	30984	7120
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.hprop_hset	40	40.185539	75490	8985
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	40	40.038104	7316	3850
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.count_occ_inv_nil	40	40.159121	22991	3970
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Partition_m_Proper	40	40.042817	11089	1848
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.iffP	40	40.205540	51346	1699
coq-tactician-stdlib.8.12.dev	Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	40	40.437142	195597	4514
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	40	40.070984	19655	3117
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	0.013717	3	2	0.1	synth with cache (only 1: apply min_l; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	40	40.116952	20113	4004
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	40	40.034015	8758	2940
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.iter_succ_r	40	40.143703	26858	5644
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.div2_bitwise	40	40.238032	8299	3216
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	40	40.036459	9407	1750
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_odd_succ	40	40.117422	12981	2910
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	40	24.471706	7870	1681	11.0.2.2.14	synth with cache (only 1: compute; only 1: intros a n m H; only 1: revert a m; only 1: intros m Hm; only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_even_succ	40	40.053734	13786	4105
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	40	40.055175	14091	4558
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.paradox	40	40.263467	111854	6494
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.rev_length	40	1.243423	286	150	1.1.0.0.0.0.0.0.2	synth with cache (only 1: induction l as [| y l IHl]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite app_length; only 1: simpl; only 1: rewrite <- plus_n_Sm, plus_n_O; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40	40.146958	8355	2355
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_succ_morphism	40	40.157834	23586	3541
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	40	40.053355	12408	4205
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.UIP_shift_on	40	40.181577	68094	7649
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Corollaries.eq_dep_eq_on__inj_pair2_on	40	0.036416	16	7	3.0.0	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.f_eq_dep	40	0.026219	12	4	1.2	synth with cache (only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.068478	28	13	0.1	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.iter_add	40	40.081330	23042	4875
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.007678	2	2	0.0	synth with cache (only 1: intros * []; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.comparison_eq_stable	40	40.367886	154264	12642
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.CompOpp_involutive	40	0.020424	6	5	0.0.0.0.1	synth with cache (only 1: intro H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1	40	40.115043	38070	8151
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.decP	40	0.171799	143	11	17	synth with cache (only 1: by case : Pb ; constructor; auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.rwP	40	0.120061	77	7	13	synth with cache (only 1: by case : Pb ; constructor; auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig.eq_sig_rect	40	40.293412	129417	3367
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.BijectionsTheory.bij_can_bij	40	40.335782	133449	4210
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.sumboolP	40	40.258282	40021	1068
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.CompOpp_inj	40	2.078587	2252	577	0.0.1.0.1.0.1.0.0.0.1.0.1.0.1.0.0.0.0	synth with cache (only 1: destruct c, c'; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	40	40.067936	3894	922
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	40	40.058705	13634	4575
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig.eq_sig_uncurried_iff	40	2.117070	899	239	6.4.0.0.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: apply eq_exist_uncurried).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig.rew_sig	40	0.028442	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.rev_app_distr	40	40.182243	31904	4925
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	40	40.095505	23545	4340
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.UIP_refl_unit	40	40.197403	76858	9637
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	40	40.044868	10783	1752
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40	40.052452	13398	3599
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	40	40.064637	15000	5028
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40	0.875652	372	138	0.2.3.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: intro H; only 1: apply le_le_succ_r, sqrt_nonneg; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	40	2.019812	493	104	0.12.0	synth with cache (only 1: intros n m p; only 1: rewrite (add_comm p m); only 1: now rewrite <- sub_sub_distr, sub_add_distr, sub_diag, sub_0_l, sub_opp_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	40	4.788431	1377	593	1.0.0.0.0.0.1.0.8	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: exists 0; only 1: now nzsimpl; only 1: exists 1; only 1: now nzsimpl; only 1: intro; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	40	0.037493	7	6	0.1.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	40	0.380612	62	35	0.0.0.1.0.1.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: apply lt_le_incl, lt_0_1; only 1: apply divide_refl; only 1: exists n; only 1: now nzsimpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	40	0.108692	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	40	40.147261	23972	2719
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_list_sum	40	40.087800	29646	4233
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	40	0.092736	7	6	0.0.0.0.1.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.appP	40	40.307302	119170	3913
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1_iff	40	12.178077	12722	2610	0.0.0.0.0.13.0.0.0.0.0.0.0.0.0.0.12.0	synth with cache (only 1: split; only 1: induction 1; only 1: right with x; only 1: auto; only 1: left; only 1: left; only 1: elim IHclos_refl_trans2; only 1: auto; only 1: intros; only 1: right with y0; only 1: auto; only 1: auto; only 1: induction 1; only 1: constructor 2; only 1: constructor 3 with y; only 1: auto; only 1: constructor 1; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.impliesP	40	0.997911	2552	149	5.45	synth with cache (only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	40	40.082290	24451	4395
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40	7.371039	946	422	0.0.4.3.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	40	40.028476	5808	2560
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.impliesPn	40	3.768803	6324	472	0.8.45	synth with cache (only 1: destruct 1; only 1: intro p; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Streams.Stream_Properties.ForAll_Str_nth_tl	40	40.098762	31896	8236
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Streams.Stream_Properties.Co_Induction_ForAll.ForAll_coind	40	0.173501	190	30	5.5.2	synth with cache (only 1: coinduction ltac:(EqSt_reflex); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Map.Str_nth_tl_map	40	0.031602	5	5	0.0.0.0.0	synth with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Map.Str_nth_map	40	0.019588	5	4	0.1.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros s; only 1: apply IHn).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.unlessL	40	0.960439	2982	200	9.3.26.3	synth with cache (only 1: split; only 1: red; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_div	40	40.037936	9645	972
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.unlessR	40	0.693571	2387	173	13.3.18.3	synth with cache (only 1: repeat split; only 1: red; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.iter_ind	40	40.138797	46698	5603
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	40	40.093891	9084	1782
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.rev_involutive	40	40.125900	46047	4849
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	40	40.059178	10445	3490
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.or_cancel_r	40	40.199058	70335	10971
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.iff_and	40	0.008186	3	2	1.0	synth with cache (only 1: intros; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_div_den	40	1.911067	472	104	1.0.0.6.2	synth with cache (only 1: intro; only 1: intuition; only 1: unfold Rdiv; only 1: field; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.iff_to_and	40	0.339400	205	87	1.0.0.0.0.2.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial; only 1: intro H; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.double	40	0.078582	15	6	5.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.universal_quantification.inst	40	0.023973	26	7	5.2	synth with cache (only 1: intro H1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.universal_quantification.gen	40	0.006989	2	2	0.0	synth with cache (only 1: unfold all; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40	40.049722	9989	2406
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Logic_lemmas.absurd	40	0.466890	485	144	0.7.2.1	synth with cache (only 1: intro A; only 1: intros H ?; only 1: destruct 1; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_sym	40	0.008383	6	2	1.3	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans	40	0.012718	3	3	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	40	0.008320	2	2	0.0	synth with cache (only 1: destruct 2; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_aux_rb	40	40.066286	20341	4623
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Logic_lemmas.equality.f_equal	40	0.008969	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.or_assoc	40	40.316485	127752	10202
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	40	5.126835	659	287	0.9.0.0	synth with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), lcm_mul_mono_l, mul_comm; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Logic_lemmas.eq_sind_r	40	0.013238	5	3	0.0.2	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Logic_lemmas.eq_ind_r	40	0.010884	3	3	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Logic_lemmas.eq_rec_r	40	0.011592	3	3	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Logic_lemmas.eq_rect_r	40	0.012013	3	3	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.rev_eq_app	40	40.102750	31733	5722
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	40	40.045594	11557	2590
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	40	0.775757	1562	126	29.1	synth with cache (only 1: destruct 2; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	40	7.181189	1031	424	0.1.0.0.0.1.1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: tauto; only 1: tauto; only 1: tauto; only 1: rewrite <- neq_mul_0; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.equality_dep2.f_equal_dep2	40	0.021175	5	3	0.1.1	synth with cache (only 1: destruct 1; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.rew_opp_r	40	0.010340	3	2	1.0	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.rew_opp_l	40	0.015272	3	3	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	40	0.259674	24	15	1.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.f_equal2	40	0.150976	13	7	1.0.1.0.1	synth with cache (only 1: intros A B C Hl Hr; only 1: intros H ?; only 1: destruct 1; only 1: destruct 1; only 1: repeat split).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.f_equal3	40	0.020166	5	4	0.0.0.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.f_equal4	40	0.166500	17	11	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.f_equal5	40	0.035615	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.sameP	40	40.150753	22648	838
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.ggcd_gcd	40	40.219204	20841	4080
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.f_equal_compose	40	0.493525	471	87	0.6.4.3	synth with cache (only 1: intros A x P H y H0; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_trans_refl_l	40	0.011465	5	2	0.3	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_trans_refl_r	40	0.011111	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_sym_involutive	40	0.011608	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_trans_sym_inv_l	40	0.012272	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_trans_sym_inv_r	40	0.012114	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_trans_assoc	40	0.077869	41	14	0.2.3.0	synth with cache (only 1: destruct e; only 1: intros h1 h2; only 1: destruct h2; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.equality_dep.f_equal_dep	40	2.533413	9662	278
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.rew_map	40	0.041945	19	7	0.1.5	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40	40.041483	6939	2753
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.Reverse_Induction.rev_list_ind	40	2.302236	1907	279	9.4.1.5	synth with cache (only 1: simpl; only 1: induction l; only 1: auto; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.map_subst	40	0.012449	2	2	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.map_subst_map	40	0.016696	3	2	0.1	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.rew_swap	40	0.015341	8	3	4.1.0	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.rew_compose	40	0.014464	5	3	2.0.0	synth with cache (only 1: intros; only 1: destruct H2; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.in_rev	40	40.143195	21208	5526
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.unless_sym	40	6.956330	26432	918	2.1.9.22.22.50.4	synth with cache (only 1: split; only 1: intro H; only 1: red; only 1: intros; only 1: apply H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.update_m_Proper	40	40.064094	15421	1938
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.concat_nil	40	0.007087	2	1	1	synth with cache (only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.concat_cons	40	0.047245	7	7	0.0.0.0.0.0.0	synth with cache (only 1: induction x as [| a l IHl]; only 1: simpl; only 1: intros; only 1: auto; only 1: intro y; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.decPcases	40	40.261756	36589	610
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40	15.945232	5820	1273	0.9.1.2.0.0.0.0.0.3.1	synth with cache (only 1: split; only 1: intros; only 1: apply bits_inj; only 1: intros n; only 1: destruct (le_gt_cases 0 n); only 1: now apply H; only 1: now rewrite 2!testbit_neg_r; only 1: intros; only 1: destruct (le_gt_cases 0 n); only 1: now rewrite <- H; only 1: now rewrite 2!testbit_neg_r).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40	40.080254	20691	4931
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	40	40.039426	7427	4243
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	0.712673	310	80	2.2.1.12	synth with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	40	40.043355	10970	3464
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0.019154	1	1	0	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.iter_invariant	40	40.057582	17241	2463
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.odd_bitwise	40	40.108255	13434	4514
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	0.072953	18	4	4	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	40	40.048235	13303	1393
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	0.028835	2	1	1	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.pow_1_r	40	40.165466	34743	4517
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.shiftr_spec_aux	40	40.054511	13308	3812
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.shiftl_spec_low	40	40.069780	19671	4599
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	40	40.046797	12870	3198
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	40	40.028990	5917	3126
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.PropNeqType.paradox	40	40.344554	158793	10093
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40	40.080547	25501	2675
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.rev_nth	40	40.069543	21409	3994
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	40	40.049334	9937	2498
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_l_plus_morphism	40	40.145778	15573	4737
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.shiftl_spec_high	40	40.058133	13330	4020
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	40	40.360827	161313	4490
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.CompOpp_iff	40	36.348998	34657	10134	0.0.0.0.0.0.0.0.0.8.0.0.0.2.0.0.0.2.0.0.0.2.2.5.5	synth with cache (only 1: intros; only 1: split; only 1: destruct c; only 1: destruct c'; only 1: auto; only 1: discriminate; only 1: discriminate; only 1: destruct c'; only 1: discriminate; only 1: auto; only 1: auto; only 1: destruct c'; only 1: discriminate; only 1: auto; only 1: auto; only 1: destruct c, c'; only 1: auto; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: auto; only 1: auto; only 1: discriminate; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.pow_succ_r	40	40.126179	17011	4285
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.rwP2	40	40.199152	53126	2538
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Involutions.inv_inj	40	40.225255	82656	10367
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.altP	40	40.188260	57737	631
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Involutions.inv_bij	40	0.319435	399	41	3.3.18	synth with cache (only 1: exists f; only 1: by [  ]; only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40	40.065973	8558	1990
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.classicW	40	0.838617	1640	87	0.44	synth with cache (only 1: red; only 1: by move  =>b b' ->).
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Map.ForAll_map	40
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT2.eq_existT2_uncurried	40	40.548087	258309	2615
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	40	40.113130	36662	5086
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.rev_append_rev	40	40.091209	27047	4974
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.UIP_refl_bool	40	40.125432	42831	9297
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.map_cons	40	0.021687	7	2	1.4	synth with cache (only 1: simpl; only 1: f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT2.eq_sigT2_uncurried	40	1.157575	434	89	0.0.0.3.2.0.2	synth with cache (only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40	40.058475	16983	2645
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_list_max	40	40.065414	21004	3954
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	40	40.056041	15083	2863
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40	40.058013	13452	5073
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.list_eq_dec	40	12.404892	9477	1452	25	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	40	2.444768	665	317	0.0.2.1.0.0.1.1.2	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order; only 1: order; only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_left	40	40.394520	172062	6014
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40	40.142264	50868	3985
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	40	8.785002	4385	840	2.2.2.6.0.0.3.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: simpl in *; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl; only 1: apply eq_existT2_uncurried).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	40	3.449185	714	361	0.0.0.0.0.0.0.1.3	synth with cache (only 1: split; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	0.032559	9	4	3	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	40	0.016282	1	1	0	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	40	0.052521	15	7	3.3	synth with cache (only 1: intros Hnm Hpq; only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.in_map	40	10.892116	5797	1420	1.5.0.0.4.0.0.0.4	synth with cache (only 1: induction l; only 1: intros a H; only 1: inversion_clear H; only 1: intros x Hin; only 1: firstorder; only 1: simpl; only 1: left; only 1: subst; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	0.070397	15	8	0.5.0	synth with cache (only 1: split; only 1: solve_min; only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	40	0.014379	2	1	1	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	40	0.167558	26	13	4	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.map_length	40	0.155357	13	10	0.0.0.1.0.0.0	synth with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: rewrite IHl; only 1: elim (length l); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.map_nth	40	1.190238	520	138	0.0.6.0.0.0.1.0.0	synth with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: trivial; only 1: destruct n; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.square_spec	40	40.129712	19495	4385
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	40	40.057156	16121	3006
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.rev_alt	40	40.095735	31269	5436
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	40	40.042012	7711	1924
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.map_app	40	0.461253	155	75	1.0.0.0.0.2.1.0	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: reflexivity; only 1: intro y; only 1: simpl; only 1: rewrite (IHl y); only 1: f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.map_last	40	0.383212	107	51	3.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.double_var	40	40.052683	15171	1307
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40	40.058033	13804	2468
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40	40.097075	32867	5855
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.041922	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40	40.060226	7844	3051
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.148875	15	8	0.3.0.0	synth with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: apply Private_NZDiv.div_0_l; only 1: order_nz).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	40	40.029843	7839	1788
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.filter_rb	40	1.163308	4586	163	75	synth with cache (only 1: ok).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	40	40.100254	31341	3687
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.partition_rb1	40	0.273009	164	41	0.6.2.0	synth with cache (only 1: rewrite partition_spec; only 1: unfold filter; only 1: simpl; only 1: auto_tc).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.partition_rb2	40	0.041503	10	5	0.1.1.0	synth with cache (only 1: rewrite partition_spec; only 1: unfold partition, filter; only 1: simpl; only 1: auto_tc).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.ggcd_correct_divisors	40	40.106440	39409	2632
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_trans_map	40	39.485043	80641	6343	3.28.4.11.8	synth with cache (only 1: intros A x P H y H0; only 1: intros ? ? ? Fl Fr; only 1: destruct 1; only 1: destruct Fl; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.unlessP	40	40.385438	153935	8293
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.Reverse_Induction.rev_ind	40	40.153597	58745	3972
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	40	40.040754	8452	4173
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.fold_add_rb	40	2.235314	687	415	0.0.0.0.0.0.0.4.0	synth with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: intros; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.restrict_m_Proper	40	40.058717	14188	2292
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.bind_unless	40	40.372866	149462	5800
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_id_comm_l	40	40.522108	231482	6143
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.concat_app	40	40.114392	37958	5042
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_refl_map_distr	40	0.009202	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.unless_contra	40	40.178595	60906	2895
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	0.648186	191	102	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.gcd_divide_r	40	2.867577	785	254	1.0.2.3.0.0.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: intros (EQ, EQ'); only 1: exists bb; only 1: simpl; only 1: now rewrite Pos.mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	40	40.024375	5637	1402
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.map_eq_nil	40	1.282637	435	155	4.3.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	40	7.462263	3397	643	0.0.4.13.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: revert a; only 1: intros n; only 1: rewrite shiftr_spec'; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	40	40.102134	10721	4507
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40	40.044198	10962	3617
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_diag	40	0.116374	7	7	0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_trans_map_distr	40	2.226990	3379	386	1.1.1.3.20.0	synth with cache (only 1: destruct e; only 1: intros; only 1: rewrite eq_trans_refl_l; only 1: simpl; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_succ_r	40	40.116921	15603	4187
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	40	40.048524	10972	3212
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_sym_map_distr	40	0.011984	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	40	40.066504	18560	4437
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	40	40.199905	8405	1935
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_trans_sym_distr	40	0.033092	18	6	0.4.1	synth with cache (only 1: destruct e'; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_trans_rew_distr	40	0.018548	12	3	0.4	synth with cache (only 1: destruct e'; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.rew_const	40	0.015226	13	3	1.3	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	40	0.042097	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	40	0.064486	7	5	1.1.0.0.0	synth with cache (only 1: intros Hnm Hpq; only 1: pose proof (max_le_compat_l _ _ m Hpq) as LE; only 1: pose proof (max_le_compat_r _ _ p Hnm) as LE'; only 1: apply min_glb_iff; only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40	40.050655	12174	3820
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	40	0.044249	7	2	0.5	synth with cache (only 1: apply max_r || apply max_l; only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	40	0.244824	58	17	0.8	synth with cache (only 1: apply min_l; only 1: solve_max).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.shiftr_spec	40	40.055803	12689	4882
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.union_rb	40	3.638753	2160	587	1.1.2.5.0.0.0.12	synth with cache (only 1: intuition_in; only 1: unfold union; only 1: destruct compare_height; only 1: unfold linear_union; only 1: unfold elt in *; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.inter_rb	40	0.041622	8	7	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.lor_spec	40	40.087847	26825	3453
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	40	40.060442	18425	2982
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	40	40.072724	21071	3688
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40	21.217285	6566	2652	0.8.0.3.2.0	synth with cache (only 1: intros; only 1: apply divide_0_l; only 1: transitivity (gcd n m); only 1: rewrite H; only 1: now nzsimpl; only 1: trivial using gcd_divide_r).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.in_map_iff	40	20.720671	10651	2433	0.0.19.3.2.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: split; only 1: easy; only 1: destruct 1; only 1: tauto; only 1: firstorder; only 1: destruct H0; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.diff_rb	40	2.457614	1376	403	0.0.0.9.0.0.0	synth with cache (only 1: intros; only 1: unfold diff; only 1: destruct compare_height; only 1: unfold linear_diff; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.in_concat	40	40.175341	30341	6236
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	40	40.030532	4684	1503
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40	40.098003	13821	2164
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_plus_carry_morphism	40	40.132493	15965	4140
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.land_spec	40	40.071271	17756	4128
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	40	40.066968	18757	3406
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.CompareSpec2Type	40	40.522441	227994	8124
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_spec	40	40.135378	21445	6124
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.classicP	40	40.303645	116290	5427
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.AllAnd.all_and2	40	0.025498	8	7	0.0.0.0.0.0.1	synth with cache (only 1: repeat split; only 1: intro z; only 1: destruct (H z); only 1: auto; only 1: intro z; only 1: destruct (H z); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.AllAnd.all_and3	40	0.011702	1	1	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.AllAnd.all_and4	40	0.013171	1	1	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.AllAnd.all_and5	40	0.015933	1	1	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.pair_andP	40	0.015977	9	2	6	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	40	40.025119	4320	1602
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.classic_bind	40	40.225367	78232	3439
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.boolP	40	0.007480	1	1	0	synth with cache (only 1: by case b1; constructor).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.idPn	40	0.007836	1	1	0	synth with cache (only 1: by case b1; constructor).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.negP	40	0.009262	1	1	0	synth with cache (only 1: by case b1; constructor).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.negPn	40	0.006283	1	1	0	synth with cache (only 1: by case b1; constructor).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.negPf	40	0.008221	1	1	0	synth with cache (only 1: by case b1; constructor; auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Map.Exists_map	40	40.092746	28856	9121
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	40	40.103849	30231	5019
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Zip.Str_nth_tl_zipWith	40	0.410893	262	74	0.7.1.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros; only 1: apply IHn).
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Zip.Str_nth_zipWith	40	0.036880	7	6	0.0.1.0.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: unfold Str_nth in *; only 1: simpl in *; only 1: apply IHn).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.UIP_refl_nat	40	40.175289	66098	9471
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	40	40.070495	18301	4901
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_transp.Permutation_transp_sym	40	40.232215	61441	4461
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.gcd_divide_l	40	40.229814	29738	2042
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	40	0.505617	116	50	0.0.0.0.0.0.3	synth with cache (only 1: intros n m; only 1: rewrite shiftr_div_pow2, div_small_iff by order_nz; only 1: intros H; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: trivial using le_0_l; only 1: trivial using le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.gcd_nonneg	40	0.201669	44	17	1	synth with cache (only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.testbit_even_0	40	0.445956	483	36	2.2.24	synth with cache (only 1: induction a; only 1: split; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.testbit_odd_0	40	0.010435	1	1	0	synth with cache (only 1: now destruct a).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.idP	40	10.845434	32909	391	2.2.196	synth with cache (only 1: destruct b1; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.rt1n_ind_right	40	40.122143	43671	7152
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	40	40.028725	7358	1739
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT2.eq_sigT2_rect	40	40.108003	41706	2732
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT2.rew_sigT2	40	0.037916	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig2.eq_exist2_uncurried	40	0.042808	4	4	0.0.0.0	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl in *; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried	40	0.121308	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40	40.066524	17011	3835
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.map_nth_error	40	40.091884	28309	4183
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_nul_iff	40	40.107799	13444	4492
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40	40.078170	17162	2872
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	40	4.148452	1176	361	2.2.5.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: apply eq_exist2_uncurried).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.map_rev	40	40.087610	28118	4669
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.R_rm	40	40.048807	11122	4144
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.flat_map_concat_map	40	0.230833	57	22	0.0.0.0.2.1	synth with cache (only 1: intros l1; only 1: induction l; only 1: reflexivity || discriminate; only 1: simpl; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Zeq_bool_IZR	40	0.244558	33	14	1.2.1.1	synth with cache (only 1: intros; only 1: apply Zeq_is_eq_bool; only 1: apply eq_IZR; only 1: auto with zarith real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	40	0.153605	19	12	0.0.1.0	synth with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 * r3); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	40	40.078755	14100	3121
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	40	40.052356	11266	4267
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	40	40.068494	4008	1995
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40	0.826946	88	50	0.0.1.0.2	synth with cache (only 1: intros a b c; only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.map_eq_cons	40	38.133059	17098	3259	4.6.0.1.1.0.4.0.15	synth with cache (only 1: destruct l as [| x xs]; only 1: intros [| ] ? Heq; only 1: firstorder  discriminate; only 1: simpl in *; only 1: easy; only 1: intros; only 1: simpl in *; only 1: injection H as [=H H0]; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.classic_EM	40	40.255232	94749	3373
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_id_comm_r	40	40.386376	163953	7452
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	40	1.006728	167	80	1.1.2.0.0.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: rewrite !(mul_comm a); only 1: now rewrite mul_comm; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40	40.039690	7914	4050
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	40	0.066216	14	8	0.0.0.2.0	synth with cache (only 1: intros n m Hm; only 1: rewrite <- !negb_even; only 1: apply even_spec in Hm; only 1: rewrite even_add, Hm; only 1: now destruct (even n)).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.diff_m_Proper	40	40.077797	21157	3306
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.classic_pick	40	40.193746	68960	3225
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.classic_imply	40	40.204018	71078	3096
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	40	40.025976	6318	1353
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.gcd_greatest	40	40.241375	20272	3991
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.map_eq_app	40	40.108371	36635	4635
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40	40.061530	12644	3264
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	40	40.071222	5930	2841
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	40	40.059010	17143	3153
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.map_id	40	0.052848	7	6	1.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_add	40	40.096382	6383	2452
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	40	40.043843	10011	2859
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	40	40.145102	13194	4755
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40	40.120430	16111	4132
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.unique_existence	40	40.382528	155945	8355
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_pos_iff	40	40.119908	19794	6759
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	40	40.065747	18413	3810
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.ldiff_spec	40	40.096500	29921	6179
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.map_map	40	1.526519	514	179	2.4.0.0.0.5	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40	40.053174	14813	2712
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.lxor_spec	40	40.090994	26444	4040
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40	40.028661	6985	1960
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	40	40.052579	12620	3768
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	0.317102	74	35	0.1.0.0.1.2	synth with cache (only 1: intros n m Hn; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.count_occ_map	40	40.138154	55881	2257
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	40	40.056256	14466	3157
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.flat_map_app	40	40.052962	13741	5503
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.lt_gt	40	0.007861	1	1	0	synth with cache (only 1: apply gt_lt_iff).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	40	40.042148	6639	1348
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.Make.remove_min_spec1	40	40.189522	79107	2404
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_r_plus_morphism	40	40.074233	25276	2686
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.ObsoletePmultNat.ZL6	40	0.319253	72	20	4.0.0.1	synth with cache (only 1: intros a; only 1: unfold Pos.to_nat; only 1: rewrite !Pmult_nat_mult; only 1: now Nat.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.gt_lt	40	3.437489	1508	327	4.2.0.11	synth with cache (only 1: destruct (le_gt_cases m n); only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff; only 1: apply N.gt_lt_iff).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.testbit_odd_succ	40	8.942923	2376	716	1.0.0.0.0.0.0.3.0.3.1	synth with cache (only 1: nzsimpl; only 1: destruct n; only 1: now destruct a; only 1: destruct a as [| a]; only 1: intros _; only 1: simpl; only 1: trivial; only 1: discriminate || intros _; only 1: simpl; only 1: f_equal; only 1: apply Pos.pred_N_succ).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.testbit_even_succ	40	0.045680	4	4	0.0.0.0	synth with cache (only 1: intros H; only 1: rewrite testbit_succ_r_div2 by trivial; only 1: f_equal; only 1: now destruct a).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.testbit_neg_r	40	0.035287	5	1	4	synth with cache (only 1: now induction n).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	40	40.065172	24556	913
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_right	40	25.299796	20959	4313	0.0.1.0.0.1.0.1.0.0.1.0.1.1.1.0.0.1.0.2.1	synth with cache (only 1: induction 3; only 1: apply H0 with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply IHclos_refl_trans1; only 1: apply IHclos_refl_trans2; only 1: auto with sets; only 1: intros; only 1: apply H0 with y0; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: intros; only 1: apply H0 with y0; only 1: auto with sets; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.gt_lt_iff	40	40.035130	7390	2197
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.le_ge	40	0.007162	1	1	0	synth with cache (only 1: apply ge_le_iff).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.ge_le	40	3.381334	931	364	0.0.0.1.0.6.1	synth with cache (only 1: unfold le, min; only 1: case compare_spec; only 1: intuition; only 1: easy; only 1: intuition; only 1: easy; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.ge_le_iff	40	5.770819	1241	442	4.2.6	synth with cache (only 1: unfold leb, le; only 1: rewrite compare_gt_iff; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.CompSpec2Type	40	40.256962	99796	8974
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	40	40.127375	20080	5405
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.map_ext_in	40	13.071071	8702	1313	0.4.19.1.1.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: f_equal; only 1: auto with arith; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.map_ext	40	0.359193	68	32	0.0.1.0.0.2.0	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: rewrite H by intuition; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.flat_map_ext	40	0.244692	78	25	0.0.0.2.1.1	synth with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.concat_map	40	23.303289	19747	3163	7.0.2.0.0.0.4.3.0.0.0.9.1	synth with cache (only 1: intros l2; only 1: intros; only 1: induction l as [| x l IH]; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct l; only 1: simpl; only 1: rewrite map_app; only 1: auto; only 1: simpl; only 1: rewrite map_app; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.andP	40	40.145477	7449	672
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Fold_Left_Recursor.fold_left_app	40	0.030862	7	4	3.0.0.0	synth with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40	40.112435	16100	2683
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs_rs'	40	40.046345	10382	4172
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	40	40.052306	13063	3619
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40	40.052633	15297	3041
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_transp.Permutation_transp_equiv	40	40.240196	72425	3861
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	40	0.102479	5	3	0.2.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.map_ext_in_iff	40	17.201142	9083	2265	0.0.0.0.0.0.0.0.3.1.0.0.0.0.6.6	synth with cache (only 1: split; only 1: induction l; only 1: intros [=] ? []; only 1: intros [=] ? []; only 1: subst; only 1: auto; only 1: auto; only 1: induction l as [| y l]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	40	0.056787	5	3	0.2.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	40	0.068617	5	3	0.2.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.fold_right_app	40	0.280885	104	41	0.1.0.0.0.0.2	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: intros; only 1: simpl; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40	40.047514	13714	2165
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	40	6.629688	1849	424	0.0.0.0.0.14	synth with cache (only 1: unfold log2_up; only 1: intros a Ha; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.testbit_succ_r_div2	40	40.172446	13781	2862
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.571105	158	54	0.2.3.0.0.0.0	synth with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros H; only 1: order_pos; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.and3P	40	40.341982	64519	765
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	40	40.044732	13381	1534
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40	40.072000	18177	5496
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.in_flat_map	40	40.182954	22983	3706
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_neg_iff	40	40.060519	14885	4605
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	40	40.097345	12281	2532
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig2.eq_sig2_rect	40	40.108901	41569	2654
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig2.rew_sig2	40	0.043087	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.le_epsilon	40	40.046287	10684	2565
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	40	40.130028	8294	859
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40	40.035348	7377	2201
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.remove_concat	40	40.099168	31739	3986
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.forall_exists_unique_domain_coincide	40	40.183404	65494	9195
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.and4P	40	40.333920	37484	536
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40	40.039823	8938	3158
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.nandP	40	0.016835	1	1	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.exists_inhabited	40	0.396121	670	103	8.8.0	synth with cache (only 1: intros A P H; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.norP	40	0.016800	1	1	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case; auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.inhabited_covariant	40	0.016361	14	4	0.0.4	synth with cache (only 1: intro; only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.implyP	40	0.009459	1	1	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andTb	40	0.006626	5	1	4	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_stepl	40	0.085482	53	17	0.0.7	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andFb	40	0.005218	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.iff_stepl	40	0.015936	4	4	0.0.0.0	synth with cache (only 1: intros A B C [H1 H2] [H3 H4]; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andbT	40	0.088071	111	13	2.12	synth with cache (only 1: intro H; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andbF	40	0.072178	80	11	2.10	synth with cache (only 1: intro H; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andbb	40	0.006330	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.and5P	40	40.414010	45694	515
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	40	1.740991	221	104	0.1.0.1.2	synth with cache (only 1: intros a b c; only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andbA	40	0.004832	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andbCA	40	0.007280	1	1	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andbAC	40	0.015256	2	1	1	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andbACA	40	0.025724	50	5	11	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orTb	40	0.004573	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orFb	40	0.003748	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbT	40	0.009820	3	1	2	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbF	40	0.005422	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbb	40	0.005001	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andbC	40	0.697485	1247	45	0.48	synth with cache (only 1: intro H; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbC	40	0.006945	1	1	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbA	40	0.010319	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbCA	40	0.010140	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbAC	40	0.011946	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbACA	40	0.018666	1	1	0	synth with cache (only 1: by do 4!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andbN	40	0.006870	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andNb	40	0.007497	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbN	40	0.008423	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orNb	40	0.009450	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andb_orl	40	0.020024	5	1	4	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.orP	40	40.300359	9615	419
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andb_orr	40	0.005533	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orb_andl	40	0.011477	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orb_andr	40	0.017048	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andb_idr	40	0.016333	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	40	40.049594	10567	3729
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.sort_equivlistA_eqlistA	40	40.097118	32302	3680
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andb_id2l	40	0.019366	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andb_id2r	40	0.027991	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andb_idl	40	0.327710	179	21	8.8	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orb_idl	40	0.016626	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orb_idr	40	0.013039	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orb_id2l	40	0.021293	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orb_id2r	40	0.029073	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	40	40.096872	13469	2585
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	40	40.032994	7423	2152
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40	40.042498	11245	2239
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negb_and	40	0.096152	1	1	0	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negb_or	40	0.012361	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andbK	40	0.013250	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andKb	40	0.008090	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbK	40	0.008232	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implybT	40	0.008789	7	1	6	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orKb	40	0.011357	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implyFb	40	0.004788	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implybF	40	0.008982	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implyTb	40	0.006243	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implybb	40	0.005609	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implybE	40	0.008407	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negb_imply	40	0.012006	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implyNb	40	0.008451	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implybNN	40	0.008392	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implybN	40	0.014314	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implyb_idr	40	0.012323	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implyb_idl	40	0.016182	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implyb_id2l	40	0.021229	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbF	40	0.005238	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addFb	40	0.005902	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbb	40	0.006469	2	1	1	synth with cache (only 1: by case).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.eqb_eq	40	40.076766	20857	6402
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbC	40	0.009761	1	1	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbA	40	0.010735	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbCA	40	0.011103	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbACA	40	0.019636	1	1	0	synth with cache (only 1: by do 4!case).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	40	40.088767	23848	5720
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbAC	40	0.039712	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andb_addl	40	0.016772	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andb_addr	40	0.011760	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addKb	40	0.010200	2	1	1	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbK	40	0.007157	1	1	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbI	40	0.017070	3	1	2	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addIb	40	0.021912	2	1	1	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addTb	40	0.007104	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbN	40	0.008549	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbT	40	0.010623	2	1	1	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addNb	40	0.008414	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.land_spec	40	40.123895	22595	3264
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.ltb_lt	40	40.153648	23602	4815
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.forall_exists_coincide_unique_domain	40	40.351657	141699	8378
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.leb_le	40	40.135190	25226	6717
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	40	40.069424	16580	4129
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	40	0.292498	57	31	0.0.0.0.3.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold ltb, lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.ldiff_spec	40	1.118640	892	124	0.0.1.0.2.2.2.2.7.4	synth with cache (only 1: unfold testbit; only 1: destruct divmod as (q', u'); only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: fold testbit; only 1: apply testbit_bitwise_1; only 1: destr_bool; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	40	0.907014	112	43	1.0.0.0.1.1	synth with cache (only 1: unfold leb, le; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: now split; only 1: easy'; only 1: now split).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	3.878059	829	314	1.1.4.1.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: rewrite !(add_comm a); only 1: reflexivity; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	40	40.065280	20075	2679
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	40	0.075994	6	6	0.0.0.0.0.0	synth with cache (only 1: unfold gt; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	40	40.035861	8207	2555
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	40	0.066195	7	6	0.0.0.0.0.1	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold le; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	40	0.068106	7	6	0.0.0.0.0.1	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold ge; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	40	0.076862	8	6	0.0.0.0.0.2	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_xO_xO	40	0.023605	10	3	2.3	synth with cache (only 1: revert q; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_xI_xI	40	0.007456	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.subrelUl	40	2.661938	4219	348	0.20.0.7.25	synth with cache (only 1: intro H; only 1: simpl; only 1: Bool.destr_bool; only 1: elim eq_sym with (1 := H0); only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.sub_refl	40	0.097826	278	22	3.19	synth with cache (only 1: red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40	40.060569	15212	4066
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbP	40	3.725902	1873	72	1.0.0.0.55	synth with cache (only 1: repeat match goal with | p:(_ * _)%type |- _ => destruct p | b:bool |- _ => destruct b end; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.topredE	40	0.011474	1	1	0	synth with cache (only 1: by case : pT pp ).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ext_in_map	40	40.084735	25412	4664
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	40	40.059554	15352	2802
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	40	40.050259	12443	4206
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.subrelUr	40	5.704307	8643	662	15.13.9.31	synth with cache (only 1: intro H; only 1: Bool.destr_bool; only 1: red; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.Make.remove_min_spec2	40	40.110007	42687	2818
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.ObsoletePmultNat.le_Pmult_nat	40	40.156488	28646	3252
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.shiftr_succ_r	40	40.226929	19771	2860
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	40	40.089247	7641	1016
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	40	14.751543	5711	1468	1.0.8.3.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: split; only 1: intros H; only 1: bitwise; only 1: apply xorb_eq; only 1: now rewrite <- lxor_spec, H, bits_0; only 1: intros H; only 1: rewrite H; only 1: bitwise; only 1: apply xorb_nilpotent).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	40	0.029143	3	3	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_xI_xO	40	6.394205	3717	956	4.5.4.1.5	synth with cache (only 1: change p~1 with (p~0 + 1); only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: now split).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_rst	40	40.148958	52086	8723
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.gtb_ltb	40	40.076327	20500	3097
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.geb_leb	40	40.055600	13362	2998
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.gtb_lt	40	40.053048	12909	3770
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_cont_spec	40	40.063929	16395	3369
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_trans	40	2.304423	2006	450	0.4.0.0.12	synth with cache (only 1: induction 1; only 1: auto; only 1: right with y; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.geb_le	40	40.040663	8939	3289
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_xO_xI	40	4.305490	2091	545	3.3.9.1	synth with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.nth_nth_nth_map	40	40.063594	17920	4440
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.fold_left_length	40	40.108289	36522	3685
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.or3P	40	40.275853	29730	302
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40	40.039169	8278	1756
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs'_rs''	40	40.086310	33162	3262
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	40	0.730468	213	89	0.2.1.0.0.1.0	synth with cache (only 1: intros a; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros H; only 1: order_pos; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.forallb_app	40	1.332567	331	192	1.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l1; only 1: intros l2; only 1: simpl; only 1: solve [ auto ]; only 1: intros l2; only 1: simpl; only 1: case (f a); only 1: simpl; only 1: solve [ auto ]; only 1: simpl; only 1: solve [ auto ]).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	40	40.053139	14154	3398
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	0.022367	5	5	0.0.0.0.0	synth with cache (only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_transp.Permutation_transp_cons	40	40.067433	16737	2285
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	40	40.065196	19197	4697
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.fold_left_rev_right	40	40.093079	28732	5195
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.Choice_lemmas.Choice	40	30.702861	232989	2494
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	40	40.047766	12754	2325
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.shiftl_succ_r	40	40.206656	18121	1552
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40	40.057488	17003	2278
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.or4P	40	40.244820	38639	433
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40	40.026860	5269	1442
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.in_simpl	40	0.011507	1	1	0	synth with cache (only 1: by case : msp  => _ /= ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.unfold_in	40	0.010426	4	1	3	synth with cache (only 1: by rewrite -mem_topred).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.simpl_predE	40	0.006216	3	1	2	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_simpl	40	0.005731	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.geb_spec	40	17.191310	2691	794	1.0.1.0.0.0.7.6	synth with cache (only 1: rewrite <- (succ_pred m); only 1: rewrite <- (succ_pred m); only 1: rewrite geb_leb; only 1: case leb_spec0; only 1: constructor; only 1: order; only 1: constructor; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	40	40.070175	17344	5360
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.mul_reg_r	40	0.910264	257	74	0.11	synth with cache (only 1: rewrite 2!(mul_comm _ p); only 1: exact (fun Hp => proj1 (mul_cancel_l n m p Hp))).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	40	1.771585	470	198	0.0.0.1.0.0.0.0.1.0.0.0	synth with cache (only 1: intros Eqf Lef x y; only 1: destruct (min_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: auto; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: auto; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_cont_Eq	40	40.134844	25985	5286
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.fold_symmetric	40	40.105106	34210	4884
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	40	40.062714	17310	3215
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	0.037240	8	3	3.2.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now destruct (even a)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	0.036052	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.completeness_weak	40	40.064073	15853	4993
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.filter_app	40	10.525039	10525	1705	0.0.0.0.1.1.1.1.0.27	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: case_eq (f a); only 1: intros l2; only 1: simpl; only 1: rewrite IHl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	40	14.794292	9865	1650	0.0.1.13.0.0.0.0.1.0.6.0	synth with cache (only 1: rewrite <- (mul_1_l 1)  at 1; only 1: rewrite sqrt_up_eqn; only 1: rewrite sqrt_pred_square; only 1: apply (lt_succ_pred 0); only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: rewrite <- (add_0_l 0); only 1: nzsimpl; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.existsb_exists	40	40.078937	21694	4245
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.opp_eq_mul_m1	40	7.393026	1728	266	0.0.1.0.0.0.0.1.26	synth with cache (only 1: destruct n; only 1: nzsimpl; only 1: now f_equal; only 1: simpl; only 1: rewrite ?Pos.mul_1_r; only 1: trivial; only 1: simpl; only 1: rewrite ?Pos.mul_1_r; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	40	40.052973	12631	3732
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.add_diag	40	0.261387	8	3	0.4.1	synth with cache (only 1: rewrite two_succ; only 1: unfold succ; only 1: now rewrite Private_BootStrap.mul_add_distr_r, Private_BootStrap.mul_1_l).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.ex.eq_ex_uncurried	40	40.553379	271586	3724
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.ex2.eq_ex2_uncurried	40	0.224302	97	30	0.0.5.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct H; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.ex2.rew_ex2	40	0.022531	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_1	40	40.060357	16937	2266
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.compare_opp	40	1.750826	462	192	0.0.1.0.1.1.0.2.0.0.0.0.0.0.4	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite <- ?Pos.compare_antisym; only 1: trivial; only 1: trivial; only 1: trivial; only 1: simpl; only 1: apply Pos.compare_antisym).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	40	40.045935	11906	2485
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40	40.060324	16580	4145
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	40	40.089125	11610	2717
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	40	40.122533	20521	3683
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40	40.074008	18383	6647
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	40	40.095194	15810	4378
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rbase	40	23.827494	10390	987	53.1	synth with cache (only 1: intros RS' n; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	40	40.054211	13470	4064
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.ex.rew_ex	40	40.389825	168628	6394
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40	40.111001	17162	4386
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_cont_refl	40	0.728012	500	111	0.2.3.1.1.7	synth with cache (only 1: induction p; only 1: now f_equal; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: reflexivity || destruct H).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.lor_spec	40	40.128618	40503	3602
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.find_none	40	4.660024	1431	380	0.3.7.0.1.0.0.0	synth with cache (only 1: induction l as [| a l IH]; only 1: simpl; only 1: easy; only 1: simpl; only 1: case_eq (f a); only 1: congruence; only 1: intuition; only 1: intuition congruence).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	40	40.059066	8965	3178
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	40	40.053337	14216	3769
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40	40.057582	14871	2856
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	40	1.252288	154	72	1.0.1.0.0.0.1	synth with cache (only 1: intros a b c Hb Hc; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: now apply div_mod).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_topred	40	40.534561	227457	1676
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.qualifE	40	0.007574	2	1	1	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.app_predE	40	40.407518	165826	2587
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.existsb_nth	40	40.060075	16874	3409
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40	40.065112	18361	2191
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.partition_cons2	40	0.023894	2	2	0.0	synth with cache (only 1: simpl; only 1: now intros -> ->).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	40	40.084517	26305	3709
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.in_applicative	40	40.381197	157020	2100
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.mul_reg_l	40	34.642070	16749	2588	3.2.30	synth with cache (only 1: destruct (min_spec n m); only 1: apply mul_cancel_l; only 1: apply mul_cancel_l).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.partition_cons1	40	6.267850	2620	535	0.1.1.8.3.0.5	synth with cache (only 1: intros; only 1: simpl; only 1: case_eq (f a); only 1: rewrite H; only 1: intros; only 1: reflexivity; only 1: intuition congruence).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.shiftr_spec	40	40.181344	13913	3291
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40	40.078331	23104	2750
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	40	40.106415	12571	2522
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	40	40.074731	10875	2836
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.gtb_spec	40	40.041040	8121	2170
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.add_reg_l	40	40.052999	14860	2316
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_ones_nonneg	40	0.722242	168	61	0.0.4.0.0.0.0.0.0	synth with cache (only 1: destruct (leb_spec 0 i), (ltb_spec i n); only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: now try order'; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.existsb_app	40	40.187508	29272	2448
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_sym	40	40.146071	50053	9087
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_sub_mask	40	40.082100	23000	5682
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.118040	21	21	1.1.0.0.0	synth with cache (only 1: unfold lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_le_iff	40	0.031875	4	3	0.0.1	synth with cache (only 1: unfold le; only 1: unfold compare; only 1: now destruct compare_cont; split; try apply comparison_eq_stable).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_iff_add	40	40.127765	23716	4688
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.gt_lt_iff	40	0.371145	48	19	2.1	synth with cache (only 1: unfold gt; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.gt_lt	40	0.027499	2	2	0.0	synth with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40	40.041629	9289	2824
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_gt	40	0.009904	1	1	0	synth with cache (only 1: apply gt_lt_iff).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.ge_le_iff	40	0.042269	9	4	1.1.2	synth with cache (only 1: unfold ge; only 1: unfold le; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.ge_le	40	0.030794	2	2	0.0	synth with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_ge	40	0.008962	1	1	0	synth with cache (only 1: apply ge_le_iff).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.forallb_forall	40	40.102568	8811	1574
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.id	40	0.020867	2	1	1	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj	40	0.008904	1	1	0	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_iff	40	0.033792	3	3	0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.is_pos	40	0.016519	5	1	4	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.is_nonneg	40	0.047029	8	1	7	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_1	40	0.008329	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_xO	40	0.124691	4	2	0.2	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0.028373	2	2	0.0	synth with cache (only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_succ	40	0.025554	3	2	1.0	synth with cache (only 1: rewrite <- Pos.add_1_r; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_add	40	0.026128	2	2	0.0	synth with cache (only 1: simpl; only 1: now rewrite Pos.add_comm).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	40	40.053447	8527	2765
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.filter_In	40	40.066129	19875	4020
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.in_collective	40	40.311186	121459	2311
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_transp.Permutation_Permutation_transp	40	40.087358	29137	4550
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	40	40.030628	6337	1522
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Filtering.filter_ext_in	40	5.588410	2431	594	0.2.1.0.0.0.0.0.12	synth with cache (only 1: induction l as [| y l]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: rewrite H by intuition; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40	40.035578	7258	2008
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.Choice_lemmas.Choice2	40	40.621985	290879	2863
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	40	19.883096	7375	2395	0.0.0.1.0.0.5.0.0.0.5.0.0	synth with cache (only 1: intros; only 1: destruct (lt_ge_cases 0 b); only 1: apply div_small; only 1: destruct (mod_pos_bound a b); only 1: intuition; only 1: intuition; only 1: rewrite <- div_opp_opp by trivial; only 1: apply div_small; only 1: rewrite <- opp_lt_mono, opp_nonneg_nonpos; only 1: destruct (mod_neg_bound a b); only 1: intuition; only 1: order; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	40	0.102740	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.shiftl_spec_high	40	40.177026	13782	4066
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.div2_spec	40	0.017900	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	40	40.070009	12054	3013
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	40	0.012938	2	2	0.0	synth with cache (only 1: apply log2_up_eqn0; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40	40.048812	12692	2714
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_mem	40	40.462980	198653	2194
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	40	0.070637	3	3	0.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	40	0.068260	3	3	0.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	40	40.068521	17748	3579
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	40	0.126057	3	3	0.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.gt_iff_add	40	40.116993	13788	5448
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	40	40.067355	20404	3251
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.concat_filter_map	40	40.120984	40268	4494
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Filtering.filter_ext	40	0.030371	4	4	0.0.0.0	synth with cache (only 1: intros f g l H; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	40	0.997832	822	115	2.0.14.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rdiv_lt_0_compat	40	40.067849	15911	6125
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.find_some	40	40.096473	24334	4522
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	40	0.040919	8	4	3.1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40	40.085780	27656	3377
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Filtering.remove_alt	40	2.100066	617	179	0.10.0.0.0.0	synth with cache (only 1: induction l as [| y l]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: now destruct (eq_dec x y)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40	11.571794	2339	668	1.0.1.9.0.0.0.0.1.0.0.1.1	synth with cache (only 1: rewrite <- (pow_1_r 2); only 1: apply log2_up_unique; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: split; only 1: apply pow_lt_mono_r; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite one_succ; only 1: nzsimpl; only 1: apply lt_succ_diag_r; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	40	40.037145	9369	2270
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_1	40	40.044342	12798	2368
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.add_compare_mono_l	40	40.074571	19845	2522
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40	40.071909	19539	3722
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	40	40.059511	17304	3482
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Filtering.filter_ext_in_iff	40	16.637871	4414	1256	0.0.0.1.0.0.0.3.8	synth with cache (only 1: split; only 1: intros H; only 1: rewrite filter_map in H; only 1: apply ext_in_map; only 1: assumption; only 1: intros H; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	40	40.104680	14332	2922
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40	40.058811	3765	1323
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40	40.032169	6746	1780
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.A'A_right	40	40.140033	57782	4019
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_cont_antisym	40	40.070509	18393	6141
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	40	40.101568	38699	3235
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_eq_iff	40	40.069342	17119	6131
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.lxor_spec	40	40.123797	42516	4459
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	40	40.043499	9244	4729
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.div2_spec	40	0.017059	4	1	3	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.testbit_neg_r	40	0.009128	1	1	0	synth with cache (only 1: inversion H).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	40	40.053526	12105	2810
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.KeyPred.keyed_predE	40	40.197340	69505	4098
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.KeyedQualifier.keyed_qualifier_suproof	40	40.305062	117101	1609
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_antisym	40	40.087319	23990	6007
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	40	40.041700	8997	2555
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.partition_length	40	40.093713	18850	4838
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.in_split_r	40	5.888833	1553	705	0.0.0.1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct p; only 1: destruct a; only 1: destruct (split l); only 1: simpl in *; only 1: destruct H; only 1: injection H; only 1: auto; only 1: right; only 1: apply (IHl (a0, b) H)).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.all_tag_cond_dep	40	40.316963	129620	3544
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_mod_pow2	40	40.042848	12565	797
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.partition_inv_nil	40	40.088608	26827	5693
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	40	40.070688	4726	401
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.shiftl_spec_low	40	40.065614	18716	3058
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.split_length_r	40	0.066304	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40	40.132330	18398	3399
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	40	40.010764	2253	956
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	40	11.212965	4269	1140	1.10.3	synth with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	40	0.029550	6	5	0.1.0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: destruct H1 as [H1| H1]; only 1: false_hyp H1 H2; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_ones	40	40.104074	33086	2732
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.elements_in_partition	40	40.122338	11592	4464
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	40	40.111479	18763	4488
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	40	0.040490	10	4	0.5.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	40	0.034332	3	3	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_pred	40	0.388292	185	50	0.3.0.0.3	synth with cache (only 1: destruct p; only 1: intros; only 1: trivial; only 1: trivial; only 1: now destruct 1 || intros _).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_mul	40	0.010846	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n	40	40.099152	30136	6628
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Filtering.filter_map	40	40.096618	16908	3612
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_succ_r	40	40.182402	31614	6964
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_succ_l	40	40.047266	10376	4180
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_pow	40	0.009988	1	1	0	synth with cache (only 1: now apply Pos.iter_swap_gen).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	40	40.062474	18751	2243
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_square	40	0.012587	3	2	1.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_compare	40	0.010236	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_leb	40	0.008684	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0.015238	2	2	0.0	synth with cache (only 1: unfold Pos.ltb, Pos.lt; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_eqb	40	0.006439	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.nlt_1_r	40	0.070273	21	5	5	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_1_succ	40	0.062750	19	6	1	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_nlt	40	0.016449	2	2	0.0	synth with cache (only 1: unfold lt, le; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	40	0.040116	3	3	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_nle	40	0.276827	23	11	0.4	synth with cache (only 1: unfold ltb, lt; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_succ_diag_r	40	14.249874	10771	1556	0.0.50	synth with cache (only 1: apply PeanoNat.Nat.lt_succ_r; only 1: apply lt_eq_cases; only 1: now right).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_le_incl	40	1.070758	109	43	0.0.3	synth with cache (only 1: unfold lt, le; only 1: rewrite compare_antisym; only 1: now do 2 destruct compare).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_sub	40	40.062823	18489	4401
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rdiv_plus_distr	40	24.410736	7476	1030	1.1.0.2.13.10	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intros a b; only 1: intros x y z; only 1: intro; only 1: unfold Rdiv; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_1_l	40	12.414467	7575	1751	0.4.3.1.1.14	synth with cache (only 1: apply ltb_ge; only 1: induction p; only 1: now f_equal; only 1: trivial; only 1: unfold ltb, lt; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	40	40.043509	10239	3035
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.all_tag_cond	40	40.306172	113433	2871
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Filtering.ext_in_filter	40	40.059117	16016	3563
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_transp.Permutation_ind_transp	40	40.067811	6198	820
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	40	40.081015	11512	3342
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	40	40.032078	10006	772
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.Choice_lemmas.bool_choice	40	40.566390	263511	2436
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_lxor_spec	40	40.234394	31688	2383
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	40	40.059061	17555	2113
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.all_sig_cond_dep	40	40.351183	139900	2801
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	40	1.958049	891	193	9.6.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	0.023510	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	40	40.049981	13326	3137
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	40	40.092801	23417	7154
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_succ_r	40	40.112787	9146	3288
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	40	40.065546	19362	2986
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Filtering.count_occ_alt	40	40.044845	12578	2659
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	40	40.065363	16880	3999
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.in_split_l	40	40.095956	31282	5032
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.combine_length	40	1.101120	543	144	2.5.0.0.0.1.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: easy; only 1: destruct l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	40	40.051281	12845	3423
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40	40.056805	8366	2929
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.in_prod_aux	40	1.026158	320	96	1.2.0.0.5	synth with cache (only 1: intro H; only 1: induction l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.in_combine_l	40	23.979315	12253	2773	0.0.5.3.2.2.3.0.3.0.0.2	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: intros [| ] ? Heq; only 1: simpl; only 1: intros; only 1: right; only 1: firstorder  (subst; auto); only 1: simpl; only 1: firstorder  (subst; auto); only 1: injection H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_compat	40	40.042470	10665	1129
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	40	40.057379	15872	3234
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	40	40.028823	5651	1343
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40	40.042946	11022	2179
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40	40.069095	19280	3369
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction	40	40.112692	44455	3375
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	40	40.115612	35976	8685
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	40	40.039628	9407	2822
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_succ_succ	40	40.141367	15917	5882
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.in_combine_r	40	23.458369	14216	3293	0.1.19.0.0.0.0.0.7.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: red; only 1: tauto; only 1: destruct l'; only 1: simpl; only 1: contradiction; only 1: simpl; only 1: firstorder  (subst; auto); only 1: injection H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_sub_max	40	40.067185	18981	3319
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_sqrt	40	0.026345	4	2	0.2	synth with cache (only 1: unfold Z.sqrtrem, Z.sqrt, Pos.sqrt; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_gcd	40	0.007289	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	40	40.066429	18084	3416
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.all_sig_cond	40	40.340548	132516	3295
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.tail_add_spec	40	40.100276	7705	3072
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_min	40	26.825881	12774	2799	0.23.0.2	synth with cache (only 1: unfold Pos.min; only 1: rewrite Pos2Nat.inj_compare; only 1: unfold Z.le, Z.min; only 1: now case Z.compare_spec).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.RelationProperties.symmetric_from_pre	40	40.332172	136054	3922
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalProperties.forE	40	0.006498	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.in1W	40	0.023455	7	2	0.5	synth with cache (only 1: intro; only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.in2W	40	0.009023	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.in3W	40	0.011082	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.split_nth	40	40.086212	27561	4934
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	40	40.075547	22951	2722
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.in1T	40	0.321077	137	19	15	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.in2T	40	0.017098	2	1	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.in3T	40	0.011754	1	1	0	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.sub_in1	40	0.008727	1	1	0	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.sub_in11	40	0.014547	2	1	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.sub_in111	40	0.015684	2	1	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.split_length_l	40	40.071202	22039	3402
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.on1W	40	0.088657	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.on1lW	40	0.010599	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.on2W	40	0.011480	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.on1T	40	0.017564	2	1	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.on1lT	40	0.018026	2	1	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.on2T	40	0.012978	1	1	0	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.RelationProperties.PER.sym_left_transitive	40	40.229806	83866	3782
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.subon1	40	0.019141	2	1	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_testbit	40	2.479343	1007	243	0.6.0.1.0.1.6.0	synth with cache (only 1: intro Hn; only 1: destruct n as [| n| n]; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct Hn).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.subon1l	40	0.015418	1	1	0	synth with cache (only 1: by move  =>allQ x /sub2; apply : allQ ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.subon2	40	0.027280	3	1	2	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	38.626925	12669	3368	0.0.1.17.1	synth with cache (only 1: rewrite <- compare_le_iff; only 1: case leb_spec0; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff; only 1: rewrite <- compare_le_iff; only 1: easy || now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_neg	40	0.009937	1	1	0	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_neg_iff	40	0.037133	3	3	0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.length_order.lel_refl	40	0.854540	759	57	28	synth with cache (only 1: RelationClasses.simpl_relation).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_pos	40	0.010101	1	1	0	synth with cache (only 1: now injection 1).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.length_order.lel_cons_cons	40	0.034114	3	3	0.0.0	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.033878	4	4	0.0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.length_order.lel_cons	40	0.024054	3	3	0.0.0	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.neg_is_neg	40	0.022223	5	1	4	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.length_order.lel_tail	40	0.024871	4	3	0.0.1	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.neg_is_nonpos	40	0.038621	13	3	3	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_nil_l	40	0.046520	9	3	1	synth with cache (only 1: now destruct l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.pos_is_pos	40	0.017263	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0.023974	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.neg_le_pos	40	0.027015	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.neg_lt_pos	40	0.009281	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.split_combine	40	40.094365	31465	4743
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.lxor_spec	40	40.292218	54823	1944
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	40	40.066736	19596	3716
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_refl	40	0.024020	4	3	0.1.0	synth with cache (only 1: destruct l; only 1: easy; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	40	40.026459	3340	1226
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40	40.039856	9709	2688
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_tl	40	0.754605	342	123	2.1.1.3.1	synth with cache (only 1: intros x l; only 1: destruct l; only 1: intro l'; only 1: firstorder  discriminate; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_tran	40	0.020988	7	3	3.0.1	synth with cache (only 1: induction l; only 1: auto with datatypes; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_appl	40	0.010378	1	1	0	synth with cache (only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_appr	40	0.012403	1	1	0	synth with cache (only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	40	39.141699	13446	2752	24.0.2	synth with cache (only 1: intros H; only 1: bitwise; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.combine_split	40	40.095679	29913	4216
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_pow_pos	40	40.067401	20752	2605
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n_iff	40	40.081777	23340	7398
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_cons_inv	40	0.064551	6	5	0.0.1.0.0	synth with cache (only 1: unfold incl; only 1: simpl; only 1: intros l l1 l2; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_max	40	38.919385	24425	4598	0.0.0.0.0.5.1.10.5.23	synth with cache (only 1: revert q; only 1: unfold Z.le, Z.max; only 1: unfold Pos.max; only 1: intros H; only 1: simpl in *; only 1: case Pos.compare_spec; only 1: congruence; only 1: congruence; only 1: intros; only 1: f_equal).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	0.012751	5	2	3.0	synth with cache (only 1: unfold Pos.le, Pos.sub; only 1: easy').
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.pos_lt_pos	40	0.016743	8	2	6.0	synth with cache (only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.neg_xO	40	0.008062	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0.015933	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.pos_xO	40	0.008550	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0.010206	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.opp_neg	40	0.008405	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0.007469	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.add_neg_neg	40	0.006145	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.add_pos_neg	40	0.014032	4	1	3	synth with cache (only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.add_neg_pos	40	0.010447	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.add_pos_pos	40	0.009189	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	40	40.052296	14287	3131
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_lt_succ	40	40.200866	42545	4538
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_lt_mono	40	40.095602	30101	4488
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_le_mono	40	40.167032	28131	3428
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_refl	40	0.026563	3	2	0.1	synth with cache (only 1: apply lt_eq_cases; only 1: now right).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_compat	40	0.907647	175	36	4	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	40	1.300958	801	134	5.10.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	40	6.662619	4896	595	14.1.12	synth with cache (only 1: intro RS'; only 1: intros; only 1: now apply mul_lt_mono_nonneg).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	40	0.133961	48	24	1.0.1.0.1.0	synth with cache (only 1: intros n m H1 H2; only 1: apply mul_le_mono_nonneg; only 1: order; only 1: assumption; only 1: order; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rdiv_minus_distr	40	40.072778	23280	1704
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	40	40.056344	13452	3634
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Req_EM_T	40	0.063375	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_trans	40	40.308117	26283	3219
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.pos_half_prf	40	0.012455	1	1	0	synth with cache (only 1: apply Rinv_0_lt_compat, Rlt_0_2).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.RelationProperties.PER.sym_right_transitive	40	40.269565	102758	3242
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	40	2.037835	887	193	1.4.0.7	synth with cache (only 1: intros Hab; only 1: bitwise; only 1: apply andb_false_iff; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	40	40.065839	20818	2825
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_rst	40	9.465039	3415	1881	0.0.1.0.0.2.2.0.0.0	synth with cache (only 1: induction 1; only 1: constructor 2; only 1: constructor 4 with y; only 1: auto; only 1: case H; only 1: constructor 1; only 1: auto; only 1: constructor 3; only 1: constructor 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40	40.061054	17900	3105
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	40	40.306665	125500	4066
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction	40	40.067712	21198	2855
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.absurd_set	40	0.013890	3	3	0.0.0	synth with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_lor_spec	40	40.200834	12364	4436
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.RelationProperties.equivalence_relP	40	40.301439	116118	3509
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_le_trans	40	10.286476	3088	1167	0.0.0.0.3.15	synth with cache (only 1: intros EQ; only 1: intros H; only 1: apply le_lteq in H; only 1: destruct H; only 1: now apply lt_trans with m; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.on_can_inj	40	0.021262	1	1	0	synth with cache (only 1: by move  =>fK x y /fK {+2}<- /fK {+2}<- ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.canLR_on	40	0.015207	2	1	1	synth with cache (only 1: by move  =>fK D1y ->; rewrite fK).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.canRL_on	40	0.016393	3	1	2	synth with cache (only 1: by move  =>fK D1x <-; rewrite fK).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_app	40	14.309929	4311	1284	2.2.3.1.0.7	synth with cache (only 1: intros l m n; only 1: elim l; only 1: auto; only 1: unfold incl; only 1: intros y H0 H1; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_app_app	40	0.133667	29	12	1	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_cons	40	17.225740	15426	1934	5.3.0.6.9.7.8	synth with cache (only 1: intros F l1 l2; only 1: intros d ie; only 1: intro y; only 1: simpl; only 1: intuition; only 1: elim H0; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_app_inv	40	0.018386	4	2	2.0	synth with cache (only 1: unfold incl; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.canLR_in	40	20.674082	25338	1131	26.53.17	synth with cache (only 1: intros; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40	40.058560	16468	3499
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.onW_bij	40	0.019533	1	1	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.inT_bij	40	0.027388	1	1	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.length_order.lel_trans	40	21.223561	16483	2338	0.0.2.9.2.0.2.0.4.0.0.9.0.0	synth with cache (only 1: intros; only 1: unfold lel; only 1: destruct l; only 1: inversion H; only 1: inversion H; only 1: simpl; only 1: auto with arith; only 1: simpl in *; only 1: auto with arith; only 1: auto with arith; only 1: elim H0; only 1: auto; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.onT_bij	40	0.030372	1	1	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.length_order.lel_nil	40	22.657197	18487	2371	18.3.0.0.13	synth with cache (only 1: destruct l' as [| y l']; only 1: intros Hnin; only 1: auto; only 1: firstorder; only 1: now destruct l).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	40	40.068566	18050	5696
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40	40.061289	17175	3048
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.024516	3	3	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	40	0.026263	3	3	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_ind	40	40.158646	23343	2458
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	40	1.957210	1867	392	0.0.0.0.0.0.0.0.1.12	synth with cache (only 1: apply min_case_strong; only 1: intros x y H [E| E]; only 1: left; only 1: rewrite <- H; only 1: auto; only 1: right; only 1: rewrite <- H; only 1: auto; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_filter	40	5.261099	1867	475	4.0.10.0.0.0.2.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: solve [ auto ]; only 1: simpl; only 1: case_eq (f a); only 1: intros; only 1: firstorder  (subst; auto); only 1: intros; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.sub_in_bij	40	4.501748	4381	155	0.68	synth with cache (only 1: intro x; only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_cons	40	0.017519	5	2	0.3	synth with cache (only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.subon_bij	40	0.034669	1	1	0	synth with cache (only 1: by move  =>subD [g' fK g'K]; exists g' => x; move /subD ; [ apply : fK  | apply : g'K  ]).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	40	40.042006	11612	2127
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_all	40	0.422434	219	49	4.1.0.1.5	synth with cache (only 1: induction l as [| x l IH]; only 1: now simpl; only 1: simpl; only 1: f_equal; only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.sub_in2	40	0.361520	254	42	5.5.4	synth with cache (only 1: intros; only 1: intro; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_preorder	40	2.332472	2450	225	1.0.0.0.14.9.0	synth with cache (only 1: split; only 1: unfold lt, le; only 1: intros [q| q| ]; only 1: now rewrite compare_refl; only 1: now rewrite compare_refl; only 1: now rewrite compare_refl; only 1: exact PeanoNat.Nat.le_trans).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	40	40.077271	21327	3956
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.sub_in3	40	1.213788	993	116	12.15	synth with cache (only 1: red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.combine_nth	40	40.078328	24185	5162
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.sub_in12	40	0.512933	149	16	3.13	synth with cache (only 1: intros; only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.sub_in21	40	0.013997	1	1	0	synth with cache (only 1: by move  =>/= sub1 sub; apply : sub_in111 ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	40	40.027884	4297	1113
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_O	40	0.006127	1	1	0	synth with cache (only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.in_prod	40	40.063397	16353	4627
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_compat	40	40.035728	6986	3043
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.in_prod_iff	40	40.061189	12578	3090
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	40	40.047929	12671	2088
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40	40.041457	9365	3050
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40	40.038921	9999	2174
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	40	40.052585	13954	2467
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_trans	40	21.827513	11249	2384	1.0.5.0.4.0.0.4.0.0.0	synth with cache (only 1: intros H H'; only 1: apply le_lteq in H'; only 1: destruct H'; only 1: apply le_lteq; only 1: apply le_lteq in H; only 1: destruct H; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: auto with relations; only 1: destruct H; only 1: now left; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_all2	40	6.945254	2029	897	0.5.0.0.0.2.1.0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: destruct l; only 1: simpl; only 1: intros Hnin; only 1: reflexivity; only 1: simpl; only 1: now destruct l; only 1: intros [| ] ?; only 1: simpl in *; only 1: now simpl; only 1: simpl in *; only 1: f_equal; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction'	40	40.096181	34916	3478
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40	40.088364	22835	7349
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	40	40.025676	5496	2164
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40	9.210817	7798	683	2.0.22.17.1	synth with cache (only 1: intros; only 1: set (m := max x y) in *; only 1: apply max_mono; only 1: eauto with *; only 1: eauto with *).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_strorder	40	40.216436	43900	4090
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40	32.257460	18120	3823	0.0.0.16.0.0.3	synth with cache (only 1: intros a b n Ha Hb Hn; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply NZQuot.mul_div_le; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	40	0.047206	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (quot_mul q b) by order; only 1: apply quot_le_mono; only 1: trivial; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.prod_length	40	40.078271	24122	4087
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_app	40	3.481316	1117	453	0.0.0.1.1.0.0.0.0.0.1.5	synth with cache (only 1: induction n as [| n IH]; only 1: intros l1; only 1: intros; only 1: induction l1; only 1: simpl; only 1: auto; only 1: apply IHl1; only 1: intros [| x l] H; only 1: simpl; only 1: now reflexivity; only 1: simpl; only 1: now rewrite IH).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_divide	40	40.068911	17426	4187
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	40	1.669475	1453	138	0.0.19.4	synth with cache (only 1: intros x x' Hxx'; only 1: apply min_mono; only 1: congruence; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	40	40.073912	19477	4230
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.rev_trans	40	40.186839	64167	4113
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.tail_addmul_spec	40	40.093552	8273	2230
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	40	40.047008	12134	3290
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_le_length	40	10.043547	5002	1690	4.1.3.0.1.1.2.0.1.4	synth with cache (only 1: induction n; only 1: destruct l; only 1: now simpl; only 1: simpl; only 1: auto; only 1: destruct l as [| x xs]; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: now auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.can_in_inj	40	40.099733	34327	2118
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	40	40.057440	14305	2687
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.mono2W	40	0.101226	38	4	10	synth with cache (only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_l_nil	40	40.080259	23816	4490
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.neg_le_neg	40	40.092182	31257	2692
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.skipn_O	40	0.034140	4	4	0.0.0.0	synth with cache (only 1: induction l as [| a l IHl]; only 1: now simpl; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.skipn_nil	40	0.508070	344	48	0.0.0.19	synth with cache (only 1: intros; only 1: induction n; only 1: now simpl; only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.skipn_cons	40	0.011576	1	1	0	synth with cache (only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.lor_spec	40	40.318358	35555	2523
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.skipn_all	40	0.044260	7	4	1.0.0.2	synth with cache (only 1: induction l as [| a l IHl]; only 1: now simpl; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40	40.046404	13464	1855
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	40	40.053436	15572	2317
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.skipn_all2	40	2.994945	834	301	1.0.0.0.0.5.0.0.0	synth with cache (only 1: induction n as [| k iHk]; only 1: intro; only 1: now destruct l; only 1: destruct l; only 1: simpl; only 1: now reflexivity; only 1: simpl; only 1: intro H; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.neg_lt_neg	40	40.058909	16866	3451
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.testbit_pos	40	0.011307	1	1	0	synth with cache (only 1: apply Z.testbit_Zpos).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40	40.075781	27476	1437
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_total	40	40.169515	15568	6062
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_lt_trans	40	40.193255	24891	3369
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	40	40.114417	39219	4582
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	40	40.059722	15165	3565
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	40	40.052116	14963	2786
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.canRL_in	40	40.145821	53344	1924
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoLR	40	0.011542	1	1	0	synth with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction'	40	36.281301	21661	3540	0.0.32.0.0.0.1.0.0	synth with cache (only 1: intros L R n; only 1: destruct (lt_trichotomy n z) as [H| [H| H]]; only 1: apply L; only 1: now apply lt_le_incl; only 1: apply L; only 1: now apply eq_le_incl; only 1: apply strong_right_induction; only 1: assumption; only 1: now apply lt_le_incl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	40	40.060837	17766	4024
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_trans	40	40.133701	46649	7078
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	40	40.064718	18758	3438
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_land_spec	40	40.078307	24050	3114
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.testbit_neg	40	16.693524	6757	1618	10.2.0.0.0.3.4	synth with cache (only 1: unfold Z.testbit; only 1: destruct n; only 1: intro Hn; only 1: now destruct a as [| [| | ]| ]; only 1: now destruct 1 || intros _; only 1: trivial; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_succ_l	40	40.182679	15675	3719
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_lt_mono_r	40	0.033080	6	4	0.0.2.0	synth with cache (only 1: unfold lt; only 1: rewrite 2!(add_comm _ p); only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_antisym	40	40.090013	26390	5237
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.inW_bij	40	40.155071	55054	1624
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	40	25.810688	5744	1534	1.0.0.17.1	synth with cache (only 1: intros; only 1: apply mod_small; only 1: apply mod_bound_pos; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.remove_incl	40	40.082498	25971	3249
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	40	40.058708	16328	2694
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.incl_map	40	40.068525	24172	2772
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_length	40	2.052590	687	224	2.0.1.0.0.0.0.0.4	synth with cache (only 1: induction n as [| k iHk]; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct l as [| x xs]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	40	40.069006	19751	2988
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_nil	40	40.079224	23069	6893
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.skipn_length	40	1.661990	789	177	1.0.0.0.0.2.0.0.0.0.3	synth with cache (only 1: induction n; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: split; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.skipn_app	40	1.868877	561	203	0.0.0.5.0.0.0.0.0	synth with cache (only 1: induction n as [| k iHk]; only 1: intros l1 l2; only 1: now simpl; only 1: intros l1 l2; only 1: destruct l1 as [| x xs]; only 1: now rewrite 2!app_nil_l, <- minus_n_O; only 1: rewrite <- app_comm_cons; only 1: simpl; only 1: apply iHk).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	40	40.075940	22722	3490
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_partorder	40	40.062371	18058	3367
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	40	11.766370	2285	561	0.0.1.4.11	synth with cache (only 1: unfold Basics.flip, respectful; only 1: unfold clearbit; only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	40	40.049888	8242	1647
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_le_mono_r	40	0.017035	5	3	0.2.0	synth with cache (only 1: unfold le; only 1: rewrite add_compare_mono_r; only 1: apply iff_refl).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoW	40	31.110901	70479	1902	20.120	synth with cache (only 1: red; only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.equivalence_relP_in	40	40.161025	53004	1462
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	40	40.098312	5344	1766
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_length_le	40	40.070599	20709	4188
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_le_mono_l	40	10.666465	3742	1259	4.0.0.8.3	synth with cache (only 1: revert p q r; only 1: intros a b Ha; only 1: unfold le; only 1: rewrite add_compare_mono_l; only 1: easy || now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_split	40	40.104337	35699	2773
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40	40.040058	10167	2235
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	40	40.043707	11843	2475
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40	40.067666	15064	4149
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40	40.059195	16397	2663
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_compare_mono_l	40	40.057331	13615	4193
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_app_2	40	40.078015	21504	4627
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls_ls'	40	40.193138	29836	3994
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	40	40.115410	38901	2940
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	40	40.034778	8868	3137
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_compare_mono_r	40	40.170454	20925	5796
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_firstn	40	40.113965	38388	5052
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_skipn_comm	40	40.074242	22799	4196
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_l	40	40.070193	24628	1304
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	40	40.115299	39808	2880
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	40	0.020787	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	40	40.046912	12301	1924
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.021048	8	4	0.0.0.4	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.tail_mul_spec	40	40.111960	9973	2798
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Combining.combine_nil	40	0.031314	5	4	0.0.1.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Combining.combine_firstn_l	40	1.032727	219	96	2.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: destruct l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	40	40.059148	16187	2687
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.skipn_firstn_comm	40	40.088963	28700	4609
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.TestOrder.test	40	0.026405	13	3	1	synth with cache (only 1: Nat.order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	40	40.077045	20827	3494
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoRL	40	40.243548	91518	2927
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	1.223284	236	67	0.0.10	synth with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	40	40.047986	13957	2616
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.land_spec	40	40.080088	25990	2932
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Combining.combine_firstn_r	40	4.593764	2558	655	0.0.0.0.0.1.0.0.0.0.7.0	synth with cache (only 1: induction l as [| x l IHl]; only 1: destruct l'; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: intros l'; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: simpl; only 1: specialize IHl with (l' := l'); only 1: rewrite <- IHl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.removelast_firstn_len	40	9.242087	7440	1091	2.0.0.0.14.4.0.2.2	synth with cache (only 1: intro; only 1: induction l as [| ? ? H]; only 1: now simpl; only 1: simpl; only 1: destruct l as [| x xs]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	40	40.041888	10868	1781
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_skipn	40	40.082584	24573	5856
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.id	40	40.062380	23346	925
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_1	40	0.021522	2	2	0.0	synth with cache (only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj	40	40.100135	32347	4895
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_succ_double	40	0.016015	1	1	0	synth with cache (only 1: now destruct x).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_add_diag_r	40	40.067275	15005	6546
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_lt_mono_l	40	40.069466	16737	4925
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_lt_mono_r	40	0.115199	28	15	0.0.0.3	synth with cache (only 1: rewrite 2!(mul_comm _ p); only 1: unfold lt; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	40	40.090621	26387	6321
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Add.Add_in	40	3.728464	1247	361	5.0.5.0.0.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: intuition; only 1: simpl in *; only 1: intros; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_le_mono_l	40	0.026834	7	3	0.4.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_le_mono_r	40	0.023467	7	3	0.4.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Add.Add_length	40	0.350061	87	33	2.0.0.2.1.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: split; only 1: simpl in *; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	40	40.072253	18464	4260
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	40	40.055986	15208	2541
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add	40	40.062112	19307	3091
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homo_mono	40	40.192065	66261	2425
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.mono2W_in	40	0.010599	1	1	0	synth with cache (only 1: by move  =>hf x ax; rewrite hf).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls'_ls''	40	40.109226	40979	3941
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_sym	40	40.142352	47611	9157
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	40	40.074683	23397	3226
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_ldiff_spec	40	40.080585	23395	3051
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_iff	40	40.052909	14633	3379
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_lt_mono	40	40.092892	25916	4120
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_add_r	40	0.018335	2	2	0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: now exists q).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40	40.052961	13352	4829
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	40	7.867499	1272	271	0.14	synth with cache (only 1: unfold clearbit; only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoLR	40	40.233575	87722	1679
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoLR_in	40	0.023684	1	1	0	synth with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK_on //; apply).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	40	40.071883	21523	3778
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40	40.086083	25229	4072
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_skipn_rev	40	40.095504	30567	4087
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_rev	40	40.028768	6548	2006
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.skipn_rev	40	40.028360	5570	2175
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40	40.054136	15369	3003
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40	40.052214	12862	5885
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40	40.041325	9669	3115
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_le_mono	40	40.077254	22132	3635
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoRL	40	40.235035	85927	1593
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.can_mono	40	40.186781	65019	1473
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	40	40.065612	16927	3458
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_compare_mono_l	40	40.064845	17407	4823
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.removelast_firstn	40	40.054455	13868	3382
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	40	32.400562	5972	1102	0.0.0.0.0.17.1	synth with cache (only 1: intros a a' Ha n n' Hn; only 1: unfold setbit; only 1: destruct (le_ge_cases n 0) as [H| H]; only 1: pose proof H as H'; only 1: now rewrite <- 2!shiftr_opp_r, Ha, Hn; only 1: pose proof H as H'; only 1: now rewrite <- 2!shiftr_opp_r, Ha, Hn).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_1_r	40	0.198381	46	19	9	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.pred_sub	40	0.008645	1	1	0	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Above	40	40.126652	44982	2960
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	40	40.053072	12517	3646
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.PosNeg.zero_pos_neg	40	40.087967	31267	3794
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	40	40.068141	19918	4090
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40	40.039848	10256	2058
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_compare_mono_r	40	40.056326	13963	4916
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.lbase	40	40.044480	14339	2271
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	40	40.059551	13830	5741
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	40	0.018814	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.018057	6	4	0.0.0.2	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	40	40.052145	12941	4841
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_lt_mono_l	40	40.076207	16094	5527
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_pos	40	0.029089	4	4	0.0.0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: intros (r, Hr); only 1: exists r; only 1: now apply sub_mask_pos_iff).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_removelast	40	40.051432	13946	4361
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.to_pos_nonpos	40	40.099196	34145	1647
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	40.065366	15706	6672
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40	40.061474	16925	2974
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Combining.combine_firstn	40	40.070506	19414	6513
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_cons_iff	40	0.039900	4	4	0.0.0.0	synth with cache (only 1: split; only 1: inversion_clear 1; only 1: now split; only 1: now constructor).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoW_in	40	40.137058	48339	2313
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	40	40.213470	80940	2306
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	40	40.047738	13021	3138
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.ldiff_spec	40	40.095410	32632	2705
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Add.Add_app	40	40.044560	11638	737
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Add.Add_split	40	40.068794	20008	4358
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40	40.065407	18044	4165
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40	40.026646	6004	2162
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	40	2.999302	1745	340	1.3.4.2.0.9	synth with cache (only 1: case ltb_spec0; only 1: now rewrite leb_nle, <- compare_lt_iff, compare_nge_iff; only 1: symmetry; only 1: symmetry; only 1: apply leb_le; only 1: now rewrite <- compare_le_iff, compare_ngt_iff).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_double	40	40.075803	29684	1064
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40	1.281933	550	81	0.2.18	synth with cache (only 1: case ltb_spec0; only 1: now rewrite <- compare_lt_iff, compare_refl; only 1: now rewrite <- compare_lt_iff, compare_refl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_succ	40	40.104760	42746	1424
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_mul	40	0.063274	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	40	40.045483	7036	1441
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_lt_mono	40	40.090734	25608	4959
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_le_mono	40	40.077397	20857	4070
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Add.Add_inv	40	40.107727	36211	5822
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	40	40.071845	18085	4351
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoRL_in	40	40.128871	42895	1748
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.A'A_left	40	40.106623	42322	4197
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Below	40	40.090789	30972	3689
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40	7.815913	3606	808	1.2.5.0.13	synth with cache (only 1: case leb_spec0; only 1: now rewrite ltb_nlt, <- compare_le_iff, compare_ngt_iff; only 1: destr_bool; only 1: apply ltb_lt; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1	40	40.122038	36964	7109
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	40	40.060998	17702	3224
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_add	40	40.063506	21169	2329
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_not_add_l	40	40.062340	14296	4427
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.gt_lt_iff	40	40.097326	16173	3510
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.lt_gt	40	0.008131	1	1	0	synth with cache (only 1: apply gt_lt_iff).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	40	40.026959	5789	2688
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40	40.034509	8768	1920
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homo_mono_in	40	40.085491	27663	1941
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	40	40.044252	10695	2967
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.gt_lt	40	16.832826	5657	1007	0.2.25	synth with cache (only 1: pose proof (le_sub_l n m) as LE'; only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.ge_le	40	0.028970	3	2	0.1	synth with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.le_ge	40	0.012769	1	1	0	synth with cache (only 1: apply ge_le_iff).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_pred	40	17.301204	14658	489	0.1.0.0.0.0.0.0.0.75	synth with cache (only 1: Z.nzsimpl'; only 1: destruct x; only 1: easy; only 1: simpl; only 1: destruct p; only 1: trivial; only 1: intros H; only 1: reflexivity; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40	40.064074	16536	3934
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Add.incl_Add_inv	40	40.103078	36581	5265
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_Add	40	40.096983	32599	5924
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_compare	40	2.568772	903	200	0.2.3.2.0.0.12	synth with cache (only 1: intros H; only 1: destruct x; only 1: intros; only 1: simpl; only 1: easy; only 1: easy || now destruct y; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_remove	40	40.106035	35173	4826
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_leb	40	0.131435	5	5	0.0.0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: easy; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	40	40.039896	10036	3121
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	40	40.015589	2756	910
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_ltb	40	0.098521	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	40	40.075468	20942	4908
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_eqb	40	0.100662	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.pow_gt_1	40	40.120947	34065	4928
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoLR_in	40	40.145133	50116	1840
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoRL_in	40	40.134267	46249	1706
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	40	40.052927	11653	3760
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_succ_r	40	40.066503	17095	4547
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40	40.033971	8721	1864
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_remove_1	40	40.076423	22929	5677
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	40	40.058589	16151	2727
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Equal_eqlistA	40	40.067403	21806	2448
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	40	40.047257	12226	2946
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40	40.056468	15751	3040
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_pos'	40	40.091152	26218	4829
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction	40	40.124495	49102	3465
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.ge_le_iff	40	14.425825	3577	1125	4.3.2.1.1.4.0.0.0.2.0	synth with cache (only 1: destruct n as [| p], m as [| q]; only 1: split; only 1: intros H; only 1: order; only 1: intros H; only 1: easy; only 1: easy'; only 1: easy'; only 1: revert q; only 1: intro n; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	40	40.086938	27599	4738
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	40	40.193394	72256	8450
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_add	40	40.086879	23776	5477
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_remove_2	40	40.075013	24394	4999
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_sub	40	40.054992	16349	2361
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	40	40.023192	4863	1442
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	40	40.033189	8415	2002
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_rev	40	40.108412	34628	6142
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.can_mono_in	40	40.123210	42252	1491
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	40	40.042328	8700	3623
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_filter	40	40.071015	22149	4123
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.nodup_fixed_point	40	40.068697	21565	4013
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	40	40.049796	11380	4529
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	40	40.014422	2815	1140
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	40	40.078082	23564	3068
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_pow	40	40.055098	16716	1956
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_sqrt	40	0.258296	123	46	2.0.0.0.0.0.6	synth with cache (only 1: destruct x; only 1: simpl; only 1: now rewrite ?Pos.min_1_r, <- ?Pos2Z.inj_min; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite ?Pos.min_1_r, <- ?Pos2Z.inj_min).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_gcd	40	0.089454	18	6	0.0.0.1	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	40	40.066979	19157	4194
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_sub	40	40.077265	19518	4994
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_sub_distr_l	40	40.046860	8326	3030
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.nodup_In	40	40.053400	16295	3410
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40	40.039706	7979	2342
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction	40	40.060445	19922	3288
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Above	40	40.124063	46005	3950
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40	40.097610	27076	3785
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1_iff	40	40.104816	31277	8838
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	40	40.046281	12477	2876
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_pow_pos	40	40.071774	22352	3011
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Zpos_eq	40	0.023414	2	2	0.0	synth with cache (only 1: intros n m H; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.ZL0	40	0.006185	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_sub_distr_r	40	40.058294	13421	3807
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40	40.043626	6168	2376
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40	0.703711	74	13	8	synth with cache (only 1: now Z.nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	40	40.063587	17291	3349
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z_eq_mult	40	0.130020	9	2	4	synth with cache (only 1: now destruct m).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	40	40.028344	6473	1976
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	40	40.033834	6302	1239
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_pred_shiftl_low	40	40.050574	11707	2548
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40	40.033418	7357	1445
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.nodup_incl	40	40.121557	46485	4011
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_nodup	40	40.180074	72179	5098
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	40	40.053584	14075	2065
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	40	40.052680	14767	2872
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	40	40.049039	11462	4409
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.nodup_inv	40	40.060296	18013	3576
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	40	40.040161	10372	1998
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_max	40	40.060837	19116	1971
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_lt_mono_l	40	40.079119	22145	4644
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.NatSeq.cons_seq	40	0.021541	5	3	0.2.0	synth with cache (only 1: simpl; only 1: intros n m; only 1: f_equal).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_xI_xI	40	0.120213	4	4	0.0.0.0	synth with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_xI_xO	40	0.033783	4	4	0.0.0.0	synth with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40	40.065205	16215	4161
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pred_div2_up	40	8.990054	3979	1350	0.3.0.6.0.0.6.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.2	synth with cache (only 1: destruct p; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: now f_equal; only 1: now f_equal; only 1: bitwise; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_compare_mono_l	40	40.085288	25195	3798
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40	40.031609	6811	1550
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40	40.043485	11410	1959
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_count_occ	40	40.055341	15857	4397
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40	40.057371	7098	4001
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	40	40.058814	17079	1721
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_compare_mono_r	40	40.074403	19918	4692
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_MapsTo	40	40.073957	15021	2019
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction'	40	40.090635	31650	4019
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_pred_shiftl_high	40	40.109241	10053	2360
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.iter_swap	40	0.030274	4	3	0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: now apply Pos.iter_swap_gen).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	40	40.039189	10138	3507
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_lt_mono_r	40	40.100802	30045	5059
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_decr	40	40.127433	42545	4127
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	40	2.152379	826	119	14.0.2	synth with cache (only 1: intro n; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_count_occ'	40	40.062900	19528	4835
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_lt	40	1.166263	482	197	0.0.0.0.0.0.5	synth with cache (only 1: unfold lt; only 1: unfold le, sub; only 1: rewrite compare_sub_mask; only 1: destruct sub_mask; only 1: congruence; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_min	40	40.094057	30747	3221
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40	3.843880	540	308	0.0.0.0.5.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: rewrite !rem_eq by trivial; only 1: rewrite quot_mul_cancel_r by order; only 1: now rewrite mul_sub_distr_r, <- !mul_assoc, (mul_comm (a ÷ b) c)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	40	40.062461	17225	2283
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.iter_succ	40	3.091526	1022	302	0.0.0.1.2.7	synth with cache (only 1: intros n H; only 1: intros m IH; only 1: destruct n; only 1: split; only 1: simpl; only 1: apply Pos.iter_succ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	40	40.042819	9585	1493
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	40	40.036222	9397	1474
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_nth_error	40	40.063101	19775	4204
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	40	40.047859	13138	1817
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	40	40.025032	4246	1105
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_nth	40	40.061932	18827	4297
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	40	40.052821	13350	4008
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_incl_length	40	40.069246	17800	3405
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	40	40.050758	12942	3106
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40	40.057462	15945	2647
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Zplus_minus_eq	40	40.108272	40707	3527
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	40	40.059367	16800	2279
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	40	40.046362	10775	1966
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_sub_assoc	40	40.063402	15674	4294
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_add_distr	40	40.055123	11726	4149
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	40	40.049002	10183	4364
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_length_incl	40	40.071836	22336	3936
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction'	40	40.048142	14214	3172
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	40	40.080168	22425	3455
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Empty	40	40.064450	16417	2713
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.clos_trans_transp_permute	40	40.148188	50861	8137
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	40	40.061807	18967	2018
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_sub_distr	40	40.075482	18423	4771
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	40	40.027313	6251	2627
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	40	40.026240	5422	2222
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	40	40.069951	19323	4557
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40	40.043223	12799	1688
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	40	40.060123	17796	1907
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_incl_NoDup	40	40.049708	14387	4515
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	40	40.054597	10481	2186
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.NoDup_map_inv	40	40.091301	31071	5683
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40	40.031794	9045	1858
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	40	40.070957	19652	3905
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_diag	40	30.205289	20415	3778	1.0.2.2.0.1.18.4	synth with cache (only 1: unfold sub; only 1: case sub_mask_spec; only 1: intros; only 1: reflexivity || apply f_equal || exfalso; only 1: intros r H; only 1: rewrite add_comm in H; only 1: elim (add_no_neutral _ _ H); only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	40	40.038921	10587	2231
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_xO_xO	40	40.136244	44459	4229
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_nil	40	0.180319	88	20	0.4.1.2	synth with cache (only 1: split; only 1: firstorder; only 1: solve [ inversion H ]; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.NatSeq.seq_length	40	40.117504	43861	3660
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.max_r	40	0.866561	317	112	0.0.0.2.0.0.0.0.0.0	synth with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: trivial; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_xO_xI	40	40.127151	40727	4643
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40	40.031547	3086	1359
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.iter_swap_gen	40	40.192845	31442	3757
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.iter_add	40	0.060112	8	5	0.0.3.0.0	synth with cache (only 1: induction p using Pos.peano_ind; only 1: intros; only 1: auto; only 1: intros; only 1: now rewrite Pos.add_succ_l, !Pos.iter_succ, IHp).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	40	40.066572	16376	5844
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40	40.040795	12623	1530
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	40	40.037617	8503	1977
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.NatSeq.seq_nth	40	40.052842	14878	3997
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Below	40	40.051480	11406	3370
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction	40	40.082739	27282	4651
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_neg	40	40.070210	18388	4754
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.max_1_r	40	0.059241	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40	40.069995	20710	3809
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.min_1_l	40	0.011504	3	2	0.1	synth with cache (only 1: apply min_l; only 1: apply le_1_l).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.min_1_r	40	0.061978	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold min; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_le	40	40.089198	25383	5981
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40	40.089355	30473	2147
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	40	40.044343	10249	4390
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	40.095412	31188	2148
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.NatSeq.seq_shift	40	40.080582	27263	4461
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.iter_succ_r	40	40.027684	18274	6956	3.3.19	synth with cache (only 1: intro H; only 1: intros m H2 H3; only 1: now rewrite Pos.iter_succ, Pos.iter_swap).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	40	40.064417	19277	2391
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	0.049947	9	4	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_cons	40	11.222066	9774	1188	0.5.0.17.13	synth with cache (only 1: split; only 1: inversion 1 as [H1| ?]; only 1: auto; only 1: auto; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	40	0.067002	9	4	1.1.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.min_r	40	10.362926	4634	1190	3.0.0.0.2.0.0.0.3.0	synth with cache (only 1: unfold le, min; only 1: intros; only 1: case compare_spec; only 1: auto; only 1: intros H'; only 1: rewrite compare_antisym, CompOpp_iff in H; only 1: apply le_nlt in H; only 1: apply le_nlt in H; only 1: now elim H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	40	40.027940	6722	1866
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.040114	5	4	0.1.0.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.NatSeq.in_seq	40	40.127938	51065	2546
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	40	40.039669	9550	2875
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.NatSeq.seq_NoDup	40	40.200069	87828	2902
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_max_distr_l	40	2.941994	982	240	1.0.7.2.0.2	synth with cache (only 1: apply max_monotone; only 1: repeat red; only 1: intros q r; only 1: unfold le; only 1: rewrite add_compare_mono_l; only 1: easy').
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_fold_right	40	4.190040	2573	572	0.0.0.3.7.1.1.1.1.0.1.0	synth with cache (only 1: split; only 1: induction l; only 1: inversion 1; only 1: inversion_clear 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: intuition; only 1: induction l as [| a1 l]; only 1: firstorder; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	40	40.049178	13909	2994
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40	40.066008	18502	3828
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.NatSeq.seq_app	40	40.032751	9232	2370
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40	40.054472	13411	3218
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	40	40.047456	12108	3349
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.NatSeq.seq_S	40	40.074142	22627	4478
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40	40.059316	16591	2361
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_inv	40	0.187268	60	20	0.0.6	synth with cache (only 1: intros x l; only 1: inversion 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_inv_tail	40	0.021445	3	3	0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_elt	40	2.505959	1794	290	0.1.0.3.0.3.0.0.5.1.4	synth with cache (only 1: induction l1; only 1: simpl; only 1: intros; only 1: inversion H; only 1: trivial; only 1: simpl; only 1: intuition; only 1: generalize H; only 1: intros HF; only 1: inversion_clear HF; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.iter_ind	40	16.931962	17598	1813	14.1.11.0.14.0	synth with cache (only 1: intros; only 1: induct ltac:(n); only 1: trivial; only 1: intros; only 1: rewrite Pos.iter_succ; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40	40.063469	18167	2521
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40	40.037224	9708	2380
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.size_nat_monotone	40	40.093889	20489	4936
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	40	40.023529	4270	2084
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.size_gt	40	40.091526	26309	4548
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_min_distr_l	40	0.068718	12	6	0.0.0.4	synth with cache (only 1: apply min_mono; only 1: eauto with *; only 1: intros x x'; only 1: apply add_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_min_distr_r	40	0.031785	6	4	0.0.0.2	synth with cache (only 1: rewrite 3!(add_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	40	40.031187	7182	2011
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_exists	40	40.095494	31793	4886
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction'	40	40.086401	28958	3949
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_forall	40	10.378889	4497	1161	0.0.0.0.0.0.0.3.0.1.0.0.13	synth with cache (only 1: split; only 1: induction 1; only 1: intros a H; only 1: inversion_clear H; only 1: simpl; only 1: intuition; only 1: subst; only 1: firstorder  (subst; auto); only 1: induction l; only 1: firstorder; only 1: simpl; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	40	40.084859	22827	3750
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_MapsTo	40	40.055860	9084	2491
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_max_distr_l	40	4.733435	2047	506	0.0.13.2	synth with cache (only 1: apply max_monotone; only 1: intros H; only 1: intros Hnm Hpq; only 1: now apply mul_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_min_distr_l	40	0.027883	7	3	0.0.4	synth with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	40	40.046830	13196	2188
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_min_distr_r	40	0.035036	5	4	0.0.0.1	synth with cache (only 1: rewrite 3!(mul_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40	40.031026	7707	2508
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.size_le	40	40.073918	20110	2997
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.le_ind	40	7.788414	5149	968	1.1.15.1	synth with cache (only 1: intros Az AS AP n; only 1: apply right_induction; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	40	40.061837	16786	3379
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	40	40.066251	19174	2796
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.iter_op_succ	40	5.083284	2720	493	1.2.14.1.0	synth with cache (only 1: induction p; only 1: simpl; only 1: congruence; only 1: auto; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40	40.068418	19800	3358
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.of_nat_succ	40	2.594651	1845	232	1.6.0.0.2.0.0.0.27	synth with cache (only 1: PeanoNat.Nat.cases n; only 1: simpl; only 1: now f_equal; only 1: intros; only 1: simpl; only 1: induction n; only 1: auto; only 1: f_equal; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40	40.025890	6118	1348
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	40	40.075759	22016	2677
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_nth	40	40.085855	27055	5078
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	40	40.049144	13283	2330
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40	40.090090	12231	3742
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	40	40.018717	3843	1414
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.max_l	40	40.104977	32782	4050
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40	40.046160	13087	2817
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.min_l	40	40.104661	31785	4992
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_app	40	40.085117	28492	3230
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	40	40.027358	2541	1087
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	40	40.043767	12035	2783
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.max_1_l	40	40.145531	50218	4225
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	40	40.044628	11648	2238
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_app	40	28.133639	18635	2941	1.21.1.0.0.0.0.0.2.16.0.0.0.0.0.0	synth with cache (only 1: induction l1; only 1: simpl; only 1: split; only 1: intros HE; only 1: intuition; only 1: intros HE; only 1: intuition; only 1: simpl; only 1: split; only 1: intros HE; only 1: inversion_clear HE; only 1: intuition; only 1: intros HE; only 1: intuition; only 1: inversion H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_fold_right	40	6.481693	4931	1026	0.0.0.0.5.0.0.0.2.1.0.0.0.14	synth with cache (only 1: induction l as [| a l IH]; only 1: simpl; only 1: split; only 1: inversion 1; only 1: inversion_clear H; only 1: split; only 1: inversion 1; only 1: apply Forall_nil; only 1: simpl; only 1: split; only 1: intros HE; only 1: now inversion HE; intuition; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Empty	40	40.125353	21847	3748
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_rev	40	40.043057	10868	3023
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.lt_ind	40	40.132433	47764	5134
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	40	40.038791	8069	4509
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_max_distr	40	40.067650	15801	3485
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	40	2.412698	504	295	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a n; only 1: bitwise; only 1: destruct (le_gt_cases n m); only 1: rewrite lnot_spec_high, ones_spec_high; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial; only 1: rewrite lnot_spec_low, ones_spec_low; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_min_distr	40	40.078337	20567	4393
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40	40.060251	15236	3559
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40	40.035418	6802	4092
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	40	40.072865	19661	2812
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_dec	40	40.065384	22517	2638
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.iter_invariant	40	40.242587	49085	4868
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	40	40.055399	15937	2789
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	40	40.062530	18377	3066
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.map_ext_Forall	40	7.537350	5480	1148	1.0.1.2.13.0.0	synth with cache (only 1: intros f g H l; only 1: apply map_ext_in; only 1: induction l as [| a l IH]; only 1: apply ext_in_map; only 1: simpl; only 1: reflexivity; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	40	40.054252	15746	2985
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.incl_Exists	40	40.161694	61185	4157
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_max_distr_r	40	40.065021	17034	3638
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_nth	40	40.074182	21708	4987
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40	40.061636	16857	3499
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	40	40.059263	15929	3212
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	40	40.048225	11400	2578
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	40	40.057161	12133	2090
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40	40.034345	8509	1969
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.Exists_impl	40	13.315951	7964	1422	2.0.1.9.1.2.2.7	synth with cache (only 1: induction l; only 1: inversion 1; only 1: intros HE; only 1: inversion_clear HE; only 1: constructor; only 1: intuition; only 1: intuition; only 1: now apply Exists_cons_tl).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_rev	40	40.046007	11489	3194
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	40	40.035132	8958	2383
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	40	40.064005	19491	2288
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	40	40.049698	10677	4315
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_max_distr_r	40	40.080146	22537	3192
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	40	40.028195	5416	1746
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_rect	40	40.150914	57799	4992
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_dec	40	40.089820	29871	4130
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.Forall_impl	40	12.451025	12682	2037	3.3.14.12.0.0	synth with cache (only 1: intros P Q H l H0; only 1: induction H0; only 1: constructor; only 1: constructor; only 1: firstorder; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_max	40	40.182259	58933	2431
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40	40.040961	10728	2266
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	40	40.033221	6761	1873
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	40	40.034205	8815	2137
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rlt_wd	40	40.122277	18865	2668
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	40	40.020356	4727	1308
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40	40.045420	11916	2438
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.pred_of_succ_nat	40	40.148011	53218	3926
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rgt_wd	40	27.874855	8331	1229	0.0.0.0.13.0.17	synth with cache (only 1: compute; only 1: intros x1 x2 H1 x3 x4 H2; only 1: split; only 1: rewrite H1; only 1: now rewrite H2; only 1: rewrite H1; only 1: now rewrite H2).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	40	40.032439	6717	3040
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_of_nat	40	40.100195	30129	4962
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	40	40.046923	9996	3583
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	40	0.044470	4	3	1.0.0	synth with cache (only 1: intros a n; only 1: rewrite <- shiftl_opp_r; only 1: now rewrite 2!lt_nge, shiftl_nonneg).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	40	40.055883	15237	3579
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	40	0.173650	12	5	0.0.1	synth with cache (only 1: intros; only 1: rewrite div2_spec; only 1: now rewrite 2!lt_nge, shiftr_nonneg).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	40	40.046883	12669	2613
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.Forall_and_inv	40	22.087395	9615	2249	0.5.8.1.12	synth with cache (only 1: intro H; only 1: intros HF; only 1: intros Hincl; only 1: rewrite !Forall_forall; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	40	40.056574	9045	3111
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	40	40.075643	20303	4187
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	40	40.059921	15830	4569
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40	40.099850	34559	3637
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40	40.051463	12233	3967
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sqrtrem_spec	40	40.067938	19942	3087
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.incl_Forall	40	40.142845	51311	4333
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	40	2.858710	1032	358	0.0.4.5	synth with cache (only 1: intros x y z; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_assoc_reverse).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40	40.054384	12835	4348
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sqrt_spec	40	40.074492	21041	3835
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	40	40.060904	16741	3127
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_min	40	40.048311	12789	4838
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.Exists_or	40	40.091630	31689	3677
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40	40.038623	9181	4504
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40	40.046617	11878	2752
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.divide_add_cancel_l	40	40.110083	34082	4283
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.divide_xO_xI	40	40.118969	38370	5175
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40	40.037794	9163	3018
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	40	40.080362	6909	3460
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.Exists_or_inv	40	40.068690	20471	4717
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	40	40.062783	16153	4114
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40	40.046703	11654	2654
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	40	40.074762	21447	3417
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.Forall_and	40	39.083666	22750	4704	2.2.34	synth with cache (only 1: intros l2 m Hin; only 1: rewrite !Forall_forall; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	40	40.060906	17618	2847
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.divide_xO_xO	40	40.086622	23699	6093
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40	40.049444	11680	2529
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	40	40.069972	13583	3837
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	40	40.064297	16411	3116
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	40	40.054788	13977	3586
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40	40.069211	19368	3766
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.Forall_Exists_neg	40	40.059273	18352	3527
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Forall2.Forall2_refl	40	0.005858	1	1	0	synth with cache (only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	40	40.045456	9135	2054
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.Exists_Forall_neg	40	40.052672	14833	3596
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40	40.038822	8737	3235
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.exists_Forall	40	23.349366	18325	2890	1.0.4.1.0.22.2.0.1	synth with cache (only 1: induction l; only 1: firstorder  auto with datatypes; only 1: firstorder  (subst; auto); only 1: inversion H; only 1: subst; only 1: constructor; only 1: inversion H; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	40	40.048485	13263	2336
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40	40.054711	13784	4299
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.divide_mul_l	40	40.071363	18455	4914
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	40	40.058910	13280	4764
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.neg_Forall_Exists_neg	40	40.050831	8227	1943
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.Forall_Exists_dec	40	40.065629	20494	4770
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.incl_Forall_in_iff	40	40.044621	11295	3171
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Equal	40	40.052393	14151	2665
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40	40.031515	8260	1624
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	40	40.068729	18743	4244
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	40	40.037323	9687	2353
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.lt_wf	40	40.157939	62480	5799
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	40	40.032390	7852	2372
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.divide_mul_r	40	40.087156	24562	5787
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.gt_wf	40	40.084059	25237	5629
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	40	40.032470	7105	3205
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40	40.056593	15573	4097
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.ggcdn_gcdn	40	40.113193	33361	4386
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40	40.041433	10378	2557
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	40	40.040560	9700	3068
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	40	40.076655	22263	3950
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	40	40.045380	10973	4420
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40	40.062083	19088	3037
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.ggcd_gcd	40	40.130943	42489	5317
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	40	40.103925	33514	4328
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	40	40.104908	36311	4946
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pcompare_eq_Gt	40	0.009973	3	1	2	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	40	40.064580	17022	3389
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Forall_image	40	40.115860	36925	4987
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40	40.046496	10861	3872
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Repeat.repeat_length	40	0.047106	6	4	1.0.0.1	synth with cache (only 1: induction n as [| n IH]; only 1: now simpl; only 1: simpl; only 1: eauto with arith).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40	40.168184	54902	2796
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40	40.066133	17655	3506
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Above	40	40.087582	9876	1533
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	40	40.037621	9345	3995
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.concat_nil_Forall	40	40.075368	22916	5286
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	40	40.046549	11741	2856
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.gcd_divide_l	40	40.161545	56508	4537
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.gcd_divide_r	40	40.101106	33429	4325
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	40	40.085570	10693	3970
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40	40.047257	13039	3297
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.in_flat_map_Exists	40	40.078274	25040	4562
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	40	40.052858	13762	2792
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.repeat_to_concat	40	0.892022	378	104	6.0.0.1.8	synth with cache (only 1: induction n as [| n IH]; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	40	40.051002	12753	3493
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	40	40.047421	12890	2811
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.notin_flat_map_Forall	40	40.087142	27829	5000
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	40	40.035717	9804	1744
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.gcdn_greatest	40	40.094244	31446	3307
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	40	40.040126	10204	2680
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40	40.056141	11995	3388
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	40	40.046930	12683	2049
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	40	40.060964	16420	3273
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40	40.067346	18709	3721
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Forall2.Forall2_app_inv_l	40	40.088873	30137	4952
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	40	40.044974	13039	2070
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Forall2.Forall2_app_inv_r	40	40.087393	28357	5088
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	40	40.037495	3143	1520
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Forall2.Forall2_app	40	40.095682	27212	5463
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	40	40.051984	13054	4006
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	40	40.027346	5127	1538
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.gcd_greatest	40	40.074562	21252	4465
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ForallPairs.ForallOrdPairs_In	40	40.052989	14155	3916
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ForallPairs.ForallPairs_ForallOrdPairs	40	40.124124	45234	4064
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ForallPairs.ForallOrdPairs_ForallPairs	40	40.064283	18924	3602
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Below	40	40.063844	13464	1763
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40	40.128403	45221	4029
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Repeat.repeat_cons	40	22.033706	27247	1321	0.14.27.0.51	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	40	40.042515	10942	2605
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40	40.055711	15127	2473
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.ggcd_greatest	40	40.144473	49560	5460
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	40	40.046090	10590	2910
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40	40.041291	9652	2438
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40	40.042180	8914	4677
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	40	40.024118	4634	1690
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	40	40.035751	8023	2983
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Peqb_true_eq	40	40.174580	64842	4499
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	40	40.040797	9972	3390
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	40	40.039275	9042	3000
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	40
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	40	40.031357	7884	930
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	40	40.046050	13391	1652
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pminus_mask_Gt	40	40.100895	34219	4273
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	40	22.018916	10716	2411	0.0.10.2.7.0	synth with cache (only 1: intros a n H; only 1: symmetry; only 1: pose proof (land_lnot_diag_low a n H) as H'; only 1: apply add_sub_eq_l; only 1: rewrite add_nocarry_lxor, lxor_lor by trivial; only 1: now apply lor_lnot_diag_low).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pplus_minus	40	40.103318	37080	4923
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Repeat.repeat_spec	40	40.176154	67769	3878
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	40	40.022383	3536	1993
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	40	40.046359	13994	1438
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	40	40.035315	8711	1801
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	40	40.045013	13117	2200
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	40	40.081238	13910	3787
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	40	40.052956	6952	1516
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Dcompare	40	40.127537	48906	2342
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	40	40.064358	18634	4642
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	40	40.127789	22263	3369
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	40	40.045829	12634	2805
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.list_sum_app	40	40.086157	30883	4093
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.list_max_app	40	40.095482	34411	6634
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40	40.028526	7296	1498
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	40	40.064347	20641	3303
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40	40.050607	13391	3302
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	40	40.060919	15157	4172
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40	40.032335	5721	1397
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	40	40.052925	14350	4552
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	40	40.022783	4087	1325
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40	40.049241	15669	2813
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.list_max_le	40	40.073561	28327	5886
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40	40.074146	24340	2986
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.list_max_lt	40	40.067868	23912	4779
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40	40.057152	16305	2761
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40	40.052950	17455	3195
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	40	40.051154	16763	3611
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	40	40.058220	17296	2555
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40	40.040994	10487	2957
